!function(t){var e={};function n(r){if(e[r])return e[r].exports;var o=e[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)n.d(r,o,function(e){return t[e]}.bind(null,o));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=40)}([function(t,e,n){"use strict";t.exports=n(30)},function(t,e,n){t.exports=n(37)()},function(t,e,n){"use strict";function r(t){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function o(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function i(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function a(t,e,n){return e&&i(t.prototype,e),n&&i(t,n),t}function l(t,e){return!e||"object"!==r(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function u(t){return(u=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function c(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&s(t,e)}function s(t,e){return(s=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}n.d(e,"a",function(){return y});var p=n(0);n(7);var f=function(t){function e(t){var n;return o(this,e),(n=l(this,u(e).call(this,t))).item_list=[],n}return c(e,p.Component),a(e,[{key:"clearItems",value:function(){this.item_list=[],this.forceUpdate()}},{key:"renderItem",value:function(t,e){console.log("RENDERING THING"),this.item_list.push(p.createElement("div",null,p.createElement("a",{href:e}," ",t," "))),this.forceUpdate()}},{key:"render",value:function(){return p.createElement("div",{className:"SearchItems"},this.item_list)}}]),e}(),d=function(t){function e(t){var n;return o(this,e),(n=l(this,u(e).call(this,t))).search_list=p.createRef(),n}return c(e,p.Component),a(e,[{key:"handleChange",value:function(){var t=event.target.value,e=this;fetch("/about",{method:"POST",headers:{Accept:"application/json",Authorization:"Basic","Content-Type":"application/json"},body:JSON.stringify({type:"search",text:t})}).then(function(t){return t.json()}).then(function(t){var n=function(t,e,n,r){var o=[];for(var i in t){var a=t[i].username,l="user/"+t[i].username;o.push([a,l])}for(var i in e){var u=e[i].artist,c="artist/"+e[i].artist;o.push([u,c])}for(var i in n){var s=n[i].song,p="post/"+n[i].artist+"/"+n[i].song;o.push([s,p])}for(var i in r){var f=r[i].album,d="album/"+r[i].artist+"/"+r[i].album;o.push([f,d])}return o.sort(function(t,e){return t[0]>e[0]?1:-1}),o}(t.users,t.artists,t.songs,t.albums);for(var r in e.search_list.current.clearItems(),n)e.search_list.current.renderItem(n[r][0],n[r][1])})}},{key:"render",value:function(){return p.createElement("div",null,p.createElement("p",null,p.createElement("label",null,"Search:"),p.createElement("input",{onChange:this.handleChange.bind(this),type:"text",name:"country",className:"search_bar"})),p.createElement(f,{ref:this.search_list}))}}]),e}(),y=function(t){function e(t){var n;return o(this,e),(n=l(this,u(e).call(this,t))).search_list=p.createRef(),n}return c(e,p.Component),a(e,[{key:"render",value:function(){return p.createElement("div",null,p.createElement("html",{lang:"en"}),p.createElement("head",null,p.createElement("title",null,"My Node Site"),p.createElement("link",{rel:"stylesheet",href:"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css"}),p.createElement("link",{rel:"stylesheet",href:"/css/styles.css"}),p.createElement("link",{rel:"stylesheet",href:"/css/search.css"})),p.createElement("header",null,p.createElement("nav",{className:"navbar navbar-inverse",id:"reacttest",style:{position:"fixed",backgroundColor:"gray",width:"100%",zIndex:"10"}},p.createElement("a",{href:"/",className:"navbar-brand"},"My Site"),p.createElement("div",null,p.createElement("div",{className:"search_list",id:"MyDropdown",style:{position:"absolute",display:"block",overflow:"auto"}},p.createElement(d,null))),p.createElement("ul",{className:"nav navbar-nav"},p.createElement("li",null,p.createElement("a",{href:"/register"},"Register")),p.createElement("li",null,p.createElement("a",{href:"/login"},"Login"))),p.createElement("ul",{className:"nav navbar-nav"},p.createElement("li",null,p.createElement("a",{href:"/"},"Home")),p.createElement("li",null,p.createElement("a",{href:"/about"},"About")),p.createElement("li",null,p.createElement("a",{href:"/contact"},"Contact"))))))}}]),e}()},function(t,e,n){"use strict";t.exports=function(){}},function(t,e,n){"use strict";var r=n(5),o=n.n(r),i=n(6),a=n.n(i),l=n(0),u=n.n(l),c=n(1),s=n.n(c),p=n(10),f=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(t[r]=n[r])}return t};function d(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}var y=function(t){return 0===u.a.Children.count(t)},m=function(t){function e(){var n,r;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);for(var o=arguments.length,i=Array(o),a=0;a<o;a++)i[a]=arguments[a];return n=r=d(this,t.call.apply(t,[this].concat(i))),r.state={match:r.computeMatch(r.props,r.context.router)},d(r,n)}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,t),e.prototype.getChildContext=function(){return{router:f({},this.context.router,{route:{location:this.props.location||this.context.router.route.location,match:this.state.match}})}},e.prototype.computeMatch=function(t,e){var n=t.computedMatch,r=t.location,o=t.path,i=t.strict,l=t.exact,u=t.sensitive;if(n)return n;a()(e,"You should not use <Route> or withRouter() outside a <Router>");var c=e.route,s=(r||c.location).pathname;return Object(p.a)(s,{path:o,strict:i,exact:l,sensitive:u},c.match)},e.prototype.componentWillMount=function(){o()(!(this.props.component&&this.props.render),"You should not use <Route component> and <Route render> in the same route; <Route render> will be ignored"),o()(!(this.props.component&&this.props.children&&!y(this.props.children)),"You should not use <Route component> and <Route children> in the same route; <Route children> will be ignored"),o()(!(this.props.render&&this.props.children&&!y(this.props.children)),"You should not use <Route render> and <Route children> in the same route; <Route children> will be ignored")},e.prototype.componentWillReceiveProps=function(t,e){o()(!(t.location&&!this.props.location),'<Route> elements should not change from uncontrolled to controlled (or vice versa). You initially used no "location" prop and then provided one on a subsequent render.'),o()(!(!t.location&&this.props.location),'<Route> elements should not change from controlled to uncontrolled (or vice versa). You provided a "location" prop initially but omitted it on a subsequent render.'),this.setState({match:this.computeMatch(t,e.router)})},e.prototype.render=function(){var t=this.state.match,e=this.props,n=e.children,r=e.component,o=e.render,i=this.context.router,a=i.history,l=i.route,c=i.staticContext,s={match:t,location:this.props.location||l.location,history:a,staticContext:c};return r?t?u.a.createElement(r,s):null:o?t?o(s):null:"function"==typeof n?n(s):n&&!y(n)?u.a.Children.only(n):null},e}(u.a.Component);m.propTypes={computedMatch:s.a.object,path:s.a.string,exact:s.a.bool,strict:s.a.bool,sensitive:s.a.bool,component:s.a.func,render:s.a.func,children:s.a.oneOfType([s.a.func,s.a.node]),location:s.a.object},m.contextTypes={router:s.a.shape({history:s.a.object.isRequired,route:s.a.object.isRequired,staticContext:s.a.object})},m.childContextTypes={router:s.a.object.isRequired};var v=m;e.a=v},function(t,e,n){"use strict";var r=function(){};t.exports=r},function(t,e,n){"use strict";t.exports=function(t,e,n,r,o,i,a,l){if(!t){var u;if(void 0===e)u=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var c=[n,r,o,i,a,l],s=0;(u=new Error(e.replace(/%s/g,function(){return c[s++]}))).name="Invariant Violation"}throw u.framesToPop=1,u}}},function(t,e,n){"use strict";!function t(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(t)}catch(t){console.error(t)}}(),t.exports=n(31)},function(t,e,n){"use strict";n.d(e,"a",function(){return y});var r=n(0),o=n.n(r);function i(t){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function a(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function l(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function u(t,e,n){return e&&l(t.prototype,e),n&&l(t,n),t}function c(t,e){return!e||"object"!==i(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function s(t){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function p(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&f(t,e)}function f(t,e){return(f=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var d=function(t){function e(t){return a(this,e),c(this,s(e).call(this,t))}return p(e,o.a.Component),u(e,[{key:"renderiframe",value:function(t){return{__html:t}}},{key:"render",value:function(){var t=new Date(this.props.song.timestamp),e=o.a.createElement("h1",{style:{position:"relative"}},o.a.createElement("a",{href:"user/"+this.props.song.username+"/"+this.props.song.id}," ",this.props.song.title)),n=this.props.song.username,r="/user/"+this.props.song.username,i=o.a.createElement("h2",{style:{position:"relative"}},this.props.song.content),a=" by",l=o.a.createElement("div",null,o.a.createElement("div",{className:"likes",id:this.props.song.post_id},"Likes: ",this.props.song.likes-this.props.song.dislikes),o.a.createElement("button",{type:"button",className:"like",id:this.props.song.post_id},"Like"),o.a.createElement("button",{type:"button",className:"unlike",id:this.props.song.post_id},"Hate")),u=o.a.createElement("div",{className:"comment_section",id:this.props.song.post_id});null!=this.props.song.username&&(e="",l=o.a.createElement("div",null,o.a.createElement("div",{className:"likes",id:this.props.song.id},"Likes: ",this.props.song.likes-this.props.song.dislikes),o.a.createElement("button",{type:"button",className:"like",id:this.props.song.id},"Like"),o.a.createElement("button",{type:"button",className:"unlike",id:this.props.song.id},"Hate")),u=o.a.createElement("div",{className:"comment_section",id:this.props.song.id}),a=" posted by");var c="/post/"+this.props.song.artist+"/"+this.props.song.song,s=this.props.song.song;return"NO_SONG_ALBUM_ONLY"==this.props.song.song&&(c="/album/"+this.props.song.song.artist+"/"+this.props.song.song.album,s=this.props.song.album),o.a.createElement("div",{style:{position:"relative",height:"480px",borderBottom:"4px solid gray",padding:"5px"}},o.a.createElement("div",{style:{display:"flex",flexDirection:"row"}},o.a.createElement("span",{style:{width:"600px"}},e,o.a.createElement("div",{style:{display:"flex",flexDirection:"row"}},o.a.createElement("h3",null," ",o.a.createElement("a",{href:c}," ",s),a,o.a.createElement("a",{href:r}," ",n," ")," at"," "+t.getMonth()+"/"+t.getDate()+"/"+t.getFullYear())),i),o.a.createElement("span",{dangerouslySetInnerHTML:this.renderiframe(this.props.song.embedded_content)})),o.a.createElement("div",{className:"like_section"},l),o.a.createElement("div",{className:"comment_section",id:this.props.song.id},u,"Comments: 0"))}}]),e}(),y=function(t){function e(t){var n;return a(this,e),n=c(this,s(e).call(this,t)),console.log("POSTINFO"),n.posts=[],n}return p(e,o.a.Component),u(e,[{key:"makePost",value:function(t){this.posts.push(o.a.createElement(d,{key:t.id,song:t}))}},{key:"addSongs",value:function(){var t=!0,e=!1,n=void 0;try{for(var r,o=this.props.songs[Symbol.iterator]();!(t=(r=o.next()).done);t=!0){var i=r.value;this.makePost(i)}}catch(t){e=!0,n=t}finally{try{t||null==o.return||o.return()}finally{if(e)throw n}}}},{key:"render",value:function(){return this.addSongs(),o.a.createElement("div",{style:{left:"15%",top:"100px",position:"relative",width:"100%"}},this.posts)}}]),e}()},function(t,e,n){"use strict";n.d(e,"a",function(){return y});var r=n(0),o=n.n(r);function i(t){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function a(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function l(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function u(t,e,n){return e&&l(t.prototype,e),n&&l(t,n),t}function c(t,e){return!e||"object"!==i(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function s(t){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function p(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&f(t,e)}function f(t,e){return(f=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var d=function(t){function e(t){var n;if(a(this,e),(n=c(this,s(e).call(this,t))).child_comments=[],console.log("PROPS"),console.log(t),n.id=n.props.data.comment_id,n.replies_button=void 0,t.data.replies>0){var r=String(5*(t.data.comment_level+1))+"%";n.replies_button=o.a.createElement("button",{className:"show_replies",style:{position:"relative",left:r},id:t.data.comment_id}," show ",t.data.replies," replies ")}return n}return p(e,o.a.Component),u(e,[{key:"addChild",value:function(t){this.child_comments.push(o.a.createElement(e,{key:t.data.comment_id,data:t.data}))}},{key:"render",value:function(){var t="comment_level_"+String(this.props.data.comment_level),e=String(this.props.data.comment_id),n=String(5*this.props.data.comment_level)+"%",r=this.props.data.user_id,i=new Date(this.props.data.timestamp),a=i.getMinutes(),l=this.props.data.upvotes-this.props.data.downvotes;1==String(a).length&&(a="0"+String(a));var u=i.getMonth()+"/"+i.getDate()+"/"+i.getFullYear()+" at "+i.getHours()+":"+a,c=this.props.data.text;return o.a.createElement("div",null,o.a.createElement("div",{className:t,id:e,replies:0,style:{position:"relative",left:n}},o.a.createElement("div",{style:{position:"relative",float:"left",height:"60px",width:"5%"}},o.a.createElement("button",{style:{top:"0px",position:"absolute",height:"30px"},type:"button",className:"upvote",id:e},"^"),o.a.createElement("button",{style:{bottom:"0px",position:"absolute",height:"30px"},type:"button",className:"downvote",id:e},"v")),o.a.createElement("div",{style:{left:"5%",position:"relative"}},o.a.createElement("div",{style:{borderStyle:"solid",borderBottomStyle:"none",width:"75%",height:"35px"},className:"comment_header",id:e},r+" "+u+" "+l,o.a.createElement("button",{type:"button",className:"begin_comment",id:e},"Comment")),o.a.createElement("div",{style:{borderStyle:"solid",borderTopStyle:"none",width:"75%"},className:"comment_body",id:e}," ",c," "))),this.props.child_comments,this.replies_button)}}]),e}(),y=function(t){function e(t){var n;return a(this,e),(n=c(this,s(e).call(this,t))).comments=[],n}return p(e,o.a.Component),u(e,[{key:"generateComments",value:function(t){var e=[],n=!0,r=!1,i=void 0;try{for(var a,l=t[Symbol.iterator]();!(n=(a=l.next()).done);n=!0){if((E=a.value).comment_level+1>e.length){for(var u=e.length,c=0;c<E.comment_level+1-u;c++)e.push([]);e[E.comment_level].push(E)}else e[E.comment_level].push(E)}}catch(t){r=!0,i=t}finally{try{n||null==l.return||l.return()}finally{if(r)throw i}}for(var s={},p=[],f=e.length-1;f>=0;f--){var y=!0,m=!1,v=void 0;try{for(var h,w=e[f][Symbol.iterator]();!(y=(h=w.next()).done);y=!0){var E=h.value;if(console.log("COMMENT REPLIES"),console.log(E.replies),null!=s[E.comment_id]){var b=!0,_=!1,T=void 0;try{for(var S,C=s[E.comment_id][Symbol.iterator]();!(b=(S=C.next()).done);b=!0){var x=S.value;E.replies=E.replies-x.props.data.replies-1}}catch(t){_=!0,T=t}finally{try{b||null==C.return||C.return()}finally{if(_)throw T}}}console.log(E.text),console.log(E.replies),p.push(o.a.createElement(d,{data:E,child_comments:s[E.comment_id]}))}}catch(t){m=!0,v=t}finally{try{y||null==w.return||w.return()}finally{if(m)throw v}}if(0==f)break;for(var O=0;O<p.length;O++){var P=(E=p[O]).props.data.parent_comment_id;null==s[P]?s[P]=[E]:s[P].push(E)}p=[]}this.comments=p}},{key:"render",value:function(){return this.generateComments(this.props.data.comments),o.a.createElement("div",null,this.comments)}}]),e}()},function(t,e,n){"use strict";var r=n(26),o=n.n(r),i={},a=0;e.a=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments[2];"string"==typeof e&&(e={path:e});var r=e,l=r.path,u=r.exact,c=void 0!==u&&u,s=r.strict,p=void 0!==s&&s,f=r.sensitive;if(null==l)return n;var d=function(t,e){var n=""+e.end+e.strict+e.sensitive,r=i[n]||(i[n]={});if(r[t])return r[t];var l=[],u={re:o()(t,l,e),keys:l};return a<1e4&&(r[t]=u,a++),u}(l,{end:c,strict:p,sensitive:void 0!==f&&f}),y=d.re,m=d.keys,v=y.exec(t);if(!v)return null;var h=v[0],w=v.slice(1),E=t===h;return c&&!E?null:{path:l,url:"/"===l&&""===h?"/":h,isExact:E,params:m.reduce(function(t,e,n){return t[e.name]=w[n],t},{})}}},function(t,e,n){"use strict";n.d(e,"a",function(){return h});var r=n(0),o=n.n(r),i=n(2),a=n(9);function l(t){return(l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function u(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function c(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function s(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function p(t,e,n){return e&&s(t.prototype,e),n&&s(t,n),t}function f(t,e){return!e||"object"!==l(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function d(t){return(d=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function y(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&m(t,e)}function m(t,e){return(m=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var v=function(t){function e(t){var n;return c(this,e),n=f(this,d(e).call(this,t)),console.log("GLOBALPOSTCONTENT"),console.log(t),n.album_songs=[],n}return y(e,o.a.Component),p(e,[{key:"renderiframe",value:function(t){return{__html:t}}},{key:"generateAlbumSongs",value:function(){for(var t=Object.keys(this.props.data.data),e=0;e<t.length;e++){var n=t[e];console.log(n),this.album_songs.push(o.a.createElement("div",{style:{padding:"0px"}}," ",n+"."," ",o.a.createElement("a",{href:"test"}," ",this.props.data.data[n]," ")))}}},{key:"render",value:function(){var t,e=o.a.createElement("div",null," ",this.props.data.song+" by "," ",o.a.createElement("a",{href:"/artist/"+this.props.data.artist}," ",this.props.data.artist," ")," ");return console.log(e),1==this.props.data.type&&(e="",this.generateAlbumSongs()),o.a.createElement("div",null,o.a.createElement("div",{style:{position:"relative",top:"100px",paddingBottom:"100px",height:"auto",minHeight:"550px"}},o.a.createElement("div",{style:{position:"relative",float:"left",top:"0px",paddingRight:"20px"},dangerouslySetInnerHTML:this.renderiframe(this.props.data.embedded_content)}),o.a.createElement("div",{style:{left:"10%",top:"20%"}},o.a.createElement("div",null,e,o.a.createElement("div",null," Album: ",this.props.data.album," "),o.a.createElement("div",null," Released on: ",this.props.data.release_date," ")))),o.a.createElement("br",null),o.a.createElement("br",null),o.a.createElement("br",null),o.a.createElement("br",null),o.a.createElement("meta",{className:"comment_offset",content:"0"}),o.a.createElement("button",(u(t={type:"button",className:"new_comment",id:"-1"},"className","level_-1"),u(t,"style",{position:"relative"}),t),"Comment"))}}]),e}(),h=function(t){function e(t){return c(this,e),console.log("HEYEBUD"),console.log(t),f(this,d(e).call(this,t))}return y(e,o.a.Component),p(e,[{key:"render",value:function(){return o.a.createElement("div",null,o.a.createElement(i.a,null),o.a.createElement(v,{data:this.props.data.data}),o.a.createElement(a.a,{data:this.props.data}))}}]),e}()},function(t,e,n){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var r=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable;t.exports=function(){try{if(!Object.assign)return!1;var t=new String("abc");if(t[5]="de","5"===Object.getOwnPropertyNames(t)[0])return!1;for(var e={},n=0;n<10;n++)e["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(e).map(function(t){return e[t]}).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach(function(t){r[t]=t}),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(t){return!1}}()?Object.assign:function(t,e){for(var n,a,l=function(t){if(null==t)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(t)}(t),u=1;u<arguments.length;u++){for(var c in n=Object(arguments[u]))o.call(n,c)&&(l[c]=n[c]);if(r){a=r(n);for(var s=0;s<a.length;s++)i.call(n,a[s])&&(l[a[s]]=n[a[s]])}}return l}},function(t,e,n){"use strict";(function(t){n.d(e,"a",function(){return x});var r=n(0),o=n.n(r),i=n(41),a=n(4),l=(n(36),n(14)),u=n(15),c=n(16),s=n(17),p=n(18),f=n(11),d=n(19),y=n(20),m=n(21),v=n(22),h=n(23),w=n(24),E=n(25);function b(t){return(b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function _(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function T(t,e){return!e||"object"!==b(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function S(t){return(S=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function C(t,e){return(C=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var x=function(t){function e(t){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),n=T(this,S(e).call(this,t)),console.log("THESE PROPS"),console.log(t),n}var n,r,b;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&C(t,e)}(e,o.a.Component),n=e,(r=[{key:"handleClick",value:function(t){console.log("CLICKED")}},{key:"render",value:function(){var t=this;return o.a.createElement("div",{id:"root"},"Your react Node app is set up!",o.a.createElement("button",{onClick:this.handleClick}," CLICK ME"),o.a.createElement(i.a,null,o.a.createElement(a.a,{exact:!0,path:"/",render:function(){return o.a.createElement(l.a,{data:t.props.data})}}),o.a.createElement(a.a,{exact:!0,path:"/user/:user/:post_id",render:function(){return o.a.createElement(p.a,{data:t.props.data})}}),o.a.createElement(a.a,{exact:!0,path:"/user/:user",render:function(){return o.a.createElement(s.a,{data:t.props.data})}}),o.a.createElement(a.a,{exact:!0,path:"/followers/:user",render:function(){return o.a.createElement(w.a,{data:t.props.data})}}),o.a.createElement(a.a,{exact:!0,path:"/following/:user",render:function(){return o.a.createElement(E.a,{data:t.props.data})}}),o.a.createElement(a.a,{exact:!0,path:"/login",render:function(){return o.a.createElement(v.a,{data:t.props.data})}}),o.a.createElement(a.a,{exact:!0,path:"/register",render:function(){return o.a.createElement(h.a,{data:t.props.data})}}),o.a.createElement(a.a,{exact:!0,path:"/post/:artist/:song",render:function(){return o.a.createElement(f.a,{data:t.props.data})}}),o.a.createElement(a.a,{exact:!0,path:"/album/:artist/:album",render:function(){return o.a.createElement(f.a,{data:t.props.data})}}),o.a.createElement(a.a,{exact:!0,path:"/artist/:artist",render:function(){return o.a.createElement(d.a,{data:t.props.data})}}),o.a.createElement(a.a,{exact:!0,path:"/artist/:artist/songs",render:function(){return o.a.createElement(y.a,{data:t.props.data})}}),o.a.createElement(a.a,{exact:!0,path:"/artist/:artist/albums",render:function(){return o.a.createElement(m.a,{data:t.props.data})}}),o.a.createElement(a.a,{exact:!0,path:"/contact",component:u.a}),o.a.createElement(a.a,{exact:!0,path:"/about",component:c.a})),o.a.createElement("script",{type:"text/javascript",src:"/app/public/bundle.js"}))}}])&&_(n.prototype,r),b&&_(n,b),e}();t.exports=x}).call(this,n(35)(t))},function(t,e,n){"use strict";n.d(e,"a",function(){return v});var r=n(0),o=n.n(r),i=n(2),a=n(8);function l(t){return(l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function u(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function c(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function s(t,e,n){return e&&c(t.prototype,e),n&&c(t,n),t}function p(t,e){return!e||"object"!==l(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function f(t){return(f=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function d(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&y(t,e)}function y(t,e){return(y=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var m=function(t){function e(t){return u(this,e),p(this,f(e).call(this,t))}return d(e,o.a.Component),s(e,[{key:"render",value:function(){return o.a.createElement("div",{id:"post",style:{left:"15%",top:"120px",position:"relative"},width:"100%",autocomplete:"off"},"Song/Playlist:",o.a.createElement("br",null),o.a.createElement("input",{id:"song",type:"text",name:"song",style:{width:"80%"}}),o.a.createElement("br",null),"Title:",o.a.createElement("br",null),o.a.createElement("input",{id:"title",type:"text",name:"title",style:{width:"80%"}}),o.a.createElement("textarea",{id:"content",name:"content",rows:"10",cols:"90",style:{width:"80%",height:"50px"}}),o.a.createElement("br",null),o.a.createElement("button",{id:"post_button",type:"button"},"Post"),o.a.createElement("br",null),o.a.createElement("br",null),o.a.createElement("div",{id:"showsong",style:{position:"absolute",top:"0",left:"40%"}}),o.a.createElement("meta",{className:"post_number",content:"0"}),o.a.createElement("meta",{className:"non_priority_post_number",content:"0"}),o.a.createElement("meta",{className:"global_post_number",content:"0"}),o.a.createElement("meta",{className:"non_priority_global_post_number",content:"0"}))}}]),e}(),v=function(t){function e(t){return u(this,e),p(this,f(e).call(this,t))}return d(e,o.a.Component),s(e,[{key:"render",value:function(){return o.a.createElement("div",null,o.a.createElement(i.a,null),o.a.createElement(m,null),o.a.createElement(a.a,{songs:this.props.data.songs}))}}]),e}()},function(t,e,n){"use strict";n.d(e,"a",function(){return s});var r=n(0),o=n.n(r);function i(t){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function a(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function l(t,e){return!e||"object"!==i(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function u(t){return(u=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function c(t,e){return(c=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var s=function(t){function e(t){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),n=l(this,u(e).call(this,t)),console.log("Contact RENDERED"),n}var n,r,i;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&c(t,e)}(e,o.a.Component),n=e,(r=[{key:"render",value:function(){return o.a.createElement("div",null," Contact Page! ")}}])&&a(n.prototype,r),i&&a(n,i),e}()},function(t,e,n){"use strict";n.d(e,"a",function(){return p});var r=n(0),o=n.n(r),i=n(2);function a(t){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function l(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function u(t,e){return!e||"object"!==a(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function c(t){return(c=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function s(t,e){return(s=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var p=function(t){function e(t){return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),u(this,c(e).call(this,t))}var n,r,a;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&s(t,e)}(e,o.a.Component),n=e,(r=[{key:"componentDidMount",value:function(){}},{key:"render",value:function(){return o.a.createElement("div",null,o.a.createElement(i.a,null),o.a.createElement("section",{class:"hero"},o.a.createElement("div",{class:"hero-content"},o.a.createElement("h2",null,"All about us"))),o.a.createElement("div",{class:"jumbotron text-center"},o.a.createElement("p",null,"1. Click register, enter name, password. Login using that info "),o.a.createElement("p",null,"2. To submit content. Get a spotify embed link. Go to a song or album, click ...->share->copy embed code. past in the song/playlist section. Enter in a title and text"),o.a.createElement("p",null,"3. You can search for a song, album, user, or artist. This will bring you to a global post about the song or album. This should have all data from posts about that topic"),o.a.createElement("a",{href:"/contact",class:"btn btn-lg btn-primary"},"Drop us a link")))}}])&&l(n.prototype,r),a&&l(n,a),e}()},function(t,e,n){"use strict";n.d(e,"a",function(){return w});var r=n(0),o=n.n(r),i=n(2),a=n(8);function l(t){return(l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function u(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function c(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function s(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function p(t,e,n){return e&&s(t.prototype,e),n&&s(t,n),t}function f(t,e){return!e||"object"!==l(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function d(t){return(d=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function y(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&m(t,e)}function m(t,e){return(m=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var v=function(t){function e(t){var n;return c(this,e),n=f(this,d(e).call(this,t)),console.log("USER DATA"),console.log(t),n}return y(e,o.a.Component),p(e,[{key:"render",value:function(){var t;return o.a.createElement("div",{className:"user_info",style:(t={position:"relative",left:"15%",top:"100px"},u(t,"position","relative"),u(t,"width","100%"),t)},o.a.createElement("h1",null,this.props.user.username),o.a.createElement("h2",null,this.props.user.description),o.a.createElement("h2",null,this.props.user.upvotes-this.props.user.downvotes))}}]),e}(),h=function(t){function e(t){return c(this,e),f(this,d(e).call(this,t))}return y(e,o.a.Component),p(e,[{key:"render",value:function(){return o.a.createElement("div",{className:"user_body",style:{left:"15%",top:"100px",position:"relative",width:"100%"}},o.a.createElement("div",null,o.a.createElement("p",null," ",o.a.createElement("a",{href:"/followers/"+this.props.user.username}," Followers "),": ",this.props.follows.length," "),o.a.createElement("p",null," ",o.a.createElement("a",{href:"/following/"+this.props.user.username}," Following "),": ",this.props.followees.length," ")),o.a.createElement("button",{className:"follow_button",id:"follow_button",type:"button"},"Follow"),o.a.createElement("div",{className:"follow_icon"},"Not Following"))}}]),e}(),w=function(t){function e(t){var n;return c(this,e),n=f(this,d(e).call(this,t)),console.log(t),n}return y(e,o.a.Component),p(e,[{key:"render",value:function(){return o.a.createElement("div",null,o.a.createElement(i.a,null),o.a.createElement(v,{user:this.props.data.user}),o.a.createElement(h,{user:this.props.data.user,follows:this.props.data.follows,followees:this.props.data.followees}),o.a.createElement(a.a,{songs:this.props.data.songs}),o.a.createElement("div",{className:"user_body",style:{left:"15%",top:"100px",position:"relative",width:"100%"}}))}}]),e}()},function(t,e,n){"use strict";n.d(e,"a",function(){return h});var r=n(0),o=n.n(r),i=n(2),a=n(9);function l(t){return(l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function u(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function c(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function s(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function p(t,e,n){return e&&s(t.prototype,e),n&&s(t,n),t}function f(t,e){return!e||"object"!==l(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function d(t){return(d=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function y(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&m(t,e)}function m(t,e){return(m=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var v=function(t){function e(t){return c(this,e),f(this,d(e).call(this,t))}return y(e,o.a.Component),p(e,[{key:"renderiframe",value:function(t){return{__html:t}}},{key:"render",value:function(){var t;return o.a.createElement("div",null,o.a.createElement("div",{style:{position:"relative",top:"100px",paddingBottom:"100px",height:"auto",minHeight:"550px"}},o.a.createElement("div",{style:{position:"relative",float:"left",top:"0px",paddingRight:"20px"},dangerouslySetInnerHTML:this.renderiframe(this.props.data.embedded_content)}),o.a.createElement("div",{style:{left:"10%",top:"20%"}},this.props.data.content)),o.a.createElement("br",null),o.a.createElement("br",null),o.a.createElement("br",null),o.a.createElement("br",null),o.a.createElement("meta",{className:"comment_offset",content:"0"}),o.a.createElement("button",(u(t={type:"button",className:"new_comment",id:"-1"},"className","level_-1"),u(t,"style",{position:"relative"}),t),"Comment"))}}]),e}(),h=function(t){function e(t){return c(this,e),f(this,d(e).call(this,t))}return y(e,o.a.Component),p(e,[{key:"render",value:function(){return o.a.createElement("div",null,o.a.createElement(i.a,null),o.a.createElement(v,{data:this.props.data.user_post}),o.a.createElement(a.a,{data:this.props.data}))}}]),e}()},function(t,e,n){"use strict";n.d(e,"a",function(){return h});var r=n(0),o=n.n(r),i=n(2);function a(t){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function l(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function u(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function c(t,e,n){return e&&u(t.prototype,e),n&&u(t,n),t}function s(t,e){return!e||"object"!==a(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function p(t){return(p=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function f(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&d(t,e)}function d(t,e){return(d=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var y=function(t){function e(t){return l(this,e),s(this,p(e).call(this,t))}return f(e,o.a.Component),c(e,[{key:"render",value:function(){return o.a.createElement("div",null,"x",o.a.createElement("button",{className:"follow_button",id:"follow_button",type:"button"},"Follow"),o.a.createElement("div",{className:"follow_icon"},"Not Following"))}}]),e}(),m=function(t){function e(t){var n;return l(this,e),(n=s(this,p(e).call(this,t))).albums=[],n}return f(e,o.a.Component),c(e,[{key:"renderiframe",value:function(t){return{__html:t}}},{key:"generateAlbums",value:function(){var t=!0,e=!1,n=void 0;try{for(var r,i=this.props.data[Symbol.iterator]();!(t=(r=i.next()).done);t=!0){var a=r.value;this.albums.push(o.a.createElement("div",{style:{display:"flex",flexDirection:"column",padding:"10px"}},a.album,o.a.createElement("div",{dangerouslySetInnerHTML:this.renderiframe(a.embedded_content)})))}}catch(t){e=!0,n=t}finally{try{t||null==i.return||i.return()}finally{if(e)throw n}}}},{key:"render",value:function(){return this.generateAlbums(),o.a.createElement("div",null,o.a.createElement("h1",null," ",o.a.createElement("a",{href:"/artist/"+this.props.artist+"/albums"}," Albums ")," "),o.a.createElement("div",{className:"album_display",style:{display:"flex",flexDirection:"row"}},this.albums))}}]),e}(),v=function(t){function e(t){var n;return l(this,e),(n=s(this,p(e).call(this,t))).songs=[],n}return f(e,o.a.Component),c(e,[{key:"renderiframe",value:function(t){return{__html:t}}},{key:"generateSongs",value:function(){var t=!0,e=!1,n=void 0;try{for(var r,i=this.props.data[Symbol.iterator]();!(t=(r=i.next()).done);t=!0){var a=r.value;this.songs.push(o.a.createElement("div",{style:{display:"flex",flexDirection:"column",padding:"10px"}},a.song,o.a.createElement("div",{dangerouslySetInnerHTML:this.renderiframe(a.embedded_content)})))}}catch(t){e=!0,n=t}finally{try{t||null==i.return||i.return()}finally{if(e)throw n}}}},{key:"render",value:function(){return this.generateSongs(),o.a.createElement("div",null,o.a.createElement("h1",null," ",o.a.createElement("a",{href:"/artist/"+this.props.artist+"/songs"}," Songs ")," "),o.a.createElement("div",{className:"song_display",style:{display:"flex",flexDirection:"row"}},this.songs))}}]),e}(),h=function(t){function e(t){var n;return l(this,e),n=s(this,p(e).call(this,t)),console.log("ARTIST PAGE"),console.log(t),n}return f(e,o.a.Component),c(e,[{key:"render",value:function(){return o.a.createElement("div",null,o.a.createElement(i.a,null),o.a.createElement("div",{className:"info_container",style:{left:"15%",top:"200px",position:"relative",width:"100%"}},o.a.createElement(y,null),o.a.createElement(m,{data:this.props.data.album_data,artist:this.props.data.artist}),o.a.createElement(v,{data:this.props.data.song_data,artist:this.props.data.artist})))}}]),e}()},function(t,e,n){"use strict";n.d(e,"a",function(){return p});var r=n(0),o=n.n(r),i=n(2);function a(t){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function l(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function u(t,e){return!e||"object"!==a(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function c(t){return(c=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function s(t,e){return(s=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var p=function(t){function e(t){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(n=u(this,c(e).call(this,t))).songs=[],n}var n,r,a;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&s(t,e)}(e,o.a.Component),n=e,(r=[{key:"generateSongs",value:function(){var t=!0,e=!1,n=void 0;try{for(var r,i=this.props.data.song_data[Symbol.iterator]();!(t=(r=i.next()).done);t=!0){var a=r.value;this.songs.push(o.a.createElement("div",{style:{display:"flex",flexDirection:"column"}},o.a.createElement("h2",null,"  ",o.a.createElement("a",{href:"/post/"+a.artist+"/"+a.song},a.song," "))))}}catch(t){e=!0,n=t}finally{try{t||null==i.return||i.return()}finally{if(e)throw n}}}},{key:"render",value:function(){return this.generateSongs(),o.a.createElement("div",null,o.a.createElement(i.a,null),o.a.createElement("div",{className:"songs_display",style:{left:"15%",top:"100px",position:"relative"}},o.a.createElement("h1",null," Songs "),this.songs))}}])&&l(n.prototype,r),a&&l(n,a),e}()},function(t,e,n){"use strict";n.d(e,"a",function(){return p});var r=n(0),o=n.n(r),i=n(2);function a(t){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function l(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function u(t,e){return!e||"object"!==a(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function c(t){return(c=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function s(t,e){return(s=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var p=function(t){function e(t){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),n=u(this,c(e).call(this,t)),console.log("ADHSDF"),console.log(t),n.albums=[],n}var n,r,a;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&s(t,e)}(e,o.a.Component),n=e,(r=[{key:"generateAlbums",value:function(){var t=!0,e=!1,n=void 0;try{for(var r,i=this.props.data.album_data[Symbol.iterator]();!(t=(r=i.next()).done);t=!0){var a=r.value;console.log(a),this.albums.push(o.a.createElement("div",{style:{display:"flex",flexDirection:"column"}},o.a.createElement("h2",null,"  ",o.a.createElement("a",{href:"/album/"+a.artist+"/"+a.album},a.album," "))))}}catch(t){e=!0,n=t}finally{try{t||null==i.return||i.return()}finally{if(e)throw n}}}},{key:"render",value:function(){return this.generateAlbums(),o.a.createElement("div",null,o.a.createElement(i.a,null),o.a.createElement("div",{className:"albums_display",style:{left:"15%",top:"100px",position:"relative"}},o.a.createElement("h1",null," Albums "),this.albums))}}])&&l(n.prototype,r),a&&l(n,a),e}()},function(t,e,n){"use strict";n.d(e,"a",function(){return p});var r=n(0),o=n.n(r),i=n(2);function a(t){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function l(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function u(t,e){return!e||"object"!==a(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function c(t){return(c=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function s(t,e){return(s=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var p=function(t){function e(t){return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),u(this,c(e).call(this,t))}var n,r,a;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&s(t,e)}(e,o.a.Component),n=e,(r=[{key:"render",value:function(){return o.a.createElement("div",null,o.a.createElement(i.a,null),o.a.createElement("section",{className:"hero",style:{position:"absolute",left:"10%",top:"20%"}},o.a.createElement("div",{className:"hero-content"},o.a.createElement("h2",null,"Login"),o.a.createElement("form",{method:"POST",id:"testForm"},o.a.createElement("label",{style:{color:"black"}},"Username:"),o.a.createElement("input",{type:"text",name:"username"}),o.a.createElement("br",null),o.a.createElement("label",{style:{color:"black"}},"Password:"),o.a.createElement("input",{type:"text",name:"password"}),o.a.createElement("p",null,o.a.createElement("button",{type:"submit",id:"submitButton",className:"btn btn-lg btn-primary"},"Login"),o.a.createElement("a",{href:"/register",id:"submitButton",className:"btn btn-lg btn-primary"},"Register")),o.a.createElement("p",null)))))}}])&&l(n.prototype,r),a&&l(n,a),e}()},function(t,e,n){"use strict";n.d(e,"a",function(){return p});var r=n(0),o=n.n(r),i=n(2);function a(t){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function l(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function u(t,e){return!e||"object"!==a(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function c(t){return(c=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function s(t,e){return(s=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var p=function(t){function e(t){return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),u(this,c(e).call(this,t))}var n,r,a;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&s(t,e)}(e,o.a.Component),n=e,(r=[{key:"render",value:function(){return o.a.createElement("div",null,o.a.createElement(i.a,null),o.a.createElement("section",{className:"hero",style:{position:"absolute",left:"10%",top:"20%"}},o.a.createElement("div",{className:"hero-content"},o.a.createElement("h2",null,"Register"),o.a.createElement("form",{method:"POST",id:"testForm"},o.a.createElement("label",{style:{color:"black"}},"Enter Username:"),o.a.createElement("input",{type:"text",name:"username"}),o.a.createElement("br",null),o.a.createElement("label",{style:{color:"black"}},"Enter Password:"),o.a.createElement("input",{type:"text",name:"password"}),o.a.createElement("br",null),o.a.createElement("label",{style:{color:"black"}},"Confirm Password:"),o.a.createElement("input",{type:"text",name:"password_confirm"}),o.a.createElement("p",null,o.a.createElement("button",{href:"/",type:"submit",id:"submitButton",className:"btn btn-lg btn-primary"},"Register"))))))}}])&&l(n.prototype,r),a&&l(n,a),e}()},function(t,e,n){"use strict";n.d(e,"a",function(){return p});var r=n(0),o=n.n(r),i=n(2);function a(t){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function l(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function u(t,e){return!e||"object"!==a(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function c(t){return(c=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function s(t,e){return(s=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var p=function(t){function e(t){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(n=u(this,c(e).call(this,t))).followers=[],n}var n,r,a;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&s(t,e)}(e,o.a.Component),n=e,(r=[{key:"generateFollowers",value:function(){var t=!0,e=!1,n=void 0;try{for(var r,i=this.props.data.followers[Symbol.iterator]();!(t=(r=i.next()).done);t=!0){var a=r.value;console.log(a),this.followers.push(o.a.createElement("div",{key:a.user_id},o.a.createElement("a",{href:"/user/"+a.user_id},a.user_id)))}}catch(t){e=!0,n=t}finally{try{t||null==i.return||i.return()}finally{if(e)throw n}}}},{key:"render",value:function(){return this.generateFollowers(),o.a.createElement("div",null,o.a.createElement(i.a,null),o.a.createElement("div",{className:"followers_div",style:{left:"15%",top:"100px",position:"relative"}},o.a.createElement("h1",null," Followers "),this.followers))}}])&&l(n.prototype,r),a&&l(n,a),e}()},function(t,e,n){"use strict";n.d(e,"a",function(){return p});var r=n(0),o=n.n(r),i=n(2);function a(t){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function l(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function u(t,e){return!e||"object"!==a(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function c(t){return(c=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function s(t,e){return(s=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var p=function(t){function e(t){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(n=u(this,c(e).call(this,t))).follows=[],n}var n,r,a;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&s(t,e)}(e,o.a.Component),n=e,(r=[{key:"generateFollows",value:function(){var t=!0,e=!1,n=void 0;try{for(var r,i=this.props.data.following[Symbol.iterator]();!(t=(r=i.next()).done);t=!0){var a=r.value;console.log(a),this.follows.push(o.a.createElement("div",{key:a.user_id},o.a.createElement("a",{href:"/user/"+a.user_id},a.user_id)))}}catch(t){e=!0,n=t}finally{try{t||null==i.return||i.return()}finally{if(e)throw n}}}},{key:"render",value:function(){return this.generateFollows(),o.a.createElement("div",null,o.a.createElement(i.a,null),o.a.createElement("div",{className:"follows_div",style:{left:"15%",top:"100px",position:"relative"}},o.a.createElement("h1",null," Follows "),this.follows))}}])&&l(n.prototype,r),a&&l(n,a),e}()},function(t,e,n){var r=n(39);t.exports=d,t.exports.parse=i,t.exports.compile=function(t,e){return l(i(t,e))},t.exports.tokensToFunction=l,t.exports.tokensToRegExp=f;var o=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function i(t,e){for(var n,r=[],i=0,a=0,l="",s=e&&e.delimiter||"/";null!=(n=o.exec(t));){var p=n[0],f=n[1],d=n.index;if(l+=t.slice(a,d),a=d+p.length,f)l+=f[1];else{var y=t[a],m=n[2],v=n[3],h=n[4],w=n[5],E=n[6],b=n[7];l&&(r.push(l),l="");var _=null!=m&&null!=y&&y!==m,T="+"===E||"*"===E,S="?"===E||"*"===E,C=n[2]||s,x=h||w;r.push({name:v||i++,prefix:m||"",delimiter:C,optional:S,repeat:T,partial:_,asterisk:!!b,pattern:x?c(x):b?".*":"[^"+u(C)+"]+?"})}}return a<t.length&&(l+=t.substr(a)),l&&r.push(l),r}function a(t){return encodeURI(t).replace(/[\/?#]/g,function(t){return"%"+t.charCodeAt(0).toString(16).toUpperCase()})}function l(t){for(var e=new Array(t.length),n=0;n<t.length;n++)"object"==typeof t[n]&&(e[n]=new RegExp("^(?:"+t[n].pattern+")$"));return function(n,o){for(var i="",l=n||{},u=(o||{}).pretty?a:encodeURIComponent,c=0;c<t.length;c++){var s=t[c];if("string"!=typeof s){var p,f=l[s.name];if(null==f){if(s.optional){s.partial&&(i+=s.prefix);continue}throw new TypeError('Expected "'+s.name+'" to be defined')}if(r(f)){if(!s.repeat)throw new TypeError('Expected "'+s.name+'" to not repeat, but received `'+JSON.stringify(f)+"`");if(0===f.length){if(s.optional)continue;throw new TypeError('Expected "'+s.name+'" to not be empty')}for(var d=0;d<f.length;d++){if(p=u(f[d]),!e[c].test(p))throw new TypeError('Expected all "'+s.name+'" to match "'+s.pattern+'", but received `'+JSON.stringify(p)+"`");i+=(0===d?s.prefix:s.delimiter)+p}}else{if(p=s.asterisk?encodeURI(f).replace(/[?#]/g,function(t){return"%"+t.charCodeAt(0).toString(16).toUpperCase()}):u(f),!e[c].test(p))throw new TypeError('Expected "'+s.name+'" to match "'+s.pattern+'", but received "'+p+'"');i+=s.prefix+p}}else i+=s}return i}}function u(t){return t.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function c(t){return t.replace(/([=!:$\/()])/g,"\\$1")}function s(t,e){return t.keys=e,t}function p(t){return t.sensitive?"":"i"}function f(t,e,n){r(e)||(n=e||n,e=[]);for(var o=(n=n||{}).strict,i=!1!==n.end,a="",l=0;l<t.length;l++){var c=t[l];if("string"==typeof c)a+=u(c);else{var f=u(c.prefix),d="(?:"+c.pattern+")";e.push(c),c.repeat&&(d+="(?:"+f+d+")*"),a+=d=c.optional?c.partial?f+"("+d+")?":"(?:"+f+"("+d+"))?":f+"("+d+")"}}var y=u(n.delimiter||"/"),m=a.slice(-y.length)===y;return o||(a=(m?a.slice(0,-y.length):a)+"(?:"+y+"(?=$))?"),a+=i?"$":o&&m?"":"(?="+y+"|$)",s(new RegExp("^"+a,p(n)),e)}function d(t,e,n){return r(e)||(n=e||n,e=[]),n=n||{},t instanceof RegExp?function(t,e){var n=t.source.match(/\((?!\?)/g);if(n)for(var r=0;r<n.length;r++)e.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return s(t,e)}(t,e):r(t)?function(t,e,n){for(var r=[],o=0;o<t.length;o++)r.push(d(t[o],e,n).source);return s(new RegExp("(?:"+r.join("|")+")",p(n)),e)}(t,e,n):function(t,e,n){return f(i(t,n),e,n)}(t,e,n)}},,function(t,e,n){(e=t.exports=function(...t){return o(...t)}).__esModule=!0;const r=n(29),o=r.default;Object.assign(e,r)},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(){},e.revert=function(){}},function(t,e,n){"use strict";
/** @license React v16.7.0
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(12),o="function"==typeof Symbol&&Symbol.for,i=o?Symbol.for("react.element"):60103,a=o?Symbol.for("react.portal"):60106,l=o?Symbol.for("react.fragment"):60107,u=o?Symbol.for("react.strict_mode"):60108,c=o?Symbol.for("react.profiler"):60114,s=o?Symbol.for("react.provider"):60109,p=o?Symbol.for("react.context"):60110,f=o?Symbol.for("react.concurrent_mode"):60111,d=o?Symbol.for("react.forward_ref"):60112,y=o?Symbol.for("react.suspense"):60113,m=o?Symbol.for("react.memo"):60115,v=o?Symbol.for("react.lazy"):60116,h="function"==typeof Symbol&&Symbol.iterator;function w(t){for(var e=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+t,r=0;r<e;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);!function(t,e,n,r,o,i,a,l){if(!t){if(t=void 0,void 0===e)t=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var u=[n,r,o,i,a,l],c=0;(t=Error(e.replace(/%s/g,function(){return u[c++]}))).name="Invariant Violation"}throw t.framesToPop=1,t}}(!1,"Minified React error #"+t+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}var E={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},b={};function _(t,e,n){this.props=t,this.context=e,this.refs=b,this.updater=n||E}function T(){}function S(t,e,n){this.props=t,this.context=e,this.refs=b,this.updater=n||E}_.prototype.isReactComponent={},_.prototype.setState=function(t,e){"object"!=typeof t&&"function"!=typeof t&&null!=t&&w("85"),this.updater.enqueueSetState(this,t,e,"setState")},_.prototype.forceUpdate=function(t){this.updater.enqueueForceUpdate(this,t,"forceUpdate")},T.prototype=_.prototype;var C=S.prototype=new T;C.constructor=S,r(C,_.prototype),C.isPureReactComponent=!0;var x={current:null,currentDispatcher:null},O=Object.prototype.hasOwnProperty,P={key:!0,ref:!0,__self:!0,__source:!0};function g(t,e,n){var r=void 0,o={},a=null,l=null;if(null!=e)for(r in void 0!==e.ref&&(l=e.ref),void 0!==e.key&&(a=""+e.key),e)O.call(e,r)&&!P.hasOwnProperty(r)&&(o[r]=e[r]);var u=arguments.length-2;if(1===u)o.children=n;else if(1<u){for(var c=Array(u),s=0;s<u;s++)c[s]=arguments[s+2];o.children=c}if(t&&t.defaultProps)for(r in u=t.defaultProps)void 0===o[r]&&(o[r]=u[r]);return{$$typeof:i,type:t,key:a,ref:l,props:o,_owner:x.current}}function N(t){return"object"==typeof t&&null!==t&&t.$$typeof===i}var j=/\/+/g,D=[];function M(t,e,n,r){if(D.length){var o=D.pop();return o.result=t,o.keyPrefix=e,o.func=n,o.context=r,o.count=0,o}return{result:t,keyPrefix:e,func:n,context:r,count:0}}function F(t){t.result=null,t.keyPrefix=null,t.func=null,t.context=null,t.count=0,10>D.length&&D.push(t)}function U(t,e,n){return null==t?0:function t(e,n,r,o){var l=typeof e;"undefined"!==l&&"boolean"!==l||(e=null);var u=!1;if(null===e)u=!0;else switch(l){case"string":case"number":u=!0;break;case"object":switch(e.$$typeof){case i:case a:u=!0}}if(u)return r(o,e,""===n?"."+L(e,0):n),1;if(u=0,n=""===n?".":n+":",Array.isArray(e))for(var c=0;c<e.length;c++){var s=n+L(l=e[c],c);u+=t(l,s,r,o)}else if(s=null===e||"object"!=typeof e?null:"function"==typeof(s=h&&e[h]||e["@@iterator"])?s:null,"function"==typeof s)for(e=s.call(e),c=0;!(l=e.next()).done;)u+=t(l=l.value,s=n+L(l,c++),r,o);else"object"===l&&w("31","[object Object]"==(r=""+e)?"object with keys {"+Object.keys(e).join(", ")+"}":r,"");return u}(t,"",e,n)}function L(t,e){return"object"==typeof t&&null!==t&&null!=t.key?function(t){var e={"=":"=0",":":"=2"};return"$"+(""+t).replace(/[=:]/g,function(t){return e[t]})}(t.key):e.toString(36)}function I(t,e){t.func.call(t.context,e,t.count++)}function A(t,e,n){var r=t.result,o=t.keyPrefix;t=t.func.call(t.context,e,t.count++),Array.isArray(t)?z(t,r,n,function(t){return t}):null!=t&&(N(t)&&(t=function(t,e){return{$$typeof:i,type:t.type,key:e,ref:t.ref,props:t.props,_owner:t._owner}}(t,o+(!t.key||e&&e.key===t.key?"":(""+t.key).replace(j,"$&/")+"/")+n)),r.push(t))}function z(t,e,n,r,o){var i="";null!=n&&(i=(""+n).replace(j,"$&/")+"/"),U(t,A,e=M(e,i,r,o)),F(e)}var R={Children:{map:function(t,e,n){if(null==t)return t;var r=[];return z(t,r,null,e,n),r},forEach:function(t,e,n){if(null==t)return t;U(t,I,e=M(null,null,e,n)),F(e)},count:function(t){return U(t,function(){return null},null)},toArray:function(t){var e=[];return z(t,e,null,function(t){return t}),e},only:function(t){return N(t)||w("143"),t}},createRef:function(){return{current:null}},Component:_,PureComponent:S,createContext:function(t,e){return void 0===e&&(e=null),(t={$$typeof:p,_calculateChangedBits:e,_currentValue:t,_currentValue2:t,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:s,_context:t},t.Consumer=t},forwardRef:function(t){return{$$typeof:d,render:t}},lazy:function(t){return{$$typeof:v,_ctor:t,_status:-1,_result:null}},memo:function(t,e){return{$$typeof:m,type:t,compare:void 0===e?null:e}},Fragment:l,StrictMode:u,Suspense:y,createElement:g,cloneElement:function(t,e,n){null==t&&w("267",t);var o=void 0,a=r({},t.props),l=t.key,u=t.ref,c=t._owner;if(null!=e){void 0!==e.ref&&(u=e.ref,c=x.current),void 0!==e.key&&(l=""+e.key);var s=void 0;for(o in t.type&&t.type.defaultProps&&(s=t.type.defaultProps),e)O.call(e,o)&&!P.hasOwnProperty(o)&&(a[o]=void 0===e[o]&&void 0!==s?s[o]:e[o])}if(1===(o=arguments.length-2))a.children=n;else if(1<o){s=Array(o);for(var p=0;p<o;p++)s[p]=arguments[p+2];a.children=s}return{$$typeof:i,type:t.type,key:l,ref:u,props:a,_owner:c}},createFactory:function(t){var e=g.bind(null,t);return e.type=t,e},isValidElement:N,version:"16.7.0",unstable_ConcurrentMode:f,unstable_Profiler:c,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:x,assign:r}},W={default:R},$=W&&R||W;t.exports=$.default||$},function(t,e,n){"use strict";
/** @license React v16.7.0
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(0),o=n(12),i=n(32);function a(t){for(var e=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+t,r=0;r<e;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);!function(t,e,n,r,o,i,a,l){if(!t){if(t=void 0,void 0===e)t=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var u=[n,r,o,i,a,l],c=0;(t=Error(e.replace(/%s/g,function(){return u[c++]}))).name="Invariant Violation"}throw t.framesToPop=1,t}}(!1,"Minified React error #"+t+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}r||a("227");var l=!1,u=null,c=!1,s=null,p={onError:function(t){l=!0,u=t}};function f(t,e,n,r,o,i,a,c,s){l=!1,u=null,function(t,e,n,r,o,i,a,l,u){var c=Array.prototype.slice.call(arguments,3);try{e.apply(n,c)}catch(t){this.onError(t)}}.apply(p,arguments)}var d=null,y={};function m(){if(d)for(var t in y){var e=y[t],n=d.indexOf(t);if(-1<n||a("96",t),!h[n])for(var r in e.extractEvents||a("97",t),h[n]=e,n=e.eventTypes){var o=void 0,i=n[r],l=e,u=r;w.hasOwnProperty(u)&&a("99",u),w[u]=i;var c=i.phasedRegistrationNames;if(c){for(o in c)c.hasOwnProperty(o)&&v(c[o],l,u);o=!0}else i.registrationName?(v(i.registrationName,l,u),o=!0):o=!1;o||a("98",r,t)}}}function v(t,e,n){E[t]&&a("100",t),E[t]=e,b[t]=e.eventTypes[n].dependencies}var h=[],w={},E={},b={},_=null,T=null,S=null;function C(t,e,n){var r=t.type||"unknown-event";t.currentTarget=S(n),function(t,e,n,r,o,i,p,d,y){if(f.apply(this,arguments),l){if(l){var m=u;l=!1,u=null}else a("198"),m=void 0;c||(c=!0,s=m)}}(r,e,void 0,t),t.currentTarget=null}function x(t,e){return null==e&&a("30"),null==t?e:Array.isArray(t)?Array.isArray(e)?(t.push.apply(t,e),t):(t.push(e),t):Array.isArray(e)?[t].concat(e):[t,e]}function O(t,e,n){Array.isArray(t)?t.forEach(e,n):t&&e.call(n,t)}var P=null;function g(t){if(t){var e=t._dispatchListeners,n=t._dispatchInstances;if(Array.isArray(e))for(var r=0;r<e.length&&!t.isPropagationStopped();r++)C(t,e[r],n[r]);else e&&C(t,e,n);t._dispatchListeners=null,t._dispatchInstances=null,t.isPersistent()||t.constructor.release(t)}}var N={injectEventPluginOrder:function(t){d&&a("101"),d=Array.prototype.slice.call(t),m()},injectEventPluginsByName:function(t){var e,n=!1;for(e in t)if(t.hasOwnProperty(e)){var r=t[e];y.hasOwnProperty(e)&&y[e]===r||(y[e]&&a("102",e),y[e]=r,n=!0)}n&&m()}};function j(t,e){var n=t.stateNode;if(!n)return null;var r=_(n);if(!r)return null;n=r[e];t:switch(e){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":(r=!r.disabled)||(r=!("button"===(t=t.type)||"input"===t||"select"===t||"textarea"===t)),t=!r;break t;default:t=!1}return t?null:(n&&"function"!=typeof n&&a("231",e,typeof n),n)}function D(t){if(null!==t&&(P=x(P,t)),t=P,P=null,t&&(O(t,g),P&&a("95"),c))throw t=s,c=!1,s=null,t}var M=Math.random().toString(36).slice(2),F="__reactInternalInstance$"+M,U="__reactEventHandlers$"+M;function L(t){if(t[F])return t[F];for(;!t[F];){if(!t.parentNode)return null;t=t.parentNode}return 5===(t=t[F]).tag||6===t.tag?t:null}function I(t){return!(t=t[F])||5!==t.tag&&6!==t.tag?null:t}function A(t){if(5===t.tag||6===t.tag)return t.stateNode;a("33")}function z(t){return t[U]||null}function R(t){do{t=t.return}while(t&&5!==t.tag);return t||null}function W(t,e,n){(e=j(t,n.dispatchConfig.phasedRegistrationNames[e]))&&(n._dispatchListeners=x(n._dispatchListeners,e),n._dispatchInstances=x(n._dispatchInstances,t))}function $(t){if(t&&t.dispatchConfig.phasedRegistrationNames){for(var e=t._targetInst,n=[];e;)n.push(e),e=R(e);for(e=n.length;0<e--;)W(n[e],"captured",t);for(e=0;e<n.length;e++)W(n[e],"bubbled",t)}}function Q(t,e,n){t&&n&&n.dispatchConfig.registrationName&&(e=j(t,n.dispatchConfig.registrationName))&&(n._dispatchListeners=x(n._dispatchListeners,e),n._dispatchInstances=x(n._dispatchInstances,t))}function Y(t){t&&t.dispatchConfig.registrationName&&Q(t._targetInst,null,t)}function X(t){O(t,$)}var K=!("undefined"==typeof window||!window.document||!window.document.createElement);function k(t,e){var n={};return n[t.toLowerCase()]=e.toLowerCase(),n["Webkit"+t]="webkit"+e,n["Moz"+t]="moz"+e,n}var Z={animationend:k("Animation","AnimationEnd"),animationiteration:k("Animation","AnimationIteration"),animationstart:k("Animation","AnimationStart"),transitionend:k("Transition","TransitionEnd")},J={},V={};function G(t){if(J[t])return J[t];if(!Z[t])return t;var e,n=Z[t];for(e in n)if(n.hasOwnProperty(e)&&e in V)return J[t]=n[e];return t}K&&(V=document.createElement("div").style,"AnimationEvent"in window||(delete Z.animationend.animation,delete Z.animationiteration.animation,delete Z.animationstart.animation),"TransitionEvent"in window||delete Z.transitionend.transition);var q=G("animationend"),B=G("animationiteration"),H=G("animationstart"),tt=G("transitionend"),et="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),nt=null,rt=null,ot=null;function it(){if(ot)return ot;var t,e,n=rt,r=n.length,o="value"in nt?nt.value:nt.textContent,i=o.length;for(t=0;t<r&&n[t]===o[t];t++);var a=r-t;for(e=1;e<=a&&n[r-e]===o[i-e];e++);return ot=o.slice(t,1<e?1-e:void 0)}function at(){return!0}function lt(){return!1}function ut(t,e,n,r){for(var o in this.dispatchConfig=t,this._targetInst=e,this.nativeEvent=n,t=this.constructor.Interface)t.hasOwnProperty(o)&&((e=t[o])?this[o]=e(n):"target"===o?this.target=r:this[o]=n[o]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?at:lt,this.isPropagationStopped=lt,this}function ct(t,e,n,r){if(this.eventPool.length){var o=this.eventPool.pop();return this.call(o,t,e,n,r),o}return new this(t,e,n,r)}function st(t){t instanceof this||a("279"),t.destructor(),10>this.eventPool.length&&this.eventPool.push(t)}function pt(t){t.eventPool=[],t.getPooled=ct,t.release=st}o(ut.prototype,{preventDefault:function(){this.defaultPrevented=!0;var t=this.nativeEvent;t&&(t.preventDefault?t.preventDefault():"unknown"!=typeof t.returnValue&&(t.returnValue=!1),this.isDefaultPrevented=at)},stopPropagation:function(){var t=this.nativeEvent;t&&(t.stopPropagation?t.stopPropagation():"unknown"!=typeof t.cancelBubble&&(t.cancelBubble=!0),this.isPropagationStopped=at)},persist:function(){this.isPersistent=at},isPersistent:lt,destructor:function(){var t,e=this.constructor.Interface;for(t in e)this[t]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=lt,this._dispatchInstances=this._dispatchListeners=null}}),ut.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(t){return t.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},ut.extend=function(t){function e(){}function n(){return r.apply(this,arguments)}var r=this;e.prototype=r.prototype;var i=new e;return o(i,n.prototype),n.prototype=i,n.prototype.constructor=n,n.Interface=o({},r.Interface,t),n.extend=r.extend,pt(n),n},pt(ut);var ft=ut.extend({data:null}),dt=ut.extend({data:null}),yt=[9,13,27,32],mt=K&&"CompositionEvent"in window,vt=null;K&&"documentMode"in document&&(vt=document.documentMode);var ht=K&&"TextEvent"in window&&!vt,wt=K&&(!mt||vt&&8<vt&&11>=vt),Et=String.fromCharCode(32),bt={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},_t=!1;function Tt(t,e){switch(t){case"keyup":return-1!==yt.indexOf(e.keyCode);case"keydown":return 229!==e.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function St(t){return"object"==typeof(t=t.detail)&&"data"in t?t.data:null}var Ct=!1;var xt={eventTypes:bt,extractEvents:function(t,e,n,r){var o=void 0,i=void 0;if(mt)t:{switch(t){case"compositionstart":o=bt.compositionStart;break t;case"compositionend":o=bt.compositionEnd;break t;case"compositionupdate":o=bt.compositionUpdate;break t}o=void 0}else Ct?Tt(t,n)&&(o=bt.compositionEnd):"keydown"===t&&229===n.keyCode&&(o=bt.compositionStart);return o?(wt&&"ko"!==n.locale&&(Ct||o!==bt.compositionStart?o===bt.compositionEnd&&Ct&&(i=it()):(rt="value"in(nt=r)?nt.value:nt.textContent,Ct=!0)),o=ft.getPooled(o,e,n,r),i?o.data=i:null!==(i=St(n))&&(o.data=i),X(o),i=o):i=null,(t=ht?function(t,e){switch(t){case"compositionend":return St(e);case"keypress":return 32!==e.which?null:(_t=!0,Et);case"textInput":return(t=e.data)===Et&&_t?null:t;default:return null}}(t,n):function(t,e){if(Ct)return"compositionend"===t||!mt&&Tt(t,e)?(t=it(),ot=rt=nt=null,Ct=!1,t):null;switch(t){case"paste":return null;case"keypress":if(!(e.ctrlKey||e.altKey||e.metaKey)||e.ctrlKey&&e.altKey){if(e.char&&1<e.char.length)return e.char;if(e.which)return String.fromCharCode(e.which)}return null;case"compositionend":return wt&&"ko"!==e.locale?null:e.data;default:return null}}(t,n))?((e=dt.getPooled(bt.beforeInput,e,n,r)).data=t,X(e)):e=null,null===i?e:null===e?i:[i,e]}},Ot=null,Pt=null,gt=null;function Nt(t){if(t=T(t)){"function"!=typeof Ot&&a("280");var e=_(t.stateNode);Ot(t.stateNode,t.type,e)}}function jt(t){Pt?gt?gt.push(t):gt=[t]:Pt=t}function Dt(){if(Pt){var t=Pt,e=gt;if(gt=Pt=null,Nt(t),e)for(t=0;t<e.length;t++)Nt(e[t])}}function Mt(t,e){return t(e)}function Ft(t,e,n){return t(e,n)}function Ut(){}var Lt=!1;function It(t,e){if(Lt)return t(e);Lt=!0;try{return Mt(t,e)}finally{Lt=!1,(null!==Pt||null!==gt)&&(Ut(),Dt())}}var At={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function zt(t){var e=t&&t.nodeName&&t.nodeName.toLowerCase();return"input"===e?!!At[t.type]:"textarea"===e}function Rt(t){return(t=t.target||t.srcElement||window).correspondingUseElement&&(t=t.correspondingUseElement),3===t.nodeType?t.parentNode:t}function Wt(t){if(!K)return!1;var e=(t="on"+t)in document;return e||((e=document.createElement("div")).setAttribute(t,"return;"),e="function"==typeof e[t]),e}function $t(t){var e=t.type;return(t=t.nodeName)&&"input"===t.toLowerCase()&&("checkbox"===e||"radio"===e)}function Qt(t){t._valueTracker||(t._valueTracker=function(t){var e=$t(t)?"checked":"value",n=Object.getOwnPropertyDescriptor(t.constructor.prototype,e),r=""+t[e];if(!t.hasOwnProperty(e)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var o=n.get,i=n.set;return Object.defineProperty(t,e,{configurable:!0,get:function(){return o.call(this)},set:function(t){r=""+t,i.call(this,t)}}),Object.defineProperty(t,e,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(t){r=""+t},stopTracking:function(){t._valueTracker=null,delete t[e]}}}}(t))}function Yt(t){if(!t)return!1;var e=t._valueTracker;if(!e)return!0;var n=e.getValue(),r="";return t&&(r=$t(t)?t.checked?"true":"false":t.value),(t=r)!==n&&(e.setValue(t),!0)}var Xt=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,Kt=/^(.*)[\\\/]/,kt="function"==typeof Symbol&&Symbol.for,Zt=kt?Symbol.for("react.element"):60103,Jt=kt?Symbol.for("react.portal"):60106,Vt=kt?Symbol.for("react.fragment"):60107,Gt=kt?Symbol.for("react.strict_mode"):60108,qt=kt?Symbol.for("react.profiler"):60114,Bt=kt?Symbol.for("react.provider"):60109,Ht=kt?Symbol.for("react.context"):60110,te=kt?Symbol.for("react.concurrent_mode"):60111,ee=kt?Symbol.for("react.forward_ref"):60112,ne=kt?Symbol.for("react.suspense"):60113,re=kt?Symbol.for("react.memo"):60115,oe=kt?Symbol.for("react.lazy"):60116,ie="function"==typeof Symbol&&Symbol.iterator;function ae(t){return null===t||"object"!=typeof t?null:"function"==typeof(t=ie&&t[ie]||t["@@iterator"])?t:null}function le(t){if(null==t)return null;if("function"==typeof t)return t.displayName||t.name||null;if("string"==typeof t)return t;switch(t){case te:return"ConcurrentMode";case Vt:return"Fragment";case Jt:return"Portal";case qt:return"Profiler";case Gt:return"StrictMode";case ne:return"Suspense"}if("object"==typeof t)switch(t.$$typeof){case Ht:return"Context.Consumer";case Bt:return"Context.Provider";case ee:var e=t.render;return e=e.displayName||e.name||"",t.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case re:return le(t.type);case oe:if(t=1===t._status?t._result:null)return le(t)}return null}function ue(t){var e="";do{t:switch(t.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n="";break t;default:var r=t._debugOwner,o=t._debugSource,i=le(t.type);n=null,r&&(n=le(r.type)),r=i,i="",o?i=" (at "+o.fileName.replace(Kt,"")+":"+o.lineNumber+")":n&&(i=" (created by "+n+")"),n="\n    in "+(r||"Unknown")+i}e+=n,t=t.return}while(t);return e}var ce=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,se=Object.prototype.hasOwnProperty,pe={},fe={};function de(t,e,n,r,o){this.acceptsBooleans=2===e||3===e||4===e,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=t,this.type=e}var ye={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(t){ye[t]=new de(t,0,!1,t,null)}),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(t){var e=t[0];ye[e]=new de(e,1,!1,t[1],null)}),["contentEditable","draggable","spellCheck","value"].forEach(function(t){ye[t]=new de(t,2,!1,t.toLowerCase(),null)}),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(t){ye[t]=new de(t,2,!1,t,null)}),"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(t){ye[t]=new de(t,3,!1,t.toLowerCase(),null)}),["checked","multiple","muted","selected"].forEach(function(t){ye[t]=new de(t,3,!0,t,null)}),["capture","download"].forEach(function(t){ye[t]=new de(t,4,!1,t,null)}),["cols","rows","size","span"].forEach(function(t){ye[t]=new de(t,6,!1,t,null)}),["rowSpan","start"].forEach(function(t){ye[t]=new de(t,5,!1,t.toLowerCase(),null)});var me=/[\-:]([a-z])/g;function ve(t){return t[1].toUpperCase()}function he(t,e,n,r){var o=ye.hasOwnProperty(e)?ye[e]:null;(null!==o?0===o.type:!r&&(2<e.length&&("o"===e[0]||"O"===e[0])&&("n"===e[1]||"N"===e[1])))||(function(t,e,n,r){if(null==e||function(t,e,n,r){if(null!==n&&0===n.type)return!1;switch(typeof e){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(t=t.toLowerCase().slice(0,5))&&"aria-"!==t);default:return!1}}(t,e,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!e;case 4:return!1===e;case 5:return isNaN(e);case 6:return isNaN(e)||1>e}return!1}(e,n,o,r)&&(n=null),r||null===o?function(t){return!!se.call(fe,t)||!se.call(pe,t)&&(ce.test(t)?fe[t]=!0:(pe[t]=!0,!1))}(e)&&(null===n?t.removeAttribute(e):t.setAttribute(e,""+n)):o.mustUseProperty?t[o.propertyName]=null===n?3!==o.type&&"":n:(e=o.attributeName,r=o.attributeNamespace,null===n?t.removeAttribute(e):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?t.setAttributeNS(r,e,n):t.setAttribute(e,n))))}function we(t){switch(typeof t){case"boolean":case"number":case"object":case"string":case"undefined":return t;default:return""}}function Ee(t,e){var n=e.checked;return o({},e,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:t._wrapperState.initialChecked})}function be(t,e){var n=null==e.defaultValue?"":e.defaultValue,r=null!=e.checked?e.checked:e.defaultChecked;n=we(null!=e.value?e.value:n),t._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===e.type||"radio"===e.type?null!=e.checked:null!=e.value}}function _e(t,e){null!=(e=e.checked)&&he(t,"checked",e,!1)}function Te(t,e){_e(t,e);var n=we(e.value),r=e.type;if(null!=n)"number"===r?(0===n&&""===t.value||t.value!=n)&&(t.value=""+n):t.value!==""+n&&(t.value=""+n);else if("submit"===r||"reset"===r)return void t.removeAttribute("value");e.hasOwnProperty("value")?Ce(t,e.type,n):e.hasOwnProperty("defaultValue")&&Ce(t,e.type,we(e.defaultValue)),null==e.checked&&null!=e.defaultChecked&&(t.defaultChecked=!!e.defaultChecked)}function Se(t,e,n){if(e.hasOwnProperty("value")||e.hasOwnProperty("defaultValue")){var r=e.type;if(!("submit"!==r&&"reset"!==r||void 0!==e.value&&null!==e.value))return;e=""+t._wrapperState.initialValue,n||e===t.value||(t.value=e),t.defaultValue=e}""!==(n=t.name)&&(t.name=""),t.defaultChecked=!t.defaultChecked,t.defaultChecked=!!t._wrapperState.initialChecked,""!==n&&(t.name=n)}function Ce(t,e,n){"number"===e&&t.ownerDocument.activeElement===t||(null==n?t.defaultValue=""+t._wrapperState.initialValue:t.defaultValue!==""+n&&(t.defaultValue=""+n))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(t){var e=t.replace(me,ve);ye[e]=new de(e,1,!1,t,null)}),"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(t){var e=t.replace(me,ve);ye[e]=new de(e,1,!1,t,"http://www.w3.org/1999/xlink")}),["xml:base","xml:lang","xml:space"].forEach(function(t){var e=t.replace(me,ve);ye[e]=new de(e,1,!1,t,"http://www.w3.org/XML/1998/namespace")}),ye.tabIndex=new de("tabIndex",1,!1,"tabindex",null);var xe={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function Oe(t,e,n){return(t=ut.getPooled(xe.change,t,e,n)).type="change",jt(n),X(t),t}var Pe=null,ge=null;function Ne(t){D(t)}function je(t){if(Yt(A(t)))return t}function De(t,e){if("change"===t)return e}var Me=!1;function Fe(){Pe&&(Pe.detachEvent("onpropertychange",Ue),ge=Pe=null)}function Ue(t){"value"===t.propertyName&&je(ge)&&It(Ne,t=Oe(ge,t,Rt(t)))}function Le(t,e,n){"focus"===t?(Fe(),ge=n,(Pe=e).attachEvent("onpropertychange",Ue)):"blur"===t&&Fe()}function Ie(t){if("selectionchange"===t||"keyup"===t||"keydown"===t)return je(ge)}function Ae(t,e){if("click"===t)return je(e)}function ze(t,e){if("input"===t||"change"===t)return je(e)}K&&(Me=Wt("input")&&(!document.documentMode||9<document.documentMode));var Re={eventTypes:xe,_isInputEventSupported:Me,extractEvents:function(t,e,n,r){var o=e?A(e):window,i=void 0,a=void 0,l=o.nodeName&&o.nodeName.toLowerCase();if("select"===l||"input"===l&&"file"===o.type?i=De:zt(o)?Me?i=ze:(i=Ie,a=Le):(l=o.nodeName)&&"input"===l.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(i=Ae),i&&(i=i(t,e)))return Oe(i,n,r);a&&a(t,o,e),"blur"===t&&(t=o._wrapperState)&&t.controlled&&"number"===o.type&&Ce(o,"number",o.value)}},We=ut.extend({view:null,detail:null}),$e={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Qe(t){var e=this.nativeEvent;return e.getModifierState?e.getModifierState(t):!!(t=$e[t])&&!!e[t]}function Ye(){return Qe}var Xe=0,Ke=0,ke=!1,Ze=!1,Je=We.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Ye,button:null,buttons:null,relatedTarget:function(t){return t.relatedTarget||(t.fromElement===t.srcElement?t.toElement:t.fromElement)},movementX:function(t){if("movementX"in t)return t.movementX;var e=Xe;return Xe=t.screenX,ke?"mousemove"===t.type?t.screenX-e:0:(ke=!0,0)},movementY:function(t){if("movementY"in t)return t.movementY;var e=Ke;return Ke=t.screenY,Ze?"mousemove"===t.type?t.screenY-e:0:(Ze=!0,0)}}),Ve=Je.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Ge={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},qe={eventTypes:Ge,extractEvents:function(t,e,n,r){var o="mouseover"===t||"pointerover"===t,i="mouseout"===t||"pointerout"===t;if(o&&(n.relatedTarget||n.fromElement)||!i&&!o)return null;if(o=r.window===r?r:(o=r.ownerDocument)?o.defaultView||o.parentWindow:window,i?(i=e,e=(e=n.relatedTarget||n.toElement)?L(e):null):i=null,i===e)return null;var a=void 0,l=void 0,u=void 0,c=void 0;"mouseout"===t||"mouseover"===t?(a=Je,l=Ge.mouseLeave,u=Ge.mouseEnter,c="mouse"):"pointerout"!==t&&"pointerover"!==t||(a=Ve,l=Ge.pointerLeave,u=Ge.pointerEnter,c="pointer");var s=null==i?o:A(i);if(o=null==e?o:A(e),(t=a.getPooled(l,i,n,r)).type=c+"leave",t.target=s,t.relatedTarget=o,(n=a.getPooled(u,e,n,r)).type=c+"enter",n.target=o,n.relatedTarget=s,r=e,i&&r)t:{for(o=r,c=0,a=e=i;a;a=R(a))c++;for(a=0,u=o;u;u=R(u))a++;for(;0<c-a;)e=R(e),c--;for(;0<a-c;)o=R(o),a--;for(;c--;){if(e===o||e===o.alternate)break t;e=R(e),o=R(o)}e=null}else e=null;for(o=e,e=[];i&&i!==o&&(null===(c=i.alternate)||c!==o);)e.push(i),i=R(i);for(i=[];r&&r!==o&&(null===(c=r.alternate)||c!==o);)i.push(r),r=R(r);for(r=0;r<e.length;r++)Q(e[r],"bubbled",t);for(r=i.length;0<r--;)Q(i[r],"captured",n);return[t,n]}},Be=Object.prototype.hasOwnProperty;function He(t,e){return t===e?0!==t||0!==e||1/t==1/e:t!=t&&e!=e}function tn(t,e){if(He(t,e))return!0;if("object"!=typeof t||null===t||"object"!=typeof e||null===e)return!1;var n=Object.keys(t),r=Object.keys(e);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!Be.call(e,n[r])||!He(t[n[r]],e[n[r]]))return!1;return!0}function en(t){var e=t;if(t.alternate)for(;e.return;)e=e.return;else{if(0!=(2&e.effectTag))return 1;for(;e.return;)if(0!=(2&(e=e.return).effectTag))return 1}return 3===e.tag?2:3}function nn(t){2!==en(t)&&a("188")}function rn(t){if(!(t=function(t){var e=t.alternate;if(!e)return 3===(e=en(t))&&a("188"),1===e?null:t;for(var n=t,r=e;;){var o=n.return,i=o?o.alternate:null;if(!o||!i)break;if(o.child===i.child){for(var l=o.child;l;){if(l===n)return nn(o),t;if(l===r)return nn(o),e;l=l.sibling}a("188")}if(n.return!==r.return)n=o,r=i;else{l=!1;for(var u=o.child;u;){if(u===n){l=!0,n=o,r=i;break}if(u===r){l=!0,r=o,n=i;break}u=u.sibling}if(!l){for(u=i.child;u;){if(u===n){l=!0,n=i,r=o;break}if(u===r){l=!0,r=i,n=o;break}u=u.sibling}l||a("189")}}n.alternate!==r&&a("190")}return 3!==n.tag&&a("188"),n.stateNode.current===n?t:e}(t)))return null;for(var e=t;;){if(5===e.tag||6===e.tag)return e;if(e.child)e.child.return=e,e=e.child;else{if(e===t)break;for(;!e.sibling;){if(!e.return||e.return===t)return null;e=e.return}e.sibling.return=e.return,e=e.sibling}}return null}var on=ut.extend({animationName:null,elapsedTime:null,pseudoElement:null}),an=ut.extend({clipboardData:function(t){return"clipboardData"in t?t.clipboardData:window.clipboardData}}),ln=We.extend({relatedTarget:null});function un(t){var e=t.keyCode;return"charCode"in t?0===(t=t.charCode)&&13===e&&(t=13):t=e,10===t&&(t=13),32<=t||13===t?t:0}var cn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},sn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},pn=We.extend({key:function(t){if(t.key){var e=cn[t.key]||t.key;if("Unidentified"!==e)return e}return"keypress"===t.type?13===(t=un(t))?"Enter":String.fromCharCode(t):"keydown"===t.type||"keyup"===t.type?sn[t.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Ye,charCode:function(t){return"keypress"===t.type?un(t):0},keyCode:function(t){return"keydown"===t.type||"keyup"===t.type?t.keyCode:0},which:function(t){return"keypress"===t.type?un(t):"keydown"===t.type||"keyup"===t.type?t.keyCode:0}}),fn=Je.extend({dataTransfer:null}),dn=We.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Ye}),yn=ut.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),mn=Je.extend({deltaX:function(t){return"deltaX"in t?t.deltaX:"wheelDeltaX"in t?-t.wheelDeltaX:0},deltaY:function(t){return"deltaY"in t?t.deltaY:"wheelDeltaY"in t?-t.wheelDeltaY:"wheelDelta"in t?-t.wheelDelta:0},deltaZ:null,deltaMode:null}),vn=[["abort","abort"],[q,"animationEnd"],[B,"animationIteration"],[H,"animationStart"],["canplay","canPlay"],["canplaythrough","canPlayThrough"],["drag","drag"],["dragenter","dragEnter"],["dragexit","dragExit"],["dragleave","dragLeave"],["dragover","dragOver"],["durationchange","durationChange"],["emptied","emptied"],["encrypted","encrypted"],["ended","ended"],["error","error"],["gotpointercapture","gotPointerCapture"],["load","load"],["loadeddata","loadedData"],["loadedmetadata","loadedMetadata"],["loadstart","loadStart"],["lostpointercapture","lostPointerCapture"],["mousemove","mouseMove"],["mouseout","mouseOut"],["mouseover","mouseOver"],["playing","playing"],["pointermove","pointerMove"],["pointerout","pointerOut"],["pointerover","pointerOver"],["progress","progress"],["scroll","scroll"],["seeking","seeking"],["stalled","stalled"],["suspend","suspend"],["timeupdate","timeUpdate"],["toggle","toggle"],["touchmove","touchMove"],[tt,"transitionEnd"],["waiting","waiting"],["wheel","wheel"]],hn={},wn={};function En(t,e){var n=t[0],r="on"+((t=t[1])[0].toUpperCase()+t.slice(1));e={phasedRegistrationNames:{bubbled:r,captured:r+"Capture"},dependencies:[n],isInteractive:e},hn[t]=e,wn[n]=e}[["blur","blur"],["cancel","cancel"],["click","click"],["close","close"],["contextmenu","contextMenu"],["copy","copy"],["cut","cut"],["auxclick","auxClick"],["dblclick","doubleClick"],["dragend","dragEnd"],["dragstart","dragStart"],["drop","drop"],["focus","focus"],["input","input"],["invalid","invalid"],["keydown","keyDown"],["keypress","keyPress"],["keyup","keyUp"],["mousedown","mouseDown"],["mouseup","mouseUp"],["paste","paste"],["pause","pause"],["play","play"],["pointercancel","pointerCancel"],["pointerdown","pointerDown"],["pointerup","pointerUp"],["ratechange","rateChange"],["reset","reset"],["seeked","seeked"],["submit","submit"],["touchcancel","touchCancel"],["touchend","touchEnd"],["touchstart","touchStart"],["volumechange","volumeChange"]].forEach(function(t){En(t,!0)}),vn.forEach(function(t){En(t,!1)});var bn={eventTypes:hn,isInteractiveTopLevelEventType:function(t){return void 0!==(t=wn[t])&&!0===t.isInteractive},extractEvents:function(t,e,n,r){var o=wn[t];if(!o)return null;switch(t){case"keypress":if(0===un(n))return null;case"keydown":case"keyup":t=pn;break;case"blur":case"focus":t=ln;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":t=Je;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":t=fn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":t=dn;break;case q:case B:case H:t=on;break;case tt:t=yn;break;case"scroll":t=We;break;case"wheel":t=mn;break;case"copy":case"cut":case"paste":t=an;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":t=Ve;break;default:t=ut}return X(e=t.getPooled(o,e,n,r)),e}},_n=bn.isInteractiveTopLevelEventType,Tn=[];function Sn(t){var e=t.targetInst,n=e;do{if(!n){t.ancestors.push(n);break}var r;for(r=n;r.return;)r=r.return;if(!(r=3!==r.tag?null:r.stateNode.containerInfo))break;t.ancestors.push(n),n=L(r)}while(n);for(n=0;n<t.ancestors.length;n++){e=t.ancestors[n];var o=Rt(t.nativeEvent);r=t.topLevelType;for(var i=t.nativeEvent,a=null,l=0;l<h.length;l++){var u=h[l];u&&(u=u.extractEvents(r,e,i,o))&&(a=x(a,u))}D(a)}}var Cn=!0;function xn(t,e){if(!e)return null;var n=(_n(t)?Pn:gn).bind(null,t);e.addEventListener(t,n,!1)}function On(t,e){if(!e)return null;var n=(_n(t)?Pn:gn).bind(null,t);e.addEventListener(t,n,!0)}function Pn(t,e){Ft(gn,t,e)}function gn(t,e){if(Cn){var n=Rt(e);if(null===(n=L(n))||"number"!=typeof n.tag||2===en(n)||(n=null),Tn.length){var r=Tn.pop();r.topLevelType=t,r.nativeEvent=e,r.targetInst=n,t=r}else t={topLevelType:t,nativeEvent:e,targetInst:n,ancestors:[]};try{It(Sn,t)}finally{t.topLevelType=null,t.nativeEvent=null,t.targetInst=null,t.ancestors.length=0,10>Tn.length&&Tn.push(t)}}}var Nn={},jn=0,Dn="_reactListenersID"+(""+Math.random()).slice(2);function Mn(t){return Object.prototype.hasOwnProperty.call(t,Dn)||(t[Dn]=jn++,Nn[t[Dn]]={}),Nn[t[Dn]]}function Fn(t){if(void 0===(t=t||("undefined"!=typeof document?document:void 0)))return null;try{return t.activeElement||t.body}catch(e){return t.body}}function Un(t){for(;t&&t.firstChild;)t=t.firstChild;return t}function Ln(t,e){var n,r=Un(t);for(t=0;r;){if(3===r.nodeType){if(n=t+r.textContent.length,t<=e&&n>=e)return{node:r,offset:e-t};t=n}t:{for(;r;){if(r.nextSibling){r=r.nextSibling;break t}r=r.parentNode}r=void 0}r=Un(r)}}function In(){for(var t=window,e=Fn();e instanceof t.HTMLIFrameElement;){try{t=e.contentDocument.defaultView}catch(t){break}e=Fn(t.document)}return e}function An(t){var e=t&&t.nodeName&&t.nodeName.toLowerCase();return e&&("input"===e&&("text"===t.type||"search"===t.type||"tel"===t.type||"url"===t.type||"password"===t.type)||"textarea"===e||"true"===t.contentEditable)}var zn=K&&"documentMode"in document&&11>=document.documentMode,Rn={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},Wn=null,$n=null,Qn=null,Yn=!1;function Xn(t,e){var n=e.window===e?e.document:9===e.nodeType?e:e.ownerDocument;return Yn||null==Wn||Wn!==Fn(n)?null:("selectionStart"in(n=Wn)&&An(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},Qn&&tn(Qn,n)?null:(Qn=n,(t=ut.getPooled(Rn.select,$n,t,e)).type="select",t.target=Wn,X(t),t))}var Kn={eventTypes:Rn,extractEvents:function(t,e,n,r){var o,i=r.window===r?r.document:9===r.nodeType?r:r.ownerDocument;if(!(o=!i)){t:{i=Mn(i),o=b.onSelect;for(var a=0;a<o.length;a++){var l=o[a];if(!i.hasOwnProperty(l)||!i[l]){i=!1;break t}}i=!0}o=!i}if(o)return null;switch(i=e?A(e):window,t){case"focus":(zt(i)||"true"===i.contentEditable)&&(Wn=i,$n=e,Qn=null);break;case"blur":Qn=$n=Wn=null;break;case"mousedown":Yn=!0;break;case"contextmenu":case"mouseup":case"dragend":return Yn=!1,Xn(n,r);case"selectionchange":if(zn)break;case"keydown":case"keyup":return Xn(n,r)}return null}};function kn(t,e){return t=o({children:void 0},e),(e=function(t){var e="";return r.Children.forEach(t,function(t){null!=t&&(e+=t)}),e}(e.children))&&(t.children=e),t}function Zn(t,e,n,r){if(t=t.options,e){e={};for(var o=0;o<n.length;o++)e["$"+n[o]]=!0;for(n=0;n<t.length;n++)o=e.hasOwnProperty("$"+t[n].value),t[n].selected!==o&&(t[n].selected=o),o&&r&&(t[n].defaultSelected=!0)}else{for(n=""+we(n),e=null,o=0;o<t.length;o++){if(t[o].value===n)return t[o].selected=!0,void(r&&(t[o].defaultSelected=!0));null!==e||t[o].disabled||(e=t[o])}null!==e&&(e.selected=!0)}}function Jn(t,e){return null!=e.dangerouslySetInnerHTML&&a("91"),o({},e,{value:void 0,defaultValue:void 0,children:""+t._wrapperState.initialValue})}function Vn(t,e){var n=e.value;null==n&&(n=e.defaultValue,null!=(e=e.children)&&(null!=n&&a("92"),Array.isArray(e)&&(1>=e.length||a("93"),e=e[0]),n=e),null==n&&(n="")),t._wrapperState={initialValue:we(n)}}function Gn(t,e){var n=we(e.value),r=we(e.defaultValue);null!=n&&((n=""+n)!==t.value&&(t.value=n),null==e.defaultValue&&t.defaultValue!==n&&(t.defaultValue=n)),null!=r&&(t.defaultValue=""+r)}function qn(t){var e=t.textContent;e===t._wrapperState.initialValue&&(t.value=e)}N.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),_=z,T=I,S=A,N.injectEventPluginsByName({SimpleEventPlugin:bn,EnterLeaveEventPlugin:qe,ChangeEventPlugin:Re,SelectEventPlugin:Kn,BeforeInputEventPlugin:xt});var Bn={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};function Hn(t){switch(t){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function tr(t,e){return null==t||"http://www.w3.org/1999/xhtml"===t?Hn(e):"http://www.w3.org/2000/svg"===t&&"foreignObject"===e?"http://www.w3.org/1999/xhtml":t}var er,nr=void 0,rr=(er=function(t,e){if(t.namespaceURI!==Bn.svg||"innerHTML"in t)t.innerHTML=e;else{for((nr=nr||document.createElement("div")).innerHTML="<svg>"+e+"</svg>",e=nr.firstChild;t.firstChild;)t.removeChild(t.firstChild);for(;e.firstChild;)t.appendChild(e.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(t,e,n,r){MSApp.execUnsafeLocalFunction(function(){return er(t,e)})}:er);function or(t,e){if(e){var n=t.firstChild;if(n&&n===t.lastChild&&3===n.nodeType)return void(n.nodeValue=e)}t.textContent=e}var ir={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},ar=["Webkit","ms","Moz","O"];function lr(t,e,n){return null==e||"boolean"==typeof e||""===e?"":n||"number"!=typeof e||0===e||ir.hasOwnProperty(t)&&ir[t]?(""+e).trim():e+"px"}function ur(t,e){for(var n in t=t.style,e)if(e.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=lr(n,e[n],r);"float"===n&&(n="cssFloat"),r?t.setProperty(n,o):t[n]=o}}Object.keys(ir).forEach(function(t){ar.forEach(function(e){e=e+t.charAt(0).toUpperCase()+t.substring(1),ir[e]=ir[t]})});var cr=o({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function sr(t,e){e&&(cr[t]&&(null!=e.children||null!=e.dangerouslySetInnerHTML)&&a("137",t,""),null!=e.dangerouslySetInnerHTML&&(null!=e.children&&a("60"),"object"==typeof e.dangerouslySetInnerHTML&&"__html"in e.dangerouslySetInnerHTML||a("61")),null!=e.style&&"object"!=typeof e.style&&a("62",""))}function pr(t,e){if(-1===t.indexOf("-"))return"string"==typeof e.is;switch(t){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function fr(t,e){var n=Mn(t=9===t.nodeType||11===t.nodeType?t:t.ownerDocument);e=b[e];for(var r=0;r<e.length;r++){var o=e[r];if(!n.hasOwnProperty(o)||!n[o]){switch(o){case"scroll":On("scroll",t);break;case"focus":case"blur":On("focus",t),On("blur",t),n.blur=!0,n.focus=!0;break;case"cancel":case"close":Wt(o)&&On(o,t);break;case"invalid":case"submit":case"reset":break;default:-1===et.indexOf(o)&&xn(o,t)}n[o]=!0}}}function dr(){}var yr=null,mr=null;function vr(t,e){switch(t){case"button":case"input":case"select":case"textarea":return!!e.autoFocus}return!1}function hr(t,e){return"textarea"===t||"option"===t||"noscript"===t||"string"==typeof e.children||"number"==typeof e.children||"object"==typeof e.dangerouslySetInnerHTML&&null!==e.dangerouslySetInnerHTML&&null!=e.dangerouslySetInnerHTML.__html}var wr="function"==typeof setTimeout?setTimeout:void 0,Er="function"==typeof clearTimeout?clearTimeout:void 0;function br(t){for(t=t.nextSibling;t&&1!==t.nodeType&&3!==t.nodeType;)t=t.nextSibling;return t}function _r(t){for(t=t.firstChild;t&&1!==t.nodeType&&3!==t.nodeType;)t=t.nextSibling;return t}new Set;var Tr=[],Sr=-1;function Cr(t){0>Sr||(t.current=Tr[Sr],Tr[Sr]=null,Sr--)}function xr(t,e){Tr[++Sr]=t.current,t.current=e}var Or={},Pr={current:Or},gr={current:!1},Nr=Or;function jr(t,e){var n=t.type.contextTypes;if(!n)return Or;var r=t.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===e)return r.__reactInternalMemoizedMaskedChildContext;var o,i={};for(o in n)i[o]=e[o];return r&&((t=t.stateNode).__reactInternalMemoizedUnmaskedChildContext=e,t.__reactInternalMemoizedMaskedChildContext=i),i}function Dr(t){return null!=(t=t.childContextTypes)}function Mr(t){Cr(gr),Cr(Pr)}function Fr(t){Cr(gr),Cr(Pr)}function Ur(t,e,n){Pr.current!==Or&&a("168"),xr(Pr,e),xr(gr,n)}function Lr(t,e,n){var r=t.stateNode;if(t=e.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var i in r=r.getChildContext())i in t||a("108",le(e)||"Unknown",i);return o({},n,r)}function Ir(t){var e=t.stateNode;return e=e&&e.__reactInternalMemoizedMergedChildContext||Or,Nr=Pr.current,xr(Pr,e),xr(gr,gr.current),!0}function Ar(t,e,n){var r=t.stateNode;r||a("169"),n?(e=Lr(t,e,Nr),r.__reactInternalMemoizedMergedChildContext=e,Cr(gr),Cr(Pr),xr(Pr,e)):Cr(gr),xr(gr,n)}var zr=null,Rr=null;function Wr(t){return function(e){try{return t(e)}catch(t){}}}function $r(t,e,n,r){this.tag=t,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=e,this.firstContextDependency=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function Qr(t,e,n,r){return new $r(t,e,n,r)}function Yr(t){return!(!(t=t.prototype)||!t.isReactComponent)}function Xr(t,e){var n=t.alternate;return null===n?((n=Qr(t.tag,e,t.key,t.mode)).elementType=t.elementType,n.type=t.type,n.stateNode=t.stateNode,n.alternate=t,t.alternate=n):(n.pendingProps=e,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=t.childExpirationTime,n.expirationTime=t.expirationTime,n.child=t.child,n.memoizedProps=t.memoizedProps,n.memoizedState=t.memoizedState,n.updateQueue=t.updateQueue,n.firstContextDependency=t.firstContextDependency,n.sibling=t.sibling,n.index=t.index,n.ref=t.ref,n}function Kr(t,e,n,r,o,i){var l=2;if(r=t,"function"==typeof t)Yr(t)&&(l=1);else if("string"==typeof t)l=5;else t:switch(t){case Vt:return kr(n.children,o,i,e);case te:return Zr(n,3|o,i,e);case Gt:return Zr(n,2|o,i,e);case qt:return(t=Qr(12,n,e,4|o)).elementType=qt,t.type=qt,t.expirationTime=i,t;case ne:return(t=Qr(13,n,e,o)).elementType=ne,t.type=ne,t.expirationTime=i,t;default:if("object"==typeof t&&null!==t)switch(t.$$typeof){case Bt:l=10;break t;case Ht:l=9;break t;case ee:l=11;break t;case re:l=14;break t;case oe:l=16,r=null;break t}a("130",null==t?t:typeof t,"")}return(e=Qr(l,n,e,o)).elementType=t,e.type=r,e.expirationTime=i,e}function kr(t,e,n,r){return(t=Qr(7,t,r,e)).expirationTime=n,t}function Zr(t,e,n,r){return t=Qr(8,t,r,e),e=0==(1&e)?Gt:te,t.elementType=e,t.type=e,t.expirationTime=n,t}function Jr(t,e,n){return(t=Qr(6,t,null,e)).expirationTime=n,t}function Vr(t,e,n){return(e=Qr(4,null!==t.children?t.children:[],t.key,e)).expirationTime=n,e.stateNode={containerInfo:t.containerInfo,pendingChildren:null,implementation:t.implementation},e}function Gr(t,e){t.didError=!1;var n=t.earliestPendingTime;0===n?t.earliestPendingTime=t.latestPendingTime=e:n<e?t.earliestPendingTime=e:t.latestPendingTime>e&&(t.latestPendingTime=e),Hr(e,t)}function qr(t,e){t.didError=!1,t.latestPingedTime>=e&&(t.latestPingedTime=0);var n=t.earliestPendingTime,r=t.latestPendingTime;n===e?t.earliestPendingTime=r===e?t.latestPendingTime=0:r:r===e&&(t.latestPendingTime=n),n=t.earliestSuspendedTime,r=t.latestSuspendedTime,0===n?t.earliestSuspendedTime=t.latestSuspendedTime=e:n<e?t.earliestSuspendedTime=e:r>e&&(t.latestSuspendedTime=e),Hr(e,t)}function Br(t,e){var n=t.earliestPendingTime;return n>e&&(e=n),(t=t.earliestSuspendedTime)>e&&(e=t),e}function Hr(t,e){var n=e.earliestSuspendedTime,r=e.latestSuspendedTime,o=e.earliestPendingTime,i=e.latestPingedTime;0===(o=0!==o?o:i)&&(0===t||r<t)&&(o=r),0!==(t=o)&&n>t&&(t=n),e.nextExpirationTimeToWorkOn=o,e.expirationTime=t}var to=!1;function eo(t){return{baseState:t,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function no(t){return{baseState:t.baseState,firstUpdate:t.firstUpdate,lastUpdate:t.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function ro(t){return{expirationTime:t,tag:0,payload:null,callback:null,next:null,nextEffect:null}}function oo(t,e){null===t.lastUpdate?t.firstUpdate=t.lastUpdate=e:(t.lastUpdate.next=e,t.lastUpdate=e)}function io(t,e){var n=t.alternate;if(null===n){var r=t.updateQueue,o=null;null===r&&(r=t.updateQueue=eo(t.memoizedState))}else r=t.updateQueue,o=n.updateQueue,null===r?null===o?(r=t.updateQueue=eo(t.memoizedState),o=n.updateQueue=eo(n.memoizedState)):r=t.updateQueue=no(o):null===o&&(o=n.updateQueue=no(r));null===o||r===o?oo(r,e):null===r.lastUpdate||null===o.lastUpdate?(oo(r,e),oo(o,e)):(oo(r,e),o.lastUpdate=e)}function ao(t,e){var n=t.updateQueue;null===(n=null===n?t.updateQueue=eo(t.memoizedState):lo(t,n)).lastCapturedUpdate?n.firstCapturedUpdate=n.lastCapturedUpdate=e:(n.lastCapturedUpdate.next=e,n.lastCapturedUpdate=e)}function lo(t,e){var n=t.alternate;return null!==n&&e===n.updateQueue&&(e=t.updateQueue=no(e)),e}function uo(t,e,n,r,i,a){switch(n.tag){case 1:return"function"==typeof(t=n.payload)?t.call(a,r,i):t;case 3:t.effectTag=-2049&t.effectTag|64;case 0:if(null==(i="function"==typeof(t=n.payload)?t.call(a,r,i):t))break;return o({},r,i);case 2:to=!0}return r}function co(t,e,n,r,o){to=!1;for(var i=(e=lo(t,e)).baseState,a=null,l=0,u=e.firstUpdate,c=i;null!==u;){var s=u.expirationTime;s<o?(null===a&&(a=u,i=c),l<s&&(l=s)):(c=uo(t,0,u,c,n,r),null!==u.callback&&(t.effectTag|=32,u.nextEffect=null,null===e.lastEffect?e.firstEffect=e.lastEffect=u:(e.lastEffect.nextEffect=u,e.lastEffect=u))),u=u.next}for(s=null,u=e.firstCapturedUpdate;null!==u;){var p=u.expirationTime;p<o?(null===s&&(s=u,null===a&&(i=c)),l<p&&(l=p)):(c=uo(t,0,u,c,n,r),null!==u.callback&&(t.effectTag|=32,u.nextEffect=null,null===e.lastCapturedEffect?e.firstCapturedEffect=e.lastCapturedEffect=u:(e.lastCapturedEffect.nextEffect=u,e.lastCapturedEffect=u))),u=u.next}null===a&&(e.lastUpdate=null),null===s?e.lastCapturedUpdate=null:t.effectTag|=32,null===a&&null===s&&(i=c),e.baseState=i,e.firstUpdate=a,e.firstCapturedUpdate=s,t.expirationTime=l,t.memoizedState=c}function so(t,e,n){null!==e.firstCapturedUpdate&&(null!==e.lastUpdate&&(e.lastUpdate.next=e.firstCapturedUpdate,e.lastUpdate=e.lastCapturedUpdate),e.firstCapturedUpdate=e.lastCapturedUpdate=null),po(e.firstEffect,n),e.firstEffect=e.lastEffect=null,po(e.firstCapturedEffect,n),e.firstCapturedEffect=e.lastCapturedEffect=null}function po(t,e){for(;null!==t;){var n=t.callback;if(null!==n){t.callback=null;var r=e;"function"!=typeof n&&a("191",n),n.call(r)}t=t.nextEffect}}function fo(t,e){return{value:t,source:e,stack:ue(e)}}var yo={current:null},mo=null,vo=null,ho=null;function wo(t,e){var n=t.type._context;xr(yo,n._currentValue),n._currentValue=e}function Eo(t){var e=yo.current;Cr(yo),t.type._context._currentValue=e}function bo(t){mo=t,ho=vo=null,t.firstContextDependency=null}function _o(t,e){return ho!==t&&!1!==e&&0!==e&&("number"==typeof e&&1073741823!==e||(ho=t,e=1073741823),e={context:t,observedBits:e,next:null},null===vo?(null===mo&&a("293"),mo.firstContextDependency=vo=e):vo=vo.next=e),t._currentValue}var To={},So={current:To},Co={current:To},xo={current:To};function Oo(t){return t===To&&a("174"),t}function Po(t,e){xr(xo,e),xr(Co,t),xr(So,To);var n=e.nodeType;switch(n){case 9:case 11:e=(e=e.documentElement)?e.namespaceURI:tr(null,"");break;default:e=tr(e=(n=8===n?e.parentNode:e).namespaceURI||null,n=n.tagName)}Cr(So),xr(So,e)}function go(t){Cr(So),Cr(Co),Cr(xo)}function No(t){Oo(xo.current);var e=Oo(So.current),n=tr(e,t.type);e!==n&&(xr(Co,t),xr(So,n))}function jo(t){Co.current===t&&(Cr(So),Cr(Co))}function Do(t,e){if(t&&t.defaultProps)for(var n in e=o({},e),t=t.defaultProps)void 0===e[n]&&(e[n]=t[n]);return e}var Mo=Xt.ReactCurrentOwner,Fo=(new r.Component).refs;function Uo(t,e,n,r){n=null==(n=n(r,e=t.memoizedState))?e:o({},e,n),t.memoizedState=n,null!==(r=t.updateQueue)&&0===t.expirationTime&&(r.baseState=n)}var Lo={isMounted:function(t){return!!(t=t._reactInternalFiber)&&2===en(t)},enqueueSetState:function(t,e,n){t=t._reactInternalFiber;var r=Oa(),o=ro(r=Bi(r,t));o.payload=e,null!=n&&(o.callback=n),Zi(),io(t,o),ea(t,r)},enqueueReplaceState:function(t,e,n){t=t._reactInternalFiber;var r=Oa(),o=ro(r=Bi(r,t));o.tag=1,o.payload=e,null!=n&&(o.callback=n),Zi(),io(t,o),ea(t,r)},enqueueForceUpdate:function(t,e){t=t._reactInternalFiber;var n=Oa(),r=ro(n=Bi(n,t));r.tag=2,null!=e&&(r.callback=e),Zi(),io(t,r),ea(t,n)}};function Io(t,e,n,r,o,i,a){return"function"==typeof(t=t.stateNode).shouldComponentUpdate?t.shouldComponentUpdate(r,i,a):!e.prototype||!e.prototype.isPureReactComponent||(!tn(n,r)||!tn(o,i))}function Ao(t,e,n){var r=!1,o=Or,i=e.contextType;return"object"==typeof i&&null!==i?i=Mo.currentDispatcher.readContext(i):(o=Dr(e)?Nr:Pr.current,i=(r=null!=(r=e.contextTypes))?jr(t,o):Or),e=new e(n,i),t.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,e.updater=Lo,t.stateNode=e,e._reactInternalFiber=t,r&&((t=t.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,t.__reactInternalMemoizedMaskedChildContext=i),e}function zo(t,e,n,r){t=e.state,"function"==typeof e.componentWillReceiveProps&&e.componentWillReceiveProps(n,r),"function"==typeof e.UNSAFE_componentWillReceiveProps&&e.UNSAFE_componentWillReceiveProps(n,r),e.state!==t&&Lo.enqueueReplaceState(e,e.state,null)}function Ro(t,e,n,r){var o=t.stateNode;o.props=n,o.state=t.memoizedState,o.refs=Fo;var i=e.contextType;"object"==typeof i&&null!==i?o.context=Mo.currentDispatcher.readContext(i):(i=Dr(e)?Nr:Pr.current,o.context=jr(t,i)),null!==(i=t.updateQueue)&&(co(t,i,n,o,r),o.state=t.memoizedState),"function"==typeof(i=e.getDerivedStateFromProps)&&(Uo(t,e,i,n),o.state=t.memoizedState),"function"==typeof e.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(e=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),e!==o.state&&Lo.enqueueReplaceState(o,o.state,null),null!==(i=t.updateQueue)&&(co(t,i,n,o,r),o.state=t.memoizedState)),"function"==typeof o.componentDidMount&&(t.effectTag|=4)}var Wo=Array.isArray;function $o(t,e,n){if(null!==(t=n.ref)&&"function"!=typeof t&&"object"!=typeof t){if(n._owner){n=n._owner;var r=void 0;n&&(1!==n.tag&&a("289"),r=n.stateNode),r||a("147",t);var o=""+t;return null!==e&&null!==e.ref&&"function"==typeof e.ref&&e.ref._stringRef===o?e.ref:((e=function(t){var e=r.refs;e===Fo&&(e=r.refs={}),null===t?delete e[o]:e[o]=t})._stringRef=o,e)}"string"!=typeof t&&a("284"),n._owner||a("290",t)}return t}function Qo(t,e){"textarea"!==t.type&&a("31","[object Object]"===Object.prototype.toString.call(e)?"object with keys {"+Object.keys(e).join(", ")+"}":e,"")}function Yo(t){function e(e,n){if(t){var r=e.lastEffect;null!==r?(r.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!t)return null;for(;null!==r;)e(n,r),r=r.sibling;return null}function r(t,e){for(t=new Map;null!==e;)null!==e.key?t.set(e.key,e):t.set(e.index,e),e=e.sibling;return t}function o(t,e,n){return(t=Xr(t,e)).index=0,t.sibling=null,t}function i(e,n,r){return e.index=r,t?null!==(r=e.alternate)?(r=r.index)<n?(e.effectTag=2,n):r:(e.effectTag=2,n):n}function l(e){return t&&null===e.alternate&&(e.effectTag=2),e}function u(t,e,n,r){return null===e||6!==e.tag?((e=Jr(n,t.mode,r)).return=t,e):((e=o(e,n)).return=t,e)}function c(t,e,n,r){return null!==e&&e.elementType===n.type?((r=o(e,n.props)).ref=$o(t,e,n),r.return=t,r):((r=Kr(n.type,n.key,n.props,null,t.mode,r)).ref=$o(t,e,n),r.return=t,r)}function s(t,e,n,r){return null===e||4!==e.tag||e.stateNode.containerInfo!==n.containerInfo||e.stateNode.implementation!==n.implementation?((e=Vr(n,t.mode,r)).return=t,e):((e=o(e,n.children||[])).return=t,e)}function p(t,e,n,r,i){return null===e||7!==e.tag?((e=kr(n,t.mode,r,i)).return=t,e):((e=o(e,n)).return=t,e)}function f(t,e,n){if("string"==typeof e||"number"==typeof e)return(e=Jr(""+e,t.mode,n)).return=t,e;if("object"==typeof e&&null!==e){switch(e.$$typeof){case Zt:return(n=Kr(e.type,e.key,e.props,null,t.mode,n)).ref=$o(t,null,e),n.return=t,n;case Jt:return(e=Vr(e,t.mode,n)).return=t,e}if(Wo(e)||ae(e))return(e=kr(e,t.mode,n,null)).return=t,e;Qo(t,e)}return null}function d(t,e,n,r){var o=null!==e?e.key:null;if("string"==typeof n||"number"==typeof n)return null!==o?null:u(t,e,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case Zt:return n.key===o?n.type===Vt?p(t,e,n.props.children,r,o):c(t,e,n,r):null;case Jt:return n.key===o?s(t,e,n,r):null}if(Wo(n)||ae(n))return null!==o?null:p(t,e,n,r,null);Qo(t,n)}return null}function y(t,e,n,r,o){if("string"==typeof r||"number"==typeof r)return u(e,t=t.get(n)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case Zt:return t=t.get(null===r.key?n:r.key)||null,r.type===Vt?p(e,t,r.props.children,o,r.key):c(e,t,r,o);case Jt:return s(e,t=t.get(null===r.key?n:r.key)||null,r,o)}if(Wo(r)||ae(r))return p(e,t=t.get(n)||null,r,o,null);Qo(e,r)}return null}function m(o,a,l,u){for(var c=null,s=null,p=a,m=a=0,v=null;null!==p&&m<l.length;m++){p.index>m?(v=p,p=null):v=p.sibling;var h=d(o,p,l[m],u);if(null===h){null===p&&(p=v);break}t&&p&&null===h.alternate&&e(o,p),a=i(h,a,m),null===s?c=h:s.sibling=h,s=h,p=v}if(m===l.length)return n(o,p),c;if(null===p){for(;m<l.length;m++)(p=f(o,l[m],u))&&(a=i(p,a,m),null===s?c=p:s.sibling=p,s=p);return c}for(p=r(o,p);m<l.length;m++)(v=y(p,o,m,l[m],u))&&(t&&null!==v.alternate&&p.delete(null===v.key?m:v.key),a=i(v,a,m),null===s?c=v:s.sibling=v,s=v);return t&&p.forEach(function(t){return e(o,t)}),c}function v(o,l,u,c){var s=ae(u);"function"!=typeof s&&a("150"),null==(u=s.call(u))&&a("151");for(var p=s=null,m=l,v=l=0,h=null,w=u.next();null!==m&&!w.done;v++,w=u.next()){m.index>v?(h=m,m=null):h=m.sibling;var E=d(o,m,w.value,c);if(null===E){m||(m=h);break}t&&m&&null===E.alternate&&e(o,m),l=i(E,l,v),null===p?s=E:p.sibling=E,p=E,m=h}if(w.done)return n(o,m),s;if(null===m){for(;!w.done;v++,w=u.next())null!==(w=f(o,w.value,c))&&(l=i(w,l,v),null===p?s=w:p.sibling=w,p=w);return s}for(m=r(o,m);!w.done;v++,w=u.next())null!==(w=y(m,o,v,w.value,c))&&(t&&null!==w.alternate&&m.delete(null===w.key?v:w.key),l=i(w,l,v),null===p?s=w:p.sibling=w,p=w);return t&&m.forEach(function(t){return e(o,t)}),s}return function(t,r,i,u){var c="object"==typeof i&&null!==i&&i.type===Vt&&null===i.key;c&&(i=i.props.children);var s="object"==typeof i&&null!==i;if(s)switch(i.$$typeof){case Zt:t:{for(s=i.key,c=r;null!==c;){if(c.key===s){if(7===c.tag?i.type===Vt:c.elementType===i.type){n(t,c.sibling),(r=o(c,i.type===Vt?i.props.children:i.props)).ref=$o(t,c,i),r.return=t,t=r;break t}n(t,c);break}e(t,c),c=c.sibling}i.type===Vt?((r=kr(i.props.children,t.mode,u,i.key)).return=t,t=r):((u=Kr(i.type,i.key,i.props,null,t.mode,u)).ref=$o(t,r,i),u.return=t,t=u)}return l(t);case Jt:t:{for(c=i.key;null!==r;){if(r.key===c){if(4===r.tag&&r.stateNode.containerInfo===i.containerInfo&&r.stateNode.implementation===i.implementation){n(t,r.sibling),(r=o(r,i.children||[])).return=t,t=r;break t}n(t,r);break}e(t,r),r=r.sibling}(r=Vr(i,t.mode,u)).return=t,t=r}return l(t)}if("string"==typeof i||"number"==typeof i)return i=""+i,null!==r&&6===r.tag?(n(t,r.sibling),(r=o(r,i)).return=t,t=r):(n(t,r),(r=Jr(i,t.mode,u)).return=t,t=r),l(t);if(Wo(i))return m(t,r,i,u);if(ae(i))return v(t,r,i,u);if(s&&Qo(t,i),void 0===i&&!c)switch(t.tag){case 1:case 0:a("152",(u=t.type).displayName||u.name||"Component")}return n(t,r)}}var Xo=Yo(!0),Ko=Yo(!1),ko=null,Zo=null,Jo=!1;function Vo(t,e){var n=Qr(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=e,n.return=t,n.effectTag=8,null!==t.lastEffect?(t.lastEffect.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n}function Go(t,e){switch(t.tag){case 5:var n=t.type;return null!==(e=1!==e.nodeType||n.toLowerCase()!==e.nodeName.toLowerCase()?null:e)&&(t.stateNode=e,!0);case 6:return null!==(e=""===t.pendingProps||3!==e.nodeType?null:e)&&(t.stateNode=e,!0);default:return!1}}function qo(t){if(Jo){var e=Zo;if(e){var n=e;if(!Go(t,e)){if(!(e=br(n))||!Go(t,e))return t.effectTag|=2,Jo=!1,void(ko=t);Vo(ko,n)}ko=t,Zo=_r(e)}else t.effectTag|=2,Jo=!1,ko=t}}function Bo(t){for(t=t.return;null!==t&&5!==t.tag&&3!==t.tag;)t=t.return;ko=t}function Ho(t){if(t!==ko)return!1;if(!Jo)return Bo(t),Jo=!0,!1;var e=t.type;if(5!==t.tag||"head"!==e&&"body"!==e&&!hr(e,t.memoizedProps))for(e=Zo;e;)Vo(t,e),e=br(e);return Bo(t),Zo=ko?br(t.stateNode):null,!0}function ti(){Zo=ko=null,Jo=!1}var ei=Xt.ReactCurrentOwner;function ni(t,e,n,r){e.child=null===t?Ko(e,null,n,r):Xo(e,t.child,n,r)}function ri(t,e,n,r,o){n=n.render;var i=e.ref;return bo(e),r=n(r,i),e.effectTag|=1,ni(t,e,r,o),e.child}function oi(t,e,n,r,o,i){if(null===t){var a=n.type;return"function"!=typeof a||Yr(a)||void 0!==a.defaultProps||null!==n.compare||void 0!==n.defaultProps?((t=Kr(n.type,null,r,null,e.mode,i)).ref=e.ref,t.return=e,e.child=t):(e.tag=15,e.type=a,ii(t,e,a,r,o,i))}return a=t.child,o<i&&(o=a.memoizedProps,(n=null!==(n=n.compare)?n:tn)(o,r)&&t.ref===e.ref)?fi(t,e,i):(e.effectTag|=1,(t=Xr(a,r)).ref=e.ref,t.return=e,e.child=t)}function ii(t,e,n,r,o,i){return null!==t&&o<i&&tn(t.memoizedProps,r)&&t.ref===e.ref?fi(t,e,i):li(t,e,n,r,i)}function ai(t,e){var n=e.ref;(null===t&&null!==n||null!==t&&t.ref!==n)&&(e.effectTag|=128)}function li(t,e,n,r,o){var i=Dr(n)?Nr:Pr.current;return i=jr(e,i),bo(e),n=n(r,i),e.effectTag|=1,ni(t,e,n,o),e.child}function ui(t,e,n,r,o){if(Dr(n)){var i=!0;Ir(e)}else i=!1;if(bo(e),null===e.stateNode)null!==t&&(t.alternate=null,e.alternate=null,e.effectTag|=2),Ao(e,n,r),Ro(e,n,r,o),r=!0;else if(null===t){var a=e.stateNode,l=e.memoizedProps;a.props=l;var u=a.context,c=n.contextType;"object"==typeof c&&null!==c?c=Mo.currentDispatcher.readContext(c):c=jr(e,c=Dr(n)?Nr:Pr.current);var s=n.getDerivedStateFromProps,p="function"==typeof s||"function"==typeof a.getSnapshotBeforeUpdate;p||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(l!==r||u!==c)&&zo(e,a,r,c),to=!1;var f=e.memoizedState;u=a.state=f;var d=e.updateQueue;null!==d&&(co(e,d,r,a,o),u=e.memoizedState),l!==r||f!==u||gr.current||to?("function"==typeof s&&(Uo(e,n,s,r),u=e.memoizedState),(l=to||Io(e,n,l,r,f,u,c))?(p||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||("function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount()),"function"==typeof a.componentDidMount&&(e.effectTag|=4)):("function"==typeof a.componentDidMount&&(e.effectTag|=4),e.memoizedProps=r,e.memoizedState=u),a.props=r,a.state=u,a.context=c,r=l):("function"==typeof a.componentDidMount&&(e.effectTag|=4),r=!1)}else a=e.stateNode,l=e.memoizedProps,a.props=e.type===e.elementType?l:Do(e.type,l),u=a.context,"object"==typeof(c=n.contextType)&&null!==c?c=Mo.currentDispatcher.readContext(c):c=jr(e,c=Dr(n)?Nr:Pr.current),(p="function"==typeof(s=n.getDerivedStateFromProps)||"function"==typeof a.getSnapshotBeforeUpdate)||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(l!==r||u!==c)&&zo(e,a,r,c),to=!1,u=e.memoizedState,f=a.state=u,null!==(d=e.updateQueue)&&(co(e,d,r,a,o),f=e.memoizedState),l!==r||u!==f||gr.current||to?("function"==typeof s&&(Uo(e,n,s,r),f=e.memoizedState),(s=to||Io(e,n,l,r,u,f,c))?(p||"function"!=typeof a.UNSAFE_componentWillUpdate&&"function"!=typeof a.componentWillUpdate||("function"==typeof a.componentWillUpdate&&a.componentWillUpdate(r,f,c),"function"==typeof a.UNSAFE_componentWillUpdate&&a.UNSAFE_componentWillUpdate(r,f,c)),"function"==typeof a.componentDidUpdate&&(e.effectTag|=4),"function"==typeof a.getSnapshotBeforeUpdate&&(e.effectTag|=256)):("function"!=typeof a.componentDidUpdate||l===t.memoizedProps&&u===t.memoizedState||(e.effectTag|=4),"function"!=typeof a.getSnapshotBeforeUpdate||l===t.memoizedProps&&u===t.memoizedState||(e.effectTag|=256),e.memoizedProps=r,e.memoizedState=f),a.props=r,a.state=f,a.context=c,r=s):("function"!=typeof a.componentDidUpdate||l===t.memoizedProps&&u===t.memoizedState||(e.effectTag|=4),"function"!=typeof a.getSnapshotBeforeUpdate||l===t.memoizedProps&&u===t.memoizedState||(e.effectTag|=256),r=!1);return ci(t,e,n,r,i,o)}function ci(t,e,n,r,o,i){ai(t,e);var a=0!=(64&e.effectTag);if(!r&&!a)return o&&Ar(e,n,!1),fi(t,e,i);r=e.stateNode,ei.current=e;var l=a&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return e.effectTag|=1,null!==t&&a?(e.child=Xo(e,t.child,null,i),e.child=Xo(e,null,l,i)):ni(t,e,l,i),e.memoizedState=r.state,o&&Ar(e,n,!0),e.child}function si(t){var e=t.stateNode;e.pendingContext?Ur(0,e.pendingContext,e.pendingContext!==e.context):e.context&&Ur(0,e.context,!1),Po(t,e.containerInfo)}function pi(t,e,n){var r=e.mode,o=e.pendingProps,i=e.memoizedState;if(0==(64&e.effectTag)){i=null;var a=!1}else i={timedOutAt:null!==i?i.timedOutAt:0},a=!0,e.effectTag&=-65;if(null===t)if(a){var l=o.fallback;t=kr(null,r,0,null),0==(1&e.mode)&&(t.child=null!==e.memoizedState?e.child.child:e.child),r=kr(l,r,n,null),t.sibling=r,(n=t).return=r.return=e}else n=r=Ko(e,null,o.children,n);else null!==t.memoizedState?(l=(r=t.child).sibling,a?(n=o.fallback,o=Xr(r,r.pendingProps),0==(1&e.mode)&&((a=null!==e.memoizedState?e.child.child:e.child)!==r.child&&(o.child=a)),r=o.sibling=Xr(l,n,l.expirationTime),n=o,o.childExpirationTime=0,n.return=r.return=e):n=r=Xo(e,r.child,o.children,n)):(l=t.child,a?(a=o.fallback,(o=kr(null,r,0,null)).child=l,0==(1&e.mode)&&(o.child=null!==e.memoizedState?e.child.child:e.child),(r=o.sibling=kr(a,r,n,null)).effectTag|=2,n=o,o.childExpirationTime=0,n.return=r.return=e):r=n=Xo(e,l,o.children,n)),e.stateNode=t.stateNode;return e.memoizedState=i,e.child=n,r}function fi(t,e,n){if(null!==t&&(e.firstContextDependency=t.firstContextDependency),e.childExpirationTime<n)return null;if(null!==t&&e.child!==t.child&&a("153"),null!==e.child){for(n=Xr(t=e.child,t.pendingProps,t.expirationTime),e.child=n,n.return=e;null!==t.sibling;)t=t.sibling,(n=n.sibling=Xr(t,t.pendingProps,t.expirationTime)).return=e;n.sibling=null}return e.child}function di(t,e,n){var r=e.expirationTime;if(null!==t&&t.memoizedProps===e.pendingProps&&!gr.current&&r<n){switch(e.tag){case 3:si(e),ti();break;case 5:No(e);break;case 1:Dr(e.type)&&Ir(e);break;case 4:Po(e,e.stateNode.containerInfo);break;case 10:wo(e,e.memoizedProps.value);break;case 13:if(null!==e.memoizedState)return 0!==(r=e.child.childExpirationTime)&&r>=n?pi(t,e,n):null!==(e=fi(t,e,n))?e.sibling:null}return fi(t,e,n)}switch(e.expirationTime=0,e.tag){case 2:r=e.elementType,null!==t&&(t.alternate=null,e.alternate=null,e.effectTag|=2),t=e.pendingProps;var o=jr(e,Pr.current);if(bo(e),o=r(t,o),e.effectTag|=1,"object"==typeof o&&null!==o&&"function"==typeof o.render&&void 0===o.$$typeof){if(e.tag=1,Dr(r)){var i=!0;Ir(e)}else i=!1;e.memoizedState=null!==o.state&&void 0!==o.state?o.state:null;var l=r.getDerivedStateFromProps;"function"==typeof l&&Uo(e,r,l,t),o.updater=Lo,e.stateNode=o,o._reactInternalFiber=e,Ro(e,r,t,n),e=ci(null,e,r,!0,i,n)}else e.tag=0,ni(null,e,o,n),e=e.child;return e;case 16:switch(o=e.elementType,null!==t&&(t.alternate=null,e.alternate=null,e.effectTag|=2),i=e.pendingProps,t=function(t){var e=t._result;switch(t._status){case 1:return e;case 2:case 0:throw e;default:throw t._status=0,(e=(e=t._ctor)()).then(function(e){0===t._status&&(e=e.default,t._status=1,t._result=e)},function(e){0===t._status&&(t._status=2,t._result=e)}),t._result=e,e}}(o),e.type=t,o=e.tag=function(t){if("function"==typeof t)return Yr(t)?1:0;if(null!=t){if((t=t.$$typeof)===ee)return 11;if(t===re)return 14}return 2}(t),i=Do(t,i),l=void 0,o){case 0:l=li(null,e,t,i,n);break;case 1:l=ui(null,e,t,i,n);break;case 11:l=ri(null,e,t,i,n);break;case 14:l=oi(null,e,t,Do(t.type,i),r,n);break;default:a("306",t,"")}return l;case 0:return r=e.type,o=e.pendingProps,li(t,e,r,o=e.elementType===r?o:Do(r,o),n);case 1:return r=e.type,o=e.pendingProps,ui(t,e,r,o=e.elementType===r?o:Do(r,o),n);case 3:return si(e),null===(r=e.updateQueue)&&a("282"),o=null!==(o=e.memoizedState)?o.element:null,co(e,r,e.pendingProps,null,n),(r=e.memoizedState.element)===o?(ti(),e=fi(t,e,n)):(o=e.stateNode,(o=(null===t||null===t.child)&&o.hydrate)&&(Zo=_r(e.stateNode.containerInfo),ko=e,o=Jo=!0),o?(e.effectTag|=2,e.child=Ko(e,null,r,n)):(ni(t,e,r,n),ti()),e=e.child),e;case 5:return No(e),null===t&&qo(e),r=e.type,o=e.pendingProps,i=null!==t?t.memoizedProps:null,l=o.children,hr(r,o)?l=null:null!==i&&hr(r,i)&&(e.effectTag|=16),ai(t,e),1!==n&&1&e.mode&&o.hidden?(e.expirationTime=1,e=null):(ni(t,e,l,n),e=e.child),e;case 6:return null===t&&qo(e),null;case 13:return pi(t,e,n);case 4:return Po(e,e.stateNode.containerInfo),r=e.pendingProps,null===t?e.child=Xo(e,null,r,n):ni(t,e,r,n),e.child;case 11:return r=e.type,o=e.pendingProps,ri(t,e,r,o=e.elementType===r?o:Do(r,o),n);case 7:return ni(t,e,e.pendingProps,n),e.child;case 8:case 12:return ni(t,e,e.pendingProps.children,n),e.child;case 10:t:{if(r=e.type._context,o=e.pendingProps,l=e.memoizedProps,wo(e,i=o.value),null!==l){var u=l.value;if(0===(i=u===i&&(0!==u||1/u==1/i)||u!=u&&i!=i?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,i):1073741823))){if(l.children===o.children&&!gr.current){e=fi(t,e,n);break t}}else for(null!==(l=e.child)&&(l.return=e);null!==l;){if(null!==(u=l.firstContextDependency))do{if(u.context===r&&0!=(u.observedBits&i)){if(1===l.tag){var c=ro(n);c.tag=2,io(l,c)}l.expirationTime<n&&(l.expirationTime=n),null!==(c=l.alternate)&&c.expirationTime<n&&(c.expirationTime=n);for(var s=l.return;null!==s;){if(c=s.alternate,s.childExpirationTime<n)s.childExpirationTime=n,null!==c&&c.childExpirationTime<n&&(c.childExpirationTime=n);else{if(!(null!==c&&c.childExpirationTime<n))break;c.childExpirationTime=n}s=s.return}}c=l.child,u=u.next}while(null!==u);else c=10===l.tag&&l.type===e.type?null:l.child;if(null!==c)c.return=l;else for(c=l;null!==c;){if(c===e){c=null;break}if(null!==(l=c.sibling)){l.return=c.return,c=l;break}c=c.return}l=c}}ni(t,e,o.children,n),e=e.child}return e;case 9:return o=e.type,r=(i=e.pendingProps).children,bo(e),r=r(o=_o(o,i.unstable_observedBits)),e.effectTag|=1,ni(t,e,r,n),e.child;case 14:return i=Do(o=e.type,e.pendingProps),oi(t,e,o,i=Do(o.type,i),r,n);case 15:return ii(t,e,e.type,e.pendingProps,r,n);case 17:return r=e.type,o=e.pendingProps,o=e.elementType===r?o:Do(r,o),null!==t&&(t.alternate=null,e.alternate=null,e.effectTag|=2),e.tag=1,Dr(r)?(t=!0,Ir(e)):t=!1,bo(e),Ao(e,r,o),Ro(e,r,o,n),ci(null,e,r,!0,t,n);default:a("156")}}function yi(t){t.effectTag|=4}var mi=void 0,vi=void 0,hi=void 0,wi=void 0;mi=function(t,e){for(var n=e.child;null!==n;){if(5===n.tag||6===n.tag)t.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},vi=function(){},hi=function(t,e,n,r,i){var a=t.memoizedProps;if(a!==r){var l=e.stateNode;switch(Oo(So.current),t=null,n){case"input":a=Ee(l,a),r=Ee(l,r),t=[];break;case"option":a=kn(l,a),r=kn(l,r),t=[];break;case"select":a=o({},a,{value:void 0}),r=o({},r,{value:void 0}),t=[];break;case"textarea":a=Jn(l,a),r=Jn(l,r),t=[];break;default:"function"!=typeof a.onClick&&"function"==typeof r.onClick&&(l.onclick=dr)}sr(n,r),l=n=void 0;var u=null;for(n in a)if(!r.hasOwnProperty(n)&&a.hasOwnProperty(n)&&null!=a[n])if("style"===n){var c=a[n];for(l in c)c.hasOwnProperty(l)&&(u||(u={}),u[l]="")}else"dangerouslySetInnerHTML"!==n&&"children"!==n&&"suppressContentEditableWarning"!==n&&"suppressHydrationWarning"!==n&&"autoFocus"!==n&&(E.hasOwnProperty(n)?t||(t=[]):(t=t||[]).push(n,null));for(n in r){var s=r[n];if(c=null!=a?a[n]:void 0,r.hasOwnProperty(n)&&s!==c&&(null!=s||null!=c))if("style"===n)if(c){for(l in c)!c.hasOwnProperty(l)||s&&s.hasOwnProperty(l)||(u||(u={}),u[l]="");for(l in s)s.hasOwnProperty(l)&&c[l]!==s[l]&&(u||(u={}),u[l]=s[l])}else u||(t||(t=[]),t.push(n,u)),u=s;else"dangerouslySetInnerHTML"===n?(s=s?s.__html:void 0,c=c?c.__html:void 0,null!=s&&c!==s&&(t=t||[]).push(n,""+s)):"children"===n?c===s||"string"!=typeof s&&"number"!=typeof s||(t=t||[]).push(n,""+s):"suppressContentEditableWarning"!==n&&"suppressHydrationWarning"!==n&&(E.hasOwnProperty(n)?(null!=s&&fr(i,n),t||c===s||(t=[])):(t=t||[]).push(n,s))}u&&(t=t||[]).push("style",u),i=t,(e.updateQueue=i)&&yi(e)}},wi=function(t,e,n,r){n!==r&&yi(e)};var Ei="function"==typeof WeakSet?WeakSet:Set;function bi(t,e){var n=e.source,r=e.stack;null===r&&null!==n&&(r=ue(n)),null!==n&&le(n.type),e=e.value,null!==t&&1===t.tag&&le(t.type);try{console.error(e)}catch(t){setTimeout(function(){throw t})}}function _i(t){var e=t.ref;if(null!==e)if("function"==typeof e)try{e(null)}catch(e){qi(t,e)}else e.current=null}function Ti(t){switch("function"==typeof Rr&&Rr(t),t.tag){case 0:case 11:case 14:case 15:var e=t.updateQueue;if(null!==e&&null!==(e=e.lastEffect)){var n=e=e.next;do{var r=n.destroy;if(null!==r){var o=t;try{r()}catch(t){qi(o,t)}}n=n.next}while(n!==e)}break;case 1:if(_i(t),"function"==typeof(e=t.stateNode).componentWillUnmount)try{e.props=t.memoizedProps,e.state=t.memoizedState,e.componentWillUnmount()}catch(e){qi(t,e)}break;case 5:_i(t);break;case 4:xi(t)}}function Si(t){return 5===t.tag||3===t.tag||4===t.tag}function Ci(t){t:{for(var e=t.return;null!==e;){if(Si(e)){var n=e;break t}e=e.return}a("160"),n=void 0}var r=e=void 0;switch(n.tag){case 5:e=n.stateNode,r=!1;break;case 3:case 4:e=n.stateNode.containerInfo,r=!0;break;default:a("161")}16&n.effectTag&&(or(e,""),n.effectTag&=-17);t:e:for(n=t;;){for(;null===n.sibling;){if(null===n.return||Si(n.return)){n=null;break t}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag;){if(2&n.effectTag)continue e;if(null===n.child||4===n.tag)continue e;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break t}}for(var o=t;;){if(5===o.tag||6===o.tag)if(n)if(r){var i=e,l=o.stateNode,u=n;8===i.nodeType?i.parentNode.insertBefore(l,u):i.insertBefore(l,u)}else e.insertBefore(o.stateNode,n);else r?(l=e,u=o.stateNode,8===l.nodeType?(i=l.parentNode).insertBefore(u,l):(i=l).appendChild(u),null!=(l=l._reactRootContainer)||null!==i.onclick||(i.onclick=dr)):e.appendChild(o.stateNode);else if(4!==o.tag&&null!==o.child){o.child.return=o,o=o.child;continue}if(o===t)break;for(;null===o.sibling;){if(null===o.return||o.return===t)return;o=o.return}o.sibling.return=o.return,o=o.sibling}}function xi(t){for(var e=t,n=!1,r=void 0,o=void 0;;){if(!n){n=e.return;t:for(;;){switch(null===n&&a("160"),n.tag){case 5:r=n.stateNode,o=!1;break t;case 3:case 4:r=n.stateNode.containerInfo,o=!0;break t}n=n.return}n=!0}if(5===e.tag||6===e.tag){t:for(var i=e,l=i;;)if(Ti(l),null!==l.child&&4!==l.tag)l.child.return=l,l=l.child;else{if(l===i)break;for(;null===l.sibling;){if(null===l.return||l.return===i)break t;l=l.return}l.sibling.return=l.return,l=l.sibling}o?(i=r,l=e.stateNode,8===i.nodeType?i.parentNode.removeChild(l):i.removeChild(l)):r.removeChild(e.stateNode)}else if(4===e.tag?(r=e.stateNode.containerInfo,o=!0):Ti(e),null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break;for(;null===e.sibling;){if(null===e.return||e.return===t)return;4===(e=e.return).tag&&(n=!1)}e.sibling.return=e.return,e=e.sibling}}function Oi(t,e){switch(e.tag){case 0:case 11:case 14:case 15:case 1:break;case 5:var n=e.stateNode;if(null!=n){var r=e.memoizedProps;t=null!==t?t.memoizedProps:r;var o=e.type,i=e.updateQueue;e.updateQueue=null,null!==i&&function(t,e,n,r,o){t[U]=o,"input"===n&&"radio"===o.type&&null!=o.name&&_e(t,o),pr(n,r),r=pr(n,o);for(var i=0;i<e.length;i+=2){var a=e[i],l=e[i+1];"style"===a?ur(t,l):"dangerouslySetInnerHTML"===a?rr(t,l):"children"===a?or(t,l):he(t,a,l,r)}switch(n){case"input":Te(t,o);break;case"textarea":Gn(t,o);break;case"select":e=t._wrapperState.wasMultiple,t._wrapperState.wasMultiple=!!o.multiple,null!=(n=o.value)?Zn(t,!!o.multiple,n,!1):e!==!!o.multiple&&(null!=o.defaultValue?Zn(t,!!o.multiple,o.defaultValue,!0):Zn(t,!!o.multiple,o.multiple?[]:"",!1))}}(n,i,o,t,r)}break;case 6:null===e.stateNode&&a("162"),e.stateNode.nodeValue=e.memoizedProps;break;case 3:case 12:break;case 13:if(n=e.memoizedState,r=void 0,t=e,null===n?r=!1:(r=!0,t=e.child,0===n.timedOutAt&&(n.timedOutAt=Oa())),null!==t&&function(t,e){for(var n=t;;){if(5===n.tag){var r=n.stateNode;if(e)r.style.display="none";else{r=n.stateNode;var o=n.memoizedProps.style;o=null!=o&&o.hasOwnProperty("display")?o.display:null,r.style.display=lr("display",o)}}else if(6===n.tag)n.stateNode.nodeValue=e?"":n.memoizedProps;else{if(13===n.tag&&null!==n.memoizedState){(r=n.child.sibling).return=n,n=r;continue}if(null!==n.child){n.child.return=n,n=n.child;continue}}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}}(t,r),null!==(n=e.updateQueue)){e.updateQueue=null;var l=e.stateNode;null===l&&(l=e.stateNode=new Ei),n.forEach(function(t){var n=function(t,e){var n=t.stateNode;null!==n&&n.delete(e),e=Bi(e=Oa(),t),null!==(t=ta(t,e))&&(Gr(t,e),0!==(e=t.expirationTime)&&Pa(t,e))}.bind(null,e,t);l.has(t)||(l.add(t),t.then(n,n))})}break;case 17:break;default:a("163")}}var Pi="function"==typeof WeakMap?WeakMap:Map;function gi(t,e,n){(n=ro(n)).tag=3,n.payload={element:null};var r=e.value;return n.callback=function(){Ia(r),bi(t,e)},n}function Ni(t,e,n){(n=ro(n)).tag=3;var r=t.type.getDerivedStateFromError;if("function"==typeof r){var o=e.value;n.payload=function(){return r(o)}}var i=t.stateNode;return null!==i&&"function"==typeof i.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===Ki?Ki=new Set([this]):Ki.add(this));var n=e.value,o=e.stack;bi(t,e),this.componentDidCatch(n,{componentStack:null!==o?o:""})}),n}function ji(t){switch(t.tag){case 1:Dr(t.type)&&Mr();var e=t.effectTag;return 2048&e?(t.effectTag=-2049&e|64,t):null;case 3:return go(),Fr(),0!=(64&(e=t.effectTag))&&a("285"),t.effectTag=-2049&e|64,t;case 5:return jo(t),null;case 13:return 2048&(e=t.effectTag)?(t.effectTag=-2049&e|64,t):null;case 4:return go(),null;case 10:return Eo(t),null;default:return null}}var Di={readContext:_o},Mi=Xt.ReactCurrentOwner,Fi=1073741822,Ui=0,Li=!1,Ii=null,Ai=null,zi=0,Ri=-1,Wi=!1,$i=null,Qi=!1,Yi=null,Xi=null,Ki=null;function ki(){if(null!==Ii)for(var t=Ii.return;null!==t;){var e=t;switch(e.tag){case 1:var n=e.type.childContextTypes;null!=n&&Mr();break;case 3:go(),Fr();break;case 5:jo(e);break;case 4:go();break;case 10:Eo(e)}t=t.return}Ai=null,zi=0,Ri=-1,Wi=!1,Ii=null}function Zi(){null!==Xi&&(i.unstable_cancelCallback(Yi),Xi())}function Ji(t){for(;;){var e=t.alternate,n=t.return,r=t.sibling;if(0==(1024&t.effectTag)){Ii=t;t:{var i=e,l=zi,u=(e=t).pendingProps;switch(e.tag){case 2:case 16:break;case 15:case 0:break;case 1:Dr(e.type)&&Mr();break;case 3:go(),Fr(),(u=e.stateNode).pendingContext&&(u.context=u.pendingContext,u.pendingContext=null),null!==i&&null!==i.child||(Ho(e),e.effectTag&=-3),vi(e);break;case 5:jo(e);var c=Oo(xo.current);if(l=e.type,null!==i&&null!=e.stateNode)hi(i,e,l,u,c),i.ref!==e.ref&&(e.effectTag|=128);else if(u){var s=Oo(So.current);if(Ho(e)){i=(u=e).stateNode;var p=u.type,f=u.memoizedProps,d=c;switch(i[F]=u,i[U]=f,l=void 0,c=p){case"iframe":case"object":xn("load",i);break;case"video":case"audio":for(p=0;p<et.length;p++)xn(et[p],i);break;case"source":xn("error",i);break;case"img":case"image":case"link":xn("error",i),xn("load",i);break;case"form":xn("reset",i),xn("submit",i);break;case"details":xn("toggle",i);break;case"input":be(i,f),xn("invalid",i),fr(d,"onChange");break;case"select":i._wrapperState={wasMultiple:!!f.multiple},xn("invalid",i),fr(d,"onChange");break;case"textarea":Vn(i,f),xn("invalid",i),fr(d,"onChange")}for(l in sr(c,f),p=null,f)f.hasOwnProperty(l)&&(s=f[l],"children"===l?"string"==typeof s?i.textContent!==s&&(p=["children",s]):"number"==typeof s&&i.textContent!==""+s&&(p=["children",""+s]):E.hasOwnProperty(l)&&null!=s&&fr(d,l));switch(c){case"input":Qt(i),Se(i,f,!0);break;case"textarea":Qt(i),qn(i);break;case"select":case"option":break;default:"function"==typeof f.onClick&&(i.onclick=dr)}l=p,u.updateQueue=l,(u=null!==l)&&yi(e)}else{f=e,i=l,d=u,p=9===c.nodeType?c:c.ownerDocument,s===Bn.html&&(s=Hn(i)),s===Bn.html?"script"===i?((i=p.createElement("div")).innerHTML="<script><\/script>",p=i.removeChild(i.firstChild)):"string"==typeof d.is?p=p.createElement(i,{is:d.is}):(p=p.createElement(i),"select"===i&&d.multiple&&(p.multiple=!0)):p=p.createElementNS(s,i),(i=p)[F]=f,i[U]=u,mi(i,e,!1,!1),d=i;var y=c,m=pr(p=l,f=u);switch(p){case"iframe":case"object":xn("load",d),c=f;break;case"video":case"audio":for(c=0;c<et.length;c++)xn(et[c],d);c=f;break;case"source":xn("error",d),c=f;break;case"img":case"image":case"link":xn("error",d),xn("load",d),c=f;break;case"form":xn("reset",d),xn("submit",d),c=f;break;case"details":xn("toggle",d),c=f;break;case"input":be(d,f),c=Ee(d,f),xn("invalid",d),fr(y,"onChange");break;case"option":c=kn(d,f);break;case"select":d._wrapperState={wasMultiple:!!f.multiple},c=o({},f,{value:void 0}),xn("invalid",d),fr(y,"onChange");break;case"textarea":Vn(d,f),c=Jn(d,f),xn("invalid",d),fr(y,"onChange");break;default:c=f}sr(p,c),s=void 0;var v=p,h=d,w=c;for(s in w)if(w.hasOwnProperty(s)){var b=w[s];"style"===s?ur(h,b):"dangerouslySetInnerHTML"===s?null!=(b=b?b.__html:void 0)&&rr(h,b):"children"===s?"string"==typeof b?("textarea"!==v||""!==b)&&or(h,b):"number"==typeof b&&or(h,""+b):"suppressContentEditableWarning"!==s&&"suppressHydrationWarning"!==s&&"autoFocus"!==s&&(E.hasOwnProperty(s)?null!=b&&fr(y,s):null!=b&&he(h,s,b,m))}switch(p){case"input":Qt(d),Se(d,f,!1);break;case"textarea":Qt(d),qn(d);break;case"option":null!=f.value&&d.setAttribute("value",""+we(f.value));break;case"select":(c=d).multiple=!!f.multiple,null!=(d=f.value)?Zn(c,!!f.multiple,d,!1):null!=f.defaultValue&&Zn(c,!!f.multiple,f.defaultValue,!0);break;default:"function"==typeof c.onClick&&(d.onclick=dr)}(u=vr(l,u))&&yi(e),e.stateNode=i}null!==e.ref&&(e.effectTag|=128)}else null===e.stateNode&&a("166");break;case 6:i&&null!=e.stateNode?wi(i,e,i.memoizedProps,u):("string"!=typeof u&&(null===e.stateNode&&a("166")),i=Oo(xo.current),Oo(So.current),Ho(e)?(l=(u=e).stateNode,i=u.memoizedProps,l[F]=u,(u=l.nodeValue!==i)&&yi(e)):(l=e,(u=(9===i.nodeType?i:i.ownerDocument).createTextNode(u))[F]=e,l.stateNode=u));break;case 11:break;case 13:if(u=e.memoizedState,0!=(64&e.effectTag)){e.expirationTime=l,Ii=e;break t}u=null!==u,l=null!==i&&null!==i.memoizedState,null!==i&&!u&&l&&(null!==(i=i.child.sibling)&&(null!==(c=e.firstEffect)?(e.firstEffect=i,i.nextEffect=c):(e.firstEffect=e.lastEffect=i,i.nextEffect=null),i.effectTag=8)),(u!==l||0==(1&e.effectTag)&&u)&&(e.effectTag|=4);break;case 7:case 8:case 12:break;case 4:go(),vi(e);break;case 10:Eo(e);break;case 9:case 14:break;case 17:Dr(e.type)&&Mr();break;default:a("156")}Ii=null}if(e=t,1===zi||1!==e.childExpirationTime){for(u=0,l=e.child;null!==l;)(i=l.expirationTime)>u&&(u=i),(c=l.childExpirationTime)>u&&(u=c),l=l.sibling;e.childExpirationTime=u}if(null!==Ii)return Ii;null!==n&&0==(1024&n.effectTag)&&(null===n.firstEffect&&(n.firstEffect=t.firstEffect),null!==t.lastEffect&&(null!==n.lastEffect&&(n.lastEffect.nextEffect=t.firstEffect),n.lastEffect=t.lastEffect),1<t.effectTag&&(null!==n.lastEffect?n.lastEffect.nextEffect=t:n.firstEffect=t,n.lastEffect=t))}else{if(null!==(t=ji(t)))return t.effectTag&=1023,t;null!==n&&(n.firstEffect=n.lastEffect=null,n.effectTag|=1024)}if(null!==r)return r;if(null===n)break;t=n}return null}function Vi(t){var e=di(t.alternate,t,zi);return t.memoizedProps=t.pendingProps,null===e&&(e=Ji(t)),Mi.current=null,e}function Gi(t,e){Li&&a("243"),Zi(),Li=!0,Mi.currentDispatcher=Di;var n=t.nextExpirationTimeToWorkOn;n===zi&&t===Ai&&null!==Ii||(ki(),zi=n,Ii=Xr((Ai=t).current,null),t.pendingCommitExpirationTime=0);for(var r=!1;;){try{if(e)for(;null!==Ii&&!ja();)Ii=Vi(Ii);else for(;null!==Ii;)Ii=Vi(Ii)}catch(e){if(ho=vo=mo=null,null===Ii)r=!0,Ia(e);else{null===Ii&&a("271");var o=Ii,i=o.return;if(null!==i){t:{var l=t,u=i,c=o,s=e;if(i=zi,c.effectTag|=1024,c.firstEffect=c.lastEffect=null,null!==s&&"object"==typeof s&&"function"==typeof s.then){var p=s;s=u;var f=-1,d=-1;do{if(13===s.tag){var y=s.alternate;if(null!==y&&null!==(y=y.memoizedState)){d=10*(1073741822-y.timedOutAt);break}"number"==typeof(y=s.pendingProps.maxDuration)&&(0>=y?f=0:(-1===f||y<f)&&(f=y))}s=s.return}while(null!==s);s=u;do{if((y=13===s.tag)&&(y=void 0!==s.memoizedProps.fallback&&null===s.memoizedState),y){if(null===(u=s.updateQueue)?s.updateQueue=new Set([p]):u.add(p),0==(1&s.mode)){s.effectTag|=64,c.effectTag&=-1957,1===c.tag&&(null===c.alternate?c.tag=17:((i=ro(1073741823)).tag=2,io(c,i))),c.expirationTime=1073741823;break t}null===(c=l.pingCache)?(c=l.pingCache=new Pi,u=new Set,c.set(p,u)):void 0===(u=c.get(p))&&(u=new Set,c.set(p,u)),u.has(i)||(u.add(i),c=Hi.bind(null,l,p,i),p.then(c,c)),-1===f?l=1073741823:(-1===d&&(d=10*(1073741822-Br(l,i))-5e3),l=d+f),0<=l&&Ri<l&&(Ri=l),s.effectTag|=2048,s.expirationTime=i;break t}s=s.return}while(null!==s);s=Error((le(c.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+ue(c))}Wi=!0,s=fo(s,c),l=u;do{switch(l.tag){case 3:l.effectTag|=2048,l.expirationTime=i,ao(l,i=gi(l,s,i));break t;case 1:if(p=s,f=l.type,d=l.stateNode,0==(64&l.effectTag)&&("function"==typeof f.getDerivedStateFromError||null!==d&&"function"==typeof d.componentDidCatch&&(null===Ki||!Ki.has(d)))){l.effectTag|=2048,l.expirationTime=i,ao(l,i=Ni(l,p,i));break t}}l=l.return}while(null!==l)}Ii=Ji(o);continue}r=!0,Ia(e)}}break}if(Li=!1,ho=vo=mo=Mi.currentDispatcher=null,r)Ai=null,t.finishedWork=null;else if(null!==Ii)t.finishedWork=null;else{if(null===(r=t.current.alternate)&&a("281"),Ai=null,Wi){if(o=t.latestPendingTime,i=t.latestSuspendedTime,l=t.latestPingedTime,0!==o&&o<n||0!==i&&i<n||0!==l&&l<n)return qr(t,n),void xa(t,r,n,t.expirationTime,-1);if(!t.didError&&e)return t.didError=!0,n=t.nextExpirationTimeToWorkOn=n,e=t.expirationTime=1073741823,void xa(t,r,n,e,-1)}e&&-1!==Ri?(qr(t,n),(e=10*(1073741822-Br(t,n)))<Ri&&(Ri=e),e=10*(1073741822-Oa()),e=Ri-e,xa(t,r,n,t.expirationTime,0>e?0:e)):(t.pendingCommitExpirationTime=n,t.finishedWork=r)}}function qi(t,e){for(var n=t.return;null!==n;){switch(n.tag){case 1:var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Ki||!Ki.has(r)))return io(n,t=Ni(n,t=fo(e,t),1073741823)),void ea(n,1073741823);break;case 3:return io(n,t=gi(n,t=fo(e,t),1073741823)),void ea(n,1073741823)}n=n.return}3===t.tag&&(io(t,n=gi(t,n=fo(e,t),1073741823)),ea(t,1073741823))}function Bi(t,e){return 0!==Ui?t=Ui:Li?t=Qi?1073741823:zi:1&e.mode?(t=ma?1073741822-10*(1+((1073741822-t+15)/10|0)):1073741822-25*(1+((1073741822-t+500)/25|0)),null!==Ai&&t===zi&&--t):t=1073741823,ma&&(0===sa||t<sa)&&(sa=t),t}function Hi(t,e,n){var r=t.pingCache;null!==r&&r.delete(e),null!==Ai&&zi===n?Ai=null:(e=t.earliestSuspendedTime,r=t.latestSuspendedTime,0!==e&&n<=e&&n>=r&&(t.didError=!1,(0===(e=t.latestPingedTime)||e>n)&&(t.latestPingedTime=n),Hr(n,t),0!==(n=t.expirationTime)&&Pa(t,n)))}function ta(t,e){t.expirationTime<e&&(t.expirationTime=e);var n=t.alternate;null!==n&&n.expirationTime<e&&(n.expirationTime=e);var r=t.return,o=null;if(null===r&&3===t.tag)o=t.stateNode;else for(;null!==r;){if(n=r.alternate,r.childExpirationTime<e&&(r.childExpirationTime=e),null!==n&&n.childExpirationTime<e&&(n.childExpirationTime=e),null===r.return&&3===r.tag){o=r.stateNode;break}r=r.return}return o}function ea(t,e){null!==(t=ta(t,e))&&(!Li&&0!==zi&&e>zi&&ki(),Gr(t,e),Li&&!Qi&&Ai===t||Pa(t,t.expirationTime),_a>ba&&(_a=0,a("185")))}function na(t,e,n,r,o){var i=Ui;Ui=1073741823;try{return t(e,n,r,o)}finally{Ui=i}}var ra=null,oa=null,ia=0,aa=void 0,la=!1,ua=null,ca=0,sa=0,pa=!1,fa=null,da=!1,ya=!1,ma=!1,va=null,ha=i.unstable_now(),wa=1073741822-(ha/10|0),Ea=wa,ba=50,_a=0,Ta=null;function Sa(){wa=1073741822-((i.unstable_now()-ha)/10|0)}function Ca(t,e){if(0!==ia){if(e<ia)return;null!==aa&&i.unstable_cancelCallback(aa)}ia=e,t=i.unstable_now()-ha,aa=i.unstable_scheduleCallback(Da,{timeout:10*(1073741822-e)-t})}function xa(t,e,n,r,o){t.expirationTime=r,0!==o||ja()?0<o&&(t.timeoutHandle=wr(function(t,e,n){t.pendingCommitExpirationTime=n,t.finishedWork=e,Sa(),Ea=wa,Fa(t,n)}.bind(null,t,e,n),o)):(t.pendingCommitExpirationTime=n,t.finishedWork=e)}function Oa(){return la?Ea:(ga(),0!==ca&&1!==ca||(Sa(),Ea=wa),Ea)}function Pa(t,e){null===t.nextScheduledRoot?(t.expirationTime=e,null===oa?(ra=oa=t,t.nextScheduledRoot=t):(oa=oa.nextScheduledRoot=t).nextScheduledRoot=ra):e>t.expirationTime&&(t.expirationTime=e),la||(da?ya&&(ua=t,ca=1073741823,Ua(t,1073741823,!1)):1073741823===e?Ma(1073741823,!1):Ca(t,e))}function ga(){var t=0,e=null;if(null!==oa)for(var n=oa,r=ra;null!==r;){var o=r.expirationTime;if(0===o){if((null===n||null===oa)&&a("244"),r===r.nextScheduledRoot){ra=oa=r.nextScheduledRoot=null;break}if(r===ra)ra=o=r.nextScheduledRoot,oa.nextScheduledRoot=o,r.nextScheduledRoot=null;else{if(r===oa){(oa=n).nextScheduledRoot=ra,r.nextScheduledRoot=null;break}n.nextScheduledRoot=r.nextScheduledRoot,r.nextScheduledRoot=null}r=n.nextScheduledRoot}else{if(o>t&&(t=o,e=r),r===oa)break;if(1073741823===t)break;n=r,r=r.nextScheduledRoot}}ua=e,ca=t}var Na=!1;function ja(){return!!Na||!!i.unstable_shouldYield()&&(Na=!0)}function Da(){try{if(!ja()&&null!==ra){Sa();var t=ra;do{var e=t.expirationTime;0!==e&&wa<=e&&(t.nextExpirationTimeToWorkOn=wa),t=t.nextScheduledRoot}while(t!==ra)}Ma(0,!0)}finally{Na=!1}}function Ma(t,e){if(ga(),e)for(Sa(),Ea=wa;null!==ua&&0!==ca&&t<=ca&&!(Na&&wa>ca);)Ua(ua,ca,wa>ca),ga(),Sa(),Ea=wa;else for(;null!==ua&&0!==ca&&t<=ca;)Ua(ua,ca,!1),ga();if(e&&(ia=0,aa=null),0!==ca&&Ca(ua,ca),_a=0,Ta=null,null!==va)for(t=va,va=null,e=0;e<t.length;e++){var n=t[e];try{n._onComplete()}catch(t){pa||(pa=!0,fa=t)}}if(pa)throw t=fa,fa=null,pa=!1,t}function Fa(t,e){la&&a("253"),ua=t,ca=e,Ua(t,e,!1),Ma(1073741823,!1)}function Ua(t,e,n){if(la&&a("245"),la=!0,n){var r=t.finishedWork;null!==r?La(t,r,e):(t.finishedWork=null,-1!==(r=t.timeoutHandle)&&(t.timeoutHandle=-1,Er(r)),Gi(t,n),null!==(r=t.finishedWork)&&(ja()?t.finishedWork=r:La(t,r,e)))}else null!==(r=t.finishedWork)?La(t,r,e):(t.finishedWork=null,-1!==(r=t.timeoutHandle)&&(t.timeoutHandle=-1,Er(r)),Gi(t,n),null!==(r=t.finishedWork)&&La(t,r,e));la=!1}function La(t,e,n){var r=t.firstBatch;if(null!==r&&r._expirationTime>=n&&(null===va?va=[r]:va.push(r),r._defer))return t.finishedWork=e,void(t.expirationTime=0);t.finishedWork=null,t===Ta?_a++:(Ta=t,_a=0),Qi=Li=!0,t.current===e&&a("177"),0===(n=t.pendingCommitExpirationTime)&&a("261"),t.pendingCommitExpirationTime=0,r=e.expirationTime;var o=e.childExpirationTime;if(r=o>r?o:r,t.didError=!1,0===r?(t.earliestPendingTime=0,t.latestPendingTime=0,t.earliestSuspendedTime=0,t.latestSuspendedTime=0,t.latestPingedTime=0):(r<t.latestPingedTime&&(t.latestPingedTime=0),0!==(o=t.latestPendingTime)&&(o>r?t.earliestPendingTime=t.latestPendingTime=0:t.earliestPendingTime>r&&(t.earliestPendingTime=t.latestPendingTime)),0===(o=t.earliestSuspendedTime)?Gr(t,r):r<t.latestSuspendedTime?(t.earliestSuspendedTime=0,t.latestSuspendedTime=0,t.latestPingedTime=0,Gr(t,r)):r>o&&Gr(t,r)),Hr(0,t),Mi.current=null,1<e.effectTag?null!==e.lastEffect?(e.lastEffect.nextEffect=e,r=e.firstEffect):r=e:r=e.firstEffect,yr=Cn,An(o=In())){if("selectionStart"in o)var i={start:o.selectionStart,end:o.selectionEnd};else t:{var l=(i=(i=o.ownerDocument)&&i.defaultView||window).getSelection&&i.getSelection();if(l&&0!==l.rangeCount){i=l.anchorNode;var u=l.anchorOffset,c=l.focusNode;l=l.focusOffset;try{i.nodeType,c.nodeType}catch(t){i=null;break t}var s=0,p=-1,f=-1,d=0,y=0,m=o,v=null;e:for(;;){for(var h;m!==i||0!==u&&3!==m.nodeType||(p=s+u),m!==c||0!==l&&3!==m.nodeType||(f=s+l),3===m.nodeType&&(s+=m.nodeValue.length),null!==(h=m.firstChild);)v=m,m=h;for(;;){if(m===o)break e;if(v===i&&++d===u&&(p=s),v===c&&++y===l&&(f=s),null!==(h=m.nextSibling))break;v=(m=v).parentNode}m=h}i=-1===p||-1===f?null:{start:p,end:f}}else i=null}i=i||{start:0,end:0}}else i=null;for(mr={focusedElem:o,selectionRange:i},Cn=!1,$i=r;null!==$i;){o=!1,i=void 0;try{for(;null!==$i;){if(256&$i.effectTag)t:{var w=$i.alternate;switch((u=$i).tag){case 0:case 11:case 15:break t;case 1:if(256&u.effectTag&&null!==w){var E=w.memoizedProps,b=w.memoizedState,_=u.stateNode,T=_.getSnapshotBeforeUpdate(u.elementType===u.type?E:Do(u.type,E),b);_.__reactInternalSnapshotBeforeUpdate=T}break t;case 3:case 5:case 6:case 4:case 17:break t;default:a("163")}}$i=$i.nextEffect}}catch(t){o=!0,i=t}o&&(null===$i&&a("178"),qi($i,i),null!==$i&&($i=$i.nextEffect))}for($i=r;null!==$i;){w=!1,E=void 0;try{for(;null!==$i;){var S=$i.effectTag;if(16&S&&or($i.stateNode,""),128&S){var C=$i.alternate;if(null!==C){var x=C.ref;null!==x&&("function"==typeof x?x(null):x.current=null)}}switch(14&S){case 2:Ci($i),$i.effectTag&=-3;break;case 6:Ci($i),$i.effectTag&=-3,Oi($i.alternate,$i);break;case 4:Oi($i.alternate,$i);break;case 8:xi(b=$i),b.return=null,b.child=null,b.memoizedState=null,b.updateQueue=null;var O=b.alternate;null!==O&&(O.return=null,O.child=null,O.memoizedState=null,O.updateQueue=null)}$i=$i.nextEffect}}catch(t){w=!0,E=t}w&&(null===$i&&a("178"),qi($i,E),null!==$i&&($i=$i.nextEffect))}if(x=mr,C=In(),S=x.focusedElem,w=x.selectionRange,C!==S&&S&&S.ownerDocument&&function t(e,n){return!(!e||!n)&&(e===n||(!e||3!==e.nodeType)&&(n&&3===n.nodeType?t(e,n.parentNode):"contains"in e?e.contains(n):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(n))))}(S.ownerDocument.documentElement,S)){null!==w&&An(S)&&(C=w.start,void 0===(x=w.end)&&(x=C),"selectionStart"in S?(S.selectionStart=C,S.selectionEnd=Math.min(x,S.value.length)):(x=(C=S.ownerDocument||document)&&C.defaultView||window).getSelection&&(x=x.getSelection(),E=S.textContent.length,O=Math.min(w.start,E),w=void 0===w.end?O:Math.min(w.end,E),!x.extend&&O>w&&(E=w,w=O,O=E),E=Ln(S,O),b=Ln(S,w),E&&b&&(1!==x.rangeCount||x.anchorNode!==E.node||x.anchorOffset!==E.offset||x.focusNode!==b.node||x.focusOffset!==b.offset)&&((C=C.createRange()).setStart(E.node,E.offset),x.removeAllRanges(),O>w?(x.addRange(C),x.extend(b.node,b.offset)):(C.setEnd(b.node,b.offset),x.addRange(C))))),C=[];for(x=S;x=x.parentNode;)1===x.nodeType&&C.push({element:x,left:x.scrollLeft,top:x.scrollTop});for("function"==typeof S.focus&&S.focus(),S=0;S<C.length;S++)(x=C[S]).element.scrollLeft=x.left,x.element.scrollTop=x.top}for(mr=null,Cn=!!yr,yr=null,t.current=e,$i=r;null!==$i;){r=!1,S=void 0;try{for(C=n;null!==$i;){var P=$i.effectTag;if(36&P){var g=$i.alternate;switch(O=C,(x=$i).tag){case 0:case 11:case 15:break;case 1:var N=x.stateNode;if(4&x.effectTag)if(null===g)N.componentDidMount();else{var j=x.elementType===x.type?g.memoizedProps:Do(x.type,g.memoizedProps);N.componentDidUpdate(j,g.memoizedState,N.__reactInternalSnapshotBeforeUpdate)}var D=x.updateQueue;null!==D&&so(0,D,N);break;case 3:var M=x.updateQueue;if(null!==M){if(w=null,null!==x.child)switch(x.child.tag){case 5:w=x.child.stateNode;break;case 1:w=x.child.stateNode}so(0,M,w)}break;case 5:var F=x.stateNode;null===g&&4&x.effectTag&&vr(x.type,x.memoizedProps)&&F.focus();break;case 6:case 4:case 12:case 13:case 17:break;default:a("163")}}if(128&P){var U=$i.ref;if(null!==U){var L=$i.stateNode;switch($i.tag){case 5:var I=L;break;default:I=L}"function"==typeof U?U(I):U.current=I}}$i=$i.nextEffect}}catch(t){r=!0,S=t}r&&(null===$i&&a("178"),qi($i,S),null!==$i&&($i=$i.nextEffect))}Li=Qi=!1,"function"==typeof zr&&zr(e.stateNode),P=e.expirationTime,0===(e=(e=e.childExpirationTime)>P?e:P)&&(Ki=null),t.expirationTime=e,t.finishedWork=null}function Ia(t){null===ua&&a("246"),ua.expirationTime=0,pa||(pa=!0,fa=t)}function Aa(t,e){var n=da;da=!0;try{return t(e)}finally{(da=n)||la||Ma(1073741823,!1)}}function za(t,e){if(da&&!ya){ya=!0;try{return t(e)}finally{ya=!1}}return t(e)}function Ra(t,e,n){if(ma)return t(e,n);da||la||0===sa||(Ma(sa,!1),sa=0);var r=ma,o=da;da=ma=!0;try{return t(e,n)}finally{ma=r,(da=o)||la||Ma(1073741823,!1)}}function Wa(t,e,n,r,o){var i=e.current;t:if(n){e:{2===en(n=n._reactInternalFiber)&&1===n.tag||a("170");var l=n;do{switch(l.tag){case 3:l=l.stateNode.context;break e;case 1:if(Dr(l.type)){l=l.stateNode.__reactInternalMemoizedMergedChildContext;break e}}l=l.return}while(null!==l);a("171"),l=void 0}if(1===n.tag){var u=n.type;if(Dr(u)){n=Lr(n,u,l);break t}}n=l}else n=Or;return null===e.context?e.context=n:e.pendingContext=n,e=o,(o=ro(r)).payload={element:t},null!==(e=void 0===e?null:e)&&(o.callback=e),Zi(),io(i,o),ea(i,r),r}function $a(t,e,n,r){var o=e.current;return Wa(t,e,n,o=Bi(Oa(),o),r)}function Qa(t){if(!(t=t.current).child)return null;switch(t.child.tag){case 5:default:return t.child.stateNode}}function Ya(t){var e=1073741822-25*(1+((1073741822-Oa()+500)/25|0));e>=Fi&&(e=Fi-1),this._expirationTime=Fi=e,this._root=t,this._callbacks=this._next=null,this._hasChildren=this._didComplete=!1,this._children=null,this._defer=!0}function Xa(){this._callbacks=null,this._didCommit=!1,this._onCommit=this._onCommit.bind(this)}function Ka(t,e,n){t={current:e=Qr(3,null,null,e?3:0),containerInfo:t,pendingChildren:null,pingCache:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,didError:!1,pendingCommitExpirationTime:0,finishedWork:null,timeoutHandle:-1,context:null,pendingContext:null,hydrate:n,nextExpirationTimeToWorkOn:0,expirationTime:0,firstBatch:null,nextScheduledRoot:null},this._internalRoot=e.stateNode=t}function ka(t){return!(!t||1!==t.nodeType&&9!==t.nodeType&&11!==t.nodeType&&(8!==t.nodeType||" react-mount-point-unstable "!==t.nodeValue))}function Za(t,e,n,r,o){ka(n)||a("200");var i=n._reactRootContainer;if(i){if("function"==typeof o){var l=o;o=function(){var t=Qa(i._internalRoot);l.call(t)}}null!=t?i.legacy_renderSubtreeIntoContainer(t,e,o):i.render(e,o)}else{if(i=n._reactRootContainer=function(t,e){if(e||(e=!(!(e=t?9===t.nodeType?t.documentElement:t.firstChild:null)||1!==e.nodeType||!e.hasAttribute("data-reactroot"))),!e)for(var n;n=t.lastChild;)t.removeChild(n);return new Ka(t,!1,e)}(n,r),"function"==typeof o){var u=o;o=function(){var t=Qa(i._internalRoot);u.call(t)}}za(function(){null!=t?i.legacy_renderSubtreeIntoContainer(t,e,o):i.render(e,o)})}return Qa(i._internalRoot)}function Ja(t,e){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;return ka(e)||a("200"),function(t,e,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:Jt,key:null==r?null:""+r,children:t,containerInfo:e,implementation:n}}(t,e,null,n)}Ot=function(t,e,n){switch(e){case"input":if(Te(t,n),e=n.name,"radio"===n.type&&null!=e){for(n=t;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+e)+'][type="radio"]'),e=0;e<n.length;e++){var r=n[e];if(r!==t&&r.form===t.form){var o=z(r);o||a("90"),Yt(r),Te(r,o)}}}break;case"textarea":Gn(t,n);break;case"select":null!=(e=n.value)&&Zn(t,!!n.multiple,e,!1)}},Ya.prototype.render=function(t){this._defer||a("250"),this._hasChildren=!0,this._children=t;var e=this._root._internalRoot,n=this._expirationTime,r=new Xa;return Wa(t,e,null,n,r._onCommit),r},Ya.prototype.then=function(t){if(this._didComplete)t();else{var e=this._callbacks;null===e&&(e=this._callbacks=[]),e.push(t)}},Ya.prototype.commit=function(){var t=this._root._internalRoot,e=t.firstBatch;if(this._defer&&null!==e||a("251"),this._hasChildren){var n=this._expirationTime;if(e!==this){this._hasChildren&&(n=this._expirationTime=e._expirationTime,this.render(this._children));for(var r=null,o=e;o!==this;)r=o,o=o._next;null===r&&a("251"),r._next=o._next,this._next=e,t.firstBatch=this}this._defer=!1,Fa(t,n),e=this._next,this._next=null,null!==(e=t.firstBatch=e)&&e._hasChildren&&e.render(e._children)}else this._next=null,this._defer=!1},Ya.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var t=this._callbacks;if(null!==t)for(var e=0;e<t.length;e++)(0,t[e])()}},Xa.prototype.then=function(t){if(this._didCommit)t();else{var e=this._callbacks;null===e&&(e=this._callbacks=[]),e.push(t)}},Xa.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var t=this._callbacks;if(null!==t)for(var e=0;e<t.length;e++){var n=t[e];"function"!=typeof n&&a("191",n),n()}}},Ka.prototype.render=function(t,e){var n=this._internalRoot,r=new Xa;return null!==(e=void 0===e?null:e)&&r.then(e),$a(t,n,null,r._onCommit),r},Ka.prototype.unmount=function(t){var e=this._internalRoot,n=new Xa;return null!==(t=void 0===t?null:t)&&n.then(t),$a(null,e,null,n._onCommit),n},Ka.prototype.legacy_renderSubtreeIntoContainer=function(t,e,n){var r=this._internalRoot,o=new Xa;return null!==(n=void 0===n?null:n)&&o.then(n),$a(e,r,t,o._onCommit),o},Ka.prototype.createBatch=function(){var t=new Ya(this),e=t._expirationTime,n=this._internalRoot,r=n.firstBatch;if(null===r)n.firstBatch=t,t._next=null;else{for(n=null;null!==r&&r._expirationTime>=e;)n=r,r=r._next;t._next=r,null!==n&&(n._next=t)}return t},Mt=Aa,Ft=Ra,Ut=function(){la||0===sa||(Ma(sa,!1),sa=0)};var Va={createPortal:Ja,findDOMNode:function(t){if(null==t)return null;if(1===t.nodeType)return t;var e=t._reactInternalFiber;return void 0===e&&("function"==typeof t.render?a("188"):a("268",Object.keys(t))),t=null===(t=rn(e))?null:t.stateNode},hydrate:function(t,e,n){return Za(null,t,e,!0,n)},render:function(t,e,n){return Za(null,t,e,!1,n)},unstable_renderSubtreeIntoContainer:function(t,e,n,r){return(null==t||void 0===t._reactInternalFiber)&&a("38"),Za(t,e,n,!1,r)},unmountComponentAtNode:function(t){return ka(t)||a("40"),!!t._reactRootContainer&&(za(function(){Za(null,null,t,!1,function(){t._reactRootContainer=null})}),!0)},unstable_createPortal:function(){return Ja.apply(void 0,arguments)},unstable_batchedUpdates:Aa,unstable_interactiveUpdates:Ra,flushSync:function(t,e){la&&a("187");var n=da;da=!0;try{return na(t,e)}finally{da=n,Ma(1073741823,!1)}},unstable_createRoot:function(t,e){return ka(t)||a("299","unstable_createRoot"),new Ka(t,!0,null!=e&&!0===e.hydrate)},unstable_flushControlled:function(t){var e=da;da=!0;try{na(t)}finally{(da=e)||la||Ma(1073741823,!1)}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[I,A,z,N.injectEventPluginsByName,w,X,function(t){O(t,Y)},jt,Dt,gn,D]}};!function(t){var e=t.findFiberByHostInstance;(function(t){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var e=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(e.isDisabled||!e.supportsFiber)return!0;try{var n=e.inject(t);zr=Wr(function(t){return e.onCommitFiberRoot(n,t)}),Rr=Wr(function(t){return e.onCommitFiberUnmount(n,t)})}catch(t){}})(o({},t,{overrideProps:null,findHostInstanceByFiber:function(t){return null===(t=rn(t))?null:t.stateNode},findFiberByHostInstance:function(t){return e?e(t):null}}))}({findFiberByHostInstance:L,bundleType:0,version:"16.7.0",rendererPackageName:"react-dom"});var Ga={default:Va},qa=Ga&&Va||Ga;t.exports=qa.default||qa},function(t,e,n){"use strict";t.exports=n(33)},function(t,e,n){"use strict";(function(t){
/** @license React v0.12.0
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(e,"__esModule",{value:!0});var n=null,r=!1,o=3,i=-1,a=-1,l=!1,u=!1;function c(){if(!l){var t=n.expirationTime;u?S():u=!0,T(f,t)}}function s(){var t=n,e=n.next;if(n===e)n=null;else{var r=n.previous;n=r.next=e,e.previous=r}t.next=t.previous=null,r=t.callback,e=t.expirationTime,t=t.priorityLevel;var i=o,l=a;o=t,a=e;try{var u=r()}finally{o=i,a=l}if("function"==typeof u)if(u={callback:u,priorityLevel:t,expirationTime:e,next:null,previous:null},null===n)n=u.next=u.previous=u;else{r=null,t=n;do{if(t.expirationTime>=e){r=t;break}t=t.next}while(t!==n);null===r?r=n:r===n&&(n=u,c()),(e=r.previous).next=r.previous=u,u.next=r,u.previous=e}}function p(){if(-1===i&&null!==n&&1===n.priorityLevel){l=!0;try{do{s()}while(null!==n&&1===n.priorityLevel)}finally{l=!1,null!==n?c():u=!1}}}function f(t){l=!0;var o=r;r=t;try{if(t)for(;null!==n;){var i=e.unstable_now();if(!(n.expirationTime<=i))break;do{s()}while(null!==n&&n.expirationTime<=i)}else if(null!==n)do{s()}while(null!==n&&!C())}finally{l=!1,r=o,null!==n?c():u=!1,p()}}var d,y,m=Date,v="function"==typeof setTimeout?setTimeout:void 0,h="function"==typeof clearTimeout?clearTimeout:void 0,w="function"==typeof requestAnimationFrame?requestAnimationFrame:void 0,E="function"==typeof cancelAnimationFrame?cancelAnimationFrame:void 0;function b(t){d=w(function(e){h(y),t(e)}),y=v(function(){E(d),t(e.unstable_now())},100)}if("object"==typeof performance&&"function"==typeof performance.now){var _=performance;e.unstable_now=function(){return _.now()}}else e.unstable_now=function(){return m.now()};var T,S,C,x=null;if("undefined"!=typeof window?x=window:void 0!==t&&(x=t),x&&x._schedMock){var O=x._schedMock;T=O[0],S=O[1],C=O[2],e.unstable_now=O[3]}else if("undefined"==typeof window||"function"!=typeof MessageChannel){var P=null,g=function(t){if(null!==P)try{P(t)}finally{P=null}};T=function(t){null!==P?setTimeout(T,0,t):(P=t,setTimeout(g,0,!1))},S=function(){P=null},C=function(){return!1}}else{"undefined"!=typeof console&&("function"!=typeof w&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!=typeof E&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"));var N=null,j=!1,D=-1,M=!1,F=!1,U=0,L=33,I=33;C=function(){return U<=e.unstable_now()};var A=new MessageChannel,z=A.port2;A.port1.onmessage=function(){j=!1;var t=N,n=D;N=null,D=-1;var r=e.unstable_now(),o=!1;if(0>=U-r){if(!(-1!==n&&n<=r))return M||(M=!0,b(R)),N=t,void(D=n);o=!0}if(null!==t){F=!0;try{t(o)}finally{F=!1}}};var R=function(t){if(null!==N){b(R);var e=t-U+I;e<I&&L<I?(8>e&&(e=8),I=e<L?L:e):L=e,U=t+I,j||(j=!0,z.postMessage(void 0))}else M=!1};T=function(t,e){N=t,D=e,F||0>e?z.postMessage(void 0):M||(M=!0,b(R))},S=function(){N=null,j=!1,D=-1}}e.unstable_ImmediatePriority=1,e.unstable_UserBlockingPriority=2,e.unstable_NormalPriority=3,e.unstable_IdlePriority=5,e.unstable_LowPriority=4,e.unstable_runWithPriority=function(t,n){switch(t){case 1:case 2:case 3:case 4:case 5:break;default:t=3}var r=o,a=i;o=t,i=e.unstable_now();try{return n()}finally{o=r,i=a,p()}},e.unstable_scheduleCallback=function(t,r){var a=-1!==i?i:e.unstable_now();if("object"==typeof r&&null!==r&&"number"==typeof r.timeout)r=a+r.timeout;else switch(o){case 1:r=a+-1;break;case 2:r=a+250;break;case 5:r=a+1073741823;break;case 4:r=a+1e4;break;default:r=a+5e3}if(t={callback:t,priorityLevel:o,expirationTime:r,next:null,previous:null},null===n)n=t.next=t.previous=t,c();else{a=null;var l=n;do{if(l.expirationTime>r){a=l;break}l=l.next}while(l!==n);null===a?a=n:a===n&&(n=t,c()),(r=a.previous).next=a.previous=t,t.next=a,t.previous=r}return t},e.unstable_cancelCallback=function(t){var e=t.next;if(null!==e){if(e===t)n=null;else{t===n&&(n=e);var r=t.previous;r.next=e,e.previous=r}t.next=t.previous=null}},e.unstable_wrapCallback=function(t){var n=o;return function(){var r=o,a=i;o=n,i=e.unstable_now();try{return t.apply(this,arguments)}finally{o=r,i=a,p()}}},e.unstable_getCurrentPriorityLevel=function(){return o},e.unstable_shouldYield=function(){return!r&&(null!==n&&n.expirationTime<a||C())},e.unstable_continueExecution=function(){null!==n&&c()},e.unstable_pauseExecution=function(){},e.unstable_getFirstCallbackNode=function(){return n}}).call(this,n(34))},function(t,e){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(t){"object"==typeof window&&(n=window)}t.exports=n},function(t,e){t.exports=function(t){if(!t.webpackPolyfill){var e=Object.create(t);e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),Object.defineProperty(e,"exports",{enumerable:!0}),e.webpackPolyfill=1}return e}},function(t,e,n){"use strict";n(0)},function(t,e,n){"use strict";var r=n(38);function o(){}t.exports=function(){function t(t,e,n,o,i,a){if(a!==r){var l=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw l.name="Invariant Violation",l}}function e(){return t}t.isRequired=t;var n={array:t,bool:t,func:t,number:t,object:t,string:t,symbol:t,any:t,arrayOf:e,element:t,instanceOf:e,node:t,objectOf:e,oneOf:e,oneOfType:e,shape:e,exact:e};return n.checkPropTypes=o,n.PropTypes=n,n}},function(t,e,n){"use strict";t.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},function(t,e){t.exports=Array.isArray||function(t){return"[object Array]"==Object.prototype.toString.call(t)}},function(t,e,n){"use strict";n.r(e);var r=n(0),o=n.n(r),i=n(7),a=n(5),l=n.n(a),u=n(1),c=n.n(u),s=n(3),p=n.n(s),f=n(6),d=n.n(f);function y(t){return"/"===t.charAt(0)}function m(t,e){for(var n=e,r=n+1,o=t.length;r<o;n+=1,r+=1)t[n]=t[r];t.pop()}var v=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=t&&t.split("/")||[],r=e&&e.split("/")||[],o=t&&y(t),i=e&&y(e),a=o||i;if(t&&y(t)?r=n:n.length&&(r.pop(),r=r.concat(n)),!r.length)return"/";var l=void 0;if(r.length){var u=r[r.length-1];l="."===u||".."===u||""===u}else l=!1;for(var c=0,s=r.length;s>=0;s--){var p=r[s];"."===p?m(r,s):".."===p?(m(r,s),c++):c&&(m(r,s),c--)}if(!a)for(;c--;c)r.unshift("..");!a||""===r[0]||r[0]&&y(r[0])||r.unshift("");var f=r.join("/");return l&&"/"!==f.substr(-1)&&(f+="/"),f};"function"==typeof Symbol&&Symbol.iterator;var h=function(t){return"/"===t.charAt(0)?t:"/"+t},w=function(t,e){return new RegExp("^"+e+"(\\/|\\?|#|$)","i").test(t)},E=function(t,e){return w(t,e)?t.substr(e.length):t},b=function(t){return"/"===t.charAt(t.length-1)?t.slice(0,-1):t},_=function(t){var e=t.pathname,n=t.search,r=t.hash,o=e||"/";return n&&"?"!==n&&(o+="?"===n.charAt(0)?n:"?"+n),r&&"#"!==r&&(o+="#"===r.charAt(0)?r:"#"+r),o},T=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(t[r]=n[r])}return t},S=function(t,e,n,r){var o=void 0;"string"==typeof t?(o=function(t){var e=t||"/",n="",r="",o=e.indexOf("#");-1!==o&&(r=e.substr(o),e=e.substr(0,o));var i=e.indexOf("?");return-1!==i&&(n=e.substr(i),e=e.substr(0,i)),{pathname:e,search:"?"===n?"":n,hash:"#"===r?"":r}}(t)).state=e:(void 0===(o=T({},t)).pathname&&(o.pathname=""),o.search?"?"!==o.search.charAt(0)&&(o.search="?"+o.search):o.search="",o.hash?"#"!==o.hash.charAt(0)&&(o.hash="#"+o.hash):o.hash="",void 0!==e&&void 0===o.state&&(o.state=e));try{o.pathname=decodeURI(o.pathname)}catch(t){throw t instanceof URIError?new URIError('Pathname "'+o.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):t}return n&&(o.key=n),r?o.pathname?"/"!==o.pathname.charAt(0)&&(o.pathname=v(o.pathname,r.pathname)):o.pathname=r.pathname:o.pathname||(o.pathname="/"),o},C=function(){var t=null,e=[];return{setPrompt:function(e){return p()(null==t,"A history supports only one prompt at a time"),t=e,function(){t===e&&(t=null)}},confirmTransitionTo:function(e,n,r,o){if(null!=t){var i="function"==typeof t?t(e,n):t;"string"==typeof i?"function"==typeof r?r(i,o):(p()(!1,"A history needs a getUserConfirmation function in order to use a prompt message"),o(!0)):o(!1!==i)}else o(!0)},appendListener:function(t){var n=!0,r=function(){n&&t.apply(void 0,arguments)};return e.push(r),function(){n=!1,e=e.filter(function(t){return t!==r})}},notifyListeners:function(){for(var t=arguments.length,n=Array(t),r=0;r<t;r++)n[r]=arguments[r];e.forEach(function(t){return t.apply(void 0,n)})}}},x=!("undefined"==typeof window||!window.document||!window.document.createElement),O=function(t,e,n){return t.addEventListener?t.addEventListener(e,n,!1):t.attachEvent("on"+e,n)},P=function(t,e,n){return t.removeEventListener?t.removeEventListener(e,n,!1):t.detachEvent("on"+e,n)},g=function(t,e){return e(window.confirm(t))},N="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},j=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(t[r]=n[r])}return t},D=function(){try{return window.history.state||{}}catch(t){return{}}},M=function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};d()(x,"Browser history needs a DOM");var e,n=window.history,r=(-1===(e=window.navigator.userAgent).indexOf("Android 2.")&&-1===e.indexOf("Android 4.0")||-1===e.indexOf("Mobile Safari")||-1!==e.indexOf("Chrome")||-1!==e.indexOf("Windows Phone"))&&window.history&&"pushState"in window.history,o=!(-1===window.navigator.userAgent.indexOf("Trident")),i=t.forceRefresh,a=void 0!==i&&i,l=t.getUserConfirmation,u=void 0===l?g:l,c=t.keyLength,s=void 0===c?6:c,f=t.basename?b(h(t.basename)):"",y=function(t){var e=t||{},n=e.key,r=e.state,o=window.location,i=o.pathname+o.search+o.hash;return p()(!f||w(i,f),'You are attempting to use a basename on a page whose URL path does not begin with the basename. Expected path "'+i+'" to begin with "'+f+'".'),f&&(i=E(i,f)),S(i,r,n)},m=function(){return Math.random().toString(36).substr(2,s)},v=C(),T=function(t){j(X,t),X.length=n.length,v.notifyListeners(X.location,X.action)},M=function(t){(function(t){return void 0===t.state&&-1===navigator.userAgent.indexOf("CriOS")})(t)||L(y(t.state))},F=function(){L(y(D()))},U=!1,L=function(t){U?(U=!1,T()):v.confirmTransitionTo(t,"POP",u,function(e){e?T({action:"POP",location:t}):I(t)})},I=function(t){var e=X.location,n=z.indexOf(e.key);-1===n&&(n=0);var r=z.indexOf(t.key);-1===r&&(r=0);var o=n-r;o&&(U=!0,W(o))},A=y(D()),z=[A.key],R=function(t){return f+_(t)},W=function(t){n.go(t)},$=0,Q=function(t){1===($+=t)?(O(window,"popstate",M),o&&O(window,"hashchange",F)):0===$&&(P(window,"popstate",M),o&&P(window,"hashchange",F))},Y=!1,X={length:n.length,action:"POP",location:A,createHref:R,push:function(t,e){p()(!("object"===(void 0===t?"undefined":N(t))&&void 0!==t.state&&void 0!==e),"You should avoid providing a 2nd state argument to push when the 1st argument is a location-like object that already has state; it is ignored");var o=S(t,e,m(),X.location);v.confirmTransitionTo(o,"PUSH",u,function(t){if(t){var e=R(o),i=o.key,l=o.state;if(r)if(n.pushState({key:i,state:l},null,e),a)window.location.href=e;else{var u=z.indexOf(X.location.key),c=z.slice(0,-1===u?0:u+1);c.push(o.key),z=c,T({action:"PUSH",location:o})}else p()(void 0===l,"Browser history cannot push state in browsers that do not support HTML5 history"),window.location.href=e}})},replace:function(t,e){p()(!("object"===(void 0===t?"undefined":N(t))&&void 0!==t.state&&void 0!==e),"You should avoid providing a 2nd state argument to replace when the 1st argument is a location-like object that already has state; it is ignored");var o=S(t,e,m(),X.location);v.confirmTransitionTo(o,"REPLACE",u,function(t){if(t){var e=R(o),i=o.key,l=o.state;if(r)if(n.replaceState({key:i,state:l},null,e),a)window.location.replace(e);else{var u=z.indexOf(X.location.key);-1!==u&&(z[u]=o.key),T({action:"REPLACE",location:o})}else p()(void 0===l,"Browser history cannot replace state in browsers that do not support HTML5 history"),window.location.replace(e)}})},go:W,goBack:function(){return W(-1)},goForward:function(){return W(1)},block:function(){var t=arguments.length>0&&void 0!==arguments[0]&&arguments[0],e=v.setPrompt(t);return Y||(Q(1),Y=!0),function(){return Y&&(Y=!1,Q(-1)),e()}},listen:function(t){var e=v.appendListener(t);return Q(1),function(){Q(-1),e()}}};return X},F=(Object.assign,"function"==typeof Symbol&&Symbol.iterator,Object.assign,Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(t[r]=n[r])}return t});function U(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}var L=function(t){function e(){var n,r;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);for(var o=arguments.length,i=Array(o),a=0;a<o;a++)i[a]=arguments[a];return n=r=U(this,t.call.apply(t,[this].concat(i))),r.state={match:r.computeMatch(r.props.history.location.pathname)},U(r,n)}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,t),e.prototype.getChildContext=function(){return{router:F({},this.context.router,{history:this.props.history,route:{location:this.props.history.location,match:this.state.match}})}},e.prototype.computeMatch=function(t){return{path:"/",url:"/",params:{},isExact:"/"===t}},e.prototype.componentWillMount=function(){var t=this,e=this.props,n=e.children,r=e.history;d()(null==n||1===o.a.Children.count(n),"A <Router> may have only one child element"),this.unlisten=r.listen(function(){t.setState({match:t.computeMatch(r.location.pathname)})})},e.prototype.componentWillReceiveProps=function(t){l()(this.props.history===t.history,"You cannot change <Router history>")},e.prototype.componentWillUnmount=function(){this.unlisten()},e.prototype.render=function(){var t=this.props.children;return t?o.a.Children.only(t):null},e}(o.a.Component);L.propTypes={history:c.a.object.isRequired,children:c.a.node},L.contextTypes={router:c.a.object},L.childContextTypes={router:c.a.object.isRequired};var I=L;function A(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}var z=function(t){function e(){var n,r;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);for(var o=arguments.length,i=Array(o),a=0;a<o;a++)i[a]=arguments[a];return n=r=A(this,t.call.apply(t,[this].concat(i))),r.history=M(r.props),A(r,n)}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,t),e.prototype.componentWillMount=function(){l()(!this.props.history,"<BrowserRouter> ignores the history prop. To use a custom history, use `import { Router }` instead of `import { BrowserRouter as Router }`.")},e.prototype.render=function(){return o.a.createElement(I,{history:this.history,children:this.props.children})},e}(o.a.Component);z.propTypes={basename:c.a.string,forceRefresh:c.a.bool,getUserConfirmation:c.a.func,keyLength:c.a.number,children:c.a.node};var R=z,W=n(13);n(28)({presets:["@babel/preset-react"]}),Object(i.render)(o.a.createElement(R,null,o.a.createElement(W.a,{data:window.__DATA__})),document.getElementById("root"))},function(t,e,n){"use strict";var r=n(0),o=n.n(r),i=n(1),a=n.n(i),l=n(5),u=n.n(l),c=n(6),s=n.n(c),p=n(10);var f=function(t){function e(){return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,t.apply(this,arguments))}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,t),e.prototype.componentWillMount=function(){s()(this.context.router,"You should not use <Switch> outside a <Router>")},e.prototype.componentWillReceiveProps=function(t){u()(!(t.location&&!this.props.location),'<Switch> elements should not change from uncontrolled to controlled (or vice versa). You initially used no "location" prop and then provided one on a subsequent render.'),u()(!(!t.location&&this.props.location),'<Switch> elements should not change from controlled to uncontrolled (or vice versa). You provided a "location" prop initially but omitted it on a subsequent render.')},e.prototype.render=function(){var t=this.context.router.route,e=this.props.children,n=this.props.location||t.location,r=void 0,i=void 0;return o.a.Children.forEach(e,function(e){if(null==r&&o.a.isValidElement(e)){var a=e.props,l=a.path,u=a.exact,c=a.strict,s=a.sensitive,f=a.from,d=l||f;i=e,r=Object(p.a)(n.pathname,{path:d,exact:u,strict:c,sensitive:s},t.match)}}),r?o.a.cloneElement(i,{location:n,computedMatch:r}):null},e}(o.a.Component);f.contextTypes={router:a.a.shape({route:a.a.object.isRequired}).isRequired},f.propTypes={children:a.a.node,location:a.a.object};var d=f;e.a=d}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2luZGV4LmpzIiwid2VicGFjazovLy8uL2FwcC9jb21wb25lbnRzL3N0YW5kYXJkX2hlYWRlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaGlzdG9yeS9ub2RlX21vZHVsZXMvd2FybmluZy9icm93c2VyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXIvZXMvUm91dGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci1kb20vZXMvUm91dGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3dhcm5pbmcvd2FybmluZy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaW52YXJpYW50L2Jyb3dzZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9hcHAvY29tcG9uZW50cy9wb3N0LmpzIiwid2VicGFjazovLy8uL2FwcC9jb21wb25lbnRzL2NvbW1lbnRzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXIvZXMvbWF0Y2hQYXRoLmpzIiwid2VicGFjazovLy8uL2FwcC9jb21wb25lbnRzL2dsb2JhbF9wb3N0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9vYmplY3QtYXNzaWduL2luZGV4LmpzIiwid2VicGFjazovLy8uL2FwcC9jb21wb25lbnRzL0FwcC5qcyIsIndlYnBhY2s6Ly8vLi9hcHAvY29tcG9uZW50cy9mZWVkLmpzIiwid2VicGFjazovLy8uL2FwcC9jb21wb25lbnRzL0NvbnRhY3QuanMiLCJ3ZWJwYWNrOi8vLy4vYXBwL2NvbXBvbmVudHMvYWJvdXQuanMiLCJ3ZWJwYWNrOi8vLy4vYXBwL2NvbXBvbmVudHMvdXNlci5qcyIsIndlYnBhY2s6Ly8vLi9hcHAvY29tcG9uZW50cy91c2VyX3Bvc3QuanMiLCJ3ZWJwYWNrOi8vLy4vYXBwL2NvbXBvbmVudHMvYXJ0aXN0LmpzIiwid2VicGFjazovLy8uL2FwcC9jb21wb25lbnRzL2FydGlzdF9zb25ncy5qcyIsIndlYnBhY2s6Ly8vLi9hcHAvY29tcG9uZW50cy9hcnRpc3RfYWxidW1zLmpzIiwid2VicGFjazovLy8uL2FwcC9jb21wb25lbnRzL2xvZ2luLmpzIiwid2VicGFjazovLy8uL2FwcC9jb21wb25lbnRzL3JlZ2lzdGVyLmpzIiwid2VicGFjazovLy8uL2FwcC9jb21wb25lbnRzL2ZvbGxvd2Vycy5qcyIsIndlYnBhY2s6Ly8vLi9hcHAvY29tcG9uZW50cy9mb2xsb3dpbmcuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3BhdGgtdG8tcmVnZXhwL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcmVnaXN0ZXIvbGliL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcmVnaXN0ZXIvbGliL2Jyb3dzZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2Nqcy9yZWFjdC5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3NjaGVkdWxlci9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc2NoZWR1bGVyL2Nqcy9zY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vLyh3ZWJwYWNrKS9idWlsZGluL2dsb2JhbC5qcyIsIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vaGFybW9ueS1tb2R1bGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvZmFjdG9yeVdpdGhUaHJvd2luZ1NoaW1zLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcGF0aC10by1yZWdleHAvbm9kZV9tb2R1bGVzL2lzYXJyYXkvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Jlc29sdmUtcGF0aG5hbWUvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3ZhbHVlLWVxdWFsL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oaXN0b3J5L2VzL1BhdGhVdGlscy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaGlzdG9yeS9lcy9Mb2NhdGlvblV0aWxzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oaXN0b3J5L2VzL2NyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oaXN0b3J5L2VzL0RPTVV0aWxzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oaXN0b3J5L2VzL2NyZWF0ZUJyb3dzZXJIaXN0b3J5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXIvZXMvUm91dGVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oaXN0b3J5L2VzL2NyZWF0ZUhhc2hIaXN0b3J5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oaXN0b3J5L2VzL2NyZWF0ZU1lbW9yeUhpc3RvcnkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci1kb20vZXMvUm91dGVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXItZG9tL2VzL0Jyb3dzZXJSb3V0ZXIuanMiLCJ3ZWJwYWNrOi8vLy4vYXBwL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXIvZXMvU3dpdGNoLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXItZG9tL2VzL1N3aXRjaC5qcyJdLCJuYW1lcyI6WyJpbnN0YWxsZWRNb2R1bGVzIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiZXhwb3J0cyIsIm1vZHVsZSIsImkiLCJsIiwibW9kdWxlcyIsImNhbGwiLCJtIiwiYyIsImQiLCJuYW1lIiwiZ2V0dGVyIiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInIiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsInZhbHVlIiwidCIsIm1vZGUiLCJfX2VzTW9kdWxlIiwibnMiLCJjcmVhdGUiLCJrZXkiLCJiaW5kIiwibiIsIm9iamVjdCIsInByb3BlcnR5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJwIiwicyIsIlJlYWN0IiwicmVxdWlyZSIsIlNlYXJjaEl0ZW0iLCJwcm9wcyIsIl90aGlzIiwiX2NsYXNzQ2FsbENoZWNrIiwidGhpcyIsIl9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwiX2dldFByb3RvdHlwZU9mIiwiaXRlbV9saXN0IiwiQ29tcG9uZW50IiwiZm9yY2VVcGRhdGUiLCJpdGVtIiwidXJsIiwiY29uc29sZSIsImxvZyIsInB1c2giLCJjcmVhdGVFbGVtZW50IiwiaHJlZiIsImNsYXNzTmFtZSIsIlNlYXJjaExpc3QiLCJfdGhpczIiLCJzZWFyY2hfbGlzdCIsImNyZWF0ZVJlZiIsImlucHV0IiwiZXZlbnQiLCJ0YXJnZXQiLCJ0aGF0IiwiZmV0Y2giLCJtZXRob2QiLCJoZWFkZXJzIiwiQWNjZXB0IiwiQXV0aG9yaXphdGlvbiIsIkNvbnRlbnQtVHlwZSIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwidHlwZSIsInRleHQiLCJ0aGVuIiwicmVzcG9uc2UiLCJqc29uIiwiZGF0YSIsInNlYXJjaF9yZXN1bHRzIiwidXNlcnMiLCJhcnRpc3RzIiwic29uZ3MiLCJhbGJ1bXMiLCJ1c2VyX2Rpc3BsYXkiLCJ1c2VybmFtZSIsInVzZXJfdXJsIiwiYXJ0aXN0X2Rpc3BsYXkiLCJhcnRpc3QiLCJhcnRpc3RfdXJsIiwic29uZ19kaXNwbGF5Iiwic29uZyIsInNvbmdfdXJsIiwiYWxidW1fZGlzcGxheSIsImFsYnVtIiwiYWxidW1fdXJsIiwic29ydCIsImEiLCJiIiwiU29ydFNlYXJjaCIsImN1cnJlbnQiLCJjbGVhckl0ZW1zIiwicmVuZGVySXRlbSIsIm9uQ2hhbmdlIiwiaGFuZGxlQ2hhbmdlIiwicmVmIiwiU3RhbmRhcmRIZWFkZXIiLCJfdGhpczMiLCJsYW5nIiwicmVsIiwiaWQiLCJzdHlsZSIsInBvc2l0aW9uIiwiYmFja2dyb3VuZENvbG9yIiwid2lkdGgiLCJ6SW5kZXgiLCJkaXNwbGF5Iiwib3ZlcmZsb3ciLCJfZXh0ZW5kcyIsImFzc2lnbiIsImFyZ3VtZW50cyIsImxlbmd0aCIsInNvdXJjZSIsInNlbGYiLCJSZWZlcmVuY2VFcnJvciIsIlJvdXRlX2lzRW1wdHlDaGlsZHJlbiIsImNoaWxkcmVuIiwicmVhY3RfZGVmYXVsdCIsIkNoaWxkcmVuIiwiY291bnQiLCJSb3V0ZV9Sb3V0ZSIsIl9SZWFjdCRDb21wb25lbnQiLCJSb3V0ZSIsIl90ZW1wIiwiaW5zdGFuY2UiLCJDb25zdHJ1Y3RvciIsIlR5cGVFcnJvciIsIl9sZW4iLCJhcmdzIiwiQXJyYXkiLCJfa2V5IiwiYXBwbHkiLCJjb25jYXQiLCJzdGF0ZSIsIm1hdGNoIiwiY29tcHV0ZU1hdGNoIiwiY29udGV4dCIsInJvdXRlciIsInN1YkNsYXNzIiwic3VwZXJDbGFzcyIsImNvbnN0cnVjdG9yIiwid3JpdGFibGUiLCJjb25maWd1cmFibGUiLCJzZXRQcm90b3R5cGVPZiIsIl9fcHJvdG9fXyIsIl9pbmhlcml0cyIsImdldENoaWxkQ29udGV4dCIsInJvdXRlIiwibG9jYXRpb24iLCJfcmVmIiwiY29tcHV0ZWRNYXRjaCIsInBhdGgiLCJzdHJpY3QiLCJleGFjdCIsInNlbnNpdGl2ZSIsImJyb3dzZXJfZGVmYXVsdCIsInBhdGhuYW1lIiwibWF0Y2hQYXRoIiwiY29tcG9uZW50V2lsbE1vdW50Iiwid2FybmluZ19kZWZhdWx0IiwiY29tcG9uZW50IiwicmVuZGVyIiwiY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyIsIm5leHRQcm9wcyIsIm5leHRDb250ZXh0Iiwic2V0U3RhdGUiLCJfcHJvcHMiLCJfY29udGV4dCRyb3V0ZXIiLCJoaXN0b3J5Iiwic3RhdGljQ29udGV4dCIsIm9ubHkiLCJwcm9wVHlwZXMiLCJwcm9wX3R5cGVzX2RlZmF1bHQiLCJzdHJpbmciLCJib29sIiwiZnVuYyIsIm9uZU9mVHlwZSIsIm5vZGUiLCJjb250ZXh0VHlwZXMiLCJzaGFwZSIsImlzUmVxdWlyZWQiLCJjaGlsZENvbnRleHRUeXBlcyIsImVzX1JvdXRlIiwiX193ZWJwYWNrX2V4cG9ydHNfXyIsIndhcm5pbmciLCJjb25kaXRpb24iLCJmb3JtYXQiLCJlIiwiZiIsImVycm9yIiwidW5kZWZpbmVkIiwiRXJyb3IiLCJhcmdJbmRleCIsInJlcGxhY2UiLCJmcmFtZXNUb1BvcCIsImNoZWNrRENFIiwiX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fIiwiZXJyIiwiUG9zdCIsImlmcmFtZSIsIl9faHRtbCIsImRhdGUiLCJEYXRlIiwidGltZXN0YW1wIiwicG9zdF90aXRsZSIsInJlYWN0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdCIsInRpdGxlIiwicG9zdGVyX3VzZXJuYW1lIiwicG9zdGVyX3VzZXJuYW1lX3VybCIsImNvbnRlbnQiLCJieV90ZXh0IiwibGlrZXNfc2VjdGlvbiIsInBvc3RfaWQiLCJsaWtlcyIsImRpc2xpa2VzIiwiY29tbWVudF9zZWN0aW9uIiwiY29udGVudF91cmwiLCJjb250ZW50X25hbWUiLCJoZWlnaHQiLCJib3JkZXJCb3R0b20iLCJwYWRkaW5nIiwiZmxleERpcmVjdGlvbiIsImdldE1vbnRoIiwiZ2V0RGF0ZSIsImdldEZ1bGxZZWFyIiwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwiLCJyZW5kZXJpZnJhbWUiLCJlbWJlZGRlZF9jb250ZW50IiwiUG9zdEluZm8iLCJwb3N0cyIsIl9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24iLCJfZGlkSXRlcmF0b3JFcnJvciIsIl9pdGVyYXRvckVycm9yIiwiX3N0ZXAiLCJfaXRlcmF0b3IiLCJpdGVyYXRvciIsIm5leHQiLCJkb25lIiwibWFrZVBvc3QiLCJyZXR1cm4iLCJhZGRTb25ncyIsImxlZnQiLCJ0b3AiLCJDb21tZW50IiwiY2hpbGRfY29tbWVudHMiLCJjb21tZW50X2lkIiwicmVwbGllc19idXR0b24iLCJyZXBsaWVzIiwibGVmdF9vZmZzZXQiLCJTdHJpbmciLCJjb21tZW50X2xldmVsIiwiY29tbWVudCIsInVzZXJfaWQiLCJtaW51dGVzIiwiZ2V0TWludXRlcyIsInNjb3JlIiwidXB2b3RlcyIsImRvd252b3RlcyIsImRhdGVfdGV4dCIsImdldEhvdXJzIiwiY29tbWVudF90ZXh0IiwiZmxvYXQiLCJib3R0b20iLCJib3JkZXJTdHlsZSIsImJvcmRlckJvdHRvbVN0eWxlIiwiYm9yZGVyVG9wU3R5bGUiLCJDb21tZW50U2VjdGlvbiIsImNvbW1lbnRzIiwibGV2ZWxzIiwiY3VycmVudF9sZXZlbHNfbGVuZ3RoIiwiY29tbWVudF9tYXAiLCJjdXJyZW50X2NvbW1lbnRzIiwibGV2ZWwiLCJfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uMiIsIl9kaWRJdGVyYXRvckVycm9yMiIsIl9pdGVyYXRvckVycm9yMiIsIl9zdGVwMiIsIl9pdGVyYXRvcjIiLCJfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uMyIsIl9kaWRJdGVyYXRvckVycm9yMyIsIl9pdGVyYXRvckVycm9yMyIsIl9zdGVwMyIsIl9pdGVyYXRvcjMiLCJjaGlsZCIsIl9pIiwicGFyZW50X2lkIiwicGFyZW50X2NvbW1lbnRfaWQiLCJnZW5lcmF0ZUNvbW1lbnRzIiwicGF0aF90b19yZWdleHBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyIsInBhdGhfdG9fcmVnZXhwX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdCIsInBhdHRlcm5DYWNoZSIsImNhY2hlQ291bnQiLCJvcHRpb25zIiwicGFyZW50IiwiX29wdGlvbnMiLCJfb3B0aW9ucyRleGFjdCIsIl9vcHRpb25zJHN0cmljdCIsIl9vcHRpb25zJHNlbnNpdGl2ZSIsIl9jb21waWxlUGF0aCIsInBhdHRlcm4iLCJjYWNoZUtleSIsImVuZCIsImNhY2hlIiwia2V5cyIsImNvbXBpbGVkUGF0dGVybiIsInJlIiwiY29tcGlsZVBhdGgiLCJleGVjIiwidmFsdWVzIiwic2xpY2UiLCJpc0V4YWN0IiwicGFyYW1zIiwicmVkdWNlIiwibWVtbyIsImluZGV4IiwiR2xvYmFsUG9zdENvbnRlbnQiLCJhbGJ1bV9zb25ncyIsIl9hcnIiLCJfUmVhY3QkY3JlYXRlRWxlbWVudCIsImdlbmVyYXRlQWxidW1Tb25ncyIsInBhZGRpbmdCb3R0b20iLCJtaW5IZWlnaHQiLCJwYWRkaW5nUmlnaHQiLCJyZWxlYXNlX2RhdGUiLCJfZGVmaW5lUHJvcGVydHkiLCJHbG9iYWxQb3N0IiwiX3N0YW5kYXJkX2hlYWRlcl9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fIiwiX2NvbW1lbnRzX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX18iLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJwcm9wSXNFbnVtZXJhYmxlIiwicHJvcGVydHlJc0VudW1lcmFibGUiLCJ0ZXN0MSIsImdldE93blByb3BlcnR5TmFtZXMiLCJ0ZXN0MiIsImZyb21DaGFyQ29kZSIsIm1hcCIsImpvaW4iLCJ0ZXN0MyIsInNwbGl0IiwiZm9yRWFjaCIsImxldHRlciIsInNob3VsZFVzZU5hdGl2ZSIsImZyb20iLCJzeW1ib2xzIiwidG8iLCJ2YWwiLCJ0b09iamVjdCIsIkFwcCIsIm9uQ2xpY2siLCJoYW5kbGVDbGljayIsInJlYWN0X3JvdXRlcl9kb21fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXyIsInJlYWN0X3JvdXRlcl9kb21fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXyIsIl9mZWVkX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X18iLCJfdXNlcl9wb3N0X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV84X18iLCJfdXNlcl9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfN19fIiwiX2ZvbGxvd2Vyc19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTVfXyIsIl9mb2xsb3dpbmdfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzE2X18iLCJfbG9naW5fanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzEzX18iLCJfcmVnaXN0ZXJfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzE0X18iLCJfZ2xvYmFsX3Bvc3RfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzlfXyIsIl9hcnRpc3RfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzEwX18iLCJfYXJ0aXN0X3NvbmdzX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xMV9fIiwiX2FydGlzdF9hbGJ1bXNfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzEyX18iLCJDb250YWN0IiwiQWJvdXQiLCJzcmMiLCJOZXdQb3N0U3VibWlzc2lvbiIsImF1dG9jb21wbGV0ZSIsInJvd3MiLCJjb2xzIiwiRmVlZCIsIl9wb3N0X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX18iLCJjbGFzcyIsIlVzZXJJbmZvIiwidXNlciIsImRlc2NyaXB0aW9uIiwiRm9sbG93ZXJJbmZvIiwiZm9sbG93cyIsImZvbGxvd2VlcyIsIlVzZXJQYWdlIiwiVXNlclBvc3RDb250ZW50IiwiVXNlclBvc3QiLCJ1c2VyX3Bvc3QiLCJGb2xsb3dpbmdJbmZvIiwiQWxidW1EaXNwbGF5IiwiZ2VuZXJhdGVBbGJ1bXMiLCJTb25nRGlzcGxheSIsImdlbmVyYXRlU29uZ3MiLCJBcnRpc3RQb3N0IiwiYWxidW1fZGF0YSIsInNvbmdfZGF0YSIsIkFydGlzdFNvbmdzUGFnZSIsIkFydGlzdEFsYnVtc1BhZ2UiLCJMb2dpblBhZ2UiLCJjb2xvciIsIlJlZ2lzdGVyUGFnZSIsIkZvbGxvd2Vyc1BhZ2UiLCJmb2xsb3dlcnMiLCJmb2xsb3dlciIsImdlbmVyYXRlRm9sbG93ZXJzIiwiRm9sbG93aW5nUGFnZSIsImZvbGxvd2luZyIsImZvbGxvdyIsImdlbmVyYXRlRm9sbG93cyIsImlzYXJyYXkiLCJwYXRoVG9SZWdleHAiLCJwYXJzZSIsImNvbXBpbGUiLCJzdHIiLCJ0b2tlbnNUb0Z1bmN0aW9uIiwidG9rZW5zVG9SZWdFeHAiLCJQQVRIX1JFR0VYUCIsIlJlZ0V4cCIsInJlcyIsInRva2VucyIsImRlZmF1bHREZWxpbWl0ZXIiLCJkZWxpbWl0ZXIiLCJlc2NhcGVkIiwib2Zmc2V0IiwicHJlZml4IiwiY2FwdHVyZSIsImdyb3VwIiwibW9kaWZpZXIiLCJhc3RlcmlzayIsInBhcnRpYWwiLCJyZXBlYXQiLCJvcHRpb25hbCIsImVzY2FwZUdyb3VwIiwiZXNjYXBlU3RyaW5nIiwic3Vic3RyIiwiZW5jb2RlVVJJQ29tcG9uZW50UHJldHR5IiwiZW5jb2RlVVJJIiwiY2hhckNvZGVBdCIsInRvU3RyaW5nIiwidG9VcHBlckNhc2UiLCJtYXRjaGVzIiwib2JqIiwib3B0cyIsImVuY29kZSIsInByZXR0eSIsImVuY29kZVVSSUNvbXBvbmVudCIsInRva2VuIiwic2VnbWVudCIsImoiLCJ0ZXN0IiwiYXR0YWNoS2V5cyIsImZsYWdzIiwiZW5kc1dpdGhEZWxpbWl0ZXIiLCJncm91cHMiLCJyZWdleHBUb1JlZ2V4cCIsInBhcnRzIiwiYXJyYXlUb1JlZ2V4cCIsInN0cmluZ1RvUmVnZXhwIiwicmVnaXN0ZXIiLCJkZWZhdWx0IiwicmV2ZXJ0IiwiayIsImZvciIsInEiLCJ1IiwidiIsInciLCJ4IiwieSIsInoiLCJBIiwiQiIsIkMiLCJEIiwiZyIsImgiLCJhYSIsIkUiLCJpc01vdW50ZWQiLCJlbnF1ZXVlRm9yY2VVcGRhdGUiLCJlbnF1ZXVlUmVwbGFjZVN0YXRlIiwiZW5xdWV1ZVNldFN0YXRlIiwiRiIsIkciLCJyZWZzIiwidXBkYXRlciIsIkgiLCJJIiwiaXNSZWFjdENvbXBvbmVudCIsIkoiLCJpc1B1cmVSZWFjdENvbXBvbmVudCIsIksiLCJjdXJyZW50RGlzcGF0Y2hlciIsIkwiLCJNIiwiX19zZWxmIiwiX19zb3VyY2UiLCJOIiwiZGVmYXVsdFByb3BzIiwiJCR0eXBlb2YiLCJfb3duZXIiLCJPIiwiUCIsIlEiLCJSIiwicG9wIiwicmVzdWx0Iiwia2V5UHJlZml4IiwiUyIsIlYiLCJUIiwiVSIsImlzQXJyYXkiLCI9IiwiOiIsImVzY2FwZSIsImNhIiwiZGEiLCJXIiwiYmEiLCJYIiwidG9BcnJheSIsIlB1cmVDb21wb25lbnQiLCJjcmVhdGVDb250ZXh0IiwiX2NhbGN1bGF0ZUNoYW5nZWRCaXRzIiwiX2N1cnJlbnRWYWx1ZSIsIl9jdXJyZW50VmFsdWUyIiwiX3RocmVhZENvdW50IiwiUHJvdmlkZXIiLCJDb25zdW1lciIsIl9jb250ZXh0IiwiZm9yd2FyZFJlZiIsImxhenkiLCJfY3RvciIsIl9zdGF0dXMiLCJfcmVzdWx0IiwiY29tcGFyZSIsIkZyYWdtZW50IiwiU3RyaWN0TW9kZSIsIlN1c3BlbnNlIiwiY2xvbmVFbGVtZW50IiwiY3JlYXRlRmFjdG9yeSIsImlzVmFsaWRFbGVtZW50IiwidmVyc2lvbiIsInVuc3RhYmxlX0NvbmN1cnJlbnRNb2RlIiwidW5zdGFibGVfUHJvZmlsZXIiLCJfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRCIsIlJlYWN0Q3VycmVudE93bmVyIiwiWSIsIloiLCJlYSIsImZhIiwiaGEiLCJpYSIsImphIiwib25FcnJvciIsImthIiwibWEiLCJuYSIsIm9hIiwiaW5kZXhPZiIsInBhIiwiZXh0cmFjdEV2ZW50cyIsImV2ZW50VHlwZXMiLCJxYSIsInBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzIiwicmEiLCJyZWdpc3RyYXRpb25OYW1lIiwic2EiLCJ0YSIsImRlcGVuZGVuY2llcyIsInVhIiwidmEiLCJ3YSIsInhhIiwiY3VycmVudFRhcmdldCIsImxhIiwieWEiLCJ6YSIsIkFhIiwiQmEiLCJfZGlzcGF0Y2hMaXN0ZW5lcnMiLCJfZGlzcGF0Y2hJbnN0YW5jZXMiLCJpc1Byb3BhZ2F0aW9uU3RvcHBlZCIsImlzUGVyc2lzdGVudCIsInJlbGVhc2UiLCJDYSIsImluamVjdEV2ZW50UGx1Z2luT3JkZXIiLCJpbmplY3RFdmVudFBsdWdpbnNCeU5hbWUiLCJEYSIsInN0YXRlTm9kZSIsImRpc2FibGVkIiwiRWEiLCJGYSIsIk1hdGgiLCJyYW5kb20iLCJHYSIsIkhhIiwiSWEiLCJwYXJlbnROb2RlIiwidGFnIiwiSmEiLCJLYSIsIkxhIiwiTWEiLCJOYSIsImRpc3BhdGNoQ29uZmlnIiwiT2EiLCJfdGFyZ2V0SW5zdCIsIlBhIiwiUWEiLCJSYSIsIlNhIiwid2luZG93IiwiZG9jdW1lbnQiLCJUYSIsInRvTG93ZXJDYXNlIiwiVWEiLCJhbmltYXRpb25lbmQiLCJhbmltYXRpb25pdGVyYXRpb24iLCJhbmltYXRpb25zdGFydCIsInRyYW5zaXRpb25lbmQiLCJWYSIsIldhIiwiWGEiLCJhbmltYXRpb24iLCJ0cmFuc2l0aW9uIiwiWWEiLCJaYSIsIiRhIiwiYWIiLCJiYiIsImNiIiwiZWIiLCJmYiIsImdiIiwidGV4dENvbnRlbnQiLCJoYiIsImliIiwibmF0aXZlRXZlbnQiLCJJbnRlcmZhY2UiLCJpc0RlZmF1bHRQcmV2ZW50ZWQiLCJkZWZhdWx0UHJldmVudGVkIiwicmV0dXJuVmFsdWUiLCJrYiIsImV2ZW50UG9vbCIsImxiIiwiZGVzdHJ1Y3RvciIsImpiIiwiZ2V0UG9vbGVkIiwicHJldmVudERlZmF1bHQiLCJzdG9wUHJvcGFnYXRpb24iLCJjYW5jZWxCdWJibGUiLCJwZXJzaXN0IiwiZXZlbnRQaGFzZSIsImJ1YmJsZXMiLCJjYW5jZWxhYmxlIiwidGltZVN0YW1wIiwibm93IiwiaXNUcnVzdGVkIiwiZXh0ZW5kIiwibWIiLCJuYiIsIm9iIiwicGIiLCJxYiIsImRvY3VtZW50TW9kZSIsInJiIiwic2IiLCJ0YiIsInViIiwiYmVmb3JlSW5wdXQiLCJidWJibGVkIiwiY2FwdHVyZWQiLCJjb21wb3NpdGlvbkVuZCIsImNvbXBvc2l0aW9uU3RhcnQiLCJjb21wb3NpdGlvblVwZGF0ZSIsInZiIiwid2IiLCJrZXlDb2RlIiwieGIiLCJkZXRhaWwiLCJ5YiIsIkJiIiwibG9jYWxlIiwid2hpY2giLCJ6YiIsImN0cmxLZXkiLCJhbHRLZXkiLCJtZXRhS2V5IiwiY2hhciIsIkFiIiwiQ2IiLCJEYiIsIkViIiwiSGIiLCJJYiIsIkpiIiwiS2IiLCJMYiIsIk1iIiwiTmIiLCJPYiIsIlBiIiwiZGF0ZXRpbWUiLCJkYXRldGltZS1sb2NhbCIsImVtYWlsIiwibW9udGgiLCJudW1iZXIiLCJwYXNzd29yZCIsInJhbmdlIiwic2VhcmNoIiwidGVsIiwidGltZSIsIndlZWsiLCJRYiIsIm5vZGVOYW1lIiwiUmIiLCJzcmNFbGVtZW50IiwiY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQiLCJub2RlVHlwZSIsIlNiIiwic2V0QXR0cmlidXRlIiwiVGIiLCJWYiIsIl92YWx1ZVRyYWNrZXIiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJzZXQiLCJnZXRWYWx1ZSIsInNldFZhbHVlIiwic3RvcFRyYWNraW5nIiwiVWIiLCJXYiIsImNoZWNrZWQiLCJYYiIsIlliIiwiWmIiLCIkYiIsImFjIiwiYmMiLCJjYyIsImRjIiwiZWMiLCJmYyIsImdjIiwiaGMiLCJpYyIsImpjIiwia2MiLCJsYyIsIm1jIiwiZGlzcGxheU5hbWUiLCJuYyIsIl9kZWJ1Z093bmVyIiwiX2RlYnVnU291cmNlIiwiZmlsZU5hbWUiLCJsaW5lTnVtYmVyIiwib2MiLCJwYyIsInFjIiwicmMiLCJhY2NlcHRzQm9vbGVhbnMiLCJhdHRyaWJ1dGVOYW1lIiwiYXR0cmlidXRlTmFtZXNwYWNlIiwibXVzdFVzZVByb3BlcnR5IiwicHJvcGVydHlOYW1lIiwidmMiLCJ3YyIsInhjIiwidGMiLCJpc05hTiIsInVjIiwic2MiLCJyZW1vdmVBdHRyaWJ1dGUiLCJzZXRBdHRyaWJ1dGVOUyIsInljIiwiemMiLCJkZWZhdWx0Q2hlY2tlZCIsImRlZmF1bHRWYWx1ZSIsIl93cmFwcGVyU3RhdGUiLCJpbml0aWFsQ2hlY2tlZCIsIkFjIiwiaW5pdGlhbFZhbHVlIiwiY29udHJvbGxlZCIsIkJjIiwiQ2MiLCJEYyIsIkVjIiwib3duZXJEb2N1bWVudCIsImFjdGl2ZUVsZW1lbnQiLCJ0YWJJbmRleCIsIkZjIiwiY2hhbmdlIiwiR2MiLCJKYyIsIktjIiwiTGMiLCJNYyIsIk5jIiwiT2MiLCJQYyIsImRldGFjaEV2ZW50IiwiUWMiLCJSYyIsImF0dGFjaEV2ZW50IiwiU2MiLCJUYyIsIlVjIiwiVmMiLCJfaXNJbnB1dEV2ZW50U3VwcG9ydGVkIiwiV2MiLCJ2aWV3IiwiWGMiLCJBbHQiLCJDb250cm9sIiwiTWV0YSIsIlNoaWZ0IiwiWWMiLCJnZXRNb2RpZmllclN0YXRlIiwiWmMiLCIkYyIsImFkIiwiYmQiLCJjZCIsImRkIiwic2NyZWVuWCIsInNjcmVlblkiLCJjbGllbnRYIiwiY2xpZW50WSIsInBhZ2VYIiwicGFnZVkiLCJzaGlmdEtleSIsImJ1dHRvbiIsImJ1dHRvbnMiLCJyZWxhdGVkVGFyZ2V0IiwiZnJvbUVsZW1lbnQiLCJ0b0VsZW1lbnQiLCJtb3ZlbWVudFgiLCJtb3ZlbWVudFkiLCJlZCIsInBvaW50ZXJJZCIsInByZXNzdXJlIiwidGFuZ2VudGlhbFByZXNzdXJlIiwidGlsdFgiLCJ0aWx0WSIsInR3aXN0IiwicG9pbnRlclR5cGUiLCJpc1ByaW1hcnkiLCJmZCIsIm1vdXNlRW50ZXIiLCJtb3VzZUxlYXZlIiwicG9pbnRlckVudGVyIiwicG9pbnRlckxlYXZlIiwiZ2QiLCJkZWZhdWx0VmlldyIsInBhcmVudFdpbmRvdyIsImFsdGVybmF0ZSIsImhkIiwiamQiLCJrZCIsImVmZmVjdFRhZyIsImxkIiwibmQiLCJzaWJsaW5nIiwibWQiLCJvZCIsImFuaW1hdGlvbk5hbWUiLCJlbGFwc2VkVGltZSIsInBzZXVkb0VsZW1lbnQiLCJwZCIsImNsaXBib2FyZERhdGEiLCJxZCIsInJkIiwiY2hhckNvZGUiLCJzZCIsIkVzYyIsIlNwYWNlYmFyIiwiTGVmdCIsIlVwIiwiUmlnaHQiLCJEb3duIiwiRGVsIiwiV2luIiwiTWVudSIsIkFwcHMiLCJTY3JvbGwiLCJNb3pQcmludGFibGVLZXkiLCJ0ZCIsIjgiLCI5IiwiMTIiLCIxMyIsIjE2IiwiMTciLCIxOCIsIjE5IiwiMjAiLCIyNyIsIjMyIiwiMzMiLCIzNCIsIjM1IiwiMzYiLCIzNyIsIjM4IiwiMzkiLCI0MCIsIjQ1IiwiNDYiLCIxMTIiLCIxMTMiLCIxMTQiLCIxMTUiLCIxMTYiLCIxMTciLCIxMTgiLCIxMTkiLCIxMjAiLCIxMjEiLCIxMjIiLCIxMjMiLCIxNDQiLCIxNDUiLCIyMjQiLCJ1ZCIsInZkIiwiZGF0YVRyYW5zZmVyIiwid2QiLCJ0b3VjaGVzIiwidGFyZ2V0VG91Y2hlcyIsImNoYW5nZWRUb3VjaGVzIiwieGQiLCJ5ZCIsImRlbHRhWCIsIndoZWVsRGVsdGFYIiwiZGVsdGFZIiwid2hlZWxEZWx0YVkiLCJ3aGVlbERlbHRhIiwiZGVsdGFaIiwiZGVsdGFNb2RlIiwiemQiLCJBZCIsIkJkIiwiQ2QiLCJpc0ludGVyYWN0aXZlIiwiRGQiLCJpc0ludGVyYWN0aXZlVG9wTGV2ZWxFdmVudFR5cGUiLCJFZCIsIkZkIiwiR2QiLCJ0YXJnZXRJbnN0IiwiYW5jZXN0b3JzIiwiY29udGFpbmVySW5mbyIsInRvcExldmVsVHlwZSIsIkhkIiwiSWQiLCJKZCIsImFkZEV2ZW50TGlzdGVuZXIiLCJLZCIsIkxkIiwiTWQiLCJOZCIsIk9kIiwiUGQiLCJRZCIsImZpcnN0Q2hpbGQiLCJSZCIsIm5leHRTaWJsaW5nIiwiVGQiLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnREb2N1bWVudCIsIlVkIiwiY29udGVudEVkaXRhYmxlIiwiVmQiLCJXZCIsInNlbGVjdCIsIlhkIiwiWWQiLCJaZCIsIiRkIiwiYWUiLCJzdGFydCIsInNlbGVjdGlvblN0YXJ0Iiwic2VsZWN0aW9uRW5kIiwiYW5jaG9yTm9kZSIsImdldFNlbGVjdGlvbiIsImFuY2hvck9mZnNldCIsImZvY3VzTm9kZSIsImZvY3VzT2Zmc2V0IiwiYmUiLCJvblNlbGVjdCIsImVlIiwiZGUiLCJmZSIsInNlbGVjdGVkIiwiZGVmYXVsdFNlbGVjdGVkIiwiZ2UiLCJoZSIsImllIiwiamUiLCJTaW1wbGVFdmVudFBsdWdpbiIsIkVudGVyTGVhdmVFdmVudFBsdWdpbiIsIkNoYW5nZUV2ZW50UGx1Z2luIiwiU2VsZWN0RXZlbnRQbHVnaW4iLCJCZWZvcmVJbnB1dEV2ZW50UGx1Z2luIiwia2UiLCJodG1sIiwibWF0aG1sIiwic3ZnIiwibGUiLCJtZSIsIm5lIiwib2UiLCJuYW1lc3BhY2VVUkkiLCJpbm5lckhUTUwiLCJyZW1vdmVDaGlsZCIsImFwcGVuZENoaWxkIiwiTVNBcHAiLCJleGVjVW5zYWZlTG9jYWxGdW5jdGlvbiIsInBlIiwibGFzdENoaWxkIiwibm9kZVZhbHVlIiwicWUiLCJhbmltYXRpb25JdGVyYXRpb25Db3VudCIsImJvcmRlckltYWdlT3V0c2V0IiwiYm9yZGVySW1hZ2VTbGljZSIsImJvcmRlckltYWdlV2lkdGgiLCJib3hGbGV4IiwiYm94RmxleEdyb3VwIiwiYm94T3JkaW5hbEdyb3VwIiwiY29sdW1uQ291bnQiLCJjb2x1bW5zIiwiZmxleCIsImZsZXhHcm93IiwiZmxleFBvc2l0aXZlIiwiZmxleFNocmluayIsImZsZXhOZWdhdGl2ZSIsImZsZXhPcmRlciIsImdyaWRBcmVhIiwiZ3JpZFJvdyIsImdyaWRSb3dFbmQiLCJncmlkUm93U3BhbiIsImdyaWRSb3dTdGFydCIsImdyaWRDb2x1bW4iLCJncmlkQ29sdW1uRW5kIiwiZ3JpZENvbHVtblNwYW4iLCJncmlkQ29sdW1uU3RhcnQiLCJmb250V2VpZ2h0IiwibGluZUNsYW1wIiwibGluZUhlaWdodCIsIm9wYWNpdHkiLCJvcmRlciIsIm9ycGhhbnMiLCJ0YWJTaXplIiwid2lkb3dzIiwiem9vbSIsImZpbGxPcGFjaXR5IiwiZmxvb2RPcGFjaXR5Iiwic3RvcE9wYWNpdHkiLCJzdHJva2VEYXNoYXJyYXkiLCJzdHJva2VEYXNob2Zmc2V0Iiwic3Ryb2tlTWl0ZXJsaW1pdCIsInN0cm9rZU9wYWNpdHkiLCJzdHJva2VXaWR0aCIsInNlIiwidHJpbSIsInRlIiwic2V0UHJvcGVydHkiLCJjaGFyQXQiLCJzdWJzdHJpbmciLCJ1ZSIsIm1lbnVpdGVtIiwiYXJlYSIsImJhc2UiLCJiciIsImNvbCIsImVtYmVkIiwiaHIiLCJpbWciLCJrZXlnZW4iLCJsaW5rIiwibWV0YSIsInBhcmFtIiwidHJhY2siLCJ3YnIiLCJ2ZSIsIndlIiwiaXMiLCJ4ZSIsImJsdXIiLCJmb2N1cyIsInllIiwiemUiLCJBZSIsIkJlIiwiYXV0b0ZvY3VzIiwiQ2UiLCJEZSIsInNldFRpbWVvdXQiLCJFZSIsImNsZWFyVGltZW91dCIsIkdlIiwiSGUiLCJTZXQiLCJJZSIsIkplIiwiS2UiLCJMZSIsIk1lIiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dCIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0IiwiTmUiLCJPZSIsIlBlIiwiUWUiLCJSZSIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0IiwiU2UiLCJUZSIsIlVlIiwiVmUiLCJYZSIsImVsZW1lbnRUeXBlIiwicGVuZGluZ1Byb3BzIiwiZmlyc3RDb250ZXh0RGVwZW5kZW5jeSIsIm1lbW9pemVkU3RhdGUiLCJ1cGRhdGVRdWV1ZSIsIm1lbW9pemVkUHJvcHMiLCJsYXN0RWZmZWN0IiwiZmlyc3RFZmZlY3QiLCJuZXh0RWZmZWN0IiwiY2hpbGRFeHBpcmF0aW9uVGltZSIsImV4cGlyYXRpb25UaW1lIiwiWWUiLCIkZSIsImFmIiwiYmYiLCJjZiIsImRmIiwiZWYiLCJwZW5kaW5nQ2hpbGRyZW4iLCJpbXBsZW1lbnRhdGlvbiIsImZmIiwiZGlkRXJyb3IiLCJlYXJsaWVzdFBlbmRpbmdUaW1lIiwibGF0ZXN0UGVuZGluZ1RpbWUiLCJnZiIsImhmIiwibGF0ZXN0UGluZ2VkVGltZSIsImVhcmxpZXN0U3VzcGVuZGVkVGltZSIsImxhdGVzdFN1c3BlbmRlZFRpbWUiLCJqZiIsIm5leHRFeHBpcmF0aW9uVGltZVRvV29ya09uIiwia2YiLCJsZiIsImJhc2VTdGF0ZSIsImZpcnN0VXBkYXRlIiwibGFzdFVwZGF0ZSIsImZpcnN0Q2FwdHVyZWRVcGRhdGUiLCJsYXN0Q2FwdHVyZWRVcGRhdGUiLCJmaXJzdENhcHR1cmVkRWZmZWN0IiwibGFzdENhcHR1cmVkRWZmZWN0IiwibWYiLCJuZiIsInBheWxvYWQiLCJjYWxsYmFjayIsIm9mIiwicGYiLCJxZiIsInJmIiwic2YiLCJ0ZiIsInVmIiwidmYiLCJ3ZiIsInN0YWNrIiwieGYiLCJ5ZiIsInpmIiwiQWYiLCJCZiIsIkNmIiwiRGYiLCJFZiIsIm9ic2VydmVkQml0cyIsIkZmIiwiR2YiLCJIZiIsIklmIiwiSmYiLCJkb2N1bWVudEVsZW1lbnQiLCJ0YWdOYW1lIiwiS2YiLCJMZiIsIk1mIiwiT2YiLCJQZiIsIlFmIiwiVmYiLCJfcmVhY3RJbnRlcm5hbEZpYmVyIiwiUmYiLCJTZiIsIlRmIiwiVWYiLCJXZiIsInNob3VsZENvbXBvbmVudFVwZGF0ZSIsIlhmIiwiY29udGV4dFR5cGUiLCJyZWFkQ29udGV4dCIsIlpmIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCIkZiIsImdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyIsImdldFNuYXBzaG90QmVmb3JlVXBkYXRlIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCIsImNvbXBvbmVudERpZE1vdW50IiwiYWciLCJiZyIsIl9zdHJpbmdSZWYiLCJjZyIsImRnIiwiTWFwIiwiZGVsZXRlIiwiZWciLCJmZyIsImdnIiwiaGciLCJpZyIsImpnIiwia2ciLCJsZyIsIm1nIiwibmciLCJvZyIsInBnIiwicWciLCJyZyIsInNnIiwidGciLCJ1ZyIsInZnIiwid2ciLCJVTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSIsImNvbXBvbmVudFdpbGxVcGRhdGUiLCJjb21wb25lbnREaWRVcGRhdGUiLCJ4ZyIsImdldERlcml2ZWRTdGF0ZUZyb21FcnJvciIsInlnIiwicGVuZGluZ0NvbnRleHQiLCJ6ZyIsInRpbWVkT3V0QXQiLCJmYWxsYmFjayIsIkFnIiwiTmYiLCJaZSIsImVsZW1lbnQiLCJoeWRyYXRlIiwiaGlkZGVuIiwidW5zdGFibGVfb2JzZXJ2ZWRCaXRzIiwiQmciLCJDZyIsIkdnIiwiSGciLCJJZyIsIm9uY2xpY2siLCJKZyIsIldlYWtTZXQiLCJLZyIsIkxnIiwiTWciLCJPZyIsImRlc3Ryb3kiLCJjb21wb25lbnRXaWxsVW5tb3VudCIsIlBnIiwiUWciLCJSZyIsImluc2VydEJlZm9yZSIsIl9yZWFjdFJvb3RDb250YWluZXIiLCJTZyIsIndhc011bHRpcGxlIiwibXVsdGlwbGUiLCJGZSIsIk5nIiwidGgiLCJzaCIsImhhcyIsImFkZCIsIlVnIiwiV2Vha01hcCIsIlZnIiwiV2ciLCJYZyIsImNvbXBvbmVudERpZENhdGNoIiwiWWciLCJjb21wb25lbnRTdGFjayIsIlpnIiwiJGciLCJhaCIsImJoIiwiY2giLCJkaCIsImVoIiwiZmgiLCJnaCIsImhoIiwiaWgiLCJqaCIsInVuc3RhYmxlX2NhbmNlbENhbGxiYWNrIiwia2giLCJjcmVhdGVFbGVtZW50TlMiLCJjcmVhdGVUZXh0Tm9kZSIsImxoIiwibWgiLCJwZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWUiLCJuaCIsIm1heER1cmF0aW9uIiwicGluZ0NhY2hlIiwib2giLCJmaW5pc2hlZFdvcmsiLCJwaCIsInFoIiwicmgiLCJ1aCIsInZoIiwid2giLCJ4aCIsInloIiwiemgiLCJBaCIsIkJoIiwiQ2giLCJEaCIsIkVoIiwiRmgiLCJ1bnN0YWJsZV9ub3ciLCJHaCIsIkhoIiwiSWgiLCJKaCIsIktoIiwidW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayIsIkxoIiwidGltZW91dCIsInRpbWVvdXRIYW5kbGUiLCJOaCIsIk9oIiwibmV4dFNjaGVkdWxlZFJvb3QiLCJQaCIsIlFoIiwiUmgiLCJ1bnN0YWJsZV9zaG91bGRZaWVsZCIsIl9vbkNvbXBsZXRlIiwiU2giLCJmaXJzdEJhdGNoIiwiX2V4cGlyYXRpb25UaW1lIiwiX2RlZmVyIiwicmFuZ2VDb3VudCIsImRiIiwiZm9jdXNlZEVsZW0iLCJzZWxlY3Rpb25SYW5nZSIsIllmIiwiVmgiLCJfX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZSIsIlNkIiwiY29udGFpbnMiLCJjb21wYXJlRG9jdW1lbnRQb3NpdGlvbiIsIm1pbiIsImNyZWF0ZVJhbmdlIiwic2V0U3RhcnQiLCJyZW1vdmVBbGxSYW5nZXMiLCJhZGRSYW5nZSIsInNldEVuZCIsInNjcm9sbExlZnQiLCJzY3JvbGxUb3AiLCJGYiIsIkdiIiwiSGMiLCJpaSIsIkRnIiwiRWciLCJqaSIsIkljIiwiRmciLCJjZSIsIlRoIiwiVWgiLCJXaCIsIlhoIiwiWWgiLCJaaCIsImFpIiwiX3Jvb3QiLCJfY2FsbGJhY2tzIiwiX25leHQiLCJfaGFzQ2hpbGRyZW4iLCJfZGlkQ29tcGxldGUiLCJfY2hpbGRyZW4iLCJiaSIsIl9kaWRDb21taXQiLCJfb25Db21taXQiLCJjaSIsIl9pbnRlcm5hbFJvb3QiLCJkaSIsImZpIiwibGVnYWN5X3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyIiwiaGFzQXR0cmlidXRlIiwiZWkiLCJnaSIsIiRoIiwicXVlcnlTZWxlY3RvckFsbCIsImZvcm0iLCJjb21taXQiLCJ1bm1vdW50IiwiY3JlYXRlQmF0Y2giLCJraSIsImNyZWF0ZVBvcnRhbCIsImZpbmRET01Ob2RlIiwidW5zdGFibGVfcmVuZGVyU3VidHJlZUludG9Db250YWluZXIiLCJ1bm1vdW50Q29tcG9uZW50QXROb2RlIiwidW5zdGFibGVfY3JlYXRlUG9ydGFsIiwidW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXMiLCJ1bnN0YWJsZV9pbnRlcmFjdGl2ZVVwZGF0ZXMiLCJmbHVzaFN5bmMiLCJ1bnN0YWJsZV9jcmVhdGVSb290IiwidW5zdGFibGVfZmx1c2hDb250cm9sbGVkIiwiRXZlbnRzIiwiZmluZEZpYmVyQnlIb3N0SW5zdGFuY2UiLCJpc0Rpc2FibGVkIiwic3VwcG9ydHNGaWJlciIsImluamVjdCIsIm9uQ29tbWl0RmliZXJSb290Iiwib25Db21taXRGaWJlclVubW91bnQiLCJXZSIsIm92ZXJyaWRlUHJvcHMiLCJmaW5kSG9zdEluc3RhbmNlQnlGaWJlciIsImJ1bmRsZVR5cGUiLCJyZW5kZXJlclBhY2thZ2VOYW1lIiwibGkiLCJtaSIsImdsb2JhbCIsInByZXZpb3VzIiwicHJpb3JpdHlMZXZlbCIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsImNhbmNlbEFuaW1hdGlvbkZyYW1lIiwicGVyZm9ybWFuY2UiLCJfc2NoZWRNb2NrIiwiTWVzc2FnZUNoYW5uZWwiLCJwb3J0MiIsInBvcnQxIiwib25tZXNzYWdlIiwicG9zdE1lc3NhZ2UiLCJ1bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eSIsInVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5IiwidW5zdGFibGVfTm9ybWFsUHJpb3JpdHkiLCJ1bnN0YWJsZV9JZGxlUHJpb3JpdHkiLCJ1bnN0YWJsZV9Mb3dQcmlvcml0eSIsInVuc3RhYmxlX3J1bldpdGhQcmlvcml0eSIsInVuc3RhYmxlX3dyYXBDYWxsYmFjayIsInVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsIiwidW5zdGFibGVfY29udGludWVFeGVjdXRpb24iLCJ1bnN0YWJsZV9wYXVzZUV4ZWN1dGlvbiIsInVuc3RhYmxlX2dldEZpcnN0Q2FsbGJhY2tOb2RlIiwiRnVuY3Rpb24iLCJvcmlnaW5hbE1vZHVsZSIsIndlYnBhY2tQb2x5ZmlsbCIsIlJlYWN0UHJvcFR5cGVzU2VjcmV0IiwiZW1wdHlGdW5jdGlvbiIsInNoaW0iLCJwcm9wTmFtZSIsImNvbXBvbmVudE5hbWUiLCJwcm9wRnVsbE5hbWUiLCJzZWNyZXQiLCJnZXRTaGltIiwiUmVhY3RQcm9wVHlwZXMiLCJhcnJheSIsInN5bWJvbCIsImFueSIsImFycmF5T2YiLCJpbnN0YW5jZU9mIiwib2JqZWN0T2YiLCJvbmVPZiIsImNoZWNrUHJvcFR5cGVzIiwiUHJvcFR5cGVzIiwiYXJyIiwiaXNBYnNvbHV0ZSIsInNwbGljZU9uZSIsImxpc3QiLCJyZXNvbHZlX3BhdGhuYW1lIiwidG9QYXJ0cyIsImZyb21QYXJ0cyIsImlzVG9BYnMiLCJpc0Zyb21BYnMiLCJtdXN0RW5kQWJzIiwiaGFzVHJhaWxpbmdTbGFzaCIsImxhc3QiLCJ1cCIsInBhcnQiLCJ1bnNoaWZ0IiwiYWRkTGVhZGluZ1NsYXNoIiwiaGFzQmFzZW5hbWUiLCJzdHJpcEJhc2VuYW1lIiwic3RyaXBUcmFpbGluZ1NsYXNoIiwiY3JlYXRlUGF0aCIsImhhc2giLCJMb2NhdGlvblV0aWxzX2NyZWF0ZUxvY2F0aW9uIiwiY3VycmVudExvY2F0aW9uIiwiaGFzaEluZGV4Iiwic2VhcmNoSW5kZXgiLCJwYXJzZVBhdGgiLCJkZWNvZGVVUkkiLCJVUklFcnJvciIsImVzX2NyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyIiwicHJvbXB0IiwibGlzdGVuZXJzIiwic2V0UHJvbXB0IiwibmV4dFByb21wdCIsImNvbmZpcm1UcmFuc2l0aW9uVG8iLCJhY3Rpb24iLCJnZXRVc2VyQ29uZmlybWF0aW9uIiwiYXBwZW5kTGlzdGVuZXIiLCJmbiIsImlzQWN0aXZlIiwibGlzdGVuZXIiLCJmaWx0ZXIiLCJub3RpZnlMaXN0ZW5lcnMiLCJjYW5Vc2VET00iLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiZ2V0Q29uZmlybWF0aW9uIiwibWVzc2FnZSIsImNvbmZpcm0iLCJjcmVhdGVCcm93c2VySGlzdG9yeV90eXBlb2YiLCJjcmVhdGVCcm93c2VySGlzdG9yeV9leHRlbmRzIiwiZ2V0SGlzdG9yeVN0YXRlIiwiZXNfY3JlYXRlQnJvd3Nlckhpc3RvcnkiLCJpbnZhcmlhbnRfYnJvd3Nlcl9kZWZhdWx0IiwiZ2xvYmFsSGlzdG9yeSIsImNhblVzZUhpc3RvcnkiLCJuYXZpZ2F0b3IiLCJ1c2VyQWdlbnQiLCJuZWVkc0hhc2hDaGFuZ2VMaXN0ZW5lciIsIl9wcm9wcyRmb3JjZVJlZnJlc2giLCJmb3JjZVJlZnJlc2giLCJfcHJvcHMkZ2V0VXNlckNvbmZpcm0iLCJfcHJvcHMka2V5TGVuZ3RoIiwia2V5TGVuZ3RoIiwiYmFzZW5hbWUiLCJnZXRET01Mb2NhdGlvbiIsImhpc3RvcnlTdGF0ZSIsIl93aW5kb3ckbG9jYXRpb24iLCJjcmVhdGVLZXkiLCJ0cmFuc2l0aW9uTWFuYWdlciIsIm5leHRTdGF0ZSIsImhhbmRsZVBvcFN0YXRlIiwiaXNFeHRyYW5lb3VzUG9wc3RhdGVFdmVudCIsImhhbmRsZVBvcCIsImhhbmRsZUhhc2hDaGFuZ2UiLCJmb3JjZU5leHRQb3AiLCJvayIsInJldmVydFBvcCIsImZyb21Mb2NhdGlvbiIsInRvTG9jYXRpb24iLCJ0b0luZGV4IiwiYWxsS2V5cyIsImZyb21JbmRleCIsImRlbHRhIiwiZ28iLCJpbml0aWFsTG9jYXRpb24iLCJjcmVhdGVIcmVmIiwibGlzdGVuZXJDb3VudCIsImNoZWNrRE9NTGlzdGVuZXJzIiwiaXNCbG9ja2VkIiwicHVzaFN0YXRlIiwicHJldkluZGV4IiwibmV4dEtleXMiLCJyZXBsYWNlU3RhdGUiLCJnb0JhY2siLCJnb0ZvcndhcmQiLCJibG9jayIsInVuYmxvY2siLCJsaXN0ZW4iLCJ1bmxpc3RlbiIsIlJvdXRlcl9leHRlbmRzIiwiUm91dGVyX1JvdXRlciIsIlJvdXRlciIsInJlYWN0X3JvdXRlcl9kb21fZXNfUm91dGVyIiwiQnJvd3NlclJvdXRlcl9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwiQnJvd3NlclJvdXRlcl9Ccm93c2VyUm91dGVyIiwiQnJvd3NlclJvdXRlciIsIkJyb3dzZXJSb3V0ZXJfY2xhc3NDYWxsQ2hlY2siLCJCcm93c2VyUm91dGVyX2luaGVyaXRzIiwiZXNfQnJvd3NlclJvdXRlciIsInByZXNldHMiLCJfX0RBVEFfXyIsImdldEVsZW1lbnRCeUlkIiwiU3dpdGNoX1N3aXRjaCIsIlN3aXRjaCIsIl9lbGVtZW50JHByb3BzIiwicGF0aFByb3AiLCJlc19Td2l0Y2giXSwibWFwcGluZ3MiOiJhQUNBLElBQUFBLEVBQUEsR0FHQSxTQUFBQyxFQUFBQyxHQUdBLEdBQUFGLEVBQUFFLEdBQ0EsT0FBQUYsRUFBQUUsR0FBQUMsUUFHQSxJQUFBQyxFQUFBSixFQUFBRSxHQUFBLENBQ0FHLEVBQUFILEVBQ0FJLEdBQUEsRUFDQUgsUUFBQSxJQVVBLE9BTkFJLEVBQUFMLEdBQUFNLEtBQUFKLEVBQUFELFFBQUFDLElBQUFELFFBQUFGLEdBR0FHLEVBQUFFLEdBQUEsRUFHQUYsRUFBQUQsUUFLQUYsRUFBQVEsRUFBQUYsRUFHQU4sRUFBQVMsRUFBQVYsRUFHQUMsRUFBQVUsRUFBQSxTQUFBUixFQUFBUyxFQUFBQyxHQUNBWixFQUFBYSxFQUFBWCxFQUFBUyxJQUNBRyxPQUFBQyxlQUFBYixFQUFBUyxFQUFBLENBQTBDSyxZQUFBLEVBQUFDLElBQUFMLEtBSzFDWixFQUFBa0IsRUFBQSxTQUFBaEIsR0FDQSxvQkFBQWlCLGVBQUFDLGFBQ0FOLE9BQUFDLGVBQUFiLEVBQUFpQixPQUFBQyxZQUFBLENBQXdEQyxNQUFBLFdBRXhEUCxPQUFBQyxlQUFBYixFQUFBLGNBQWlEbUIsT0FBQSxLQVFqRHJCLEVBQUFzQixFQUFBLFNBQUFELEVBQUFFLEdBRUEsR0FEQSxFQUFBQSxJQUFBRixFQUFBckIsRUFBQXFCLElBQ0EsRUFBQUUsRUFBQSxPQUFBRixFQUNBLEtBQUFFLEdBQUEsaUJBQUFGLFFBQUFHLFdBQUEsT0FBQUgsRUFDQSxJQUFBSSxFQUFBWCxPQUFBWSxPQUFBLE1BR0EsR0FGQTFCLEVBQUFrQixFQUFBTyxHQUNBWCxPQUFBQyxlQUFBVSxFQUFBLFdBQXlDVCxZQUFBLEVBQUFLLFVBQ3pDLEVBQUFFLEdBQUEsaUJBQUFGLEVBQUEsUUFBQU0sS0FBQU4sRUFBQXJCLEVBQUFVLEVBQUFlLEVBQUFFLEVBQUEsU0FBQUEsR0FBZ0gsT0FBQU4sRUFBQU0s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QWk2QyxHQUFBbHVDLEVBRUEzRCxFQUFBdThCLEVBQ0E1bEMsRUFBZ0JsSSxPQUFBeUosRUFBQSxFQUFBekosQ0FBU2dKLEVBQUFRLFNBQUEsQ0FBcUJMLE9BQUFFLFFBQUFELFNBQUFFLGFBQWlFUCxFQUFBYixVQUkvR0EsRUFBbUJqQixFQUFBOUIsRUFBS2djLGFBQUE1UCxFQUFBLENBQXNCdkksV0FBQUUsY0FBQWhCLElBQTJDLE1BR3pGZzdDLEVBOUNVLENBK0NSajhDLEVBQUE5QixFQUFLbkQsV0FFUGloRCxFQUFNbjRDLGFBQUEsQ0FDTnpDLE9BQVVtQyxFQUFBckYsRUFBUzRGLE1BQUEsQ0FDbkJoQyxNQUFXeUIsRUFBQXJGLEVBQVNuRSxPQUFBZ0ssYUFDakJBLFlBRUhpNEMsRUFBTTE0QyxVQUFBLENBQ052RCxTQUFZd0QsRUFBQXJGLEVBQVMwRixLQUNyQjdCLFNBQVl3QixFQUFBckYsRUFBU25FLFFBSU4sSUFBQXFpRCxFQUFBLEVDekVBbDRDLEVBQUEiLCJmaWxlIjoiYnVuZGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZ2V0dGVyIH0pO1xuIFx0XHR9XG4gXHR9O1xuXG4gXHQvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSBmdW5jdGlvbihleHBvcnRzKSB7XG4gXHRcdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuIFx0XHR9XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gXHR9O1xuXG4gXHQvLyBjcmVhdGUgYSBmYWtlIG5hbWVzcGFjZSBvYmplY3RcbiBcdC8vIG1vZGUgJiAxOiB2YWx1ZSBpcyBhIG1vZHVsZSBpZCwgcmVxdWlyZSBpdFxuIFx0Ly8gbW9kZSAmIDI6IG1lcmdlIGFsbCBwcm9wZXJ0aWVzIG9mIHZhbHVlIGludG8gdGhlIG5zXG4gXHQvLyBtb2RlICYgNDogcmV0dXJuIHZhbHVlIHdoZW4gYWxyZWFkeSBucyBvYmplY3RcbiBcdC8vIG1vZGUgJiA4fDE6IGJlaGF2ZSBsaWtlIHJlcXVpcmVcbiBcdF9fd2VicGFja19yZXF1aXJlX18udCA9IGZ1bmN0aW9uKHZhbHVlLCBtb2RlKSB7XG4gXHRcdGlmKG1vZGUgJiAxKSB2YWx1ZSA9IF9fd2VicGFja19yZXF1aXJlX18odmFsdWUpO1xuIFx0XHRpZihtb2RlICYgOCkgcmV0dXJuIHZhbHVlO1xuIFx0XHRpZigobW9kZSAmIDQpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgJiYgdmFsdWUuX19lc01vZHVsZSkgcmV0dXJuIHZhbHVlO1xuIFx0XHR2YXIgbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIobnMpO1xuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobnMsICdkZWZhdWx0JywgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdmFsdWUgfSk7XG4gXHRcdGlmKG1vZGUgJiAyICYmIHR5cGVvZiB2YWx1ZSAhPSAnc3RyaW5nJykgZm9yKHZhciBrZXkgaW4gdmFsdWUpIF9fd2VicGFja19yZXF1aXJlX18uZChucywga2V5LCBmdW5jdGlvbihrZXkpIHsgcmV0dXJuIHZhbHVlW2tleV07IH0uYmluZChudWxsLCBrZXkpKTtcbiBcdFx0cmV0dXJuIG5zO1xuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IDQwKTtcbiIsIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICB2YXIgUkVBQ1RfRUxFTUVOVF9UWVBFID0gKHR5cGVvZiBTeW1ib2wgPT09ICdmdW5jdGlvbicgJiZcbiAgICBTeW1ib2wuZm9yICYmXG4gICAgU3ltYm9sLmZvcigncmVhY3QuZWxlbWVudCcpKSB8fFxuICAgIDB4ZWFjNztcblxuICB2YXIgaXNWYWxpZEVsZW1lbnQgPSBmdW5jdGlvbihvYmplY3QpIHtcbiAgICByZXR1cm4gdHlwZW9mIG9iamVjdCA9PT0gJ29iamVjdCcgJiZcbiAgICAgIG9iamVjdCAhPT0gbnVsbCAmJlxuICAgICAgb2JqZWN0LiQkdHlwZW9mID09PSBSRUFDVF9FTEVNRU5UX1RZUEU7XG4gIH07XG5cbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgZGV2ZWxvcG1lbnQgYmVoYXZpb3IuXG4gIC8vIGh0dHA6Ly9mYi5tZS9wcm9wLXR5cGVzLWluLXByb2RcbiAgdmFyIHRocm93T25EaXJlY3RBY2Nlc3MgPSB0cnVlO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMnKShpc1ZhbGlkRWxlbWVudCwgdGhyb3dPbkRpcmVjdEFjY2Vzcyk7XG59IGVsc2Uge1xuICAvLyBCeSBleHBsaWNpdGx5IHVzaW5nIGBwcm9wLXR5cGVzYCB5b3UgYXJlIG9wdGluZyBpbnRvIG5ldyBwcm9kdWN0aW9uIGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMnKSgpO1xufVxuIiwidmFyIFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcclxudmFyIFJlYWN0RE9NID0gcmVxdWlyZSgncmVhY3QtZG9tJylcclxuXHJcbmZ1bmN0aW9uIFNvcnRTZWFyY2godXNlcnMsIGFydGlzdHMsIHNvbmdzLCBhbGJ1bXMpXHJcbntcclxuXHR2YXIgc2VhcmNoX2xpc3QgPSBbXTtcclxuXHJcblx0Zm9yICh2YXIga2V5IGluIHVzZXJzKVxyXG5cdHtcclxuXHRcdHZhciB1c2VyX2Rpc3BsYXkgPSB1c2Vyc1trZXldLnVzZXJuYW1lO1xyXG5cdFx0dmFyIHVzZXJfdXJsID0gXCJ1c2VyL1wiICsgdXNlcnNba2V5XS51c2VybmFtZTtcclxuXHRcdHNlYXJjaF9saXN0LnB1c2goW3VzZXJfZGlzcGxheSwgdXNlcl91cmxdKTtcclxuIFx0fVxyXG5cclxuIFx0Zm9yICh2YXIga2V5IGluIGFydGlzdHMpXHJcbiBcdHtcclxuXHQgXHR2YXIgYXJ0aXN0X2Rpc3BsYXkgPSBhcnRpc3RzW2tleV0uYXJ0aXN0O1xyXG5cdCBcdHZhciBhcnRpc3RfdXJsID0gXCJhcnRpc3QvXCIgKyBhcnRpc3RzW2tleV0uYXJ0aXN0XHJcblx0IFx0c2VhcmNoX2xpc3QucHVzaChbYXJ0aXN0X2Rpc3BsYXksIGFydGlzdF91cmxdKTtcclxuXHR9XHJcblxyXG5cdGZvciAodmFyIGtleSBpbiBzb25ncylcclxuXHR7XHJcblx0IFx0dmFyIHNvbmdfZGlzcGxheSA9IHNvbmdzW2tleV0uc29uZztcclxuXHQgXHR2YXIgc29uZ191cmwgPSBcInBvc3QvXCIgKyBzb25nc1trZXldLmFydGlzdCArIFwiL1wiICsgc29uZ3Nba2V5XS5zb25nO1xyXG5cdCBcdHNlYXJjaF9saXN0LnB1c2goW3NvbmdfZGlzcGxheSwgc29uZ191cmxdKTtcclxuIFx0fVxyXG5cclxuIFx0Zm9yICh2YXIga2V5IGluIGFsYnVtcylcclxuIFx0e1xyXG5cdCBcdHZhciBhbGJ1bV9kaXNwbGF5ID0gYWxidW1zW2tleV0uYWxidW07XHJcblx0IFx0dmFyIGFsYnVtX3VybCA9IFwiYWxidW0vXCIgKyBhbGJ1bXNba2V5XS5hcnRpc3QgKyBcIi9cIiArIGFsYnVtc1trZXldLmFsYnVtO1xyXG5cdCBcdHNlYXJjaF9saXN0LnB1c2goW2FsYnVtX2Rpc3BsYXksIGFsYnVtX3VybF0pO1xyXG4gXHR9XHJcblxyXG4gICAgc2VhcmNoX2xpc3Quc29ydChmdW5jdGlvbihhLCBiKXtcclxuICAgIFx0aWYgKGFbMF0gPiBiWzBdKVxyXG4gICAgICAgIHtcclxuICAgICAgICBcdHJldHVybiAxO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gLTE7XHJcbiAgICB9KTtcclxuICAgIHJldHVybiBzZWFyY2hfbGlzdDtcclxufVxyXG5cclxuY2xhc3MgU2VhcmNoSXRlbSBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XHJcblxyXG5cdGNvbnN0cnVjdG9yKHByb3BzKSB7XHJcblx0XHRzdXBlcihwcm9wcyk7XHJcblx0XHR0aGlzLml0ZW1fbGlzdCA9IFtdO1xyXG5cdH1cclxuXHJcblx0Y2xlYXJJdGVtcygpXHJcblx0e1xyXG5cdFx0dGhpcy5pdGVtX2xpc3QgPSBbXTtcclxuXHRcdHRoaXMuZm9yY2VVcGRhdGUoKTtcclxuXHR9XHJcblxyXG5cdHJlbmRlckl0ZW0oaXRlbSwgdXJsKVxyXG5cdHtcclxuXHRcdGNvbnNvbGUubG9nKFwiUkVOREVSSU5HIFRISU5HXCIpXHJcblx0XHR0aGlzLml0ZW1fbGlzdC5wdXNoKDxkaXY+PGEgaHJlZiA9IHt1cmx9PiB7aXRlbX0gPC9hPjwvZGl2Pik7XHJcblx0XHR0aGlzLmZvcmNlVXBkYXRlKCk7XHJcblx0fVxyXG5cclxuXHRyZW5kZXIgKClcclxuXHR7XHJcblx0XHRyZXR1cm4oXHJcblx0XHRcdDxkaXYgY2xhc3NOYW1lPVwiU2VhcmNoSXRlbXNcIj5cclxuXHRcdFx0XHR7dGhpcy5pdGVtX2xpc3R9XHJcblx0XHRcdDwvZGl2PlxyXG5cdFx0KTtcclxuXHR9XHJcbn07XHJcblxyXG5jbGFzcyBTZWFyY2hMaXN0IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcclxuXHRcclxuXHRjb25zdHJ1Y3Rvcihwcm9wcylcclxuXHR7XHJcblx0XHRzdXBlcihwcm9wcyk7XHJcblx0XHR0aGlzLnNlYXJjaF9saXN0ID0gUmVhY3QuY3JlYXRlUmVmKCk7XHJcblx0fVxyXG5cclxuXHRoYW5kbGVDaGFuZ2UoKVxyXG5cdHtcclxuXHJcblx0XHR2YXIgaW5wdXQgPSBldmVudC50YXJnZXQudmFsdWU7XHJcblx0XHR2YXIgdGhhdCA9IHRoaXM7XHJcblxyXG5cdCAgICBmZXRjaChcIi9hYm91dFwiLCB7XHJcblx0ICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxyXG5cdCAgICAgICAgaGVhZGVyczoge1xyXG5cdCAgICAgICAgXHRBY2NlcHQ6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuXHQgICAgICAgIFx0J0F1dGhvcml6YXRpb24nOiAnQmFzaWMnLFxyXG5cdCAgICAgICAgXHQnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxyXG5cdCAgICAgICAgfSxcclxuXHQgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHt0eXBlOiBcInNlYXJjaFwiLCB0ZXh0OiBpbnB1dH0pLFxyXG5cdCAgICB9KS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7IHJldHVybiByZXNwb25zZS5qc29uKCk7fSlcclxuXHQgICAgLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsgICAgXHRcclxuXHQgICAgXHR2YXIgc2VhcmNoX3Jlc3VsdHMgPSBTb3J0U2VhcmNoKGRhdGEudXNlcnMsIGRhdGEuYXJ0aXN0cywgZGF0YS5zb25ncywgZGF0YS5hbGJ1bXMpO1xyXG5cdCAgICBcdHRoYXQuc2VhcmNoX2xpc3QuY3VycmVudC5jbGVhckl0ZW1zKCk7XHJcblx0ICAgIFx0Zm9yICh2YXIga2V5IGluIHNlYXJjaF9yZXN1bHRzKVxyXG5cdCAgICAgICAge1xyXG5cdCAgICAgICAgXHR0aGF0LnNlYXJjaF9saXN0LmN1cnJlbnQucmVuZGVySXRlbShzZWFyY2hfcmVzdWx0c1trZXldWzBdLCBzZWFyY2hfcmVzdWx0c1trZXldWzFdKTtcclxuXHQgICAgICAgIH1cclxuXHQgXHR9KVx0XHJcblx0fVxyXG5cclxuXHRyZW5kZXIgKClcclxuXHR7XHJcblx0XHRyZXR1cm4oXHJcblx0XHRcdDxkaXY+XHJcblx0XHRcdFx0PHA+PGxhYmVsPlNlYXJjaDo8L2xhYmVsPjxpbnB1dCBvbkNoYW5nZT17dGhpcy5oYW5kbGVDaGFuZ2UuYmluZCh0aGlzKX0gdHlwZT0ndGV4dCcgbmFtZT0nY291bnRyeScgY2xhc3NOYW1lPSdzZWFyY2hfYmFyJy8+PC9wPlxyXG5cdFx0XHRcdDxTZWFyY2hJdGVtIHJlZj17dGhpcy5zZWFyY2hfbGlzdH0vPlxyXG5cdFx0XHQ8L2Rpdj5cclxuXHRcdCk7XHJcblxyXG5cdH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU3RhbmRhcmRIZWFkZXIgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xyXG5cclxuXHRjb25zdHJ1Y3RvciAocHJvcHMpXHJcblx0e1xyXG5cdFx0c3VwZXIocHJvcHMpO1xyXG5cdFx0dGhpcy5zZWFyY2hfbGlzdCA9IFJlYWN0LmNyZWF0ZVJlZigpO1xyXG5cdH1cclxuXHJcblxyXG5cclxuICByZW5kZXIoKSB7XHJcbiAgICByZXR1cm4gKFxyXG5cclxuPGRpdj5cclxuPGh0bWwgbGFuZz0nZW4nLz5cclxuXHQ8aGVhZD5cclxuXHRcdDx0aXRsZT5NeSBOb2RlIFNpdGU8L3RpdGxlPlxyXG5cdFx0PGxpbmsgcmVsPVwic3R5bGVzaGVldFwiIGhyZWY9XCJodHRwczovL21heGNkbi5ib290c3RyYXBjZG4uY29tL2Jvb3RzdHJhcC80LjAuMC9jc3MvYm9vdHN0cmFwLm1pbi5jc3NcIi8+XHJcblx0XHQ8bGluayByZWw9XCJzdHlsZXNoZWV0XCIgaHJlZj1cIi9jc3Mvc3R5bGVzLmNzc1wiLz5cclxuXHQgICAgPGxpbmsgcmVsPVwic3R5bGVzaGVldFwiIGhyZWY9XCIvY3NzL3NlYXJjaC5jc3NcIi8+XHJcblxyXG5cdDwvaGVhZD5cclxuXHQ8aGVhZGVyPlxyXG5cdFx0PG5hdiBjbGFzc05hbWU9XCJuYXZiYXIgbmF2YmFyLWludmVyc2VcIiBpZCA9IFwicmVhY3R0ZXN0XCIgc3R5bGUgPSB7e3Bvc2l0aW9uOidmaXhlZCcsIGJhY2tncm91bmRDb2xvcjogJ2dyYXknLCB3aWR0aDonMTAwJScsIHpJbmRleDonMTAnfX0+XHJcblx0XHRcdDxhIGhyZWY9XCIvXCIgY2xhc3NOYW1lPVwibmF2YmFyLWJyYW5kXCI+TXkgU2l0ZTwvYT5cclxuXHRcdCAgICA8ZGl2PlxyXG5cdFx0ICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInNlYXJjaF9saXN0XCIgaWQgPSBcIk15RHJvcGRvd25cIiBzdHlsZSA9IHt7cG9zaXRpb246J2Fic29sdXRlJywgZGlzcGxheTonYmxvY2snLCBvdmVyZmxvdzogJ2F1dG8nfX0+XHJcblx0XHQgICAgICAgIDxTZWFyY2hMaXN0IC8+XHJcblx0XHQgICAgICAgIDwvZGl2PlxyXG5cdFx0ICAgIDwvZGl2PlxyXG5cdFx0ICAgIDx1bCBjbGFzc05hbWU9XCJuYXYgbmF2YmFyLW5hdlwiPlxyXG5cdFx0ICAgICAgICA8bGk+PGEgaHJlZj1cIi9yZWdpc3RlclwiPlJlZ2lzdGVyPC9hPjwvbGk+XHJcblx0XHQgICAgICAgIDxsaT48YSBocmVmPVwiL2xvZ2luXCI+TG9naW48L2E+PC9saT5cclxuXHRcdCAgICA8L3VsPlxyXG5cdFx0XHQ8dWwgY2xhc3NOYW1lPVwibmF2IG5hdmJhci1uYXZcIj5cclxuXHRcdFx0XHQ8bGk+PGEgaHJlZj1cIi9cIj5Ib21lPC9hPjwvbGk+XHJcblx0XHRcdFx0PGxpPjxhIGhyZWY9XCIvYWJvdXRcIj5BYm91dDwvYT48L2xpPlxyXG5cdFx0XHRcdDxsaT48YSBocmVmPVwiL2NvbnRhY3RcIj5Db250YWN0PC9hPjwvbGk+XHJcblx0XHRcdDwvdWw+XHJcblx0XHQ8L25hdj5cclxuXHJcblx0PC9oZWFkZXI+XHJcbjwvZGl2PlxyXG5cclxuXHQpO1xyXG59XHJcbn1cclxuXHJcbiIsIi8qKlxuICogQ29weXJpZ2h0IDIwMTQtMjAxNSwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuIEFuIGFkZGl0aW9uYWwgZ3JhbnRcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBTaW1pbGFyIHRvIGludmFyaWFudCBidXQgb25seSBsb2dzIGEgd2FybmluZyBpZiB0aGUgY29uZGl0aW9uIGlzIG5vdCBtZXQuXG4gKiBUaGlzIGNhbiBiZSB1c2VkIHRvIGxvZyBpc3N1ZXMgaW4gZGV2ZWxvcG1lbnQgZW52aXJvbm1lbnRzIGluIGNyaXRpY2FsXG4gKiBwYXRocy4gUmVtb3ZpbmcgdGhlIGxvZ2dpbmcgY29kZSBmb3IgcHJvZHVjdGlvbiBlbnZpcm9ubWVudHMgd2lsbCBrZWVwIHRoZVxuICogc2FtZSBsb2dpYyBhbmQgZm9sbG93IHRoZSBzYW1lIGNvZGUgcGF0aHMuXG4gKi9cblxudmFyIHdhcm5pbmcgPSBmdW5jdGlvbigpIHt9O1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICB3YXJuaW5nID0gZnVuY3Rpb24oY29uZGl0aW9uLCBmb3JtYXQsIGFyZ3MpIHtcbiAgICB2YXIgbGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICBhcmdzID0gbmV3IEFycmF5KGxlbiA+IDIgPyBsZW4gLSAyIDogMCk7XG4gICAgZm9yICh2YXIga2V5ID0gMjsga2V5IDwgbGVuOyBrZXkrKykge1xuICAgICAgYXJnc1trZXkgLSAyXSA9IGFyZ3VtZW50c1trZXldO1xuICAgIH1cbiAgICBpZiAoZm9ybWF0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgJ2B3YXJuaW5nKGNvbmRpdGlvbiwgZm9ybWF0LCAuLi5hcmdzKWAgcmVxdWlyZXMgYSB3YXJuaW5nICcgK1xuICAgICAgICAnbWVzc2FnZSBhcmd1bWVudCdcbiAgICAgICk7XG4gICAgfVxuXG4gICAgaWYgKGZvcm1hdC5sZW5ndGggPCAxMCB8fCAoL15bc1xcV10qJC8pLnRlc3QoZm9ybWF0KSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICAnVGhlIHdhcm5pbmcgZm9ybWF0IHNob3VsZCBiZSBhYmxlIHRvIHVuaXF1ZWx5IGlkZW50aWZ5IHRoaXMgJyArXG4gICAgICAgICd3YXJuaW5nLiBQbGVhc2UsIHVzZSBhIG1vcmUgZGVzY3JpcHRpdmUgZm9ybWF0IHRoYW46ICcgKyBmb3JtYXRcbiAgICAgICk7XG4gICAgfVxuXG4gICAgaWYgKCFjb25kaXRpb24pIHtcbiAgICAgIHZhciBhcmdJbmRleCA9IDA7XG4gICAgICB2YXIgbWVzc2FnZSA9ICdXYXJuaW5nOiAnICtcbiAgICAgICAgZm9ybWF0LnJlcGxhY2UoLyVzL2csIGZ1bmN0aW9uKCkge1xuICAgICAgICAgIHJldHVybiBhcmdzW2FyZ0luZGV4KytdO1xuICAgICAgICB9KTtcbiAgICAgIGlmICh0eXBlb2YgY29uc29sZSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihtZXNzYWdlKTtcbiAgICAgIH1cbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgZXJyb3Igd2FzIHRocm93biBhcyBhIGNvbnZlbmllbmNlIHNvIHRoYXQgeW91IGNhbiB1c2UgdGhpcyBzdGFja1xuICAgICAgICAvLyB0byBmaW5kIHRoZSBjYWxsc2l0ZSB0aGF0IGNhdXNlZCB0aGlzIHdhcm5pbmcgdG8gZmlyZS5cbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKG1lc3NhZ2UpO1xuICAgICAgfSBjYXRjaCh4KSB7fVxuICAgIH1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB3YXJuaW5nO1xuIiwidmFyIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTtcblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG5pbXBvcnQgd2FybmluZyBmcm9tIFwid2FybmluZ1wiO1xuaW1wb3J0IGludmFyaWFudCBmcm9tIFwiaW52YXJpYW50XCI7XG5pbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gXCJwcm9wLXR5cGVzXCI7XG5pbXBvcnQgbWF0Y2hQYXRoIGZyb20gXCIuL21hdGNoUGF0aFwiO1xuXG52YXIgaXNFbXB0eUNoaWxkcmVuID0gZnVuY3Rpb24gaXNFbXB0eUNoaWxkcmVuKGNoaWxkcmVuKSB7XG4gIHJldHVybiBSZWFjdC5DaGlsZHJlbi5jb3VudChjaGlsZHJlbikgPT09IDA7XG59O1xuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBtYXRjaGluZyBhIHNpbmdsZSBwYXRoIGFuZCByZW5kZXJpbmcuXG4gKi9cblxudmFyIFJvdXRlID0gZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzKFJvdXRlLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBSb3V0ZSgpIHtcbiAgICB2YXIgX3RlbXAsIF90aGlzLCBfcmV0O1xuXG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFJvdXRlKTtcblxuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIHJldHVybiBfcmV0ID0gKF90ZW1wID0gKF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgX1JlYWN0JENvbXBvbmVudC5jYWxsLmFwcGx5KF9SZWFjdCRDb21wb25lbnQsIFt0aGlzXS5jb25jYXQoYXJncykpKSwgX3RoaXMpLCBfdGhpcy5zdGF0ZSA9IHtcbiAgICAgIG1hdGNoOiBfdGhpcy5jb21wdXRlTWF0Y2goX3RoaXMucHJvcHMsIF90aGlzLmNvbnRleHQucm91dGVyKVxuICAgIH0sIF90ZW1wKSwgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oX3RoaXMsIF9yZXQpO1xuICB9XG5cbiAgUm91dGUucHJvdG90eXBlLmdldENoaWxkQ29udGV4dCA9IGZ1bmN0aW9uIGdldENoaWxkQ29udGV4dCgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgcm91dGVyOiBfZXh0ZW5kcyh7fSwgdGhpcy5jb250ZXh0LnJvdXRlciwge1xuICAgICAgICByb3V0ZToge1xuICAgICAgICAgIGxvY2F0aW9uOiB0aGlzLnByb3BzLmxvY2F0aW9uIHx8IHRoaXMuY29udGV4dC5yb3V0ZXIucm91dGUubG9jYXRpb24sXG4gICAgICAgICAgbWF0Y2g6IHRoaXMuc3RhdGUubWF0Y2hcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICB9O1xuICB9O1xuXG4gIFJvdXRlLnByb3RvdHlwZS5jb21wdXRlTWF0Y2ggPSBmdW5jdGlvbiBjb21wdXRlTWF0Y2goX3JlZiwgcm91dGVyKSB7XG4gICAgdmFyIGNvbXB1dGVkTWF0Y2ggPSBfcmVmLmNvbXB1dGVkTWF0Y2gsXG4gICAgICAgIGxvY2F0aW9uID0gX3JlZi5sb2NhdGlvbixcbiAgICAgICAgcGF0aCA9IF9yZWYucGF0aCxcbiAgICAgICAgc3RyaWN0ID0gX3JlZi5zdHJpY3QsXG4gICAgICAgIGV4YWN0ID0gX3JlZi5leGFjdCxcbiAgICAgICAgc2Vuc2l0aXZlID0gX3JlZi5zZW5zaXRpdmU7XG5cbiAgICBpZiAoY29tcHV0ZWRNYXRjaCkgcmV0dXJuIGNvbXB1dGVkTWF0Y2g7IC8vIDxTd2l0Y2g+IGFscmVhZHkgY29tcHV0ZWQgdGhlIG1hdGNoIGZvciB1c1xuXG4gICAgaW52YXJpYW50KHJvdXRlciwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFJvdXRlPiBvciB3aXRoUm91dGVyKCkgb3V0c2lkZSBhIDxSb3V0ZXI+XCIpO1xuXG4gICAgdmFyIHJvdXRlID0gcm91dGVyLnJvdXRlO1xuXG4gICAgdmFyIHBhdGhuYW1lID0gKGxvY2F0aW9uIHx8IHJvdXRlLmxvY2F0aW9uKS5wYXRobmFtZTtcblxuICAgIHJldHVybiBtYXRjaFBhdGgocGF0aG5hbWUsIHsgcGF0aDogcGF0aCwgc3RyaWN0OiBzdHJpY3QsIGV4YWN0OiBleGFjdCwgc2Vuc2l0aXZlOiBzZW5zaXRpdmUgfSwgcm91dGUubWF0Y2gpO1xuICB9O1xuXG4gIFJvdXRlLnByb3RvdHlwZS5jb21wb25lbnRXaWxsTW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsTW91bnQoKSB7XG4gICAgd2FybmluZyghKHRoaXMucHJvcHMuY29tcG9uZW50ICYmIHRoaXMucHJvcHMucmVuZGVyKSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFJvdXRlIGNvbXBvbmVudD4gYW5kIDxSb3V0ZSByZW5kZXI+IGluIHRoZSBzYW1lIHJvdXRlOyA8Um91dGUgcmVuZGVyPiB3aWxsIGJlIGlnbm9yZWRcIik7XG5cbiAgICB3YXJuaW5nKCEodGhpcy5wcm9wcy5jb21wb25lbnQgJiYgdGhpcy5wcm9wcy5jaGlsZHJlbiAmJiAhaXNFbXB0eUNoaWxkcmVuKHRoaXMucHJvcHMuY2hpbGRyZW4pKSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFJvdXRlIGNvbXBvbmVudD4gYW5kIDxSb3V0ZSBjaGlsZHJlbj4gaW4gdGhlIHNhbWUgcm91dGU7IDxSb3V0ZSBjaGlsZHJlbj4gd2lsbCBiZSBpZ25vcmVkXCIpO1xuXG4gICAgd2FybmluZyghKHRoaXMucHJvcHMucmVuZGVyICYmIHRoaXMucHJvcHMuY2hpbGRyZW4gJiYgIWlzRW1wdHlDaGlsZHJlbih0aGlzLnByb3BzLmNoaWxkcmVuKSksIFwiWW91IHNob3VsZCBub3QgdXNlIDxSb3V0ZSByZW5kZXI+IGFuZCA8Um91dGUgY2hpbGRyZW4+IGluIHRoZSBzYW1lIHJvdXRlOyA8Um91dGUgY2hpbGRyZW4+IHdpbGwgYmUgaWdub3JlZFwiKTtcbiAgfTtcblxuICBSb3V0ZS5wcm90b3R5cGUuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMobmV4dFByb3BzLCBuZXh0Q29udGV4dCkge1xuICAgIHdhcm5pbmcoIShuZXh0UHJvcHMubG9jYXRpb24gJiYgIXRoaXMucHJvcHMubG9jYXRpb24pLCAnPFJvdXRlPiBlbGVtZW50cyBzaG91bGQgbm90IGNoYW5nZSBmcm9tIHVuY29udHJvbGxlZCB0byBjb250cm9sbGVkIChvciB2aWNlIHZlcnNhKS4gWW91IGluaXRpYWxseSB1c2VkIG5vIFwibG9jYXRpb25cIiBwcm9wIGFuZCB0aGVuIHByb3ZpZGVkIG9uZSBvbiBhIHN1YnNlcXVlbnQgcmVuZGVyLicpO1xuXG4gICAgd2FybmluZyghKCFuZXh0UHJvcHMubG9jYXRpb24gJiYgdGhpcy5wcm9wcy5sb2NhdGlvbiksICc8Um91dGU+IGVsZW1lbnRzIHNob3VsZCBub3QgY2hhbmdlIGZyb20gY29udHJvbGxlZCB0byB1bmNvbnRyb2xsZWQgKG9yIHZpY2UgdmVyc2EpLiBZb3UgcHJvdmlkZWQgYSBcImxvY2F0aW9uXCIgcHJvcCBpbml0aWFsbHkgYnV0IG9taXR0ZWQgaXQgb24gYSBzdWJzZXF1ZW50IHJlbmRlci4nKTtcblxuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgbWF0Y2g6IHRoaXMuY29tcHV0ZU1hdGNoKG5leHRQcm9wcywgbmV4dENvbnRleHQucm91dGVyKVxuICAgIH0pO1xuICB9O1xuXG4gIFJvdXRlLnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgdmFyIG1hdGNoID0gdGhpcy5zdGF0ZS5tYXRjaDtcbiAgICB2YXIgX3Byb3BzID0gdGhpcy5wcm9wcyxcbiAgICAgICAgY2hpbGRyZW4gPSBfcHJvcHMuY2hpbGRyZW4sXG4gICAgICAgIGNvbXBvbmVudCA9IF9wcm9wcy5jb21wb25lbnQsXG4gICAgICAgIHJlbmRlciA9IF9wcm9wcy5yZW5kZXI7XG4gICAgdmFyIF9jb250ZXh0JHJvdXRlciA9IHRoaXMuY29udGV4dC5yb3V0ZXIsXG4gICAgICAgIGhpc3RvcnkgPSBfY29udGV4dCRyb3V0ZXIuaGlzdG9yeSxcbiAgICAgICAgcm91dGUgPSBfY29udGV4dCRyb3V0ZXIucm91dGUsXG4gICAgICAgIHN0YXRpY0NvbnRleHQgPSBfY29udGV4dCRyb3V0ZXIuc3RhdGljQ29udGV4dDtcblxuICAgIHZhciBsb2NhdGlvbiA9IHRoaXMucHJvcHMubG9jYXRpb24gfHwgcm91dGUubG9jYXRpb247XG4gICAgdmFyIHByb3BzID0geyBtYXRjaDogbWF0Y2gsIGxvY2F0aW9uOiBsb2NhdGlvbiwgaGlzdG9yeTogaGlzdG9yeSwgc3RhdGljQ29udGV4dDogc3RhdGljQ29udGV4dCB9O1xuXG4gICAgaWYgKGNvbXBvbmVudCkgcmV0dXJuIG1hdGNoID8gUmVhY3QuY3JlYXRlRWxlbWVudChjb21wb25lbnQsIHByb3BzKSA6IG51bGw7XG5cbiAgICBpZiAocmVuZGVyKSByZXR1cm4gbWF0Y2ggPyByZW5kZXIocHJvcHMpIDogbnVsbDtcblxuICAgIGlmICh0eXBlb2YgY2hpbGRyZW4gPT09IFwiZnVuY3Rpb25cIikgcmV0dXJuIGNoaWxkcmVuKHByb3BzKTtcblxuICAgIGlmIChjaGlsZHJlbiAmJiAhaXNFbXB0eUNoaWxkcmVuKGNoaWxkcmVuKSkgcmV0dXJuIFJlYWN0LkNoaWxkcmVuLm9ubHkoY2hpbGRyZW4pO1xuXG4gICAgcmV0dXJuIG51bGw7XG4gIH07XG5cbiAgcmV0dXJuIFJvdXRlO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5Sb3V0ZS5wcm9wVHlwZXMgPSB7XG4gIGNvbXB1dGVkTWF0Y2g6IFByb3BUeXBlcy5vYmplY3QsIC8vIHByaXZhdGUsIGZyb20gPFN3aXRjaD5cbiAgcGF0aDogUHJvcFR5cGVzLnN0cmluZyxcbiAgZXhhY3Q6IFByb3BUeXBlcy5ib29sLFxuICBzdHJpY3Q6IFByb3BUeXBlcy5ib29sLFxuICBzZW5zaXRpdmU6IFByb3BUeXBlcy5ib29sLFxuICBjb21wb25lbnQ6IFByb3BUeXBlcy5mdW5jLFxuICByZW5kZXI6IFByb3BUeXBlcy5mdW5jLFxuICBjaGlsZHJlbjogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5ub2RlXSksXG4gIGxvY2F0aW9uOiBQcm9wVHlwZXMub2JqZWN0XG59O1xuUm91dGUuY29udGV4dFR5cGVzID0ge1xuICByb3V0ZXI6IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgaGlzdG9yeTogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuICAgIHJvdXRlOiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsXG4gICAgc3RhdGljQ29udGV4dDogUHJvcFR5cGVzLm9iamVjdFxuICB9KVxufTtcblJvdXRlLmNoaWxkQ29udGV4dFR5cGVzID0ge1xuICByb3V0ZXI6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZFxufTtcblxuXG5leHBvcnQgZGVmYXVsdCBSb3V0ZTsiLCIvLyBXcml0dGVuIGluIHRoaXMgcm91bmQgYWJvdXQgd2F5IGZvciBiYWJlbC10cmFuc2Zvcm0taW1wb3J0c1xuaW1wb3J0IFJvdXRlIGZyb20gXCJyZWFjdC1yb3V0ZXIvZXMvUm91dGVcIjtcblxuZXhwb3J0IGRlZmF1bHQgUm91dGU7IiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTQtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbi8qKlxuICogU2ltaWxhciB0byBpbnZhcmlhbnQgYnV0IG9ubHkgbG9ncyBhIHdhcm5pbmcgaWYgdGhlIGNvbmRpdGlvbiBpcyBub3QgbWV0LlxuICogVGhpcyBjYW4gYmUgdXNlZCB0byBsb2cgaXNzdWVzIGluIGRldmVsb3BtZW50IGVudmlyb25tZW50cyBpbiBjcml0aWNhbFxuICogcGF0aHMuIFJlbW92aW5nIHRoZSBsb2dnaW5nIGNvZGUgZm9yIHByb2R1Y3Rpb24gZW52aXJvbm1lbnRzIHdpbGwga2VlcCB0aGVcbiAqIHNhbWUgbG9naWMgYW5kIGZvbGxvdyB0aGUgc2FtZSBjb2RlIHBhdGhzLlxuICovXG5cbnZhciBfX0RFVl9fID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJztcblxudmFyIHdhcm5pbmcgPSBmdW5jdGlvbigpIHt9O1xuXG5pZiAoX19ERVZfXykge1xuICB2YXIgcHJpbnRXYXJuaW5nID0gZnVuY3Rpb24gcHJpbnRXYXJuaW5nKGZvcm1hdCwgYXJncykge1xuICAgIHZhciBsZW4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgIGFyZ3MgPSBuZXcgQXJyYXkobGVuID4gMiA/IGxlbiAtIDIgOiAwKTtcbiAgICBmb3IgKHZhciBrZXkgPSAyOyBrZXkgPCBsZW47IGtleSsrKSB7XG4gICAgICBhcmdzW2tleSAtIDJdID0gYXJndW1lbnRzW2tleV07XG4gICAgfVxuICAgIHZhciBhcmdJbmRleCA9IDA7XG4gICAgdmFyIG1lc3NhZ2UgPSAnV2FybmluZzogJyArXG4gICAgICBmb3JtYXQucmVwbGFjZSgvJXMvZywgZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBhcmdzW2FyZ0luZGV4KytdO1xuICAgICAgfSk7XG4gICAgaWYgKHR5cGVvZiBjb25zb2xlICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgY29uc29sZS5lcnJvcihtZXNzYWdlKTtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgIC8vIC0tLSBXZWxjb21lIHRvIGRlYnVnZ2luZyBSZWFjdCAtLS1cbiAgICAgIC8vIFRoaXMgZXJyb3Igd2FzIHRocm93biBhcyBhIGNvbnZlbmllbmNlIHNvIHRoYXQgeW91IGNhbiB1c2UgdGhpcyBzdGFja1xuICAgICAgLy8gdG8gZmluZCB0aGUgY2FsbHNpdGUgdGhhdCBjYXVzZWQgdGhpcyB3YXJuaW5nIHRvIGZpcmUuXG4gICAgICB0aHJvdyBuZXcgRXJyb3IobWVzc2FnZSk7XG4gICAgfSBjYXRjaCAoeCkge31cbiAgfVxuXG4gIHdhcm5pbmcgPSBmdW5jdGlvbihjb25kaXRpb24sIGZvcm1hdCwgYXJncykge1xuICAgIHZhciBsZW4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgIGFyZ3MgPSBuZXcgQXJyYXkobGVuID4gMiA/IGxlbiAtIDIgOiAwKTtcbiAgICBmb3IgKHZhciBrZXkgPSAyOyBrZXkgPCBsZW47IGtleSsrKSB7XG4gICAgICBhcmdzW2tleSAtIDJdID0gYXJndW1lbnRzW2tleV07XG4gICAgfVxuICAgIGlmIChmb3JtYXQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICAgICdgd2FybmluZyhjb25kaXRpb24sIGZvcm1hdCwgLi4uYXJncylgIHJlcXVpcmVzIGEgd2FybmluZyAnICtcbiAgICAgICAgICAnbWVzc2FnZSBhcmd1bWVudCdcbiAgICAgICk7XG4gICAgfVxuICAgIGlmICghY29uZGl0aW9uKSB7XG4gICAgICBwcmludFdhcm5pbmcuYXBwbHkobnVsbCwgW2Zvcm1hdF0uY29uY2F0KGFyZ3MpKTtcbiAgICB9XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gd2FybmluZztcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIFVzZSBpbnZhcmlhbnQoKSB0byBhc3NlcnQgc3RhdGUgd2hpY2ggeW91ciBwcm9ncmFtIGFzc3VtZXMgdG8gYmUgdHJ1ZS5cbiAqXG4gKiBQcm92aWRlIHNwcmludGYtc3R5bGUgZm9ybWF0IChvbmx5ICVzIGlzIHN1cHBvcnRlZCkgYW5kIGFyZ3VtZW50c1xuICogdG8gcHJvdmlkZSBpbmZvcm1hdGlvbiBhYm91dCB3aGF0IGJyb2tlIGFuZCB3aGF0IHlvdSB3ZXJlXG4gKiBleHBlY3RpbmcuXG4gKlxuICogVGhlIGludmFyaWFudCBtZXNzYWdlIHdpbGwgYmUgc3RyaXBwZWQgaW4gcHJvZHVjdGlvbiwgYnV0IHRoZSBpbnZhcmlhbnRcbiAqIHdpbGwgcmVtYWluIHRvIGVuc3VyZSBsb2dpYyBkb2VzIG5vdCBkaWZmZXIgaW4gcHJvZHVjdGlvbi5cbiAqL1xuXG52YXIgaW52YXJpYW50ID0gZnVuY3Rpb24oY29uZGl0aW9uLCBmb3JtYXQsIGEsIGIsIGMsIGQsIGUsIGYpIHtcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICBpZiAoZm9ybWF0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignaW52YXJpYW50IHJlcXVpcmVzIGFuIGVycm9yIG1lc3NhZ2UgYXJndW1lbnQnKTtcbiAgICB9XG4gIH1cblxuICBpZiAoIWNvbmRpdGlvbikge1xuICAgIHZhciBlcnJvcjtcbiAgICBpZiAoZm9ybWF0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIGVycm9yID0gbmV3IEVycm9yKFxuICAgICAgICAnTWluaWZpZWQgZXhjZXB0aW9uIG9jY3VycmVkOyB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgJyArXG4gICAgICAgICdmb3IgdGhlIGZ1bGwgZXJyb3IgbWVzc2FnZSBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLidcbiAgICAgICk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBhcmdzID0gW2EsIGIsIGMsIGQsIGUsIGZdO1xuICAgICAgdmFyIGFyZ0luZGV4ID0gMDtcbiAgICAgIGVycm9yID0gbmV3IEVycm9yKFxuICAgICAgICBmb3JtYXQucmVwbGFjZSgvJXMvZywgZnVuY3Rpb24oKSB7IHJldHVybiBhcmdzW2FyZ0luZGV4KytdOyB9KVxuICAgICAgKTtcbiAgICAgIGVycm9yLm5hbWUgPSAnSW52YXJpYW50IFZpb2xhdGlvbic7XG4gICAgfVxuXG4gICAgZXJyb3IuZnJhbWVzVG9Qb3AgPSAxOyAvLyB3ZSBkb24ndCBjYXJlIGFib3V0IGludmFyaWFudCdzIG93biBmcmFtZVxuICAgIHRocm93IGVycm9yO1xuICB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGludmFyaWFudDtcbiIsIid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gY2hlY2tEQ0UoKSB7XG4gIC8qIGdsb2JhbCBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gKi9cbiAgaWYgKFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gPT09ICd1bmRlZmluZWQnIHx8XG4gICAgdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRSAhPT0gJ2Z1bmN0aW9uJ1xuICApIHtcbiAgICByZXR1cm47XG4gIH1cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAvLyBUaGlzIGJyYW5jaCBpcyB1bnJlYWNoYWJsZSBiZWNhdXNlIHRoaXMgZnVuY3Rpb24gaXMgb25seSBjYWxsZWRcbiAgICAvLyBpbiBwcm9kdWN0aW9uLCBidXQgdGhlIGNvbmRpdGlvbiBpcyB0cnVlIG9ubHkgaW4gZGV2ZWxvcG1lbnQuXG4gICAgLy8gVGhlcmVmb3JlIGlmIHRoZSBicmFuY2ggaXMgc3RpbGwgaGVyZSwgZGVhZCBjb2RlIGVsaW1pbmF0aW9uIHdhc24ndFxuICAgIC8vIHByb3Blcmx5IGFwcGxpZWQuXG4gICAgLy8gRG9uJ3QgY2hhbmdlIHRoZSBtZXNzYWdlLiBSZWFjdCBEZXZUb29scyByZWxpZXMgb24gaXQuIEFsc28gbWFrZSBzdXJlXG4gICAgLy8gdGhpcyBtZXNzYWdlIGRvZXNuJ3Qgb2NjdXIgZWxzZXdoZXJlIGluIHRoaXMgZnVuY3Rpb24sIG9yIGl0IHdpbGwgY2F1c2VcbiAgICAvLyBhIGZhbHNlIHBvc2l0aXZlLlxuICAgIHRocm93IG5ldyBFcnJvcignXl9eJyk7XG4gIH1cbiAgdHJ5IHtcbiAgICAvLyBWZXJpZnkgdGhhdCB0aGUgY29kZSBhYm92ZSBoYXMgYmVlbiBkZWFkIGNvZGUgZWxpbWluYXRlZCAoRENFJ2QpLlxuICAgIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRShjaGVja0RDRSk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIC8vIERldlRvb2xzIHNob3VsZG4ndCBjcmFzaCBSZWFjdCwgbm8gbWF0dGVyIHdoYXQuXG4gICAgLy8gV2Ugc2hvdWxkIHN0aWxsIHJlcG9ydCBpbiBjYXNlIHdlIGJyZWFrIHRoaXMgY29kZS5cbiAgICBjb25zb2xlLmVycm9yKGVycik7XG4gIH1cbn1cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgLy8gRENFIGNoZWNrIHNob3VsZCBoYXBwZW4gYmVmb3JlIFJlYWN0RE9NIGJ1bmRsZSBleGVjdXRlcyBzbyB0aGF0XG4gIC8vIERldlRvb2xzIGNhbiByZXBvcnQgYmFkIG1pbmlmaWNhdGlvbiBkdXJpbmcgaW5qZWN0aW9uLlxuICBjaGVja0RDRSgpO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20uZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcblxyXG5jbGFzcyBQb3N0IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IFxyXG57XHJcblx0Y29uc3RydWN0b3IocHJvcHMpIFxyXG5cdHtcclxuXHRcdHN1cGVyKHByb3BzKTtcclxuXHRcdC8vIHByb3BzLmlkID0gXCJcIjtcclxuXHRcdC8vIHByb3BzLmxpa2Vfc3RhdGUgPSAtMTtcclxuXHR9XHRcclxuXHJcblx0cmVuZGVyaWZyYW1lKGlmcmFtZSkge1xyXG5cdFx0cmV0dXJuIHtcclxuXHRcdFx0X19odG1sOiBpZnJhbWVcclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdHJlbmRlcigpXHJcblx0e1xyXG5cdFx0dmFyIGRhdGUgPSBuZXcgRGF0ZSh0aGlzLnByb3BzLnNvbmcudGltZXN0YW1wKVxyXG5cdFx0dmFyIHBvc3RfdGl0bGUgPSA8aDEgc3R5bGU9IHt7cG9zaXRpb246J3JlbGF0aXZlJ319PjxhIGhyZWYgPSB7XCJ1c2VyL1wiICsgdGhpcy5wcm9wcy5zb25nLnVzZXJuYW1lICsgXCIvXCIgKyB0aGlzLnByb3BzLnNvbmcuaWR9ID4ge3RoaXMucHJvcHMuc29uZy50aXRsZX08L2E+PC9oMT47XHJcblx0XHR2YXIgcG9zdGVyX3VzZXJuYW1lID0gdGhpcy5wcm9wcy5zb25nLnVzZXJuYW1lO1xyXG5cdFx0dmFyIHBvc3Rlcl91c2VybmFtZV91cmwgPSBcIi91c2VyL1wiICsgdGhpcy5wcm9wcy5zb25nLnVzZXJuYW1lO1xyXG5cdFx0dmFyIGNvbnRlbnQgPSA8aDIgc3R5bGU9e3twb3NpdGlvbjoncmVsYXRpdmUnfX0+e3RoaXMucHJvcHMuc29uZy5jb250ZW50fTwvaDI+XHJcblx0XHR2YXIgYnlfdGV4dCA9IFwiIGJ5XCJcclxuXHJcblxyXG5cdFx0dmFyIGxpa2VzX3NlY3Rpb24gPSA8ZGl2PlxyXG5cdFx0XHQ8ZGl2IGNsYXNzTmFtZT1cImxpa2VzXCIgaWQgPSB7dGhpcy5wcm9wcy5zb25nLnBvc3RfaWR9ID5MaWtlczoge3RoaXMucHJvcHMuc29uZy5saWtlcyAtIHRoaXMucHJvcHMuc29uZy5kaXNsaWtlc308L2Rpdj5cclxuXHRcdFx0PGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3NOYW1lID0gXCJsaWtlXCIgaWQgPSB7dGhpcy5wcm9wcy5zb25nLnBvc3RfaWR9Pkxpa2U8L2J1dHRvbj5cclxuXHRcdFx0PGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3NOYW1lID0gXCJ1bmxpa2VcIiBpZCA9IHt0aGlzLnByb3BzLnNvbmcucG9zdF9pZH0+SGF0ZTwvYnV0dG9uPlxyXG5cdFx0XHQ8L2Rpdj5cclxuXHJcblx0XHR2YXIgY29tbWVudF9zZWN0aW9uID0gPGRpdiBjbGFzc05hbWU9IFwiY29tbWVudF9zZWN0aW9uXCIgaWQgPSB7dGhpcy5wcm9wcy5zb25nLnBvc3RfaWR9IC8+XHJcblxyXG5cdFx0aWYgKHRoaXMucHJvcHMuc29uZy51c2VybmFtZSAhPSB1bmRlZmluZWQpXHJcblx0XHR7XHJcblx0XHRcdHBvc3RfdGl0bGUgPSBcIlwiO1xyXG5cdFx0XHRsaWtlc19zZWN0aW9uID0gPGRpdj5cclxuXHRcdFx0PGRpdiBjbGFzc05hbWU9XCJsaWtlc1wiIGlkID0ge3RoaXMucHJvcHMuc29uZy5pZH0gPkxpa2VzOiB7dGhpcy5wcm9wcy5zb25nLmxpa2VzIC0gdGhpcy5wcm9wcy5zb25nLmRpc2xpa2VzfTwvZGl2PlxyXG5cdFx0XHQ8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBjbGFzc05hbWUgPSBcImxpa2VcIiBpZCA9IHt0aGlzLnByb3BzLnNvbmcuaWR9Pkxpa2U8L2J1dHRvbj5cclxuXHRcdFx0PGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3NOYW1lID0gXCJ1bmxpa2VcIiBpZCA9IHt0aGlzLnByb3BzLnNvbmcuaWR9PkhhdGU8L2J1dHRvbj5cclxuXHRcdFx0PC9kaXY+XHJcblx0XHRcdGNvbW1lbnRfc2VjdGlvbiA9IDxkaXYgY2xhc3NOYW1lPSBcImNvbW1lbnRfc2VjdGlvblwiIGlkID0ge3RoaXMucHJvcHMuc29uZy5pZH0gLz5cclxuXHRcdFx0YnlfdGV4dCA9IFwiIHBvc3RlZCBieVwiXHJcblx0XHR9XHJcblxyXG5cclxuXHRcdHZhciBjb250ZW50X3VybCA9IFwiL3Bvc3QvXCIgKyB0aGlzLnByb3BzLnNvbmcuYXJ0aXN0ICsgXCIvXCIgKyB0aGlzLnByb3BzLnNvbmcuc29uZztcclxuXHRcdHZhciBjb250ZW50X25hbWUgPSB0aGlzLnByb3BzLnNvbmcuc29uZztcclxuXHJcblx0XHRpZiAodGhpcy5wcm9wcy5zb25nLnNvbmcgPT0gXCJOT19TT05HX0FMQlVNX09OTFlcIilcclxuXHRcdHtcclxuXHRcdFx0Y29udGVudF91cmwgPSBcIi9hbGJ1bS9cIiArIHRoaXMucHJvcHMuc29uZy5zb25nLmFydGlzdCArIFwiL1wiICsgdGhpcy5wcm9wcy5zb25nLnNvbmcuYWxidW07XHJcblx0XHRcdGNvbnRlbnRfbmFtZSA9IHRoaXMucHJvcHMuc29uZy5hbGJ1bTtcclxuXHRcdH1cclxuXHJcblx0XHRyZXR1cm4oXHJcblxyXG4gXHRcdDxkaXYgc3R5bGU9e3twb3NpdGlvbjoncmVsYXRpdmUnLCBoZWlnaHQ6JzQ4MHB4Jyxib3JkZXJCb3R0b206ICc0cHggc29saWQgZ3JheScscGFkZGluZzonNXB4J319PlxyXG4gXHRcdFx0PGRpdiBzdHlsZSA9IHt7ZGlzcGxheTogJ2ZsZXgnLGZsZXhEaXJlY3Rpb246J3Jvdyd9fT5cclxuXHQgXHRcdFx0PHNwYW4gc3R5bGU9e3t3aWR0aDonNjAwcHgnfX0+XHJcblx0IFx0XHRcdFx0e3Bvc3RfdGl0bGV9XHJcblx0IFx0XHRcdFx0PGRpdiBzdHlsZSA9IHt7ZGlzcGxheTogJ2ZsZXgnLGZsZXhEaXJlY3Rpb246J3Jvdyd9fT5cclxuXHQgXHRcdFx0XHRcclxuXHQgXHRcdFx0XHQ8aDM+IDxhIGhyZWYgPSBcclxuXHQgXHRcdFx0XHRcdFx0e2NvbnRlbnRfdXJsfSAgPiB7Y29udGVudF9uYW1lfSBcclxuXHQgXHRcdFx0XHRcdDwvYT5cclxuXHRcdCBcdFx0XHRcdCB7YnlfdGV4dH1cclxuXHRcdCBcdFx0XHRcdDxhIGhyZWYgPXtwb3N0ZXJfdXNlcm5hbWVfdXJsfSA+IHtwb3N0ZXJfdXNlcm5hbWV9IDwvYT4gYXQgXHJcblx0XHQgXHRcdFx0XHR7XCIgXCIgKyBkYXRlLmdldE1vbnRoKCkgKyBcIi9cIiArIGRhdGUuZ2V0RGF0ZSgpICsgXCIvXCIgKyBkYXRlLmdldEZ1bGxZZWFyKCl9IFxyXG5cdCBcdFx0XHRcdDwvaDM+XHJcblx0IFx0XHRcdFx0PC9kaXY+XHJcblx0IFx0XHRcdFx0XHR7Y29udGVudH1cclxuXHQgXHRcdFx0PC9zcGFuPlxyXG5cdCBcdFx0XHQ8c3BhbiBkYW5nZXJvdXNseVNldElubmVySFRNTD17dGhpcy5yZW5kZXJpZnJhbWUodGhpcy5wcm9wcy5zb25nLmVtYmVkZGVkX2NvbnRlbnQpfT5cclxuXHQgXHRcdFx0PC9zcGFuPlxyXG4gXHRcdFx0PC9kaXY+XHJcblx0XHRcdDxkaXYgY2xhc3NOYW1lPSBcImxpa2Vfc2VjdGlvblwiPlxyXG5cdFx0XHRcdHtsaWtlc19zZWN0aW9ufVxyXG5cdFx0XHQ8L2Rpdj5cclxuXHRcdFx0PGRpdiBjbGFzc05hbWU9IFwiY29tbWVudF9zZWN0aW9uXCIgaWQgPSB7dGhpcy5wcm9wcy5zb25nLmlkfSA+XHJcblx0XHRcdFx0e2NvbW1lbnRfc2VjdGlvbn1cclxuXHRcdFx0XHRDb21tZW50czogMFxyXG5cdFx0XHQ8L2Rpdj5cclxuIFx0XHQ8L2Rpdj5cclxuXHJcblx0XHQpO1xyXG5cdH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9zdEluZm8gZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQgXHJcbntcclxuXHRjb25zdHJ1Y3Rvcihwcm9wcykgXHJcblx0e1xyXG5cdFx0c3VwZXIocHJvcHMpO1xyXG5cdFx0Y29uc29sZS5sb2coXCJQT1NUSU5GT1wiKVxyXG5cdFx0dGhpcy5wb3N0cyA9IFtdO1xyXG5cdH1cclxuXHJcblx0bWFrZVBvc3Qoc29uZylcclxuXHR7XHJcblx0XHR0aGlzLnBvc3RzLnB1c2goPFBvc3Qga2V5PXtzb25nLmlkfSBzb25nPXtzb25nfSAvPik7XHJcblx0fVxyXG5cclxuXHRhZGRTb25ncygpXHJcblx0e1xyXG5cdFx0Zm9yICh2YXIgc29uZyBvZiB0aGlzLnByb3BzLnNvbmdzKVxyXG5cdFx0e1xyXG5cdFx0XHR0aGlzLm1ha2VQb3N0KHNvbmcpO1xyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0cmVuZGVyKClcclxuXHR7XHJcblx0XHR0aGlzLmFkZFNvbmdzKCk7XHJcblx0XHRyZXR1cm4oXHJcblx0XHRcdDxkaXYgc3R5bGU9e3tsZWZ0OicxNSUnLCB0b3A6JzEwMHB4JywgcG9zaXRpb246J3JlbGF0aXZlJyx3aWR0aDonMTAwJSd9fT5cclxuXHRcdFx0XHR7dGhpcy5wb3N0c31cclxuXHRcdFx0PC9kaXY+XHJcblx0XHQpO1xyXG5cdH1cclxufSIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcblxyXG5jbGFzcyBDb21tZW50IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50XHJcbntcclxuXHRjb25zdHJ1Y3Rvcihwcm9wcylcclxuXHR7XHJcblx0XHRzdXBlcihwcm9wcyk7XHJcblx0XHR0aGlzLmNoaWxkX2NvbW1lbnRzID0gW107XHJcblx0XHRjb25zb2xlLmxvZyhcIlBST1BTXCIpXHJcblx0XHRjb25zb2xlLmxvZyhwcm9wcyk7XHJcblx0XHR0aGlzLmlkID0gdGhpcy5wcm9wcy5kYXRhLmNvbW1lbnRfaWQ7XHJcblx0XHR0aGlzLnJlcGxpZXNfYnV0dG9uID0gdW5kZWZpbmVkO1xyXG5cdFx0aWYgKHByb3BzLmRhdGEucmVwbGllcyA+IDApXHJcblx0XHR7XHJcblx0XHRcdHZhciBsZWZ0X29mZnNldCA9IFN0cmluZygocHJvcHMuZGF0YS5jb21tZW50X2xldmVsICsgMSkgKiA1KSArICclJ1xyXG5cdFx0XHR0aGlzLnJlcGxpZXNfYnV0dG9uID0gPGJ1dHRvbiBjbGFzc05hbWUgPSAnc2hvd19yZXBsaWVzJyBzdHlsZSA9IHt7cG9zaXRpb246J3JlbGF0aXZlJywgbGVmdDpsZWZ0X29mZnNldH19IGlkID0ge3Byb3BzLmRhdGEuY29tbWVudF9pZH0gPiBzaG93IHtwcm9wcy5kYXRhLnJlcGxpZXN9IHJlcGxpZXMgPC9idXR0b24+O1xyXG4gICAgICBcdH1cclxuXHRcdFxyXG5cdH1cclxuXHJcblx0YWRkQ2hpbGQoY29tbWVudClcclxuXHR7XHJcblx0XHR0aGlzLmNoaWxkX2NvbW1lbnRzLnB1c2goPENvbW1lbnQga2V5PXtjb21tZW50LmRhdGEuY29tbWVudF9pZH0gZGF0YSA9IHtjb21tZW50LmRhdGF9Lz4pXHJcblx0fVxyXG5cclxuXHRyZW5kZXIoKVxyXG5cdHtcclxuXHRcdHZhciBjb21tZW50X2xldmVsID0gXCJjb21tZW50X2xldmVsX1wiICsgU3RyaW5nKHRoaXMucHJvcHMuZGF0YS5jb21tZW50X2xldmVsKTtcclxuXHRcdHZhciBjb21tZW50X2lkID0gU3RyaW5nKHRoaXMucHJvcHMuZGF0YS5jb21tZW50X2lkKTtcclxuXHRcdHZhciByZXBsaWVzID0gMDtcclxuXHRcdHZhciBsZWZ0X29mZnNldCA9IFN0cmluZyh0aGlzLnByb3BzLmRhdGEuY29tbWVudF9sZXZlbCAqIDUpICsgJyUnXHJcblx0XHR2YXIgdXNlcl9pZCA9IHRoaXMucHJvcHMuZGF0YS51c2VyX2lkO1xyXG5cclxuXHRcdHZhciBkYXRlID0gbmV3IERhdGUodGhpcy5wcm9wcy5kYXRhLnRpbWVzdGFtcCk7XHJcblx0XHR2YXIgbWludXRlcyA9IGRhdGUuZ2V0TWludXRlcygpO1xyXG5cdFx0dmFyIHNjb3JlID0gdGhpcy5wcm9wcy5kYXRhLnVwdm90ZXMgLSB0aGlzLnByb3BzLmRhdGEuZG93bnZvdGVzO1xyXG5cdFx0aWYgKFN0cmluZyhtaW51dGVzKS5sZW5ndGggPT0gMSlcclxuXHRcdHtcclxuXHRcdFx0bWludXRlcyA9IFwiMFwiICsgU3RyaW5nKG1pbnV0ZXMpO1xyXG5cdFx0fVxyXG5cdFx0dmFyIGRhdGVfdGV4dCA9IGRhdGUuZ2V0TW9udGgoKSArIFwiL1wiICsgZGF0ZS5nZXREYXRlKCkgKyBcIi9cIiArIGRhdGUuZ2V0RnVsbFllYXIoKSArIFwiIGF0IFwiICsgZGF0ZS5nZXRIb3VycygpICsgXCI6XCIgKyBtaW51dGVzO1xyXG5cdFx0dmFyIGNvbW1lbnRfdGV4dCA9IHRoaXMucHJvcHMuZGF0YS50ZXh0O1xyXG5cdFx0cmV0dXJuIChcclxuXHQgICAgICBcdDxkaXY+XHJcblx0XHQgICAgICBcdDxkaXYgY2xhc3NOYW1lPSB7Y29tbWVudF9sZXZlbH0gaWQ9IHtjb21tZW50X2lkfSByZXBsaWVzPSB7cmVwbGllc30gc3R5bGU9e3twb3NpdGlvbjoncmVsYXRpdmUnLCBsZWZ0OmxlZnRfb2Zmc2V0fX0+XHJcblx0XHRcdCAgICAgIFx0PGRpdiBzdHlsZT17e3Bvc2l0aW9uOidyZWxhdGl2ZScsIGZsb2F0OidsZWZ0JywgaGVpZ2h0Oic2MHB4Jywgd2lkdGg6JzUlJ319PlxyXG5cdFx0XHRcdCAgICAgIFx0PGJ1dHRvbiBzdHlsZT17e3RvcDonMHB4Jyxwb3NpdGlvbjonYWJzb2x1dGUnLGhlaWdodDonMzBweCd9fSB0eXBlPSdidXR0b24nIGNsYXNzTmFtZSA9ICd1cHZvdGUnIGlkID0ge2NvbW1lbnRfaWR9Pl48L2J1dHRvbj5cclxuXHRcdFx0XHQgICAgICBcdDxidXR0b24gc3R5bGU9e3tib3R0b206JzBweCcscG9zaXRpb246J2Fic29sdXRlJyxoZWlnaHQ6JzMwcHgnfX0gdHlwZT0nYnV0dG9uJyBjbGFzc05hbWUgPSAnZG93bnZvdGUnIGlkID0ge2NvbW1lbnRfaWR9PnY8L2J1dHRvbj5cclxuXHRcdFx0ICAgICAgXHQ8L2Rpdj5cclxuXHRcdFx0ICAgICAgXHQ8ZGl2IHN0eWxlPXt7bGVmdDonNSUnLHBvc2l0aW9uOidyZWxhdGl2ZSd9fT5cclxuXHRcdFx0ICAgICAgXHRcdDxkaXYgc3R5bGU9e3tib3JkZXJTdHlsZTonc29saWQnLCBib3JkZXJCb3R0b21TdHlsZTogJ25vbmUnLHdpZHRoOic3NSUnLGhlaWdodDonMzVweCd9fSBjbGFzc05hbWU9J2NvbW1lbnRfaGVhZGVyJyBpZCA9IHtjb21tZW50X2lkfT4gXHJcblx0XHRcdCAgICAgIFx0XHRcdHt1c2VyX2lkICsgXCIgXCIrIGRhdGVfdGV4dCArXCIgXCIrIHNjb3JlfVxyXG5cdFx0XHQgICAgICBcdFx0XHQ8YnV0dG9uIHR5cGU9J2J1dHRvbicgY2xhc3NOYW1lID0gJ2JlZ2luX2NvbW1lbnQnIGlkID0ge2NvbW1lbnRfaWR9PkNvbW1lbnQ8L2J1dHRvbj4gXHJcblx0XHRcdCAgICAgIFx0XHQ8L2Rpdj5cclxuXHRcdFx0ICAgICAgXHRcdDxkaXYgc3R5bGU9e3tib3JkZXJTdHlsZTonc29saWQnLCBib3JkZXJUb3BTdHlsZTogJ25vbmUnLCB3aWR0aDonNzUlJ319IGNsYXNzTmFtZSA9J2NvbW1lbnRfYm9keScgaWQgPSB7Y29tbWVudF9pZH0+IHtjb21tZW50X3RleHR9IDwvZGl2PiBcclxuXHRcdFx0ICAgICAgXHQ8L2Rpdj5cclxuXHRcdCAgICBcdDwvZGl2PlxyXG5cdCAgICBcdFx0e3RoaXMucHJvcHMuY2hpbGRfY29tbWVudHN9XHJcblx0ICAgIFx0XHR7dGhpcy5yZXBsaWVzX2J1dHRvbn1cclxuXHQgICAgXHQ8L2Rpdj5cclxuXHRcdCk7XHJcblx0fVxyXG59XHJcblxyXG5jbGFzcyBUZXN0Q29tbWVudCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCBcclxue1xyXG5cdGNvbnN0cnVjdG9yKHByb3BzKVxyXG5cdHtcclxuXHRcdHN1cGVyKHByb3BzKTtcclxuXHR9XHJcblxyXG5cdHJlbmRlciAoKVxyXG5cdHtcclxuXHRcdHJldHVybiAoXHJcblx0XHRcdDxkaXY+XHJcblx0XHRcdFx0PGRpdiBjbGFzc05hbWUgPSBcIldIQVRUSEVXSEFUXCI+XHJcblx0XHRcdFx0XHRURVNUSU5HXHJcblx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdDwvZGl2PlxyXG5cdFx0KTtcclxuXHR9XHJcblxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDb21tZW50U2VjdGlvbiBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCBcclxue1xyXG5cdGNvbnN0cnVjdG9yKHByb3BzKVxyXG5cdHtcclxuXHRcdHN1cGVyKHByb3BzKTtcclxuXHRcdHRoaXMuY29tbWVudHMgPSBbXTtcclxuXHR9XHJcblxyXG5cdGdlbmVyYXRlQ29tbWVudHMoY29tbWVudHMpXHJcblx0e1xyXG5cdFx0dmFyIGxldmVscyA9IFtdO1xyXG5cdFx0Zm9yICh2YXIgY29tbWVudCBvZiBjb21tZW50cylcclxuXHRcdHtcclxuXHJcblx0XHRcdGlmIChjb21tZW50LmNvbW1lbnRfbGV2ZWwrMSA+IGxldmVscy5sZW5ndGgpXHJcblx0XHRcdHtcclxuXHRcdFx0XHR2YXIgY3VycmVudF9sZXZlbHNfbGVuZ3RoID0gbGV2ZWxzLmxlbmd0aDtcclxuXHRcdFx0XHRmb3IgKHZhciBpID0gMDtpIDwgY29tbWVudC5jb21tZW50X2xldmVsICsgMSAtY3VycmVudF9sZXZlbHNfbGVuZ3RoO2krKylcclxuXHRcdFx0XHR7XHJcblx0XHRcdFx0XHRsZXZlbHMucHVzaChbXSk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdGxldmVsc1tjb21tZW50LmNvbW1lbnRfbGV2ZWxdLnB1c2goY29tbWVudCk7XHJcblx0XHRcdH1cclxuXHRcdFx0ZWxzZVxyXG5cdFx0XHR7XHJcblx0XHRcdFx0bGV2ZWxzW2NvbW1lbnQuY29tbWVudF9sZXZlbF0ucHVzaChjb21tZW50KTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cclxuXHRcdHZhciBjb21tZW50X21hcCA9IHt9O1xyXG5cdFx0dmFyIGN1cnJlbnRfY29tbWVudHMgPSBbXTtcclxuXHJcblx0XHRmb3IgKHZhciBsZXZlbCA9IGxldmVscy5sZW5ndGggLSAxOyBsZXZlbCA+PSAwOyBsZXZlbC0tKVxyXG5cdFx0e1xyXG5cdFx0XHRmb3IgKHZhciBjb21tZW50IG9mIGxldmVsc1tsZXZlbF0pXHJcblx0XHRcdHtcclxuXHRcdFx0XHRjb25zb2xlLmxvZyhcIkNPTU1FTlQgUkVQTElFU1wiKVxyXG5cdFx0XHRcdGNvbnNvbGUubG9nKGNvbW1lbnQucmVwbGllcylcclxuXHRcdFx0XHRpZiAoY29tbWVudF9tYXBbY29tbWVudC5jb21tZW50X2lkXSAhPSB1bmRlZmluZWQpXHJcblx0XHRcdFx0e1xyXG5cdFx0XHRcdFx0Zm9yICh2YXIgY2hpbGQgb2YgY29tbWVudF9tYXBbY29tbWVudC5jb21tZW50X2lkXSlcclxuXHRcdFx0XHRcdHtcclxuXHRcdFx0XHRcdFx0Y29tbWVudC5yZXBsaWVzID0gY29tbWVudC5yZXBsaWVzIC0gY2hpbGQucHJvcHMuZGF0YS5yZXBsaWVzIC0gMTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0XHJcblx0XHRcdFx0Y29uc29sZS5sb2coY29tbWVudC50ZXh0KVxyXG5cdFx0XHRcdGNvbnNvbGUubG9nKGNvbW1lbnQucmVwbGllcylcclxuXHJcblx0XHRcdFx0Y3VycmVudF9jb21tZW50cy5wdXNoKDxDb21tZW50IGRhdGEgPSB7Y29tbWVudH0gY2hpbGRfY29tbWVudHMgPSB7Y29tbWVudF9tYXBbY29tbWVudC5jb21tZW50X2lkXX0vPilcclxuXHRcdFx0fVxyXG5cdFx0XHRpZiAobGV2ZWwgPT0gMClcclxuXHRcdFx0e1xyXG5cdFx0XHRcdGJyZWFrO1xyXG5cdFx0XHR9XHJcblx0XHRcdC8vY29tbWVudCBoZXJlIGlzIGRpZmZlcmVudCBmcm9tIGFib3ZlLCBpdHMgYSBDb21tZW50IGNvbXBvbmVudCByYXRoZXIgdGhhbiBkYXRhXHJcblx0XHRcdGZvciAodmFyIGNvbW1lbnQgb2YgY3VycmVudF9jb21tZW50cylcclxuXHRcdFx0e1xyXG5cdFx0XHRcdHZhciBwYXJlbnRfaWQgPSBjb21tZW50LnByb3BzLmRhdGEucGFyZW50X2NvbW1lbnRfaWQ7XHJcblx0XHRcdFx0aWYgKGNvbW1lbnRfbWFwW3BhcmVudF9pZF0gPT0gdW5kZWZpbmVkKVxyXG5cdFx0XHRcdHtcclxuXHRcdFx0XHRcdGNvbW1lbnRfbWFwW3BhcmVudF9pZF0gPSBbY29tbWVudF07XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdGVsc2VcclxuXHRcdFx0XHR7XHJcblx0XHRcdFx0XHRjb21tZW50X21hcFtwYXJlbnRfaWRdLnB1c2goY29tbWVudCk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHRcdGN1cnJlbnRfY29tbWVudHMgPSBbXTtcclxuXHRcdH1cdFxyXG5cclxuXHRcdHRoaXMuY29tbWVudHMgPSBjdXJyZW50X2NvbW1lbnRzO1xyXG5cclxuXHR9XHJcblxyXG5cdHJlbmRlcigpXHJcblx0e1xyXG5cclxuXHRcdHRoaXMuZ2VuZXJhdGVDb21tZW50cyh0aGlzLnByb3BzLmRhdGEuY29tbWVudHMpXHJcblx0XHRyZXR1cm4gKFxyXG5cdFx0XHQ8ZGl2PlxyXG5cdFx0XHRcdHt0aGlzLmNvbW1lbnRzfVxyXG5cdFx0XHQ8L2Rpdj5cclxuXHRcdCk7XHJcblx0fVxyXG59IiwiaW1wb3J0IHBhdGhUb1JlZ2V4cCBmcm9tIFwicGF0aC10by1yZWdleHBcIjtcblxudmFyIHBhdHRlcm5DYWNoZSA9IHt9O1xudmFyIGNhY2hlTGltaXQgPSAxMDAwMDtcbnZhciBjYWNoZUNvdW50ID0gMDtcblxudmFyIGNvbXBpbGVQYXRoID0gZnVuY3Rpb24gY29tcGlsZVBhdGgocGF0dGVybiwgb3B0aW9ucykge1xuICB2YXIgY2FjaGVLZXkgPSBcIlwiICsgb3B0aW9ucy5lbmQgKyBvcHRpb25zLnN0cmljdCArIG9wdGlvbnMuc2Vuc2l0aXZlO1xuICB2YXIgY2FjaGUgPSBwYXR0ZXJuQ2FjaGVbY2FjaGVLZXldIHx8IChwYXR0ZXJuQ2FjaGVbY2FjaGVLZXldID0ge30pO1xuXG4gIGlmIChjYWNoZVtwYXR0ZXJuXSkgcmV0dXJuIGNhY2hlW3BhdHRlcm5dO1xuXG4gIHZhciBrZXlzID0gW107XG4gIHZhciByZSA9IHBhdGhUb1JlZ2V4cChwYXR0ZXJuLCBrZXlzLCBvcHRpb25zKTtcbiAgdmFyIGNvbXBpbGVkUGF0dGVybiA9IHsgcmU6IHJlLCBrZXlzOiBrZXlzIH07XG5cbiAgaWYgKGNhY2hlQ291bnQgPCBjYWNoZUxpbWl0KSB7XG4gICAgY2FjaGVbcGF0dGVybl0gPSBjb21waWxlZFBhdHRlcm47XG4gICAgY2FjaGVDb3VudCsrO1xuICB9XG5cbiAgcmV0dXJuIGNvbXBpbGVkUGF0dGVybjtcbn07XG5cbi8qKlxuICogUHVibGljIEFQSSBmb3IgbWF0Y2hpbmcgYSBVUkwgcGF0aG5hbWUgdG8gYSBwYXRoIHBhdHRlcm4uXG4gKi9cbnZhciBtYXRjaFBhdGggPSBmdW5jdGlvbiBtYXRjaFBhdGgocGF0aG5hbWUpIHtcbiAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IHt9O1xuICB2YXIgcGFyZW50ID0gYXJndW1lbnRzWzJdO1xuXG4gIGlmICh0eXBlb2Ygb3B0aW9ucyA9PT0gXCJzdHJpbmdcIikgb3B0aW9ucyA9IHsgcGF0aDogb3B0aW9ucyB9O1xuXG4gIHZhciBfb3B0aW9ucyA9IG9wdGlvbnMsXG4gICAgICBwYXRoID0gX29wdGlvbnMucGF0aCxcbiAgICAgIF9vcHRpb25zJGV4YWN0ID0gX29wdGlvbnMuZXhhY3QsXG4gICAgICBleGFjdCA9IF9vcHRpb25zJGV4YWN0ID09PSB1bmRlZmluZWQgPyBmYWxzZSA6IF9vcHRpb25zJGV4YWN0LFxuICAgICAgX29wdGlvbnMkc3RyaWN0ID0gX29wdGlvbnMuc3RyaWN0LFxuICAgICAgc3RyaWN0ID0gX29wdGlvbnMkc3RyaWN0ID09PSB1bmRlZmluZWQgPyBmYWxzZSA6IF9vcHRpb25zJHN0cmljdCxcbiAgICAgIF9vcHRpb25zJHNlbnNpdGl2ZSA9IF9vcHRpb25zLnNlbnNpdGl2ZSxcbiAgICAgIHNlbnNpdGl2ZSA9IF9vcHRpb25zJHNlbnNpdGl2ZSA9PT0gdW5kZWZpbmVkID8gZmFsc2UgOiBfb3B0aW9ucyRzZW5zaXRpdmU7XG5cblxuICBpZiAocGF0aCA9PSBudWxsKSByZXR1cm4gcGFyZW50O1xuXG4gIHZhciBfY29tcGlsZVBhdGggPSBjb21waWxlUGF0aChwYXRoLCB7IGVuZDogZXhhY3QsIHN0cmljdDogc3RyaWN0LCBzZW5zaXRpdmU6IHNlbnNpdGl2ZSB9KSxcbiAgICAgIHJlID0gX2NvbXBpbGVQYXRoLnJlLFxuICAgICAga2V5cyA9IF9jb21waWxlUGF0aC5rZXlzO1xuXG4gIHZhciBtYXRjaCA9IHJlLmV4ZWMocGF0aG5hbWUpO1xuXG4gIGlmICghbWF0Y2gpIHJldHVybiBudWxsO1xuXG4gIHZhciB1cmwgPSBtYXRjaFswXSxcbiAgICAgIHZhbHVlcyA9IG1hdGNoLnNsaWNlKDEpO1xuXG4gIHZhciBpc0V4YWN0ID0gcGF0aG5hbWUgPT09IHVybDtcblxuICBpZiAoZXhhY3QgJiYgIWlzRXhhY3QpIHJldHVybiBudWxsO1xuXG4gIHJldHVybiB7XG4gICAgcGF0aDogcGF0aCwgLy8gdGhlIHBhdGggcGF0dGVybiB1c2VkIHRvIG1hdGNoXG4gICAgdXJsOiBwYXRoID09PSBcIi9cIiAmJiB1cmwgPT09IFwiXCIgPyBcIi9cIiA6IHVybCwgLy8gdGhlIG1hdGNoZWQgcG9ydGlvbiBvZiB0aGUgVVJMXG4gICAgaXNFeGFjdDogaXNFeGFjdCwgLy8gd2hldGhlciBvciBub3Qgd2UgbWF0Y2hlZCBleGFjdGx5XG4gICAgcGFyYW1zOiBrZXlzLnJlZHVjZShmdW5jdGlvbiAobWVtbywga2V5LCBpbmRleCkge1xuICAgICAgbWVtb1trZXkubmFtZV0gPSB2YWx1ZXNbaW5kZXhdO1xuICAgICAgcmV0dXJuIG1lbW87XG4gICAgfSwge30pXG4gIH07XG59O1xuXG5leHBvcnQgZGVmYXVsdCBtYXRjaFBhdGg7IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IFN0YW5kYXJkSGVhZGVyIGZyb20gJy4vc3RhbmRhcmRfaGVhZGVyLmpzJ1xyXG5pbXBvcnQgQ29tbWVudFNlY3Rpb24gZnJvbSAnLi9jb21tZW50cy5qcydcclxuXHJcbmNsYXNzIEdsb2JhbFBvc3RDb250ZW50IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IFxyXG57XHJcblx0Y29uc3RydWN0b3IocHJvcHMpXHJcblx0e1xyXG5cdFx0c3VwZXIocHJvcHMpO1xyXG5cdFx0Y29uc29sZS5sb2coXCJHTE9CQUxQT1NUQ09OVEVOVFwiKTtcclxuXHRcdGNvbnNvbGUubG9nKHByb3BzKVxyXG5cdFx0dGhpcy5hbGJ1bV9zb25ncyA9IFtdXHJcblx0fVxyXG5cclxuXHRyZW5kZXJpZnJhbWUoaWZyYW1lKSB7XHJcblx0XHRyZXR1cm4ge1xyXG5cdFx0XHRfX2h0bWw6IGlmcmFtZVxyXG5cdFx0fTtcclxuXHR9XHJcblxyXG5cdGdlbmVyYXRlQWxidW1Tb25ncygpXHJcblx0e1xyXG5cdFx0Ly9mb3IgKGtleSBvZiBPYmplY3Qua2V5cyhKU09OLnBhcnNlKGRhdGFbMF0uZGF0YSkpKVxyXG5cdFx0Zm9yICh2YXIgc29uZyBvZiBPYmplY3Qua2V5cyh0aGlzLnByb3BzLmRhdGEuZGF0YSkpXHJcblx0XHR7XHJcblx0XHRcdGNvbnNvbGUubG9nKHNvbmcpXHJcblx0XHRcdHRoaXMuYWxidW1fc29uZ3MucHVzaCg8ZGl2IHN0eWxlID0ge3twYWRkaW5nOicwcHgnfX0+IHtzb25nICsgXCIuXCJ9IDxhIGhyZWYgPSBcInRlc3RcIj4ge3RoaXMucHJvcHMuZGF0YS5kYXRhW3NvbmddfSA8L2E+PC9kaXY+KVxyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0cmVuZGVyKClcclxuXHR7XHJcblx0XHR2YXIgc29uZyA9IDxkaXY+IHt0aGlzLnByb3BzLmRhdGEuc29uZyArIFwiIGJ5IFwifSA8YSBocmVmID0ge1wiL2FydGlzdC9cIiArIHRoaXMucHJvcHMuZGF0YS5hcnRpc3R9PiB7dGhpcy5wcm9wcy5kYXRhLmFydGlzdH0gPC9hPiA8L2Rpdj5cclxuXHRcdGNvbnNvbGUubG9nKHNvbmcpXHJcblx0XHRpZiAodGhpcy5wcm9wcy5kYXRhLnR5cGUgPT0gMSlcclxuXHRcdHtcclxuXHRcdFx0c29uZyA9IFwiXCJcclxuXHRcdFx0dGhpcy5nZW5lcmF0ZUFsYnVtU29uZ3MoKTtcclxuXHRcdH1cclxuXHJcblxyXG5cdFx0cmV0dXJuIChcclxuXHRcdFx0PGRpdj5cclxuXHRcdFx0XHQ8ZGl2IHN0eWxlPXt7cG9zaXRpb246J3JlbGF0aXZlJywgdG9wOicxMDBweCcsIHBhZGRpbmdCb3R0b206JzEwMHB4JywgaGVpZ2h0OiAnYXV0bycsIG1pbkhlaWdodDogJzU1MHB4J319PlxyXG5cdFx0XHRcdFx0PGRpdiBzdHlsZT17e3Bvc2l0aW9uOidyZWxhdGl2ZScsZmxvYXQ6J2xlZnQnLCB0b3A6JzBweCcsIHBhZGRpbmdSaWdodDonMjBweCd9fSBkYW5nZXJvdXNseVNldElubmVySFRNTD17dGhpcy5yZW5kZXJpZnJhbWUodGhpcy5wcm9wcy5kYXRhLmVtYmVkZGVkX2NvbnRlbnQpfT5cclxuXHRcdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcdFx0PGRpdiBzdHlsZT17e2xlZnQ6JzEwJScsIHRvcDonMjAlJ319PlxyXG5cclxuXHRcdFx0XHRcdFx0PGRpdj5cclxuXHRcdFx0XHRcdFx0XHR7c29uZ31cclxuXHRcdFx0XHRcdFx0XHQ8ZGl2PiBBbGJ1bToge3RoaXMucHJvcHMuZGF0YS5hbGJ1bX0gPC9kaXY+XHJcblx0XHRcdFx0XHRcdFx0PGRpdj4gUmVsZWFzZWQgb246IHt0aGlzLnByb3BzLmRhdGEucmVsZWFzZV9kYXRlfSA8L2Rpdj5cclxuXHRcdFx0XHRcdFx0PC9kaXY+XHJcblxyXG5cclxuXHRcdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcdDxici8+XHJcblx0XHRcdFx0PGJyLz5cclxuXHRcdFx0XHQ8YnIvPlxyXG5cdFx0XHRcdDxici8+XHJcblx0XHRcdFx0PG1ldGEgY2xhc3NOYW1lID0gXCJjb21tZW50X29mZnNldFwiIGNvbnRlbnQgPSBcIjBcIiAvPlxyXG5cdFx0XHRcdDxidXR0b24gdHlwZT0nYnV0dG9uJyBjbGFzc05hbWUgPSAnbmV3X2NvbW1lbnQnIGlkID0gXCItMVwiIGNsYXNzTmFtZSA9ICdsZXZlbF8tMScgc3R5bGU9e3twb3NpdGlvbjoncmVsYXRpdmUnfX0+Q29tbWVudDwvYnV0dG9uPlxyXG5cdFx0XHQ8L2Rpdj5cclxuXHRcdCk7XHJcblx0fVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBHbG9iYWxQb3N0IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50XHJcbntcclxuXHRjb25zdHJ1Y3Rvcihwcm9wcylcclxuXHR7XHJcblx0XHRjb25zb2xlLmxvZyhcIkhFWUVCVURcIilcclxuXHRcdGNvbnNvbGUubG9nKHByb3BzKVxyXG5cdFx0c3VwZXIocHJvcHMpO1xyXG5cdH1cclxuXHJcblx0cmVuZGVyKClcclxuXHR7XHJcblx0XHRyZXR1cm4gKFxyXG5cdFx0XHQ8ZGl2PlxyXG5cdFx0XHRcdDxTdGFuZGFyZEhlYWRlci8+XHJcblx0XHRcdFx0PEdsb2JhbFBvc3RDb250ZW50IGRhdGEgPSB7dGhpcy5wcm9wcy5kYXRhLmRhdGF9Lz5cclxuXHRcdFx0XHQ8Q29tbWVudFNlY3Rpb24gZGF0YSA9IHt0aGlzLnByb3BzLmRhdGF9Lz5cclxuXHRcdFx0PC9kaXY+XHJcblx0XHQpO1xyXG5cdH1cclxufSIsIi8qXG5vYmplY3QtYXNzaWduXG4oYykgU2luZHJlIFNvcmh1c1xuQGxpY2Vuc2UgTUlUXG4qL1xuXG4ndXNlIHN0cmljdCc7XG4vKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtdmFycyAqL1xudmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgaGFzT3duUHJvcGVydHkgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xudmFyIHByb3BJc0VudW1lcmFibGUgPSBPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlO1xuXG5mdW5jdGlvbiB0b09iamVjdCh2YWwpIHtcblx0aWYgKHZhbCA9PT0gbnVsbCB8fCB2YWwgPT09IHVuZGVmaW5lZCkge1xuXHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ09iamVjdC5hc3NpZ24gY2Fubm90IGJlIGNhbGxlZCB3aXRoIG51bGwgb3IgdW5kZWZpbmVkJyk7XG5cdH1cblxuXHRyZXR1cm4gT2JqZWN0KHZhbCk7XG59XG5cbmZ1bmN0aW9uIHNob3VsZFVzZU5hdGl2ZSgpIHtcblx0dHJ5IHtcblx0XHRpZiAoIU9iamVjdC5hc3NpZ24pIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBEZXRlY3QgYnVnZ3kgcHJvcGVydHkgZW51bWVyYXRpb24gb3JkZXIgaW4gb2xkZXIgVjggdmVyc2lvbnMuXG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD00MTE4XG5cdFx0dmFyIHRlc3QxID0gbmV3IFN0cmluZygnYWJjJyk7ICAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ldy13cmFwcGVyc1xuXHRcdHRlc3QxWzVdID0gJ2RlJztcblx0XHRpZiAoT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGVzdDEpWzBdID09PSAnNScpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cdFx0dmFyIHRlc3QyID0ge307XG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCAxMDsgaSsrKSB7XG5cdFx0XHR0ZXN0MlsnXycgKyBTdHJpbmcuZnJvbUNoYXJDb2RlKGkpXSA9IGk7XG5cdFx0fVxuXHRcdHZhciBvcmRlcjIgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MikubWFwKGZ1bmN0aW9uIChuKSB7XG5cdFx0XHRyZXR1cm4gdGVzdDJbbl07XG5cdFx0fSk7XG5cdFx0aWYgKG9yZGVyMi5qb2luKCcnKSAhPT0gJzAxMjM0NTY3ODknKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzA1NlxuXHRcdHZhciB0ZXN0MyA9IHt9O1xuXHRcdCdhYmNkZWZnaGlqa2xtbm9wcXJzdCcuc3BsaXQoJycpLmZvckVhY2goZnVuY3Rpb24gKGxldHRlcikge1xuXHRcdFx0dGVzdDNbbGV0dGVyXSA9IGxldHRlcjtcblx0XHR9KTtcblx0XHRpZiAoT2JqZWN0LmtleXMoT2JqZWN0LmFzc2lnbih7fSwgdGVzdDMpKS5qb2luKCcnKSAhPT1cblx0XHRcdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdHJldHVybiB0cnVlO1xuXHR9IGNhdGNoIChlcnIpIHtcblx0XHQvLyBXZSBkb24ndCBleHBlY3QgYW55IG9mIHRoZSBhYm92ZSB0byB0aHJvdywgYnV0IGJldHRlciB0byBiZSBzYWZlLlxuXHRcdHJldHVybiBmYWxzZTtcblx0fVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNob3VsZFVzZU5hdGl2ZSgpID8gT2JqZWN0LmFzc2lnbiA6IGZ1bmN0aW9uICh0YXJnZXQsIHNvdXJjZSkge1xuXHR2YXIgZnJvbTtcblx0dmFyIHRvID0gdG9PYmplY3QodGFyZ2V0KTtcblx0dmFyIHN5bWJvbHM7XG5cblx0Zm9yICh2YXIgcyA9IDE7IHMgPCBhcmd1bWVudHMubGVuZ3RoOyBzKyspIHtcblx0XHRmcm9tID0gT2JqZWN0KGFyZ3VtZW50c1tzXSk7XG5cblx0XHRmb3IgKHZhciBrZXkgaW4gZnJvbSkge1xuXHRcdFx0aWYgKGhhc093blByb3BlcnR5LmNhbGwoZnJvbSwga2V5KSkge1xuXHRcdFx0XHR0b1trZXldID0gZnJvbVtrZXldO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGlmIChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcblx0XHRcdHN5bWJvbHMgPSBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZnJvbSk7XG5cdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IHN5bWJvbHMubGVuZ3RoOyBpKyspIHtcblx0XHRcdFx0aWYgKHByb3BJc0VudW1lcmFibGUuY2FsbChmcm9tLCBzeW1ib2xzW2ldKSkge1xuXHRcdFx0XHRcdHRvW3N5bWJvbHNbaV1dID0gZnJvbVtzeW1ib2xzW2ldXTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiB0bztcbn07XG4iLCJcclxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHtcclxuXHRCcm93c2VyUm91dGVyIGFzIFJvdXRlcixcclxuXHRSZWRpcmVjdCwgXHJcblx0Um91dGUsXHJcblx0U3dpdGNoXHJcbn0gZnJvbSAncmVhY3Qtcm91dGVyLWRvbSc7XHJcblxyXG5cclxuLy9pbXBvcnQgTGlzdCBmcm9tICcuL0xpc3QnO1xyXG5pbXBvcnQgSG9tZSBmcm9tICcuL0hvbWUnO1xyXG5pbXBvcnQgRmVlZCBmcm9tICcuL2ZlZWQuanMnXHJcbmltcG9ydCBDb250YWN0IGZyb20gJy4vQ29udGFjdC5qcyc7XHJcbmltcG9ydCBBYm91dCBmcm9tICcuL2Fib3V0LmpzJztcclxuaW1wb3J0IFVzZXIgZnJvbSAnLi91c2VyLmpzJztcclxuaW1wb3J0IFVzZXJQb3N0IGZyb20gJy4vdXNlcl9wb3N0LmpzJ1xyXG5pbXBvcnQgR2xvYmFsUG9zdCBmcm9tICcuL2dsb2JhbF9wb3N0LmpzJ1xyXG5pbXBvcnQgQXJ0aXN0UG9zdCBmcm9tICcuL2FydGlzdC5qcydcclxuaW1wb3J0IEFydGlzdFNvbmdzUG9zdCBmcm9tICcuL2FydGlzdF9zb25ncy5qcydcclxuaW1wb3J0IEFydGlzdEFsYnVtc1Bvc3QgZnJvbSAnLi9hcnRpc3RfYWxidW1zLmpzJ1xyXG5pbXBvcnQgTG9naW4gZnJvbSAnLi9sb2dpbi5qcydcclxuaW1wb3J0IFJlZ2lzdGVyIGZyb20gJy4vcmVnaXN0ZXIuanMnXHJcbmltcG9ydCBGb2xsb3dlcnMgZnJvbSAnLi9mb2xsb3dlcnMuanMnXHJcbmltcG9ydCBGb2xsb3dpbmcgZnJvbSAnLi9mb2xsb3dpbmcuanMnXHJcbi8vXHQ8Um91dGUgcGF0aCA9IFwiL3VzZXIvOnVzZXJcIiBleGFjdCBjb21wb25lbnQ9e1VzZXJ9IC8+XHJcbi8vIDxSb3V0ZSBwYXRoID0gXCIvdXNlclwiIGV4YWN0IHJlbmRlcj17KCkgPT4gKDxIb21lIGRhdGE9e3tobW06XCJ3aGF0XCJ9fS8+KX0gIC8+XHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEFwcCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudHtcclxuXHJcblx0Y29uc3RydWN0b3IocHJvcHMpXHJcblx0e1xyXG5cdFx0c3VwZXIocHJvcHMpXHJcblx0XHRjb25zb2xlLmxvZyhcIlRIRVNFIFBST1BTXCIpXHJcblx0XHRjb25zb2xlLmxvZyhwcm9wcyk7XHJcblx0fVxyXG5cclxuXHRoYW5kbGVDbGljayhlKVxyXG5cdHtcclxuXHRcdGNvbnNvbGUubG9nKFwiQ0xJQ0tFRFwiKTtcclxuXHR9XHJcblxyXG5cdHJlbmRlcigpXHJcblx0e1xyXG5cdFx0cmV0dXJuIChcclxuXHRcdFx0PGRpdiBpZD0ncm9vdCc+XHJcblx0XHRcdFx0WW91ciByZWFjdCBOb2RlIGFwcCBpcyBzZXQgdXAhIFxyXG5cdFx0XHRcdDxidXR0b24gb25DbGljaz17dGhpcy5oYW5kbGVDbGlja30+IENMSUNLIE1FPC9idXR0b24+XHJcblx0XHRcdFx0PFN3aXRjaD5cclxuXHRcdFx0XHRcdDxSb3V0ZSBleGFjdCBwYXRoID0gXCIvXCIgcmVuZGVyPXsoKSA9PiAoPEZlZWQgZGF0YT17dGhpcy5wcm9wcy5kYXRhfS8+KX0gLz5cclxuXHRcdFx0XHRcdDxSb3V0ZSBleGFjdCBwYXRoID0gXCIvdXNlci86dXNlci86cG9zdF9pZFwiIHJlbmRlcj17KCkgPT4gKDxVc2VyUG9zdCBkYXRhPXt0aGlzLnByb3BzLmRhdGF9Lz4pfS8+XHJcblx0XHRcdFx0XHQ8Um91dGUgZXhhY3QgcGF0aCA9IFwiL3VzZXIvOnVzZXJcIiAgcmVuZGVyPXsoKSA9PiAoPFVzZXIgZGF0YT17dGhpcy5wcm9wcy5kYXRhfS8+KX0gLz5cclxuXHRcdFx0XHRcdDxSb3V0ZSBleGFjdCBwYXRoID0gXCIvZm9sbG93ZXJzLzp1c2VyXCIgIHJlbmRlcj17KCkgPT4gKDxGb2xsb3dlcnMgZGF0YT17dGhpcy5wcm9wcy5kYXRhfS8+KX0gLz5cclxuXHRcdFx0XHRcdDxSb3V0ZSBleGFjdCBwYXRoID0gXCIvZm9sbG93aW5nLzp1c2VyXCIgIHJlbmRlcj17KCkgPT4gKDxGb2xsb3dpbmcgZGF0YT17dGhpcy5wcm9wcy5kYXRhfS8+KX0gLz5cclxuXHRcdFx0XHRcdDxSb3V0ZSBleGFjdCBwYXRoID0gXCIvbG9naW5cIiByZW5kZXIgPSB7KCkgPT4gKDxMb2dpbiBkYXRhPXt0aGlzLnByb3BzLmRhdGF9Lz4pfSAvPlxyXG5cdFx0XHRcdFx0PFJvdXRlIGV4YWN0IHBhdGggPSBcIi9yZWdpc3RlclwiIHJlbmRlciA9IHsoKSA9PiAoPFJlZ2lzdGVyIGRhdGE9e3RoaXMucHJvcHMuZGF0YX0vPil9IC8+XHJcblx0XHRcdFx0XHQ8Um91dGUgZXhhY3QgcGF0aCA9IFwiL3Bvc3QvOmFydGlzdC86c29uZ1wiIHJlbmRlciA9IHsoKSA9PiAoPEdsb2JhbFBvc3QgZGF0YT17dGhpcy5wcm9wcy5kYXRhfSAvPil9IC8+XHJcblx0XHRcdFx0XHQ8Um91dGUgZXhhY3QgcGF0aCA9IFwiL2FsYnVtLzphcnRpc3QvOmFsYnVtXCIgcmVuZGVyID0geygpID0+ICg8R2xvYmFsUG9zdCBkYXRhPXt0aGlzLnByb3BzLmRhdGF9IC8+KX0gLz5cclxuXHRcdFx0XHRcdDxSb3V0ZSBleGFjdCBwYXRoID0gXCIvYXJ0aXN0LzphcnRpc3RcIiByZW5kZXI9eygpID0+ICg8QXJ0aXN0UG9zdCBkYXRhID0ge3RoaXMucHJvcHMuZGF0YX0vPil9IC8+XHJcblx0XHRcdFx0XHQ8Um91dGUgZXhhY3QgcGF0aCA9IFwiL2FydGlzdC86YXJ0aXN0L3NvbmdzXCIgcmVuZGVyPXsoKSA9PiAoPEFydGlzdFNvbmdzUG9zdCBkYXRhID0ge3RoaXMucHJvcHMuZGF0YX0vPil9IC8+XHJcblx0XHRcdFx0XHQ8Um91dGUgZXhhY3QgcGF0aCA9IFwiL2FydGlzdC86YXJ0aXN0L2FsYnVtc1wiIHJlbmRlcj17KCkgPT4gKDxBcnRpc3RBbGJ1bXNQb3N0IGRhdGEgPSB7dGhpcy5wcm9wcy5kYXRhfS8+KX0gLz5cclxuXHRcdFx0XHRcdDxSb3V0ZSBleGFjdCBwYXRoID0gXCIvY29udGFjdFwiICBjb21wb25lbnQ9e0NvbnRhY3R9IC8+XHJcblx0XHRcdFx0XHQ8Um91dGUgZXhhY3QgcGF0aCA9IFwiL2Fib3V0XCIgIGNvbXBvbmVudD17QWJvdXR9IC8+XHJcblx0XHRcdFx0PC9Td2l0Y2g+XHRcclxuXHRcdFx0XHQ8c2NyaXB0IHR5cGU9XCJ0ZXh0L2phdmFzY3JpcHRcIiBzcmM9XCIvYXBwL3B1YmxpYy9idW5kbGUuanNcIi8+XHJcblx0XHRcdDwvZGl2PlxyXG5cdFx0KTtcclxuXHR9XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gQXBwOyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCBTdGFuZGFyZEhlYWRlciBmcm9tICcuL3N0YW5kYXJkX2hlYWRlci5qcydcclxuaW1wb3J0IFBvc3RJbmZvIGZyb20gJy4vcG9zdC5qcydcclxuXHJcbmNsYXNzIE5ld1Bvc3RTdWJtaXNzaW9uIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcclxuXHRjb25zdHJ1Y3Rvcihwcm9wcylcclxuXHR7XHJcblx0XHRzdXBlcihwcm9wcyk7XHJcblx0fVxyXG5cclxuXHRyZW5kZXIoKVxyXG5cdHtcclxuXHRcdHJldHVybiAoXHJcblx0XHQgXHQ8ZGl2IGlkID0gXCJwb3N0XCIgc3R5bGUgPXt7bGVmdDonMTUlJyx0b3A6JzEyMHB4Jyxwb3NpdGlvbjoncmVsYXRpdmUnfX0gd2lkdGg9XCIxMDAlXCIgYXV0b2NvbXBsZXRlPVwib2ZmXCI+XHJcblx0XHRcdFx0U29uZy9QbGF5bGlzdDogXHJcblx0XHRcdFx0PGJyLz5cclxuXHRcdFx0XHQ8aW5wdXQgaWQ9XCJzb25nXCIgdHlwZT1cInRleHRcIiBuYW1lPVwic29uZ1wiIHN0eWxlPXt7d2lkdGg6JzgwJSd9fS8+XHJcblx0XHRcdFx0PGJyLz5cclxuXHRcdFx0XHRcdFRpdGxlOlxyXG5cdFx0XHRcdDxici8+XHJcblx0XHRcdFx0PGlucHV0IGlkPVwidGl0bGVcIiB0eXBlPVwidGV4dFwiIG5hbWU9XCJ0aXRsZVwiIHN0eWxlPXt7d2lkdGg6JzgwJSd9fS8+ICBcclxuXHRcdFx0XHQ8dGV4dGFyZWEgaWQgPSBcImNvbnRlbnRcIiBuYW1lPVwiY29udGVudFwiIHJvd3M9XCIxMFwiIGNvbHM9XCI5MFwiIHN0eWxlPXt7d2lkdGg6JzgwJScsaGVpZ2h0Oic1MHB4J319PjwvdGV4dGFyZWE+XHJcblx0XHRcdFx0PGJyLz5cclxuXHRcdFx0XHQ8YnV0dG9uIGlkID0gXCJwb3N0X2J1dHRvblwiIHR5cGU9XCJidXR0b25cIj5Qb3N0PC9idXR0b24+XHJcblx0XHRcdFx0PGJyLz5cclxuXHRcdFx0XHQ8YnIvPlxyXG5cdFx0XHRcdDxkaXYgaWQ9XCJzaG93c29uZ1wiIHN0eWxlID0ge3twb3NpdGlvbjonYWJzb2x1dGUnLHRvcDonMCcsbGVmdDonNDAlJ319PlxyXG5cclxuXHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0XHQ8bWV0YSBjbGFzc05hbWUgPSBcInBvc3RfbnVtYmVyXCIgY29udGVudCA9IFwiMFwiLz5cclxuXHRcdFx0XHQ8bWV0YSBjbGFzc05hbWUgPSBcIm5vbl9wcmlvcml0eV9wb3N0X251bWJlclwiIGNvbnRlbnQgPSBcIjBcIi8+XHJcblx0XHRcdFx0PG1ldGEgY2xhc3NOYW1lID0gXCJnbG9iYWxfcG9zdF9udW1iZXJcIiBjb250ZW50ID0gXCIwXCIvPlxyXG5cdFx0XHRcdDxtZXRhIGNsYXNzTmFtZSA9IFwibm9uX3ByaW9yaXR5X2dsb2JhbF9wb3N0X251bWJlclwiIGNvbnRlbnQgPSBcIjBcIi8+XHJcblx0XHRcdDwvZGl2PlxyXG5cdFx0KTtcclxuXHR9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEZlZWQgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnR7XHJcblx0Y29uc3RydWN0b3IocHJvcHMpXHJcblx0e1xyXG5cdFx0c3VwZXIocHJvcHMpO1xyXG5cdH1cclxuXHJcblx0cmVuZGVyKClcclxuXHR7XHJcblx0XHRyZXR1cm4gKFxyXG5cdFx0XHQ8ZGl2PlxyXG5cdFx0XHRcdDxTdGFuZGFyZEhlYWRlciAvPlxyXG5cdFx0XHRcdDxOZXdQb3N0U3VibWlzc2lvbiAvPlxyXG5cdFx0XHRcdDxQb3N0SW5mbyBzb25ncyA9IHt0aGlzLnByb3BzLmRhdGEuc29uZ3N9IC8+XHJcblx0XHRcdDwvZGl2PlxyXG5cdFx0KTtcclxuXHR9XHJcblxyXG59IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENvbnRhY3QgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xyXG5cclxuXHRjb25zdHJ1Y3Rvcihwcm9wcylcclxuXHR7XHJcblx0XHRzdXBlcihwcm9wcyk7XHJcblx0XHRjb25zb2xlLmxvZyhcIkNvbnRhY3QgUkVOREVSRURcIik7XHJcblx0fVxyXG5cclxuXHRyZW5kZXIgKClcclxuXHR7XHJcblx0XHRyZXR1cm4gKDxkaXY+IENvbnRhY3QgUGFnZSEgPC9kaXY+KTtcclxuXHR9XHJcbn0iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgU3RhbmRhcmRIZWFkZXIgZnJvbSAnLi9zdGFuZGFyZF9oZWFkZXIuanMnXHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBBYm91dCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudHtcclxuXHRjb25zdHJ1Y3Rvcihwcm9wcyl7XHJcblx0XHRzdXBlcihwcm9wcyk7XHJcblxyXG5cclxuXHR9XHJcblxyXG5cdGNvbXBvbmVudERpZE1vdW50KClcclxuXHR7XHJcblxyXG5cdH1cclxuXHJcblxyXG5cdHJlbmRlcigpIHtcclxuXHRcdHJldHVybiAoXHJcblx0XHQ8ZGl2PlxyXG5cdFx0XHQ8U3RhbmRhcmRIZWFkZXIvPlxyXG5cdFx0XHQ8c2VjdGlvbiBjbGFzcyA9IFwiaGVyb1wiPlxyXG5cdFx0XHRcdDxkaXYgY2xhc3M9ICBcImhlcm8tY29udGVudFwiPlxyXG5cdFx0XHRcdFx0PGgyPkFsbCBhYm91dCB1czwvaDI+XHJcblx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdDwvc2VjdGlvbj5cclxuXHJcblx0XHRcdDxkaXYgY2xhc3MgPSBcImp1bWJvdHJvbiB0ZXh0LWNlbnRlclwiPlxyXG5cdFx0XHRcdDxwPjEuIENsaWNrIHJlZ2lzdGVyLCBlbnRlciBuYW1lLCBwYXNzd29yZC4gTG9naW4gdXNpbmcgdGhhdCBpbmZvIDwvcD5cclxuXHRcdFx0XHQ8cD4yLiBUbyBzdWJtaXQgY29udGVudC4gR2V0IGEgc3BvdGlmeSBlbWJlZCBsaW5rLiBHbyB0byBhIHNvbmcgb3IgYWxidW0sIGNsaWNrIC4uLi0+c2hhcmUtPmNvcHkgZW1iZWQgY29kZS4gcGFzdCBpbiB0aGUgc29uZy9wbGF5bGlzdCBzZWN0aW9uLiBFbnRlciBpbiBhIHRpdGxlIGFuZCB0ZXh0PC9wPlxyXG5cdFx0XHRcdDxwPjMuIFlvdSBjYW4gc2VhcmNoIGZvciBhIHNvbmcsIGFsYnVtLCB1c2VyLCBvciBhcnRpc3QuIFRoaXMgd2lsbCBicmluZyB5b3UgdG8gYSBnbG9iYWwgcG9zdCBhYm91dCB0aGUgc29uZyBvciBhbGJ1bS4gVGhpcyBzaG91bGQgaGF2ZSBhbGwgZGF0YSBmcm9tIHBvc3RzIGFib3V0IHRoYXQgdG9waWM8L3A+XHJcblx0XHRcdFx0PGEgaHJlZj1cIi9jb250YWN0XCIgY2xhc3M9XCJidG4gYnRuLWxnIGJ0bi1wcmltYXJ5XCI+RHJvcCB1cyBhIGxpbms8L2E+XHJcblx0XHRcdDwvZGl2PlxyXG5cdFx0PC9kaXY+XHJcblx0XHQpO1xyXG5cdH1cclxufVxyXG5cclxuXHJcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCBTdGFuZGFyZEhlYWRlciBmcm9tICcuL3N0YW5kYXJkX2hlYWRlci5qcydcclxuaW1wb3J0IFBvc3RJbmZvIGZyb20gJy4vcG9zdC5qcydcclxuY2xhc3MgVXNlckluZm8gZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xyXG5cclxuXHRjb25zdHJ1Y3Rvcihwcm9wcykge1xyXG5cdFx0c3VwZXIocHJvcHMpO1xyXG5cdFx0Y29uc29sZS5sb2coXCJVU0VSIERBVEFcIilcclxuXHRcdGNvbnNvbGUubG9nKHByb3BzKVxyXG5cdH1cclxuXHJcblx0cmVuZGVyICgpXHJcblx0e1xyXG5cdFx0cmV0dXJuKFxyXG5cdFx0XHQ8ZGl2IGNsYXNzTmFtZSA9IFwidXNlcl9pbmZvXCIgc3R5bGU9e3twb3NpdGlvbjoncmVsYXRpdmUnLGxlZnQ6JzE1JScsIHRvcDonMTAwcHgnLCBwb3NpdGlvbjoncmVsYXRpdmUnLHdpZHRoOicxMDAlJ319PlxyXG5cdFx0XHRcdDxoMT57dGhpcy5wcm9wcy51c2VyLnVzZXJuYW1lfTwvaDE+XHJcblx0XHRcdFx0PGgyPnt0aGlzLnByb3BzLnVzZXIuZGVzY3JpcHRpb259PC9oMj5cclxuXHRcdFx0XHQ8aDI+e3RoaXMucHJvcHMudXNlci51cHZvdGVzIC0gdGhpcy5wcm9wcy51c2VyLmRvd252b3Rlc308L2gyPlxyXG5cdFx0XHQ8L2Rpdj5cclxuXHRcdCk7XHJcblx0fVxyXG59XHJcblxyXG5jbGFzcyBGb2xsb3dlckluZm8gZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xyXG5cdGNvbnN0cnVjdG9yKHByb3BzKSB7XHJcblx0XHRzdXBlcihwcm9wcylcclxuXHR9XHJcblxyXG5cdHJlbmRlcigpXHJcblx0e1xyXG5cdFx0cmV0dXJuKFxyXG5cdFx0XHQ8ZGl2IGNsYXNzTmFtZSA9IFwidXNlcl9ib2R5XCIgc3R5bGU9e3tsZWZ0OicxNSUnLCB0b3A6JzEwMHB4JywgcG9zaXRpb246J3JlbGF0aXZlJyx3aWR0aDonMTAwJSd9fT5cclxuXHRcdFx0XHQ8ZGl2PlxyXG5cdFx0XHRcdFx0PHA+IDxhIGhyZWYgPSB7XCIvZm9sbG93ZXJzL1wiICsgdGhpcy5wcm9wcy51c2VyLnVzZXJuYW1lfT4gRm9sbG93ZXJzIDwvYT46IHt0aGlzLnByb3BzLmZvbGxvd3MubGVuZ3RofSA8L3A+XHJcblx0XHRcdFx0XHQ8cD4gPGEgaHJlZiA9IHtcIi9mb2xsb3dpbmcvXCIgKyB0aGlzLnByb3BzLnVzZXIudXNlcm5hbWV9PiBGb2xsb3dpbmcgPC9hPjoge3RoaXMucHJvcHMuZm9sbG93ZWVzLmxlbmd0aH0gPC9wPlxyXG5cdFx0XHRcdDwvZGl2PlxyXG5cclxuXHRcdFx0XHQ8YnV0dG9uIGNsYXNzTmFtZSA9ICdmb2xsb3dfYnV0dG9uJyBpZCA9IFwiZm9sbG93X2J1dHRvblwiIHR5cGU9XCJidXR0b25cIj5Gb2xsb3c8L2J1dHRvbj5cclxuXHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT1cImZvbGxvd19pY29uXCI+XHJcblx0XHRcdFx0XHROb3QgRm9sbG93aW5nXHJcblx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdDwvZGl2PlxyXG5cdFx0KTtcclxuXHR9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFVzZXJQYWdlIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50e1xyXG5cclxuXHRjb25zdHJ1Y3Rvcihwcm9wcykge1xyXG5cdFx0c3VwZXIocHJvcHMpO1xyXG5cdFx0Y29uc29sZS5sb2cocHJvcHMpXHJcblx0fVxyXG5cclxuICByZW5kZXIoKSB7XHJcblx0cmV0dXJuIChcclxuXHQ8ZGl2PlxyXG5cdFx0PFN0YW5kYXJkSGVhZGVyLz5cclxuXHRcdDxVc2VySW5mbyB1c2VyID0ge3RoaXMucHJvcHMuZGF0YS51c2VyfS8+XHJcblx0XHQ8Rm9sbG93ZXJJbmZvIHVzZXIgPSB7dGhpcy5wcm9wcy5kYXRhLnVzZXJ9IGZvbGxvd3M9e3RoaXMucHJvcHMuZGF0YS5mb2xsb3dzfSBmb2xsb3dlZXM9e3RoaXMucHJvcHMuZGF0YS5mb2xsb3dlZXN9Lz5cclxuXHRcdDxQb3N0SW5mbyBzb25ncyA9IHt0aGlzLnByb3BzLmRhdGEuc29uZ3N9IC8+XHJcblxyXG5cdFx0PGRpdiBjbGFzc05hbWUgPSBcInVzZXJfYm9keVwiIHN0eWxlPXt7bGVmdDonMTUlJywgdG9wOicxMDBweCcsIHBvc2l0aW9uOidyZWxhdGl2ZScsIHdpZHRoOicxMDAlJ319PlxyXG5cclxuXHRcdDwvZGl2PlxyXG5cclxuXHJcblx0PC9kaXY+XHJcblx0KX07XHJcbn1cclxuXHJcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCBTdGFuZGFyZEhlYWRlciBmcm9tICcuL3N0YW5kYXJkX2hlYWRlci5qcydcclxuaW1wb3J0IENvbW1lbnRTZWN0aW9uIGZyb20gJy4vY29tbWVudHMuanMnXHJcblxyXG5jbGFzcyBVc2VyUG9zdENvbnRlbnQgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQgXHJcbntcclxuXHRjb25zdHJ1Y3Rvcihwcm9wcylcclxuXHR7XHJcblx0XHRzdXBlcihwcm9wcyk7XHJcblx0fVxyXG5cclxuXHRyZW5kZXJpZnJhbWUoaWZyYW1lKSB7XHJcblx0XHRyZXR1cm4ge1xyXG5cdFx0XHRfX2h0bWw6IGlmcmFtZVxyXG5cdFx0fTtcclxuXHR9XHJcblxyXG5cdHJlbmRlcigpXHJcblx0e1xyXG5cdFx0cmV0dXJuIChcclxuXHRcdFx0PGRpdj5cclxuXHRcdFx0XHQ8ZGl2IHN0eWxlPXt7cG9zaXRpb246J3JlbGF0aXZlJywgdG9wOicxMDBweCcsIHBhZGRpbmdCb3R0b206JzEwMHB4JywgaGVpZ2h0OiAnYXV0bycsIG1pbkhlaWdodDogJzU1MHB4J319PlxyXG5cdFx0XHRcdFx0PGRpdiBzdHlsZT17e3Bvc2l0aW9uOidyZWxhdGl2ZScsZmxvYXQ6J2xlZnQnLCB0b3A6JzBweCcsIHBhZGRpbmdSaWdodDonMjBweCd9fSBkYW5nZXJvdXNseVNldElubmVySFRNTD17dGhpcy5yZW5kZXJpZnJhbWUodGhpcy5wcm9wcy5kYXRhLmVtYmVkZGVkX2NvbnRlbnQpfT5cclxuXHRcdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcdFx0PGRpdiBzdHlsZT17e2xlZnQ6JzEwJScsIHRvcDonMjAlJ319PlxyXG5cdFx0XHRcdFx0ICBcdHt0aGlzLnByb3BzLmRhdGEuY29udGVudH1cclxuXHRcdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcdDxici8+XHJcblx0XHRcdFx0PGJyLz5cclxuXHRcdFx0XHQ8YnIvPlxyXG5cdFx0XHRcdDxici8+XHJcblx0XHRcdFx0PG1ldGEgY2xhc3NOYW1lID0gXCJjb21tZW50X29mZnNldFwiIGNvbnRlbnQgPSBcIjBcIiAvPlxyXG5cdFx0XHRcdDxidXR0b24gdHlwZT0nYnV0dG9uJyBjbGFzc05hbWUgPSAnbmV3X2NvbW1lbnQnIGlkID0gXCItMVwiIGNsYXNzTmFtZSA9ICdsZXZlbF8tMScgc3R5bGU9e3twb3NpdGlvbjoncmVsYXRpdmUnfX0+Q29tbWVudDwvYnV0dG9uPlxyXG5cdFx0XHQ8L2Rpdj5cclxuXHRcdCk7XHJcblx0fVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBVc2VyUG9zdCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudFxyXG57XHJcblx0Y29uc3RydWN0b3IocHJvcHMpXHJcblx0e1xyXG5cdFx0c3VwZXIocHJvcHMpO1xyXG5cdH1cclxuXHJcblx0cmVuZGVyKClcclxuXHR7XHJcblx0XHRyZXR1cm4gKFxyXG5cdFx0XHQ8ZGl2PlxyXG5cdFx0XHRcdDxTdGFuZGFyZEhlYWRlci8+XHJcblx0XHRcdFx0PFVzZXJQb3N0Q29udGVudCBkYXRhID0ge3RoaXMucHJvcHMuZGF0YS51c2VyX3Bvc3R9Lz5cclxuXHRcdFx0XHQ8Q29tbWVudFNlY3Rpb24gZGF0YSA9IHt0aGlzLnByb3BzLmRhdGF9Lz5cclxuXHRcdFx0PC9kaXY+XHJcblx0XHQpO1xyXG5cdH1cclxufSIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCBTdGFuZGFyZEhlYWRlciBmcm9tICcuL3N0YW5kYXJkX2hlYWRlci5qcydcclxuXHJcbmNsYXNzIEZvbGxvd2luZ0luZm8gZXh0ZW5kcyBSZWFjdC5Db21wb25lbnRcclxue1xyXG5cdGNvbnN0cnVjdG9yKHByb3BzKVxyXG5cdHtcclxuXHRcdHN1cGVyKHByb3BzKVxyXG5cdH1cclxuXHJcblx0cmVuZGVyKClcclxuXHR7XHJcblx0XHRyZXR1cm4gKFxyXG5cdFx0XHQ8ZGl2PlxyXG5cdFx0XHRcdHggXHJcblx0XHRcdFx0PGJ1dHRvbiBjbGFzc05hbWUgPSAnZm9sbG93X2J1dHRvbicgaWQgPSBcImZvbGxvd19idXR0b25cIiB0eXBlPVwiYnV0dG9uXCI+Rm9sbG93PC9idXR0b24+XHJcblx0XHRcdFx0PGRpdiBjbGFzc05hbWUgPVwiZm9sbG93X2ljb25cIj5cclxuXHRcdFx0XHRcdE5vdCBGb2xsb3dpbmdcclxuXHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0PC9kaXY+XHRcdFx0XHJcblx0XHQpO1xyXG5cdH1cclxufVxyXG5cclxuY2xhc3MgQWxidW1EaXNwbGF5IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50XHJcbntcclxuXHRjb25zdHJ1Y3Rvcihwcm9wcylcclxuXHR7XHJcblx0XHRzdXBlcihwcm9wcylcclxuXHRcdHRoaXMuYWxidW1zID0gW107XHJcblx0fVxyXG5cclxuXHRyZW5kZXJpZnJhbWUoaWZyYW1lKSB7XHJcblx0XHRyZXR1cm4ge1xyXG5cdFx0XHRfX2h0bWw6IGlmcmFtZVxyXG5cdFx0fTtcclxuXHR9XHJcblxyXG5cdGdlbmVyYXRlQWxidW1zKClcclxuXHR7XHJcblx0XHRmb3IgKHZhciBhbGJ1bSBvZiB0aGlzLnByb3BzLmRhdGEpIFxyXG5cdFx0e1xyXG5cdFx0XHR0aGlzLmFsYnVtcy5wdXNoKFxyXG5cdFx0XHQ8ZGl2IHN0eWxlID0ge3tkaXNwbGF5OiAnZmxleCcsIGZsZXhEaXJlY3Rpb246J2NvbHVtbicsIHBhZGRpbmc6JzEwcHgnfX0+XHJcblx0XHRcdFx0e2FsYnVtLmFsYnVtfVxyXG5cdFx0XHRcdDxkaXYgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw9e3RoaXMucmVuZGVyaWZyYW1lKGFsYnVtLmVtYmVkZGVkX2NvbnRlbnQpfT48L2Rpdj5cclxuXHRcdFx0PC9kaXY+KVxyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0cmVuZGVyKClcclxuXHR7XHJcblx0XHR0aGlzLmdlbmVyYXRlQWxidW1zKCk7XHJcblx0XHRyZXR1cm4gKFxyXG5cdFx0XHRcdDxkaXY+XHJcblx0XHRcdFx0XHQ8aDE+IDxhIGhyZWY9IHtcIi9hcnRpc3QvXCIgKyB0aGlzLnByb3BzLmFydGlzdCArIFwiL2FsYnVtc1wifT4gQWxidW1zIDwvYT4gPC9oMT4gXHJcblx0XHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZSA9IFwiYWxidW1fZGlzcGxheVwiIHN0eWxlID0ge3tkaXNwbGF5OiAnZmxleCcsZmxleERpcmVjdGlvbjoncm93J319ID5cclxuXHRcdFx0XHRcdFx0e3RoaXMuYWxidW1zfVxyXG5cdFx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFxyXG5cdFx0KTtcclxuXHR9XHJcbn1cclxuXHJcbmNsYXNzIFNvbmdEaXNwbGF5IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50XHJcbntcclxuXHRjb25zdHJ1Y3Rvcihwcm9wcylcclxuXHR7XHJcblx0XHRzdXBlcihwcm9wcylcclxuXHRcdHRoaXMuc29uZ3MgPSBbXTtcclxuXHR9XHJcblxyXG5cdHJlbmRlcmlmcmFtZShpZnJhbWUpIHtcclxuXHRcdHJldHVybiB7XHJcblx0XHRcdF9faHRtbDogaWZyYW1lXHJcblx0XHR9O1xyXG5cdH1cclxuXHJcblx0Z2VuZXJhdGVTb25ncygpXHJcblx0e1xyXG5cdFx0Zm9yICh2YXIgc29uZyBvZiB0aGlzLnByb3BzLmRhdGEpIFxyXG5cdFx0e1xyXG5cdFx0XHR0aGlzLnNvbmdzLnB1c2goXHJcblx0XHRcdDxkaXYgc3R5bGUgPSB7e2Rpc3BsYXk6ICdmbGV4JywgZmxleERpcmVjdGlvbjonY29sdW1uJywgcGFkZGluZzonMTBweCd9fT5cclxuXHRcdFx0XHR7c29uZy5zb25nfVxyXG5cdFx0XHRcdDxkaXYgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw9e3RoaXMucmVuZGVyaWZyYW1lKHNvbmcuZW1iZWRkZWRfY29udGVudCl9PjwvZGl2PlxyXG5cdFx0XHQ8L2Rpdj4pXHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHRyZW5kZXIoKVxyXG5cdHtcclxuXHRcdHRoaXMuZ2VuZXJhdGVTb25ncygpO1xyXG5cdFx0cmV0dXJuIChcclxuXHRcdFx0XHQ8ZGl2PlxyXG5cdFx0XHRcdFx0PGgxPiA8YSBocmVmPSB7XCIvYXJ0aXN0L1wiICsgdGhpcy5wcm9wcy5hcnRpc3QgKyBcIi9zb25nc1wifT4gU29uZ3MgPC9hPiA8L2gxPiBcclxuXHRcdFx0XHRcdDxkaXYgY2xhc3NOYW1lID0gXCJzb25nX2Rpc3BsYXlcIiBzdHlsZSA9IHt7ZGlzcGxheTogJ2ZsZXgnLGZsZXhEaXJlY3Rpb246J3Jvdyd9fSA+XHJcblx0XHRcdFx0XHRcdHt0aGlzLnNvbmdzfVxyXG5cdFx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFxyXG5cdFx0KTtcclxuXHR9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEFydGlzdFBvc3QgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnRcclxue1xyXG5cdGNvbnN0cnVjdG9yKHByb3BzKVxyXG5cdHtcclxuXHRcdHN1cGVyKHByb3BzKTtcclxuXHRcdGNvbnNvbGUubG9nKFwiQVJUSVNUIFBBR0VcIilcclxuXHRcdGNvbnNvbGUubG9nKHByb3BzKTtcclxuXHR9XHJcblxyXG5cdHJlbmRlcigpXHJcblx0e1xyXG5cdFx0cmV0dXJuIChcclxuXHRcdFx0PGRpdj5cclxuXHRcdFx0XHQ8U3RhbmRhcmRIZWFkZXIgLz5cclxuXHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZSA9IFwiaW5mb19jb250YWluZXJcIiBzdHlsZT17e2xlZnQ6JzE1JScsIHRvcDonMjAwcHgnLCBwb3NpdGlvbjoncmVsYXRpdmUnLHdpZHRoOicxMDAlJ319PlxyXG5cdFx0XHRcdFx0PEZvbGxvd2luZ0luZm8gLz5cclxuXHRcdFx0XHRcdDxBbGJ1bURpc3BsYXkgZGF0YSA9IHt0aGlzLnByb3BzLmRhdGEuYWxidW1fZGF0YX0gYXJ0aXN0ID0ge3RoaXMucHJvcHMuZGF0YS5hcnRpc3R9Lz5cclxuXHRcdFx0XHRcdDxTb25nRGlzcGxheSBkYXRhID0ge3RoaXMucHJvcHMuZGF0YS5zb25nX2RhdGF9IGFydGlzdCA9IHt0aGlzLnByb3BzLmRhdGEuYXJ0aXN0fS8+XHJcblx0XHRcdFx0PC9kaXY+XHJcblxyXG5cdFx0XHQ8L2Rpdj5cclxuXHRcdCk7XHJcblx0fVxyXG59IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IFN0YW5kYXJkSGVhZGVyIGZyb20gJy4vc3RhbmRhcmRfaGVhZGVyLmpzJ1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQXJ0aXN0U29uZ3NQYWdlIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50XHJcbntcclxuXHRjb25zdHJ1Y3Rvcihwcm9wcylcclxuXHR7XHJcblx0XHRzdXBlcihwcm9wcylcclxuXHRcdHRoaXMuc29uZ3MgPSBbXTtcclxuXHR9XHJcblxyXG5cdGdlbmVyYXRlU29uZ3MoKVxyXG5cdHtcclxuXHRcdGZvciAodmFyIHNvbmcgb2YgdGhpcy5wcm9wcy5kYXRhLnNvbmdfZGF0YSkgXHJcblx0XHR7XHJcblx0XHRcdHRoaXMuc29uZ3MucHVzaChcclxuXHRcdFx0PGRpdiBzdHlsZSA9IHt7ZGlzcGxheTogJ2ZsZXgnLGZsZXhEaXJlY3Rpb246J2NvbHVtbid9fT5cclxuXHRcdFx0XHQ8aDI+ICA8YSBocmVmID0ge1wiL3Bvc3QvXCIgKyBzb25nLmFydGlzdCArIFwiL1wiICsgc29uZy5zb25nfT57c29uZy5zb25nfSA8L2E+PC9oMj5cclxuXHRcdFx0PC9kaXY+KVxyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0cmVuZGVyKClcclxuXHR7XHJcblx0XHR0aGlzLmdlbmVyYXRlU29uZ3MoKTtcclxuXHRcdHJldHVybiAoXHJcblx0XHRcdDxkaXY+XHJcblx0XHRcdFx0PFN0YW5kYXJkSGVhZGVyIC8+XHJcblx0XHRcdFx0PGRpdiBjbGFzc05hbWUgPSBcInNvbmdzX2Rpc3BsYXlcIiBzdHlsZSA9IHt7bGVmdDonMTUlJywgdG9wOicxMDBweCcsIHBvc2l0aW9uOidyZWxhdGl2ZSd9fT5cclxuXHRcdFx0XHQ8aDE+IFNvbmdzIDwvaDE+XHJcblx0XHRcdFx0XHR7dGhpcy5zb25nc31cclxuXHRcdFx0XHQ8L2Rpdj5cdFxyXG5cdFx0XHQ8L2Rpdj5cclxuXHRcdCk7XHJcblx0fVxyXG59IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IFN0YW5kYXJkSGVhZGVyIGZyb20gJy4vc3RhbmRhcmRfaGVhZGVyLmpzJ1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQXJ0aXN0QWxidW1zUGFnZSBleHRlbmRzIFJlYWN0LkNvbXBvbmVudFxyXG57XHJcblx0Y29uc3RydWN0b3IocHJvcHMpXHJcblx0e1xyXG5cdFx0c3VwZXIocHJvcHMpXHJcblx0XHRjb25zb2xlLmxvZyhcIkFESFNERlwiKVxyXG5cdFx0Y29uc29sZS5sb2cocHJvcHMpXHJcblx0XHR0aGlzLmFsYnVtcyA9IFtdO1xyXG5cdH1cclxuXHJcblx0Z2VuZXJhdGVBbGJ1bXMoKVxyXG5cdHtcclxuXHRcdGZvciAodmFyIGFsYnVtIG9mIHRoaXMucHJvcHMuZGF0YS5hbGJ1bV9kYXRhKSBcclxuXHRcdHtcclxuXHRcdFx0Y29uc29sZS5sb2coYWxidW0pXHJcblx0XHRcdHRoaXMuYWxidW1zLnB1c2goXHJcblx0XHRcdDxkaXYgc3R5bGUgPSB7e2Rpc3BsYXk6ICdmbGV4JyxmbGV4RGlyZWN0aW9uOidjb2x1bW4nfX0+XHJcblx0XHRcdFx0PGgyPiAgPGEgaHJlZiA9IHtcIi9hbGJ1bS9cIiArIGFsYnVtLmFydGlzdCArIFwiL1wiICsgYWxidW0uYWxidW19PnthbGJ1bS5hbGJ1bX0gPC9hPjwvaDI+XHJcblx0XHRcdDwvZGl2Pik7XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHRyZW5kZXIoKVxyXG5cdHtcclxuXHRcdHRoaXMuZ2VuZXJhdGVBbGJ1bXMoKTtcclxuXHRcdHJldHVybiAoXHJcblx0XHRcdDxkaXY+XHJcblx0XHRcdFx0PFN0YW5kYXJkSGVhZGVyIC8+XHJcblx0XHRcdFx0PGRpdiBjbGFzc05hbWUgPSBcImFsYnVtc19kaXNwbGF5XCIgc3R5bGUgPSB7e2xlZnQ6JzE1JScsIHRvcDonMTAwcHgnLCBwb3NpdGlvbjoncmVsYXRpdmUnfX0+XHJcblx0XHRcdFx0PGgxPiBBbGJ1bXMgPC9oMT5cclxuXHRcdFx0XHRcdHt0aGlzLmFsYnVtc31cclxuXHRcdFx0XHQ8L2Rpdj5cdFxyXG5cdFx0XHQ8L2Rpdj5cclxuXHRcdCk7XHJcblx0fVxyXG59IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IFN0YW5kYXJkSGVhZGVyIGZyb20gJy4vc3RhbmRhcmRfaGVhZGVyLmpzJ1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTG9naW5QYWdlIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50XHJcbntcclxuXHRjb25zdHJ1Y3Rvcihwcm9wcylcclxuXHR7XHJcblx0XHRzdXBlcihwcm9wcylcclxuXHR9XHJcblxyXG5cclxuXHRyZW5kZXIoKVxyXG5cdHtcclxuXHRcdHJldHVybihcclxuXHRcdFx0PGRpdj5cclxuXHRcdFx0XHQ8U3RhbmRhcmRIZWFkZXIgLz5cclxuXHJcblx0XHRcdFx0PHNlY3Rpb24gY2xhc3NOYW1lID0gXCJoZXJvXCIgc3R5bGUgPSB7e3Bvc2l0aW9uOidhYnNvbHV0ZScsIGxlZnQ6JzEwJScsIHRvcDonMjAlJ319PlxyXG5cdFx0XHRcdFx0PGRpdiBjbGFzc05hbWUgPSAgXCJoZXJvLWNvbnRlbnRcIiA+XHJcblx0XHRcdFx0XHRcdDxoMj5Mb2dpbjwvaDI+XHJcblx0XHRcdFx0XHRcdDxmb3JtIG1ldGhvZD1cIlBPU1RcIiBpZD1cInRlc3RGb3JtXCIgPlxyXG5cdFx0XHRcdFx0XHQgIDxsYWJlbCBzdHlsZT17e2NvbG9yOidibGFjayd9fT5Vc2VybmFtZTo8L2xhYmVsPlxyXG5cdFx0XHRcdFx0XHQgIDxpbnB1dCB0eXBlPVwidGV4dFwiIG5hbWU9XCJ1c2VybmFtZVwiLz48YnIvPlxyXG5cdFx0XHRcdFx0XHQgIDxsYWJlbCBzdHlsZT17e2NvbG9yOidibGFjayd9fT5QYXNzd29yZDo8L2xhYmVsPlxyXG5cdFx0XHRcdFx0XHQgIDxpbnB1dCB0eXBlPVwidGV4dFwiIG5hbWU9XCJwYXNzd29yZFwiLz5cclxuXHRcdFx0XHRcdFx0XHQ8cD5cclxuXHRcdFx0XHRcdFx0XHQgIDxidXR0b24gdHlwZT1cInN1Ym1pdFwiIGlkPVwic3VibWl0QnV0dG9uXCIgY2xhc3NOYW1lPVwiYnRuIGJ0bi1sZyBidG4tcHJpbWFyeVwiID5Mb2dpbjwvYnV0dG9uPlxyXG5cdFx0XHRcdFx0XHRcdCAgPGEgaHJlZiA9IFwiL3JlZ2lzdGVyXCIgaWQ9XCJzdWJtaXRCdXR0b25cIiBjbGFzc05hbWU9XCJidG4gYnRuLWxnIGJ0bi1wcmltYXJ5XCIgPlJlZ2lzdGVyPC9hPlxyXG5cdFx0XHRcdFx0XHRcdDwvcD5cclxuXHRcdFx0XHRcdFx0XHQ8cD5cclxuXHRcdFx0XHRcdFx0XHQ8L3A+XHJcblx0XHRcdFx0XHRcdDwvZm9ybT5cclxuXHRcdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcdDwvc2VjdGlvbj5cclxuXHJcblx0XHRcdDwvZGl2PlxyXG5cdFx0KTtcclxuXHR9XHJcbn0iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgU3RhbmRhcmRIZWFkZXIgZnJvbSAnLi9zdGFuZGFyZF9oZWFkZXIuanMnXHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBSZWdpc3RlclBhZ2UgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnRcclxue1xyXG5cdGNvbnN0cnVjdG9yKHByb3BzKVxyXG5cdHtcclxuXHRcdHN1cGVyKHByb3BzKVxyXG5cdH1cclxuXHJcblx0cmVuZGVyKClcclxuXHR7XHJcblx0XHRyZXR1cm4gKFxyXG5cdFx0XHQ8ZGl2PlxyXG5cdFx0XHRcdDxTdGFuZGFyZEhlYWRlciAvPlxyXG5cdFx0XHRcdDxzZWN0aW9uIGNsYXNzTmFtZSA9IFwiaGVyb1wiIHN0eWxlID0ge3twb3NpdGlvbjonYWJzb2x1dGUnLCBsZWZ0OicxMCUnLCB0b3A6JzIwJSd9fT5cclxuXHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT0gIFwiaGVyby1jb250ZW50XCIgPlxyXG5cdFx0XHRcdFx0PGgyPlJlZ2lzdGVyPC9oMj5cclxuXHRcdFx0XHQ8Zm9ybSBtZXRob2Q9XCJQT1NUXCIgaWQ9XCJ0ZXN0Rm9ybVwiID5cclxuXHRcdFx0XHQgIDxsYWJlbCBzdHlsZT17e2NvbG9yOidibGFjayd9fT5FbnRlciBVc2VybmFtZTo8L2xhYmVsPlxyXG5cdFx0XHRcdCAgPGlucHV0IHR5cGU9XCJ0ZXh0XCIgbmFtZT1cInVzZXJuYW1lXCIvPjxici8+XHJcblx0XHRcdFx0ICA8bGFiZWwgc3R5bGU9e3tjb2xvcjonYmxhY2snfX0+RW50ZXIgUGFzc3dvcmQ6PC9sYWJlbD5cclxuXHRcdFx0XHQgIDxpbnB1dCB0eXBlPVwidGV4dFwiIG5hbWU9XCJwYXNzd29yZFwiLz48YnIvPlxyXG5cdFx0XHRcdCAgICA8bGFiZWwgc3R5bGU9e3tjb2xvcjonYmxhY2snfX0+Q29uZmlybSBQYXNzd29yZDo8L2xhYmVsPlxyXG5cdFx0XHRcdCAgPGlucHV0IHR5cGU9XCJ0ZXh0XCIgbmFtZT1cInBhc3N3b3JkX2NvbmZpcm1cIi8+XHJcblx0XHRcdFx0ICA8cD5cclxuXHRcdFx0XHQgIDxidXR0b24gaHJlZiA9IFwiL1wiIHR5cGU9XCJzdWJtaXRcIiBpZD1cInN1Ym1pdEJ1dHRvblwiIGNsYXNzTmFtZT1cImJ0biBidG4tbGcgYnRuLXByaW1hcnlcIiA+UmVnaXN0ZXI8L2J1dHRvbj5cclxuXHRcdFx0XHQgIDwvcD5cclxuXHRcdFx0XHQ8L2Zvcm0+XHJcblx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0PC9zZWN0aW9uPlxyXG5cclxuXHRcdFx0PC9kaXY+XHJcblx0XHQpO1xyXG5cdH1cclxufSIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCBTdGFuZGFyZEhlYWRlciBmcm9tICcuL3N0YW5kYXJkX2hlYWRlci5qcydcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEZvbGxvd2Vyc1BhZ2UgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnRcclxue1xyXG5cdGNvbnN0cnVjdG9yKHByb3BzKVxyXG5cdHtcclxuXHRcdHN1cGVyKHByb3BzKVxyXG5cdFx0dGhpcy5mb2xsb3dlcnMgPSBbXVxyXG5cdH1cclxuXHJcblx0Z2VuZXJhdGVGb2xsb3dlcnMoKVxyXG5cdHtcclxuXHRcdGZvciAodmFyIGZvbGxvd2VyIG9mIHRoaXMucHJvcHMuZGF0YS5mb2xsb3dlcnMpIFxyXG5cdFx0e1xyXG5cdFx0XHRjb25zb2xlLmxvZyhmb2xsb3dlcilcclxuXHRcdFx0dGhpcy5mb2xsb3dlcnMucHVzaCg8ZGl2IGtleSA9IHtmb2xsb3dlci51c2VyX2lkfT48YSBocmVmID0ge1wiL3VzZXIvXCIgKyBmb2xsb3dlci51c2VyX2lkfT57Zm9sbG93ZXIudXNlcl9pZH08L2E+PC9kaXY+KVxyXG5cdFx0fVxyXG5cdH1cdFxyXG5cclxuXHRyZW5kZXIoKVxyXG5cdHtcclxuXHRcdHRoaXMuZ2VuZXJhdGVGb2xsb3dlcnMoKTtcclxuXHRcdHJldHVybiAoXHJcblx0XHRcdDxkaXY+XHJcblx0XHRcdFx0PFN0YW5kYXJkSGVhZGVyLz5cclxuXHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZSA9IFwiZm9sbG93ZXJzX2RpdlwiIHN0eWxlID0ge3tsZWZ0OicxNSUnLCB0b3A6JzEwMHB4JywgcG9zaXRpb246J3JlbGF0aXZlJ319PlxyXG5cdFx0XHRcdFx0PGgxPiBGb2xsb3dlcnMgPC9oMT5cclxuXHRcdFx0XHRcdFx0e3RoaXMuZm9sbG93ZXJzfVxyXG5cdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHQ8L2Rpdj5cclxuXHRcdCk7XHJcblx0fVxyXG59IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IFN0YW5kYXJkSGVhZGVyIGZyb20gJy4vc3RhbmRhcmRfaGVhZGVyLmpzJ1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRm9sbG93aW5nUGFnZSBleHRlbmRzIFJlYWN0LkNvbXBvbmVudFxyXG57XHJcblx0Y29uc3RydWN0b3IocHJvcHMpXHJcblx0e1xyXG5cdFx0c3VwZXIocHJvcHMpXHJcblx0XHR0aGlzLmZvbGxvd3MgPSBbXVxyXG5cdH1cclxuXHJcblx0Z2VuZXJhdGVGb2xsb3dzKClcclxuXHR7XHJcblx0XHRmb3IgKHZhciBmb2xsb3cgb2YgdGhpcy5wcm9wcy5kYXRhLmZvbGxvd2luZykgXHJcblx0XHR7XHJcblx0XHRcdGNvbnNvbGUubG9nKGZvbGxvdylcclxuXHRcdFx0dGhpcy5mb2xsb3dzLnB1c2goPGRpdiBrZXkgPSB7Zm9sbG93LnVzZXJfaWR9PjxhIGhyZWYgPSB7XCIvdXNlci9cIiArIGZvbGxvdy51c2VyX2lkfT57Zm9sbG93LnVzZXJfaWR9PC9hPjwvZGl2PilcclxuXHRcdH1cclxuXHR9XHRcclxuXHJcblx0cmVuZGVyKClcclxuXHR7XHJcblx0XHR0aGlzLmdlbmVyYXRlRm9sbG93cygpO1xyXG5cdFx0cmV0dXJuIChcclxuXHRcdFx0PGRpdj5cclxuXHRcdFx0XHQ8U3RhbmRhcmRIZWFkZXIvPlxyXG5cdFx0XHRcdDxkaXYgY2xhc3NOYW1lID0gXCJmb2xsb3dzX2RpdlwiIHN0eWxlID0ge3tsZWZ0OicxNSUnLCB0b3A6JzEwMHB4JywgcG9zaXRpb246J3JlbGF0aXZlJ319PlxyXG5cdFx0XHRcdFx0PGgxPiBGb2xsb3dzIDwvaDE+XHJcblx0XHRcdFx0XHRcdHt0aGlzLmZvbGxvd3N9XHJcblx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdDwvZGl2PlxyXG5cdFx0KTtcclxuXHR9XHJcbn0iLCJ2YXIgaXNhcnJheSA9IHJlcXVpcmUoJ2lzYXJyYXknKVxuXG4vKipcbiAqIEV4cG9zZSBgcGF0aFRvUmVnZXhwYC5cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBwYXRoVG9SZWdleHBcbm1vZHVsZS5leHBvcnRzLnBhcnNlID0gcGFyc2Vcbm1vZHVsZS5leHBvcnRzLmNvbXBpbGUgPSBjb21waWxlXG5tb2R1bGUuZXhwb3J0cy50b2tlbnNUb0Z1bmN0aW9uID0gdG9rZW5zVG9GdW5jdGlvblxubW9kdWxlLmV4cG9ydHMudG9rZW5zVG9SZWdFeHAgPSB0b2tlbnNUb1JlZ0V4cFxuXG4vKipcbiAqIFRoZSBtYWluIHBhdGggbWF0Y2hpbmcgcmVnZXhwIHV0aWxpdHkuXG4gKlxuICogQHR5cGUge1JlZ0V4cH1cbiAqL1xudmFyIFBBVEhfUkVHRVhQID0gbmV3IFJlZ0V4cChbXG4gIC8vIE1hdGNoIGVzY2FwZWQgY2hhcmFjdGVycyB0aGF0IHdvdWxkIG90aGVyd2lzZSBhcHBlYXIgaW4gZnV0dXJlIG1hdGNoZXMuXG4gIC8vIFRoaXMgYWxsb3dzIHRoZSB1c2VyIHRvIGVzY2FwZSBzcGVjaWFsIGNoYXJhY3RlcnMgdGhhdCB3b24ndCB0cmFuc2Zvcm0uXG4gICcoXFxcXFxcXFwuKScsXG4gIC8vIE1hdGNoIEV4cHJlc3Mtc3R5bGUgcGFyYW1ldGVycyBhbmQgdW4tbmFtZWQgcGFyYW1ldGVycyB3aXRoIGEgcHJlZml4XG4gIC8vIGFuZCBvcHRpb25hbCBzdWZmaXhlcy4gTWF0Y2hlcyBhcHBlYXIgYXM6XG4gIC8vXG4gIC8vIFwiLzp0ZXN0KFxcXFxkKyk/XCIgPT4gW1wiL1wiLCBcInRlc3RcIiwgXCJcXGQrXCIsIHVuZGVmaW5lZCwgXCI/XCIsIHVuZGVmaW5lZF1cbiAgLy8gXCIvcm91dGUoXFxcXGQrKVwiICA9PiBbdW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgXCJcXGQrXCIsIHVuZGVmaW5lZCwgdW5kZWZpbmVkXVxuICAvLyBcIi8qXCIgICAgICAgICAgICA9PiBbXCIvXCIsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgXCIqXCJdXG4gICcoW1xcXFwvLl0pPyg/Oig/OlxcXFw6KFxcXFx3KykoPzpcXFxcKCgoPzpcXFxcXFxcXC58W15cXFxcXFxcXCgpXSkrKVxcXFwpKT98XFxcXCgoKD86XFxcXFxcXFwufFteXFxcXFxcXFwoKV0pKylcXFxcKSkoWysqP10pP3woXFxcXCopKSdcbl0uam9pbignfCcpLCAnZycpXG5cbi8qKlxuICogUGFyc2UgYSBzdHJpbmcgZm9yIHRoZSByYXcgdG9rZW5zLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gIHN0clxuICogQHBhcmFtICB7T2JqZWN0PX0gb3B0aW9uc1xuICogQHJldHVybiB7IUFycmF5fVxuICovXG5mdW5jdGlvbiBwYXJzZSAoc3RyLCBvcHRpb25zKSB7XG4gIHZhciB0b2tlbnMgPSBbXVxuICB2YXIga2V5ID0gMFxuICB2YXIgaW5kZXggPSAwXG4gIHZhciBwYXRoID0gJydcbiAgdmFyIGRlZmF1bHREZWxpbWl0ZXIgPSBvcHRpb25zICYmIG9wdGlvbnMuZGVsaW1pdGVyIHx8ICcvJ1xuICB2YXIgcmVzXG5cbiAgd2hpbGUgKChyZXMgPSBQQVRIX1JFR0VYUC5leGVjKHN0cikpICE9IG51bGwpIHtcbiAgICB2YXIgbSA9IHJlc1swXVxuICAgIHZhciBlc2NhcGVkID0gcmVzWzFdXG4gICAgdmFyIG9mZnNldCA9IHJlcy5pbmRleFxuICAgIHBhdGggKz0gc3RyLnNsaWNlKGluZGV4LCBvZmZzZXQpXG4gICAgaW5kZXggPSBvZmZzZXQgKyBtLmxlbmd0aFxuXG4gICAgLy8gSWdub3JlIGFscmVhZHkgZXNjYXBlZCBzZXF1ZW5jZXMuXG4gICAgaWYgKGVzY2FwZWQpIHtcbiAgICAgIHBhdGggKz0gZXNjYXBlZFsxXVxuICAgICAgY29udGludWVcbiAgICB9XG5cbiAgICB2YXIgbmV4dCA9IHN0cltpbmRleF1cbiAgICB2YXIgcHJlZml4ID0gcmVzWzJdXG4gICAgdmFyIG5hbWUgPSByZXNbM11cbiAgICB2YXIgY2FwdHVyZSA9IHJlc1s0XVxuICAgIHZhciBncm91cCA9IHJlc1s1XVxuICAgIHZhciBtb2RpZmllciA9IHJlc1s2XVxuICAgIHZhciBhc3RlcmlzayA9IHJlc1s3XVxuXG4gICAgLy8gUHVzaCB0aGUgY3VycmVudCBwYXRoIG9udG8gdGhlIHRva2Vucy5cbiAgICBpZiAocGF0aCkge1xuICAgICAgdG9rZW5zLnB1c2gocGF0aClcbiAgICAgIHBhdGggPSAnJ1xuICAgIH1cblxuICAgIHZhciBwYXJ0aWFsID0gcHJlZml4ICE9IG51bGwgJiYgbmV4dCAhPSBudWxsICYmIG5leHQgIT09IHByZWZpeFxuICAgIHZhciByZXBlYXQgPSBtb2RpZmllciA9PT0gJysnIHx8IG1vZGlmaWVyID09PSAnKidcbiAgICB2YXIgb3B0aW9uYWwgPSBtb2RpZmllciA9PT0gJz8nIHx8IG1vZGlmaWVyID09PSAnKidcbiAgICB2YXIgZGVsaW1pdGVyID0gcmVzWzJdIHx8IGRlZmF1bHREZWxpbWl0ZXJcbiAgICB2YXIgcGF0dGVybiA9IGNhcHR1cmUgfHwgZ3JvdXBcblxuICAgIHRva2Vucy5wdXNoKHtcbiAgICAgIG5hbWU6IG5hbWUgfHwga2V5KyssXG4gICAgICBwcmVmaXg6IHByZWZpeCB8fCAnJyxcbiAgICAgIGRlbGltaXRlcjogZGVsaW1pdGVyLFxuICAgICAgb3B0aW9uYWw6IG9wdGlvbmFsLFxuICAgICAgcmVwZWF0OiByZXBlYXQsXG4gICAgICBwYXJ0aWFsOiBwYXJ0aWFsLFxuICAgICAgYXN0ZXJpc2s6ICEhYXN0ZXJpc2ssXG4gICAgICBwYXR0ZXJuOiBwYXR0ZXJuID8gZXNjYXBlR3JvdXAocGF0dGVybikgOiAoYXN0ZXJpc2sgPyAnLionIDogJ1teJyArIGVzY2FwZVN0cmluZyhkZWxpbWl0ZXIpICsgJ10rPycpXG4gICAgfSlcbiAgfVxuXG4gIC8vIE1hdGNoIGFueSBjaGFyYWN0ZXJzIHN0aWxsIHJlbWFpbmluZy5cbiAgaWYgKGluZGV4IDwgc3RyLmxlbmd0aCkge1xuICAgIHBhdGggKz0gc3RyLnN1YnN0cihpbmRleClcbiAgfVxuXG4gIC8vIElmIHRoZSBwYXRoIGV4aXN0cywgcHVzaCBpdCBvbnRvIHRoZSBlbmQuXG4gIGlmIChwYXRoKSB7XG4gICAgdG9rZW5zLnB1c2gocGF0aClcbiAgfVxuXG4gIHJldHVybiB0b2tlbnNcbn1cblxuLyoqXG4gKiBDb21waWxlIGEgc3RyaW5nIHRvIGEgdGVtcGxhdGUgZnVuY3Rpb24gZm9yIHRoZSBwYXRoLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gICAgICAgICAgICAgc3RyXG4gKiBAcGFyYW0gIHtPYmplY3Q9fSAgICAgICAgICAgIG9wdGlvbnNcbiAqIEByZXR1cm4geyFmdW5jdGlvbihPYmplY3Q9LCBPYmplY3Q9KX1cbiAqL1xuZnVuY3Rpb24gY29tcGlsZSAoc3RyLCBvcHRpb25zKSB7XG4gIHJldHVybiB0b2tlbnNUb0Z1bmN0aW9uKHBhcnNlKHN0ciwgb3B0aW9ucykpXG59XG5cbi8qKlxuICogUHJldHRpZXIgZW5jb2Rpbmcgb2YgVVJJIHBhdGggc2VnbWVudHMuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfVxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBlbmNvZGVVUklDb21wb25lbnRQcmV0dHkgKHN0cikge1xuICByZXR1cm4gZW5jb2RlVVJJKHN0cikucmVwbGFjZSgvW1xcLz8jXS9nLCBmdW5jdGlvbiAoYykge1xuICAgIHJldHVybiAnJScgKyBjLmNoYXJDb2RlQXQoMCkudG9TdHJpbmcoMTYpLnRvVXBwZXJDYXNlKClcbiAgfSlcbn1cblxuLyoqXG4gKiBFbmNvZGUgdGhlIGFzdGVyaXNrIHBhcmFtZXRlci4gU2ltaWxhciB0byBgcHJldHR5YCwgYnV0IGFsbG93cyBzbGFzaGVzLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ31cbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gZW5jb2RlQXN0ZXJpc2sgKHN0cikge1xuICByZXR1cm4gZW5jb2RlVVJJKHN0cikucmVwbGFjZSgvWz8jXS9nLCBmdW5jdGlvbiAoYykge1xuICAgIHJldHVybiAnJScgKyBjLmNoYXJDb2RlQXQoMCkudG9TdHJpbmcoMTYpLnRvVXBwZXJDYXNlKClcbiAgfSlcbn1cblxuLyoqXG4gKiBFeHBvc2UgYSBtZXRob2QgZm9yIHRyYW5zZm9ybWluZyB0b2tlbnMgaW50byB0aGUgcGF0aCBmdW5jdGlvbi5cbiAqL1xuZnVuY3Rpb24gdG9rZW5zVG9GdW5jdGlvbiAodG9rZW5zKSB7XG4gIC8vIENvbXBpbGUgYWxsIHRoZSB0b2tlbnMgaW50byByZWdleHBzLlxuICB2YXIgbWF0Y2hlcyA9IG5ldyBBcnJheSh0b2tlbnMubGVuZ3RoKVxuXG4gIC8vIENvbXBpbGUgYWxsIHRoZSBwYXR0ZXJucyBiZWZvcmUgY29tcGlsYXRpb24uXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgdG9rZW5zLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHR5cGVvZiB0b2tlbnNbaV0gPT09ICdvYmplY3QnKSB7XG4gICAgICBtYXRjaGVzW2ldID0gbmV3IFJlZ0V4cCgnXig/OicgKyB0b2tlbnNbaV0ucGF0dGVybiArICcpJCcpXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIChvYmosIG9wdHMpIHtcbiAgICB2YXIgcGF0aCA9ICcnXG4gICAgdmFyIGRhdGEgPSBvYmogfHwge31cbiAgICB2YXIgb3B0aW9ucyA9IG9wdHMgfHwge31cbiAgICB2YXIgZW5jb2RlID0gb3B0aW9ucy5wcmV0dHkgPyBlbmNvZGVVUklDb21wb25lbnRQcmV0dHkgOiBlbmNvZGVVUklDb21wb25lbnRcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdG9rZW5zLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgdG9rZW4gPSB0b2tlbnNbaV1cblxuICAgICAgaWYgKHR5cGVvZiB0b2tlbiA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgcGF0aCArPSB0b2tlblxuXG4gICAgICAgIGNvbnRpbnVlXG4gICAgICB9XG5cbiAgICAgIHZhciB2YWx1ZSA9IGRhdGFbdG9rZW4ubmFtZV1cbiAgICAgIHZhciBzZWdtZW50XG5cbiAgICAgIGlmICh2YWx1ZSA9PSBudWxsKSB7XG4gICAgICAgIGlmICh0b2tlbi5vcHRpb25hbCkge1xuICAgICAgICAgIC8vIFByZXBlbmQgcGFydGlhbCBzZWdtZW50IHByZWZpeGVzLlxuICAgICAgICAgIGlmICh0b2tlbi5wYXJ0aWFsKSB7XG4gICAgICAgICAgICBwYXRoICs9IHRva2VuLnByZWZpeFxuICAgICAgICAgIH1cblxuICAgICAgICAgIGNvbnRpbnVlXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBiZSBkZWZpbmVkJylcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoaXNhcnJheSh2YWx1ZSkpIHtcbiAgICAgICAgaWYgKCF0b2tlbi5yZXBlYXQpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBcIicgKyB0b2tlbi5uYW1lICsgJ1wiIHRvIG5vdCByZXBlYXQsIGJ1dCByZWNlaXZlZCBgJyArIEpTT04uc3RyaW5naWZ5KHZhbHVlKSArICdgJylcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh2YWx1ZS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICBpZiAodG9rZW4ub3B0aW9uYWwpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlXG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gbm90IGJlIGVtcHR5JylcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IHZhbHVlLmxlbmd0aDsgaisrKSB7XG4gICAgICAgICAgc2VnbWVudCA9IGVuY29kZSh2YWx1ZVtqXSlcblxuICAgICAgICAgIGlmICghbWF0Y2hlc1tpXS50ZXN0KHNlZ21lbnQpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBhbGwgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBtYXRjaCBcIicgKyB0b2tlbi5wYXR0ZXJuICsgJ1wiLCBidXQgcmVjZWl2ZWQgYCcgKyBKU09OLnN0cmluZ2lmeShzZWdtZW50KSArICdgJylcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBwYXRoICs9IChqID09PSAwID8gdG9rZW4ucHJlZml4IDogdG9rZW4uZGVsaW1pdGVyKSArIHNlZ21lbnRcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnRpbnVlXG4gICAgICB9XG5cbiAgICAgIHNlZ21lbnQgPSB0b2tlbi5hc3RlcmlzayA/IGVuY29kZUFzdGVyaXNrKHZhbHVlKSA6IGVuY29kZSh2YWx1ZSlcblxuICAgICAgaWYgKCFtYXRjaGVzW2ldLnRlc3Qoc2VnbWVudCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBtYXRjaCBcIicgKyB0b2tlbi5wYXR0ZXJuICsgJ1wiLCBidXQgcmVjZWl2ZWQgXCInICsgc2VnbWVudCArICdcIicpXG4gICAgICB9XG5cbiAgICAgIHBhdGggKz0gdG9rZW4ucHJlZml4ICsgc2VnbWVudFxuICAgIH1cblxuICAgIHJldHVybiBwYXRoXG4gIH1cbn1cblxuLyoqXG4gKiBFc2NhcGUgYSByZWd1bGFyIGV4cHJlc3Npb24gc3RyaW5nLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gc3RyXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGVzY2FwZVN0cmluZyAoc3RyKSB7XG4gIHJldHVybiBzdHIucmVwbGFjZSgvKFsuKyo/PV4hOiR7fSgpW1xcXXxcXC9cXFxcXSkvZywgJ1xcXFwkMScpXG59XG5cbi8qKlxuICogRXNjYXBlIHRoZSBjYXB0dXJpbmcgZ3JvdXAgYnkgZXNjYXBpbmcgc3BlY2lhbCBjaGFyYWN0ZXJzIGFuZCBtZWFuaW5nLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gZ3JvdXBcbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gZXNjYXBlR3JvdXAgKGdyb3VwKSB7XG4gIHJldHVybiBncm91cC5yZXBsYWNlKC8oWz0hOiRcXC8oKV0pL2csICdcXFxcJDEnKVxufVxuXG4vKipcbiAqIEF0dGFjaCB0aGUga2V5cyBhcyBhIHByb3BlcnR5IG9mIHRoZSByZWdleHAuXG4gKlxuICogQHBhcmFtICB7IVJlZ0V4cH0gcmVcbiAqIEBwYXJhbSAge0FycmF5fSAgIGtleXNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIGF0dGFjaEtleXMgKHJlLCBrZXlzKSB7XG4gIHJlLmtleXMgPSBrZXlzXG4gIHJldHVybiByZVxufVxuXG4vKipcbiAqIEdldCB0aGUgZmxhZ3MgZm9yIGEgcmVnZXhwIGZyb20gdGhlIG9wdGlvbnMuXG4gKlxuICogQHBhcmFtICB7T2JqZWN0fSBvcHRpb25zXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGZsYWdzIChvcHRpb25zKSB7XG4gIHJldHVybiBvcHRpb25zLnNlbnNpdGl2ZSA/ICcnIDogJ2knXG59XG5cbi8qKlxuICogUHVsbCBvdXQga2V5cyBmcm9tIGEgcmVnZXhwLlxuICpcbiAqIEBwYXJhbSAgeyFSZWdFeHB9IHBhdGhcbiAqIEBwYXJhbSAgeyFBcnJheX0gIGtleXNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIHJlZ2V4cFRvUmVnZXhwIChwYXRoLCBrZXlzKSB7XG4gIC8vIFVzZSBhIG5lZ2F0aXZlIGxvb2thaGVhZCB0byBtYXRjaCBvbmx5IGNhcHR1cmluZyBncm91cHMuXG4gIHZhciBncm91cHMgPSBwYXRoLnNvdXJjZS5tYXRjaCgvXFwoKD8hXFw/KS9nKVxuXG4gIGlmIChncm91cHMpIHtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGdyb3Vwcy5sZW5ndGg7IGkrKykge1xuICAgICAga2V5cy5wdXNoKHtcbiAgICAgICAgbmFtZTogaSxcbiAgICAgICAgcHJlZml4OiBudWxsLFxuICAgICAgICBkZWxpbWl0ZXI6IG51bGwsXG4gICAgICAgIG9wdGlvbmFsOiBmYWxzZSxcbiAgICAgICAgcmVwZWF0OiBmYWxzZSxcbiAgICAgICAgcGFydGlhbDogZmFsc2UsXG4gICAgICAgIGFzdGVyaXNrOiBmYWxzZSxcbiAgICAgICAgcGF0dGVybjogbnVsbFxuICAgICAgfSlcbiAgICB9XG4gIH1cblxuICByZXR1cm4gYXR0YWNoS2V5cyhwYXRoLCBrZXlzKVxufVxuXG4vKipcbiAqIFRyYW5zZm9ybSBhbiBhcnJheSBpbnRvIGEgcmVnZXhwLlxuICpcbiAqIEBwYXJhbSAgeyFBcnJheX0gIHBhdGhcbiAqIEBwYXJhbSAge0FycmF5fSAgIGtleXNcbiAqIEBwYXJhbSAgeyFPYmplY3R9IG9wdGlvbnNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIGFycmF5VG9SZWdleHAgKHBhdGgsIGtleXMsIG9wdGlvbnMpIHtcbiAgdmFyIHBhcnRzID0gW11cblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHBhdGgubGVuZ3RoOyBpKyspIHtcbiAgICBwYXJ0cy5wdXNoKHBhdGhUb1JlZ2V4cChwYXRoW2ldLCBrZXlzLCBvcHRpb25zKS5zb3VyY2UpXG4gIH1cblxuICB2YXIgcmVnZXhwID0gbmV3IFJlZ0V4cCgnKD86JyArIHBhcnRzLmpvaW4oJ3wnKSArICcpJywgZmxhZ3Mob3B0aW9ucykpXG5cbiAgcmV0dXJuIGF0dGFjaEtleXMocmVnZXhwLCBrZXlzKVxufVxuXG4vKipcbiAqIENyZWF0ZSBhIHBhdGggcmVnZXhwIGZyb20gc3RyaW5nIGlucHV0LlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gIHBhdGhcbiAqIEBwYXJhbSAgeyFBcnJheX0gIGtleXNcbiAqIEBwYXJhbSAgeyFPYmplY3R9IG9wdGlvbnNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIHN0cmluZ1RvUmVnZXhwIChwYXRoLCBrZXlzLCBvcHRpb25zKSB7XG4gIHJldHVybiB0b2tlbnNUb1JlZ0V4cChwYXJzZShwYXRoLCBvcHRpb25zKSwga2V5cywgb3B0aW9ucylcbn1cblxuLyoqXG4gKiBFeHBvc2UgYSBmdW5jdGlvbiBmb3IgdGFraW5nIHRva2VucyBhbmQgcmV0dXJuaW5nIGEgUmVnRXhwLlxuICpcbiAqIEBwYXJhbSAgeyFBcnJheX0gICAgICAgICAgdG9rZW5zXG4gKiBAcGFyYW0gIHsoQXJyYXl8T2JqZWN0KT19IGtleXNcbiAqIEBwYXJhbSAge09iamVjdD19ICAgICAgICAgb3B0aW9uc1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gdG9rZW5zVG9SZWdFeHAgKHRva2Vucywga2V5cywgb3B0aW9ucykge1xuICBpZiAoIWlzYXJyYXkoa2V5cykpIHtcbiAgICBvcHRpb25zID0gLyoqIEB0eXBlIHshT2JqZWN0fSAqLyAoa2V5cyB8fCBvcHRpb25zKVxuICAgIGtleXMgPSBbXVxuICB9XG5cbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge31cblxuICB2YXIgc3RyaWN0ID0gb3B0aW9ucy5zdHJpY3RcbiAgdmFyIGVuZCA9IG9wdGlvbnMuZW5kICE9PSBmYWxzZVxuICB2YXIgcm91dGUgPSAnJ1xuXG4gIC8vIEl0ZXJhdGUgb3ZlciB0aGUgdG9rZW5zIGFuZCBjcmVhdGUgb3VyIHJlZ2V4cCBzdHJpbmcuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgdG9rZW5zLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIHRva2VuID0gdG9rZW5zW2ldXG5cbiAgICBpZiAodHlwZW9mIHRva2VuID09PSAnc3RyaW5nJykge1xuICAgICAgcm91dGUgKz0gZXNjYXBlU3RyaW5nKHRva2VuKVxuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgcHJlZml4ID0gZXNjYXBlU3RyaW5nKHRva2VuLnByZWZpeClcbiAgICAgIHZhciBjYXB0dXJlID0gJyg/OicgKyB0b2tlbi5wYXR0ZXJuICsgJyknXG5cbiAgICAgIGtleXMucHVzaCh0b2tlbilcblxuICAgICAgaWYgKHRva2VuLnJlcGVhdCkge1xuICAgICAgICBjYXB0dXJlICs9ICcoPzonICsgcHJlZml4ICsgY2FwdHVyZSArICcpKidcbiAgICAgIH1cblxuICAgICAgaWYgKHRva2VuLm9wdGlvbmFsKSB7XG4gICAgICAgIGlmICghdG9rZW4ucGFydGlhbCkge1xuICAgICAgICAgIGNhcHR1cmUgPSAnKD86JyArIHByZWZpeCArICcoJyArIGNhcHR1cmUgKyAnKSk/J1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNhcHR1cmUgPSBwcmVmaXggKyAnKCcgKyBjYXB0dXJlICsgJyk/J1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjYXB0dXJlID0gcHJlZml4ICsgJygnICsgY2FwdHVyZSArICcpJ1xuICAgICAgfVxuXG4gICAgICByb3V0ZSArPSBjYXB0dXJlXG4gICAgfVxuICB9XG5cbiAgdmFyIGRlbGltaXRlciA9IGVzY2FwZVN0cmluZyhvcHRpb25zLmRlbGltaXRlciB8fCAnLycpXG4gIHZhciBlbmRzV2l0aERlbGltaXRlciA9IHJvdXRlLnNsaWNlKC1kZWxpbWl0ZXIubGVuZ3RoKSA9PT0gZGVsaW1pdGVyXG5cbiAgLy8gSW4gbm9uLXN0cmljdCBtb2RlIHdlIGFsbG93IGEgc2xhc2ggYXQgdGhlIGVuZCBvZiBtYXRjaC4gSWYgdGhlIHBhdGggdG9cbiAgLy8gbWF0Y2ggYWxyZWFkeSBlbmRzIHdpdGggYSBzbGFzaCwgd2UgcmVtb3ZlIGl0IGZvciBjb25zaXN0ZW5jeS4gVGhlIHNsYXNoXG4gIC8vIGlzIHZhbGlkIGF0IHRoZSBlbmQgb2YgYSBwYXRoIG1hdGNoLCBub3QgaW4gdGhlIG1pZGRsZS4gVGhpcyBpcyBpbXBvcnRhbnRcbiAgLy8gaW4gbm9uLWVuZGluZyBtb2RlLCB3aGVyZSBcIi90ZXN0L1wiIHNob3VsZG4ndCBtYXRjaCBcIi90ZXN0Ly9yb3V0ZVwiLlxuICBpZiAoIXN0cmljdCkge1xuICAgIHJvdXRlID0gKGVuZHNXaXRoRGVsaW1pdGVyID8gcm91dGUuc2xpY2UoMCwgLWRlbGltaXRlci5sZW5ndGgpIDogcm91dGUpICsgJyg/OicgKyBkZWxpbWl0ZXIgKyAnKD89JCkpPydcbiAgfVxuXG4gIGlmIChlbmQpIHtcbiAgICByb3V0ZSArPSAnJCdcbiAgfSBlbHNlIHtcbiAgICAvLyBJbiBub24tZW5kaW5nIG1vZGUsIHdlIG5lZWQgdGhlIGNhcHR1cmluZyBncm91cHMgdG8gbWF0Y2ggYXMgbXVjaCBhc1xuICAgIC8vIHBvc3NpYmxlIGJ5IHVzaW5nIGEgcG9zaXRpdmUgbG9va2FoZWFkIHRvIHRoZSBlbmQgb3IgbmV4dCBwYXRoIHNlZ21lbnQuXG4gICAgcm91dGUgKz0gc3RyaWN0ICYmIGVuZHNXaXRoRGVsaW1pdGVyID8gJycgOiAnKD89JyArIGRlbGltaXRlciArICd8JCknXG4gIH1cblxuICByZXR1cm4gYXR0YWNoS2V5cyhuZXcgUmVnRXhwKCdeJyArIHJvdXRlLCBmbGFncyhvcHRpb25zKSksIGtleXMpXG59XG5cbi8qKlxuICogTm9ybWFsaXplIHRoZSBnaXZlbiBwYXRoIHN0cmluZywgcmV0dXJuaW5nIGEgcmVndWxhciBleHByZXNzaW9uLlxuICpcbiAqIEFuIGVtcHR5IGFycmF5IGNhbiBiZSBwYXNzZWQgaW4gZm9yIHRoZSBrZXlzLCB3aGljaCB3aWxsIGhvbGQgdGhlXG4gKiBwbGFjZWhvbGRlciBrZXkgZGVzY3JpcHRpb25zLiBGb3IgZXhhbXBsZSwgdXNpbmcgYC91c2VyLzppZGAsIGBrZXlzYCB3aWxsXG4gKiBjb250YWluIGBbeyBuYW1lOiAnaWQnLCBkZWxpbWl0ZXI6ICcvJywgb3B0aW9uYWw6IGZhbHNlLCByZXBlYXQ6IGZhbHNlIH1dYC5cbiAqXG4gKiBAcGFyYW0gIHsoc3RyaW5nfFJlZ0V4cHxBcnJheSl9IHBhdGhcbiAqIEBwYXJhbSAgeyhBcnJheXxPYmplY3QpPX0gICAgICAga2V5c1xuICogQHBhcmFtICB7T2JqZWN0PX0gICAgICAgICAgICAgICBvcHRpb25zXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiBwYXRoVG9SZWdleHAgKHBhdGgsIGtleXMsIG9wdGlvbnMpIHtcbiAgaWYgKCFpc2FycmF5KGtleXMpKSB7XG4gICAgb3B0aW9ucyA9IC8qKiBAdHlwZSB7IU9iamVjdH0gKi8gKGtleXMgfHwgb3B0aW9ucylcbiAgICBrZXlzID0gW11cbiAgfVxuXG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9XG5cbiAgaWYgKHBhdGggaW5zdGFuY2VvZiBSZWdFeHApIHtcbiAgICByZXR1cm4gcmVnZXhwVG9SZWdleHAocGF0aCwgLyoqIEB0eXBlIHshQXJyYXl9ICovIChrZXlzKSlcbiAgfVxuXG4gIGlmIChpc2FycmF5KHBhdGgpKSB7XG4gICAgcmV0dXJuIGFycmF5VG9SZWdleHAoLyoqIEB0eXBlIHshQXJyYXl9ICovIChwYXRoKSwgLyoqIEB0eXBlIHshQXJyYXl9ICovIChrZXlzKSwgb3B0aW9ucylcbiAgfVxuXG4gIHJldHVybiBzdHJpbmdUb1JlZ2V4cCgvKiogQHR5cGUge3N0cmluZ30gKi8gKHBhdGgpLCAvKiogQHR5cGUgeyFBcnJheX0gKi8gKGtleXMpLCBvcHRpb25zKVxufVxuIiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKC4uLmFyZ3MpIHtcbiAgcmV0dXJuIHJlZ2lzdGVyKC4uLmFyZ3MpO1xufTtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcblxuY29uc3Qgbm9kZSA9IHJlcXVpcmUoXCIuL25vZGVcIik7XG5cbmNvbnN0IHJlZ2lzdGVyID0gbm9kZS5kZWZhdWx0O1xuT2JqZWN0LmFzc2lnbihleHBvcnRzLCBub2RlKTsiLCJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHJlZ2lzdGVyO1xuZXhwb3J0cy5yZXZlcnQgPSByZXZlcnQ7XG5cbmZ1bmN0aW9uIHJlZ2lzdGVyKCkge31cblxuZnVuY3Rpb24gcmV2ZXJ0KCkge30iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjcuMFxuICogcmVhY3QucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7dmFyIGs9cmVxdWlyZShcIm9iamVjdC1hc3NpZ25cIiksbj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yLHA9bj9TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMyxxPW4/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixyPW4/U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpOjYwMTA3LHQ9bj9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgsdT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCx2PW4/U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpOjYwMTA5LHc9bj9TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCx4PW4/U3ltYm9sLmZvcihcInJlYWN0LmNvbmN1cnJlbnRfbW9kZVwiKTo2MDExMSx5PW4/U3ltYm9sLmZvcihcInJlYWN0LmZvcndhcmRfcmVmXCIpOjYwMTEyLHo9bj9TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VcIik6NjAxMTMsQT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5tZW1vXCIpOlxuNjAxMTUsQj1uP1N5bWJvbC5mb3IoXCJyZWFjdC5sYXp5XCIpOjYwMTE2LEM9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yO2Z1bmN0aW9uIGFhKGEsYixlLGMsZCxnLGgsZil7aWYoIWEpe2E9dm9pZCAwO2lmKHZvaWQgMD09PWIpYT1FcnJvcihcIk1pbmlmaWVkIGV4Y2VwdGlvbiBvY2N1cnJlZDsgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciB0aGUgZnVsbCBlcnJvciBtZXNzYWdlIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuXCIpO2Vsc2V7dmFyIGw9W2UsYyxkLGcsaCxmXSxtPTA7YT1FcnJvcihiLnJlcGxhY2UoLyVzL2csZnVuY3Rpb24oKXtyZXR1cm4gbFttKytdfSkpO2EubmFtZT1cIkludmFyaWFudCBWaW9sYXRpb25cIn1hLmZyYW1lc1RvUG9wPTE7dGhyb3cgYTt9fVxuZnVuY3Rpb24gRChhKXtmb3IodmFyIGI9YXJndW1lbnRzLmxlbmd0aC0xLGU9XCJodHRwczovL3JlYWN0anMub3JnL2RvY3MvZXJyb3ItZGVjb2Rlci5odG1sP2ludmFyaWFudD1cIithLGM9MDtjPGI7YysrKWUrPVwiJmFyZ3NbXT1cIitlbmNvZGVVUklDb21wb25lbnQoYXJndW1lbnRzW2MrMV0pO2FhKCExLFwiTWluaWZpZWQgUmVhY3QgZXJyb3IgI1wiK2ErXCI7IHZpc2l0ICVzIGZvciB0aGUgZnVsbCBtZXNzYWdlIG9yIHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgZnVsbCBlcnJvcnMgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy4gXCIsZSl9dmFyIEU9e2lzTW91bnRlZDpmdW5jdGlvbigpe3JldHVybiExfSxlbnF1ZXVlRm9yY2VVcGRhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbigpe319LEY9e307XG5mdW5jdGlvbiBHKGEsYixlKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPUY7dGhpcy51cGRhdGVyPWV8fEV9Ry5wcm90b3R5cGUuaXNSZWFjdENvbXBvbmVudD17fTtHLnByb3RvdHlwZS5zZXRTdGF0ZT1mdW5jdGlvbihhLGIpe1wib2JqZWN0XCIhPT10eXBlb2YgYSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJm51bGwhPWE/RChcIjg1XCIpOnZvaWQgMDt0aGlzLnVwZGF0ZXIuZW5xdWV1ZVNldFN0YXRlKHRoaXMsYSxiLFwic2V0U3RhdGVcIil9O0cucHJvdG90eXBlLmZvcmNlVXBkYXRlPWZ1bmN0aW9uKGEpe3RoaXMudXBkYXRlci5lbnF1ZXVlRm9yY2VVcGRhdGUodGhpcyxhLFwiZm9yY2VVcGRhdGVcIil9O2Z1bmN0aW9uIEgoKXt9SC5wcm90b3R5cGU9Ry5wcm90b3R5cGU7ZnVuY3Rpb24gSShhLGIsZSl7dGhpcy5wcm9wcz1hO3RoaXMuY29udGV4dD1iO3RoaXMucmVmcz1GO3RoaXMudXBkYXRlcj1lfHxFfXZhciBKPUkucHJvdG90eXBlPW5ldyBIO1xuSi5jb25zdHJ1Y3Rvcj1JO2soSixHLnByb3RvdHlwZSk7Si5pc1B1cmVSZWFjdENvbXBvbmVudD0hMDt2YXIgSz17Y3VycmVudDpudWxsLGN1cnJlbnREaXNwYXRjaGVyOm51bGx9LEw9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxNPXtrZXk6ITAscmVmOiEwLF9fc2VsZjohMCxfX3NvdXJjZTohMH07XG5mdW5jdGlvbiBOKGEsYixlKXt2YXIgYz12b2lkIDAsZD17fSxnPW51bGwsaD1udWxsO2lmKG51bGwhPWIpZm9yKGMgaW4gdm9pZCAwIT09Yi5yZWYmJihoPWIucmVmKSx2b2lkIDAhPT1iLmtleSYmKGc9XCJcIitiLmtleSksYilMLmNhbGwoYixjKSYmIU0uaGFzT3duUHJvcGVydHkoYykmJihkW2NdPWJbY10pO3ZhciBmPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09ZilkLmNoaWxkcmVuPWU7ZWxzZSBpZigxPGYpe2Zvcih2YXIgbD1BcnJheShmKSxtPTA7bTxmO20rKylsW21dPWFyZ3VtZW50c1ttKzJdO2QuY2hpbGRyZW49bH1pZihhJiZhLmRlZmF1bHRQcm9wcylmb3IoYyBpbiBmPWEuZGVmYXVsdFByb3BzLGYpdm9pZCAwPT09ZFtjXSYmKGRbY109ZltjXSk7cmV0dXJueyQkdHlwZW9mOnAsdHlwZTphLGtleTpnLHJlZjpoLHByb3BzOmQsX293bmVyOksuY3VycmVudH19XG5mdW5jdGlvbiBiYShhLGIpe3JldHVybnskJHR5cGVvZjpwLHR5cGU6YS50eXBlLGtleTpiLHJlZjphLnJlZixwcm9wczphLnByb3BzLF9vd25lcjphLl9vd25lcn19ZnVuY3Rpb24gTyhhKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZhLiQkdHlwZW9mPT09cH1mdW5jdGlvbiBlc2NhcGUoYSl7dmFyIGI9e1wiPVwiOlwiPTBcIixcIjpcIjpcIj0yXCJ9O3JldHVyblwiJFwiKyhcIlwiK2EpLnJlcGxhY2UoL1s9Ol0vZyxmdW5jdGlvbihhKXtyZXR1cm4gYlthXX0pfXZhciBQPS9cXC8rL2csUT1bXTtmdW5jdGlvbiBSKGEsYixlLGMpe2lmKFEubGVuZ3RoKXt2YXIgZD1RLnBvcCgpO2QucmVzdWx0PWE7ZC5rZXlQcmVmaXg9YjtkLmZ1bmM9ZTtkLmNvbnRleHQ9YztkLmNvdW50PTA7cmV0dXJuIGR9cmV0dXJue3Jlc3VsdDphLGtleVByZWZpeDpiLGZ1bmM6ZSxjb250ZXh0OmMsY291bnQ6MH19XG5mdW5jdGlvbiBTKGEpe2EucmVzdWx0PW51bGw7YS5rZXlQcmVmaXg9bnVsbDthLmZ1bmM9bnVsbDthLmNvbnRleHQ9bnVsbDthLmNvdW50PTA7MTA+US5sZW5ndGgmJlEucHVzaChhKX1cbmZ1bmN0aW9uIFQoYSxiLGUsYyl7dmFyIGQ9dHlwZW9mIGE7aWYoXCJ1bmRlZmluZWRcIj09PWR8fFwiYm9vbGVhblwiPT09ZClhPW51bGw7dmFyIGc9ITE7aWYobnVsbD09PWEpZz0hMDtlbHNlIHN3aXRjaChkKXtjYXNlIFwic3RyaW5nXCI6Y2FzZSBcIm51bWJlclwiOmc9ITA7YnJlYWs7Y2FzZSBcIm9iamVjdFwiOnN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIHA6Y2FzZSBxOmc9ITB9fWlmKGcpcmV0dXJuIGUoYyxhLFwiXCI9PT1iP1wiLlwiK1UoYSwwKTpiKSwxO2c9MDtiPVwiXCI9PT1iP1wiLlwiOmIrXCI6XCI7aWYoQXJyYXkuaXNBcnJheShhKSlmb3IodmFyIGg9MDtoPGEubGVuZ3RoO2grKyl7ZD1hW2hdO3ZhciBmPWIrVShkLGgpO2crPVQoZCxmLGUsYyl9ZWxzZSBpZihudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBhP2Y9bnVsbDooZj1DJiZhW0NdfHxhW1wiQEBpdGVyYXRvclwiXSxmPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBmP2Y6bnVsbCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGYpZm9yKGE9Zi5jYWxsKGEpLGg9XG4wOyEoZD1hLm5leHQoKSkuZG9uZTspZD1kLnZhbHVlLGY9YitVKGQsaCsrKSxnKz1UKGQsZixlLGMpO2Vsc2VcIm9iamVjdFwiPT09ZCYmKGU9XCJcIithLEQoXCIzMVwiLFwiW29iamVjdCBPYmplY3RdXCI9PT1lP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYSkuam9pbihcIiwgXCIpK1wifVwiOmUsXCJcIikpO3JldHVybiBnfWZ1bmN0aW9uIFYoYSxiLGUpe3JldHVybiBudWxsPT1hPzA6VChhLFwiXCIsYixlKX1mdW5jdGlvbiBVKGEsYil7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmbnVsbCE9YS5rZXk/ZXNjYXBlKGEua2V5KTpiLnRvU3RyaW5nKDM2KX1mdW5jdGlvbiBjYShhLGIpe2EuZnVuYy5jYWxsKGEuY29udGV4dCxiLGEuY291bnQrKyl9XG5mdW5jdGlvbiBkYShhLGIsZSl7dmFyIGM9YS5yZXN1bHQsZD1hLmtleVByZWZpeDthPWEuZnVuYy5jYWxsKGEuY29udGV4dCxiLGEuY291bnQrKyk7QXJyYXkuaXNBcnJheShhKT9XKGEsYyxlLGZ1bmN0aW9uKGEpe3JldHVybiBhfSk6bnVsbCE9YSYmKE8oYSkmJihhPWJhKGEsZCsoIWEua2V5fHxiJiZiLmtleT09PWEua2V5P1wiXCI6KFwiXCIrYS5rZXkpLnJlcGxhY2UoUCxcIiQmL1wiKStcIi9cIikrZSkpLGMucHVzaChhKSl9ZnVuY3Rpb24gVyhhLGIsZSxjLGQpe3ZhciBnPVwiXCI7bnVsbCE9ZSYmKGc9KFwiXCIrZSkucmVwbGFjZShQLFwiJCYvXCIpK1wiL1wiKTtiPVIoYixnLGMsZCk7VihhLGRhLGIpO1MoYil9XG52YXIgWD17Q2hpbGRyZW46e21hcDpmdW5jdGlvbihhLGIsZSl7aWYobnVsbD09YSlyZXR1cm4gYTt2YXIgYz1bXTtXKGEsYyxudWxsLGIsZSk7cmV0dXJuIGN9LGZvckVhY2g6ZnVuY3Rpb24oYSxiLGUpe2lmKG51bGw9PWEpcmV0dXJuIGE7Yj1SKG51bGwsbnVsbCxiLGUpO1YoYSxjYSxiKTtTKGIpfSxjb3VudDpmdW5jdGlvbihhKXtyZXR1cm4gVihhLGZ1bmN0aW9uKCl7cmV0dXJuIG51bGx9LG51bGwpfSx0b0FycmF5OmZ1bmN0aW9uKGEpe3ZhciBiPVtdO1coYSxiLG51bGwsZnVuY3Rpb24oYSl7cmV0dXJuIGF9KTtyZXR1cm4gYn0sb25seTpmdW5jdGlvbihhKXtPKGEpP3ZvaWQgMDpEKFwiMTQzXCIpO3JldHVybiBhfX0sY3JlYXRlUmVmOmZ1bmN0aW9uKCl7cmV0dXJue2N1cnJlbnQ6bnVsbH19LENvbXBvbmVudDpHLFB1cmVDb21wb25lbnQ6SSxjcmVhdGVDb250ZXh0OmZ1bmN0aW9uKGEsYil7dm9pZCAwPT09YiYmKGI9bnVsbCk7YT17JCR0eXBlb2Y6dyxfY2FsY3VsYXRlQ2hhbmdlZEJpdHM6Yixcbl9jdXJyZW50VmFsdWU6YSxfY3VycmVudFZhbHVlMjphLF90aHJlYWRDb3VudDowLFByb3ZpZGVyOm51bGwsQ29uc3VtZXI6bnVsbH07YS5Qcm92aWRlcj17JCR0eXBlb2Y6dixfY29udGV4dDphfTtyZXR1cm4gYS5Db25zdW1lcj1hfSxmb3J3YXJkUmVmOmZ1bmN0aW9uKGEpe3JldHVybnskJHR5cGVvZjp5LHJlbmRlcjphfX0sbGF6eTpmdW5jdGlvbihhKXtyZXR1cm57JCR0eXBlb2Y6QixfY3RvcjphLF9zdGF0dXM6LTEsX3Jlc3VsdDpudWxsfX0sbWVtbzpmdW5jdGlvbihhLGIpe3JldHVybnskJHR5cGVvZjpBLHR5cGU6YSxjb21wYXJlOnZvaWQgMD09PWI/bnVsbDpifX0sRnJhZ21lbnQ6cixTdHJpY3RNb2RlOnQsU3VzcGVuc2U6eixjcmVhdGVFbGVtZW50Ok4sY2xvbmVFbGVtZW50OmZ1bmN0aW9uKGEsYixlKXtudWxsPT09YXx8dm9pZCAwPT09YT9EKFwiMjY3XCIsYSk6dm9pZCAwO3ZhciBjPXZvaWQgMCxkPWsoe30sYS5wcm9wcyksZz1hLmtleSxoPWEucmVmLGY9YS5fb3duZXI7XG5pZihudWxsIT1iKXt2b2lkIDAhPT1iLnJlZiYmKGg9Yi5yZWYsZj1LLmN1cnJlbnQpO3ZvaWQgMCE9PWIua2V5JiYoZz1cIlwiK2Iua2V5KTt2YXIgbD12b2lkIDA7YS50eXBlJiZhLnR5cGUuZGVmYXVsdFByb3BzJiYobD1hLnR5cGUuZGVmYXVsdFByb3BzKTtmb3IoYyBpbiBiKUwuY2FsbChiLGMpJiYhTS5oYXNPd25Qcm9wZXJ0eShjKSYmKGRbY109dm9pZCAwPT09YltjXSYmdm9pZCAwIT09bD9sW2NdOmJbY10pfWM9YXJndW1lbnRzLmxlbmd0aC0yO2lmKDE9PT1jKWQuY2hpbGRyZW49ZTtlbHNlIGlmKDE8Yyl7bD1BcnJheShjKTtmb3IodmFyIG09MDttPGM7bSsrKWxbbV09YXJndW1lbnRzW20rMl07ZC5jaGlsZHJlbj1sfXJldHVybnskJHR5cGVvZjpwLHR5cGU6YS50eXBlLGtleTpnLHJlZjpoLHByb3BzOmQsX293bmVyOmZ9fSxjcmVhdGVGYWN0b3J5OmZ1bmN0aW9uKGEpe3ZhciBiPU4uYmluZChudWxsLGEpO2IudHlwZT1hO3JldHVybiBifSxpc1ZhbGlkRWxlbWVudDpPLHZlcnNpb246XCIxNi43LjBcIixcbnVuc3RhYmxlX0NvbmN1cnJlbnRNb2RlOngsdW5zdGFibGVfUHJvZmlsZXI6dSxfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRDp7UmVhY3RDdXJyZW50T3duZXI6Syxhc3NpZ246a319LFk9e2RlZmF1bHQ6WH0sWj1ZJiZYfHxZO21vZHVsZS5leHBvcnRzPVouZGVmYXVsdHx8WjtcbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MTYuNy4wXG4gKiByZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4vKlxuIE1vZGVybml6ciAzLjAuMHByZSAoQ3VzdG9tIEJ1aWxkKSB8IE1JVFxuKi9cbid1c2Ugc3RyaWN0Jzt2YXIgYWE9cmVxdWlyZShcInJlYWN0XCIpLG49cmVxdWlyZShcIm9iamVjdC1hc3NpZ25cIiksYmE9cmVxdWlyZShcInNjaGVkdWxlclwiKTtmdW5jdGlvbiBjYShhLGIsYyxkLGUsZixnLGgpe2lmKCFhKXthPXZvaWQgMDtpZih2b2lkIDA9PT1iKWE9RXJyb3IoXCJNaW5pZmllZCBleGNlcHRpb24gb2NjdXJyZWQ7IHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgdGhlIGZ1bGwgZXJyb3IgbWVzc2FnZSBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLlwiKTtlbHNle3ZhciBrPVtjLGQsZSxmLGcsaF0sbD0wO2E9RXJyb3IoYi5yZXBsYWNlKC8lcy9nLGZ1bmN0aW9uKCl7cmV0dXJuIGtbbCsrXX0pKTthLm5hbWU9XCJJbnZhcmlhbnQgVmlvbGF0aW9uXCJ9YS5mcmFtZXNUb1BvcD0xO3Rocm93IGE7fX1cbmZ1bmN0aW9uIHQoYSl7Zm9yKHZhciBiPWFyZ3VtZW50cy5sZW5ndGgtMSxjPVwiaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL2Vycm9yLWRlY29kZXIuaHRtbD9pbnZhcmlhbnQ9XCIrYSxkPTA7ZDxiO2QrKyljKz1cIiZhcmdzW109XCIrZW5jb2RlVVJJQ29tcG9uZW50KGFyZ3VtZW50c1tkKzFdKTtjYSghMSxcIk1pbmlmaWVkIFJlYWN0IGVycm9yICNcIithK1wiOyB2aXNpdCAlcyBmb3IgdGhlIGZ1bGwgbWVzc2FnZSBvciB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIGZ1bGwgZXJyb3JzIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuIFwiLGMpfWFhP3ZvaWQgMDp0KFwiMjI3XCIpO2Z1bmN0aW9uIGRhKGEsYixjLGQsZSxmLGcsaCxrKXt2YXIgbD1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMyk7dHJ5e2IuYXBwbHkoYyxsKX1jYXRjaChtKXt0aGlzLm9uRXJyb3IobSl9fVxudmFyIGVhPSExLGZhPW51bGwsaGE9ITEsaWE9bnVsbCxqYT17b25FcnJvcjpmdW5jdGlvbihhKXtlYT0hMDtmYT1hfX07ZnVuY3Rpb24ga2EoYSxiLGMsZCxlLGYsZyxoLGspe2VhPSExO2ZhPW51bGw7ZGEuYXBwbHkoamEsYXJndW1lbnRzKX1mdW5jdGlvbiBsYShhLGIsYyxkLGUsZixnLGgsayl7a2EuYXBwbHkodGhpcyxhcmd1bWVudHMpO2lmKGVhKXtpZihlYSl7dmFyIGw9ZmE7ZWE9ITE7ZmE9bnVsbH1lbHNlIHQoXCIxOThcIiksbD12b2lkIDA7aGF8fChoYT0hMCxpYT1sKX19dmFyIG1hPW51bGwsbmE9e307XG5mdW5jdGlvbiBvYSgpe2lmKG1hKWZvcih2YXIgYSBpbiBuYSl7dmFyIGI9bmFbYV0sYz1tYS5pbmRleE9mKGEpOy0xPGM/dm9pZCAwOnQoXCI5NlwiLGEpO2lmKCFwYVtjXSl7Yi5leHRyYWN0RXZlbnRzP3ZvaWQgMDp0KFwiOTdcIixhKTtwYVtjXT1iO2M9Yi5ldmVudFR5cGVzO2Zvcih2YXIgZCBpbiBjKXt2YXIgZT12b2lkIDA7dmFyIGY9Y1tkXSxnPWIsaD1kO3FhLmhhc093blByb3BlcnR5KGgpP3QoXCI5OVwiLGgpOnZvaWQgMDtxYVtoXT1mO3ZhciBrPWYucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM7aWYoayl7Zm9yKGUgaW4gaylrLmhhc093blByb3BlcnR5KGUpJiZyYShrW2VdLGcsaCk7ZT0hMH1lbHNlIGYucmVnaXN0cmF0aW9uTmFtZT8ocmEoZi5yZWdpc3RyYXRpb25OYW1lLGcsaCksZT0hMCk6ZT0hMTtlP3ZvaWQgMDp0KFwiOThcIixkLGEpfX19fVxuZnVuY3Rpb24gcmEoYSxiLGMpe3NhW2FdP3QoXCIxMDBcIixhKTp2b2lkIDA7c2FbYV09Yjt0YVthXT1iLmV2ZW50VHlwZXNbY10uZGVwZW5kZW5jaWVzfXZhciBwYT1bXSxxYT17fSxzYT17fSx0YT17fSx1YT1udWxsLHZhPW51bGwsd2E9bnVsbDtmdW5jdGlvbiB4YShhLGIsYyl7dmFyIGQ9YS50eXBlfHxcInVua25vd24tZXZlbnRcIjthLmN1cnJlbnRUYXJnZXQ9d2EoYyk7bGEoZCxiLHZvaWQgMCxhKTthLmN1cnJlbnRUYXJnZXQ9bnVsbH1mdW5jdGlvbiB5YShhLGIpe251bGw9PWI/dChcIjMwXCIpOnZvaWQgMDtpZihudWxsPT1hKXJldHVybiBiO2lmKEFycmF5LmlzQXJyYXkoYSkpe2lmKEFycmF5LmlzQXJyYXkoYikpcmV0dXJuIGEucHVzaC5hcHBseShhLGIpLGE7YS5wdXNoKGIpO3JldHVybiBhfXJldHVybiBBcnJheS5pc0FycmF5KGIpP1thXS5jb25jYXQoYik6W2EsYl19XG5mdW5jdGlvbiB6YShhLGIsYyl7QXJyYXkuaXNBcnJheShhKT9hLmZvckVhY2goYixjKTphJiZiLmNhbGwoYyxhKX12YXIgQWE9bnVsbDtmdW5jdGlvbiBCYShhKXtpZihhKXt2YXIgYj1hLl9kaXNwYXRjaExpc3RlbmVycyxjPWEuX2Rpc3BhdGNoSW5zdGFuY2VzO2lmKEFycmF5LmlzQXJyYXkoYikpZm9yKHZhciBkPTA7ZDxiLmxlbmd0aCYmIWEuaXNQcm9wYWdhdGlvblN0b3BwZWQoKTtkKyspeGEoYSxiW2RdLGNbZF0pO2Vsc2UgYiYmeGEoYSxiLGMpO2EuX2Rpc3BhdGNoTGlzdGVuZXJzPW51bGw7YS5fZGlzcGF0Y2hJbnN0YW5jZXM9bnVsbDthLmlzUGVyc2lzdGVudCgpfHxhLmNvbnN0cnVjdG9yLnJlbGVhc2UoYSl9fVxudmFyIENhPXtpbmplY3RFdmVudFBsdWdpbk9yZGVyOmZ1bmN0aW9uKGEpe21hP3QoXCIxMDFcIik6dm9pZCAwO21hPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGEpO29hKCl9LGluamVjdEV2ZW50UGx1Z2luc0J5TmFtZTpmdW5jdGlvbihhKXt2YXIgYj0hMSxjO2ZvcihjIGluIGEpaWYoYS5oYXNPd25Qcm9wZXJ0eShjKSl7dmFyIGQ9YVtjXTtuYS5oYXNPd25Qcm9wZXJ0eShjKSYmbmFbY109PT1kfHwobmFbY10/dChcIjEwMlwiLGMpOnZvaWQgMCxuYVtjXT1kLGI9ITApfWImJm9hKCl9fTtcbmZ1bmN0aW9uIERhKGEsYil7dmFyIGM9YS5zdGF0ZU5vZGU7aWYoIWMpcmV0dXJuIG51bGw7dmFyIGQ9dWEoYyk7aWYoIWQpcmV0dXJuIG51bGw7Yz1kW2JdO2E6c3dpdGNoKGIpe2Nhc2UgXCJvbkNsaWNrXCI6Y2FzZSBcIm9uQ2xpY2tDYXB0dXJlXCI6Y2FzZSBcIm9uRG91YmxlQ2xpY2tcIjpjYXNlIFwib25Eb3VibGVDbGlja0NhcHR1cmVcIjpjYXNlIFwib25Nb3VzZURvd25cIjpjYXNlIFwib25Nb3VzZURvd25DYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VNb3ZlXCI6Y2FzZSBcIm9uTW91c2VNb3ZlQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlVXBcIjpjYXNlIFwib25Nb3VzZVVwQ2FwdHVyZVwiOihkPSFkLmRpc2FibGVkKXx8KGE9YS50eXBlLGQ9IShcImJ1dHRvblwiPT09YXx8XCJpbnB1dFwiPT09YXx8XCJzZWxlY3RcIj09PWF8fFwidGV4dGFyZWFcIj09PWEpKTthPSFkO2JyZWFrIGE7ZGVmYXVsdDphPSExfWlmKGEpcmV0dXJuIG51bGw7YyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGM/dChcIjIzMVwiLGIsdHlwZW9mIGMpOnZvaWQgMDtcbnJldHVybiBjfWZ1bmN0aW9uIEVhKGEpe251bGwhPT1hJiYoQWE9eWEoQWEsYSkpO2E9QWE7QWE9bnVsbDtpZihhJiYoemEoYSxCYSksQWE/dChcIjk1XCIpOnZvaWQgMCxoYSkpdGhyb3cgYT1pYSxoYT0hMSxpYT1udWxsLGE7fXZhciBGYT1NYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zbGljZSgyKSxHYT1cIl9fcmVhY3RJbnRlcm5hbEluc3RhbmNlJFwiK0ZhLEhhPVwiX19yZWFjdEV2ZW50SGFuZGxlcnMkXCIrRmE7ZnVuY3Rpb24gSWEoYSl7aWYoYVtHYV0pcmV0dXJuIGFbR2FdO2Zvcig7IWFbR2FdOylpZihhLnBhcmVudE5vZGUpYT1hLnBhcmVudE5vZGU7ZWxzZSByZXR1cm4gbnVsbDthPWFbR2FdO3JldHVybiA1PT09YS50YWd8fDY9PT1hLnRhZz9hOm51bGx9ZnVuY3Rpb24gSmEoYSl7YT1hW0dhXTtyZXR1cm4hYXx8NSE9PWEudGFnJiY2IT09YS50YWc/bnVsbDphfVxuZnVuY3Rpb24gS2EoYSl7aWYoNT09PWEudGFnfHw2PT09YS50YWcpcmV0dXJuIGEuc3RhdGVOb2RlO3QoXCIzM1wiKX1mdW5jdGlvbiBMYShhKXtyZXR1cm4gYVtIYV18fG51bGx9ZnVuY3Rpb24gTWEoYSl7ZG8gYT1hLnJldHVybjt3aGlsZShhJiY1IT09YS50YWcpO3JldHVybiBhP2E6bnVsbH1mdW5jdGlvbiBOYShhLGIsYyl7aWYoYj1EYShhLGMuZGlzcGF0Y2hDb25maWcucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXNbYl0pKWMuX2Rpc3BhdGNoTGlzdGVuZXJzPXlhKGMuX2Rpc3BhdGNoTGlzdGVuZXJzLGIpLGMuX2Rpc3BhdGNoSW5zdGFuY2VzPXlhKGMuX2Rpc3BhdGNoSW5zdGFuY2VzLGEpfVxuZnVuY3Rpb24gT2EoYSl7aWYoYSYmYS5kaXNwYXRjaENvbmZpZy5waGFzZWRSZWdpc3RyYXRpb25OYW1lcyl7Zm9yKHZhciBiPWEuX3RhcmdldEluc3QsYz1bXTtiOyljLnB1c2goYiksYj1NYShiKTtmb3IoYj1jLmxlbmd0aDswPGItLTspTmEoY1tiXSxcImNhcHR1cmVkXCIsYSk7Zm9yKGI9MDtiPGMubGVuZ3RoO2IrKylOYShjW2JdLFwiYnViYmxlZFwiLGEpfX1mdW5jdGlvbiBQYShhLGIsYyl7YSYmYyYmYy5kaXNwYXRjaENvbmZpZy5yZWdpc3RyYXRpb25OYW1lJiYoYj1EYShhLGMuZGlzcGF0Y2hDb25maWcucmVnaXN0cmF0aW9uTmFtZSkpJiYoYy5fZGlzcGF0Y2hMaXN0ZW5lcnM9eWEoYy5fZGlzcGF0Y2hMaXN0ZW5lcnMsYiksYy5fZGlzcGF0Y2hJbnN0YW5jZXM9eWEoYy5fZGlzcGF0Y2hJbnN0YW5jZXMsYSkpfWZ1bmN0aW9uIFFhKGEpe2EmJmEuZGlzcGF0Y2hDb25maWcucmVnaXN0cmF0aW9uTmFtZSYmUGEoYS5fdGFyZ2V0SW5zdCxudWxsLGEpfVxuZnVuY3Rpb24gUmEoYSl7emEoYSxPYSl9dmFyIFNhPSEoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3d8fCF3aW5kb3cuZG9jdW1lbnR8fCF3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCk7ZnVuY3Rpb24gVGEoYSxiKXt2YXIgYz17fTtjW2EudG9Mb3dlckNhc2UoKV09Yi50b0xvd2VyQ2FzZSgpO2NbXCJXZWJraXRcIithXT1cIndlYmtpdFwiK2I7Y1tcIk1velwiK2FdPVwibW96XCIrYjtyZXR1cm4gY312YXIgVWE9e2FuaW1hdGlvbmVuZDpUYShcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uRW5kXCIpLGFuaW1hdGlvbml0ZXJhdGlvbjpUYShcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uSXRlcmF0aW9uXCIpLGFuaW1hdGlvbnN0YXJ0OlRhKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25TdGFydFwiKSx0cmFuc2l0aW9uZW5kOlRhKFwiVHJhbnNpdGlvblwiLFwiVHJhbnNpdGlvbkVuZFwiKX0sVmE9e30sV2E9e307XG5TYSYmKFdhPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIikuc3R5bGUsXCJBbmltYXRpb25FdmVudFwiaW4gd2luZG93fHwoZGVsZXRlIFVhLmFuaW1hdGlvbmVuZC5hbmltYXRpb24sZGVsZXRlIFVhLmFuaW1hdGlvbml0ZXJhdGlvbi5hbmltYXRpb24sZGVsZXRlIFVhLmFuaW1hdGlvbnN0YXJ0LmFuaW1hdGlvbiksXCJUcmFuc2l0aW9uRXZlbnRcImluIHdpbmRvd3x8ZGVsZXRlIFVhLnRyYW5zaXRpb25lbmQudHJhbnNpdGlvbik7ZnVuY3Rpb24gWGEoYSl7aWYoVmFbYV0pcmV0dXJuIFZhW2FdO2lmKCFVYVthXSlyZXR1cm4gYTt2YXIgYj1VYVthXSxjO2ZvcihjIGluIGIpaWYoYi5oYXNPd25Qcm9wZXJ0eShjKSYmYyBpbiBXYSlyZXR1cm4gVmFbYV09YltjXTtyZXR1cm4gYX1cbnZhciBZYT1YYShcImFuaW1hdGlvbmVuZFwiKSxaYT1YYShcImFuaW1hdGlvbml0ZXJhdGlvblwiKSwkYT1YYShcImFuaW1hdGlvbnN0YXJ0XCIpLGFiPVhhKFwidHJhbnNpdGlvbmVuZFwiKSxiYj1cImFib3J0IGNhbnBsYXkgY2FucGxheXRocm91Z2ggZHVyYXRpb25jaGFuZ2UgZW1wdGllZCBlbmNyeXB0ZWQgZW5kZWQgZXJyb3IgbG9hZGVkZGF0YSBsb2FkZWRtZXRhZGF0YSBsb2Fkc3RhcnQgcGF1c2UgcGxheSBwbGF5aW5nIHByb2dyZXNzIHJhdGVjaGFuZ2Ugc2Vla2VkIHNlZWtpbmcgc3RhbGxlZCBzdXNwZW5kIHRpbWV1cGRhdGUgdm9sdW1lY2hhbmdlIHdhaXRpbmdcIi5zcGxpdChcIiBcIiksY2I9bnVsbCxlYj1udWxsLGZiPW51bGw7XG5mdW5jdGlvbiBnYigpe2lmKGZiKXJldHVybiBmYjt2YXIgYSxiPWViLGM9Yi5sZW5ndGgsZCxlPVwidmFsdWVcImluIGNiP2NiLnZhbHVlOmNiLnRleHRDb250ZW50LGY9ZS5sZW5ndGg7Zm9yKGE9MDthPGMmJmJbYV09PT1lW2FdO2ErKyk7dmFyIGc9Yy1hO2ZvcihkPTE7ZDw9ZyYmYltjLWRdPT09ZVtmLWRdO2QrKyk7cmV0dXJuIGZiPWUuc2xpY2UoYSwxPGQ/MS1kOnZvaWQgMCl9ZnVuY3Rpb24gaGIoKXtyZXR1cm4hMH1mdW5jdGlvbiBpYigpe3JldHVybiExfVxuZnVuY3Rpb24geihhLGIsYyxkKXt0aGlzLmRpc3BhdGNoQ29uZmlnPWE7dGhpcy5fdGFyZ2V0SW5zdD1iO3RoaXMubmF0aXZlRXZlbnQ9YzthPXRoaXMuY29uc3RydWN0b3IuSW50ZXJmYWNlO2Zvcih2YXIgZSBpbiBhKWEuaGFzT3duUHJvcGVydHkoZSkmJigoYj1hW2VdKT90aGlzW2VdPWIoYyk6XCJ0YXJnZXRcIj09PWU/dGhpcy50YXJnZXQ9ZDp0aGlzW2VdPWNbZV0pO3RoaXMuaXNEZWZhdWx0UHJldmVudGVkPShudWxsIT1jLmRlZmF1bHRQcmV2ZW50ZWQ/Yy5kZWZhdWx0UHJldmVudGVkOiExPT09Yy5yZXR1cm5WYWx1ZSk/aGI6aWI7dGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1pYjtyZXR1cm4gdGhpc31cbm4oei5wcm90b3R5cGUse3ByZXZlbnREZWZhdWx0OmZ1bmN0aW9uKCl7dGhpcy5kZWZhdWx0UHJldmVudGVkPSEwO3ZhciBhPXRoaXMubmF0aXZlRXZlbnQ7YSYmKGEucHJldmVudERlZmF1bHQ/YS5wcmV2ZW50RGVmYXVsdCgpOlwidW5rbm93blwiIT09dHlwZW9mIGEucmV0dXJuVmFsdWUmJihhLnJldHVyblZhbHVlPSExKSx0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD1oYil9LHN0b3BQcm9wYWdhdGlvbjpmdW5jdGlvbigpe3ZhciBhPXRoaXMubmF0aXZlRXZlbnQ7YSYmKGEuc3RvcFByb3BhZ2F0aW9uP2Euc3RvcFByb3BhZ2F0aW9uKCk6XCJ1bmtub3duXCIhPT10eXBlb2YgYS5jYW5jZWxCdWJibGUmJihhLmNhbmNlbEJ1YmJsZT0hMCksdGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1oYil9LHBlcnNpc3Q6ZnVuY3Rpb24oKXt0aGlzLmlzUGVyc2lzdGVudD1oYn0saXNQZXJzaXN0ZW50OmliLGRlc3RydWN0b3I6ZnVuY3Rpb24oKXt2YXIgYT10aGlzLmNvbnN0cnVjdG9yLkludGVyZmFjZSxcbmI7Zm9yKGIgaW4gYSl0aGlzW2JdPW51bGw7dGhpcy5uYXRpdmVFdmVudD10aGlzLl90YXJnZXRJbnN0PXRoaXMuZGlzcGF0Y2hDb25maWc9bnVsbDt0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPXRoaXMuaXNEZWZhdWx0UHJldmVudGVkPWliO3RoaXMuX2Rpc3BhdGNoSW5zdGFuY2VzPXRoaXMuX2Rpc3BhdGNoTGlzdGVuZXJzPW51bGx9fSk7ei5JbnRlcmZhY2U9e3R5cGU6bnVsbCx0YXJnZXQ6bnVsbCxjdXJyZW50VGFyZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIG51bGx9LGV2ZW50UGhhc2U6bnVsbCxidWJibGVzOm51bGwsY2FuY2VsYWJsZTpudWxsLHRpbWVTdGFtcDpmdW5jdGlvbihhKXtyZXR1cm4gYS50aW1lU3RhbXB8fERhdGUubm93KCl9LGRlZmF1bHRQcmV2ZW50ZWQ6bnVsbCxpc1RydXN0ZWQ6bnVsbH07XG56LmV4dGVuZD1mdW5jdGlvbihhKXtmdW5jdGlvbiBiKCl7fWZ1bmN0aW9uIGMoKXtyZXR1cm4gZC5hcHBseSh0aGlzLGFyZ3VtZW50cyl9dmFyIGQ9dGhpcztiLnByb3RvdHlwZT1kLnByb3RvdHlwZTt2YXIgZT1uZXcgYjtuKGUsYy5wcm90b3R5cGUpO2MucHJvdG90eXBlPWU7Yy5wcm90b3R5cGUuY29uc3RydWN0b3I9YztjLkludGVyZmFjZT1uKHt9LGQuSW50ZXJmYWNlLGEpO2MuZXh0ZW5kPWQuZXh0ZW5kO2piKGMpO3JldHVybiBjfTtqYih6KTtmdW5jdGlvbiBrYihhLGIsYyxkKXtpZih0aGlzLmV2ZW50UG9vbC5sZW5ndGgpe3ZhciBlPXRoaXMuZXZlbnRQb29sLnBvcCgpO3RoaXMuY2FsbChlLGEsYixjLGQpO3JldHVybiBlfXJldHVybiBuZXcgdGhpcyhhLGIsYyxkKX1mdW5jdGlvbiBsYihhKXthIGluc3RhbmNlb2YgdGhpcz92b2lkIDA6dChcIjI3OVwiKTthLmRlc3RydWN0b3IoKTsxMD50aGlzLmV2ZW50UG9vbC5sZW5ndGgmJnRoaXMuZXZlbnRQb29sLnB1c2goYSl9XG5mdW5jdGlvbiBqYihhKXthLmV2ZW50UG9vbD1bXTthLmdldFBvb2xlZD1rYjthLnJlbGVhc2U9bGJ9dmFyIG1iPXouZXh0ZW5kKHtkYXRhOm51bGx9KSxuYj16LmV4dGVuZCh7ZGF0YTpudWxsfSksb2I9WzksMTMsMjcsMzJdLHBiPVNhJiZcIkNvbXBvc2l0aW9uRXZlbnRcImluIHdpbmRvdyxxYj1udWxsO1NhJiZcImRvY3VtZW50TW9kZVwiaW4gZG9jdW1lbnQmJihxYj1kb2N1bWVudC5kb2N1bWVudE1vZGUpO1xudmFyIHJiPVNhJiZcIlRleHRFdmVudFwiaW4gd2luZG93JiYhcWIsc2I9U2EmJighcGJ8fHFiJiY4PHFiJiYxMT49cWIpLHRiPVN0cmluZy5mcm9tQ2hhckNvZGUoMzIpLHViPXtiZWZvcmVJbnB1dDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkJlZm9yZUlucHV0XCIsY2FwdHVyZWQ6XCJvbkJlZm9yZUlucHV0Q2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6W1wiY29tcG9zaXRpb25lbmRcIixcImtleXByZXNzXCIsXCJ0ZXh0SW5wdXRcIixcInBhc3RlXCJdfSxjb21wb3NpdGlvbkVuZDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNvbXBvc2l0aW9uRW5kXCIsY2FwdHVyZWQ6XCJvbkNvbXBvc2l0aW9uRW5kQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbXBvc2l0aW9uZW5kIGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpfSxjb21wb3NpdGlvblN0YXJ0OntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ29tcG9zaXRpb25TdGFydFwiLFxuY2FwdHVyZWQ6XCJvbkNvbXBvc2l0aW9uU3RhcnRDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY29tcG9zaXRpb25zdGFydCBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKX0sY29tcG9zaXRpb25VcGRhdGU6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25Db21wb3NpdGlvblVwZGF0ZVwiLGNhcHR1cmVkOlwib25Db21wb3NpdGlvblVwZGF0ZUNhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb21wb3NpdGlvbnVwZGF0ZSBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKX19LHZiPSExO1xuZnVuY3Rpb24gd2IoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImtleXVwXCI6cmV0dXJuLTEhPT1vYi5pbmRleE9mKGIua2V5Q29kZSk7Y2FzZSBcImtleWRvd25cIjpyZXR1cm4gMjI5IT09Yi5rZXlDb2RlO2Nhc2UgXCJrZXlwcmVzc1wiOmNhc2UgXCJtb3VzZWRvd25cIjpjYXNlIFwiYmx1clwiOnJldHVybiEwO2RlZmF1bHQ6cmV0dXJuITF9fWZ1bmN0aW9uIHhiKGEpe2E9YS5kZXRhaWw7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZcImRhdGFcImluIGE/YS5kYXRhOm51bGx9dmFyIHliPSExO2Z1bmN0aW9uIHpiKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOnJldHVybiB4YihiKTtjYXNlIFwia2V5cHJlc3NcIjppZigzMiE9PWIud2hpY2gpcmV0dXJuIG51bGw7dmI9ITA7cmV0dXJuIHRiO2Nhc2UgXCJ0ZXh0SW5wdXRcIjpyZXR1cm4gYT1iLmRhdGEsYT09PXRiJiZ2Yj9udWxsOmE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG5mdW5jdGlvbiBBYihhLGIpe2lmKHliKXJldHVyblwiY29tcG9zaXRpb25lbmRcIj09PWF8fCFwYiYmd2IoYSxiKT8oYT1nYigpLGZiPWViPWNiPW51bGwseWI9ITEsYSk6bnVsbDtzd2l0Y2goYSl7Y2FzZSBcInBhc3RlXCI6cmV0dXJuIG51bGw7Y2FzZSBcImtleXByZXNzXCI6aWYoIShiLmN0cmxLZXl8fGIuYWx0S2V5fHxiLm1ldGFLZXkpfHxiLmN0cmxLZXkmJmIuYWx0S2V5KXtpZihiLmNoYXImJjE8Yi5jaGFyLmxlbmd0aClyZXR1cm4gYi5jaGFyO2lmKGIud2hpY2gpcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUoYi53aGljaCl9cmV0dXJuIG51bGw7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6cmV0dXJuIHNiJiZcImtvXCIhPT1iLmxvY2FsZT9udWxsOmIuZGF0YTtkZWZhdWx0OnJldHVybiBudWxsfX1cbnZhciBCYj17ZXZlbnRUeXBlczp1YixleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPXZvaWQgMDt2YXIgZj12b2lkIDA7aWYocGIpYjp7c3dpdGNoKGEpe2Nhc2UgXCJjb21wb3NpdGlvbnN0YXJ0XCI6ZT11Yi5jb21wb3NpdGlvblN0YXJ0O2JyZWFrIGI7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6ZT11Yi5jb21wb3NpdGlvbkVuZDticmVhayBiO2Nhc2UgXCJjb21wb3NpdGlvbnVwZGF0ZVwiOmU9dWIuY29tcG9zaXRpb25VcGRhdGU7YnJlYWsgYn1lPXZvaWQgMH1lbHNlIHliP3diKGEsYykmJihlPXViLmNvbXBvc2l0aW9uRW5kKTpcImtleWRvd25cIj09PWEmJjIyOT09PWMua2V5Q29kZSYmKGU9dWIuY29tcG9zaXRpb25TdGFydCk7ZT8oc2ImJlwia29cIiE9PWMubG9jYWxlJiYoeWJ8fGUhPT11Yi5jb21wb3NpdGlvblN0YXJ0P2U9PT11Yi5jb21wb3NpdGlvbkVuZCYmeWImJihmPWdiKCkpOihjYj1kLGViPVwidmFsdWVcImluIGNiP2NiLnZhbHVlOmNiLnRleHRDb250ZW50LHliPVxuITApKSxlPW1iLmdldFBvb2xlZChlLGIsYyxkKSxmP2UuZGF0YT1mOihmPXhiKGMpLG51bGwhPT1mJiYoZS5kYXRhPWYpKSxSYShlKSxmPWUpOmY9bnVsbDsoYT1yYj96YihhLGMpOkFiKGEsYykpPyhiPW5iLmdldFBvb2xlZCh1Yi5iZWZvcmVJbnB1dCxiLGMsZCksYi5kYXRhPWEsUmEoYikpOmI9bnVsbDtyZXR1cm4gbnVsbD09PWY/YjpudWxsPT09Yj9mOltmLGJdfX0sQ2I9bnVsbCxEYj1udWxsLEViPW51bGw7ZnVuY3Rpb24gSGIoYSl7aWYoYT12YShhKSl7XCJmdW5jdGlvblwiIT09dHlwZW9mIENiP3QoXCIyODBcIik6dm9pZCAwO3ZhciBiPXVhKGEuc3RhdGVOb2RlKTtDYihhLnN0YXRlTm9kZSxhLnR5cGUsYil9fWZ1bmN0aW9uIEliKGEpe0RiP0ViP0ViLnB1c2goYSk6RWI9W2FdOkRiPWF9ZnVuY3Rpb24gSmIoKXtpZihEYil7dmFyIGE9RGIsYj1FYjtFYj1EYj1udWxsO0hiKGEpO2lmKGIpZm9yKGE9MDthPGIubGVuZ3RoO2ErKylIYihiW2FdKX19XG5mdW5jdGlvbiBLYihhLGIpe3JldHVybiBhKGIpfWZ1bmN0aW9uIExiKGEsYixjKXtyZXR1cm4gYShiLGMpfWZ1bmN0aW9uIE1iKCl7fXZhciBOYj0hMTtmdW5jdGlvbiBPYihhLGIpe2lmKE5iKXJldHVybiBhKGIpO05iPSEwO3RyeXtyZXR1cm4gS2IoYSxiKX1maW5hbGx5e2lmKE5iPSExLG51bGwhPT1EYnx8bnVsbCE9PUViKU1iKCksSmIoKX19dmFyIFBiPXtjb2xvcjohMCxkYXRlOiEwLGRhdGV0aW1lOiEwLFwiZGF0ZXRpbWUtbG9jYWxcIjohMCxlbWFpbDohMCxtb250aDohMCxudW1iZXI6ITAscGFzc3dvcmQ6ITAscmFuZ2U6ITAsc2VhcmNoOiEwLHRlbDohMCx0ZXh0OiEwLHRpbWU6ITAsdXJsOiEwLHdlZWs6ITB9O2Z1bmN0aW9uIFFiKGEpe3ZhciBiPWEmJmEubm9kZU5hbWUmJmEubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm5cImlucHV0XCI9PT1iPyEhUGJbYS50eXBlXTpcInRleHRhcmVhXCI9PT1iPyEwOiExfVxuZnVuY3Rpb24gUmIoYSl7YT1hLnRhcmdldHx8YS5zcmNFbGVtZW50fHx3aW5kb3c7YS5jb3JyZXNwb25kaW5nVXNlRWxlbWVudCYmKGE9YS5jb3JyZXNwb25kaW5nVXNlRWxlbWVudCk7cmV0dXJuIDM9PT1hLm5vZGVUeXBlP2EucGFyZW50Tm9kZTphfWZ1bmN0aW9uIFNiKGEpe2lmKCFTYSlyZXR1cm4hMTthPVwib25cIithO3ZhciBiPWEgaW4gZG9jdW1lbnQ7Ynx8KGI9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKSxiLnNldEF0dHJpYnV0ZShhLFwicmV0dXJuO1wiKSxiPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBiW2FdKTtyZXR1cm4gYn1mdW5jdGlvbiBUYihhKXt2YXIgYj1hLnR5cGU7cmV0dXJuKGE9YS5ub2RlTmFtZSkmJlwiaW5wdXRcIj09PWEudG9Mb3dlckNhc2UoKSYmKFwiY2hlY2tib3hcIj09PWJ8fFwicmFkaW9cIj09PWIpfVxuZnVuY3Rpb24gVWIoYSl7dmFyIGI9VGIoYSk/XCJjaGVja2VkXCI6XCJ2YWx1ZVwiLGM9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihhLmNvbnN0cnVjdG9yLnByb3RvdHlwZSxiKSxkPVwiXCIrYVtiXTtpZighYS5oYXNPd25Qcm9wZXJ0eShiKSYmXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBjJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5nZXQmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLnNldCl7dmFyIGU9Yy5nZXQsZj1jLnNldDtPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxiLHtjb25maWd1cmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGUuY2FsbCh0aGlzKX0sc2V0OmZ1bmN0aW9uKGEpe2Q9XCJcIithO2YuY2FsbCh0aGlzLGEpfX0pO09iamVjdC5kZWZpbmVQcm9wZXJ0eShhLGIse2VudW1lcmFibGU6Yy5lbnVtZXJhYmxlfSk7cmV0dXJue2dldFZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIGR9LHNldFZhbHVlOmZ1bmN0aW9uKGEpe2Q9XCJcIithfSxzdG9wVHJhY2tpbmc6ZnVuY3Rpb24oKXthLl92YWx1ZVRyYWNrZXI9XG5udWxsO2RlbGV0ZSBhW2JdfX19fWZ1bmN0aW9uIFZiKGEpe2EuX3ZhbHVlVHJhY2tlcnx8KGEuX3ZhbHVlVHJhY2tlcj1VYihhKSl9ZnVuY3Rpb24gV2IoYSl7aWYoIWEpcmV0dXJuITE7dmFyIGI9YS5fdmFsdWVUcmFja2VyO2lmKCFiKXJldHVybiEwO3ZhciBjPWIuZ2V0VmFsdWUoKTt2YXIgZD1cIlwiO2EmJihkPVRiKGEpP2EuY2hlY2tlZD9cInRydWVcIjpcImZhbHNlXCI6YS52YWx1ZSk7YT1kO3JldHVybiBhIT09Yz8oYi5zZXRWYWx1ZShhKSwhMCk6ITF9XG52YXIgWGI9YWEuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQsWWI9L14oLiopW1xcXFxcXC9dLyxEPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5mb3IsWmI9RD9TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMywkYj1EP1N5bWJvbC5mb3IoXCJyZWFjdC5wb3J0YWxcIik6NjAxMDYsYWM9RD9TeW1ib2wuZm9yKFwicmVhY3QuZnJhZ21lbnRcIik6NjAxMDcsYmM9RD9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgsY2M9RD9TeW1ib2wuZm9yKFwicmVhY3QucHJvZmlsZXJcIik6NjAxMTQsZGM9RD9TeW1ib2wuZm9yKFwicmVhY3QucHJvdmlkZXJcIik6NjAxMDksZWM9RD9TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCxmYz1EP1N5bWJvbC5mb3IoXCJyZWFjdC5jb25jdXJyZW50X21vZGVcIik6NjAxMTEsZ2M9RD9TeW1ib2wuZm9yKFwicmVhY3QuZm9yd2FyZF9yZWZcIik6NjAxMTIsaGM9RD9TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VcIik6XG42MDExMyxpYz1EP1N5bWJvbC5mb3IoXCJyZWFjdC5tZW1vXCIpOjYwMTE1LGpjPUQ/U3ltYm9sLmZvcihcInJlYWN0LmxhenlcIik6NjAxMTYsa2M9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yO2Z1bmN0aW9uIGxjKGEpe2lmKG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGEpcmV0dXJuIG51bGw7YT1rYyYmYVtrY118fGFbXCJAQGl0ZXJhdG9yXCJdO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhP2E6bnVsbH1cbmZ1bmN0aW9uIG1jKGEpe2lmKG51bGw9PWEpcmV0dXJuIG51bGw7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpcmV0dXJuIGEuZGlzcGxheU5hbWV8fGEubmFtZXx8bnVsbDtpZihcInN0cmluZ1wiPT09dHlwZW9mIGEpcmV0dXJuIGE7c3dpdGNoKGEpe2Nhc2UgZmM6cmV0dXJuXCJDb25jdXJyZW50TW9kZVwiO2Nhc2UgYWM6cmV0dXJuXCJGcmFnbWVudFwiO2Nhc2UgJGI6cmV0dXJuXCJQb3J0YWxcIjtjYXNlIGNjOnJldHVyblwiUHJvZmlsZXJcIjtjYXNlIGJjOnJldHVyblwiU3RyaWN0TW9kZVwiO2Nhc2UgaGM6cmV0dXJuXCJTdXNwZW5zZVwifWlmKFwib2JqZWN0XCI9PT10eXBlb2YgYSlzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSBlYzpyZXR1cm5cIkNvbnRleHQuQ29uc3VtZXJcIjtjYXNlIGRjOnJldHVyblwiQ29udGV4dC5Qcm92aWRlclwiO2Nhc2UgZ2M6dmFyIGI9YS5yZW5kZXI7Yj1iLmRpc3BsYXlOYW1lfHxiLm5hbWV8fFwiXCI7cmV0dXJuIGEuZGlzcGxheU5hbWV8fChcIlwiIT09Yj9cIkZvcndhcmRSZWYoXCIrYitcblwiKVwiOlwiRm9yd2FyZFJlZlwiKTtjYXNlIGljOnJldHVybiBtYyhhLnR5cGUpO2Nhc2UgamM6aWYoYT0xPT09YS5fc3RhdHVzP2EuX3Jlc3VsdDpudWxsKXJldHVybiBtYyhhKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBuYyhhKXt2YXIgYj1cIlwiO2Rve2E6c3dpdGNoKGEudGFnKXtjYXNlIDM6Y2FzZSA0OmNhc2UgNjpjYXNlIDc6Y2FzZSAxMDpjYXNlIDk6dmFyIGM9XCJcIjticmVhayBhO2RlZmF1bHQ6dmFyIGQ9YS5fZGVidWdPd25lcixlPWEuX2RlYnVnU291cmNlLGY9bWMoYS50eXBlKTtjPW51bGw7ZCYmKGM9bWMoZC50eXBlKSk7ZD1mO2Y9XCJcIjtlP2Y9XCIgKGF0IFwiK2UuZmlsZU5hbWUucmVwbGFjZShZYixcIlwiKStcIjpcIitlLmxpbmVOdW1iZXIrXCIpXCI6YyYmKGY9XCIgKGNyZWF0ZWQgYnkgXCIrYytcIilcIik7Yz1cIlxcbiAgICBpbiBcIisoZHx8XCJVbmtub3duXCIpK2Z9Yis9YzthPWEucmV0dXJufXdoaWxlKGEpO3JldHVybiBifVxudmFyIG9jPS9eWzpBLVpfYS16XFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMkZGXFx1MDM3MC1cXHUwMzdEXFx1MDM3Ri1cXHUxRkZGXFx1MjAwQy1cXHUyMDBEXFx1MjA3MC1cXHUyMThGXFx1MkMwMC1cXHUyRkVGXFx1MzAwMS1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkZEXVs6QS1aX2EtelxcdTAwQzAtXFx1MDBENlxcdTAwRDgtXFx1MDBGNlxcdTAwRjgtXFx1MDJGRlxcdTAzNzAtXFx1MDM3RFxcdTAzN0YtXFx1MUZGRlxcdTIwMEMtXFx1MjAwRFxcdTIwNzAtXFx1MjE4RlxcdTJDMDAtXFx1MkZFRlxcdTMwMDEtXFx1RDdGRlxcdUY5MDAtXFx1RkRDRlxcdUZERjAtXFx1RkZGRFxcLS4wLTlcXHUwMEI3XFx1MDMwMC1cXHUwMzZGXFx1MjAzRi1cXHUyMDQwXSokLyxwYz1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LHFjPXt9LHJjPXt9O1xuZnVuY3Rpb24gc2MoYSl7aWYocGMuY2FsbChyYyxhKSlyZXR1cm4hMDtpZihwYy5jYWxsKHFjLGEpKXJldHVybiExO2lmKG9jLnRlc3QoYSkpcmV0dXJuIHJjW2FdPSEwO3FjW2FdPSEwO3JldHVybiExfWZ1bmN0aW9uIHRjKGEsYixjLGQpe2lmKG51bGwhPT1jJiYwPT09Yy50eXBlKXJldHVybiExO3N3aXRjaCh0eXBlb2YgYil7Y2FzZSBcImZ1bmN0aW9uXCI6Y2FzZSBcInN5bWJvbFwiOnJldHVybiEwO2Nhc2UgXCJib29sZWFuXCI6aWYoZClyZXR1cm4hMTtpZihudWxsIT09YylyZXR1cm4hYy5hY2NlcHRzQm9vbGVhbnM7YT1hLnRvTG93ZXJDYXNlKCkuc2xpY2UoMCw1KTtyZXR1cm5cImRhdGEtXCIhPT1hJiZcImFyaWEtXCIhPT1hO2RlZmF1bHQ6cmV0dXJuITF9fVxuZnVuY3Rpb24gdWMoYSxiLGMsZCl7aWYobnVsbD09PWJ8fFwidW5kZWZpbmVkXCI9PT10eXBlb2YgYnx8dGMoYSxiLGMsZCkpcmV0dXJuITA7aWYoZClyZXR1cm4hMTtpZihudWxsIT09Yylzd2l0Y2goYy50eXBlKXtjYXNlIDM6cmV0dXJuIWI7Y2FzZSA0OnJldHVybiExPT09YjtjYXNlIDU6cmV0dXJuIGlzTmFOKGIpO2Nhc2UgNjpyZXR1cm4gaXNOYU4oYil8fDE+Yn1yZXR1cm4hMX1mdW5jdGlvbiBFKGEsYixjLGQsZSl7dGhpcy5hY2NlcHRzQm9vbGVhbnM9Mj09PWJ8fDM9PT1ifHw0PT09Yjt0aGlzLmF0dHJpYnV0ZU5hbWU9ZDt0aGlzLmF0dHJpYnV0ZU5hbWVzcGFjZT1lO3RoaXMubXVzdFVzZVByb3BlcnR5PWM7dGhpcy5wcm9wZXJ0eU5hbWU9YTt0aGlzLnR5cGU9Yn12YXIgRj17fTtcblwiY2hpbGRyZW4gZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwgZGVmYXVsdFZhbHVlIGRlZmF1bHRDaGVja2VkIGlubmVySFRNTCBzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmcgc3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nIHN0eWxlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7RlthXT1uZXcgRShhLDAsITEsYSxudWxsKX0pO1tbXCJhY2NlcHRDaGFyc2V0XCIsXCJhY2NlcHQtY2hhcnNldFwiXSxbXCJjbGFzc05hbWVcIixcImNsYXNzXCJdLFtcImh0bWxGb3JcIixcImZvclwiXSxbXCJodHRwRXF1aXZcIixcImh0dHAtZXF1aXZcIl1dLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YVswXTtGW2JdPW5ldyBFKGIsMSwhMSxhWzFdLG51bGwpfSk7W1wiY29udGVudEVkaXRhYmxlXCIsXCJkcmFnZ2FibGVcIixcInNwZWxsQ2hlY2tcIixcInZhbHVlXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RlthXT1uZXcgRShhLDIsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwpfSk7XG5bXCJhdXRvUmV2ZXJzZVwiLFwiZXh0ZXJuYWxSZXNvdXJjZXNSZXF1aXJlZFwiLFwiZm9jdXNhYmxlXCIsXCJwcmVzZXJ2ZUFscGhhXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RlthXT1uZXcgRShhLDIsITEsYSxudWxsKX0pO1wiYWxsb3dGdWxsU2NyZWVuIGFzeW5jIGF1dG9Gb2N1cyBhdXRvUGxheSBjb250cm9scyBkZWZhdWx0IGRlZmVyIGRpc2FibGVkIGZvcm1Ob1ZhbGlkYXRlIGhpZGRlbiBsb29wIG5vTW9kdWxlIG5vVmFsaWRhdGUgb3BlbiBwbGF5c0lubGluZSByZWFkT25seSByZXF1aXJlZCByZXZlcnNlZCBzY29wZWQgc2VhbWxlc3MgaXRlbVNjb3BlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7RlthXT1uZXcgRShhLDMsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwpfSk7W1wiY2hlY2tlZFwiLFwibXVsdGlwbGVcIixcIm11dGVkXCIsXCJzZWxlY3RlZFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0ZbYV09bmV3IEUoYSwzLCEwLGEsbnVsbCl9KTtcbltcImNhcHR1cmVcIixcImRvd25sb2FkXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RlthXT1uZXcgRShhLDQsITEsYSxudWxsKX0pO1tcImNvbHNcIixcInJvd3NcIixcInNpemVcIixcInNwYW5cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtGW2FdPW5ldyBFKGEsNiwhMSxhLG51bGwpfSk7W1wicm93U3BhblwiLFwic3RhcnRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtGW2FdPW5ldyBFKGEsNSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCl9KTt2YXIgdmM9L1tcXC06XShbYS16XSkvZztmdW5jdGlvbiB3YyhhKXtyZXR1cm4gYVsxXS50b1VwcGVyQ2FzZSgpfVxuXCJhY2NlbnQtaGVpZ2h0IGFsaWdubWVudC1iYXNlbGluZSBhcmFiaWMtZm9ybSBiYXNlbGluZS1zaGlmdCBjYXAtaGVpZ2h0IGNsaXAtcGF0aCBjbGlwLXJ1bGUgY29sb3ItaW50ZXJwb2xhdGlvbiBjb2xvci1pbnRlcnBvbGF0aW9uLWZpbHRlcnMgY29sb3ItcHJvZmlsZSBjb2xvci1yZW5kZXJpbmcgZG9taW5hbnQtYmFzZWxpbmUgZW5hYmxlLWJhY2tncm91bmQgZmlsbC1vcGFjaXR5IGZpbGwtcnVsZSBmbG9vZC1jb2xvciBmbG9vZC1vcGFjaXR5IGZvbnQtZmFtaWx5IGZvbnQtc2l6ZSBmb250LXNpemUtYWRqdXN0IGZvbnQtc3RyZXRjaCBmb250LXN0eWxlIGZvbnQtdmFyaWFudCBmb250LXdlaWdodCBnbHlwaC1uYW1lIGdseXBoLW9yaWVudGF0aW9uLWhvcml6b250YWwgZ2x5cGgtb3JpZW50YXRpb24tdmVydGljYWwgaG9yaXotYWR2LXggaG9yaXotb3JpZ2luLXggaW1hZ2UtcmVuZGVyaW5nIGxldHRlci1zcGFjaW5nIGxpZ2h0aW5nLWNvbG9yIG1hcmtlci1lbmQgbWFya2VyLW1pZCBtYXJrZXItc3RhcnQgb3ZlcmxpbmUtcG9zaXRpb24gb3ZlcmxpbmUtdGhpY2tuZXNzIHBhaW50LW9yZGVyIHBhbm9zZS0xIHBvaW50ZXItZXZlbnRzIHJlbmRlcmluZy1pbnRlbnQgc2hhcGUtcmVuZGVyaW5nIHN0b3AtY29sb3Igc3RvcC1vcGFjaXR5IHN0cmlrZXRocm91Z2gtcG9zaXRpb24gc3RyaWtldGhyb3VnaC10aGlja25lc3Mgc3Ryb2tlLWRhc2hhcnJheSBzdHJva2UtZGFzaG9mZnNldCBzdHJva2UtbGluZWNhcCBzdHJva2UtbGluZWpvaW4gc3Ryb2tlLW1pdGVybGltaXQgc3Ryb2tlLW9wYWNpdHkgc3Ryb2tlLXdpZHRoIHRleHQtYW5jaG9yIHRleHQtZGVjb3JhdGlvbiB0ZXh0LXJlbmRlcmluZyB1bmRlcmxpbmUtcG9zaXRpb24gdW5kZXJsaW5lLXRoaWNrbmVzcyB1bmljb2RlLWJpZGkgdW5pY29kZS1yYW5nZSB1bml0cy1wZXItZW0gdi1hbHBoYWJldGljIHYtaGFuZ2luZyB2LWlkZW9ncmFwaGljIHYtbWF0aGVtYXRpY2FsIHZlY3Rvci1lZmZlY3QgdmVydC1hZHYteSB2ZXJ0LW9yaWdpbi14IHZlcnQtb3JpZ2luLXkgd29yZC1zcGFjaW5nIHdyaXRpbmctbW9kZSB4bWxuczp4bGluayB4LWhlaWdodFwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZSh2YyxcbndjKTtGW2JdPW5ldyBFKGIsMSwhMSxhLG51bGwpfSk7XCJ4bGluazphY3R1YXRlIHhsaW5rOmFyY3JvbGUgeGxpbms6aHJlZiB4bGluazpyb2xlIHhsaW5rOnNob3cgeGxpbms6dGl0bGUgeGxpbms6dHlwZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZSh2Yyx3Yyk7RltiXT1uZXcgRShiLDEsITEsYSxcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcIil9KTtbXCJ4bWw6YmFzZVwiLFwieG1sOmxhbmdcIixcInhtbDpzcGFjZVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZSh2Yyx3Yyk7RltiXT1uZXcgRShiLDEsITEsYSxcImh0dHA6Ly93d3cudzMub3JnL1hNTC8xOTk4L25hbWVzcGFjZVwiKX0pO0YudGFiSW5kZXg9bmV3IEUoXCJ0YWJJbmRleFwiLDEsITEsXCJ0YWJpbmRleFwiLG51bGwpO1xuZnVuY3Rpb24geGMoYSxiLGMsZCl7dmFyIGU9Ri5oYXNPd25Qcm9wZXJ0eShiKT9GW2JdOm51bGw7dmFyIGY9bnVsbCE9PWU/MD09PWUudHlwZTpkPyExOiEoMjxiLmxlbmd0aCl8fFwib1wiIT09YlswXSYmXCJPXCIhPT1iWzBdfHxcIm5cIiE9PWJbMV0mJlwiTlwiIT09YlsxXT8hMTohMDtmfHwodWMoYixjLGUsZCkmJihjPW51bGwpLGR8fG51bGw9PT1lP3NjKGIpJiYobnVsbD09PWM/YS5yZW1vdmVBdHRyaWJ1dGUoYik6YS5zZXRBdHRyaWJ1dGUoYixcIlwiK2MpKTplLm11c3RVc2VQcm9wZXJ0eT9hW2UucHJvcGVydHlOYW1lXT1udWxsPT09Yz8zPT09ZS50eXBlPyExOlwiXCI6YzooYj1lLmF0dHJpYnV0ZU5hbWUsZD1lLmF0dHJpYnV0ZU5hbWVzcGFjZSxudWxsPT09Yz9hLnJlbW92ZUF0dHJpYnV0ZShiKTooZT1lLnR5cGUsYz0zPT09ZXx8ND09PWUmJiEwPT09Yz9cIlwiOlwiXCIrYyxkP2Euc2V0QXR0cmlidXRlTlMoZCxiLGMpOmEuc2V0QXR0cmlidXRlKGIsYykpKSl9XG5mdW5jdGlvbiB5YyhhKXtzd2l0Y2godHlwZW9mIGEpe2Nhc2UgXCJib29sZWFuXCI6Y2FzZSBcIm51bWJlclwiOmNhc2UgXCJvYmplY3RcIjpjYXNlIFwic3RyaW5nXCI6Y2FzZSBcInVuZGVmaW5lZFwiOnJldHVybiBhO2RlZmF1bHQ6cmV0dXJuXCJcIn19ZnVuY3Rpb24gemMoYSxiKXt2YXIgYz1iLmNoZWNrZWQ7cmV0dXJuIG4oe30sYix7ZGVmYXVsdENoZWNrZWQ6dm9pZCAwLGRlZmF1bHRWYWx1ZTp2b2lkIDAsdmFsdWU6dm9pZCAwLGNoZWNrZWQ6bnVsbCE9Yz9jOmEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsQ2hlY2tlZH0pfVxuZnVuY3Rpb24gQWMoYSxiKXt2YXIgYz1udWxsPT1iLmRlZmF1bHRWYWx1ZT9cIlwiOmIuZGVmYXVsdFZhbHVlLGQ9bnVsbCE9Yi5jaGVja2VkP2IuY2hlY2tlZDpiLmRlZmF1bHRDaGVja2VkO2M9eWMobnVsbCE9Yi52YWx1ZT9iLnZhbHVlOmMpO2EuX3dyYXBwZXJTdGF0ZT17aW5pdGlhbENoZWNrZWQ6ZCxpbml0aWFsVmFsdWU6Yyxjb250cm9sbGVkOlwiY2hlY2tib3hcIj09PWIudHlwZXx8XCJyYWRpb1wiPT09Yi50eXBlP251bGwhPWIuY2hlY2tlZDpudWxsIT1iLnZhbHVlfX1mdW5jdGlvbiBCYyhhLGIpe2I9Yi5jaGVja2VkO251bGwhPWImJnhjKGEsXCJjaGVja2VkXCIsYiwhMSl9XG5mdW5jdGlvbiBDYyhhLGIpe0JjKGEsYik7dmFyIGM9eWMoYi52YWx1ZSksZD1iLnR5cGU7aWYobnVsbCE9YylpZihcIm51bWJlclwiPT09ZCl7aWYoMD09PWMmJlwiXCI9PT1hLnZhbHVlfHxhLnZhbHVlIT1jKWEudmFsdWU9XCJcIitjfWVsc2UgYS52YWx1ZSE9PVwiXCIrYyYmKGEudmFsdWU9XCJcIitjKTtlbHNlIGlmKFwic3VibWl0XCI9PT1kfHxcInJlc2V0XCI9PT1kKXthLnJlbW92ZUF0dHJpYnV0ZShcInZhbHVlXCIpO3JldHVybn1iLmhhc093blByb3BlcnR5KFwidmFsdWVcIik/RGMoYSxiLnR5cGUsYyk6Yi5oYXNPd25Qcm9wZXJ0eShcImRlZmF1bHRWYWx1ZVwiKSYmRGMoYSxiLnR5cGUseWMoYi5kZWZhdWx0VmFsdWUpKTtudWxsPT1iLmNoZWNrZWQmJm51bGwhPWIuZGVmYXVsdENoZWNrZWQmJihhLmRlZmF1bHRDaGVja2VkPSEhYi5kZWZhdWx0Q2hlY2tlZCl9XG5mdW5jdGlvbiBFYyhhLGIsYyl7aWYoYi5oYXNPd25Qcm9wZXJ0eShcInZhbHVlXCIpfHxiLmhhc093blByb3BlcnR5KFwiZGVmYXVsdFZhbHVlXCIpKXt2YXIgZD1iLnR5cGU7aWYoIShcInN1Ym1pdFwiIT09ZCYmXCJyZXNldFwiIT09ZHx8dm9pZCAwIT09Yi52YWx1ZSYmbnVsbCE9PWIudmFsdWUpKXJldHVybjtiPVwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZTtjfHxiPT09YS52YWx1ZXx8KGEudmFsdWU9Yik7YS5kZWZhdWx0VmFsdWU9Yn1jPWEubmFtZTtcIlwiIT09YyYmKGEubmFtZT1cIlwiKTthLmRlZmF1bHRDaGVja2VkPSFhLmRlZmF1bHRDaGVja2VkO2EuZGVmYXVsdENoZWNrZWQ9ISFhLl93cmFwcGVyU3RhdGUuaW5pdGlhbENoZWNrZWQ7XCJcIiE9PWMmJihhLm5hbWU9Yyl9XG5mdW5jdGlvbiBEYyhhLGIsYyl7aWYoXCJudW1iZXJcIiE9PWJ8fGEub3duZXJEb2N1bWVudC5hY3RpdmVFbGVtZW50IT09YSludWxsPT1jP2EuZGVmYXVsdFZhbHVlPVwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZTphLmRlZmF1bHRWYWx1ZSE9PVwiXCIrYyYmKGEuZGVmYXVsdFZhbHVlPVwiXCIrYyl9dmFyIEZjPXtjaGFuZ2U6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25DaGFuZ2VcIixjYXB0dXJlZDpcIm9uQ2hhbmdlQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNoYW5nZSBjbGljayBmb2N1cyBpbnB1dCBrZXlkb3duIGtleXVwIHNlbGVjdGlvbmNoYW5nZVwiLnNwbGl0KFwiIFwiKX19O2Z1bmN0aW9uIEdjKGEsYixjKXthPXouZ2V0UG9vbGVkKEZjLmNoYW5nZSxhLGIsYyk7YS50eXBlPVwiY2hhbmdlXCI7SWIoYyk7UmEoYSk7cmV0dXJuIGF9dmFyIEpjPW51bGwsS2M9bnVsbDtmdW5jdGlvbiBMYyhhKXtFYShhKX1cbmZ1bmN0aW9uIE1jKGEpe3ZhciBiPUthKGEpO2lmKFdiKGIpKXJldHVybiBhfWZ1bmN0aW9uIE5jKGEsYil7aWYoXCJjaGFuZ2VcIj09PWEpcmV0dXJuIGJ9dmFyIE9jPSExO1NhJiYoT2M9U2IoXCJpbnB1dFwiKSYmKCFkb2N1bWVudC5kb2N1bWVudE1vZGV8fDk8ZG9jdW1lbnQuZG9jdW1lbnRNb2RlKSk7ZnVuY3Rpb24gUGMoKXtKYyYmKEpjLmRldGFjaEV2ZW50KFwib25wcm9wZXJ0eWNoYW5nZVwiLFFjKSxLYz1KYz1udWxsKX1mdW5jdGlvbiBRYyhhKXtcInZhbHVlXCI9PT1hLnByb3BlcnR5TmFtZSYmTWMoS2MpJiYoYT1HYyhLYyxhLFJiKGEpKSxPYihMYyxhKSl9ZnVuY3Rpb24gUmMoYSxiLGMpe1wiZm9jdXNcIj09PWE/KFBjKCksSmM9YixLYz1jLEpjLmF0dGFjaEV2ZW50KFwib25wcm9wZXJ0eWNoYW5nZVwiLFFjKSk6XCJibHVyXCI9PT1hJiZQYygpfWZ1bmN0aW9uIFNjKGEpe2lmKFwic2VsZWN0aW9uY2hhbmdlXCI9PT1hfHxcImtleXVwXCI9PT1hfHxcImtleWRvd25cIj09PWEpcmV0dXJuIE1jKEtjKX1cbmZ1bmN0aW9uIFRjKGEsYil7aWYoXCJjbGlja1wiPT09YSlyZXR1cm4gTWMoYil9ZnVuY3Rpb24gVWMoYSxiKXtpZihcImlucHV0XCI9PT1hfHxcImNoYW5nZVwiPT09YSlyZXR1cm4gTWMoYil9XG52YXIgVmM9e2V2ZW50VHlwZXM6RmMsX2lzSW5wdXRFdmVudFN1cHBvcnRlZDpPYyxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPWI/S2EoYik6d2luZG93LGY9dm9pZCAwLGc9dm9pZCAwLGg9ZS5ub2RlTmFtZSYmZS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO1wic2VsZWN0XCI9PT1ofHxcImlucHV0XCI9PT1oJiZcImZpbGVcIj09PWUudHlwZT9mPU5jOlFiKGUpP09jP2Y9VWM6KGY9U2MsZz1SYyk6KGg9ZS5ub2RlTmFtZSkmJlwiaW5wdXRcIj09PWgudG9Mb3dlckNhc2UoKSYmKFwiY2hlY2tib3hcIj09PWUudHlwZXx8XCJyYWRpb1wiPT09ZS50eXBlKSYmKGY9VGMpO2lmKGYmJihmPWYoYSxiKSkpcmV0dXJuIEdjKGYsYyxkKTtnJiZnKGEsZSxiKTtcImJsdXJcIj09PWEmJihhPWUuX3dyYXBwZXJTdGF0ZSkmJmEuY29udHJvbGxlZCYmXCJudW1iZXJcIj09PWUudHlwZSYmRGMoZSxcIm51bWJlclwiLGUudmFsdWUpfX0sV2M9ei5leHRlbmQoe3ZpZXc6bnVsbCxkZXRhaWw6bnVsbH0pLFhjPXtBbHQ6XCJhbHRLZXlcIixcbkNvbnRyb2w6XCJjdHJsS2V5XCIsTWV0YTpcIm1ldGFLZXlcIixTaGlmdDpcInNoaWZ0S2V5XCJ9O2Z1bmN0aW9uIFljKGEpe3ZhciBiPXRoaXMubmF0aXZlRXZlbnQ7cmV0dXJuIGIuZ2V0TW9kaWZpZXJTdGF0ZT9iLmdldE1vZGlmaWVyU3RhdGUoYSk6KGE9WGNbYV0pPyEhYlthXTohMX1mdW5jdGlvbiBaYygpe3JldHVybiBZY31cbnZhciAkYz0wLGFkPTAsYmQ9ITEsY2Q9ITEsZGQ9V2MuZXh0ZW5kKHtzY3JlZW5YOm51bGwsc2NyZWVuWTpudWxsLGNsaWVudFg6bnVsbCxjbGllbnRZOm51bGwscGFnZVg6bnVsbCxwYWdlWTpudWxsLGN0cmxLZXk6bnVsbCxzaGlmdEtleTpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxnZXRNb2RpZmllclN0YXRlOlpjLGJ1dHRvbjpudWxsLGJ1dHRvbnM6bnVsbCxyZWxhdGVkVGFyZ2V0OmZ1bmN0aW9uKGEpe3JldHVybiBhLnJlbGF0ZWRUYXJnZXR8fChhLmZyb21FbGVtZW50PT09YS5zcmNFbGVtZW50P2EudG9FbGVtZW50OmEuZnJvbUVsZW1lbnQpfSxtb3ZlbWVudFg6ZnVuY3Rpb24oYSl7aWYoXCJtb3ZlbWVudFhcImluIGEpcmV0dXJuIGEubW92ZW1lbnRYO3ZhciBiPSRjOyRjPWEuc2NyZWVuWDtyZXR1cm4gYmQ/XCJtb3VzZW1vdmVcIj09PWEudHlwZT9hLnNjcmVlblgtYjowOihiZD0hMCwwKX0sbW92ZW1lbnRZOmZ1bmN0aW9uKGEpe2lmKFwibW92ZW1lbnRZXCJpbiBhKXJldHVybiBhLm1vdmVtZW50WTtcbnZhciBiPWFkO2FkPWEuc2NyZWVuWTtyZXR1cm4gY2Q/XCJtb3VzZW1vdmVcIj09PWEudHlwZT9hLnNjcmVlblktYjowOihjZD0hMCwwKX19KSxlZD1kZC5leHRlbmQoe3BvaW50ZXJJZDpudWxsLHdpZHRoOm51bGwsaGVpZ2h0Om51bGwscHJlc3N1cmU6bnVsbCx0YW5nZW50aWFsUHJlc3N1cmU6bnVsbCx0aWx0WDpudWxsLHRpbHRZOm51bGwsdHdpc3Q6bnVsbCxwb2ludGVyVHlwZTpudWxsLGlzUHJpbWFyeTpudWxsfSksZmQ9e21vdXNlRW50ZXI6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvbk1vdXNlRW50ZXJcIixkZXBlbmRlbmNpZXM6W1wibW91c2VvdXRcIixcIm1vdXNlb3ZlclwiXX0sbW91c2VMZWF2ZTp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uTW91c2VMZWF2ZVwiLGRlcGVuZGVuY2llczpbXCJtb3VzZW91dFwiLFwibW91c2VvdmVyXCJdfSxwb2ludGVyRW50ZXI6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvblBvaW50ZXJFbnRlclwiLGRlcGVuZGVuY2llczpbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyb3ZlclwiXX0scG9pbnRlckxlYXZlOntyZWdpc3RyYXRpb25OYW1lOlwib25Qb2ludGVyTGVhdmVcIixcbmRlcGVuZGVuY2llczpbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyb3ZlclwiXX19LGdkPXtldmVudFR5cGVzOmZkLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9XCJtb3VzZW92ZXJcIj09PWF8fFwicG9pbnRlcm92ZXJcIj09PWEsZj1cIm1vdXNlb3V0XCI9PT1hfHxcInBvaW50ZXJvdXRcIj09PWE7aWYoZSYmKGMucmVsYXRlZFRhcmdldHx8Yy5mcm9tRWxlbWVudCl8fCFmJiYhZSlyZXR1cm4gbnVsbDtlPWQud2luZG93PT09ZD9kOihlPWQub3duZXJEb2N1bWVudCk/ZS5kZWZhdWx0Vmlld3x8ZS5wYXJlbnRXaW5kb3c6d2luZG93O2Y/KGY9YixiPShiPWMucmVsYXRlZFRhcmdldHx8Yy50b0VsZW1lbnQpP0lhKGIpOm51bGwpOmY9bnVsbDtpZihmPT09YilyZXR1cm4gbnVsbDt2YXIgZz12b2lkIDAsaD12b2lkIDAsaz12b2lkIDAsbD12b2lkIDA7aWYoXCJtb3VzZW91dFwiPT09YXx8XCJtb3VzZW92ZXJcIj09PWEpZz1kZCxoPWZkLm1vdXNlTGVhdmUsaz1mZC5tb3VzZUVudGVyLGw9XCJtb3VzZVwiO1xuZWxzZSBpZihcInBvaW50ZXJvdXRcIj09PWF8fFwicG9pbnRlcm92ZXJcIj09PWEpZz1lZCxoPWZkLnBvaW50ZXJMZWF2ZSxrPWZkLnBvaW50ZXJFbnRlcixsPVwicG9pbnRlclwiO3ZhciBtPW51bGw9PWY/ZTpLYShmKTtlPW51bGw9PWI/ZTpLYShiKTthPWcuZ2V0UG9vbGVkKGgsZixjLGQpO2EudHlwZT1sK1wibGVhdmVcIjthLnRhcmdldD1tO2EucmVsYXRlZFRhcmdldD1lO2M9Zy5nZXRQb29sZWQoayxiLGMsZCk7Yy50eXBlPWwrXCJlbnRlclwiO2MudGFyZ2V0PWU7Yy5yZWxhdGVkVGFyZ2V0PW07ZD1iO2lmKGYmJmQpYTp7Yj1mO2U9ZDtsPTA7Zm9yKGc9YjtnO2c9TWEoZykpbCsrO2c9MDtmb3Ioaz1lO2s7az1NYShrKSlnKys7Zm9yKDswPGwtZzspYj1NYShiKSxsLS07Zm9yKDswPGctbDspZT1NYShlKSxnLS07Zm9yKDtsLS07KXtpZihiPT09ZXx8Yj09PWUuYWx0ZXJuYXRlKWJyZWFrIGE7Yj1NYShiKTtlPU1hKGUpfWI9bnVsbH1lbHNlIGI9bnVsbDtlPWI7Zm9yKGI9W107ZiYmZiE9PWU7KXtsPVxuZi5hbHRlcm5hdGU7aWYobnVsbCE9PWwmJmw9PT1lKWJyZWFrO2IucHVzaChmKTtmPU1hKGYpfWZvcihmPVtdO2QmJmQhPT1lOyl7bD1kLmFsdGVybmF0ZTtpZihudWxsIT09bCYmbD09PWUpYnJlYWs7Zi5wdXNoKGQpO2Q9TWEoZCl9Zm9yKGQ9MDtkPGIubGVuZ3RoO2QrKylQYShiW2RdLFwiYnViYmxlZFwiLGEpO2ZvcihkPWYubGVuZ3RoOzA8ZC0tOylQYShmW2RdLFwiY2FwdHVyZWRcIixjKTtyZXR1cm5bYSxjXX19LGhkPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7ZnVuY3Rpb24gaWQoYSxiKXtyZXR1cm4gYT09PWI/MCE9PWF8fDAhPT1ifHwxL2E9PT0xL2I6YSE9PWEmJmIhPT1ifVxuZnVuY3Rpb24gamQoYSxiKXtpZihpZChhLGIpKXJldHVybiEwO2lmKFwib2JqZWN0XCIhPT10eXBlb2YgYXx8bnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYnx8bnVsbD09PWIpcmV0dXJuITE7dmFyIGM9T2JqZWN0LmtleXMoYSksZD1PYmplY3Qua2V5cyhiKTtpZihjLmxlbmd0aCE9PWQubGVuZ3RoKXJldHVybiExO2ZvcihkPTA7ZDxjLmxlbmd0aDtkKyspaWYoIWhkLmNhbGwoYixjW2RdKXx8IWlkKGFbY1tkXV0sYltjW2RdXSkpcmV0dXJuITE7cmV0dXJuITB9ZnVuY3Rpb24ga2QoYSl7dmFyIGI9YTtpZihhLmFsdGVybmF0ZSlmb3IoO2IucmV0dXJuOyliPWIucmV0dXJuO2Vsc2V7aWYoMCE9PShiLmVmZmVjdFRhZyYyKSlyZXR1cm4gMTtmb3IoO2IucmV0dXJuOylpZihiPWIucmV0dXJuLDAhPT0oYi5lZmZlY3RUYWcmMikpcmV0dXJuIDF9cmV0dXJuIDM9PT1iLnRhZz8yOjN9ZnVuY3Rpb24gbGQoYSl7MiE9PWtkKGEpP3QoXCIxODhcIik6dm9pZCAwfVxuZnVuY3Rpb24gbWQoYSl7dmFyIGI9YS5hbHRlcm5hdGU7aWYoIWIpcmV0dXJuIGI9a2QoYSksMz09PWI/dChcIjE4OFwiKTp2b2lkIDAsMT09PWI/bnVsbDphO2Zvcih2YXIgYz1hLGQ9Yjs7KXt2YXIgZT1jLnJldHVybixmPWU/ZS5hbHRlcm5hdGU6bnVsbDtpZighZXx8IWYpYnJlYWs7aWYoZS5jaGlsZD09PWYuY2hpbGQpe2Zvcih2YXIgZz1lLmNoaWxkO2c7KXtpZihnPT09YylyZXR1cm4gbGQoZSksYTtpZihnPT09ZClyZXR1cm4gbGQoZSksYjtnPWcuc2libGluZ310KFwiMTg4XCIpfWlmKGMucmV0dXJuIT09ZC5yZXR1cm4pYz1lLGQ9ZjtlbHNle2c9ITE7Zm9yKHZhciBoPWUuY2hpbGQ7aDspe2lmKGg9PT1jKXtnPSEwO2M9ZTtkPWY7YnJlYWt9aWYoaD09PWQpe2c9ITA7ZD1lO2M9ZjticmVha31oPWguc2libGluZ31pZighZyl7Zm9yKGg9Zi5jaGlsZDtoOyl7aWYoaD09PWMpe2c9ITA7Yz1mO2Q9ZTticmVha31pZihoPT09ZCl7Zz0hMDtkPWY7Yz1lO2JyZWFrfWg9aC5zaWJsaW5nfWc/XG52b2lkIDA6dChcIjE4OVwiKX19Yy5hbHRlcm5hdGUhPT1kP3QoXCIxOTBcIik6dm9pZCAwfTMhPT1jLnRhZz90KFwiMTg4XCIpOnZvaWQgMDtyZXR1cm4gYy5zdGF0ZU5vZGUuY3VycmVudD09PWM/YTpifWZ1bmN0aW9uIG5kKGEpe2E9bWQoYSk7aWYoIWEpcmV0dXJuIG51bGw7Zm9yKHZhciBiPWE7Oyl7aWYoNT09PWIudGFnfHw2PT09Yi50YWcpcmV0dXJuIGI7aWYoYi5jaGlsZCliLmNoaWxkLnJldHVybj1iLGI9Yi5jaGlsZDtlbHNle2lmKGI9PT1hKWJyZWFrO2Zvcig7IWIuc2libGluZzspe2lmKCFiLnJldHVybnx8Yi5yZXR1cm49PT1hKXJldHVybiBudWxsO2I9Yi5yZXR1cm59Yi5zaWJsaW5nLnJldHVybj1iLnJldHVybjtiPWIuc2libGluZ319cmV0dXJuIG51bGx9XG52YXIgb2Q9ei5leHRlbmQoe2FuaW1hdGlvbk5hbWU6bnVsbCxlbGFwc2VkVGltZTpudWxsLHBzZXVkb0VsZW1lbnQ6bnVsbH0pLHBkPXouZXh0ZW5kKHtjbGlwYm9hcmREYXRhOmZ1bmN0aW9uKGEpe3JldHVyblwiY2xpcGJvYXJkRGF0YVwiaW4gYT9hLmNsaXBib2FyZERhdGE6d2luZG93LmNsaXBib2FyZERhdGF9fSkscWQ9V2MuZXh0ZW5kKHtyZWxhdGVkVGFyZ2V0Om51bGx9KTtmdW5jdGlvbiByZChhKXt2YXIgYj1hLmtleUNvZGU7XCJjaGFyQ29kZVwiaW4gYT8oYT1hLmNoYXJDb2RlLDA9PT1hJiYxMz09PWImJihhPTEzKSk6YT1iOzEwPT09YSYmKGE9MTMpO3JldHVybiAzMjw9YXx8MTM9PT1hP2E6MH1cbnZhciBzZD17RXNjOlwiRXNjYXBlXCIsU3BhY2ViYXI6XCIgXCIsTGVmdDpcIkFycm93TGVmdFwiLFVwOlwiQXJyb3dVcFwiLFJpZ2h0OlwiQXJyb3dSaWdodFwiLERvd246XCJBcnJvd0Rvd25cIixEZWw6XCJEZWxldGVcIixXaW46XCJPU1wiLE1lbnU6XCJDb250ZXh0TWVudVwiLEFwcHM6XCJDb250ZXh0TWVudVwiLFNjcm9sbDpcIlNjcm9sbExvY2tcIixNb3pQcmludGFibGVLZXk6XCJVbmlkZW50aWZpZWRcIn0sdGQ9ezg6XCJCYWNrc3BhY2VcIiw5OlwiVGFiXCIsMTI6XCJDbGVhclwiLDEzOlwiRW50ZXJcIiwxNjpcIlNoaWZ0XCIsMTc6XCJDb250cm9sXCIsMTg6XCJBbHRcIiwxOTpcIlBhdXNlXCIsMjA6XCJDYXBzTG9ja1wiLDI3OlwiRXNjYXBlXCIsMzI6XCIgXCIsMzM6XCJQYWdlVXBcIiwzNDpcIlBhZ2VEb3duXCIsMzU6XCJFbmRcIiwzNjpcIkhvbWVcIiwzNzpcIkFycm93TGVmdFwiLDM4OlwiQXJyb3dVcFwiLDM5OlwiQXJyb3dSaWdodFwiLDQwOlwiQXJyb3dEb3duXCIsNDU6XCJJbnNlcnRcIiw0NjpcIkRlbGV0ZVwiLDExMjpcIkYxXCIsMTEzOlwiRjJcIiwxMTQ6XCJGM1wiLDExNTpcIkY0XCIsXG4xMTY6XCJGNVwiLDExNzpcIkY2XCIsMTE4OlwiRjdcIiwxMTk6XCJGOFwiLDEyMDpcIkY5XCIsMTIxOlwiRjEwXCIsMTIyOlwiRjExXCIsMTIzOlwiRjEyXCIsMTQ0OlwiTnVtTG9ja1wiLDE0NTpcIlNjcm9sbExvY2tcIiwyMjQ6XCJNZXRhXCJ9LHVkPVdjLmV4dGVuZCh7a2V5OmZ1bmN0aW9uKGEpe2lmKGEua2V5KXt2YXIgYj1zZFthLmtleV18fGEua2V5O2lmKFwiVW5pZGVudGlmaWVkXCIhPT1iKXJldHVybiBifXJldHVyblwia2V5cHJlc3NcIj09PWEudHlwZT8oYT1yZChhKSwxMz09PWE/XCJFbnRlclwiOlN0cmluZy5mcm9tQ2hhckNvZGUoYSkpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/dGRbYS5rZXlDb2RlXXx8XCJVbmlkZW50aWZpZWRcIjpcIlwifSxsb2NhdGlvbjpudWxsLGN0cmxLZXk6bnVsbCxzaGlmdEtleTpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxyZXBlYXQ6bnVsbCxsb2NhbGU6bnVsbCxnZXRNb2RpZmllclN0YXRlOlpjLGNoYXJDb2RlOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5cHJlc3NcIj09PVxuYS50eXBlP3JkKGEpOjB9LGtleUNvZGU6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9hLmtleUNvZGU6MH0sd2hpY2g6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlwcmVzc1wiPT09YS50eXBlP3JkKGEpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/YS5rZXlDb2RlOjB9fSksdmQ9ZGQuZXh0ZW5kKHtkYXRhVHJhbnNmZXI6bnVsbH0pLHdkPVdjLmV4dGVuZCh7dG91Y2hlczpudWxsLHRhcmdldFRvdWNoZXM6bnVsbCxjaGFuZ2VkVG91Y2hlczpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxjdHJsS2V5Om51bGwsc2hpZnRLZXk6bnVsbCxnZXRNb2RpZmllclN0YXRlOlpjfSkseGQ9ei5leHRlbmQoe3Byb3BlcnR5TmFtZTpudWxsLGVsYXBzZWRUaW1lOm51bGwscHNldWRvRWxlbWVudDpudWxsfSkseWQ9ZGQuZXh0ZW5kKHtkZWx0YVg6ZnVuY3Rpb24oYSl7cmV0dXJuXCJkZWx0YVhcImluIGE/YS5kZWx0YVg6XCJ3aGVlbERlbHRhWFwiaW5cbmE/LWEud2hlZWxEZWx0YVg6MH0sZGVsdGFZOmZ1bmN0aW9uKGEpe3JldHVyblwiZGVsdGFZXCJpbiBhP2EuZGVsdGFZOlwid2hlZWxEZWx0YVlcImluIGE/LWEud2hlZWxEZWx0YVk6XCJ3aGVlbERlbHRhXCJpbiBhPy1hLndoZWVsRGVsdGE6MH0sZGVsdGFaOm51bGwsZGVsdGFNb2RlOm51bGx9KSx6ZD1bW1wiYWJvcnRcIixcImFib3J0XCJdLFtZYSxcImFuaW1hdGlvbkVuZFwiXSxbWmEsXCJhbmltYXRpb25JdGVyYXRpb25cIl0sWyRhLFwiYW5pbWF0aW9uU3RhcnRcIl0sW1wiY2FucGxheVwiLFwiY2FuUGxheVwiXSxbXCJjYW5wbGF5dGhyb3VnaFwiLFwiY2FuUGxheVRocm91Z2hcIl0sW1wiZHJhZ1wiLFwiZHJhZ1wiXSxbXCJkcmFnZW50ZXJcIixcImRyYWdFbnRlclwiXSxbXCJkcmFnZXhpdFwiLFwiZHJhZ0V4aXRcIl0sW1wiZHJhZ2xlYXZlXCIsXCJkcmFnTGVhdmVcIl0sW1wiZHJhZ292ZXJcIixcImRyYWdPdmVyXCJdLFtcImR1cmF0aW9uY2hhbmdlXCIsXCJkdXJhdGlvbkNoYW5nZVwiXSxbXCJlbXB0aWVkXCIsXCJlbXB0aWVkXCJdLFtcImVuY3J5cHRlZFwiLFwiZW5jcnlwdGVkXCJdLFxuW1wiZW5kZWRcIixcImVuZGVkXCJdLFtcImVycm9yXCIsXCJlcnJvclwiXSxbXCJnb3Rwb2ludGVyY2FwdHVyZVwiLFwiZ290UG9pbnRlckNhcHR1cmVcIl0sW1wibG9hZFwiLFwibG9hZFwiXSxbXCJsb2FkZWRkYXRhXCIsXCJsb2FkZWREYXRhXCJdLFtcImxvYWRlZG1ldGFkYXRhXCIsXCJsb2FkZWRNZXRhZGF0YVwiXSxbXCJsb2Fkc3RhcnRcIixcImxvYWRTdGFydFwiXSxbXCJsb3N0cG9pbnRlcmNhcHR1cmVcIixcImxvc3RQb2ludGVyQ2FwdHVyZVwiXSxbXCJtb3VzZW1vdmVcIixcIm1vdXNlTW92ZVwiXSxbXCJtb3VzZW91dFwiLFwibW91c2VPdXRcIl0sW1wibW91c2VvdmVyXCIsXCJtb3VzZU92ZXJcIl0sW1wicGxheWluZ1wiLFwicGxheWluZ1wiXSxbXCJwb2ludGVybW92ZVwiLFwicG9pbnRlck1vdmVcIl0sW1wicG9pbnRlcm91dFwiLFwicG9pbnRlck91dFwiXSxbXCJwb2ludGVyb3ZlclwiLFwicG9pbnRlck92ZXJcIl0sW1wicHJvZ3Jlc3NcIixcInByb2dyZXNzXCJdLFtcInNjcm9sbFwiLFwic2Nyb2xsXCJdLFtcInNlZWtpbmdcIixcInNlZWtpbmdcIl0sW1wic3RhbGxlZFwiLFwic3RhbGxlZFwiXSxcbltcInN1c3BlbmRcIixcInN1c3BlbmRcIl0sW1widGltZXVwZGF0ZVwiLFwidGltZVVwZGF0ZVwiXSxbXCJ0b2dnbGVcIixcInRvZ2dsZVwiXSxbXCJ0b3VjaG1vdmVcIixcInRvdWNoTW92ZVwiXSxbYWIsXCJ0cmFuc2l0aW9uRW5kXCJdLFtcIndhaXRpbmdcIixcIndhaXRpbmdcIl0sW1wid2hlZWxcIixcIndoZWVsXCJdXSxBZD17fSxCZD17fTtmdW5jdGlvbiBDZChhLGIpe3ZhciBjPWFbMF07YT1hWzFdO3ZhciBkPVwib25cIisoYVswXS50b1VwcGVyQ2FzZSgpK2Euc2xpY2UoMSkpO2I9e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOmQsY2FwdHVyZWQ6ZCtcIkNhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOltjXSxpc0ludGVyYWN0aXZlOmJ9O0FkW2FdPWI7QmRbY109Yn1cbltbXCJibHVyXCIsXCJibHVyXCJdLFtcImNhbmNlbFwiLFwiY2FuY2VsXCJdLFtcImNsaWNrXCIsXCJjbGlja1wiXSxbXCJjbG9zZVwiLFwiY2xvc2VcIl0sW1wiY29udGV4dG1lbnVcIixcImNvbnRleHRNZW51XCJdLFtcImNvcHlcIixcImNvcHlcIl0sW1wiY3V0XCIsXCJjdXRcIl0sW1wiYXV4Y2xpY2tcIixcImF1eENsaWNrXCJdLFtcImRibGNsaWNrXCIsXCJkb3VibGVDbGlja1wiXSxbXCJkcmFnZW5kXCIsXCJkcmFnRW5kXCJdLFtcImRyYWdzdGFydFwiLFwiZHJhZ1N0YXJ0XCJdLFtcImRyb3BcIixcImRyb3BcIl0sW1wiZm9jdXNcIixcImZvY3VzXCJdLFtcImlucHV0XCIsXCJpbnB1dFwiXSxbXCJpbnZhbGlkXCIsXCJpbnZhbGlkXCJdLFtcImtleWRvd25cIixcImtleURvd25cIl0sW1wia2V5cHJlc3NcIixcImtleVByZXNzXCJdLFtcImtleXVwXCIsXCJrZXlVcFwiXSxbXCJtb3VzZWRvd25cIixcIm1vdXNlRG93blwiXSxbXCJtb3VzZXVwXCIsXCJtb3VzZVVwXCJdLFtcInBhc3RlXCIsXCJwYXN0ZVwiXSxbXCJwYXVzZVwiLFwicGF1c2VcIl0sW1wicGxheVwiLFwicGxheVwiXSxbXCJwb2ludGVyY2FuY2VsXCIsXCJwb2ludGVyQ2FuY2VsXCJdLFxuW1wicG9pbnRlcmRvd25cIixcInBvaW50ZXJEb3duXCJdLFtcInBvaW50ZXJ1cFwiLFwicG9pbnRlclVwXCJdLFtcInJhdGVjaGFuZ2VcIixcInJhdGVDaGFuZ2VcIl0sW1wicmVzZXRcIixcInJlc2V0XCJdLFtcInNlZWtlZFwiLFwic2Vla2VkXCJdLFtcInN1Ym1pdFwiLFwic3VibWl0XCJdLFtcInRvdWNoY2FuY2VsXCIsXCJ0b3VjaENhbmNlbFwiXSxbXCJ0b3VjaGVuZFwiLFwidG91Y2hFbmRcIl0sW1widG91Y2hzdGFydFwiLFwidG91Y2hTdGFydFwiXSxbXCJ2b2x1bWVjaGFuZ2VcIixcInZvbHVtZUNoYW5nZVwiXV0uZm9yRWFjaChmdW5jdGlvbihhKXtDZChhLCEwKX0pO3pkLmZvckVhY2goZnVuY3Rpb24oYSl7Q2QoYSwhMSl9KTtcbnZhciBEZD17ZXZlbnRUeXBlczpBZCxpc0ludGVyYWN0aXZlVG9wTGV2ZWxFdmVudFR5cGU6ZnVuY3Rpb24oYSl7YT1CZFthXTtyZXR1cm4gdm9pZCAwIT09YSYmITA9PT1hLmlzSW50ZXJhY3RpdmV9LGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9QmRbYV07aWYoIWUpcmV0dXJuIG51bGw7c3dpdGNoKGEpe2Nhc2UgXCJrZXlwcmVzc1wiOmlmKDA9PT1yZChjKSlyZXR1cm4gbnVsbDtjYXNlIFwia2V5ZG93blwiOmNhc2UgXCJrZXl1cFwiOmE9dWQ7YnJlYWs7Y2FzZSBcImJsdXJcIjpjYXNlIFwiZm9jdXNcIjphPXFkO2JyZWFrO2Nhc2UgXCJjbGlja1wiOmlmKDI9PT1jLmJ1dHRvbilyZXR1cm4gbnVsbDtjYXNlIFwiYXV4Y2xpY2tcIjpjYXNlIFwiZGJsY2xpY2tcIjpjYXNlIFwibW91c2Vkb3duXCI6Y2FzZSBcIm1vdXNlbW92ZVwiOmNhc2UgXCJtb3VzZXVwXCI6Y2FzZSBcIm1vdXNlb3V0XCI6Y2FzZSBcIm1vdXNlb3ZlclwiOmNhc2UgXCJjb250ZXh0bWVudVwiOmE9ZGQ7YnJlYWs7Y2FzZSBcImRyYWdcIjpjYXNlIFwiZHJhZ2VuZFwiOmNhc2UgXCJkcmFnZW50ZXJcIjpjYXNlIFwiZHJhZ2V4aXRcIjpjYXNlIFwiZHJhZ2xlYXZlXCI6Y2FzZSBcImRyYWdvdmVyXCI6Y2FzZSBcImRyYWdzdGFydFwiOmNhc2UgXCJkcm9wXCI6YT1cbnZkO2JyZWFrO2Nhc2UgXCJ0b3VjaGNhbmNlbFwiOmNhc2UgXCJ0b3VjaGVuZFwiOmNhc2UgXCJ0b3VjaG1vdmVcIjpjYXNlIFwidG91Y2hzdGFydFwiOmE9d2Q7YnJlYWs7Y2FzZSBZYTpjYXNlIFphOmNhc2UgJGE6YT1vZDticmVhaztjYXNlIGFiOmE9eGQ7YnJlYWs7Y2FzZSBcInNjcm9sbFwiOmE9V2M7YnJlYWs7Y2FzZSBcIndoZWVsXCI6YT15ZDticmVhaztjYXNlIFwiY29weVwiOmNhc2UgXCJjdXRcIjpjYXNlIFwicGFzdGVcIjphPXBkO2JyZWFrO2Nhc2UgXCJnb3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJsb3N0cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwicG9pbnRlcmNhbmNlbFwiOmNhc2UgXCJwb2ludGVyZG93blwiOmNhc2UgXCJwb2ludGVybW92ZVwiOmNhc2UgXCJwb2ludGVyb3V0XCI6Y2FzZSBcInBvaW50ZXJvdmVyXCI6Y2FzZSBcInBvaW50ZXJ1cFwiOmE9ZWQ7YnJlYWs7ZGVmYXVsdDphPXp9Yj1hLmdldFBvb2xlZChlLGIsYyxkKTtSYShiKTtyZXR1cm4gYn19LEVkPURkLmlzSW50ZXJhY3RpdmVUb3BMZXZlbEV2ZW50VHlwZSxcbkZkPVtdO2Z1bmN0aW9uIEdkKGEpe3ZhciBiPWEudGFyZ2V0SW5zdCxjPWI7ZG97aWYoIWMpe2EuYW5jZXN0b3JzLnB1c2goYyk7YnJlYWt9dmFyIGQ7Zm9yKGQ9YztkLnJldHVybjspZD1kLnJldHVybjtkPTMhPT1kLnRhZz9udWxsOmQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87aWYoIWQpYnJlYWs7YS5hbmNlc3RvcnMucHVzaChjKTtjPUlhKGQpfXdoaWxlKGMpO2ZvcihjPTA7YzxhLmFuY2VzdG9ycy5sZW5ndGg7YysrKXtiPWEuYW5jZXN0b3JzW2NdO3ZhciBlPVJiKGEubmF0aXZlRXZlbnQpO2Q9YS50b3BMZXZlbFR5cGU7Zm9yKHZhciBmPWEubmF0aXZlRXZlbnQsZz1udWxsLGg9MDtoPHBhLmxlbmd0aDtoKyspe3ZhciBrPXBhW2hdO2smJihrPWsuZXh0cmFjdEV2ZW50cyhkLGIsZixlKSkmJihnPXlhKGcsaykpfUVhKGcpfX12YXIgSGQ9ITA7XG5mdW5jdGlvbiBIKGEsYil7aWYoIWIpcmV0dXJuIG51bGw7dmFyIGM9KEVkKGEpP0lkOkpkKS5iaW5kKG51bGwsYSk7Yi5hZGRFdmVudExpc3RlbmVyKGEsYywhMSl9ZnVuY3Rpb24gS2QoYSxiKXtpZighYilyZXR1cm4gbnVsbDt2YXIgYz0oRWQoYSk/SWQ6SmQpLmJpbmQobnVsbCxhKTtiLmFkZEV2ZW50TGlzdGVuZXIoYSxjLCEwKX1mdW5jdGlvbiBJZChhLGIpe0xiKEpkLGEsYil9XG5mdW5jdGlvbiBKZChhLGIpe2lmKEhkKXt2YXIgYz1SYihiKTtjPUlhKGMpO251bGw9PT1jfHxcIm51bWJlclwiIT09dHlwZW9mIGMudGFnfHwyPT09a2QoYyl8fChjPW51bGwpO2lmKEZkLmxlbmd0aCl7dmFyIGQ9RmQucG9wKCk7ZC50b3BMZXZlbFR5cGU9YTtkLm5hdGl2ZUV2ZW50PWI7ZC50YXJnZXRJbnN0PWM7YT1kfWVsc2UgYT17dG9wTGV2ZWxUeXBlOmEsbmF0aXZlRXZlbnQ6Yix0YXJnZXRJbnN0OmMsYW5jZXN0b3JzOltdfTt0cnl7T2IoR2QsYSl9ZmluYWxseXthLnRvcExldmVsVHlwZT1udWxsLGEubmF0aXZlRXZlbnQ9bnVsbCxhLnRhcmdldEluc3Q9bnVsbCxhLmFuY2VzdG9ycy5sZW5ndGg9MCwxMD5GZC5sZW5ndGgmJkZkLnB1c2goYSl9fX12YXIgTGQ9e30sTWQ9MCxOZD1cIl9yZWFjdExpc3RlbmVyc0lEXCIrKFwiXCIrTWF0aC5yYW5kb20oKSkuc2xpY2UoMik7XG5mdW5jdGlvbiBPZChhKXtPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoYSxOZCl8fChhW05kXT1NZCsrLExkW2FbTmRdXT17fSk7cmV0dXJuIExkW2FbTmRdXX1mdW5jdGlvbiBQZChhKXthPWF8fChcInVuZGVmaW5lZFwiIT09dHlwZW9mIGRvY3VtZW50P2RvY3VtZW50OnZvaWQgMCk7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBhKXJldHVybiBudWxsO3RyeXtyZXR1cm4gYS5hY3RpdmVFbGVtZW50fHxhLmJvZHl9Y2F0Y2goYil7cmV0dXJuIGEuYm9keX19ZnVuY3Rpb24gUWQoYSl7Zm9yKDthJiZhLmZpcnN0Q2hpbGQ7KWE9YS5maXJzdENoaWxkO3JldHVybiBhfVxuZnVuY3Rpb24gUmQoYSxiKXt2YXIgYz1RZChhKTthPTA7Zm9yKHZhciBkO2M7KXtpZigzPT09Yy5ub2RlVHlwZSl7ZD1hK2MudGV4dENvbnRlbnQubGVuZ3RoO2lmKGE8PWImJmQ+PWIpcmV0dXJue25vZGU6YyxvZmZzZXQ6Yi1hfTthPWR9YTp7Zm9yKDtjOyl7aWYoYy5uZXh0U2libGluZyl7Yz1jLm5leHRTaWJsaW5nO2JyZWFrIGF9Yz1jLnBhcmVudE5vZGV9Yz12b2lkIDB9Yz1RZChjKX19ZnVuY3Rpb24gU2QoYSxiKXtyZXR1cm4gYSYmYj9hPT09Yj8hMDphJiYzPT09YS5ub2RlVHlwZT8hMTpiJiYzPT09Yi5ub2RlVHlwZT9TZChhLGIucGFyZW50Tm9kZSk6XCJjb250YWluc1wiaW4gYT9hLmNvbnRhaW5zKGIpOmEuY29tcGFyZURvY3VtZW50UG9zaXRpb24/ISEoYS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbihiKSYxNik6ITE6ITF9XG5mdW5jdGlvbiBUZCgpe2Zvcih2YXIgYT13aW5kb3csYj1QZCgpO2IgaW5zdGFuY2VvZiBhLkhUTUxJRnJhbWVFbGVtZW50Oyl7dHJ5e2E9Yi5jb250ZW50RG9jdW1lbnQuZGVmYXVsdFZpZXd9Y2F0Y2goYyl7YnJlYWt9Yj1QZChhLmRvY3VtZW50KX1yZXR1cm4gYn1mdW5jdGlvbiBVZChhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuIGImJihcImlucHV0XCI9PT1iJiYoXCJ0ZXh0XCI9PT1hLnR5cGV8fFwic2VhcmNoXCI9PT1hLnR5cGV8fFwidGVsXCI9PT1hLnR5cGV8fFwidXJsXCI9PT1hLnR5cGV8fFwicGFzc3dvcmRcIj09PWEudHlwZSl8fFwidGV4dGFyZWFcIj09PWJ8fFwidHJ1ZVwiPT09YS5jb250ZW50RWRpdGFibGUpfVxudmFyIFZkPVNhJiZcImRvY3VtZW50TW9kZVwiaW4gZG9jdW1lbnQmJjExPj1kb2N1bWVudC5kb2N1bWVudE1vZGUsV2Q9e3NlbGVjdDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvblNlbGVjdFwiLGNhcHR1cmVkOlwib25TZWxlY3RDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY29udGV4dG1lbnUgZHJhZ2VuZCBmb2N1cyBrZXlkb3duIGtleXVwIG1vdXNlZG93biBtb3VzZXVwIHNlbGVjdGlvbmNoYW5nZVwiLnNwbGl0KFwiIFwiKX19LFhkPW51bGwsWWQ9bnVsbCxaZD1udWxsLCRkPSExO1xuZnVuY3Rpb24gYWUoYSxiKXt2YXIgYz1iLndpbmRvdz09PWI/Yi5kb2N1bWVudDo5PT09Yi5ub2RlVHlwZT9iOmIub3duZXJEb2N1bWVudDtpZigkZHx8bnVsbD09WGR8fFhkIT09UGQoYykpcmV0dXJuIG51bGw7Yz1YZDtcInNlbGVjdGlvblN0YXJ0XCJpbiBjJiZVZChjKT9jPXtzdGFydDpjLnNlbGVjdGlvblN0YXJ0LGVuZDpjLnNlbGVjdGlvbkVuZH06KGM9KGMub3duZXJEb2N1bWVudCYmYy5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3fHx3aW5kb3cpLmdldFNlbGVjdGlvbigpLGM9e2FuY2hvck5vZGU6Yy5hbmNob3JOb2RlLGFuY2hvck9mZnNldDpjLmFuY2hvck9mZnNldCxmb2N1c05vZGU6Yy5mb2N1c05vZGUsZm9jdXNPZmZzZXQ6Yy5mb2N1c09mZnNldH0pO3JldHVybiBaZCYmamQoWmQsYyk/bnVsbDooWmQ9YyxhPXouZ2V0UG9vbGVkKFdkLnNlbGVjdCxZZCxhLGIpLGEudHlwZT1cInNlbGVjdFwiLGEudGFyZ2V0PVhkLFJhKGEpLGEpfVxudmFyIGJlPXtldmVudFR5cGVzOldkLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9ZC53aW5kb3c9PT1kP2QuZG9jdW1lbnQ6OT09PWQubm9kZVR5cGU/ZDpkLm93bmVyRG9jdW1lbnQsZjtpZighKGY9IWUpKXthOntlPU9kKGUpO2Y9dGEub25TZWxlY3Q7Zm9yKHZhciBnPTA7ZzxmLmxlbmd0aDtnKyspe3ZhciBoPWZbZ107aWYoIWUuaGFzT3duUHJvcGVydHkoaCl8fCFlW2hdKXtlPSExO2JyZWFrIGF9fWU9ITB9Zj0hZX1pZihmKXJldHVybiBudWxsO2U9Yj9LYShiKTp3aW5kb3c7c3dpdGNoKGEpe2Nhc2UgXCJmb2N1c1wiOmlmKFFiKGUpfHxcInRydWVcIj09PWUuY29udGVudEVkaXRhYmxlKVhkPWUsWWQ9YixaZD1udWxsO2JyZWFrO2Nhc2UgXCJibHVyXCI6WmQ9WWQ9WGQ9bnVsbDticmVhaztjYXNlIFwibW91c2Vkb3duXCI6JGQ9ITA7YnJlYWs7Y2FzZSBcImNvbnRleHRtZW51XCI6Y2FzZSBcIm1vdXNldXBcIjpjYXNlIFwiZHJhZ2VuZFwiOnJldHVybiAkZD0hMSxhZShjLGQpO2Nhc2UgXCJzZWxlY3Rpb25jaGFuZ2VcIjppZihWZClicmVhaztcbmNhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXVwXCI6cmV0dXJuIGFlKGMsZCl9cmV0dXJuIG51bGx9fTtDYS5pbmplY3RFdmVudFBsdWdpbk9yZGVyKFwiUmVzcG9uZGVyRXZlbnRQbHVnaW4gU2ltcGxlRXZlbnRQbHVnaW4gRW50ZXJMZWF2ZUV2ZW50UGx1Z2luIENoYW5nZUV2ZW50UGx1Z2luIFNlbGVjdEV2ZW50UGx1Z2luIEJlZm9yZUlucHV0RXZlbnRQbHVnaW5cIi5zcGxpdChcIiBcIikpO3VhPUxhO3ZhPUphO3dhPUthO0NhLmluamVjdEV2ZW50UGx1Z2luc0J5TmFtZSh7U2ltcGxlRXZlbnRQbHVnaW46RGQsRW50ZXJMZWF2ZUV2ZW50UGx1Z2luOmdkLENoYW5nZUV2ZW50UGx1Z2luOlZjLFNlbGVjdEV2ZW50UGx1Z2luOmJlLEJlZm9yZUlucHV0RXZlbnRQbHVnaW46QmJ9KTtmdW5jdGlvbiBkZShhKXt2YXIgYj1cIlwiO2FhLkNoaWxkcmVuLmZvckVhY2goYSxmdW5jdGlvbihhKXtudWxsIT1hJiYoYis9YSl9KTtyZXR1cm4gYn1cbmZ1bmN0aW9uIGVlKGEsYil7YT1uKHtjaGlsZHJlbjp2b2lkIDB9LGIpO2lmKGI9ZGUoYi5jaGlsZHJlbikpYS5jaGlsZHJlbj1iO3JldHVybiBhfWZ1bmN0aW9uIGZlKGEsYixjLGQpe2E9YS5vcHRpb25zO2lmKGIpe2I9e307Zm9yKHZhciBlPTA7ZTxjLmxlbmd0aDtlKyspYltcIiRcIitjW2VdXT0hMDtmb3IoYz0wO2M8YS5sZW5ndGg7YysrKWU9Yi5oYXNPd25Qcm9wZXJ0eShcIiRcIithW2NdLnZhbHVlKSxhW2NdLnNlbGVjdGVkIT09ZSYmKGFbY10uc2VsZWN0ZWQ9ZSksZSYmZCYmKGFbY10uZGVmYXVsdFNlbGVjdGVkPSEwKX1lbHNle2M9XCJcIit5YyhjKTtiPW51bGw7Zm9yKGU9MDtlPGEubGVuZ3RoO2UrKyl7aWYoYVtlXS52YWx1ZT09PWMpe2FbZV0uc2VsZWN0ZWQ9ITA7ZCYmKGFbZV0uZGVmYXVsdFNlbGVjdGVkPSEwKTtyZXR1cm59bnVsbCE9PWJ8fGFbZV0uZGlzYWJsZWR8fChiPWFbZV0pfW51bGwhPT1iJiYoYi5zZWxlY3RlZD0hMCl9fVxuZnVuY3Rpb24gZ2UoYSxiKXtudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MP3QoXCI5MVwiKTp2b2lkIDA7cmV0dXJuIG4oe30sYix7dmFsdWU6dm9pZCAwLGRlZmF1bHRWYWx1ZTp2b2lkIDAsY2hpbGRyZW46XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlfSl9ZnVuY3Rpb24gaGUoYSxiKXt2YXIgYz1iLnZhbHVlO251bGw9PWMmJihjPWIuZGVmYXVsdFZhbHVlLGI9Yi5jaGlsZHJlbixudWxsIT1iJiYobnVsbCE9Yz90KFwiOTJcIik6dm9pZCAwLEFycmF5LmlzQXJyYXkoYikmJigxPj1iLmxlbmd0aD92b2lkIDA6dChcIjkzXCIpLGI9YlswXSksYz1iKSxudWxsPT1jJiYoYz1cIlwiKSk7YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsVmFsdWU6eWMoYyl9fVxuZnVuY3Rpb24gaWUoYSxiKXt2YXIgYz15YyhiLnZhbHVlKSxkPXljKGIuZGVmYXVsdFZhbHVlKTtudWxsIT1jJiYoYz1cIlwiK2MsYyE9PWEudmFsdWUmJihhLnZhbHVlPWMpLG51bGw9PWIuZGVmYXVsdFZhbHVlJiZhLmRlZmF1bHRWYWx1ZSE9PWMmJihhLmRlZmF1bHRWYWx1ZT1jKSk7bnVsbCE9ZCYmKGEuZGVmYXVsdFZhbHVlPVwiXCIrZCl9ZnVuY3Rpb24gamUoYSl7dmFyIGI9YS50ZXh0Q29udGVudDtiPT09YS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZSYmKGEudmFsdWU9Yil9dmFyIGtlPXtodG1sOlwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiLG1hdGhtbDpcImh0dHA6Ly93d3cudzMub3JnLzE5OTgvTWF0aC9NYXRoTUxcIixzdmc6XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wifTtcbmZ1bmN0aW9uIGxlKGEpe3N3aXRjaChhKXtjYXNlIFwic3ZnXCI6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiO2Nhc2UgXCJtYXRoXCI6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8xOTk4L01hdGgvTWF0aE1MXCI7ZGVmYXVsdDpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIn19ZnVuY3Rpb24gbWUoYSxiKXtyZXR1cm4gbnVsbD09YXx8XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI9PT1hP2xlKGIpOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj09PWEmJlwiZm9yZWlnbk9iamVjdFwiPT09Yj9cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIjphfVxudmFyIG5lPXZvaWQgMCxvZT1mdW5jdGlvbihhKXtyZXR1cm5cInVuZGVmaW5lZFwiIT09dHlwZW9mIE1TQXBwJiZNU0FwcC5leGVjVW5zYWZlTG9jYWxGdW5jdGlvbj9mdW5jdGlvbihiLGMsZCxlKXtNU0FwcC5leGVjVW5zYWZlTG9jYWxGdW5jdGlvbihmdW5jdGlvbigpe3JldHVybiBhKGIsYyxkLGUpfSl9OmF9KGZ1bmN0aW9uKGEsYil7aWYoYS5uYW1lc3BhY2VVUkkhPT1rZS5zdmd8fFwiaW5uZXJIVE1MXCJpbiBhKWEuaW5uZXJIVE1MPWI7ZWxzZXtuZT1uZXx8ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtuZS5pbm5lckhUTUw9XCI8c3ZnPlwiK2IrXCI8L3N2Zz5cIjtmb3IoYj1uZS5maXJzdENoaWxkO2EuZmlyc3RDaGlsZDspYS5yZW1vdmVDaGlsZChhLmZpcnN0Q2hpbGQpO2Zvcig7Yi5maXJzdENoaWxkOylhLmFwcGVuZENoaWxkKGIuZmlyc3RDaGlsZCl9fSk7XG5mdW5jdGlvbiBwZShhLGIpe2lmKGIpe3ZhciBjPWEuZmlyc3RDaGlsZDtpZihjJiZjPT09YS5sYXN0Q2hpbGQmJjM9PT1jLm5vZGVUeXBlKXtjLm5vZGVWYWx1ZT1iO3JldHVybn19YS50ZXh0Q29udGVudD1ifVxudmFyIHFlPXthbmltYXRpb25JdGVyYXRpb25Db3VudDohMCxib3JkZXJJbWFnZU91dHNldDohMCxib3JkZXJJbWFnZVNsaWNlOiEwLGJvcmRlckltYWdlV2lkdGg6ITAsYm94RmxleDohMCxib3hGbGV4R3JvdXA6ITAsYm94T3JkaW5hbEdyb3VwOiEwLGNvbHVtbkNvdW50OiEwLGNvbHVtbnM6ITAsZmxleDohMCxmbGV4R3JvdzohMCxmbGV4UG9zaXRpdmU6ITAsZmxleFNocmluazohMCxmbGV4TmVnYXRpdmU6ITAsZmxleE9yZGVyOiEwLGdyaWRBcmVhOiEwLGdyaWRSb3c6ITAsZ3JpZFJvd0VuZDohMCxncmlkUm93U3BhbjohMCxncmlkUm93U3RhcnQ6ITAsZ3JpZENvbHVtbjohMCxncmlkQ29sdW1uRW5kOiEwLGdyaWRDb2x1bW5TcGFuOiEwLGdyaWRDb2x1bW5TdGFydDohMCxmb250V2VpZ2h0OiEwLGxpbmVDbGFtcDohMCxsaW5lSGVpZ2h0OiEwLG9wYWNpdHk6ITAsb3JkZXI6ITAsb3JwaGFuczohMCx0YWJTaXplOiEwLHdpZG93czohMCx6SW5kZXg6ITAsem9vbTohMCxmaWxsT3BhY2l0eTohMCxcbmZsb29kT3BhY2l0eTohMCxzdG9wT3BhY2l0eTohMCxzdHJva2VEYXNoYXJyYXk6ITAsc3Ryb2tlRGFzaG9mZnNldDohMCxzdHJva2VNaXRlcmxpbWl0OiEwLHN0cm9rZU9wYWNpdHk6ITAsc3Ryb2tlV2lkdGg6ITB9LHJlPVtcIldlYmtpdFwiLFwibXNcIixcIk1velwiLFwiT1wiXTtPYmplY3Qua2V5cyhxZSkuZm9yRWFjaChmdW5jdGlvbihhKXtyZS5mb3JFYWNoKGZ1bmN0aW9uKGIpe2I9YithLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpK2Euc3Vic3RyaW5nKDEpO3FlW2JdPXFlW2FdfSl9KTtmdW5jdGlvbiBzZShhLGIsYyl7cmV0dXJuIG51bGw9PWJ8fFwiYm9vbGVhblwiPT09dHlwZW9mIGJ8fFwiXCI9PT1iP1wiXCI6Y3x8XCJudW1iZXJcIiE9PXR5cGVvZiBifHwwPT09Ynx8cWUuaGFzT3duUHJvcGVydHkoYSkmJnFlW2FdPyhcIlwiK2IpLnRyaW0oKTpiK1wicHhcIn1cbmZ1bmN0aW9uIHRlKGEsYil7YT1hLnN0eWxlO2Zvcih2YXIgYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykpe3ZhciBkPTA9PT1jLmluZGV4T2YoXCItLVwiKSxlPXNlKGMsYltjXSxkKTtcImZsb2F0XCI9PT1jJiYoYz1cImNzc0Zsb2F0XCIpO2Q/YS5zZXRQcm9wZXJ0eShjLGUpOmFbY109ZX19dmFyIHVlPW4oe21lbnVpdGVtOiEwfSx7YXJlYTohMCxiYXNlOiEwLGJyOiEwLGNvbDohMCxlbWJlZDohMCxocjohMCxpbWc6ITAsaW5wdXQ6ITAsa2V5Z2VuOiEwLGxpbms6ITAsbWV0YTohMCxwYXJhbTohMCxzb3VyY2U6ITAsdHJhY2s6ITAsd2JyOiEwfSk7XG5mdW5jdGlvbiB2ZShhLGIpe2ImJih1ZVthXSYmKG51bGwhPWIuY2hpbGRyZW58fG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw/dChcIjEzN1wiLGEsXCJcIik6dm9pZCAwKSxudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiYobnVsbCE9Yi5jaGlsZHJlbj90KFwiNjBcIik6dm9pZCAwLFwib2JqZWN0XCI9PT10eXBlb2YgYi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmXCJfX2h0bWxcImluIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw/dm9pZCAwOnQoXCI2MVwiKSksbnVsbCE9Yi5zdHlsZSYmXCJvYmplY3RcIiE9PXR5cGVvZiBiLnN0eWxlP3QoXCI2MlwiLFwiXCIpOnZvaWQgMCl9XG5mdW5jdGlvbiB3ZShhLGIpe2lmKC0xPT09YS5pbmRleE9mKFwiLVwiKSlyZXR1cm5cInN0cmluZ1wiPT09dHlwZW9mIGIuaXM7c3dpdGNoKGEpe2Nhc2UgXCJhbm5vdGF0aW9uLXhtbFwiOmNhc2UgXCJjb2xvci1wcm9maWxlXCI6Y2FzZSBcImZvbnQtZmFjZVwiOmNhc2UgXCJmb250LWZhY2Utc3JjXCI6Y2FzZSBcImZvbnQtZmFjZS11cmlcIjpjYXNlIFwiZm9udC1mYWNlLWZvcm1hdFwiOmNhc2UgXCJmb250LWZhY2UtbmFtZVwiOmNhc2UgXCJtaXNzaW5nLWdseXBoXCI6cmV0dXJuITE7ZGVmYXVsdDpyZXR1cm4hMH19XG5mdW5jdGlvbiB4ZShhLGIpe2E9OT09PWEubm9kZVR5cGV8fDExPT09YS5ub2RlVHlwZT9hOmEub3duZXJEb2N1bWVudDt2YXIgYz1PZChhKTtiPXRhW2JdO2Zvcih2YXIgZD0wO2Q8Yi5sZW5ndGg7ZCsrKXt2YXIgZT1iW2RdO2lmKCFjLmhhc093blByb3BlcnR5KGUpfHwhY1tlXSl7c3dpdGNoKGUpe2Nhc2UgXCJzY3JvbGxcIjpLZChcInNjcm9sbFwiLGEpO2JyZWFrO2Nhc2UgXCJmb2N1c1wiOmNhc2UgXCJibHVyXCI6S2QoXCJmb2N1c1wiLGEpO0tkKFwiYmx1clwiLGEpO2MuYmx1cj0hMDtjLmZvY3VzPSEwO2JyZWFrO2Nhc2UgXCJjYW5jZWxcIjpjYXNlIFwiY2xvc2VcIjpTYihlKSYmS2QoZSxhKTticmVhaztjYXNlIFwiaW52YWxpZFwiOmNhc2UgXCJzdWJtaXRcIjpjYXNlIFwicmVzZXRcIjpicmVhaztkZWZhdWx0Oi0xPT09YmIuaW5kZXhPZihlKSYmSChlLGEpfWNbZV09ITB9fX1mdW5jdGlvbiB5ZSgpe312YXIgemU9bnVsbCxBZT1udWxsO1xuZnVuY3Rpb24gQmUoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImJ1dHRvblwiOmNhc2UgXCJpbnB1dFwiOmNhc2UgXCJzZWxlY3RcIjpjYXNlIFwidGV4dGFyZWFcIjpyZXR1cm4hIWIuYXV0b0ZvY3VzfXJldHVybiExfWZ1bmN0aW9uIENlKGEsYil7cmV0dXJuXCJ0ZXh0YXJlYVwiPT09YXx8XCJvcHRpb25cIj09PWF8fFwibm9zY3JpcHRcIj09PWF8fFwic3RyaW5nXCI9PT10eXBlb2YgYi5jaGlsZHJlbnx8XCJudW1iZXJcIj09PXR5cGVvZiBiLmNoaWxkcmVufHxcIm9iamVjdFwiPT09dHlwZW9mIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJm51bGwhPT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MLl9faHRtbH12YXIgRGU9XCJmdW5jdGlvblwiPT09dHlwZW9mIHNldFRpbWVvdXQ/c2V0VGltZW91dDp2b2lkIDAsRWU9XCJmdW5jdGlvblwiPT09dHlwZW9mIGNsZWFyVGltZW91dD9jbGVhclRpbWVvdXQ6dm9pZCAwO1xuZnVuY3Rpb24gRmUoYSxiLGMsZCxlKXthW0hhXT1lO1wiaW5wdXRcIj09PWMmJlwicmFkaW9cIj09PWUudHlwZSYmbnVsbCE9ZS5uYW1lJiZCYyhhLGUpO3dlKGMsZCk7ZD13ZShjLGUpO2Zvcih2YXIgZj0wO2Y8Yi5sZW5ndGg7Zis9Mil7dmFyIGc9YltmXSxoPWJbZisxXTtcInN0eWxlXCI9PT1nP3RlKGEsaCk6XCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09Zz9vZShhLGgpOlwiY2hpbGRyZW5cIj09PWc/cGUoYSxoKTp4YyhhLGcsaCxkKX1zd2l0Y2goYyl7Y2FzZSBcImlucHV0XCI6Q2MoYSxlKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjppZShhLGUpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpiPWEuX3dyYXBwZXJTdGF0ZS53YXNNdWx0aXBsZSxhLl93cmFwcGVyU3RhdGUud2FzTXVsdGlwbGU9ISFlLm11bHRpcGxlLGM9ZS52YWx1ZSxudWxsIT1jP2ZlKGEsISFlLm11bHRpcGxlLGMsITEpOmIhPT0hIWUubXVsdGlwbGUmJihudWxsIT1lLmRlZmF1bHRWYWx1ZT9mZShhLCEhZS5tdWx0aXBsZSxlLmRlZmF1bHRWYWx1ZSxcbiEwKTpmZShhLCEhZS5tdWx0aXBsZSxlLm11bHRpcGxlP1tdOlwiXCIsITEpKX19ZnVuY3Rpb24gR2UoYSl7Zm9yKGE9YS5uZXh0U2libGluZzthJiYxIT09YS5ub2RlVHlwZSYmMyE9PWEubm9kZVR5cGU7KWE9YS5uZXh0U2libGluZztyZXR1cm4gYX1mdW5jdGlvbiBIZShhKXtmb3IoYT1hLmZpcnN0Q2hpbGQ7YSYmMSE9PWEubm9kZVR5cGUmJjMhPT1hLm5vZGVUeXBlOylhPWEubmV4dFNpYmxpbmc7cmV0dXJuIGF9bmV3IFNldDt2YXIgSWU9W10sSmU9LTE7ZnVuY3Rpb24gSShhKXswPkplfHwoYS5jdXJyZW50PUllW0plXSxJZVtKZV09bnVsbCxKZS0tKX1mdW5jdGlvbiBKKGEsYil7SmUrKztJZVtKZV09YS5jdXJyZW50O2EuY3VycmVudD1ifXZhciBLZT17fSxLPXtjdXJyZW50OktlfSxMPXtjdXJyZW50OiExfSxMZT1LZTtcbmZ1bmN0aW9uIE1lKGEsYil7dmFyIGM9YS50eXBlLmNvbnRleHRUeXBlcztpZighYylyZXR1cm4gS2U7dmFyIGQ9YS5zdGF0ZU5vZGU7aWYoZCYmZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PT09YilyZXR1cm4gZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dDt2YXIgZT17fSxmO2ZvcihmIGluIGMpZVtmXT1iW2ZdO2QmJihhPWEuc3RhdGVOb2RlLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD1iLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ9ZSk7cmV0dXJuIGV9ZnVuY3Rpb24gTShhKXthPWEuY2hpbGRDb250ZXh0VHlwZXM7cmV0dXJuIG51bGwhPT1hJiZ2b2lkIDAhPT1hfWZ1bmN0aW9uIE5lKGEpe0koTCxhKTtJKEssYSl9ZnVuY3Rpb24gT2UoYSl7SShMLGEpO0koSyxhKX1cbmZ1bmN0aW9uIFBlKGEsYixjKXtLLmN1cnJlbnQhPT1LZT90KFwiMTY4XCIpOnZvaWQgMDtKKEssYixhKTtKKEwsYyxhKX1mdW5jdGlvbiBRZShhLGIsYyl7dmFyIGQ9YS5zdGF0ZU5vZGU7YT1iLmNoaWxkQ29udGV4dFR5cGVzO2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBkLmdldENoaWxkQ29udGV4dClyZXR1cm4gYztkPWQuZ2V0Q2hpbGRDb250ZXh0KCk7Zm9yKHZhciBlIGluIGQpZSBpbiBhP3ZvaWQgMDp0KFwiMTA4XCIsbWMoYil8fFwiVW5rbm93blwiLGUpO3JldHVybiBuKHt9LGMsZCl9ZnVuY3Rpb24gUmUoYSl7dmFyIGI9YS5zdGF0ZU5vZGU7Yj1iJiZiLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0fHxLZTtMZT1LLmN1cnJlbnQ7SihLLGIsYSk7SihMLEwuY3VycmVudCxhKTtyZXR1cm4hMH1cbmZ1bmN0aW9uIFNlKGEsYixjKXt2YXIgZD1hLnN0YXRlTm9kZTtkP3ZvaWQgMDp0KFwiMTY5XCIpO2M/KGI9UWUoYSxiLExlKSxkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0PWIsSShMLGEpLEkoSyxhKSxKKEssYixhKSk6SShMLGEpO0ooTCxjLGEpfXZhciBUZT1udWxsLFVlPW51bGw7ZnVuY3Rpb24gVmUoYSl7cmV0dXJuIGZ1bmN0aW9uKGIpe3RyeXtyZXR1cm4gYShiKX1jYXRjaChjKXt9fX1cbmZ1bmN0aW9uIFdlKGEpe2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fKXJldHVybiExO3ZhciBiPV9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXztpZihiLmlzRGlzYWJsZWR8fCFiLnN1cHBvcnRzRmliZXIpcmV0dXJuITA7dHJ5e3ZhciBjPWIuaW5qZWN0KGEpO1RlPVZlKGZ1bmN0aW9uKGEpe3JldHVybiBiLm9uQ29tbWl0RmliZXJSb290KGMsYSl9KTtVZT1WZShmdW5jdGlvbihhKXtyZXR1cm4gYi5vbkNvbW1pdEZpYmVyVW5tb3VudChjLGEpfSl9Y2F0Y2goZCl7fXJldHVybiEwfVxuZnVuY3Rpb24gWGUoYSxiLGMsZCl7dGhpcy50YWc9YTt0aGlzLmtleT1jO3RoaXMuc2libGluZz10aGlzLmNoaWxkPXRoaXMucmV0dXJuPXRoaXMuc3RhdGVOb2RlPXRoaXMudHlwZT10aGlzLmVsZW1lbnRUeXBlPW51bGw7dGhpcy5pbmRleD0wO3RoaXMucmVmPW51bGw7dGhpcy5wZW5kaW5nUHJvcHM9Yjt0aGlzLmZpcnN0Q29udGV4dERlcGVuZGVuY3k9dGhpcy5tZW1vaXplZFN0YXRlPXRoaXMudXBkYXRlUXVldWU9dGhpcy5tZW1vaXplZFByb3BzPW51bGw7dGhpcy5tb2RlPWQ7dGhpcy5lZmZlY3RUYWc9MDt0aGlzLmxhc3RFZmZlY3Q9dGhpcy5maXJzdEVmZmVjdD10aGlzLm5leHRFZmZlY3Q9bnVsbDt0aGlzLmNoaWxkRXhwaXJhdGlvblRpbWU9dGhpcy5leHBpcmF0aW9uVGltZT0wO3RoaXMuYWx0ZXJuYXRlPW51bGx9ZnVuY3Rpb24gTihhLGIsYyxkKXtyZXR1cm4gbmV3IFhlKGEsYixjLGQpfVxuZnVuY3Rpb24gWWUoYSl7YT1hLnByb3RvdHlwZTtyZXR1cm4hKCFhfHwhYS5pc1JlYWN0Q29tcG9uZW50KX1mdW5jdGlvbiBaZShhKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlyZXR1cm4gWWUoYSk/MTowO2lmKHZvaWQgMCE9PWEmJm51bGwhPT1hKXthPWEuJCR0eXBlb2Y7aWYoYT09PWdjKXJldHVybiAxMTtpZihhPT09aWMpcmV0dXJuIDE0fXJldHVybiAyfVxuZnVuY3Rpb24gJGUoYSxiKXt2YXIgYz1hLmFsdGVybmF0ZTtudWxsPT09Yz8oYz1OKGEudGFnLGIsYS5rZXksYS5tb2RlKSxjLmVsZW1lbnRUeXBlPWEuZWxlbWVudFR5cGUsYy50eXBlPWEudHlwZSxjLnN0YXRlTm9kZT1hLnN0YXRlTm9kZSxjLmFsdGVybmF0ZT1hLGEuYWx0ZXJuYXRlPWMpOihjLnBlbmRpbmdQcm9wcz1iLGMuZWZmZWN0VGFnPTAsYy5uZXh0RWZmZWN0PW51bGwsYy5maXJzdEVmZmVjdD1udWxsLGMubGFzdEVmZmVjdD1udWxsKTtjLmNoaWxkRXhwaXJhdGlvblRpbWU9YS5jaGlsZEV4cGlyYXRpb25UaW1lO2MuZXhwaXJhdGlvblRpbWU9YS5leHBpcmF0aW9uVGltZTtjLmNoaWxkPWEuY2hpbGQ7Yy5tZW1vaXplZFByb3BzPWEubWVtb2l6ZWRQcm9wcztjLm1lbW9pemVkU3RhdGU9YS5tZW1vaXplZFN0YXRlO2MudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZTtjLmZpcnN0Q29udGV4dERlcGVuZGVuY3k9YS5maXJzdENvbnRleHREZXBlbmRlbmN5O2Muc2libGluZz1hLnNpYmxpbmc7XG5jLmluZGV4PWEuaW5kZXg7Yy5yZWY9YS5yZWY7cmV0dXJuIGN9XG5mdW5jdGlvbiBhZihhLGIsYyxkLGUsZil7dmFyIGc9MjtkPWE7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpWWUoYSkmJihnPTEpO2Vsc2UgaWYoXCJzdHJpbmdcIj09PXR5cGVvZiBhKWc9NTtlbHNlIGE6c3dpdGNoKGEpe2Nhc2UgYWM6cmV0dXJuIGJmKGMuY2hpbGRyZW4sZSxmLGIpO2Nhc2UgZmM6cmV0dXJuIGNmKGMsZXwzLGYsYik7Y2FzZSBiYzpyZXR1cm4gY2YoYyxlfDIsZixiKTtjYXNlIGNjOnJldHVybiBhPU4oMTIsYyxiLGV8NCksYS5lbGVtZW50VHlwZT1jYyxhLnR5cGU9Y2MsYS5leHBpcmF0aW9uVGltZT1mLGE7Y2FzZSBoYzpyZXR1cm4gYT1OKDEzLGMsYixlKSxhLmVsZW1lbnRUeXBlPWhjLGEudHlwZT1oYyxhLmV4cGlyYXRpb25UaW1lPWYsYTtkZWZhdWx0OmlmKFwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEpc3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgZGM6Zz0xMDticmVhayBhO2Nhc2UgZWM6Zz05O2JyZWFrIGE7Y2FzZSBnYzpnPTExO2JyZWFrIGE7Y2FzZSBpYzpnPVxuMTQ7YnJlYWsgYTtjYXNlIGpjOmc9MTY7ZD1udWxsO2JyZWFrIGF9dChcIjEzMFwiLG51bGw9PWE/YTp0eXBlb2YgYSxcIlwiKX1iPU4oZyxjLGIsZSk7Yi5lbGVtZW50VHlwZT1hO2IudHlwZT1kO2IuZXhwaXJhdGlvblRpbWU9ZjtyZXR1cm4gYn1mdW5jdGlvbiBiZihhLGIsYyxkKXthPU4oNyxhLGQsYik7YS5leHBpcmF0aW9uVGltZT1jO3JldHVybiBhfWZ1bmN0aW9uIGNmKGEsYixjLGQpe2E9Tig4LGEsZCxiKTtiPTA9PT0oYiYxKT9iYzpmYzthLmVsZW1lbnRUeXBlPWI7YS50eXBlPWI7YS5leHBpcmF0aW9uVGltZT1jO3JldHVybiBhfWZ1bmN0aW9uIGRmKGEsYixjKXthPU4oNixhLG51bGwsYik7YS5leHBpcmF0aW9uVGltZT1jO3JldHVybiBhfVxuZnVuY3Rpb24gZWYoYSxiLGMpe2I9Tig0LG51bGwhPT1hLmNoaWxkcmVuP2EuY2hpbGRyZW46W10sYS5rZXksYik7Yi5leHBpcmF0aW9uVGltZT1jO2Iuc3RhdGVOb2RlPXtjb250YWluZXJJbmZvOmEuY29udGFpbmVySW5mbyxwZW5kaW5nQ2hpbGRyZW46bnVsbCxpbXBsZW1lbnRhdGlvbjphLmltcGxlbWVudGF0aW9ufTtyZXR1cm4gYn1mdW5jdGlvbiBmZihhLGIpe2EuZGlkRXJyb3I9ITE7dmFyIGM9YS5lYXJsaWVzdFBlbmRpbmdUaW1lOzA9PT1jP2EuZWFybGllc3RQZW5kaW5nVGltZT1hLmxhdGVzdFBlbmRpbmdUaW1lPWI6YzxiP2EuZWFybGllc3RQZW5kaW5nVGltZT1iOmEubGF0ZXN0UGVuZGluZ1RpbWU+YiYmKGEubGF0ZXN0UGVuZGluZ1RpbWU9Yik7Z2YoYixhKX1cbmZ1bmN0aW9uIGhmKGEsYil7YS5kaWRFcnJvcj0hMTthLmxhdGVzdFBpbmdlZFRpbWU+PWImJihhLmxhdGVzdFBpbmdlZFRpbWU9MCk7dmFyIGM9YS5lYXJsaWVzdFBlbmRpbmdUaW1lLGQ9YS5sYXRlc3RQZW5kaW5nVGltZTtjPT09Yj9hLmVhcmxpZXN0UGVuZGluZ1RpbWU9ZD09PWI/YS5sYXRlc3RQZW5kaW5nVGltZT0wOmQ6ZD09PWImJihhLmxhdGVzdFBlbmRpbmdUaW1lPWMpO2M9YS5lYXJsaWVzdFN1c3BlbmRlZFRpbWU7ZD1hLmxhdGVzdFN1c3BlbmRlZFRpbWU7MD09PWM/YS5lYXJsaWVzdFN1c3BlbmRlZFRpbWU9YS5sYXRlc3RTdXNwZW5kZWRUaW1lPWI6YzxiP2EuZWFybGllc3RTdXNwZW5kZWRUaW1lPWI6ZD5iJiYoYS5sYXRlc3RTdXNwZW5kZWRUaW1lPWIpO2dmKGIsYSl9ZnVuY3Rpb24gamYoYSxiKXt2YXIgYz1hLmVhcmxpZXN0UGVuZGluZ1RpbWU7YT1hLmVhcmxpZXN0U3VzcGVuZGVkVGltZTtjPmImJihiPWMpO2E+YiYmKGI9YSk7cmV0dXJuIGJ9XG5mdW5jdGlvbiBnZihhLGIpe3ZhciBjPWIuZWFybGllc3RTdXNwZW5kZWRUaW1lLGQ9Yi5sYXRlc3RTdXNwZW5kZWRUaW1lLGU9Yi5lYXJsaWVzdFBlbmRpbmdUaW1lLGY9Yi5sYXRlc3RQaW5nZWRUaW1lO2U9MCE9PWU/ZTpmOzA9PT1lJiYoMD09PWF8fGQ8YSkmJihlPWQpO2E9ZTswIT09YSYmYz5hJiYoYT1jKTtiLm5leHRFeHBpcmF0aW9uVGltZVRvV29ya09uPWU7Yi5leHBpcmF0aW9uVGltZT1hfXZhciBrZj0hMTtmdW5jdGlvbiBsZihhKXtyZXR1cm57YmFzZVN0YXRlOmEsZmlyc3RVcGRhdGU6bnVsbCxsYXN0VXBkYXRlOm51bGwsZmlyc3RDYXB0dXJlZFVwZGF0ZTpudWxsLGxhc3RDYXB0dXJlZFVwZGF0ZTpudWxsLGZpcnN0RWZmZWN0Om51bGwsbGFzdEVmZmVjdDpudWxsLGZpcnN0Q2FwdHVyZWRFZmZlY3Q6bnVsbCxsYXN0Q2FwdHVyZWRFZmZlY3Q6bnVsbH19XG5mdW5jdGlvbiBtZihhKXtyZXR1cm57YmFzZVN0YXRlOmEuYmFzZVN0YXRlLGZpcnN0VXBkYXRlOmEuZmlyc3RVcGRhdGUsbGFzdFVwZGF0ZTphLmxhc3RVcGRhdGUsZmlyc3RDYXB0dXJlZFVwZGF0ZTpudWxsLGxhc3RDYXB0dXJlZFVwZGF0ZTpudWxsLGZpcnN0RWZmZWN0Om51bGwsbGFzdEVmZmVjdDpudWxsLGZpcnN0Q2FwdHVyZWRFZmZlY3Q6bnVsbCxsYXN0Q2FwdHVyZWRFZmZlY3Q6bnVsbH19ZnVuY3Rpb24gbmYoYSl7cmV0dXJue2V4cGlyYXRpb25UaW1lOmEsdGFnOjAscGF5bG9hZDpudWxsLGNhbGxiYWNrOm51bGwsbmV4dDpudWxsLG5leHRFZmZlY3Q6bnVsbH19ZnVuY3Rpb24gb2YoYSxiKXtudWxsPT09YS5sYXN0VXBkYXRlP2EuZmlyc3RVcGRhdGU9YS5sYXN0VXBkYXRlPWI6KGEubGFzdFVwZGF0ZS5uZXh0PWIsYS5sYXN0VXBkYXRlPWIpfVxuZnVuY3Rpb24gcGYoYSxiKXt2YXIgYz1hLmFsdGVybmF0ZTtpZihudWxsPT09Yyl7dmFyIGQ9YS51cGRhdGVRdWV1ZTt2YXIgZT1udWxsO251bGw9PT1kJiYoZD1hLnVwZGF0ZVF1ZXVlPWxmKGEubWVtb2l6ZWRTdGF0ZSkpfWVsc2UgZD1hLnVwZGF0ZVF1ZXVlLGU9Yy51cGRhdGVRdWV1ZSxudWxsPT09ZD9udWxsPT09ZT8oZD1hLnVwZGF0ZVF1ZXVlPWxmKGEubWVtb2l6ZWRTdGF0ZSksZT1jLnVwZGF0ZVF1ZXVlPWxmKGMubWVtb2l6ZWRTdGF0ZSkpOmQ9YS51cGRhdGVRdWV1ZT1tZihlKTpudWxsPT09ZSYmKGU9Yy51cGRhdGVRdWV1ZT1tZihkKSk7bnVsbD09PWV8fGQ9PT1lP29mKGQsYik6bnVsbD09PWQubGFzdFVwZGF0ZXx8bnVsbD09PWUubGFzdFVwZGF0ZT8ob2YoZCxiKSxvZihlLGIpKToob2YoZCxiKSxlLmxhc3RVcGRhdGU9Yil9XG5mdW5jdGlvbiBxZihhLGIpe3ZhciBjPWEudXBkYXRlUXVldWU7Yz1udWxsPT09Yz9hLnVwZGF0ZVF1ZXVlPWxmKGEubWVtb2l6ZWRTdGF0ZSk6cmYoYSxjKTtudWxsPT09Yy5sYXN0Q2FwdHVyZWRVcGRhdGU/Yy5maXJzdENhcHR1cmVkVXBkYXRlPWMubGFzdENhcHR1cmVkVXBkYXRlPWI6KGMubGFzdENhcHR1cmVkVXBkYXRlLm5leHQ9YixjLmxhc3RDYXB0dXJlZFVwZGF0ZT1iKX1mdW5jdGlvbiByZihhLGIpe3ZhciBjPWEuYWx0ZXJuYXRlO251bGwhPT1jJiZiPT09Yy51cGRhdGVRdWV1ZSYmKGI9YS51cGRhdGVRdWV1ZT1tZihiKSk7cmV0dXJuIGJ9XG5mdW5jdGlvbiBzZihhLGIsYyxkLGUsZil7c3dpdGNoKGMudGFnKXtjYXNlIDE6cmV0dXJuIGE9Yy5wYXlsb2FkLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhP2EuY2FsbChmLGQsZSk6YTtjYXNlIDM6YS5lZmZlY3RUYWc9YS5lZmZlY3RUYWcmLTIwNDl8NjQ7Y2FzZSAwOmE9Yy5wYXlsb2FkO2U9XCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YS5jYWxsKGYsZCxlKTphO2lmKG51bGw9PT1lfHx2b2lkIDA9PT1lKWJyZWFrO3JldHVybiBuKHt9LGQsZSk7Y2FzZSAyOmtmPSEwfXJldHVybiBkfVxuZnVuY3Rpb24gdGYoYSxiLGMsZCxlKXtrZj0hMTtiPXJmKGEsYik7Zm9yKHZhciBmPWIuYmFzZVN0YXRlLGc9bnVsbCxoPTAsaz1iLmZpcnN0VXBkYXRlLGw9ZjtudWxsIT09azspe3ZhciBtPWsuZXhwaXJhdGlvblRpbWU7bTxlPyhudWxsPT09ZyYmKGc9ayxmPWwpLGg8bSYmKGg9bSkpOihsPXNmKGEsYixrLGwsYyxkKSxudWxsIT09ay5jYWxsYmFjayYmKGEuZWZmZWN0VGFnfD0zMixrLm5leHRFZmZlY3Q9bnVsbCxudWxsPT09Yi5sYXN0RWZmZWN0P2IuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PWs6KGIubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWssYi5sYXN0RWZmZWN0PWspKSk7az1rLm5leHR9bT1udWxsO2ZvcihrPWIuZmlyc3RDYXB0dXJlZFVwZGF0ZTtudWxsIT09azspe3ZhciByPWsuZXhwaXJhdGlvblRpbWU7cjxlPyhudWxsPT09bSYmKG09ayxudWxsPT09ZyYmKGY9bCkpLGg8ciYmKGg9cikpOihsPXNmKGEsYixrLGwsYyxkKSxudWxsIT09ay5jYWxsYmFjayYmKGEuZWZmZWN0VGFnfD1cbjMyLGsubmV4dEVmZmVjdD1udWxsLG51bGw9PT1iLmxhc3RDYXB0dXJlZEVmZmVjdD9iLmZpcnN0Q2FwdHVyZWRFZmZlY3Q9Yi5sYXN0Q2FwdHVyZWRFZmZlY3Q9azooYi5sYXN0Q2FwdHVyZWRFZmZlY3QubmV4dEVmZmVjdD1rLGIubGFzdENhcHR1cmVkRWZmZWN0PWspKSk7az1rLm5leHR9bnVsbD09PWcmJihiLmxhc3RVcGRhdGU9bnVsbCk7bnVsbD09PW0/Yi5sYXN0Q2FwdHVyZWRVcGRhdGU9bnVsbDphLmVmZmVjdFRhZ3w9MzI7bnVsbD09PWcmJm51bGw9PT1tJiYoZj1sKTtiLmJhc2VTdGF0ZT1mO2IuZmlyc3RVcGRhdGU9ZztiLmZpcnN0Q2FwdHVyZWRVcGRhdGU9bTthLmV4cGlyYXRpb25UaW1lPWg7YS5tZW1vaXplZFN0YXRlPWx9XG5mdW5jdGlvbiB1ZihhLGIsYyl7bnVsbCE9PWIuZmlyc3RDYXB0dXJlZFVwZGF0ZSYmKG51bGwhPT1iLmxhc3RVcGRhdGUmJihiLmxhc3RVcGRhdGUubmV4dD1iLmZpcnN0Q2FwdHVyZWRVcGRhdGUsYi5sYXN0VXBkYXRlPWIubGFzdENhcHR1cmVkVXBkYXRlKSxiLmZpcnN0Q2FwdHVyZWRVcGRhdGU9Yi5sYXN0Q2FwdHVyZWRVcGRhdGU9bnVsbCk7dmYoYi5maXJzdEVmZmVjdCxjKTtiLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1udWxsO3ZmKGIuZmlyc3RDYXB0dXJlZEVmZmVjdCxjKTtiLmZpcnN0Q2FwdHVyZWRFZmZlY3Q9Yi5sYXN0Q2FwdHVyZWRFZmZlY3Q9bnVsbH1mdW5jdGlvbiB2ZihhLGIpe2Zvcig7bnVsbCE9PWE7KXt2YXIgYz1hLmNhbGxiYWNrO2lmKG51bGwhPT1jKXthLmNhbGxiYWNrPW51bGw7dmFyIGQ9YjtcImZ1bmN0aW9uXCIhPT10eXBlb2YgYz90KFwiMTkxXCIsYyk6dm9pZCAwO2MuY2FsbChkKX1hPWEubmV4dEVmZmVjdH19XG5mdW5jdGlvbiB3ZihhLGIpe3JldHVybnt2YWx1ZTphLHNvdXJjZTpiLHN0YWNrOm5jKGIpfX12YXIgeGY9e2N1cnJlbnQ6bnVsbH0seWY9bnVsbCx6Zj1udWxsLEFmPW51bGw7ZnVuY3Rpb24gQmYoYSxiKXt2YXIgYz1hLnR5cGUuX2NvbnRleHQ7Sih4ZixjLl9jdXJyZW50VmFsdWUsYSk7Yy5fY3VycmVudFZhbHVlPWJ9ZnVuY3Rpb24gQ2YoYSl7dmFyIGI9eGYuY3VycmVudDtJKHhmLGEpO2EudHlwZS5fY29udGV4dC5fY3VycmVudFZhbHVlPWJ9ZnVuY3Rpb24gRGYoYSl7eWY9YTtBZj16Zj1udWxsO2EuZmlyc3RDb250ZXh0RGVwZW5kZW5jeT1udWxsfVxuZnVuY3Rpb24gRWYoYSxiKXtpZihBZiE9PWEmJiExIT09YiYmMCE9PWIpe2lmKFwibnVtYmVyXCIhPT10eXBlb2YgYnx8MTA3Mzc0MTgyMz09PWIpQWY9YSxiPTEwNzM3NDE4MjM7Yj17Y29udGV4dDphLG9ic2VydmVkQml0czpiLG5leHQ6bnVsbH07bnVsbD09PXpmPyhudWxsPT09eWY/dChcIjI5M1wiKTp2b2lkIDAseWYuZmlyc3RDb250ZXh0RGVwZW5kZW5jeT16Zj1iKTp6Zj16Zi5uZXh0PWJ9cmV0dXJuIGEuX2N1cnJlbnRWYWx1ZX12YXIgRmY9e30sTz17Y3VycmVudDpGZn0sR2Y9e2N1cnJlbnQ6RmZ9LEhmPXtjdXJyZW50OkZmfTtmdW5jdGlvbiBJZihhKXthPT09RmY/dChcIjE3NFwiKTp2b2lkIDA7cmV0dXJuIGF9XG5mdW5jdGlvbiBKZihhLGIpe0ooSGYsYixhKTtKKEdmLGEsYSk7SihPLEZmLGEpO3ZhciBjPWIubm9kZVR5cGU7c3dpdGNoKGMpe2Nhc2UgOTpjYXNlIDExOmI9KGI9Yi5kb2N1bWVudEVsZW1lbnQpP2IubmFtZXNwYWNlVVJJOm1lKG51bGwsXCJcIik7YnJlYWs7ZGVmYXVsdDpjPTg9PT1jP2IucGFyZW50Tm9kZTpiLGI9Yy5uYW1lc3BhY2VVUkl8fG51bGwsYz1jLnRhZ05hbWUsYj1tZShiLGMpfUkoTyxhKTtKKE8sYixhKX1mdW5jdGlvbiBLZihhKXtJKE8sYSk7SShHZixhKTtJKEhmLGEpfWZ1bmN0aW9uIExmKGEpe0lmKEhmLmN1cnJlbnQpO3ZhciBiPUlmKE8uY3VycmVudCk7dmFyIGM9bWUoYixhLnR5cGUpO2IhPT1jJiYoSihHZixhLGEpLEooTyxjLGEpKX1mdW5jdGlvbiBNZihhKXtHZi5jdXJyZW50PT09YSYmKEkoTyxhKSxJKEdmLGEpKX1cbmZ1bmN0aW9uIFAoYSxiKXtpZihhJiZhLmRlZmF1bHRQcm9wcyl7Yj1uKHt9LGIpO2E9YS5kZWZhdWx0UHJvcHM7Zm9yKHZhciBjIGluIGEpdm9pZCAwPT09YltjXSYmKGJbY109YVtjXSl9cmV0dXJuIGJ9ZnVuY3Rpb24gTmYoYSl7dmFyIGI9YS5fcmVzdWx0O3N3aXRjaChhLl9zdGF0dXMpe2Nhc2UgMTpyZXR1cm4gYjtjYXNlIDI6dGhyb3cgYjtjYXNlIDA6dGhyb3cgYjtkZWZhdWx0OnRocm93IGEuX3N0YXR1cz0wLGI9YS5fY3RvcixiPWIoKSxiLnRoZW4oZnVuY3Rpb24oYil7MD09PWEuX3N0YXR1cyYmKGI9Yi5kZWZhdWx0LGEuX3N0YXR1cz0xLGEuX3Jlc3VsdD1iKX0sZnVuY3Rpb24oYil7MD09PWEuX3N0YXR1cyYmKGEuX3N0YXR1cz0yLGEuX3Jlc3VsdD1iKX0pLGEuX3Jlc3VsdD1iLGI7fX12YXIgT2Y9WGIuUmVhY3RDdXJyZW50T3duZXIsUGY9KG5ldyBhYS5Db21wb25lbnQpLnJlZnM7XG5mdW5jdGlvbiBRZihhLGIsYyxkKXtiPWEubWVtb2l6ZWRTdGF0ZTtjPWMoZCxiKTtjPW51bGw9PT1jfHx2b2lkIDA9PT1jP2I6bih7fSxiLGMpO2EubWVtb2l6ZWRTdGF0ZT1jO2Q9YS51cGRhdGVRdWV1ZTtudWxsIT09ZCYmMD09PWEuZXhwaXJhdGlvblRpbWUmJihkLmJhc2VTdGF0ZT1jKX1cbnZhciBWZj17aXNNb3VudGVkOmZ1bmN0aW9uKGEpe3JldHVybihhPWEuX3JlYWN0SW50ZXJuYWxGaWJlcik/Mj09PWtkKGEpOiExfSxlbnF1ZXVlU2V0U3RhdGU6ZnVuY3Rpb24oYSxiLGMpe2E9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO3ZhciBkPVJmKCk7ZD1TZihkLGEpO3ZhciBlPW5mKGQpO2UucGF5bG9hZD1iO3ZvaWQgMCE9PWMmJm51bGwhPT1jJiYoZS5jYWxsYmFjaz1jKTtUZigpO3BmKGEsZSk7VWYoYSxkKX0sZW5xdWV1ZVJlcGxhY2VTdGF0ZTpmdW5jdGlvbihhLGIsYyl7YT1hLl9yZWFjdEludGVybmFsRmliZXI7dmFyIGQ9UmYoKTtkPVNmKGQsYSk7dmFyIGU9bmYoZCk7ZS50YWc9MTtlLnBheWxvYWQ9Yjt2b2lkIDAhPT1jJiZudWxsIT09YyYmKGUuY2FsbGJhY2s9Yyk7VGYoKTtwZihhLGUpO1VmKGEsZCl9LGVucXVldWVGb3JjZVVwZGF0ZTpmdW5jdGlvbihhLGIpe2E9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO3ZhciBjPVJmKCk7Yz1TZihjLGEpO3ZhciBkPW5mKGMpO2QudGFnPVxuMjt2b2lkIDAhPT1iJiZudWxsIT09YiYmKGQuY2FsbGJhY2s9Yik7VGYoKTtwZihhLGQpO1VmKGEsYyl9fTtmdW5jdGlvbiBXZihhLGIsYyxkLGUsZixnKXthPWEuc3RhdGVOb2RlO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLnNob3VsZENvbXBvbmVudFVwZGF0ZT9hLnNob3VsZENvbXBvbmVudFVwZGF0ZShkLGYsZyk6Yi5wcm90b3R5cGUmJmIucHJvdG90eXBlLmlzUHVyZVJlYWN0Q29tcG9uZW50PyFqZChjLGQpfHwhamQoZSxmKTohMH1cbmZ1bmN0aW9uIFhmKGEsYixjKXt2YXIgZD0hMSxlPUtlO3ZhciBmPWIuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09Zj9mPU9mLmN1cnJlbnREaXNwYXRjaGVyLnJlYWRDb250ZXh0KGYpOihlPU0oYik/TGU6Sy5jdXJyZW50LGQ9Yi5jb250ZXh0VHlwZXMsZj0oZD1udWxsIT09ZCYmdm9pZCAwIT09ZCk/TWUoYSxlKTpLZSk7Yj1uZXcgYihjLGYpO2EubWVtb2l6ZWRTdGF0ZT1udWxsIT09Yi5zdGF0ZSYmdm9pZCAwIT09Yi5zdGF0ZT9iLnN0YXRlOm51bGw7Yi51cGRhdGVyPVZmO2Euc3RhdGVOb2RlPWI7Yi5fcmVhY3RJbnRlcm5hbEZpYmVyPWE7ZCYmKGE9YS5zdGF0ZU5vZGUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PWUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dD1mKTtyZXR1cm4gYn1cbmZ1bmN0aW9uIFpmKGEsYixjLGQpe2E9Yi5zdGF0ZTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZiLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMoYyxkKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmYi5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhjLGQpO2Iuc3RhdGUhPT1hJiZWZi5lbnF1ZXVlUmVwbGFjZVN0YXRlKGIsYi5zdGF0ZSxudWxsKX1cbmZ1bmN0aW9uICRmKGEsYixjLGQpe3ZhciBlPWEuc3RhdGVOb2RlO2UucHJvcHM9YztlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtlLnJlZnM9UGY7dmFyIGY9Yi5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mP2UuY29udGV4dD1PZi5jdXJyZW50RGlzcGF0Y2hlci5yZWFkQ29udGV4dChmKTooZj1NKGIpP0xlOksuY3VycmVudCxlLmNvbnRleHQ9TWUoYSxmKSk7Zj1hLnVwZGF0ZVF1ZXVlO251bGwhPT1mJiYodGYoYSxmLGMsZSxkKSxlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSk7Zj1iLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcztcImZ1bmN0aW9uXCI9PT10eXBlb2YgZiYmKFFmKGEsYixmLGMpLGUuc3RhdGU9YS5tZW1vaXplZFN0YXRlKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHN8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZcblwiZnVuY3Rpb25cIiE9PXR5cGVvZiBlLmNvbXBvbmVudFdpbGxNb3VudHx8KGI9ZS5zdGF0ZSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5jb21wb25lbnRXaWxsTW91bnQmJmUuY29tcG9uZW50V2lsbE1vdW50KCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCksYiE9PWUuc3RhdGUmJlZmLmVucXVldWVSZXBsYWNlU3RhdGUoZSxlLnN0YXRlLG51bGwpLGY9YS51cGRhdGVRdWV1ZSxudWxsIT09ZiYmKHRmKGEsZixjLGUsZCksZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGUpKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5jb21wb25lbnREaWRNb3VudCYmKGEuZWZmZWN0VGFnfD00KX12YXIgYWc9QXJyYXkuaXNBcnJheTtcbmZ1bmN0aW9uIGJnKGEsYixjKXthPWMucmVmO2lmKG51bGwhPT1hJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYSYmXCJvYmplY3RcIiE9PXR5cGVvZiBhKXtpZihjLl9vd25lcil7Yz1jLl9vd25lcjt2YXIgZD12b2lkIDA7YyYmKDEhPT1jLnRhZz90KFwiMjg5XCIpOnZvaWQgMCxkPWMuc3RhdGVOb2RlKTtkP3ZvaWQgMDp0KFwiMTQ3XCIsYSk7dmFyIGU9XCJcIithO2lmKG51bGwhPT1iJiZudWxsIT09Yi5yZWYmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBiLnJlZiYmYi5yZWYuX3N0cmluZ1JlZj09PWUpcmV0dXJuIGIucmVmO2I9ZnVuY3Rpb24oYSl7dmFyIGI9ZC5yZWZzO2I9PT1QZiYmKGI9ZC5yZWZzPXt9KTtudWxsPT09YT9kZWxldGUgYltlXTpiW2VdPWF9O2IuX3N0cmluZ1JlZj1lO3JldHVybiBifVwic3RyaW5nXCIhPT10eXBlb2YgYT90KFwiMjg0XCIpOnZvaWQgMDtjLl9vd25lcj92b2lkIDA6dChcIjI5MFwiLGEpfXJldHVybiBhfVxuZnVuY3Rpb24gY2coYSxiKXtcInRleHRhcmVhXCIhPT1hLnR5cGUmJnQoXCIzMVwiLFwiW29iamVjdCBPYmplY3RdXCI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoYik/XCJvYmplY3Qgd2l0aCBrZXlzIHtcIitPYmplY3Qua2V5cyhiKS5qb2luKFwiLCBcIikrXCJ9XCI6YixcIlwiKX1cbmZ1bmN0aW9uIGRnKGEpe2Z1bmN0aW9uIGIoYixjKXtpZihhKXt2YXIgZD1iLmxhc3RFZmZlY3Q7bnVsbCE9PWQ/KGQubmV4dEVmZmVjdD1jLGIubGFzdEVmZmVjdD1jKTpiLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1jO2MubmV4dEVmZmVjdD1udWxsO2MuZWZmZWN0VGFnPTh9fWZ1bmN0aW9uIGMoYyxkKXtpZighYSlyZXR1cm4gbnVsbDtmb3IoO251bGwhPT1kOyliKGMsZCksZD1kLnNpYmxpbmc7cmV0dXJuIG51bGx9ZnVuY3Rpb24gZChhLGIpe2ZvcihhPW5ldyBNYXA7bnVsbCE9PWI7KW51bGwhPT1iLmtleT9hLnNldChiLmtleSxiKTphLnNldChiLmluZGV4LGIpLGI9Yi5zaWJsaW5nO3JldHVybiBhfWZ1bmN0aW9uIGUoYSxiLGMpe2E9JGUoYSxiLGMpO2EuaW5kZXg9MDthLnNpYmxpbmc9bnVsbDtyZXR1cm4gYX1mdW5jdGlvbiBmKGIsYyxkKXtiLmluZGV4PWQ7aWYoIWEpcmV0dXJuIGM7ZD1iLmFsdGVybmF0ZTtpZihudWxsIT09ZClyZXR1cm4gZD1kLmluZGV4LGQ8Yz8oYi5lZmZlY3RUYWc9XG4yLGMpOmQ7Yi5lZmZlY3RUYWc9MjtyZXR1cm4gY31mdW5jdGlvbiBnKGIpe2EmJm51bGw9PT1iLmFsdGVybmF0ZSYmKGIuZWZmZWN0VGFnPTIpO3JldHVybiBifWZ1bmN0aW9uIGgoYSxiLGMsZCl7aWYobnVsbD09PWJ8fDYhPT1iLnRhZylyZXR1cm4gYj1kZihjLGEubW9kZSxkKSxiLnJldHVybj1hLGI7Yj1lKGIsYyxkKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIGsoYSxiLGMsZCl7aWYobnVsbCE9PWImJmIuZWxlbWVudFR5cGU9PT1jLnR5cGUpcmV0dXJuIGQ9ZShiLGMucHJvcHMsZCksZC5yZWY9YmcoYSxiLGMpLGQucmV0dXJuPWEsZDtkPWFmKGMudHlwZSxjLmtleSxjLnByb3BzLG51bGwsYS5tb2RlLGQpO2QucmVmPWJnKGEsYixjKTtkLnJldHVybj1hO3JldHVybiBkfWZ1bmN0aW9uIGwoYSxiLGMsZCl7aWYobnVsbD09PWJ8fDQhPT1iLnRhZ3x8Yi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyE9PWMuY29udGFpbmVySW5mb3x8Yi5zdGF0ZU5vZGUuaW1wbGVtZW50YXRpb24hPT1cbmMuaW1wbGVtZW50YXRpb24pcmV0dXJuIGI9ZWYoYyxhLm1vZGUsZCksYi5yZXR1cm49YSxiO2I9ZShiLGMuY2hpbGRyZW58fFtdLGQpO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gbShhLGIsYyxkLGcpe2lmKG51bGw9PT1ifHw3IT09Yi50YWcpcmV0dXJuIGI9YmYoYyxhLm1vZGUsZCxnKSxiLnJldHVybj1hLGI7Yj1lKGIsYyxkKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIHIoYSxiLGMpe2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYnx8XCJudW1iZXJcIj09PXR5cGVvZiBiKXJldHVybiBiPWRmKFwiXCIrYixhLm1vZGUsYyksYi5yZXR1cm49YSxiO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYiYmbnVsbCE9PWIpe3N3aXRjaChiLiQkdHlwZW9mKXtjYXNlIFpiOnJldHVybiBjPWFmKGIudHlwZSxiLmtleSxiLnByb3BzLG51bGwsYS5tb2RlLGMpLGMucmVmPWJnKGEsbnVsbCxiKSxjLnJldHVybj1hLGM7Y2FzZSAkYjpyZXR1cm4gYj1lZihiLGEubW9kZSxjKSxiLnJldHVybj1hLGJ9aWYoYWcoYil8fFxubGMoYikpcmV0dXJuIGI9YmYoYixhLm1vZGUsYyxudWxsKSxiLnJldHVybj1hLGI7Y2coYSxiKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiB3KGEsYixjLGQpe3ZhciBlPW51bGwhPT1iP2Iua2V5Om51bGw7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBjfHxcIm51bWJlclwiPT09dHlwZW9mIGMpcmV0dXJuIG51bGwhPT1lP251bGw6aChhLGIsXCJcIitjLGQpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYyYmbnVsbCE9PWMpe3N3aXRjaChjLiQkdHlwZW9mKXtjYXNlIFpiOnJldHVybiBjLmtleT09PWU/Yy50eXBlPT09YWM/bShhLGIsYy5wcm9wcy5jaGlsZHJlbixkLGUpOmsoYSxiLGMsZCk6bnVsbDtjYXNlICRiOnJldHVybiBjLmtleT09PWU/bChhLGIsYyxkKTpudWxsfWlmKGFnKGMpfHxsYyhjKSlyZXR1cm4gbnVsbCE9PWU/bnVsbDptKGEsYixjLGQsbnVsbCk7Y2coYSxjKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiB5KGEsYixjLGQsZSl7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBkfHxcIm51bWJlclwiPT09dHlwZW9mIGQpcmV0dXJuIGE9XG5hLmdldChjKXx8bnVsbCxoKGIsYSxcIlwiK2QsZSk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBkJiZudWxsIT09ZCl7c3dpdGNoKGQuJCR0eXBlb2Ype2Nhc2UgWmI6cmV0dXJuIGE9YS5nZXQobnVsbD09PWQua2V5P2M6ZC5rZXkpfHxudWxsLGQudHlwZT09PWFjP20oYixhLGQucHJvcHMuY2hpbGRyZW4sZSxkLmtleSk6ayhiLGEsZCxlKTtjYXNlICRiOnJldHVybiBhPWEuZ2V0KG51bGw9PT1kLmtleT9jOmQua2V5KXx8bnVsbCxsKGIsYSxkLGUpfWlmKGFnKGQpfHxsYyhkKSlyZXR1cm4gYT1hLmdldChjKXx8bnVsbCxtKGIsYSxkLGUsbnVsbCk7Y2coYixkKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBCKGUsZyxoLGspe2Zvcih2YXIgbD1udWxsLHE9bnVsbCxtPWcsdT1nPTAscD1udWxsO251bGwhPT1tJiZ1PGgubGVuZ3RoO3UrKyl7bS5pbmRleD51PyhwPW0sbT1udWxsKTpwPW0uc2libGluZzt2YXIgdj13KGUsbSxoW3VdLGspO2lmKG51bGw9PT12KXtudWxsPT09bSYmKG09cCk7YnJlYWt9YSYmXG5tJiZudWxsPT09di5hbHRlcm5hdGUmJmIoZSxtKTtnPWYodixnLHUpO251bGw9PT1xP2w9djpxLnNpYmxpbmc9djtxPXY7bT1wfWlmKHU9PT1oLmxlbmd0aClyZXR1cm4gYyhlLG0pLGw7aWYobnVsbD09PW0pe2Zvcig7dTxoLmxlbmd0aDt1KyspaWYobT1yKGUsaFt1XSxrKSlnPWYobSxnLHUpLG51bGw9PT1xP2w9bTpxLnNpYmxpbmc9bSxxPW07cmV0dXJuIGx9Zm9yKG09ZChlLG0pO3U8aC5sZW5ndGg7dSsrKWlmKHA9eShtLGUsdSxoW3VdLGspKWEmJm51bGwhPT1wLmFsdGVybmF0ZSYmbS5kZWxldGUobnVsbD09PXAua2V5P3U6cC5rZXkpLGc9ZihwLGcsdSksbnVsbD09PXE/bD1wOnEuc2libGluZz1wLHE9cDthJiZtLmZvckVhY2goZnVuY3Rpb24oYSl7cmV0dXJuIGIoZSxhKX0pO3JldHVybiBsfWZ1bmN0aW9uIFIoZSxnLGgsayl7dmFyIGw9bGMoaCk7XCJmdW5jdGlvblwiIT09dHlwZW9mIGw/dChcIjE1MFwiKTp2b2lkIDA7aD1sLmNhbGwoaCk7bnVsbD09aD90KFwiMTUxXCIpOnZvaWQgMDtcbmZvcih2YXIgbT1sPW51bGwscT1nLHU9Zz0wLHA9bnVsbCx2PWgubmV4dCgpO251bGwhPT1xJiYhdi5kb25lO3UrKyx2PWgubmV4dCgpKXtxLmluZGV4PnU/KHA9cSxxPW51bGwpOnA9cS5zaWJsaW5nO3ZhciBBPXcoZSxxLHYudmFsdWUsayk7aWYobnVsbD09PUEpe3F8fChxPXApO2JyZWFrfWEmJnEmJm51bGw9PT1BLmFsdGVybmF0ZSYmYihlLHEpO2c9ZihBLGcsdSk7bnVsbD09PW0/bD1BOm0uc2libGluZz1BO209QTtxPXB9aWYodi5kb25lKXJldHVybiBjKGUscSksbDtpZihudWxsPT09cSl7Zm9yKDshdi5kb25lO3UrKyx2PWgubmV4dCgpKXY9cihlLHYudmFsdWUsayksbnVsbCE9PXYmJihnPWYodixnLHUpLG51bGw9PT1tP2w9djptLnNpYmxpbmc9dixtPXYpO3JldHVybiBsfWZvcihxPWQoZSxxKTshdi5kb25lO3UrKyx2PWgubmV4dCgpKXY9eShxLGUsdSx2LnZhbHVlLGspLG51bGwhPT12JiYoYSYmbnVsbCE9PXYuYWx0ZXJuYXRlJiZxLmRlbGV0ZShudWxsPT09di5rZXk/dTpcbnYua2V5KSxnPWYodixnLHUpLG51bGw9PT1tP2w9djptLnNpYmxpbmc9dixtPXYpO2EmJnEuZm9yRWFjaChmdW5jdGlvbihhKXtyZXR1cm4gYihlLGEpfSk7cmV0dXJuIGx9cmV0dXJuIGZ1bmN0aW9uKGEsZCxmLGgpe3ZhciBrPVwib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWYmJmYudHlwZT09PWFjJiZudWxsPT09Zi5rZXk7ayYmKGY9Zi5wcm9wcy5jaGlsZHJlbik7dmFyIGw9XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09ZjtpZihsKXN3aXRjaChmLiQkdHlwZW9mKXtjYXNlIFpiOmE6e2w9Zi5rZXk7Zm9yKGs9ZDtudWxsIT09azspe2lmKGsua2V5PT09bClpZig3PT09ay50YWc/Zi50eXBlPT09YWM6ay5lbGVtZW50VHlwZT09PWYudHlwZSl7YyhhLGsuc2libGluZyk7ZD1lKGssZi50eXBlPT09YWM/Zi5wcm9wcy5jaGlsZHJlbjpmLnByb3BzLGgpO2QucmVmPWJnKGEsayxmKTtkLnJldHVybj1hO2E9ZDticmVhayBhfWVsc2V7YyhhLGspO2JyZWFrfWVsc2UgYihhLGspO2s9XG5rLnNpYmxpbmd9Zi50eXBlPT09YWM/KGQ9YmYoZi5wcm9wcy5jaGlsZHJlbixhLm1vZGUsaCxmLmtleSksZC5yZXR1cm49YSxhPWQpOihoPWFmKGYudHlwZSxmLmtleSxmLnByb3BzLG51bGwsYS5tb2RlLGgpLGgucmVmPWJnKGEsZCxmKSxoLnJldHVybj1hLGE9aCl9cmV0dXJuIGcoYSk7Y2FzZSAkYjphOntmb3Ioaz1mLmtleTtudWxsIT09ZDspe2lmKGQua2V5PT09aylpZig0PT09ZC50YWcmJmQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm89PT1mLmNvbnRhaW5lckluZm8mJmQuc3RhdGVOb2RlLmltcGxlbWVudGF0aW9uPT09Zi5pbXBsZW1lbnRhdGlvbil7YyhhLGQuc2libGluZyk7ZD1lKGQsZi5jaGlsZHJlbnx8W10saCk7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX1lbHNle2MoYSxkKTticmVha31lbHNlIGIoYSxkKTtkPWQuc2libGluZ31kPWVmKGYsYS5tb2RlLGgpO2QucmV0dXJuPWE7YT1kfXJldHVybiBnKGEpfWlmKFwic3RyaW5nXCI9PT10eXBlb2YgZnx8XCJudW1iZXJcIj09PXR5cGVvZiBmKXJldHVybiBmPVxuXCJcIitmLG51bGwhPT1kJiY2PT09ZC50YWc/KGMoYSxkLnNpYmxpbmcpLGQ9ZShkLGYsaCksZC5yZXR1cm49YSxhPWQpOihjKGEsZCksZD1kZihmLGEubW9kZSxoKSxkLnJldHVybj1hLGE9ZCksZyhhKTtpZihhZyhmKSlyZXR1cm4gQihhLGQsZixoKTtpZihsYyhmKSlyZXR1cm4gUihhLGQsZixoKTtsJiZjZyhhLGYpO2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgZiYmIWspc3dpdGNoKGEudGFnKXtjYXNlIDE6Y2FzZSAwOmg9YS50eXBlLHQoXCIxNTJcIixoLmRpc3BsYXlOYW1lfHxoLm5hbWV8fFwiQ29tcG9uZW50XCIpfXJldHVybiBjKGEsZCl9fXZhciBlZz1kZyghMCksZmc9ZGcoITEpLGdnPW51bGwsaGc9bnVsbCxpZz0hMTtcbmZ1bmN0aW9uIGpnKGEsYil7dmFyIGM9Tig1LG51bGwsbnVsbCwwKTtjLmVsZW1lbnRUeXBlPVwiREVMRVRFRFwiO2MudHlwZT1cIkRFTEVURURcIjtjLnN0YXRlTm9kZT1iO2MucmV0dXJuPWE7Yy5lZmZlY3RUYWc9ODtudWxsIT09YS5sYXN0RWZmZWN0PyhhLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1jLGEubGFzdEVmZmVjdD1jKTphLmZpcnN0RWZmZWN0PWEubGFzdEVmZmVjdD1jfWZ1bmN0aW9uIGtnKGEsYil7c3dpdGNoKGEudGFnKXtjYXNlIDU6dmFyIGM9YS50eXBlO2I9MSE9PWIubm9kZVR5cGV8fGMudG9Mb3dlckNhc2UoKSE9PWIubm9kZU5hbWUudG9Mb3dlckNhc2UoKT9udWxsOmI7cmV0dXJuIG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLCEwKTohMTtjYXNlIDY6cmV0dXJuIGI9XCJcIj09PWEucGVuZGluZ1Byb3BzfHwzIT09Yi5ub2RlVHlwZT9udWxsOmIsbnVsbCE9PWI/KGEuc3RhdGVOb2RlPWIsITApOiExO2RlZmF1bHQ6cmV0dXJuITF9fVxuZnVuY3Rpb24gbGcoYSl7aWYoaWcpe3ZhciBiPWhnO2lmKGIpe3ZhciBjPWI7aWYoIWtnKGEsYikpe2I9R2UoYyk7aWYoIWJ8fCFrZyhhLGIpKXthLmVmZmVjdFRhZ3w9MjtpZz0hMTtnZz1hO3JldHVybn1qZyhnZyxjKX1nZz1hO2hnPUhlKGIpfWVsc2UgYS5lZmZlY3RUYWd8PTIsaWc9ITEsZ2c9YX19ZnVuY3Rpb24gbWcoYSl7Zm9yKGE9YS5yZXR1cm47bnVsbCE9PWEmJjUhPT1hLnRhZyYmMyE9PWEudGFnOylhPWEucmV0dXJuO2dnPWF9ZnVuY3Rpb24gbmcoYSl7aWYoYSE9PWdnKXJldHVybiExO2lmKCFpZylyZXR1cm4gbWcoYSksaWc9ITAsITE7dmFyIGI9YS50eXBlO2lmKDUhPT1hLnRhZ3x8XCJoZWFkXCIhPT1iJiZcImJvZHlcIiE9PWImJiFDZShiLGEubWVtb2l6ZWRQcm9wcykpZm9yKGI9aGc7YjspamcoYSxiKSxiPUdlKGIpO21nKGEpO2hnPWdnP0dlKGEuc3RhdGVOb2RlKTpudWxsO3JldHVybiEwfWZ1bmN0aW9uIG9nKCl7aGc9Z2c9bnVsbDtpZz0hMX12YXIgcGc9WGIuUmVhY3RDdXJyZW50T3duZXI7XG5mdW5jdGlvbiBRKGEsYixjLGQpe2IuY2hpbGQ9bnVsbD09PWE/ZmcoYixudWxsLGMsZCk6ZWcoYixhLmNoaWxkLGMsZCl9ZnVuY3Rpb24gcWcoYSxiLGMsZCxlKXtjPWMucmVuZGVyO3ZhciBmPWIucmVmO0RmKGIsZSk7ZD1jKGQsZik7Yi5lZmZlY3RUYWd8PTE7UShhLGIsZCxlKTtyZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIHJnKGEsYixjLGQsZSxmKXtpZihudWxsPT09YSl7dmFyIGc9Yy50eXBlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnJiYhWWUoZykmJnZvaWQgMD09PWcuZGVmYXVsdFByb3BzJiZudWxsPT09Yy5jb21wYXJlJiZ2b2lkIDA9PT1jLmRlZmF1bHRQcm9wcylyZXR1cm4gYi50YWc9MTUsYi50eXBlPWcsc2coYSxiLGcsZCxlLGYpO2E9YWYoYy50eXBlLG51bGwsZCxudWxsLGIubW9kZSxmKTthLnJlZj1iLnJlZjthLnJldHVybj1iO3JldHVybiBiLmNoaWxkPWF9Zz1hLmNoaWxkO2lmKGU8ZiYmKGU9Zy5tZW1vaXplZFByb3BzLGM9Yy5jb21wYXJlLGM9bnVsbCE9PWM/YzpqZCxjKGUsZCkmJmEucmVmPT09Yi5yZWYpKXJldHVybiB0ZyhhLGIsZik7Yi5lZmZlY3RUYWd8PTE7YT0kZShnLGQsZik7YS5yZWY9Yi5yZWY7YS5yZXR1cm49YjtyZXR1cm4gYi5jaGlsZD1hfVxuZnVuY3Rpb24gc2coYSxiLGMsZCxlLGYpe3JldHVybiBudWxsIT09YSYmZTxmJiZqZChhLm1lbW9pemVkUHJvcHMsZCkmJmEucmVmPT09Yi5yZWY/dGcoYSxiLGYpOnVnKGEsYixjLGQsZil9ZnVuY3Rpb24gdmcoYSxiKXt2YXIgYz1iLnJlZjtpZihudWxsPT09YSYmbnVsbCE9PWN8fG51bGwhPT1hJiZhLnJlZiE9PWMpYi5lZmZlY3RUYWd8PTEyOH1mdW5jdGlvbiB1ZyhhLGIsYyxkLGUpe3ZhciBmPU0oYyk/TGU6Sy5jdXJyZW50O2Y9TWUoYixmKTtEZihiLGUpO2M9YyhkLGYpO2IuZWZmZWN0VGFnfD0xO1EoYSxiLGMsZSk7cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiB3ZyhhLGIsYyxkLGUpe2lmKE0oYykpe3ZhciBmPSEwO1JlKGIpfWVsc2UgZj0hMTtEZihiLGUpO2lmKG51bGw9PT1iLnN0YXRlTm9kZSludWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmVmZmVjdFRhZ3w9MiksWGYoYixjLGQsZSksJGYoYixjLGQsZSksZD0hMDtlbHNlIGlmKG51bGw9PT1hKXt2YXIgZz1iLnN0YXRlTm9kZSxoPWIubWVtb2l6ZWRQcm9wcztnLnByb3BzPWg7dmFyIGs9Zy5jb250ZXh0LGw9Yy5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGwmJm51bGwhPT1sP2w9T2YuY3VycmVudERpc3BhdGNoZXIucmVhZENvbnRleHQobCk6KGw9TShjKT9MZTpLLmN1cnJlbnQsbD1NZShiLGwpKTt2YXIgbT1jLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyxyPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBtfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZTtyfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmXG5cImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzfHwoaCE9PWR8fGshPT1sKSYmWmYoYixnLGQsbCk7a2Y9ITE7dmFyIHc9Yi5tZW1vaXplZFN0YXRlO2s9Zy5zdGF0ZT13O3ZhciB5PWIudXBkYXRlUXVldWU7bnVsbCE9PXkmJih0ZihiLHksZCxnLGUpLGs9Yi5tZW1vaXplZFN0YXRlKTtoIT09ZHx8dyE9PWt8fEwuY3VycmVudHx8a2Y/KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBtJiYoUWYoYixjLG0sZCksaz1iLm1lbW9pemVkU3RhdGUpLChoPWtmfHxXZihiLGMsaCxkLHcsayxsKSk/KHJ8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxNb3VudHx8KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxNb3VudCYmZy5jb21wb25lbnRXaWxsTW91bnQoKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZcbmcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCgpKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRNb3VudCYmKGIuZWZmZWN0VGFnfD00KSk6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5lZmZlY3RUYWd8PTQpLGIubWVtb2l6ZWRQcm9wcz1kLGIubWVtb2l6ZWRTdGF0ZT1rKSxnLnByb3BzPWQsZy5zdGF0ZT1rLGcuY29udGV4dD1sLGQ9aCk6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5lZmZlY3RUYWd8PTQpLGQ9ITEpfWVsc2UgZz1iLnN0YXRlTm9kZSxoPWIubWVtb2l6ZWRQcm9wcyxnLnByb3BzPWIudHlwZT09PWIuZWxlbWVudFR5cGU/aDpQKGIudHlwZSxoKSxrPWcuY29udGV4dCxsPWMuY29udGV4dFR5cGUsXCJvYmplY3RcIj09PXR5cGVvZiBsJiZudWxsIT09bD9sPU9mLmN1cnJlbnREaXNwYXRjaGVyLnJlYWRDb250ZXh0KGwpOihsPU0oYyk/TGU6Sy5jdXJyZW50LGw9TWUoYixsKSksbT1jLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyxcbihyPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBtfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSl8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzfHwoaCE9PWR8fGshPT1sKSYmWmYoYixnLGQsbCksa2Y9ITEsaz1iLm1lbW9pemVkU3RhdGUsdz1nLnN0YXRlPWsseT1iLnVwZGF0ZVF1ZXVlLG51bGwhPT15JiYodGYoYix5LGQsZyxlKSx3PWIubWVtb2l6ZWRTdGF0ZSksaCE9PWR8fGshPT13fHxMLmN1cnJlbnR8fGtmPyhcImZ1bmN0aW9uXCI9PT10eXBlb2YgbSYmKFFmKGIsYyxtLGQpLHc9Yi5tZW1vaXplZFN0YXRlKSwobT1rZnx8V2YoYixjLGgsZCxrLHcsbCkpPyhyfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFVwZGF0ZXx8XG4oXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFVwZGF0ZSYmZy5jb21wb25lbnRXaWxsVXBkYXRlKGQsdyxsKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSYmZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZShkLHcsbCkpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZSYmKGIuZWZmZWN0VGFnfD00KSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSYmKGIuZWZmZWN0VGFnfD0yNTYpKTooXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZrPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTQpLFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZrPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTI1NiksYi5tZW1vaXplZFByb3BzPVxuZCxiLm1lbW9pemVkU3RhdGU9dyksZy5wcm9wcz1kLGcuc3RhdGU9dyxnLmNvbnRleHQ9bCxkPW0pOihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJms9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9NCksXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJms9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9MjU2KSxkPSExKTtyZXR1cm4geGcoYSxiLGMsZCxmLGUpfVxuZnVuY3Rpb24geGcoYSxiLGMsZCxlLGYpe3ZnKGEsYik7dmFyIGc9MCE9PShiLmVmZmVjdFRhZyY2NCk7aWYoIWQmJiFnKXJldHVybiBlJiZTZShiLGMsITEpLHRnKGEsYixmKTtkPWIuc3RhdGVOb2RlO3BnLmN1cnJlbnQ9Yjt2YXIgaD1nJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYy5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I/bnVsbDpkLnJlbmRlcigpO2IuZWZmZWN0VGFnfD0xO251bGwhPT1hJiZnPyhiLmNoaWxkPWVnKGIsYS5jaGlsZCxudWxsLGYpLGIuY2hpbGQ9ZWcoYixudWxsLGgsZikpOlEoYSxiLGgsZik7Yi5tZW1vaXplZFN0YXRlPWQuc3RhdGU7ZSYmU2UoYixjLCEwKTtyZXR1cm4gYi5jaGlsZH1mdW5jdGlvbiB5ZyhhKXt2YXIgYj1hLnN0YXRlTm9kZTtiLnBlbmRpbmdDb250ZXh0P1BlKGEsYi5wZW5kaW5nQ29udGV4dCxiLnBlbmRpbmdDb250ZXh0IT09Yi5jb250ZXh0KTpiLmNvbnRleHQmJlBlKGEsYi5jb250ZXh0LCExKTtKZihhLGIuY29udGFpbmVySW5mbyl9XG5mdW5jdGlvbiB6ZyhhLGIsYyl7dmFyIGQ9Yi5tb2RlLGU9Yi5wZW5kaW5nUHJvcHMsZj1iLm1lbW9pemVkU3RhdGU7aWYoMD09PShiLmVmZmVjdFRhZyY2NCkpe2Y9bnVsbDt2YXIgZz0hMX1lbHNlIGY9e3RpbWVkT3V0QXQ6bnVsbCE9PWY/Zi50aW1lZE91dEF0OjB9LGc9ITAsYi5lZmZlY3RUYWcmPS02NTtpZihudWxsPT09YSlpZihnKXt2YXIgaD1lLmZhbGxiYWNrO2E9YmYobnVsbCxkLDAsbnVsbCk7MD09PShiLm1vZGUmMSkmJihhLmNoaWxkPW51bGwhPT1iLm1lbW9pemVkU3RhdGU/Yi5jaGlsZC5jaGlsZDpiLmNoaWxkKTtkPWJmKGgsZCxjLG51bGwpO2Euc2libGluZz1kO2M9YTtjLnJldHVybj1kLnJldHVybj1ifWVsc2UgYz1kPWZnKGIsbnVsbCxlLmNoaWxkcmVuLGMpO2Vsc2UgbnVsbCE9PWEubWVtb2l6ZWRTdGF0ZT8oZD1hLmNoaWxkLGg9ZC5zaWJsaW5nLGc/KGM9ZS5mYWxsYmFjayxlPSRlKGQsZC5wZW5kaW5nUHJvcHMsMCksMD09PShiLm1vZGUmMSkmJihnPW51bGwhPT1cbmIubWVtb2l6ZWRTdGF0ZT9iLmNoaWxkLmNoaWxkOmIuY2hpbGQsZyE9PWQuY2hpbGQmJihlLmNoaWxkPWcpKSxkPWUuc2libGluZz0kZShoLGMsaC5leHBpcmF0aW9uVGltZSksYz1lLGUuY2hpbGRFeHBpcmF0aW9uVGltZT0wLGMucmV0dXJuPWQucmV0dXJuPWIpOmM9ZD1lZyhiLGQuY2hpbGQsZS5jaGlsZHJlbixjKSk6KGg9YS5jaGlsZCxnPyhnPWUuZmFsbGJhY2ssZT1iZihudWxsLGQsMCxudWxsKSxlLmNoaWxkPWgsMD09PShiLm1vZGUmMSkmJihlLmNoaWxkPW51bGwhPT1iLm1lbW9pemVkU3RhdGU/Yi5jaGlsZC5jaGlsZDpiLmNoaWxkKSxkPWUuc2libGluZz1iZihnLGQsYyxudWxsKSxkLmVmZmVjdFRhZ3w9MixjPWUsZS5jaGlsZEV4cGlyYXRpb25UaW1lPTAsYy5yZXR1cm49ZC5yZXR1cm49Yik6ZD1jPWVnKGIsaCxlLmNoaWxkcmVuLGMpKSxiLnN0YXRlTm9kZT1hLnN0YXRlTm9kZTtiLm1lbW9pemVkU3RhdGU9ZjtiLmNoaWxkPWM7cmV0dXJuIGR9XG5mdW5jdGlvbiB0ZyhhLGIsYyl7bnVsbCE9PWEmJihiLmZpcnN0Q29udGV4dERlcGVuZGVuY3k9YS5maXJzdENvbnRleHREZXBlbmRlbmN5KTtpZihiLmNoaWxkRXhwaXJhdGlvblRpbWU8YylyZXR1cm4gbnVsbDtudWxsIT09YSYmYi5jaGlsZCE9PWEuY2hpbGQ/dChcIjE1M1wiKTp2b2lkIDA7aWYobnVsbCE9PWIuY2hpbGQpe2E9Yi5jaGlsZDtjPSRlKGEsYS5wZW5kaW5nUHJvcHMsYS5leHBpcmF0aW9uVGltZSk7Yi5jaGlsZD1jO2ZvcihjLnJldHVybj1iO251bGwhPT1hLnNpYmxpbmc7KWE9YS5zaWJsaW5nLGM9Yy5zaWJsaW5nPSRlKGEsYS5wZW5kaW5nUHJvcHMsYS5leHBpcmF0aW9uVGltZSksYy5yZXR1cm49YjtjLnNpYmxpbmc9bnVsbH1yZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIEFnKGEsYixjKXt2YXIgZD1iLmV4cGlyYXRpb25UaW1lO2lmKG51bGwhPT1hJiZhLm1lbW9pemVkUHJvcHM9PT1iLnBlbmRpbmdQcm9wcyYmIUwuY3VycmVudCYmZDxjKXtzd2l0Y2goYi50YWcpe2Nhc2UgMzp5ZyhiKTtvZygpO2JyZWFrO2Nhc2UgNTpMZihiKTticmVhaztjYXNlIDE6TShiLnR5cGUpJiZSZShiKTticmVhaztjYXNlIDQ6SmYoYixiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKTticmVhaztjYXNlIDEwOkJmKGIsYi5tZW1vaXplZFByb3BzLnZhbHVlKTticmVhaztjYXNlIDEzOmlmKG51bGwhPT1iLm1lbW9pemVkU3RhdGUpe2Q9Yi5jaGlsZC5jaGlsZEV4cGlyYXRpb25UaW1lO2lmKDAhPT1kJiZkPj1jKXJldHVybiB6ZyhhLGIsYyk7Yj10ZyhhLGIsYyk7cmV0dXJuIG51bGwhPT1iP2Iuc2libGluZzpudWxsfX1yZXR1cm4gdGcoYSxiLGMpfWIuZXhwaXJhdGlvblRpbWU9MDtzd2l0Y2goYi50YWcpe2Nhc2UgMjpkPWIuZWxlbWVudFR5cGU7bnVsbCE9PVxuYSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmVmZmVjdFRhZ3w9Mik7YT1iLnBlbmRpbmdQcm9wczt2YXIgZT1NZShiLEsuY3VycmVudCk7RGYoYixjKTtlPWQoYSxlKTtiLmVmZmVjdFRhZ3w9MTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGUmJm51bGwhPT1lJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5yZW5kZXImJnZvaWQgMD09PWUuJCR0eXBlb2Ype2IudGFnPTE7aWYoTShkKSl7dmFyIGY9ITA7UmUoYil9ZWxzZSBmPSExO2IubWVtb2l6ZWRTdGF0ZT1udWxsIT09ZS5zdGF0ZSYmdm9pZCAwIT09ZS5zdGF0ZT9lLnN0YXRlOm51bGw7dmFyIGc9ZC5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM7XCJmdW5jdGlvblwiPT09dHlwZW9mIGcmJlFmKGIsZCxnLGEpO2UudXBkYXRlcj1WZjtiLnN0YXRlTm9kZT1lO2UuX3JlYWN0SW50ZXJuYWxGaWJlcj1iOyRmKGIsZCxhLGMpO2I9eGcobnVsbCxiLGQsITAsZixjKX1lbHNlIGIudGFnPTAsUShudWxsLGIsZSxjKSxiPWIuY2hpbGQ7XG5yZXR1cm4gYjtjYXNlIDE2OmU9Yi5lbGVtZW50VHlwZTtudWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmVmZmVjdFRhZ3w9Mik7Zj1iLnBlbmRpbmdQcm9wczthPU5mKGUpO2IudHlwZT1hO2U9Yi50YWc9WmUoYSk7Zj1QKGEsZik7Zz12b2lkIDA7c3dpdGNoKGUpe2Nhc2UgMDpnPXVnKG51bGwsYixhLGYsYyk7YnJlYWs7Y2FzZSAxOmc9d2cobnVsbCxiLGEsZixjKTticmVhaztjYXNlIDExOmc9cWcobnVsbCxiLGEsZixjKTticmVhaztjYXNlIDE0Omc9cmcobnVsbCxiLGEsUChhLnR5cGUsZiksZCxjKTticmVhaztkZWZhdWx0OnQoXCIzMDZcIixhLFwiXCIpfXJldHVybiBnO2Nhc2UgMDpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6UChkLGUpLHVnKGEsYixkLGUsYyk7Y2FzZSAxOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTpQKGQsZSksd2coYSxiLFxuZCxlLGMpO2Nhc2UgMzp5ZyhiKTtkPWIudXBkYXRlUXVldWU7bnVsbD09PWQ/dChcIjI4MlwiKTp2b2lkIDA7ZT1iLm1lbW9pemVkU3RhdGU7ZT1udWxsIT09ZT9lLmVsZW1lbnQ6bnVsbDt0ZihiLGQsYi5wZW5kaW5nUHJvcHMsbnVsbCxjKTtkPWIubWVtb2l6ZWRTdGF0ZS5lbGVtZW50O2lmKGQ9PT1lKW9nKCksYj10ZyhhLGIsYyk7ZWxzZXtlPWIuc3RhdGVOb2RlO2lmKGU9KG51bGw9PT1hfHxudWxsPT09YS5jaGlsZCkmJmUuaHlkcmF0ZSloZz1IZShiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKSxnZz1iLGU9aWc9ITA7ZT8oYi5lZmZlY3RUYWd8PTIsYi5jaGlsZD1mZyhiLG51bGwsZCxjKSk6KFEoYSxiLGQsYyksb2coKSk7Yj1iLmNoaWxkfXJldHVybiBiO2Nhc2UgNTpyZXR1cm4gTGYoYiksbnVsbD09PWEmJmxnKGIpLGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZj1udWxsIT09YT9hLm1lbW9pemVkUHJvcHM6bnVsbCxnPWUuY2hpbGRyZW4sQ2UoZCxlKT9nPW51bGw6bnVsbCE9PVxuZiYmQ2UoZCxmKSYmKGIuZWZmZWN0VGFnfD0xNiksdmcoYSxiKSwxIT09YyYmYi5tb2RlJjEmJmUuaGlkZGVuPyhiLmV4cGlyYXRpb25UaW1lPTEsYj1udWxsKTooUShhLGIsZyxjKSxiPWIuY2hpbGQpLGI7Y2FzZSA2OnJldHVybiBudWxsPT09YSYmbGcoYiksbnVsbDtjYXNlIDEzOnJldHVybiB6ZyhhLGIsYyk7Y2FzZSA0OnJldHVybiBKZihiLGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pLGQ9Yi5wZW5kaW5nUHJvcHMsbnVsbD09PWE/Yi5jaGlsZD1lZyhiLG51bGwsZCxjKTpRKGEsYixkLGMpLGIuY2hpbGQ7Y2FzZSAxMTpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6UChkLGUpLHFnKGEsYixkLGUsYyk7Y2FzZSA3OnJldHVybiBRKGEsYixiLnBlbmRpbmdQcm9wcyxjKSxiLmNoaWxkO2Nhc2UgODpyZXR1cm4gUShhLGIsYi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sYyksYi5jaGlsZDtjYXNlIDEyOnJldHVybiBRKGEsYixiLnBlbmRpbmdQcm9wcy5jaGlsZHJlbixcbmMpLGIuY2hpbGQ7Y2FzZSAxMDphOntkPWIudHlwZS5fY29udGV4dDtlPWIucGVuZGluZ1Byb3BzO2c9Yi5tZW1vaXplZFByb3BzO2Y9ZS52YWx1ZTtCZihiLGYpO2lmKG51bGwhPT1nKXt2YXIgaD1nLnZhbHVlO2Y9aD09PWYmJigwIT09aHx8MS9oPT09MS9mKXx8aCE9PWgmJmYhPT1mPzA6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLl9jYWxjdWxhdGVDaGFuZ2VkQml0cz9kLl9jYWxjdWxhdGVDaGFuZ2VkQml0cyhoLGYpOjEwNzM3NDE4MjMpfDA7aWYoMD09PWYpe2lmKGcuY2hpbGRyZW49PT1lLmNoaWxkcmVuJiYhTC5jdXJyZW50KXtiPXRnKGEsYixjKTticmVhayBhfX1lbHNlIGZvcihnPWIuY2hpbGQsbnVsbCE9PWcmJihnLnJldHVybj1iKTtudWxsIT09Zzspe2g9Zy5maXJzdENvbnRleHREZXBlbmRlbmN5O2lmKG51bGwhPT1oKXtkb3tpZihoLmNvbnRleHQ9PT1kJiYwIT09KGgub2JzZXJ2ZWRCaXRzJmYpKXtpZigxPT09Zy50YWcpe3ZhciBrPW5mKGMpO2sudGFnPTI7cGYoZyxrKX1nLmV4cGlyYXRpb25UaW1lPFxuYyYmKGcuZXhwaXJhdGlvblRpbWU9Yyk7az1nLmFsdGVybmF0ZTtudWxsIT09ayYmay5leHBpcmF0aW9uVGltZTxjJiYoay5leHBpcmF0aW9uVGltZT1jKTtmb3IodmFyIGw9Zy5yZXR1cm47bnVsbCE9PWw7KXtrPWwuYWx0ZXJuYXRlO2lmKGwuY2hpbGRFeHBpcmF0aW9uVGltZTxjKWwuY2hpbGRFeHBpcmF0aW9uVGltZT1jLG51bGwhPT1rJiZrLmNoaWxkRXhwaXJhdGlvblRpbWU8YyYmKGsuY2hpbGRFeHBpcmF0aW9uVGltZT1jKTtlbHNlIGlmKG51bGwhPT1rJiZrLmNoaWxkRXhwaXJhdGlvblRpbWU8YylrLmNoaWxkRXhwaXJhdGlvblRpbWU9YztlbHNlIGJyZWFrO2w9bC5yZXR1cm59fWs9Zy5jaGlsZDtoPWgubmV4dH13aGlsZShudWxsIT09aCl9ZWxzZSBrPTEwPT09Zy50YWc/Zy50eXBlPT09Yi50eXBlP251bGw6Zy5jaGlsZDpnLmNoaWxkO2lmKG51bGwhPT1rKWsucmV0dXJuPWc7ZWxzZSBmb3Ioaz1nO251bGwhPT1rOyl7aWYoaz09PWIpe2s9bnVsbDticmVha31nPWsuc2libGluZztcbmlmKG51bGwhPT1nKXtnLnJldHVybj1rLnJldHVybjtrPWc7YnJlYWt9az1rLnJldHVybn1nPWt9fVEoYSxiLGUuY2hpbGRyZW4sYyk7Yj1iLmNoaWxkfXJldHVybiBiO2Nhc2UgOTpyZXR1cm4gZT1iLnR5cGUsZj1iLnBlbmRpbmdQcm9wcyxkPWYuY2hpbGRyZW4sRGYoYixjKSxlPUVmKGUsZi51bnN0YWJsZV9vYnNlcnZlZEJpdHMpLGQ9ZChlKSxiLmVmZmVjdFRhZ3w9MSxRKGEsYixkLGMpLGIuY2hpbGQ7Y2FzZSAxNDpyZXR1cm4gZT1iLnR5cGUsZj1QKGUsYi5wZW5kaW5nUHJvcHMpLGY9UChlLnR5cGUsZikscmcoYSxiLGUsZixkLGMpO2Nhc2UgMTU6cmV0dXJuIHNnKGEsYixiLnR5cGUsYi5wZW5kaW5nUHJvcHMsZCxjKTtjYXNlIDE3OnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTpQKGQsZSksbnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5lZmZlY3RUYWd8PTIpLGIudGFnPTEsTShkKT8oYT1cbiEwLFJlKGIpKTphPSExLERmKGIsYyksWGYoYixkLGUsYyksJGYoYixkLGUsYykseGcobnVsbCxiLGQsITAsYSxjKTtkZWZhdWx0OnQoXCIxNTZcIil9fWZ1bmN0aW9uIEJnKGEpe2EuZWZmZWN0VGFnfD00fXZhciBDZz12b2lkIDAsR2c9dm9pZCAwLEhnPXZvaWQgMCxJZz12b2lkIDA7Q2c9ZnVuY3Rpb24oYSxiKXtmb3IodmFyIGM9Yi5jaGlsZDtudWxsIT09Yzspe2lmKDU9PT1jLnRhZ3x8Nj09PWMudGFnKWEuYXBwZW5kQ2hpbGQoYy5zdGF0ZU5vZGUpO2Vsc2UgaWYoNCE9PWMudGFnJiZudWxsIT09Yy5jaGlsZCl7Yy5jaGlsZC5yZXR1cm49YztjPWMuY2hpbGQ7Y29udGludWV9aWYoYz09PWIpYnJlYWs7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxjLnJldHVybj09PWIpcmV0dXJuO2M9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtjPWMuc2libGluZ319O0dnPWZ1bmN0aW9uKCl7fTtcbkhnPWZ1bmN0aW9uKGEsYixjLGQsZSl7dmFyIGY9YS5tZW1vaXplZFByb3BzO2lmKGYhPT1kKXt2YXIgZz1iLnN0YXRlTm9kZTtJZihPLmN1cnJlbnQpO2E9bnVsbDtzd2l0Y2goYyl7Y2FzZSBcImlucHV0XCI6Zj16YyhnLGYpO2Q9emMoZyxkKTthPVtdO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpmPWVlKGcsZik7ZD1lZShnLGQpO2E9W107YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmY9bih7fSxmLHt2YWx1ZTp2b2lkIDB9KTtkPW4oe30sZCx7dmFsdWU6dm9pZCAwfSk7YT1bXTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpmPWdlKGcsZik7ZD1nZShnLGQpO2E9W107YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCIhPT10eXBlb2YgZi5vbkNsaWNrJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5vbkNsaWNrJiYoZy5vbmNsaWNrPXllKX12ZShjLGQpO2c9Yz12b2lkIDA7dmFyIGg9bnVsbDtmb3IoYyBpbiBmKWlmKCFkLmhhc093blByb3BlcnR5KGMpJiZmLmhhc093blByb3BlcnR5KGMpJiZudWxsIT1mW2NdKWlmKFwic3R5bGVcIj09PVxuYyl7dmFyIGs9ZltjXTtmb3IoZyBpbiBrKWsuaGFzT3duUHJvcGVydHkoZykmJihofHwoaD17fSksaFtnXT1cIlwiKX1lbHNlXCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiIT09YyYmXCJjaGlsZHJlblwiIT09YyYmXCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWMmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1jJiZcImF1dG9Gb2N1c1wiIT09YyYmKHNhLmhhc093blByb3BlcnR5KGMpP2F8fChhPVtdKTooYT1hfHxbXSkucHVzaChjLG51bGwpKTtmb3IoYyBpbiBkKXt2YXIgbD1kW2NdO2s9bnVsbCE9Zj9mW2NdOnZvaWQgMDtpZihkLmhhc093blByb3BlcnR5KGMpJiZsIT09ayYmKG51bGwhPWx8fG51bGwhPWspKWlmKFwic3R5bGVcIj09PWMpaWYoayl7Zm9yKGcgaW4gaykhay5oYXNPd25Qcm9wZXJ0eShnKXx8bCYmbC5oYXNPd25Qcm9wZXJ0eShnKXx8KGh8fChoPXt9KSxoW2ddPVwiXCIpO2ZvcihnIGluIGwpbC5oYXNPd25Qcm9wZXJ0eShnKSYma1tnXSE9PWxbZ10mJihofHxcbihoPXt9KSxoW2ddPWxbZ10pfWVsc2UgaHx8KGF8fChhPVtdKSxhLnB1c2goYyxoKSksaD1sO2Vsc2VcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1jPyhsPWw/bC5fX2h0bWw6dm9pZCAwLGs9az9rLl9faHRtbDp2b2lkIDAsbnVsbCE9bCYmayE9PWwmJihhPWF8fFtdKS5wdXNoKGMsXCJcIitsKSk6XCJjaGlsZHJlblwiPT09Yz9rPT09bHx8XCJzdHJpbmdcIiE9PXR5cGVvZiBsJiZcIm51bWJlclwiIT09dHlwZW9mIGx8fChhPWF8fFtdKS5wdXNoKGMsXCJcIitsKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09YyYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWMmJihzYS5oYXNPd25Qcm9wZXJ0eShjKT8obnVsbCE9bCYmeGUoZSxjKSxhfHxrPT09bHx8KGE9W10pKTooYT1hfHxbXSkucHVzaChjLGwpKX1oJiYoYT1hfHxbXSkucHVzaChcInN0eWxlXCIsaCk7ZT1hOyhiLnVwZGF0ZVF1ZXVlPWUpJiZCZyhiKX19O0lnPWZ1bmN0aW9uKGEsYixjLGQpe2MhPT1kJiZCZyhiKX07XG52YXIgSmc9XCJmdW5jdGlvblwiPT09dHlwZW9mIFdlYWtTZXQ/V2Vha1NldDpTZXQ7ZnVuY3Rpb24gS2coYSxiKXt2YXIgYz1iLnNvdXJjZSxkPWIuc3RhY2s7bnVsbD09PWQmJm51bGwhPT1jJiYoZD1uYyhjKSk7bnVsbCE9PWMmJm1jKGMudHlwZSk7Yj1iLnZhbHVlO251bGwhPT1hJiYxPT09YS50YWcmJm1jKGEudHlwZSk7dHJ5e2NvbnNvbGUuZXJyb3IoYil9Y2F0Y2goZSl7c2V0VGltZW91dChmdW5jdGlvbigpe3Rocm93IGU7fSl9fWZ1bmN0aW9uIExnKGEpe3ZhciBiPWEucmVmO2lmKG51bGwhPT1iKWlmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBiKXRyeXtiKG51bGwpfWNhdGNoKGMpe01nKGEsYyl9ZWxzZSBiLmN1cnJlbnQ9bnVsbH1cbmZ1bmN0aW9uIE5nKGEsYil7Zm9yKHZhciBjPWE7Oyl7aWYoNT09PWMudGFnKXt2YXIgZD1jLnN0YXRlTm9kZTtpZihiKWQuc3R5bGUuZGlzcGxheT1cIm5vbmVcIjtlbHNle2Q9Yy5zdGF0ZU5vZGU7dmFyIGU9Yy5tZW1vaXplZFByb3BzLnN0eWxlO2U9dm9pZCAwIT09ZSYmbnVsbCE9PWUmJmUuaGFzT3duUHJvcGVydHkoXCJkaXNwbGF5XCIpP2UuZGlzcGxheTpudWxsO2Quc3R5bGUuZGlzcGxheT1zZShcImRpc3BsYXlcIixlKX19ZWxzZSBpZig2PT09Yy50YWcpYy5zdGF0ZU5vZGUubm9kZVZhbHVlPWI/XCJcIjpjLm1lbW9pemVkUHJvcHM7ZWxzZSBpZigxMz09PWMudGFnJiZudWxsIT09Yy5tZW1vaXplZFN0YXRlKXtkPWMuY2hpbGQuc2libGluZztkLnJldHVybj1jO2M9ZDtjb250aW51ZX1lbHNlIGlmKG51bGwhPT1jLmNoaWxkKXtjLmNoaWxkLnJldHVybj1jO2M9Yy5jaGlsZDtjb250aW51ZX1pZihjPT09YSlicmVhaztmb3IoO251bGw9PT1jLnNpYmxpbmc7KXtpZihudWxsPT09Yy5yZXR1cm58fFxuYy5yZXR1cm49PT1hKXJldHVybjtjPWMucmV0dXJufWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Yz1jLnNpYmxpbmd9fVxuZnVuY3Rpb24gT2coYSl7XCJmdW5jdGlvblwiPT09dHlwZW9mIFVlJiZVZShhKTtzd2l0Y2goYS50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTQ6Y2FzZSAxNTp2YXIgYj1hLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1iJiYoYj1iLmxhc3RFZmZlY3QsbnVsbCE9PWIpKXt2YXIgYz1iPWIubmV4dDtkb3t2YXIgZD1jLmRlc3Ryb3k7aWYobnVsbCE9PWQpe3ZhciBlPWE7dHJ5e2QoKX1jYXRjaChmKXtNZyhlLGYpfX1jPWMubmV4dH13aGlsZShjIT09Yil9YnJlYWs7Y2FzZSAxOkxnKGEpO2I9YS5zdGF0ZU5vZGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGIuY29tcG9uZW50V2lsbFVubW91bnQpdHJ5e2IucHJvcHM9YS5tZW1vaXplZFByb3BzLGIuc3RhdGU9YS5tZW1vaXplZFN0YXRlLGIuY29tcG9uZW50V2lsbFVubW91bnQoKX1jYXRjaChmKXtNZyhhLGYpfWJyZWFrO2Nhc2UgNTpMZyhhKTticmVhaztjYXNlIDQ6UGcoYSl9fVxuZnVuY3Rpb24gUWcoYSl7cmV0dXJuIDU9PT1hLnRhZ3x8Mz09PWEudGFnfHw0PT09YS50YWd9XG5mdW5jdGlvbiBSZyhhKXthOntmb3IodmFyIGI9YS5yZXR1cm47bnVsbCE9PWI7KXtpZihRZyhiKSl7dmFyIGM9YjticmVhayBhfWI9Yi5yZXR1cm59dChcIjE2MFwiKTtjPXZvaWQgMH12YXIgZD1iPXZvaWQgMDtzd2l0Y2goYy50YWcpe2Nhc2UgNTpiPWMuc3RhdGVOb2RlO2Q9ITE7YnJlYWs7Y2FzZSAzOmI9Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztkPSEwO2JyZWFrO2Nhc2UgNDpiPWMuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87ZD0hMDticmVhaztkZWZhdWx0OnQoXCIxNjFcIil9Yy5lZmZlY3RUYWcmMTYmJihwZShiLFwiXCIpLGMuZWZmZWN0VGFnJj0tMTcpO2E6Yjpmb3IoYz1hOzspe2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jLnJldHVybnx8UWcoYy5yZXR1cm4pKXtjPW51bGw7YnJlYWsgYX1jPWMucmV0dXJufWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Zm9yKGM9Yy5zaWJsaW5nOzUhPT1jLnRhZyYmNiE9PWMudGFnOyl7aWYoYy5lZmZlY3RUYWcmMiljb250aW51ZSBiO1xuaWYobnVsbD09PWMuY2hpbGR8fDQ9PT1jLnRhZyljb250aW51ZSBiO2Vsc2UgYy5jaGlsZC5yZXR1cm49YyxjPWMuY2hpbGR9aWYoIShjLmVmZmVjdFRhZyYyKSl7Yz1jLnN0YXRlTm9kZTticmVhayBhfX1mb3IodmFyIGU9YTs7KXtpZig1PT09ZS50YWd8fDY9PT1lLnRhZylpZihjKWlmKGQpe3ZhciBmPWIsZz1lLnN0YXRlTm9kZSxoPWM7OD09PWYubm9kZVR5cGU/Zi5wYXJlbnROb2RlLmluc2VydEJlZm9yZShnLGgpOmYuaW5zZXJ0QmVmb3JlKGcsaCl9ZWxzZSBiLmluc2VydEJlZm9yZShlLnN0YXRlTm9kZSxjKTtlbHNlIGQ/KGc9YixoPWUuc3RhdGVOb2RlLDg9PT1nLm5vZGVUeXBlPyhmPWcucGFyZW50Tm9kZSxmLmluc2VydEJlZm9yZShoLGcpKTooZj1nLGYuYXBwZW5kQ2hpbGQoaCkpLGc9Zy5fcmVhY3RSb290Q29udGFpbmVyLG51bGwhPT1nJiZ2b2lkIDAhPT1nfHxudWxsIT09Zi5vbmNsaWNrfHwoZi5vbmNsaWNrPXllKSk6Yi5hcHBlbmRDaGlsZChlLnN0YXRlTm9kZSk7XG5lbHNlIGlmKDQhPT1lLnRhZyYmbnVsbCE9PWUuY2hpbGQpe2UuY2hpbGQucmV0dXJuPWU7ZT1lLmNoaWxkO2NvbnRpbnVlfWlmKGU9PT1hKWJyZWFrO2Zvcig7bnVsbD09PWUuc2libGluZzspe2lmKG51bGw9PT1lLnJldHVybnx8ZS5yZXR1cm49PT1hKXJldHVybjtlPWUucmV0dXJufWUuc2libGluZy5yZXR1cm49ZS5yZXR1cm47ZT1lLnNpYmxpbmd9fVxuZnVuY3Rpb24gUGcoYSl7Zm9yKHZhciBiPWEsYz0hMSxkPXZvaWQgMCxlPXZvaWQgMDs7KXtpZighYyl7Yz1iLnJldHVybjthOmZvcig7Oyl7bnVsbD09PWM/dChcIjE2MFwiKTp2b2lkIDA7c3dpdGNoKGMudGFnKXtjYXNlIDU6ZD1jLnN0YXRlTm9kZTtlPSExO2JyZWFrIGE7Y2FzZSAzOmQ9Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztlPSEwO2JyZWFrIGE7Y2FzZSA0OmQ9Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztlPSEwO2JyZWFrIGF9Yz1jLnJldHVybn1jPSEwfWlmKDU9PT1iLnRhZ3x8Nj09PWIudGFnKXthOmZvcih2YXIgZj1iLGc9Zjs7KWlmKE9nKGcpLG51bGwhPT1nLmNoaWxkJiY0IT09Zy50YWcpZy5jaGlsZC5yZXR1cm49ZyxnPWcuY2hpbGQ7ZWxzZXtpZihnPT09ZilicmVhaztmb3IoO251bGw9PT1nLnNpYmxpbmc7KXtpZihudWxsPT09Zy5yZXR1cm58fGcucmV0dXJuPT09ZilicmVhayBhO2c9Zy5yZXR1cm59Zy5zaWJsaW5nLnJldHVybj1nLnJldHVybjtnPWcuc2libGluZ31lP1xuKGY9ZCxnPWIuc3RhdGVOb2RlLDg9PT1mLm5vZGVUeXBlP2YucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChnKTpmLnJlbW92ZUNoaWxkKGcpKTpkLnJlbW92ZUNoaWxkKGIuc3RhdGVOb2RlKX1lbHNlIGlmKDQ9PT1iLnRhZz8oZD1iLnN0YXRlTm9kZS5jb250YWluZXJJbmZvLGU9ITApOk9nKGIpLG51bGwhPT1iLmNoaWxkKXtiLmNoaWxkLnJldHVybj1iO2I9Yi5jaGlsZDtjb250aW51ZX1pZihiPT09YSlicmVhaztmb3IoO251bGw9PT1iLnNpYmxpbmc7KXtpZihudWxsPT09Yi5yZXR1cm58fGIucmV0dXJuPT09YSlyZXR1cm47Yj1iLnJldHVybjs0PT09Yi50YWcmJihjPSExKX1iLnNpYmxpbmcucmV0dXJuPWIucmV0dXJuO2I9Yi5zaWJsaW5nfX1cbmZ1bmN0aW9uIFNnKGEsYil7c3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE0OmNhc2UgMTU6YnJlYWs7Y2FzZSAxOmJyZWFrO2Nhc2UgNTp2YXIgYz1iLnN0YXRlTm9kZTtpZihudWxsIT1jKXt2YXIgZD1iLm1lbW9pemVkUHJvcHM7YT1udWxsIT09YT9hLm1lbW9pemVkUHJvcHM6ZDt2YXIgZT1iLnR5cGUsZj1iLnVwZGF0ZVF1ZXVlO2IudXBkYXRlUXVldWU9bnVsbDtudWxsIT09ZiYmRmUoYyxmLGUsYSxkLGIpfWJyZWFrO2Nhc2UgNjpudWxsPT09Yi5zdGF0ZU5vZGU/dChcIjE2MlwiKTp2b2lkIDA7Yi5zdGF0ZU5vZGUubm9kZVZhbHVlPWIubWVtb2l6ZWRQcm9wczticmVhaztjYXNlIDM6YnJlYWs7Y2FzZSAxMjpicmVhaztjYXNlIDEzOmM9Yi5tZW1vaXplZFN0YXRlO2Q9dm9pZCAwO2E9YjtudWxsPT09Yz9kPSExOihkPSEwLGE9Yi5jaGlsZCwwPT09Yy50aW1lZE91dEF0JiYoYy50aW1lZE91dEF0PVJmKCkpKTtudWxsIT09YSYmTmcoYSxkKTtjPWIudXBkYXRlUXVldWU7XG5pZihudWxsIT09Yyl7Yi51cGRhdGVRdWV1ZT1udWxsO3ZhciBnPWIuc3RhdGVOb2RlO251bGw9PT1nJiYoZz1iLnN0YXRlTm9kZT1uZXcgSmcpO2MuZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYz1UZy5iaW5kKG51bGwsYixhKTtnLmhhcyhhKXx8KGcuYWRkKGEpLGEudGhlbihjLGMpKX0pfWJyZWFrO2Nhc2UgMTc6YnJlYWs7ZGVmYXVsdDp0KFwiMTYzXCIpfX12YXIgVWc9XCJmdW5jdGlvblwiPT09dHlwZW9mIFdlYWtNYXA/V2Vha01hcDpNYXA7ZnVuY3Rpb24gVmcoYSxiLGMpe2M9bmYoYyk7Yy50YWc9MztjLnBheWxvYWQ9e2VsZW1lbnQ6bnVsbH07dmFyIGQ9Yi52YWx1ZTtjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7V2coZCk7S2coYSxiKX07cmV0dXJuIGN9XG5mdW5jdGlvbiBYZyhhLGIsYyl7Yz1uZihjKTtjLnRhZz0zO3ZhciBkPWEudHlwZS5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGQpe3ZhciBlPWIudmFsdWU7Yy5wYXlsb2FkPWZ1bmN0aW9uKCl7cmV0dXJuIGQoZSl9fXZhciBmPWEuc3RhdGVOb2RlO251bGwhPT1mJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZi5jb21wb25lbnREaWRDYXRjaCYmKGMuY2FsbGJhY2s9ZnVuY3Rpb24oKXtcImZ1bmN0aW9uXCIhPT10eXBlb2YgZCYmKG51bGw9PT1ZZz9ZZz1uZXcgU2V0KFt0aGlzXSk6WWcuYWRkKHRoaXMpKTt2YXIgYz1iLnZhbHVlLGU9Yi5zdGFjaztLZyhhLGIpO3RoaXMuY29tcG9uZW50RGlkQ2F0Y2goYyx7Y29tcG9uZW50U3RhY2s6bnVsbCE9PWU/ZTpcIlwifSl9KTtyZXR1cm4gY31cbmZ1bmN0aW9uIFpnKGEpe3N3aXRjaChhLnRhZyl7Y2FzZSAxOk0oYS50eXBlKSYmTmUoYSk7dmFyIGI9YS5lZmZlY3RUYWc7cmV0dXJuIGImMjA0OD8oYS5lZmZlY3RUYWc9YiYtMjA0OXw2NCxhKTpudWxsO2Nhc2UgMzpyZXR1cm4gS2YoYSksT2UoYSksYj1hLmVmZmVjdFRhZywwIT09KGImNjQpP3QoXCIyODVcIik6dm9pZCAwLGEuZWZmZWN0VGFnPWImLTIwNDl8NjQsYTtjYXNlIDU6cmV0dXJuIE1mKGEpLG51bGw7Y2FzZSAxMzpyZXR1cm4gYj1hLmVmZmVjdFRhZyxiJjIwNDg/KGEuZWZmZWN0VGFnPWImLTIwNDl8NjQsYSk6bnVsbDtjYXNlIDQ6cmV0dXJuIEtmKGEpLG51bGw7Y2FzZSAxMDpyZXR1cm4gQ2YoYSksbnVsbDtkZWZhdWx0OnJldHVybiBudWxsfX1cbnZhciAkZz17cmVhZENvbnRleHQ6RWZ9LGFoPVhiLlJlYWN0Q3VycmVudE93bmVyLGJoPTEwNzM3NDE4MjIsY2g9MCxkaD0hMSxTPW51bGwsVD1udWxsLFU9MCxlaD0tMSxmaD0hMSxWPW51bGwsZ2g9ITEsaGg9bnVsbCxpaD1udWxsLFlnPW51bGw7ZnVuY3Rpb24gamgoKXtpZihudWxsIT09Uylmb3IodmFyIGE9Uy5yZXR1cm47bnVsbCE9PWE7KXt2YXIgYj1hO3N3aXRjaChiLnRhZyl7Y2FzZSAxOnZhciBjPWIudHlwZS5jaGlsZENvbnRleHRUeXBlcztudWxsIT09YyYmdm9pZCAwIT09YyYmTmUoYik7YnJlYWs7Y2FzZSAzOktmKGIpO09lKGIpO2JyZWFrO2Nhc2UgNTpNZihiKTticmVhaztjYXNlIDQ6S2YoYik7YnJlYWs7Y2FzZSAxMDpDZihiKX1hPWEucmV0dXJufVQ9bnVsbDtVPTA7ZWg9LTE7Zmg9ITE7Uz1udWxsfWZ1bmN0aW9uIFRmKCl7bnVsbCE9PWloJiYoYmEudW5zdGFibGVfY2FuY2VsQ2FsbGJhY2soaGgpLGloKCkpfVxuZnVuY3Rpb24ga2goYSl7Zm9yKDs7KXt2YXIgYj1hLmFsdGVybmF0ZSxjPWEucmV0dXJuLGQ9YS5zaWJsaW5nO2lmKDA9PT0oYS5lZmZlY3RUYWcmMTAyNCkpe1M9YTthOnt2YXIgZT1iO2I9YTt2YXIgZj1VO3ZhciBnPWIucGVuZGluZ1Byb3BzO3N3aXRjaChiLnRhZyl7Y2FzZSAyOmJyZWFrO2Nhc2UgMTY6YnJlYWs7Y2FzZSAxNTpjYXNlIDA6YnJlYWs7Y2FzZSAxOk0oYi50eXBlKSYmTmUoYik7YnJlYWs7Y2FzZSAzOktmKGIpO09lKGIpO2c9Yi5zdGF0ZU5vZGU7Zy5wZW5kaW5nQ29udGV4dCYmKGcuY29udGV4dD1nLnBlbmRpbmdDb250ZXh0LGcucGVuZGluZ0NvbnRleHQ9bnVsbCk7aWYobnVsbD09PWV8fG51bGw9PT1lLmNoaWxkKW5nKGIpLGIuZWZmZWN0VGFnJj0tMztHZyhiKTticmVhaztjYXNlIDU6TWYoYik7dmFyIGg9SWYoSGYuY3VycmVudCk7Zj1iLnR5cGU7aWYobnVsbCE9PWUmJm51bGwhPWIuc3RhdGVOb2RlKUhnKGUsYixmLGcsaCksZS5yZWYhPT1iLnJlZiYmKGIuZWZmZWN0VGFnfD1cbjEyOCk7ZWxzZSBpZihnKXt2YXIgaz1JZihPLmN1cnJlbnQpO2lmKG5nKGIpKXtnPWI7ZT1nLnN0YXRlTm9kZTt2YXIgbD1nLnR5cGUsbT1nLm1lbW9pemVkUHJvcHMscj1oO2VbR2FdPWc7ZVtIYV09bTtmPXZvaWQgMDtoPWw7c3dpdGNoKGgpe2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6SChcImxvYWRcIixlKTticmVhaztjYXNlIFwidmlkZW9cIjpjYXNlIFwiYXVkaW9cIjpmb3IobD0wO2w8YmIubGVuZ3RoO2wrKylIKGJiW2xdLGUpO2JyZWFrO2Nhc2UgXCJzb3VyY2VcIjpIKFwiZXJyb3JcIixlKTticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6Y2FzZSBcImxpbmtcIjpIKFwiZXJyb3JcIixlKTtIKFwibG9hZFwiLGUpO2JyZWFrO2Nhc2UgXCJmb3JtXCI6SChcInJlc2V0XCIsZSk7SChcInN1Ym1pdFwiLGUpO2JyZWFrO2Nhc2UgXCJkZXRhaWxzXCI6SChcInRvZ2dsZVwiLGUpO2JyZWFrO2Nhc2UgXCJpbnB1dFwiOkFjKGUsbSk7SChcImludmFsaWRcIixlKTt4ZShyLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmUuX3dyYXBwZXJTdGF0ZT1cbnt3YXNNdWx0aXBsZTohIW0ubXVsdGlwbGV9O0goXCJpbnZhbGlkXCIsZSk7eGUocixcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmhlKGUsbSksSChcImludmFsaWRcIixlKSx4ZShyLFwib25DaGFuZ2VcIil9dmUoaCxtKTtsPW51bGw7Zm9yKGYgaW4gbSltLmhhc093blByb3BlcnR5KGYpJiYoaz1tW2ZdLFwiY2hpbGRyZW5cIj09PWY/XCJzdHJpbmdcIj09PXR5cGVvZiBrP2UudGV4dENvbnRlbnQhPT1rJiYobD1bXCJjaGlsZHJlblwiLGtdKTpcIm51bWJlclwiPT09dHlwZW9mIGsmJmUudGV4dENvbnRlbnQhPT1cIlwiK2smJihsPVtcImNoaWxkcmVuXCIsXCJcIitrXSk6c2EuaGFzT3duUHJvcGVydHkoZikmJm51bGwhPWsmJnhlKHIsZikpO3N3aXRjaChoKXtjYXNlIFwiaW5wdXRcIjpWYihlKTtFYyhlLG0sITApO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOlZiKGUpO2plKGUsbSk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmNhc2UgXCJvcHRpb25cIjpicmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIj09PXR5cGVvZiBtLm9uQ2xpY2smJlxuKGUub25jbGljaz15ZSl9Zj1sO2cudXBkYXRlUXVldWU9ZjtnPW51bGwhPT1mPyEwOiExO2cmJkJnKGIpfWVsc2V7bT1iO2U9ZjtyPWc7bD05PT09aC5ub2RlVHlwZT9oOmgub3duZXJEb2N1bWVudDtrPT09a2UuaHRtbCYmKGs9bGUoZSkpO2s9PT1rZS5odG1sP1wic2NyaXB0XCI9PT1lPyhlPWwuY3JlYXRlRWxlbWVudChcImRpdlwiKSxlLmlubmVySFRNTD1cIjxzY3JpcHQ+XFx4M2Mvc2NyaXB0PlwiLGw9ZS5yZW1vdmVDaGlsZChlLmZpcnN0Q2hpbGQpKTpcInN0cmluZ1wiPT09dHlwZW9mIHIuaXM/bD1sLmNyZWF0ZUVsZW1lbnQoZSx7aXM6ci5pc30pOihsPWwuY3JlYXRlRWxlbWVudChlKSxcInNlbGVjdFwiPT09ZSYmci5tdWx0aXBsZSYmKGwubXVsdGlwbGU9ITApKTpsPWwuY3JlYXRlRWxlbWVudE5TKGssZSk7ZT1sO2VbR2FdPW07ZVtIYV09ZztDZyhlLGIsITEsITEpO3I9ZTtsPWY7bT1nO3ZhciB3PWgseT13ZShsLG0pO3N3aXRjaChsKXtjYXNlIFwiaWZyYW1lXCI6Y2FzZSBcIm9iamVjdFwiOkgoXCJsb2FkXCIsXG5yKTtoPW07YnJlYWs7Y2FzZSBcInZpZGVvXCI6Y2FzZSBcImF1ZGlvXCI6Zm9yKGg9MDtoPGJiLmxlbmd0aDtoKyspSChiYltoXSxyKTtoPW07YnJlYWs7Y2FzZSBcInNvdXJjZVwiOkgoXCJlcnJvclwiLHIpO2g9bTticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6Y2FzZSBcImxpbmtcIjpIKFwiZXJyb3JcIixyKTtIKFwibG9hZFwiLHIpO2g9bTticmVhaztjYXNlIFwiZm9ybVwiOkgoXCJyZXNldFwiLHIpO0goXCJzdWJtaXRcIixyKTtoPW07YnJlYWs7Y2FzZSBcImRldGFpbHNcIjpIKFwidG9nZ2xlXCIscik7aD1tO2JyZWFrO2Nhc2UgXCJpbnB1dFwiOkFjKHIsbSk7aD16YyhyLG0pO0goXCJpbnZhbGlkXCIscik7eGUodyxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpoPWVlKHIsbSk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOnIuX3dyYXBwZXJTdGF0ZT17d2FzTXVsdGlwbGU6ISFtLm11bHRpcGxlfTtoPW4oe30sbSx7dmFsdWU6dm9pZCAwfSk7SChcImludmFsaWRcIixyKTt4ZSh3LFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6aGUocixcbm0pO2g9Z2UocixtKTtIKFwiaW52YWxpZFwiLHIpO3hlKHcsXCJvbkNoYW5nZVwiKTticmVhaztkZWZhdWx0Omg9bX12ZShsLGgpO2s9dm9pZCAwO3ZhciBCPWwsUj1yLHY9aDtmb3IoayBpbiB2KWlmKHYuaGFzT3duUHJvcGVydHkoaykpe3ZhciBxPXZba107XCJzdHlsZVwiPT09az90ZShSLHEpOlwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWs/KHE9cT9xLl9faHRtbDp2b2lkIDAsbnVsbCE9cSYmb2UoUixxKSk6XCJjaGlsZHJlblwiPT09az9cInN0cmluZ1wiPT09dHlwZW9mIHE/KFwidGV4dGFyZWFcIiE9PUJ8fFwiXCIhPT1xKSYmcGUoUixxKTpcIm51bWJlclwiPT09dHlwZW9mIHEmJnBlKFIsXCJcIitxKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09ayYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWsmJlwiYXV0b0ZvY3VzXCIhPT1rJiYoc2EuaGFzT3duUHJvcGVydHkoayk/bnVsbCE9cSYmeGUodyxrKTpudWxsIT1xJiZ4YyhSLGsscSx5KSl9c3dpdGNoKGwpe2Nhc2UgXCJpbnB1dFwiOlZiKHIpO1xuRWMocixtLCExKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpWYihyKTtqZShyLG0pO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpudWxsIT1tLnZhbHVlJiZyLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsXCJcIit5YyhtLnZhbHVlKSk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmg9cjtoLm11bHRpcGxlPSEhbS5tdWx0aXBsZTtyPW0udmFsdWU7bnVsbCE9cj9mZShoLCEhbS5tdWx0aXBsZSxyLCExKTpudWxsIT1tLmRlZmF1bHRWYWx1ZSYmZmUoaCwhIW0ubXVsdGlwbGUsbS5kZWZhdWx0VmFsdWUsITApO2JyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiPT09dHlwZW9mIGgub25DbGljayYmKHIub25jbGljaz15ZSl9KGc9QmUoZixnKSkmJkJnKGIpO2Iuc3RhdGVOb2RlPWV9bnVsbCE9PWIucmVmJiYoYi5lZmZlY3RUYWd8PTEyOCl9ZWxzZSBudWxsPT09Yi5zdGF0ZU5vZGU/dChcIjE2NlwiKTp2b2lkIDA7YnJlYWs7Y2FzZSA2OmUmJm51bGwhPWIuc3RhdGVOb2RlP0lnKGUsYixlLm1lbW9pemVkUHJvcHMsZyk6KFwic3RyaW5nXCIhPT1cbnR5cGVvZiBnJiYobnVsbD09PWIuc3RhdGVOb2RlP3QoXCIxNjZcIik6dm9pZCAwKSxlPUlmKEhmLmN1cnJlbnQpLElmKE8uY3VycmVudCksbmcoYik/KGc9YixmPWcuc3RhdGVOb2RlLGU9Zy5tZW1vaXplZFByb3BzLGZbR2FdPWcsKGc9Zi5ub2RlVmFsdWUhPT1lKSYmQmcoYikpOihmPWIsZz0oOT09PWUubm9kZVR5cGU/ZTplLm93bmVyRG9jdW1lbnQpLmNyZWF0ZVRleHROb2RlKGcpLGdbR2FdPWIsZi5zdGF0ZU5vZGU9ZykpO2JyZWFrO2Nhc2UgMTE6YnJlYWs7Y2FzZSAxMzpnPWIubWVtb2l6ZWRTdGF0ZTtpZigwIT09KGIuZWZmZWN0VGFnJjY0KSl7Yi5leHBpcmF0aW9uVGltZT1mO1M9YjticmVhayBhfWc9bnVsbCE9PWc7Zj1udWxsIT09ZSYmbnVsbCE9PWUubWVtb2l6ZWRTdGF0ZTtudWxsIT09ZSYmIWcmJmYmJihlPWUuY2hpbGQuc2libGluZyxudWxsIT09ZSYmKGg9Yi5maXJzdEVmZmVjdCxudWxsIT09aD8oYi5maXJzdEVmZmVjdD1lLGUubmV4dEVmZmVjdD1oKTooYi5maXJzdEVmZmVjdD1cbmIubGFzdEVmZmVjdD1lLGUubmV4dEVmZmVjdD1udWxsKSxlLmVmZmVjdFRhZz04KSk7aWYoZyE9PWZ8fDA9PT0oYi5lZmZlY3RUYWcmMSkmJmcpYi5lZmZlY3RUYWd8PTQ7YnJlYWs7Y2FzZSA3OmJyZWFrO2Nhc2UgODpicmVhaztjYXNlIDEyOmJyZWFrO2Nhc2UgNDpLZihiKTtHZyhiKTticmVhaztjYXNlIDEwOkNmKGIpO2JyZWFrO2Nhc2UgOTpicmVhaztjYXNlIDE0OmJyZWFrO2Nhc2UgMTc6TShiLnR5cGUpJiZOZShiKTticmVhaztkZWZhdWx0OnQoXCIxNTZcIil9Uz1udWxsfWI9YTtpZigxPT09VXx8MSE9PWIuY2hpbGRFeHBpcmF0aW9uVGltZSl7Zz0wO2ZvcihmPWIuY2hpbGQ7bnVsbCE9PWY7KWU9Zi5leHBpcmF0aW9uVGltZSxoPWYuY2hpbGRFeHBpcmF0aW9uVGltZSxlPmcmJihnPWUpLGg+ZyYmKGc9aCksZj1mLnNpYmxpbmc7Yi5jaGlsZEV4cGlyYXRpb25UaW1lPWd9aWYobnVsbCE9PVMpcmV0dXJuIFM7bnVsbCE9PWMmJjA9PT0oYy5lZmZlY3RUYWcmMTAyNCkmJihudWxsPT09XG5jLmZpcnN0RWZmZWN0JiYoYy5maXJzdEVmZmVjdD1hLmZpcnN0RWZmZWN0KSxudWxsIT09YS5sYXN0RWZmZWN0JiYobnVsbCE9PWMubGFzdEVmZmVjdCYmKGMubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWEuZmlyc3RFZmZlY3QpLGMubGFzdEVmZmVjdD1hLmxhc3RFZmZlY3QpLDE8YS5lZmZlY3RUYWcmJihudWxsIT09Yy5sYXN0RWZmZWN0P2MubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWE6Yy5maXJzdEVmZmVjdD1hLGMubGFzdEVmZmVjdD1hKSl9ZWxzZXthPVpnKGEsVSk7aWYobnVsbCE9PWEpcmV0dXJuIGEuZWZmZWN0VGFnJj0xMDIzLGE7bnVsbCE9PWMmJihjLmZpcnN0RWZmZWN0PWMubGFzdEVmZmVjdD1udWxsLGMuZWZmZWN0VGFnfD0xMDI0KX1pZihudWxsIT09ZClyZXR1cm4gZDtpZihudWxsIT09YylhPWM7ZWxzZSBicmVha31yZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIGxoKGEpe3ZhciBiPUFnKGEuYWx0ZXJuYXRlLGEsVSk7YS5tZW1vaXplZFByb3BzPWEucGVuZGluZ1Byb3BzO251bGw9PT1iJiYoYj1raChhKSk7YWguY3VycmVudD1udWxsO3JldHVybiBifVxuZnVuY3Rpb24gbWgoYSxiKXtkaD90KFwiMjQzXCIpOnZvaWQgMDtUZigpO2RoPSEwO2FoLmN1cnJlbnREaXNwYXRjaGVyPSRnO3ZhciBjPWEubmV4dEV4cGlyYXRpb25UaW1lVG9Xb3JrT247aWYoYyE9PVV8fGEhPT1UfHxudWxsPT09UylqaCgpLFQ9YSxVPWMsUz0kZShULmN1cnJlbnQsbnVsbCxVKSxhLnBlbmRpbmdDb21taXRFeHBpcmF0aW9uVGltZT0wO3ZhciBkPSExO2Rve3RyeXtpZihiKWZvcig7bnVsbCE9PVMmJiFuaCgpOylTPWxoKFMpO2Vsc2UgZm9yKDtudWxsIT09UzspUz1saChTKX1jYXRjaChCKXtpZihBZj16Zj15Zj1udWxsLG51bGw9PT1TKWQ9ITAsV2coQik7ZWxzZXtudWxsPT09Uz90KFwiMjcxXCIpOnZvaWQgMDt2YXIgZT1TLGY9ZS5yZXR1cm47aWYobnVsbD09PWYpZD0hMCxXZyhCKTtlbHNle2E6e3ZhciBnPWEsaD1mLGs9ZSxsPUI7Zj1VO2suZWZmZWN0VGFnfD0xMDI0O2suZmlyc3RFZmZlY3Q9ay5sYXN0RWZmZWN0PW51bGw7aWYobnVsbCE9PWwmJlwib2JqZWN0XCI9PT1cbnR5cGVvZiBsJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgbC50aGVuKXt2YXIgbT1sO2w9aDt2YXIgcj0tMSx3PS0xO2Rve2lmKDEzPT09bC50YWcpe3ZhciB5PWwuYWx0ZXJuYXRlO2lmKG51bGwhPT15JiYoeT15Lm1lbW9pemVkU3RhdGUsbnVsbCE9PXkpKXt3PTEwKigxMDczNzQxODIyLXkudGltZWRPdXRBdCk7YnJlYWt9eT1sLnBlbmRpbmdQcm9wcy5tYXhEdXJhdGlvbjtpZihcIm51bWJlclwiPT09dHlwZW9mIHkpaWYoMD49eSlyPTA7ZWxzZSBpZigtMT09PXJ8fHk8cilyPXl9bD1sLnJldHVybn13aGlsZShudWxsIT09bCk7bD1oO2Rve2lmKHk9MTM9PT1sLnRhZyl5PXZvaWQgMD09PWwubWVtb2l6ZWRQcm9wcy5mYWxsYmFjaz8hMTpudWxsPT09bC5tZW1vaXplZFN0YXRlO2lmKHkpe2g9bC51cGRhdGVRdWV1ZTtudWxsPT09aD9sLnVwZGF0ZVF1ZXVlPW5ldyBTZXQoW21dKTpoLmFkZChtKTtpZigwPT09KGwubW9kZSYxKSl7bC5lZmZlY3RUYWd8PTY0O2suZWZmZWN0VGFnJj0tMTk1NztcbjE9PT1rLnRhZyYmKG51bGw9PT1rLmFsdGVybmF0ZT9rLnRhZz0xNzooZj1uZigxMDczNzQxODIzKSxmLnRhZz0yLHBmKGssZikpKTtrLmV4cGlyYXRpb25UaW1lPTEwNzM3NDE4MjM7YnJlYWsgYX1rPWcucGluZ0NhY2hlO251bGw9PT1rPyhrPWcucGluZ0NhY2hlPW5ldyBVZyxoPW5ldyBTZXQsay5zZXQobSxoKSk6KGg9ay5nZXQobSksdm9pZCAwPT09aCYmKGg9bmV3IFNldCxrLnNldChtLGgpKSk7aC5oYXMoZil8fChoLmFkZChmKSxrPW9oLmJpbmQobnVsbCxnLG0sZiksbS50aGVuKGssaykpOy0xPT09cj9nPTEwNzM3NDE4MjM6KC0xPT09dyYmKHc9MTAqKDEwNzM3NDE4MjItamYoZyxmKSktNUUzKSxnPXcrcik7MDw9ZyYmZWg8ZyYmKGVoPWcpO2wuZWZmZWN0VGFnfD0yMDQ4O2wuZXhwaXJhdGlvblRpbWU9ZjticmVhayBhfWw9bC5yZXR1cm59d2hpbGUobnVsbCE9PWwpO2w9RXJyb3IoKG1jKGsudHlwZSl8fFwiQSBSZWFjdCBjb21wb25lbnRcIikrXCIgc3VzcGVuZGVkIHdoaWxlIHJlbmRlcmluZywgYnV0IG5vIGZhbGxiYWNrIFVJIHdhcyBzcGVjaWZpZWQuXFxuXFxuQWRkIGEgPFN1c3BlbnNlIGZhbGxiYWNrPS4uLj4gY29tcG9uZW50IGhpZ2hlciBpbiB0aGUgdHJlZSB0byBwcm92aWRlIGEgbG9hZGluZyBpbmRpY2F0b3Igb3IgcGxhY2Vob2xkZXIgdG8gZGlzcGxheS5cIitcbm5jKGspKX1maD0hMDtsPXdmKGwsayk7Zz1oO2Rve3N3aXRjaChnLnRhZyl7Y2FzZSAzOmcuZWZmZWN0VGFnfD0yMDQ4O2cuZXhwaXJhdGlvblRpbWU9ZjtmPVZnKGcsbCxmKTtxZihnLGYpO2JyZWFrIGE7Y2FzZSAxOmlmKG09bCxyPWcudHlwZSx3PWcuc3RhdGVOb2RlLDA9PT0oZy5lZmZlY3RUYWcmNjQpJiYoXCJmdW5jdGlvblwiPT09dHlwZW9mIHIuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yfHxudWxsIT09dyYmXCJmdW5jdGlvblwiPT09dHlwZW9mIHcuY29tcG9uZW50RGlkQ2F0Y2gmJihudWxsPT09WWd8fCFZZy5oYXModykpKSl7Zy5lZmZlY3RUYWd8PTIwNDg7Zy5leHBpcmF0aW9uVGltZT1mO2Y9WGcoZyxtLGYpO3FmKGcsZik7YnJlYWsgYX19Zz1nLnJldHVybn13aGlsZShudWxsIT09Zyl9Uz1raChlKTtjb250aW51ZX19fWJyZWFrfXdoaWxlKDEpO2RoPSExO0FmPXpmPXlmPWFoLmN1cnJlbnREaXNwYXRjaGVyPW51bGw7aWYoZClUPW51bGwsYS5maW5pc2hlZFdvcms9bnVsbDtcbmVsc2UgaWYobnVsbCE9PVMpYS5maW5pc2hlZFdvcms9bnVsbDtlbHNle2Q9YS5jdXJyZW50LmFsdGVybmF0ZTtudWxsPT09ZD90KFwiMjgxXCIpOnZvaWQgMDtUPW51bGw7aWYoZmgpe2U9YS5sYXRlc3RQZW5kaW5nVGltZTtmPWEubGF0ZXN0U3VzcGVuZGVkVGltZTtnPWEubGF0ZXN0UGluZ2VkVGltZTtpZigwIT09ZSYmZTxjfHwwIT09ZiYmZjxjfHwwIT09ZyYmZzxjKXtoZihhLGMpO3BoKGEsZCxjLGEuZXhwaXJhdGlvblRpbWUsLTEpO3JldHVybn1pZighYS5kaWRFcnJvciYmYil7YS5kaWRFcnJvcj0hMDtjPWEubmV4dEV4cGlyYXRpb25UaW1lVG9Xb3JrT249YztiPWEuZXhwaXJhdGlvblRpbWU9MTA3Mzc0MTgyMztwaChhLGQsYyxiLC0xKTtyZXR1cm59fWImJi0xIT09ZWg/KGhmKGEsYyksYj0xMCooMTA3Mzc0MTgyMi1qZihhLGMpKSxiPGVoJiYoZWg9YiksYj0xMCooMTA3Mzc0MTgyMi1SZigpKSxiPWVoLWIscGgoYSxkLGMsYS5leHBpcmF0aW9uVGltZSwwPmI/MDpiKSk6KGEucGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lPVxuYyxhLmZpbmlzaGVkV29yaz1kKX19ZnVuY3Rpb24gTWcoYSxiKXtmb3IodmFyIGM9YS5yZXR1cm47bnVsbCE9PWM7KXtzd2l0Y2goYy50YWcpe2Nhc2UgMTp2YXIgZD1jLnN0YXRlTm9kZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy50eXBlLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcnx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50RGlkQ2F0Y2gmJihudWxsPT09WWd8fCFZZy5oYXMoZCkpKXthPXdmKGIsYSk7YT1YZyhjLGEsMTA3Mzc0MTgyMyk7cGYoYyxhKTtVZihjLDEwNzM3NDE4MjMpO3JldHVybn1icmVhaztjYXNlIDM6YT13ZihiLGEpO2E9VmcoYyxhLDEwNzM3NDE4MjMpO3BmKGMsYSk7VWYoYywxMDczNzQxODIzKTtyZXR1cm59Yz1jLnJldHVybn0zPT09YS50YWcmJihjPXdmKGIsYSksYz1WZyhhLGMsMTA3Mzc0MTgyMykscGYoYSxjKSxVZihhLDEwNzM3NDE4MjMpKX1cbmZ1bmN0aW9uIFNmKGEsYil7MCE9PWNoP2E9Y2g6ZGg/YT1naD8xMDczNzQxODIzOlU6Yi5tb2RlJjE/KGE9cWg/MTA3Mzc0MTgyMi0xMCooKCgxMDczNzQxODIyLWErMTUpLzEwfDApKzEpOjEwNzM3NDE4MjItMjUqKCgoMTA3Mzc0MTgyMi1hKzUwMCkvMjV8MCkrMSksbnVsbCE9PVQmJmE9PT1VJiYtLWEpOmE9MTA3Mzc0MTgyMztxaCYmKDA9PT1yaHx8YTxyaCkmJihyaD1hKTtyZXR1cm4gYX1mdW5jdGlvbiBvaChhLGIsYyl7dmFyIGQ9YS5waW5nQ2FjaGU7bnVsbCE9PWQmJmQuZGVsZXRlKGIpO2lmKG51bGwhPT1UJiZVPT09YylUPW51bGw7ZWxzZSBpZihiPWEuZWFybGllc3RTdXNwZW5kZWRUaW1lLGQ9YS5sYXRlc3RTdXNwZW5kZWRUaW1lLDAhPT1iJiZjPD1iJiZjPj1kKXthLmRpZEVycm9yPSExO2I9YS5sYXRlc3RQaW5nZWRUaW1lO2lmKDA9PT1ifHxiPmMpYS5sYXRlc3RQaW5nZWRUaW1lPWM7Z2YoYyxhKTtjPWEuZXhwaXJhdGlvblRpbWU7MCE9PWMmJnNoKGEsYyl9fVxuZnVuY3Rpb24gVGcoYSxiKXt2YXIgYz1hLnN0YXRlTm9kZTtudWxsIT09YyYmYy5kZWxldGUoYik7Yj1SZigpO2I9U2YoYixhKTthPXRoKGEsYik7bnVsbCE9PWEmJihmZihhLGIpLGI9YS5leHBpcmF0aW9uVGltZSwwIT09YiYmc2goYSxiKSl9XG5mdW5jdGlvbiB0aChhLGIpe2EuZXhwaXJhdGlvblRpbWU8YiYmKGEuZXhwaXJhdGlvblRpbWU9Yik7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWMmJmMuZXhwaXJhdGlvblRpbWU8YiYmKGMuZXhwaXJhdGlvblRpbWU9Yik7dmFyIGQ9YS5yZXR1cm4sZT1udWxsO2lmKG51bGw9PT1kJiYzPT09YS50YWcpZT1hLnN0YXRlTm9kZTtlbHNlIGZvcig7bnVsbCE9PWQ7KXtjPWQuYWx0ZXJuYXRlO2QuY2hpbGRFeHBpcmF0aW9uVGltZTxiJiYoZC5jaGlsZEV4cGlyYXRpb25UaW1lPWIpO251bGwhPT1jJiZjLmNoaWxkRXhwaXJhdGlvblRpbWU8YiYmKGMuY2hpbGRFeHBpcmF0aW9uVGltZT1iKTtpZihudWxsPT09ZC5yZXR1cm4mJjM9PT1kLnRhZyl7ZT1kLnN0YXRlTm9kZTticmVha31kPWQucmV0dXJufXJldHVybiBlfVxuZnVuY3Rpb24gVWYoYSxiKXthPXRoKGEsYik7bnVsbCE9PWEmJighZGgmJjAhPT1VJiZiPlUmJmpoKCksZmYoYSxiKSxkaCYmIWdoJiZUPT09YXx8c2goYSxhLmV4cGlyYXRpb25UaW1lKSx1aD52aCYmKHVoPTAsdChcIjE4NVwiKSkpfWZ1bmN0aW9uIHdoKGEsYixjLGQsZSl7dmFyIGY9Y2g7Y2g9MTA3Mzc0MTgyMzt0cnl7cmV0dXJuIGEoYixjLGQsZSl9ZmluYWxseXtjaD1mfX12YXIgeGg9bnVsbCxXPW51bGwseWg9MCx6aD12b2lkIDAsWD0hMSxBaD1udWxsLFk9MCxyaD0wLEJoPSExLENoPW51bGwsWj0hMSxEaD0hMSxxaD0hMSxFaD1udWxsLEZoPWJhLnVuc3RhYmxlX25vdygpLEdoPTEwNzM3NDE4MjItKEZoLzEwfDApLEhoPUdoLHZoPTUwLHVoPTAsSWg9bnVsbDtmdW5jdGlvbiBKaCgpe0doPTEwNzM3NDE4MjItKChiYS51bnN0YWJsZV9ub3coKS1GaCkvMTB8MCl9XG5mdW5jdGlvbiBLaChhLGIpe2lmKDAhPT15aCl7aWYoYjx5aClyZXR1cm47bnVsbCE9PXpoJiZiYS51bnN0YWJsZV9jYW5jZWxDYWxsYmFjayh6aCl9eWg9YjthPWJhLnVuc3RhYmxlX25vdygpLUZoO3poPWJhLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2soTGgse3RpbWVvdXQ6MTAqKDEwNzM3NDE4MjItYiktYX0pfWZ1bmN0aW9uIHBoKGEsYixjLGQsZSl7YS5leHBpcmF0aW9uVGltZT1kOzAhPT1lfHxuaCgpPzA8ZSYmKGEudGltZW91dEhhbmRsZT1EZShNaC5iaW5kKG51bGwsYSxiLGMpLGUpKTooYS5wZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU9YyxhLmZpbmlzaGVkV29yaz1iKX1mdW5jdGlvbiBNaChhLGIsYyl7YS5wZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU9YzthLmZpbmlzaGVkV29yaz1iO0poKCk7SGg9R2g7TmgoYSxjKX1mdW5jdGlvbiBSZigpe2lmKFgpcmV0dXJuIEhoO09oKCk7aWYoMD09PVl8fDE9PT1ZKUpoKCksSGg9R2g7cmV0dXJuIEhofVxuZnVuY3Rpb24gc2goYSxiKXtudWxsPT09YS5uZXh0U2NoZWR1bGVkUm9vdD8oYS5leHBpcmF0aW9uVGltZT1iLG51bGw9PT1XPyh4aD1XPWEsYS5uZXh0U2NoZWR1bGVkUm9vdD1hKTooVz1XLm5leHRTY2hlZHVsZWRSb290PWEsVy5uZXh0U2NoZWR1bGVkUm9vdD14aCkpOmI+YS5leHBpcmF0aW9uVGltZSYmKGEuZXhwaXJhdGlvblRpbWU9Yik7WHx8KFo/RGgmJihBaD1hLFk9MTA3Mzc0MTgyMyxQaChhLDEwNzM3NDE4MjMsITEpKToxMDczNzQxODIzPT09Yj9RaCgxMDczNzQxODIzLCExKTpLaChhLGIpKX1cbmZ1bmN0aW9uIE9oKCl7dmFyIGE9MCxiPW51bGw7aWYobnVsbCE9PVcpZm9yKHZhciBjPVcsZD14aDtudWxsIT09ZDspe3ZhciBlPWQuZXhwaXJhdGlvblRpbWU7aWYoMD09PWUpe251bGw9PT1jfHxudWxsPT09Vz90KFwiMjQ0XCIpOnZvaWQgMDtpZihkPT09ZC5uZXh0U2NoZWR1bGVkUm9vdCl7eGg9Vz1kLm5leHRTY2hlZHVsZWRSb290PW51bGw7YnJlYWt9ZWxzZSBpZihkPT09eGgpeGg9ZT1kLm5leHRTY2hlZHVsZWRSb290LFcubmV4dFNjaGVkdWxlZFJvb3Q9ZSxkLm5leHRTY2hlZHVsZWRSb290PW51bGw7ZWxzZSBpZihkPT09Vyl7Vz1jO1cubmV4dFNjaGVkdWxlZFJvb3Q9eGg7ZC5uZXh0U2NoZWR1bGVkUm9vdD1udWxsO2JyZWFrfWVsc2UgYy5uZXh0U2NoZWR1bGVkUm9vdD1kLm5leHRTY2hlZHVsZWRSb290LGQubmV4dFNjaGVkdWxlZFJvb3Q9bnVsbDtkPWMubmV4dFNjaGVkdWxlZFJvb3R9ZWxzZXtlPmEmJihhPWUsYj1kKTtpZihkPT09VylicmVhaztpZigxMDczNzQxODIzPT09XG5hKWJyZWFrO2M9ZDtkPWQubmV4dFNjaGVkdWxlZFJvb3R9fUFoPWI7WT1hfXZhciBSaD0hMTtmdW5jdGlvbiBuaCgpe3JldHVybiBSaD8hMDpiYS51bnN0YWJsZV9zaG91bGRZaWVsZCgpP1JoPSEwOiExfWZ1bmN0aW9uIExoKCl7dHJ5e2lmKCFuaCgpJiZudWxsIT09eGgpe0poKCk7dmFyIGE9eGg7ZG97dmFyIGI9YS5leHBpcmF0aW9uVGltZTswIT09YiYmR2g8PWImJihhLm5leHRFeHBpcmF0aW9uVGltZVRvV29ya09uPUdoKTthPWEubmV4dFNjaGVkdWxlZFJvb3R9d2hpbGUoYSE9PXhoKX1RaCgwLCEwKX1maW5hbGx5e1JoPSExfX1cbmZ1bmN0aW9uIFFoKGEsYil7T2goKTtpZihiKWZvcihKaCgpLEhoPUdoO251bGwhPT1BaCYmMCE9PVkmJmE8PVkmJiEoUmgmJkdoPlkpOylQaChBaCxZLEdoPlkpLE9oKCksSmgoKSxIaD1HaDtlbHNlIGZvcig7bnVsbCE9PUFoJiYwIT09WSYmYTw9WTspUGgoQWgsWSwhMSksT2goKTtiJiYoeWg9MCx6aD1udWxsKTswIT09WSYmS2goQWgsWSk7dWg9MDtJaD1udWxsO2lmKG51bGwhPT1FaClmb3IoYT1FaCxFaD1udWxsLGI9MDtiPGEubGVuZ3RoO2IrKyl7dmFyIGM9YVtiXTt0cnl7Yy5fb25Db21wbGV0ZSgpfWNhdGNoKGQpe0JofHwoQmg9ITAsQ2g9ZCl9fWlmKEJoKXRocm93IGE9Q2gsQ2g9bnVsbCxCaD0hMSxhO31mdW5jdGlvbiBOaChhLGIpe1g/dChcIjI1M1wiKTp2b2lkIDA7QWg9YTtZPWI7UGgoYSxiLCExKTtRaCgxMDczNzQxODIzLCExKX1cbmZ1bmN0aW9uIFBoKGEsYixjKXtYP3QoXCIyNDVcIik6dm9pZCAwO1g9ITA7aWYoYyl7dmFyIGQ9YS5maW5pc2hlZFdvcms7bnVsbCE9PWQ/U2goYSxkLGIpOihhLmZpbmlzaGVkV29yaz1udWxsLGQ9YS50aW1lb3V0SGFuZGxlLC0xIT09ZCYmKGEudGltZW91dEhhbmRsZT0tMSxFZShkKSksbWgoYSxjKSxkPWEuZmluaXNoZWRXb3JrLG51bGwhPT1kJiYobmgoKT9hLmZpbmlzaGVkV29yaz1kOlNoKGEsZCxiKSkpfWVsc2UgZD1hLmZpbmlzaGVkV29yayxudWxsIT09ZD9TaChhLGQsYik6KGEuZmluaXNoZWRXb3JrPW51bGwsZD1hLnRpbWVvdXRIYW5kbGUsLTEhPT1kJiYoYS50aW1lb3V0SGFuZGxlPS0xLEVlKGQpKSxtaChhLGMpLGQ9YS5maW5pc2hlZFdvcmssbnVsbCE9PWQmJlNoKGEsZCxiKSk7WD0hMX1cbmZ1bmN0aW9uIFNoKGEsYixjKXt2YXIgZD1hLmZpcnN0QmF0Y2g7aWYobnVsbCE9PWQmJmQuX2V4cGlyYXRpb25UaW1lPj1jJiYobnVsbD09PUVoP0VoPVtkXTpFaC5wdXNoKGQpLGQuX2RlZmVyKSl7YS5maW5pc2hlZFdvcms9YjthLmV4cGlyYXRpb25UaW1lPTA7cmV0dXJufWEuZmluaXNoZWRXb3JrPW51bGw7YT09PUloP3VoKys6KEloPWEsdWg9MCk7Z2g9ZGg9ITA7YS5jdXJyZW50PT09Yj90KFwiMTc3XCIpOnZvaWQgMDtjPWEucGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lOzA9PT1jP3QoXCIyNjFcIik6dm9pZCAwO2EucGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lPTA7ZD1iLmV4cGlyYXRpb25UaW1lO3ZhciBlPWIuY2hpbGRFeHBpcmF0aW9uVGltZTtkPWU+ZD9lOmQ7YS5kaWRFcnJvcj0hMTswPT09ZD8oYS5lYXJsaWVzdFBlbmRpbmdUaW1lPTAsYS5sYXRlc3RQZW5kaW5nVGltZT0wLGEuZWFybGllc3RTdXNwZW5kZWRUaW1lPTAsYS5sYXRlc3RTdXNwZW5kZWRUaW1lPTAsYS5sYXRlc3RQaW5nZWRUaW1lPVxuMCk6KGQ8YS5sYXRlc3RQaW5nZWRUaW1lJiYoYS5sYXRlc3RQaW5nZWRUaW1lPTApLGU9YS5sYXRlc3RQZW5kaW5nVGltZSwwIT09ZSYmKGU+ZD9hLmVhcmxpZXN0UGVuZGluZ1RpbWU9YS5sYXRlc3RQZW5kaW5nVGltZT0wOmEuZWFybGllc3RQZW5kaW5nVGltZT5kJiYoYS5lYXJsaWVzdFBlbmRpbmdUaW1lPWEubGF0ZXN0UGVuZGluZ1RpbWUpKSxlPWEuZWFybGllc3RTdXNwZW5kZWRUaW1lLDA9PT1lP2ZmKGEsZCk6ZDxhLmxhdGVzdFN1c3BlbmRlZFRpbWU/KGEuZWFybGllc3RTdXNwZW5kZWRUaW1lPTAsYS5sYXRlc3RTdXNwZW5kZWRUaW1lPTAsYS5sYXRlc3RQaW5nZWRUaW1lPTAsZmYoYSxkKSk6ZD5lJiZmZihhLGQpKTtnZigwLGEpO2FoLmN1cnJlbnQ9bnVsbDsxPGIuZWZmZWN0VGFnP251bGwhPT1iLmxhc3RFZmZlY3Q/KGIubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWIsZD1iLmZpcnN0RWZmZWN0KTpkPWI6ZD1iLmZpcnN0RWZmZWN0O3plPUhkO2U9VGQoKTtpZihVZChlKSl7aWYoXCJzZWxlY3Rpb25TdGFydFwiaW5cbmUpdmFyIGY9e3N0YXJ0OmUuc2VsZWN0aW9uU3RhcnQsZW5kOmUuc2VsZWN0aW9uRW5kfTtlbHNlIGE6e2Y9KGY9ZS5vd25lckRvY3VtZW50KSYmZi5kZWZhdWx0Vmlld3x8d2luZG93O3ZhciBnPWYuZ2V0U2VsZWN0aW9uJiZmLmdldFNlbGVjdGlvbigpO2lmKGcmJjAhPT1nLnJhbmdlQ291bnQpe2Y9Zy5hbmNob3JOb2RlO3ZhciBoPWcuYW5jaG9yT2Zmc2V0LGs9Zy5mb2N1c05vZGU7Zz1nLmZvY3VzT2Zmc2V0O3RyeXtmLm5vZGVUeXBlLGsubm9kZVR5cGV9Y2F0Y2goZGIpe2Y9bnVsbDticmVhayBhfXZhciBsPTAsbT0tMSxyPS0xLHc9MCx5PTAsQj1lLFI9bnVsbDtiOmZvcig7Oyl7Zm9yKHZhciB2Ozspe0IhPT1mfHwwIT09aCYmMyE9PUIubm9kZVR5cGV8fChtPWwraCk7QiE9PWt8fDAhPT1nJiYzIT09Qi5ub2RlVHlwZXx8KHI9bCtnKTszPT09Qi5ub2RlVHlwZSYmKGwrPUIubm9kZVZhbHVlLmxlbmd0aCk7aWYobnVsbD09PSh2PUIuZmlyc3RDaGlsZCkpYnJlYWs7Uj1CO0I9dn1mb3IoOzspe2lmKEI9PT1cbmUpYnJlYWsgYjtSPT09ZiYmKyt3PT09aCYmKG09bCk7Uj09PWsmJisreT09PWcmJihyPWwpO2lmKG51bGwhPT0odj1CLm5leHRTaWJsaW5nKSlicmVhaztCPVI7Uj1CLnBhcmVudE5vZGV9Qj12fWY9LTE9PT1tfHwtMT09PXI/bnVsbDp7c3RhcnQ6bSxlbmQ6cn19ZWxzZSBmPW51bGx9Zj1mfHx7c3RhcnQ6MCxlbmQ6MH19ZWxzZSBmPW51bGw7QWU9e2ZvY3VzZWRFbGVtOmUsc2VsZWN0aW9uUmFuZ2U6Zn07SGQ9ITE7Zm9yKFY9ZDtudWxsIT09Vjspe2U9ITE7Zj12b2lkIDA7dHJ5e2Zvcig7bnVsbCE9PVY7KXtpZihWLmVmZmVjdFRhZyYyNTYpYTp7dmFyIHE9Vi5hbHRlcm5hdGU7aD1WO3N3aXRjaChoLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTpicmVhayBhO2Nhc2UgMTppZihoLmVmZmVjdFRhZyYyNTYmJm51bGwhPT1xKXt2YXIgdT1xLm1lbW9pemVkUHJvcHMsQT1xLm1lbW9pemVkU3RhdGUsWWY9aC5zdGF0ZU5vZGUsVmg9WWYuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUoaC5lbGVtZW50VHlwZT09PVxuaC50eXBlP3U6UChoLnR5cGUsdSksQSk7WWYuX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGU9Vmh9YnJlYWsgYTtjYXNlIDM6Y2FzZSA1OmNhc2UgNjpjYXNlIDQ6Y2FzZSAxNzpicmVhayBhO2RlZmF1bHQ6dChcIjE2M1wiKX19Vj1WLm5leHRFZmZlY3R9fWNhdGNoKGRiKXtlPSEwLGY9ZGJ9ZSYmKG51bGw9PT1WP3QoXCIxNzhcIik6dm9pZCAwLE1nKFYsZiksbnVsbCE9PVYmJihWPVYubmV4dEVmZmVjdCkpfWZvcihWPWQ7bnVsbCE9PVY7KXtxPSExO3U9dm9pZCAwO3RyeXtmb3IoO251bGwhPT1WOyl7dmFyIHg9Vi5lZmZlY3RUYWc7eCYxNiYmcGUoVi5zdGF0ZU5vZGUsXCJcIik7aWYoeCYxMjgpe3ZhciBDPVYuYWx0ZXJuYXRlO2lmKG51bGwhPT1DKXt2YXIgcD1DLnJlZjtudWxsIT09cCYmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBwP3AobnVsbCk6cC5jdXJyZW50PW51bGwpfX1zd2l0Y2goeCYxNCl7Y2FzZSAyOlJnKFYpO1YuZWZmZWN0VGFnJj0tMzticmVhaztjYXNlIDY6UmcoVik7XG5WLmVmZmVjdFRhZyY9LTM7U2coVi5hbHRlcm5hdGUsVik7YnJlYWs7Y2FzZSA0OlNnKFYuYWx0ZXJuYXRlLFYpO2JyZWFrO2Nhc2UgODpBPVY7UGcoQSk7QS5yZXR1cm49bnVsbDtBLmNoaWxkPW51bGw7QS5tZW1vaXplZFN0YXRlPW51bGw7QS51cGRhdGVRdWV1ZT1udWxsO3ZhciBHPUEuYWx0ZXJuYXRlO251bGwhPT1HJiYoRy5yZXR1cm49bnVsbCxHLmNoaWxkPW51bGwsRy5tZW1vaXplZFN0YXRlPW51bGwsRy51cGRhdGVRdWV1ZT1udWxsKX1WPVYubmV4dEVmZmVjdH19Y2F0Y2goZGIpe3E9ITAsdT1kYn1xJiYobnVsbD09PVY/dChcIjE3OFwiKTp2b2lkIDAsTWcoVix1KSxudWxsIT09ViYmKFY9Vi5uZXh0RWZmZWN0KSl9cD1BZTtDPVRkKCk7eD1wLmZvY3VzZWRFbGVtO3E9cC5zZWxlY3Rpb25SYW5nZTtpZihDIT09eCYmeCYmeC5vd25lckRvY3VtZW50JiZTZCh4Lm93bmVyRG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LHgpKXtudWxsIT09cSYmVWQoeCkmJihDPXEuc3RhcnQscD1xLmVuZCxcbnZvaWQgMD09PXAmJihwPUMpLFwic2VsZWN0aW9uU3RhcnRcImluIHg/KHguc2VsZWN0aW9uU3RhcnQ9Qyx4LnNlbGVjdGlvbkVuZD1NYXRoLm1pbihwLHgudmFsdWUubGVuZ3RoKSk6KHA9KEM9eC5vd25lckRvY3VtZW50fHxkb2N1bWVudCkmJkMuZGVmYXVsdFZpZXd8fHdpbmRvdyxwLmdldFNlbGVjdGlvbiYmKHA9cC5nZXRTZWxlY3Rpb24oKSx1PXgudGV4dENvbnRlbnQubGVuZ3RoLEc9TWF0aC5taW4ocS5zdGFydCx1KSxxPXZvaWQgMD09PXEuZW5kP0c6TWF0aC5taW4ocS5lbmQsdSksIXAuZXh0ZW5kJiZHPnEmJih1PXEscT1HLEc9dSksdT1SZCh4LEcpLEE9UmQoeCxxKSx1JiZBJiYoMSE9PXAucmFuZ2VDb3VudHx8cC5hbmNob3JOb2RlIT09dS5ub2RlfHxwLmFuY2hvck9mZnNldCE9PXUub2Zmc2V0fHxwLmZvY3VzTm9kZSE9PUEubm9kZXx8cC5mb2N1c09mZnNldCE9PUEub2Zmc2V0KSYmKEM9Qy5jcmVhdGVSYW5nZSgpLEMuc2V0U3RhcnQodS5ub2RlLHUub2Zmc2V0KSxwLnJlbW92ZUFsbFJhbmdlcygpLFxuRz5xPyhwLmFkZFJhbmdlKEMpLHAuZXh0ZW5kKEEubm9kZSxBLm9mZnNldCkpOihDLnNldEVuZChBLm5vZGUsQS5vZmZzZXQpLHAuYWRkUmFuZ2UoQykpKSkpKTtDPVtdO2ZvcihwPXg7cD1wLnBhcmVudE5vZGU7KTE9PT1wLm5vZGVUeXBlJiZDLnB1c2goe2VsZW1lbnQ6cCxsZWZ0OnAuc2Nyb2xsTGVmdCx0b3A6cC5zY3JvbGxUb3B9KTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgeC5mb2N1cyYmeC5mb2N1cygpO2Zvcih4PTA7eDxDLmxlbmd0aDt4KyspcD1DW3hdLHAuZWxlbWVudC5zY3JvbGxMZWZ0PXAubGVmdCxwLmVsZW1lbnQuc2Nyb2xsVG9wPXAudG9wfUFlPW51bGw7SGQ9ISF6ZTt6ZT1udWxsO2EuY3VycmVudD1iO2ZvcihWPWQ7bnVsbCE9PVY7KXtkPSExO3g9dm9pZCAwO3RyeXtmb3IoQz1jO251bGwhPT1WOyl7dmFyIEZiPVYuZWZmZWN0VGFnO2lmKEZiJjM2KXt2YXIgR2I9Vi5hbHRlcm5hdGU7cD1WO0c9Qztzd2l0Y2gocC50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6YnJlYWs7XG5jYXNlIDE6dmFyIEhjPXAuc3RhdGVOb2RlO2lmKHAuZWZmZWN0VGFnJjQpaWYobnVsbD09PUdiKUhjLmNvbXBvbmVudERpZE1vdW50KCk7ZWxzZXt2YXIgaWk9cC5lbGVtZW50VHlwZT09PXAudHlwZT9HYi5tZW1vaXplZFByb3BzOlAocC50eXBlLEdiLm1lbW9pemVkUHJvcHMpO0hjLmNvbXBvbmVudERpZFVwZGF0ZShpaSxHYi5tZW1vaXplZFN0YXRlLEhjLl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlKX12YXIgRGc9cC51cGRhdGVRdWV1ZTtudWxsIT09RGcmJnVmKHAsRGcsSGMsRyk7YnJlYWs7Y2FzZSAzOnZhciBFZz1wLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1FZyl7cT1udWxsO2lmKG51bGwhPT1wLmNoaWxkKXN3aXRjaChwLmNoaWxkLnRhZyl7Y2FzZSA1OnE9cC5jaGlsZC5zdGF0ZU5vZGU7YnJlYWs7Y2FzZSAxOnE9cC5jaGlsZC5zdGF0ZU5vZGV9dWYocCxFZyxxLEcpfWJyZWFrO2Nhc2UgNTp2YXIgamk9cC5zdGF0ZU5vZGU7bnVsbD09PUdiJiZwLmVmZmVjdFRhZyZcbjQmJkJlKHAudHlwZSxwLm1lbW9pemVkUHJvcHMpJiZqaS5mb2N1cygpO2JyZWFrO2Nhc2UgNjpicmVhaztjYXNlIDQ6YnJlYWs7Y2FzZSAxMjpicmVhaztjYXNlIDEzOmJyZWFrO2Nhc2UgMTc6YnJlYWs7ZGVmYXVsdDp0KFwiMTYzXCIpfX1pZihGYiYxMjgpe3ZhciBJYz1WLnJlZjtpZihudWxsIT09SWMpe3ZhciBGZz1WLnN0YXRlTm9kZTtzd2l0Y2goVi50YWcpe2Nhc2UgNTp2YXIgY2U9Rmc7YnJlYWs7ZGVmYXVsdDpjZT1GZ31cImZ1bmN0aW9uXCI9PT10eXBlb2YgSWM/SWMoY2UpOkljLmN1cnJlbnQ9Y2V9fVY9Vi5uZXh0RWZmZWN0fX1jYXRjaChkYil7ZD0hMCx4PWRifWQmJihudWxsPT09Vj90KFwiMTc4XCIpOnZvaWQgMCxNZyhWLHgpLG51bGwhPT1WJiYoVj1WLm5leHRFZmZlY3QpKX1kaD1naD0hMTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgVGUmJlRlKGIuc3RhdGVOb2RlKTtGYj1iLmV4cGlyYXRpb25UaW1lO2I9Yi5jaGlsZEV4cGlyYXRpb25UaW1lO2I9Yj5GYj9iOkZiOzA9PT1iJiYoWWc9XG5udWxsKTthLmV4cGlyYXRpb25UaW1lPWI7YS5maW5pc2hlZFdvcms9bnVsbH1mdW5jdGlvbiBXZyhhKXtudWxsPT09QWg/dChcIjI0NlwiKTp2b2lkIDA7QWguZXhwaXJhdGlvblRpbWU9MDtCaHx8KEJoPSEwLENoPWEpfWZ1bmN0aW9uIFRoKGEsYil7dmFyIGM9WjtaPSEwO3RyeXtyZXR1cm4gYShiKX1maW5hbGx5eyhaPWMpfHxYfHxRaCgxMDczNzQxODIzLCExKX19ZnVuY3Rpb24gVWgoYSxiKXtpZihaJiYhRGgpe0RoPSEwO3RyeXtyZXR1cm4gYShiKX1maW5hbGx5e0RoPSExfX1yZXR1cm4gYShiKX1mdW5jdGlvbiBXaChhLGIsYyl7aWYocWgpcmV0dXJuIGEoYixjKTtafHxYfHwwPT09cmh8fChRaChyaCwhMSkscmg9MCk7dmFyIGQ9cWgsZT1aO1o9cWg9ITA7dHJ5e3JldHVybiBhKGIsYyl9ZmluYWxseXtxaD1kLChaPWUpfHxYfHxRaCgxMDczNzQxODIzLCExKX19XG5mdW5jdGlvbiBYaChhLGIsYyxkLGUpe3ZhciBmPWIuY3VycmVudDthOmlmKGMpe2M9Yy5fcmVhY3RJbnRlcm5hbEZpYmVyO2I6ezI9PT1rZChjKSYmMT09PWMudGFnP3ZvaWQgMDp0KFwiMTcwXCIpO3ZhciBnPWM7ZG97c3dpdGNoKGcudGFnKXtjYXNlIDM6Zz1nLnN0YXRlTm9kZS5jb250ZXh0O2JyZWFrIGI7Y2FzZSAxOmlmKE0oZy50eXBlKSl7Zz1nLnN0YXRlTm9kZS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dDticmVhayBifX1nPWcucmV0dXJufXdoaWxlKG51bGwhPT1nKTt0KFwiMTcxXCIpO2c9dm9pZCAwfWlmKDE9PT1jLnRhZyl7dmFyIGg9Yy50eXBlO2lmKE0oaCkpe2M9UWUoYyxoLGcpO2JyZWFrIGF9fWM9Z31lbHNlIGM9S2U7bnVsbD09PWIuY29udGV4dD9iLmNvbnRleHQ9YzpiLnBlbmRpbmdDb250ZXh0PWM7Yj1lO2U9bmYoZCk7ZS5wYXlsb2FkPXtlbGVtZW50OmF9O2I9dm9pZCAwPT09Yj9udWxsOmI7bnVsbCE9PWImJihlLmNhbGxiYWNrPWIpO1xuVGYoKTtwZihmLGUpO1VmKGYsZCk7cmV0dXJuIGR9ZnVuY3Rpb24gWWgoYSxiLGMsZCl7dmFyIGU9Yi5jdXJyZW50LGY9UmYoKTtlPVNmKGYsZSk7cmV0dXJuIFhoKGEsYixjLGUsZCl9ZnVuY3Rpb24gWmgoYSl7YT1hLmN1cnJlbnQ7aWYoIWEuY2hpbGQpcmV0dXJuIG51bGw7c3dpdGNoKGEuY2hpbGQudGFnKXtjYXNlIDU6cmV0dXJuIGEuY2hpbGQuc3RhdGVOb2RlO2RlZmF1bHQ6cmV0dXJuIGEuY2hpbGQuc3RhdGVOb2RlfX1mdW5jdGlvbiAkaChhLGIsYyl7dmFyIGQ9Mzxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbM10/YXJndW1lbnRzWzNdOm51bGw7cmV0dXJueyQkdHlwZW9mOiRiLGtleTpudWxsPT1kP251bGw6XCJcIitkLGNoaWxkcmVuOmEsY29udGFpbmVySW5mbzpiLGltcGxlbWVudGF0aW9uOmN9fVxuQ2I9ZnVuY3Rpb24oYSxiLGMpe3N3aXRjaChiKXtjYXNlIFwiaW5wdXRcIjpDYyhhLGMpO2I9Yy5uYW1lO2lmKFwicmFkaW9cIj09PWMudHlwZSYmbnVsbCE9Yil7Zm9yKGM9YTtjLnBhcmVudE5vZGU7KWM9Yy5wYXJlbnROb2RlO2M9Yy5xdWVyeVNlbGVjdG9yQWxsKFwiaW5wdXRbbmFtZT1cIitKU09OLnN0cmluZ2lmeShcIlwiK2IpKyddW3R5cGU9XCJyYWRpb1wiXScpO2ZvcihiPTA7YjxjLmxlbmd0aDtiKyspe3ZhciBkPWNbYl07aWYoZCE9PWEmJmQuZm9ybT09PWEuZm9ybSl7dmFyIGU9TGEoZCk7ZT92b2lkIDA6dChcIjkwXCIpO1diKGQpO0NjKGQsZSl9fX1icmVhaztjYXNlIFwidGV4dGFyZWFcIjppZShhLGMpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpiPWMudmFsdWUsbnVsbCE9YiYmZmUoYSwhIWMubXVsdGlwbGUsYiwhMSl9fTtcbmZ1bmN0aW9uIGFpKGEpe3ZhciBiPTEwNzM3NDE4MjItMjUqKCgoMTA3Mzc0MTgyMi1SZigpKzUwMCkvMjV8MCkrMSk7Yj49YmgmJihiPWJoLTEpO3RoaXMuX2V4cGlyYXRpb25UaW1lPWJoPWI7dGhpcy5fcm9vdD1hO3RoaXMuX2NhbGxiYWNrcz10aGlzLl9uZXh0PW51bGw7dGhpcy5faGFzQ2hpbGRyZW49dGhpcy5fZGlkQ29tcGxldGU9ITE7dGhpcy5fY2hpbGRyZW49bnVsbDt0aGlzLl9kZWZlcj0hMH1haS5wcm90b3R5cGUucmVuZGVyPWZ1bmN0aW9uKGEpe3RoaXMuX2RlZmVyP3ZvaWQgMDp0KFwiMjUwXCIpO3RoaXMuX2hhc0NoaWxkcmVuPSEwO3RoaXMuX2NoaWxkcmVuPWE7dmFyIGI9dGhpcy5fcm9vdC5faW50ZXJuYWxSb290LGM9dGhpcy5fZXhwaXJhdGlvblRpbWUsZD1uZXcgYmk7WGgoYSxiLG51bGwsYyxkLl9vbkNvbW1pdCk7cmV0dXJuIGR9O1xuYWkucHJvdG90eXBlLnRoZW49ZnVuY3Rpb24oYSl7aWYodGhpcy5fZGlkQ29tcGxldGUpYSgpO2Vsc2V7dmFyIGI9dGhpcy5fY2FsbGJhY2tzO251bGw9PT1iJiYoYj10aGlzLl9jYWxsYmFja3M9W10pO2IucHVzaChhKX19O1xuYWkucHJvdG90eXBlLmNvbW1pdD1mdW5jdGlvbigpe3ZhciBhPXRoaXMuX3Jvb3QuX2ludGVybmFsUm9vdCxiPWEuZmlyc3RCYXRjaDt0aGlzLl9kZWZlciYmbnVsbCE9PWI/dm9pZCAwOnQoXCIyNTFcIik7aWYodGhpcy5faGFzQ2hpbGRyZW4pe3ZhciBjPXRoaXMuX2V4cGlyYXRpb25UaW1lO2lmKGIhPT10aGlzKXt0aGlzLl9oYXNDaGlsZHJlbiYmKGM9dGhpcy5fZXhwaXJhdGlvblRpbWU9Yi5fZXhwaXJhdGlvblRpbWUsdGhpcy5yZW5kZXIodGhpcy5fY2hpbGRyZW4pKTtmb3IodmFyIGQ9bnVsbCxlPWI7ZSE9PXRoaXM7KWQ9ZSxlPWUuX25leHQ7bnVsbD09PWQ/dChcIjI1MVwiKTp2b2lkIDA7ZC5fbmV4dD1lLl9uZXh0O3RoaXMuX25leHQ9YjthLmZpcnN0QmF0Y2g9dGhpc310aGlzLl9kZWZlcj0hMTtOaChhLGMpO2I9dGhpcy5fbmV4dDt0aGlzLl9uZXh0PW51bGw7Yj1hLmZpcnN0QmF0Y2g9YjtudWxsIT09YiYmYi5faGFzQ2hpbGRyZW4mJmIucmVuZGVyKGIuX2NoaWxkcmVuKX1lbHNlIHRoaXMuX25leHQ9XG5udWxsLHRoaXMuX2RlZmVyPSExfTthaS5wcm90b3R5cGUuX29uQ29tcGxldGU9ZnVuY3Rpb24oKXtpZighdGhpcy5fZGlkQ29tcGxldGUpe3RoaXMuX2RpZENvbXBsZXRlPSEwO3ZhciBhPXRoaXMuX2NhbGxiYWNrcztpZihudWxsIT09YSlmb3IodmFyIGI9MDtiPGEubGVuZ3RoO2IrKykoMCxhW2JdKSgpfX07ZnVuY3Rpb24gYmkoKXt0aGlzLl9jYWxsYmFja3M9bnVsbDt0aGlzLl9kaWRDb21taXQ9ITE7dGhpcy5fb25Db21taXQ9dGhpcy5fb25Db21taXQuYmluZCh0aGlzKX1iaS5wcm90b3R5cGUudGhlbj1mdW5jdGlvbihhKXtpZih0aGlzLl9kaWRDb21taXQpYSgpO2Vsc2V7dmFyIGI9dGhpcy5fY2FsbGJhY2tzO251bGw9PT1iJiYoYj10aGlzLl9jYWxsYmFja3M9W10pO2IucHVzaChhKX19O1xuYmkucHJvdG90eXBlLl9vbkNvbW1pdD1mdW5jdGlvbigpe2lmKCF0aGlzLl9kaWRDb21taXQpe3RoaXMuX2RpZENvbW1pdD0hMDt2YXIgYT10aGlzLl9jYWxsYmFja3M7aWYobnVsbCE9PWEpZm9yKHZhciBiPTA7YjxhLmxlbmd0aDtiKyspe3ZhciBjPWFbYl07XCJmdW5jdGlvblwiIT09dHlwZW9mIGM/dChcIjE5MVwiLGMpOnZvaWQgMDtjKCl9fX07XG5mdW5jdGlvbiBjaShhLGIsYyl7Yj1OKDMsbnVsbCxudWxsLGI/MzowKTthPXtjdXJyZW50OmIsY29udGFpbmVySW5mbzphLHBlbmRpbmdDaGlsZHJlbjpudWxsLHBpbmdDYWNoZTpudWxsLGVhcmxpZXN0UGVuZGluZ1RpbWU6MCxsYXRlc3RQZW5kaW5nVGltZTowLGVhcmxpZXN0U3VzcGVuZGVkVGltZTowLGxhdGVzdFN1c3BlbmRlZFRpbWU6MCxsYXRlc3RQaW5nZWRUaW1lOjAsZGlkRXJyb3I6ITEscGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lOjAsZmluaXNoZWRXb3JrOm51bGwsdGltZW91dEhhbmRsZTotMSxjb250ZXh0Om51bGwscGVuZGluZ0NvbnRleHQ6bnVsbCxoeWRyYXRlOmMsbmV4dEV4cGlyYXRpb25UaW1lVG9Xb3JrT246MCxleHBpcmF0aW9uVGltZTowLGZpcnN0QmF0Y2g6bnVsbCxuZXh0U2NoZWR1bGVkUm9vdDpudWxsfTt0aGlzLl9pbnRlcm5hbFJvb3Q9Yi5zdGF0ZU5vZGU9YX1cbmNpLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24oYSxiKXt2YXIgYz10aGlzLl9pbnRlcm5hbFJvb3QsZD1uZXcgYmk7Yj12b2lkIDA9PT1iP251bGw6YjtudWxsIT09YiYmZC50aGVuKGIpO1loKGEsYyxudWxsLGQuX29uQ29tbWl0KTtyZXR1cm4gZH07Y2kucHJvdG90eXBlLnVubW91bnQ9ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcy5faW50ZXJuYWxSb290LGM9bmV3IGJpO2E9dm9pZCAwPT09YT9udWxsOmE7bnVsbCE9PWEmJmMudGhlbihhKTtZaChudWxsLGIsbnVsbCxjLl9vbkNvbW1pdCk7cmV0dXJuIGN9O2NpLnByb3RvdHlwZS5sZWdhY3lfcmVuZGVyU3VidHJlZUludG9Db250YWluZXI9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPXRoaXMuX2ludGVybmFsUm9vdCxlPW5ldyBiaTtjPXZvaWQgMD09PWM/bnVsbDpjO251bGwhPT1jJiZlLnRoZW4oYyk7WWgoYixkLGEsZS5fb25Db21taXQpO3JldHVybiBlfTtcbmNpLnByb3RvdHlwZS5jcmVhdGVCYXRjaD1mdW5jdGlvbigpe3ZhciBhPW5ldyBhaSh0aGlzKSxiPWEuX2V4cGlyYXRpb25UaW1lLGM9dGhpcy5faW50ZXJuYWxSb290LGQ9Yy5maXJzdEJhdGNoO2lmKG51bGw9PT1kKWMuZmlyc3RCYXRjaD1hLGEuX25leHQ9bnVsbDtlbHNle2ZvcihjPW51bGw7bnVsbCE9PWQmJmQuX2V4cGlyYXRpb25UaW1lPj1iOyljPWQsZD1kLl9uZXh0O2EuX25leHQ9ZDtudWxsIT09YyYmKGMuX25leHQ9YSl9cmV0dXJuIGF9O2Z1bmN0aW9uIGRpKGEpe3JldHVybiEoIWF8fDEhPT1hLm5vZGVUeXBlJiY5IT09YS5ub2RlVHlwZSYmMTEhPT1hLm5vZGVUeXBlJiYoOCE9PWEubm9kZVR5cGV8fFwiIHJlYWN0LW1vdW50LXBvaW50LXVuc3RhYmxlIFwiIT09YS5ub2RlVmFsdWUpKX1LYj1UaDtMYj1XaDtNYj1mdW5jdGlvbigpe1h8fDA9PT1yaHx8KFFoKHJoLCExKSxyaD0wKX07XG5mdW5jdGlvbiBlaShhLGIpe2J8fChiPWE/OT09PWEubm9kZVR5cGU/YS5kb2N1bWVudEVsZW1lbnQ6YS5maXJzdENoaWxkOm51bGwsYj0hKCFifHwxIT09Yi5ub2RlVHlwZXx8IWIuaGFzQXR0cmlidXRlKFwiZGF0YS1yZWFjdHJvb3RcIikpKTtpZighYilmb3IodmFyIGM7Yz1hLmxhc3RDaGlsZDspYS5yZW1vdmVDaGlsZChjKTtyZXR1cm4gbmV3IGNpKGEsITEsYil9XG5mdW5jdGlvbiBmaShhLGIsYyxkLGUpe2RpKGMpP3ZvaWQgMDp0KFwiMjAwXCIpO3ZhciBmPWMuX3JlYWN0Um9vdENvbnRhaW5lcjtpZihmKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZSl7dmFyIGc9ZTtlPWZ1bmN0aW9uKCl7dmFyIGE9WmgoZi5faW50ZXJuYWxSb290KTtnLmNhbGwoYSl9fW51bGwhPWE/Zi5sZWdhY3lfcmVuZGVyU3VidHJlZUludG9Db250YWluZXIoYSxiLGUpOmYucmVuZGVyKGIsZSl9ZWxzZXtmPWMuX3JlYWN0Um9vdENvbnRhaW5lcj1laShjLGQpO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlKXt2YXIgaD1lO2U9ZnVuY3Rpb24oKXt2YXIgYT1aaChmLl9pbnRlcm5hbFJvb3QpO2guY2FsbChhKX19VWgoZnVuY3Rpb24oKXtudWxsIT1hP2YubGVnYWN5X3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyKGEsYixlKTpmLnJlbmRlcihiLGUpfSl9cmV0dXJuIFpoKGYuX2ludGVybmFsUm9vdCl9XG5mdW5jdGlvbiBnaShhLGIpe3ZhciBjPTI8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzJdP2FyZ3VtZW50c1syXTpudWxsO2RpKGIpP3ZvaWQgMDp0KFwiMjAwXCIpO3JldHVybiAkaChhLGIsbnVsbCxjKX1cbnZhciBraT17Y3JlYXRlUG9ydGFsOmdpLGZpbmRET01Ob2RlOmZ1bmN0aW9uKGEpe2lmKG51bGw9PWEpcmV0dXJuIG51bGw7aWYoMT09PWEubm9kZVR5cGUpcmV0dXJuIGE7dmFyIGI9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO3ZvaWQgMD09PWImJihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYS5yZW5kZXI/dChcIjE4OFwiKTp0KFwiMjY4XCIsT2JqZWN0LmtleXMoYSkpKTthPW5kKGIpO2E9bnVsbD09PWE/bnVsbDphLnN0YXRlTm9kZTtyZXR1cm4gYX0saHlkcmF0ZTpmdW5jdGlvbihhLGIsYyl7cmV0dXJuIGZpKG51bGwsYSxiLCEwLGMpfSxyZW5kZXI6ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBmaShudWxsLGEsYiwhMSxjKX0sdW5zdGFibGVfcmVuZGVyU3VidHJlZUludG9Db250YWluZXI6ZnVuY3Rpb24oYSxiLGMsZCl7bnVsbD09YXx8dm9pZCAwPT09YS5fcmVhY3RJbnRlcm5hbEZpYmVyP3QoXCIzOFwiKTp2b2lkIDA7cmV0dXJuIGZpKGEsYixjLCExLGQpfSx1bm1vdW50Q29tcG9uZW50QXROb2RlOmZ1bmN0aW9uKGEpe2RpKGEpP1xudm9pZCAwOnQoXCI0MFwiKTtyZXR1cm4gYS5fcmVhY3RSb290Q29udGFpbmVyPyhVaChmdW5jdGlvbigpe2ZpKG51bGwsbnVsbCxhLCExLGZ1bmN0aW9uKCl7YS5fcmVhY3RSb290Q29udGFpbmVyPW51bGx9KX0pLCEwKTohMX0sdW5zdGFibGVfY3JlYXRlUG9ydGFsOmZ1bmN0aW9uKCl7cmV0dXJuIGdpLmFwcGx5KHZvaWQgMCxhcmd1bWVudHMpfSx1bnN0YWJsZV9iYXRjaGVkVXBkYXRlczpUaCx1bnN0YWJsZV9pbnRlcmFjdGl2ZVVwZGF0ZXM6V2gsZmx1c2hTeW5jOmZ1bmN0aW9uKGEsYil7WD90KFwiMTg3XCIpOnZvaWQgMDt2YXIgYz1aO1o9ITA7dHJ5e3JldHVybiB3aChhLGIpfWZpbmFsbHl7Wj1jLFFoKDEwNzM3NDE4MjMsITEpfX0sdW5zdGFibGVfY3JlYXRlUm9vdDpoaSx1bnN0YWJsZV9mbHVzaENvbnRyb2xsZWQ6ZnVuY3Rpb24oYSl7dmFyIGI9WjtaPSEwO3RyeXt3aChhKX1maW5hbGx5eyhaPWIpfHxYfHxRaCgxMDczNzQxODIzLCExKX19LF9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEOntFdmVudHM6W0phLFxuS2EsTGEsQ2EuaW5qZWN0RXZlbnRQbHVnaW5zQnlOYW1lLHFhLFJhLGZ1bmN0aW9uKGEpe3phKGEsUWEpfSxJYixKYixKZCxFYV19fTtmdW5jdGlvbiBoaShhLGIpe2RpKGEpP3ZvaWQgMDp0KFwiMjk5XCIsXCJ1bnN0YWJsZV9jcmVhdGVSb290XCIpO3JldHVybiBuZXcgY2koYSwhMCxudWxsIT1iJiYhMD09PWIuaHlkcmF0ZSl9KGZ1bmN0aW9uKGEpe3ZhciBiPWEuZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U7cmV0dXJuIFdlKG4oe30sYSx7b3ZlcnJpZGVQcm9wczpudWxsLGZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyOmZ1bmN0aW9uKGEpe2E9bmQoYSk7cmV0dXJuIG51bGw9PT1hP251bGw6YS5zdGF0ZU5vZGV9LGZpbmRGaWJlckJ5SG9zdEluc3RhbmNlOmZ1bmN0aW9uKGEpe3JldHVybiBiP2IoYSk6bnVsbH19KSl9KSh7ZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6SWEsYnVuZGxlVHlwZTowLHZlcnNpb246XCIxNi43LjBcIixyZW5kZXJlclBhY2thZ2VOYW1lOlwicmVhY3QtZG9tXCJ9KTtcbnZhciBsaT17ZGVmYXVsdDpraX0sbWk9bGkmJmtpfHxsaTttb2R1bGUuZXhwb3J0cz1taS5kZWZhdWx0fHxtaTtcbiIsIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9zY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvc2NoZWR1bGVyLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjAuMTIuMFxuICogc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO09iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciBjPW51bGwsZj0hMSxoPTMsaz0tMSxsPS0xLG09ITEsbj0hMTtmdW5jdGlvbiBwKCl7aWYoIW0pe3ZhciBhPWMuZXhwaXJhdGlvblRpbWU7bj9xKCk6bj0hMDtyKHQsYSl9fVxuZnVuY3Rpb24gdSgpe3ZhciBhPWMsYj1jLm5leHQ7aWYoYz09PWIpYz1udWxsO2Vsc2V7dmFyIGQ9Yy5wcmV2aW91cztjPWQubmV4dD1iO2IucHJldmlvdXM9ZH1hLm5leHQ9YS5wcmV2aW91cz1udWxsO2Q9YS5jYWxsYmFjaztiPWEuZXhwaXJhdGlvblRpbWU7YT1hLnByaW9yaXR5TGV2ZWw7dmFyIGU9aCxRPWw7aD1hO2w9Yjt0cnl7dmFyIGc9ZCgpfWZpbmFsbHl7aD1lLGw9UX1pZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZylpZihnPXtjYWxsYmFjazpnLHByaW9yaXR5TGV2ZWw6YSxleHBpcmF0aW9uVGltZTpiLG5leHQ6bnVsbCxwcmV2aW91czpudWxsfSxudWxsPT09YyljPWcubmV4dD1nLnByZXZpb3VzPWc7ZWxzZXtkPW51bGw7YT1jO2Rve2lmKGEuZXhwaXJhdGlvblRpbWU+PWIpe2Q9YTticmVha31hPWEubmV4dH13aGlsZShhIT09Yyk7bnVsbD09PWQ/ZD1jOmQ9PT1jJiYoYz1nLHAoKSk7Yj1kLnByZXZpb3VzO2IubmV4dD1kLnByZXZpb3VzPWc7Zy5uZXh0PWQ7Zy5wcmV2aW91cz1cbmJ9fWZ1bmN0aW9uIHYoKXtpZigtMT09PWsmJm51bGwhPT1jJiYxPT09Yy5wcmlvcml0eUxldmVsKXttPSEwO3RyeXtkbyB1KCk7d2hpbGUobnVsbCE9PWMmJjE9PT1jLnByaW9yaXR5TGV2ZWwpfWZpbmFsbHl7bT0hMSxudWxsIT09Yz9wKCk6bj0hMX19fWZ1bmN0aW9uIHQoYSl7bT0hMDt2YXIgYj1mO2Y9YTt0cnl7aWYoYSlmb3IoO251bGwhPT1jOyl7dmFyIGQ9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtpZihjLmV4cGlyYXRpb25UaW1lPD1kKXtkbyB1KCk7d2hpbGUobnVsbCE9PWMmJmMuZXhwaXJhdGlvblRpbWU8PWQpfWVsc2UgYnJlYWt9ZWxzZSBpZihudWxsIT09Yyl7ZG8gdSgpO3doaWxlKG51bGwhPT1jJiYhdygpKX19ZmluYWxseXttPSExLGY9YixudWxsIT09Yz9wKCk6bj0hMSx2KCl9fVxudmFyIHg9RGF0ZSx5PVwiZnVuY3Rpb25cIj09PXR5cGVvZiBzZXRUaW1lb3V0P3NldFRpbWVvdXQ6dm9pZCAwLHo9XCJmdW5jdGlvblwiPT09dHlwZW9mIGNsZWFyVGltZW91dD9jbGVhclRpbWVvdXQ6dm9pZCAwLEE9XCJmdW5jdGlvblwiPT09dHlwZW9mIHJlcXVlc3RBbmltYXRpb25GcmFtZT9yZXF1ZXN0QW5pbWF0aW9uRnJhbWU6dm9pZCAwLEI9XCJmdW5jdGlvblwiPT09dHlwZW9mIGNhbmNlbEFuaW1hdGlvbkZyYW1lP2NhbmNlbEFuaW1hdGlvbkZyYW1lOnZvaWQgMCxDLEQ7ZnVuY3Rpb24gRShhKXtDPUEoZnVuY3Rpb24oYil7eihEKTthKGIpfSk7RD15KGZ1bmN0aW9uKCl7QihDKTthKGV4cG9ydHMudW5zdGFibGVfbm93KCkpfSwxMDApfVxuaWYoXCJvYmplY3RcIj09PXR5cGVvZiBwZXJmb3JtYW5jZSYmXCJmdW5jdGlvblwiPT09dHlwZW9mIHBlcmZvcm1hbmNlLm5vdyl7dmFyIEY9cGVyZm9ybWFuY2U7ZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4gRi5ub3coKX19ZWxzZSBleHBvcnRzLnVuc3RhYmxlX25vdz1mdW5jdGlvbigpe3JldHVybiB4Lm5vdygpfTt2YXIgcixxLHcsRz1udWxsO1widW5kZWZpbmVkXCIhPT10eXBlb2Ygd2luZG93P0c9d2luZG93OlwidW5kZWZpbmVkXCIhPT10eXBlb2YgZ2xvYmFsJiYoRz1nbG9iYWwpO1xuaWYoRyYmRy5fc2NoZWRNb2NrKXt2YXIgSD1HLl9zY2hlZE1vY2s7cj1IWzBdO3E9SFsxXTt3PUhbMl07ZXhwb3J0cy51bnN0YWJsZV9ub3c9SFszXX1lbHNlIGlmKFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93fHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgTWVzc2FnZUNoYW5uZWwpe3ZhciBJPW51bGwsSj1mdW5jdGlvbihhKXtpZihudWxsIT09SSl0cnl7SShhKX1maW5hbGx5e0k9bnVsbH19O3I9ZnVuY3Rpb24oYSl7bnVsbCE9PUk/c2V0VGltZW91dChyLDAsYSk6KEk9YSxzZXRUaW1lb3V0KEosMCwhMSkpfTtxPWZ1bmN0aW9uKCl7ST1udWxsfTt3PWZ1bmN0aW9uKCl7cmV0dXJuITF9fWVsc2V7XCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBjb25zb2xlJiYoXCJmdW5jdGlvblwiIT09dHlwZW9mIEEmJmNvbnNvbGUuZXJyb3IoXCJUaGlzIGJyb3dzZXIgZG9lc24ndCBzdXBwb3J0IHJlcXVlc3RBbmltYXRpb25GcmFtZS4gTWFrZSBzdXJlIHRoYXQgeW91IGxvYWQgYSBwb2x5ZmlsbCBpbiBvbGRlciBicm93c2Vycy4gaHR0cHM6Ly9mYi5tZS9yZWFjdC1wb2x5ZmlsbHNcIiksXG5cImZ1bmN0aW9uXCIhPT10eXBlb2YgQiYmY29uc29sZS5lcnJvcihcIlRoaXMgYnJvd3NlciBkb2Vzbid0IHN1cHBvcnQgY2FuY2VsQW5pbWF0aW9uRnJhbWUuIE1ha2Ugc3VyZSB0aGF0IHlvdSBsb2FkIGEgcG9seWZpbGwgaW4gb2xkZXIgYnJvd3NlcnMuIGh0dHBzOi8vZmIubWUvcmVhY3QtcG9seWZpbGxzXCIpKTt2YXIgSz1udWxsLEw9ITEsTT0tMSxOPSExLE89ITEsUD0wLFI9MzMsUz0zMzt3PWZ1bmN0aW9uKCl7cmV0dXJuIFA8PWV4cG9ydHMudW5zdGFibGVfbm93KCl9O3ZhciBUPW5ldyBNZXNzYWdlQ2hhbm5lbCxVPVQucG9ydDI7VC5wb3J0MS5vbm1lc3NhZ2U9ZnVuY3Rpb24oKXtMPSExO3ZhciBhPUssYj1NO0s9bnVsbDtNPS0xO3ZhciBkPWV4cG9ydHMudW5zdGFibGVfbm93KCksZT0hMTtpZigwPj1QLWQpaWYoLTEhPT1iJiZiPD1kKWU9ITA7ZWxzZXtOfHwoTj0hMCxFKFYpKTtLPWE7TT1iO3JldHVybn1pZihudWxsIT09YSl7Tz0hMDt0cnl7YShlKX1maW5hbGx5e089ITF9fX07XG52YXIgVj1mdW5jdGlvbihhKXtpZihudWxsIT09Syl7RShWKTt2YXIgYj1hLVArUztiPFMmJlI8Uz8oOD5iJiYoYj04KSxTPWI8Uj9SOmIpOlI9YjtQPWErUztMfHwoTD0hMCxVLnBvc3RNZXNzYWdlKHZvaWQgMCkpfWVsc2UgTj0hMX07cj1mdW5jdGlvbihhLGIpe0s9YTtNPWI7T3x8MD5iP1UucG9zdE1lc3NhZ2Uodm9pZCAwKTpOfHwoTj0hMCxFKFYpKX07cT1mdW5jdGlvbigpe0s9bnVsbDtMPSExO009LTF9fWV4cG9ydHMudW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHk9MTtleHBvcnRzLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5PTI7ZXhwb3J0cy51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eT0zO2V4cG9ydHMudW5zdGFibGVfSWRsZVByaW9yaXR5PTU7ZXhwb3J0cy51bnN0YWJsZV9Mb3dQcmlvcml0eT00O1xuZXhwb3J0cy51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHk9ZnVuY3Rpb24oYSxiKXtzd2l0Y2goYSl7Y2FzZSAxOmNhc2UgMjpjYXNlIDM6Y2FzZSA0OmNhc2UgNTpicmVhaztkZWZhdWx0OmE9M312YXIgZD1oLGU9aztoPWE7az1leHBvcnRzLnVuc3RhYmxlX25vdygpO3RyeXtyZXR1cm4gYigpfWZpbmFsbHl7aD1kLGs9ZSx2KCl9fTtcbmV4cG9ydHMudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjaz1mdW5jdGlvbihhLGIpe3ZhciBkPS0xIT09az9rOmV4cG9ydHMudW5zdGFibGVfbm93KCk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBiJiZudWxsIT09YiYmXCJudW1iZXJcIj09PXR5cGVvZiBiLnRpbWVvdXQpYj1kK2IudGltZW91dDtlbHNlIHN3aXRjaChoKXtjYXNlIDE6Yj1kKy0xO2JyZWFrO2Nhc2UgMjpiPWQrMjUwO2JyZWFrO2Nhc2UgNTpiPWQrMTA3Mzc0MTgyMzticmVhaztjYXNlIDQ6Yj1kKzFFNDticmVhaztkZWZhdWx0OmI9ZCs1RTN9YT17Y2FsbGJhY2s6YSxwcmlvcml0eUxldmVsOmgsZXhwaXJhdGlvblRpbWU6YixuZXh0Om51bGwscHJldmlvdXM6bnVsbH07aWYobnVsbD09PWMpYz1hLm5leHQ9YS5wcmV2aW91cz1hLHAoKTtlbHNle2Q9bnVsbDt2YXIgZT1jO2Rve2lmKGUuZXhwaXJhdGlvblRpbWU+Yil7ZD1lO2JyZWFrfWU9ZS5uZXh0fXdoaWxlKGUhPT1jKTtudWxsPT09ZD9kPWM6ZD09PWMmJihjPWEscCgpKTtcbmI9ZC5wcmV2aW91cztiLm5leHQ9ZC5wcmV2aW91cz1hO2EubmV4dD1kO2EucHJldmlvdXM9Yn1yZXR1cm4gYX07ZXhwb3J0cy51bnN0YWJsZV9jYW5jZWxDYWxsYmFjaz1mdW5jdGlvbihhKXt2YXIgYj1hLm5leHQ7aWYobnVsbCE9PWIpe2lmKGI9PT1hKWM9bnVsbDtlbHNle2E9PT1jJiYoYz1iKTt2YXIgZD1hLnByZXZpb3VzO2QubmV4dD1iO2IucHJldmlvdXM9ZH1hLm5leHQ9YS5wcmV2aW91cz1udWxsfX07ZXhwb3J0cy51bnN0YWJsZV93cmFwQ2FsbGJhY2s9ZnVuY3Rpb24oYSl7dmFyIGI9aDtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgZD1oLGU9aztoPWI7az1leHBvcnRzLnVuc3RhYmxlX25vdygpO3RyeXtyZXR1cm4gYS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9ZmluYWxseXtoPWQsaz1lLHYoKX19fTtleHBvcnRzLnVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsPWZ1bmN0aW9uKCl7cmV0dXJuIGh9O1xuZXhwb3J0cy51bnN0YWJsZV9zaG91bGRZaWVsZD1mdW5jdGlvbigpe3JldHVybiFmJiYobnVsbCE9PWMmJmMuZXhwaXJhdGlvblRpbWU8bHx8dygpKX07ZXhwb3J0cy51bnN0YWJsZV9jb250aW51ZUV4ZWN1dGlvbj1mdW5jdGlvbigpe251bGwhPT1jJiZwKCl9O2V4cG9ydHMudW5zdGFibGVfcGF1c2VFeGVjdXRpb249ZnVuY3Rpb24oKXt9O2V4cG9ydHMudW5zdGFibGVfZ2V0Rmlyc3RDYWxsYmFja05vZGU9ZnVuY3Rpb24oKXtyZXR1cm4gY307XG4iLCJ2YXIgZztcblxuLy8gVGhpcyB3b3JrcyBpbiBub24tc3RyaWN0IG1vZGVcbmcgPSAoZnVuY3Rpb24oKSB7XG5cdHJldHVybiB0aGlzO1xufSkoKTtcblxudHJ5IHtcblx0Ly8gVGhpcyB3b3JrcyBpZiBldmFsIGlzIGFsbG93ZWQgKHNlZSBDU1ApXG5cdGcgPSBnIHx8IG5ldyBGdW5jdGlvbihcInJldHVybiB0aGlzXCIpKCk7XG59IGNhdGNoIChlKSB7XG5cdC8vIFRoaXMgd29ya3MgaWYgdGhlIHdpbmRvdyByZWZlcmVuY2UgaXMgYXZhaWxhYmxlXG5cdGlmICh0eXBlb2Ygd2luZG93ID09PSBcIm9iamVjdFwiKSBnID0gd2luZG93O1xufVxuXG4vLyBnIGNhbiBzdGlsbCBiZSB1bmRlZmluZWQsIGJ1dCBub3RoaW5nIHRvIGRvIGFib3V0IGl0Li4uXG4vLyBXZSByZXR1cm4gdW5kZWZpbmVkLCBpbnN0ZWFkIG9mIG5vdGhpbmcgaGVyZSwgc28gaXQnc1xuLy8gZWFzaWVyIHRvIGhhbmRsZSB0aGlzIGNhc2UuIGlmKCFnbG9iYWwpIHsgLi4ufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGc7XG4iLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKG9yaWdpbmFsTW9kdWxlKSB7XG5cdGlmICghb3JpZ2luYWxNb2R1bGUud2VicGFja1BvbHlmaWxsKSB7XG5cdFx0dmFyIG1vZHVsZSA9IE9iamVjdC5jcmVhdGUob3JpZ2luYWxNb2R1bGUpO1xuXHRcdC8vIG1vZHVsZS5wYXJlbnQgPSB1bmRlZmluZWQgYnkgZGVmYXVsdFxuXHRcdGlmICghbW9kdWxlLmNoaWxkcmVuKSBtb2R1bGUuY2hpbGRyZW4gPSBbXTtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobW9kdWxlLCBcImxvYWRlZFwiLCB7XG5cdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxuXHRcdFx0Z2V0OiBmdW5jdGlvbigpIHtcblx0XHRcdFx0cmV0dXJuIG1vZHVsZS5sO1xuXHRcdFx0fVxuXHRcdH0pO1xuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShtb2R1bGUsIFwiaWRcIiwge1xuXHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcblx0XHRcdGdldDogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHJldHVybiBtb2R1bGUuaTtcblx0XHRcdH1cblx0XHR9KTtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobW9kdWxlLCBcImV4cG9ydHNcIiwge1xuXHRcdFx0ZW51bWVyYWJsZTogdHJ1ZVxuXHRcdH0pO1xuXHRcdG1vZHVsZS53ZWJwYWNrUG9seWZpbGwgPSAxO1xuXHR9XG5cdHJldHVybiBtb2R1bGU7XG59O1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBSZWFjdFByb3BUeXBlc1NlY3JldCA9IHJlcXVpcmUoJy4vbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0Jyk7XG5cbmZ1bmN0aW9uIGVtcHR5RnVuY3Rpb24oKSB7fVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKCkge1xuICBmdW5jdGlvbiBzaGltKHByb3BzLCBwcm9wTmFtZSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIHByb3BGdWxsTmFtZSwgc2VjcmV0KSB7XG4gICAgaWYgKHNlY3JldCA9PT0gUmVhY3RQcm9wVHlwZXNTZWNyZXQpIHtcbiAgICAgIC8vIEl0IGlzIHN0aWxsIHNhZmUgd2hlbiBjYWxsZWQgZnJvbSBSZWFjdC5cbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdmFyIGVyciA9IG5ldyBFcnJvcihcbiAgICAgICdDYWxsaW5nIFByb3BUeXBlcyB2YWxpZGF0b3JzIGRpcmVjdGx5IGlzIG5vdCBzdXBwb3J0ZWQgYnkgdGhlIGBwcm9wLXR5cGVzYCBwYWNrYWdlLiAnICtcbiAgICAgICdVc2UgUHJvcFR5cGVzLmNoZWNrUHJvcFR5cGVzKCkgdG8gY2FsbCB0aGVtLiAnICtcbiAgICAgICdSZWFkIG1vcmUgYXQgaHR0cDovL2ZiLm1lL3VzZS1jaGVjay1wcm9wLXR5cGVzJ1xuICAgICk7XG4gICAgZXJyLm5hbWUgPSAnSW52YXJpYW50IFZpb2xhdGlvbic7XG4gICAgdGhyb3cgZXJyO1xuICB9O1xuICBzaGltLmlzUmVxdWlyZWQgPSBzaGltO1xuICBmdW5jdGlvbiBnZXRTaGltKCkge1xuICAgIHJldHVybiBzaGltO1xuICB9O1xuICAvLyBJbXBvcnRhbnQhXG4gIC8vIEtlZXAgdGhpcyBsaXN0IGluIHN5bmMgd2l0aCBwcm9kdWN0aW9uIHZlcnNpb24gaW4gYC4vZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMuanNgLlxuICB2YXIgUmVhY3RQcm9wVHlwZXMgPSB7XG4gICAgYXJyYXk6IHNoaW0sXG4gICAgYm9vbDogc2hpbSxcbiAgICBmdW5jOiBzaGltLFxuICAgIG51bWJlcjogc2hpbSxcbiAgICBvYmplY3Q6IHNoaW0sXG4gICAgc3RyaW5nOiBzaGltLFxuICAgIHN5bWJvbDogc2hpbSxcblxuICAgIGFueTogc2hpbSxcbiAgICBhcnJheU9mOiBnZXRTaGltLFxuICAgIGVsZW1lbnQ6IHNoaW0sXG4gICAgaW5zdGFuY2VPZjogZ2V0U2hpbSxcbiAgICBub2RlOiBzaGltLFxuICAgIG9iamVjdE9mOiBnZXRTaGltLFxuICAgIG9uZU9mOiBnZXRTaGltLFxuICAgIG9uZU9mVHlwZTogZ2V0U2hpbSxcbiAgICBzaGFwZTogZ2V0U2hpbSxcbiAgICBleGFjdDogZ2V0U2hpbVxuICB9O1xuXG4gIFJlYWN0UHJvcFR5cGVzLmNoZWNrUHJvcFR5cGVzID0gZW1wdHlGdW5jdGlvbjtcbiAgUmVhY3RQcm9wVHlwZXMuUHJvcFR5cGVzID0gUmVhY3RQcm9wVHlwZXM7XG5cbiAgcmV0dXJuIFJlYWN0UHJvcFR5cGVzO1xufTtcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSAnU0VDUkVUX0RPX05PVF9QQVNTX1RISVNfT1JfWU9VX1dJTExfQkVfRklSRUQnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFJlYWN0UHJvcFR5cGVzU2VjcmV0O1xuIiwibW9kdWxlLmV4cG9ydHMgPSBBcnJheS5pc0FycmF5IHx8IGZ1bmN0aW9uIChhcnIpIHtcbiAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChhcnIpID09ICdbb2JqZWN0IEFycmF5XSc7XG59O1xuIiwiZnVuY3Rpb24gaXNBYnNvbHV0ZShwYXRobmFtZSkge1xuICByZXR1cm4gcGF0aG5hbWUuY2hhckF0KDApID09PSAnLyc7XG59XG5cbi8vIEFib3V0IDEuNXggZmFzdGVyIHRoYW4gdGhlIHR3by1hcmcgdmVyc2lvbiBvZiBBcnJheSNzcGxpY2UoKVxuZnVuY3Rpb24gc3BsaWNlT25lKGxpc3QsIGluZGV4KSB7XG4gIGZvciAodmFyIGkgPSBpbmRleCwgayA9IGkgKyAxLCBuID0gbGlzdC5sZW5ndGg7IGsgPCBuOyBpICs9IDEsIGsgKz0gMSkge1xuICAgIGxpc3RbaV0gPSBsaXN0W2tdO1xuICB9XG5cbiAgbGlzdC5wb3AoKTtcbn1cblxuLy8gVGhpcyBpbXBsZW1lbnRhdGlvbiBpcyBiYXNlZCBoZWF2aWx5IG9uIG5vZGUncyB1cmwucGFyc2VcbmZ1bmN0aW9uIHJlc29sdmVQYXRobmFtZSh0bykge1xuICB2YXIgZnJvbSA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogJyc7XG5cbiAgdmFyIHRvUGFydHMgPSB0byAmJiB0by5zcGxpdCgnLycpIHx8IFtdO1xuICB2YXIgZnJvbVBhcnRzID0gZnJvbSAmJiBmcm9tLnNwbGl0KCcvJykgfHwgW107XG5cbiAgdmFyIGlzVG9BYnMgPSB0byAmJiBpc0Fic29sdXRlKHRvKTtcbiAgdmFyIGlzRnJvbUFicyA9IGZyb20gJiYgaXNBYnNvbHV0ZShmcm9tKTtcbiAgdmFyIG11c3RFbmRBYnMgPSBpc1RvQWJzIHx8IGlzRnJvbUFicztcblxuICBpZiAodG8gJiYgaXNBYnNvbHV0ZSh0bykpIHtcbiAgICAvLyB0byBpcyBhYnNvbHV0ZVxuICAgIGZyb21QYXJ0cyA9IHRvUGFydHM7XG4gIH0gZWxzZSBpZiAodG9QYXJ0cy5sZW5ndGgpIHtcbiAgICAvLyB0byBpcyByZWxhdGl2ZSwgZHJvcCB0aGUgZmlsZW5hbWVcbiAgICBmcm9tUGFydHMucG9wKCk7XG4gICAgZnJvbVBhcnRzID0gZnJvbVBhcnRzLmNvbmNhdCh0b1BhcnRzKTtcbiAgfVxuXG4gIGlmICghZnJvbVBhcnRzLmxlbmd0aCkgcmV0dXJuICcvJztcblxuICB2YXIgaGFzVHJhaWxpbmdTbGFzaCA9IHZvaWQgMDtcbiAgaWYgKGZyb21QYXJ0cy5sZW5ndGgpIHtcbiAgICB2YXIgbGFzdCA9IGZyb21QYXJ0c1tmcm9tUGFydHMubGVuZ3RoIC0gMV07XG4gICAgaGFzVHJhaWxpbmdTbGFzaCA9IGxhc3QgPT09ICcuJyB8fCBsYXN0ID09PSAnLi4nIHx8IGxhc3QgPT09ICcnO1xuICB9IGVsc2Uge1xuICAgIGhhc1RyYWlsaW5nU2xhc2ggPSBmYWxzZTtcbiAgfVxuXG4gIHZhciB1cCA9IDA7XG4gIGZvciAodmFyIGkgPSBmcm9tUGFydHMubGVuZ3RoOyBpID49IDA7IGktLSkge1xuICAgIHZhciBwYXJ0ID0gZnJvbVBhcnRzW2ldO1xuXG4gICAgaWYgKHBhcnQgPT09ICcuJykge1xuICAgICAgc3BsaWNlT25lKGZyb21QYXJ0cywgaSk7XG4gICAgfSBlbHNlIGlmIChwYXJ0ID09PSAnLi4nKSB7XG4gICAgICBzcGxpY2VPbmUoZnJvbVBhcnRzLCBpKTtcbiAgICAgIHVwKys7XG4gICAgfSBlbHNlIGlmICh1cCkge1xuICAgICAgc3BsaWNlT25lKGZyb21QYXJ0cywgaSk7XG4gICAgICB1cC0tO1xuICAgIH1cbiAgfVxuXG4gIGlmICghbXVzdEVuZEFicykgZm9yICg7IHVwLS07IHVwKSB7XG4gICAgZnJvbVBhcnRzLnVuc2hpZnQoJy4uJyk7XG4gIH1pZiAobXVzdEVuZEFicyAmJiBmcm9tUGFydHNbMF0gIT09ICcnICYmICghZnJvbVBhcnRzWzBdIHx8ICFpc0Fic29sdXRlKGZyb21QYXJ0c1swXSkpKSBmcm9tUGFydHMudW5zaGlmdCgnJyk7XG5cbiAgdmFyIHJlc3VsdCA9IGZyb21QYXJ0cy5qb2luKCcvJyk7XG5cbiAgaWYgKGhhc1RyYWlsaW5nU2xhc2ggJiYgcmVzdWx0LnN1YnN0cigtMSkgIT09ICcvJykgcmVzdWx0ICs9ICcvJztcblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5leHBvcnQgZGVmYXVsdCByZXNvbHZlUGF0aG5hbWU7IiwidmFyIF90eXBlb2YgPSB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gXCJzeW1ib2xcIiA/IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIHR5cGVvZiBvYmo7IH0gOiBmdW5jdGlvbiAob2JqKSB7IHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqOyB9O1xuXG5mdW5jdGlvbiB2YWx1ZUVxdWFsKGEsIGIpIHtcbiAgaWYgKGEgPT09IGIpIHJldHVybiB0cnVlO1xuXG4gIGlmIChhID09IG51bGwgfHwgYiA9PSBudWxsKSByZXR1cm4gZmFsc2U7XG5cbiAgaWYgKEFycmF5LmlzQXJyYXkoYSkpIHtcbiAgICByZXR1cm4gQXJyYXkuaXNBcnJheShiKSAmJiBhLmxlbmd0aCA9PT0gYi5sZW5ndGggJiYgYS5ldmVyeShmdW5jdGlvbiAoaXRlbSwgaW5kZXgpIHtcbiAgICAgIHJldHVybiB2YWx1ZUVxdWFsKGl0ZW0sIGJbaW5kZXhdKTtcbiAgICB9KTtcbiAgfVxuXG4gIHZhciBhVHlwZSA9IHR5cGVvZiBhID09PSAndW5kZWZpbmVkJyA/ICd1bmRlZmluZWQnIDogX3R5cGVvZihhKTtcbiAgdmFyIGJUeXBlID0gdHlwZW9mIGIgPT09ICd1bmRlZmluZWQnID8gJ3VuZGVmaW5lZCcgOiBfdHlwZW9mKGIpO1xuXG4gIGlmIChhVHlwZSAhPT0gYlR5cGUpIHJldHVybiBmYWxzZTtcblxuICBpZiAoYVR5cGUgPT09ICdvYmplY3QnKSB7XG4gICAgdmFyIGFWYWx1ZSA9IGEudmFsdWVPZigpO1xuICAgIHZhciBiVmFsdWUgPSBiLnZhbHVlT2YoKTtcblxuICAgIGlmIChhVmFsdWUgIT09IGEgfHwgYlZhbHVlICE9PSBiKSByZXR1cm4gdmFsdWVFcXVhbChhVmFsdWUsIGJWYWx1ZSk7XG5cbiAgICB2YXIgYUtleXMgPSBPYmplY3Qua2V5cyhhKTtcbiAgICB2YXIgYktleXMgPSBPYmplY3Qua2V5cyhiKTtcblxuICAgIGlmIChhS2V5cy5sZW5ndGggIT09IGJLZXlzLmxlbmd0aCkgcmV0dXJuIGZhbHNlO1xuXG4gICAgcmV0dXJuIGFLZXlzLmV2ZXJ5KGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgIHJldHVybiB2YWx1ZUVxdWFsKGFba2V5XSwgYltrZXldKTtcbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiBmYWxzZTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgdmFsdWVFcXVhbDsiLCJleHBvcnQgdmFyIGFkZExlYWRpbmdTbGFzaCA9IGZ1bmN0aW9uIGFkZExlYWRpbmdTbGFzaChwYXRoKSB7XG4gIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gJy8nID8gcGF0aCA6ICcvJyArIHBhdGg7XG59O1xuXG5leHBvcnQgdmFyIHN0cmlwTGVhZGluZ1NsYXNoID0gZnVuY3Rpb24gc3RyaXBMZWFkaW5nU2xhc2gocGF0aCkge1xuICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09ICcvJyA/IHBhdGguc3Vic3RyKDEpIDogcGF0aDtcbn07XG5cbmV4cG9ydCB2YXIgaGFzQmFzZW5hbWUgPSBmdW5jdGlvbiBoYXNCYXNlbmFtZShwYXRoLCBwcmVmaXgpIHtcbiAgcmV0dXJuIG5ldyBSZWdFeHAoJ14nICsgcHJlZml4ICsgJyhcXFxcL3xcXFxcP3wjfCQpJywgJ2knKS50ZXN0KHBhdGgpO1xufTtcblxuZXhwb3J0IHZhciBzdHJpcEJhc2VuYW1lID0gZnVuY3Rpb24gc3RyaXBCYXNlbmFtZShwYXRoLCBwcmVmaXgpIHtcbiAgcmV0dXJuIGhhc0Jhc2VuYW1lKHBhdGgsIHByZWZpeCkgPyBwYXRoLnN1YnN0cihwcmVmaXgubGVuZ3RoKSA6IHBhdGg7XG59O1xuXG5leHBvcnQgdmFyIHN0cmlwVHJhaWxpbmdTbGFzaCA9IGZ1bmN0aW9uIHN0cmlwVHJhaWxpbmdTbGFzaChwYXRoKSB7XG4gIHJldHVybiBwYXRoLmNoYXJBdChwYXRoLmxlbmd0aCAtIDEpID09PSAnLycgPyBwYXRoLnNsaWNlKDAsIC0xKSA6IHBhdGg7XG59O1xuXG5leHBvcnQgdmFyIHBhcnNlUGF0aCA9IGZ1bmN0aW9uIHBhcnNlUGF0aChwYXRoKSB7XG4gIHZhciBwYXRobmFtZSA9IHBhdGggfHwgJy8nO1xuICB2YXIgc2VhcmNoID0gJyc7XG4gIHZhciBoYXNoID0gJyc7XG5cbiAgdmFyIGhhc2hJbmRleCA9IHBhdGhuYW1lLmluZGV4T2YoJyMnKTtcbiAgaWYgKGhhc2hJbmRleCAhPT0gLTEpIHtcbiAgICBoYXNoID0gcGF0aG5hbWUuc3Vic3RyKGhhc2hJbmRleCk7XG4gICAgcGF0aG5hbWUgPSBwYXRobmFtZS5zdWJzdHIoMCwgaGFzaEluZGV4KTtcbiAgfVxuXG4gIHZhciBzZWFyY2hJbmRleCA9IHBhdGhuYW1lLmluZGV4T2YoJz8nKTtcbiAgaWYgKHNlYXJjaEluZGV4ICE9PSAtMSkge1xuICAgIHNlYXJjaCA9IHBhdGhuYW1lLnN1YnN0cihzZWFyY2hJbmRleCk7XG4gICAgcGF0aG5hbWUgPSBwYXRobmFtZS5zdWJzdHIoMCwgc2VhcmNoSW5kZXgpO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBwYXRobmFtZTogcGF0aG5hbWUsXG4gICAgc2VhcmNoOiBzZWFyY2ggPT09ICc/JyA/ICcnIDogc2VhcmNoLFxuICAgIGhhc2g6IGhhc2ggPT09ICcjJyA/ICcnIDogaGFzaFxuICB9O1xufTtcblxuZXhwb3J0IHZhciBjcmVhdGVQYXRoID0gZnVuY3Rpb24gY3JlYXRlUGF0aChsb2NhdGlvbikge1xuICB2YXIgcGF0aG5hbWUgPSBsb2NhdGlvbi5wYXRobmFtZSxcbiAgICAgIHNlYXJjaCA9IGxvY2F0aW9uLnNlYXJjaCxcbiAgICAgIGhhc2ggPSBsb2NhdGlvbi5oYXNoO1xuXG5cbiAgdmFyIHBhdGggPSBwYXRobmFtZSB8fCAnLyc7XG5cbiAgaWYgKHNlYXJjaCAmJiBzZWFyY2ggIT09ICc/JykgcGF0aCArPSBzZWFyY2guY2hhckF0KDApID09PSAnPycgPyBzZWFyY2ggOiAnPycgKyBzZWFyY2g7XG5cbiAgaWYgKGhhc2ggJiYgaGFzaCAhPT0gJyMnKSBwYXRoICs9IGhhc2guY2hhckF0KDApID09PSAnIycgPyBoYXNoIDogJyMnICsgaGFzaDtcblxuICByZXR1cm4gcGF0aDtcbn07IiwidmFyIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTtcblxuaW1wb3J0IHJlc29sdmVQYXRobmFtZSBmcm9tICdyZXNvbHZlLXBhdGhuYW1lJztcbmltcG9ydCB2YWx1ZUVxdWFsIGZyb20gJ3ZhbHVlLWVxdWFsJztcbmltcG9ydCB7IHBhcnNlUGF0aCB9IGZyb20gJy4vUGF0aFV0aWxzJztcblxuZXhwb3J0IHZhciBjcmVhdGVMb2NhdGlvbiA9IGZ1bmN0aW9uIGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBrZXksIGN1cnJlbnRMb2NhdGlvbikge1xuICB2YXIgbG9jYXRpb24gPSB2b2lkIDA7XG4gIGlmICh0eXBlb2YgcGF0aCA9PT0gJ3N0cmluZycpIHtcbiAgICAvLyBUd28tYXJnIGZvcm06IHB1c2gocGF0aCwgc3RhdGUpXG4gICAgbG9jYXRpb24gPSBwYXJzZVBhdGgocGF0aCk7XG4gICAgbG9jYXRpb24uc3RhdGUgPSBzdGF0ZTtcbiAgfSBlbHNlIHtcbiAgICAvLyBPbmUtYXJnIGZvcm06IHB1c2gobG9jYXRpb24pXG4gICAgbG9jYXRpb24gPSBfZXh0ZW5kcyh7fSwgcGF0aCk7XG5cbiAgICBpZiAobG9jYXRpb24ucGF0aG5hbWUgPT09IHVuZGVmaW5lZCkgbG9jYXRpb24ucGF0aG5hbWUgPSAnJztcblxuICAgIGlmIChsb2NhdGlvbi5zZWFyY2gpIHtcbiAgICAgIGlmIChsb2NhdGlvbi5zZWFyY2guY2hhckF0KDApICE9PSAnPycpIGxvY2F0aW9uLnNlYXJjaCA9ICc/JyArIGxvY2F0aW9uLnNlYXJjaDtcbiAgICB9IGVsc2Uge1xuICAgICAgbG9jYXRpb24uc2VhcmNoID0gJyc7XG4gICAgfVxuXG4gICAgaWYgKGxvY2F0aW9uLmhhc2gpIHtcbiAgICAgIGlmIChsb2NhdGlvbi5oYXNoLmNoYXJBdCgwKSAhPT0gJyMnKSBsb2NhdGlvbi5oYXNoID0gJyMnICsgbG9jYXRpb24uaGFzaDtcbiAgICB9IGVsc2Uge1xuICAgICAgbG9jYXRpb24uaGFzaCA9ICcnO1xuICAgIH1cblxuICAgIGlmIChzdGF0ZSAhPT0gdW5kZWZpbmVkICYmIGxvY2F0aW9uLnN0YXRlID09PSB1bmRlZmluZWQpIGxvY2F0aW9uLnN0YXRlID0gc3RhdGU7XG4gIH1cblxuICB0cnkge1xuICAgIGxvY2F0aW9uLnBhdGhuYW1lID0gZGVjb2RlVVJJKGxvY2F0aW9uLnBhdGhuYW1lKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIGlmIChlIGluc3RhbmNlb2YgVVJJRXJyb3IpIHtcbiAgICAgIHRocm93IG5ldyBVUklFcnJvcignUGF0aG5hbWUgXCInICsgbG9jYXRpb24ucGF0aG5hbWUgKyAnXCIgY291bGQgbm90IGJlIGRlY29kZWQuICcgKyAnVGhpcyBpcyBsaWtlbHkgY2F1c2VkIGJ5IGFuIGludmFsaWQgcGVyY2VudC1lbmNvZGluZy4nKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhyb3cgZTtcbiAgICB9XG4gIH1cblxuICBpZiAoa2V5KSBsb2NhdGlvbi5rZXkgPSBrZXk7XG5cbiAgaWYgKGN1cnJlbnRMb2NhdGlvbikge1xuICAgIC8vIFJlc29sdmUgaW5jb21wbGV0ZS9yZWxhdGl2ZSBwYXRobmFtZSByZWxhdGl2ZSB0byBjdXJyZW50IGxvY2F0aW9uLlxuICAgIGlmICghbG9jYXRpb24ucGF0aG5hbWUpIHtcbiAgICAgIGxvY2F0aW9uLnBhdGhuYW1lID0gY3VycmVudExvY2F0aW9uLnBhdGhuYW1lO1xuICAgIH0gZWxzZSBpZiAobG9jYXRpb24ucGF0aG5hbWUuY2hhckF0KDApICE9PSAnLycpIHtcbiAgICAgIGxvY2F0aW9uLnBhdGhuYW1lID0gcmVzb2x2ZVBhdGhuYW1lKGxvY2F0aW9uLnBhdGhuYW1lLCBjdXJyZW50TG9jYXRpb24ucGF0aG5hbWUpO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICAvLyBXaGVuIHRoZXJlIGlzIG5vIHByaW9yIGxvY2F0aW9uIGFuZCBwYXRobmFtZSBpcyBlbXB0eSwgc2V0IGl0IHRvIC9cbiAgICBpZiAoIWxvY2F0aW9uLnBhdGhuYW1lKSB7XG4gICAgICBsb2NhdGlvbi5wYXRobmFtZSA9ICcvJztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gbG9jYXRpb247XG59O1xuXG5leHBvcnQgdmFyIGxvY2F0aW9uc0FyZUVxdWFsID0gZnVuY3Rpb24gbG9jYXRpb25zQXJlRXF1YWwoYSwgYikge1xuICByZXR1cm4gYS5wYXRobmFtZSA9PT0gYi5wYXRobmFtZSAmJiBhLnNlYXJjaCA9PT0gYi5zZWFyY2ggJiYgYS5oYXNoID09PSBiLmhhc2ggJiYgYS5rZXkgPT09IGIua2V5ICYmIHZhbHVlRXF1YWwoYS5zdGF0ZSwgYi5zdGF0ZSk7XG59OyIsImltcG9ydCB3YXJuaW5nIGZyb20gJ3dhcm5pbmcnO1xuXG52YXIgY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIgPSBmdW5jdGlvbiBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlcigpIHtcbiAgdmFyIHByb21wdCA9IG51bGw7XG5cbiAgdmFyIHNldFByb21wdCA9IGZ1bmN0aW9uIHNldFByb21wdChuZXh0UHJvbXB0KSB7XG4gICAgd2FybmluZyhwcm9tcHQgPT0gbnVsbCwgJ0EgaGlzdG9yeSBzdXBwb3J0cyBvbmx5IG9uZSBwcm9tcHQgYXQgYSB0aW1lJyk7XG5cbiAgICBwcm9tcHQgPSBuZXh0UHJvbXB0O1xuXG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmIChwcm9tcHQgPT09IG5leHRQcm9tcHQpIHByb21wdCA9IG51bGw7XG4gICAgfTtcbiAgfTtcblxuICB2YXIgY29uZmlybVRyYW5zaXRpb25UbyA9IGZ1bmN0aW9uIGNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgY2FsbGJhY2spIHtcbiAgICAvLyBUT0RPOiBJZiBhbm90aGVyIHRyYW5zaXRpb24gc3RhcnRzIHdoaWxlIHdlJ3JlIHN0aWxsIGNvbmZpcm1pbmdcbiAgICAvLyB0aGUgcHJldmlvdXMgb25lLCB3ZSBtYXkgZW5kIHVwIGluIGEgd2VpcmQgc3RhdGUuIEZpZ3VyZSBvdXQgdGhlXG4gICAgLy8gYmVzdCB3YXkgdG8gaGFuZGxlIHRoaXMuXG4gICAgaWYgKHByb21wdCAhPSBudWxsKSB7XG4gICAgICB2YXIgcmVzdWx0ID0gdHlwZW9mIHByb21wdCA9PT0gJ2Z1bmN0aW9uJyA/IHByb21wdChsb2NhdGlvbiwgYWN0aW9uKSA6IHByb21wdDtcblxuICAgICAgaWYgKHR5cGVvZiByZXN1bHQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIGlmICh0eXBlb2YgZ2V0VXNlckNvbmZpcm1hdGlvbiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgIGdldFVzZXJDb25maXJtYXRpb24ocmVzdWx0LCBjYWxsYmFjayk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgd2FybmluZyhmYWxzZSwgJ0EgaGlzdG9yeSBuZWVkcyBhIGdldFVzZXJDb25maXJtYXRpb24gZnVuY3Rpb24gaW4gb3JkZXIgdG8gdXNlIGEgcHJvbXB0IG1lc3NhZ2UnKTtcblxuICAgICAgICAgIGNhbGxiYWNrKHRydWUpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBSZXR1cm4gZmFsc2UgZnJvbSBhIHRyYW5zaXRpb24gaG9vayB0byBjYW5jZWwgdGhlIHRyYW5zaXRpb24uXG4gICAgICAgIGNhbGxiYWNrKHJlc3VsdCAhPT0gZmFsc2UpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBjYWxsYmFjayh0cnVlKTtcbiAgICB9XG4gIH07XG5cbiAgdmFyIGxpc3RlbmVycyA9IFtdO1xuXG4gIHZhciBhcHBlbmRMaXN0ZW5lciA9IGZ1bmN0aW9uIGFwcGVuZExpc3RlbmVyKGZuKSB7XG4gICAgdmFyIGlzQWN0aXZlID0gdHJ1ZTtcblxuICAgIHZhciBsaXN0ZW5lciA9IGZ1bmN0aW9uIGxpc3RlbmVyKCkge1xuICAgICAgaWYgKGlzQWN0aXZlKSBmbi5hcHBseSh1bmRlZmluZWQsIGFyZ3VtZW50cyk7XG4gICAgfTtcblxuICAgIGxpc3RlbmVycy5wdXNoKGxpc3RlbmVyKTtcblxuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBpc0FjdGl2ZSA9IGZhbHNlO1xuICAgICAgbGlzdGVuZXJzID0gbGlzdGVuZXJzLmZpbHRlcihmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgICByZXR1cm4gaXRlbSAhPT0gbGlzdGVuZXI7XG4gICAgICB9KTtcbiAgICB9O1xuICB9O1xuXG4gIHZhciBub3RpZnlMaXN0ZW5lcnMgPSBmdW5jdGlvbiBub3RpZnlMaXN0ZW5lcnMoKSB7XG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgbGlzdGVuZXJzLmZvckVhY2goZnVuY3Rpb24gKGxpc3RlbmVyKSB7XG4gICAgICByZXR1cm4gbGlzdGVuZXIuYXBwbHkodW5kZWZpbmVkLCBhcmdzKTtcbiAgICB9KTtcbiAgfTtcblxuICByZXR1cm4ge1xuICAgIHNldFByb21wdDogc2V0UHJvbXB0LFxuICAgIGNvbmZpcm1UcmFuc2l0aW9uVG86IGNvbmZpcm1UcmFuc2l0aW9uVG8sXG4gICAgYXBwZW5kTGlzdGVuZXI6IGFwcGVuZExpc3RlbmVyLFxuICAgIG5vdGlmeUxpc3RlbmVyczogbm90aWZ5TGlzdGVuZXJzXG4gIH07XG59O1xuXG5leHBvcnQgZGVmYXVsdCBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlcjsiLCJleHBvcnQgdmFyIGNhblVzZURPTSA9ICEhKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHdpbmRvdy5kb2N1bWVudCAmJiB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCk7XG5cbmV4cG9ydCB2YXIgYWRkRXZlbnRMaXN0ZW5lciA9IGZ1bmN0aW9uIGFkZEV2ZW50TGlzdGVuZXIobm9kZSwgZXZlbnQsIGxpc3RlbmVyKSB7XG4gIHJldHVybiBub2RlLmFkZEV2ZW50TGlzdGVuZXIgPyBub2RlLmFkZEV2ZW50TGlzdGVuZXIoZXZlbnQsIGxpc3RlbmVyLCBmYWxzZSkgOiBub2RlLmF0dGFjaEV2ZW50KCdvbicgKyBldmVudCwgbGlzdGVuZXIpO1xufTtcblxuZXhwb3J0IHZhciByZW1vdmVFdmVudExpc3RlbmVyID0gZnVuY3Rpb24gcmVtb3ZlRXZlbnRMaXN0ZW5lcihub2RlLCBldmVudCwgbGlzdGVuZXIpIHtcbiAgcmV0dXJuIG5vZGUucmVtb3ZlRXZlbnRMaXN0ZW5lciA/IG5vZGUucmVtb3ZlRXZlbnRMaXN0ZW5lcihldmVudCwgbGlzdGVuZXIsIGZhbHNlKSA6IG5vZGUuZGV0YWNoRXZlbnQoJ29uJyArIGV2ZW50LCBsaXN0ZW5lcik7XG59O1xuXG5leHBvcnQgdmFyIGdldENvbmZpcm1hdGlvbiA9IGZ1bmN0aW9uIGdldENvbmZpcm1hdGlvbihtZXNzYWdlLCBjYWxsYmFjaykge1xuICByZXR1cm4gY2FsbGJhY2sod2luZG93LmNvbmZpcm0obWVzc2FnZSkpO1xufTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1hbGVydFxuXG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiB0aGUgSFRNTDUgaGlzdG9yeSBBUEkgaXMgc3VwcG9ydGVkLiBUYWtlbiBmcm9tIE1vZGVybml6ci5cbiAqXG4gKiBodHRwczovL2dpdGh1Yi5jb20vTW9kZXJuaXpyL01vZGVybml6ci9ibG9iL21hc3Rlci9MSUNFTlNFXG4gKiBodHRwczovL2dpdGh1Yi5jb20vTW9kZXJuaXpyL01vZGVybml6ci9ibG9iL21hc3Rlci9mZWF0dXJlLWRldGVjdHMvaGlzdG9yeS5qc1xuICogY2hhbmdlZCB0byBhdm9pZCBmYWxzZSBuZWdhdGl2ZXMgZm9yIFdpbmRvd3MgUGhvbmVzOiBodHRwczovL2dpdGh1Yi5jb20vcmVhY3Rqcy9yZWFjdC1yb3V0ZXIvaXNzdWVzLzU4NlxuICovXG5leHBvcnQgdmFyIHN1cHBvcnRzSGlzdG9yeSA9IGZ1bmN0aW9uIHN1cHBvcnRzSGlzdG9yeSgpIHtcbiAgdmFyIHVhID0gd2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQ7XG5cbiAgaWYgKCh1YS5pbmRleE9mKCdBbmRyb2lkIDIuJykgIT09IC0xIHx8IHVhLmluZGV4T2YoJ0FuZHJvaWQgNC4wJykgIT09IC0xKSAmJiB1YS5pbmRleE9mKCdNb2JpbGUgU2FmYXJpJykgIT09IC0xICYmIHVhLmluZGV4T2YoJ0Nocm9tZScpID09PSAtMSAmJiB1YS5pbmRleE9mKCdXaW5kb3dzIFBob25lJykgPT09IC0xKSByZXR1cm4gZmFsc2U7XG5cbiAgcmV0dXJuIHdpbmRvdy5oaXN0b3J5ICYmICdwdXNoU3RhdGUnIGluIHdpbmRvdy5oaXN0b3J5O1xufTtcblxuLyoqXG4gKiBSZXR1cm5zIHRydWUgaWYgYnJvd3NlciBmaXJlcyBwb3BzdGF0ZSBvbiBoYXNoIGNoYW5nZS5cbiAqIElFMTAgYW5kIElFMTEgZG8gbm90LlxuICovXG5leHBvcnQgdmFyIHN1cHBvcnRzUG9wU3RhdGVPbkhhc2hDaGFuZ2UgPSBmdW5jdGlvbiBzdXBwb3J0c1BvcFN0YXRlT25IYXNoQ2hhbmdlKCkge1xuICByZXR1cm4gd2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZignVHJpZGVudCcpID09PSAtMTtcbn07XG5cbi8qKlxuICogUmV0dXJucyBmYWxzZSBpZiB1c2luZyBnbyhuKSB3aXRoIGhhc2ggaGlzdG9yeSBjYXVzZXMgYSBmdWxsIHBhZ2UgcmVsb2FkLlxuICovXG5leHBvcnQgdmFyIHN1cHBvcnRzR29XaXRob3V0UmVsb2FkVXNpbmdIYXNoID0gZnVuY3Rpb24gc3VwcG9ydHNHb1dpdGhvdXRSZWxvYWRVc2luZ0hhc2goKSB7XG4gIHJldHVybiB3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdGaXJlZm94JykgPT09IC0xO1xufTtcblxuLyoqXG4gKiBSZXR1cm5zIHRydWUgaWYgYSBnaXZlbiBwb3BzdGF0ZSBldmVudCBpcyBhbiBleHRyYW5lb3VzIFdlYktpdCBldmVudC5cbiAqIEFjY291bnRzIGZvciB0aGUgZmFjdCB0aGF0IENocm9tZSBvbiBpT1MgZmlyZXMgcmVhbCBwb3BzdGF0ZSBldmVudHNcbiAqIGNvbnRhaW5pbmcgdW5kZWZpbmVkIHN0YXRlIHdoZW4gcHJlc3NpbmcgdGhlIGJhY2sgYnV0dG9uLlxuICovXG5leHBvcnQgdmFyIGlzRXh0cmFuZW91c1BvcHN0YXRlRXZlbnQgPSBmdW5jdGlvbiBpc0V4dHJhbmVvdXNQb3BzdGF0ZUV2ZW50KGV2ZW50KSB7XG4gIHJldHVybiBldmVudC5zdGF0ZSA9PT0gdW5kZWZpbmVkICYmIG5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZignQ3JpT1MnKSA9PT0gLTE7XG59OyIsInZhciBfdHlwZW9mID0gdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09IFwic3ltYm9sXCIgPyBmdW5jdGlvbiAob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9IDogZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajsgfTtcblxudmFyIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTtcblxuaW1wb3J0IHdhcm5pbmcgZnJvbSAnd2FybmluZyc7XG5pbXBvcnQgaW52YXJpYW50IGZyb20gJ2ludmFyaWFudCc7XG5pbXBvcnQgeyBjcmVhdGVMb2NhdGlvbiB9IGZyb20gJy4vTG9jYXRpb25VdGlscyc7XG5pbXBvcnQgeyBhZGRMZWFkaW5nU2xhc2gsIHN0cmlwVHJhaWxpbmdTbGFzaCwgaGFzQmFzZW5hbWUsIHN0cmlwQmFzZW5hbWUsIGNyZWF0ZVBhdGggfSBmcm9tICcuL1BhdGhVdGlscyc7XG5pbXBvcnQgY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIgZnJvbSAnLi9jcmVhdGVUcmFuc2l0aW9uTWFuYWdlcic7XG5pbXBvcnQgeyBjYW5Vc2VET00sIGFkZEV2ZW50TGlzdGVuZXIsIHJlbW92ZUV2ZW50TGlzdGVuZXIsIGdldENvbmZpcm1hdGlvbiwgc3VwcG9ydHNIaXN0b3J5LCBzdXBwb3J0c1BvcFN0YXRlT25IYXNoQ2hhbmdlLCBpc0V4dHJhbmVvdXNQb3BzdGF0ZUV2ZW50IH0gZnJvbSAnLi9ET01VdGlscyc7XG5cbnZhciBQb3BTdGF0ZUV2ZW50ID0gJ3BvcHN0YXRlJztcbnZhciBIYXNoQ2hhbmdlRXZlbnQgPSAnaGFzaGNoYW5nZSc7XG5cbnZhciBnZXRIaXN0b3J5U3RhdGUgPSBmdW5jdGlvbiBnZXRIaXN0b3J5U3RhdGUoKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIHdpbmRvdy5oaXN0b3J5LnN0YXRlIHx8IHt9O1xuICB9IGNhdGNoIChlKSB7XG4gICAgLy8gSUUgMTEgc29tZXRpbWVzIHRocm93cyB3aGVuIGFjY2Vzc2luZyB3aW5kb3cuaGlzdG9yeS5zdGF0ZVxuICAgIC8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vUmVhY3RUcmFpbmluZy9oaXN0b3J5L3B1bGwvMjg5XG4gICAgcmV0dXJuIHt9O1xuICB9XG59O1xuXG4vKipcbiAqIENyZWF0ZXMgYSBoaXN0b3J5IG9iamVjdCB0aGF0IHVzZXMgdGhlIEhUTUw1IGhpc3RvcnkgQVBJIGluY2x1ZGluZ1xuICogcHVzaFN0YXRlLCByZXBsYWNlU3RhdGUsIGFuZCB0aGUgcG9wc3RhdGUgZXZlbnQuXG4gKi9cbnZhciBjcmVhdGVCcm93c2VySGlzdG9yeSA9IGZ1bmN0aW9uIGNyZWF0ZUJyb3dzZXJIaXN0b3J5KCkge1xuICB2YXIgcHJvcHMgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IHt9O1xuXG4gIGludmFyaWFudChjYW5Vc2VET00sICdCcm93c2VyIGhpc3RvcnkgbmVlZHMgYSBET00nKTtcblxuICB2YXIgZ2xvYmFsSGlzdG9yeSA9IHdpbmRvdy5oaXN0b3J5O1xuICB2YXIgY2FuVXNlSGlzdG9yeSA9IHN1cHBvcnRzSGlzdG9yeSgpO1xuICB2YXIgbmVlZHNIYXNoQ2hhbmdlTGlzdGVuZXIgPSAhc3VwcG9ydHNQb3BTdGF0ZU9uSGFzaENoYW5nZSgpO1xuXG4gIHZhciBfcHJvcHMkZm9yY2VSZWZyZXNoID0gcHJvcHMuZm9yY2VSZWZyZXNoLFxuICAgICAgZm9yY2VSZWZyZXNoID0gX3Byb3BzJGZvcmNlUmVmcmVzaCA9PT0gdW5kZWZpbmVkID8gZmFsc2UgOiBfcHJvcHMkZm9yY2VSZWZyZXNoLFxuICAgICAgX3Byb3BzJGdldFVzZXJDb25maXJtID0gcHJvcHMuZ2V0VXNlckNvbmZpcm1hdGlvbixcbiAgICAgIGdldFVzZXJDb25maXJtYXRpb24gPSBfcHJvcHMkZ2V0VXNlckNvbmZpcm0gPT09IHVuZGVmaW5lZCA/IGdldENvbmZpcm1hdGlvbiA6IF9wcm9wcyRnZXRVc2VyQ29uZmlybSxcbiAgICAgIF9wcm9wcyRrZXlMZW5ndGggPSBwcm9wcy5rZXlMZW5ndGgsXG4gICAgICBrZXlMZW5ndGggPSBfcHJvcHMka2V5TGVuZ3RoID09PSB1bmRlZmluZWQgPyA2IDogX3Byb3BzJGtleUxlbmd0aDtcblxuICB2YXIgYmFzZW5hbWUgPSBwcm9wcy5iYXNlbmFtZSA/IHN0cmlwVHJhaWxpbmdTbGFzaChhZGRMZWFkaW5nU2xhc2gocHJvcHMuYmFzZW5hbWUpKSA6ICcnO1xuXG4gIHZhciBnZXRET01Mb2NhdGlvbiA9IGZ1bmN0aW9uIGdldERPTUxvY2F0aW9uKGhpc3RvcnlTdGF0ZSkge1xuICAgIHZhciBfcmVmID0gaGlzdG9yeVN0YXRlIHx8IHt9LFxuICAgICAgICBrZXkgPSBfcmVmLmtleSxcbiAgICAgICAgc3RhdGUgPSBfcmVmLnN0YXRlO1xuXG4gICAgdmFyIF93aW5kb3ckbG9jYXRpb24gPSB3aW5kb3cubG9jYXRpb24sXG4gICAgICAgIHBhdGhuYW1lID0gX3dpbmRvdyRsb2NhdGlvbi5wYXRobmFtZSxcbiAgICAgICAgc2VhcmNoID0gX3dpbmRvdyRsb2NhdGlvbi5zZWFyY2gsXG4gICAgICAgIGhhc2ggPSBfd2luZG93JGxvY2F0aW9uLmhhc2g7XG5cblxuICAgIHZhciBwYXRoID0gcGF0aG5hbWUgKyBzZWFyY2ggKyBoYXNoO1xuXG4gICAgd2FybmluZyghYmFzZW5hbWUgfHwgaGFzQmFzZW5hbWUocGF0aCwgYmFzZW5hbWUpLCAnWW91IGFyZSBhdHRlbXB0aW5nIHRvIHVzZSBhIGJhc2VuYW1lIG9uIGEgcGFnZSB3aG9zZSBVUkwgcGF0aCBkb2VzIG5vdCBiZWdpbiAnICsgJ3dpdGggdGhlIGJhc2VuYW1lLiBFeHBlY3RlZCBwYXRoIFwiJyArIHBhdGggKyAnXCIgdG8gYmVnaW4gd2l0aCBcIicgKyBiYXNlbmFtZSArICdcIi4nKTtcblxuICAgIGlmIChiYXNlbmFtZSkgcGF0aCA9IHN0cmlwQmFzZW5hbWUocGF0aCwgYmFzZW5hbWUpO1xuXG4gICAgcmV0dXJuIGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBrZXkpO1xuICB9O1xuXG4gIHZhciBjcmVhdGVLZXkgPSBmdW5jdGlvbiBjcmVhdGVLZXkoKSB7XG4gICAgcmV0dXJuIE1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cigyLCBrZXlMZW5ndGgpO1xuICB9O1xuXG4gIHZhciB0cmFuc2l0aW9uTWFuYWdlciA9IGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyKCk7XG5cbiAgdmFyIHNldFN0YXRlID0gZnVuY3Rpb24gc2V0U3RhdGUobmV4dFN0YXRlKSB7XG4gICAgX2V4dGVuZHMoaGlzdG9yeSwgbmV4dFN0YXRlKTtcblxuICAgIGhpc3RvcnkubGVuZ3RoID0gZ2xvYmFsSGlzdG9yeS5sZW5ndGg7XG5cbiAgICB0cmFuc2l0aW9uTWFuYWdlci5ub3RpZnlMaXN0ZW5lcnMoaGlzdG9yeS5sb2NhdGlvbiwgaGlzdG9yeS5hY3Rpb24pO1xuICB9O1xuXG4gIHZhciBoYW5kbGVQb3BTdGF0ZSA9IGZ1bmN0aW9uIGhhbmRsZVBvcFN0YXRlKGV2ZW50KSB7XG4gICAgLy8gSWdub3JlIGV4dHJhbmVvdXMgcG9wc3RhdGUgZXZlbnRzIGluIFdlYktpdC5cbiAgICBpZiAoaXNFeHRyYW5lb3VzUG9wc3RhdGVFdmVudChldmVudCkpIHJldHVybjtcblxuICAgIGhhbmRsZVBvcChnZXRET01Mb2NhdGlvbihldmVudC5zdGF0ZSkpO1xuICB9O1xuXG4gIHZhciBoYW5kbGVIYXNoQ2hhbmdlID0gZnVuY3Rpb24gaGFuZGxlSGFzaENoYW5nZSgpIHtcbiAgICBoYW5kbGVQb3AoZ2V0RE9NTG9jYXRpb24oZ2V0SGlzdG9yeVN0YXRlKCkpKTtcbiAgfTtcblxuICB2YXIgZm9yY2VOZXh0UG9wID0gZmFsc2U7XG5cbiAgdmFyIGhhbmRsZVBvcCA9IGZ1bmN0aW9uIGhhbmRsZVBvcChsb2NhdGlvbikge1xuICAgIGlmIChmb3JjZU5leHRQb3ApIHtcbiAgICAgIGZvcmNlTmV4dFBvcCA9IGZhbHNlO1xuICAgICAgc2V0U3RhdGUoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGFjdGlvbiA9ICdQT1AnO1xuXG4gICAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgICBpZiAob2spIHtcbiAgICAgICAgICBzZXRTdGF0ZSh7IGFjdGlvbjogYWN0aW9uLCBsb2NhdGlvbjogbG9jYXRpb24gfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV2ZXJ0UG9wKGxvY2F0aW9uKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9O1xuXG4gIHZhciByZXZlcnRQb3AgPSBmdW5jdGlvbiByZXZlcnRQb3AoZnJvbUxvY2F0aW9uKSB7XG4gICAgdmFyIHRvTG9jYXRpb24gPSBoaXN0b3J5LmxvY2F0aW9uO1xuXG4gICAgLy8gVE9ETzogV2UgY291bGQgcHJvYmFibHkgbWFrZSB0aGlzIG1vcmUgcmVsaWFibGUgYnlcbiAgICAvLyBrZWVwaW5nIGEgbGlzdCBvZiBrZXlzIHdlJ3ZlIHNlZW4gaW4gc2Vzc2lvblN0b3JhZ2UuXG4gICAgLy8gSW5zdGVhZCwgd2UganVzdCBkZWZhdWx0IHRvIDAgZm9yIGtleXMgd2UgZG9uJ3Qga25vdy5cblxuICAgIHZhciB0b0luZGV4ID0gYWxsS2V5cy5pbmRleE9mKHRvTG9jYXRpb24ua2V5KTtcblxuICAgIGlmICh0b0luZGV4ID09PSAtMSkgdG9JbmRleCA9IDA7XG5cbiAgICB2YXIgZnJvbUluZGV4ID0gYWxsS2V5cy5pbmRleE9mKGZyb21Mb2NhdGlvbi5rZXkpO1xuXG4gICAgaWYgKGZyb21JbmRleCA9PT0gLTEpIGZyb21JbmRleCA9IDA7XG5cbiAgICB2YXIgZGVsdGEgPSB0b0luZGV4IC0gZnJvbUluZGV4O1xuXG4gICAgaWYgKGRlbHRhKSB7XG4gICAgICBmb3JjZU5leHRQb3AgPSB0cnVlO1xuICAgICAgZ28oZGVsdGEpO1xuICAgIH1cbiAgfTtcblxuICB2YXIgaW5pdGlhbExvY2F0aW9uID0gZ2V0RE9NTG9jYXRpb24oZ2V0SGlzdG9yeVN0YXRlKCkpO1xuICB2YXIgYWxsS2V5cyA9IFtpbml0aWFsTG9jYXRpb24ua2V5XTtcblxuICAvLyBQdWJsaWMgaW50ZXJmYWNlXG5cbiAgdmFyIGNyZWF0ZUhyZWYgPSBmdW5jdGlvbiBjcmVhdGVIcmVmKGxvY2F0aW9uKSB7XG4gICAgcmV0dXJuIGJhc2VuYW1lICsgY3JlYXRlUGF0aChsb2NhdGlvbik7XG4gIH07XG5cbiAgdmFyIHB1c2ggPSBmdW5jdGlvbiBwdXNoKHBhdGgsIHN0YXRlKSB7XG4gICAgd2FybmluZyghKCh0eXBlb2YgcGF0aCA9PT0gJ3VuZGVmaW5lZCcgPyAndW5kZWZpbmVkJyA6IF90eXBlb2YocGF0aCkpID09PSAnb2JqZWN0JyAmJiBwYXRoLnN0YXRlICE9PSB1bmRlZmluZWQgJiYgc3RhdGUgIT09IHVuZGVmaW5lZCksICdZb3Ugc2hvdWxkIGF2b2lkIHByb3ZpZGluZyBhIDJuZCBzdGF0ZSBhcmd1bWVudCB0byBwdXNoIHdoZW4gdGhlIDFzdCAnICsgJ2FyZ3VtZW50IGlzIGEgbG9jYXRpb24tbGlrZSBvYmplY3QgdGhhdCBhbHJlYWR5IGhhcyBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpO1xuXG4gICAgdmFyIGFjdGlvbiA9ICdQVVNIJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwgY3JlYXRlS2V5KCksIGhpc3RvcnkubG9jYXRpb24pO1xuXG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcblxuICAgICAgdmFyIGhyZWYgPSBjcmVhdGVIcmVmKGxvY2F0aW9uKTtcbiAgICAgIHZhciBrZXkgPSBsb2NhdGlvbi5rZXksXG4gICAgICAgICAgc3RhdGUgPSBsb2NhdGlvbi5zdGF0ZTtcblxuXG4gICAgICBpZiAoY2FuVXNlSGlzdG9yeSkge1xuICAgICAgICBnbG9iYWxIaXN0b3J5LnB1c2hTdGF0ZSh7IGtleToga2V5LCBzdGF0ZTogc3RhdGUgfSwgbnVsbCwgaHJlZik7XG5cbiAgICAgICAgaWYgKGZvcmNlUmVmcmVzaCkge1xuICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gaHJlZjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB2YXIgcHJldkluZGV4ID0gYWxsS2V5cy5pbmRleE9mKGhpc3RvcnkubG9jYXRpb24ua2V5KTtcbiAgICAgICAgICB2YXIgbmV4dEtleXMgPSBhbGxLZXlzLnNsaWNlKDAsIHByZXZJbmRleCA9PT0gLTEgPyAwIDogcHJldkluZGV4ICsgMSk7XG5cbiAgICAgICAgICBuZXh0S2V5cy5wdXNoKGxvY2F0aW9uLmtleSk7XG4gICAgICAgICAgYWxsS2V5cyA9IG5leHRLZXlzO1xuXG4gICAgICAgICAgc2V0U3RhdGUoeyBhY3Rpb246IGFjdGlvbiwgbG9jYXRpb246IGxvY2F0aW9uIH0pO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB3YXJuaW5nKHN0YXRlID09PSB1bmRlZmluZWQsICdCcm93c2VyIGhpc3RvcnkgY2Fubm90IHB1c2ggc3RhdGUgaW4gYnJvd3NlcnMgdGhhdCBkbyBub3Qgc3VwcG9ydCBIVE1MNSBoaXN0b3J5Jyk7XG5cbiAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSBocmVmO1xuICAgICAgfVxuICAgIH0pO1xuICB9O1xuXG4gIHZhciByZXBsYWNlID0gZnVuY3Rpb24gcmVwbGFjZShwYXRoLCBzdGF0ZSkge1xuICAgIHdhcm5pbmcoISgodHlwZW9mIHBhdGggPT09ICd1bmRlZmluZWQnID8gJ3VuZGVmaW5lZCcgOiBfdHlwZW9mKHBhdGgpKSA9PT0gJ29iamVjdCcgJiYgcGF0aC5zdGF0ZSAhPT0gdW5kZWZpbmVkICYmIHN0YXRlICE9PSB1bmRlZmluZWQpLCAnWW91IHNob3VsZCBhdm9pZCBwcm92aWRpbmcgYSAybmQgc3RhdGUgYXJndW1lbnQgdG8gcmVwbGFjZSB3aGVuIHRoZSAxc3QgJyArICdhcmd1bWVudCBpcyBhIGxvY2F0aW9uLWxpa2Ugb2JqZWN0IHRoYXQgYWxyZWFkeSBoYXMgc3RhdGU7IGl0IGlzIGlnbm9yZWQnKTtcblxuICAgIHZhciBhY3Rpb24gPSAnUkVQTEFDRSc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGNyZWF0ZUtleSgpLCBoaXN0b3J5LmxvY2F0aW9uKTtcblxuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG5cbiAgICAgIHZhciBocmVmID0gY3JlYXRlSHJlZihsb2NhdGlvbik7XG4gICAgICB2YXIga2V5ID0gbG9jYXRpb24ua2V5LFxuICAgICAgICAgIHN0YXRlID0gbG9jYXRpb24uc3RhdGU7XG5cblxuICAgICAgaWYgKGNhblVzZUhpc3RvcnkpIHtcbiAgICAgICAgZ2xvYmFsSGlzdG9yeS5yZXBsYWNlU3RhdGUoeyBrZXk6IGtleSwgc3RhdGU6IHN0YXRlIH0sIG51bGwsIGhyZWYpO1xuXG4gICAgICAgIGlmIChmb3JjZVJlZnJlc2gpIHtcbiAgICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVwbGFjZShocmVmKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB2YXIgcHJldkluZGV4ID0gYWxsS2V5cy5pbmRleE9mKGhpc3RvcnkubG9jYXRpb24ua2V5KTtcblxuICAgICAgICAgIGlmIChwcmV2SW5kZXggIT09IC0xKSBhbGxLZXlzW3ByZXZJbmRleF0gPSBsb2NhdGlvbi5rZXk7XG5cbiAgICAgICAgICBzZXRTdGF0ZSh7IGFjdGlvbjogYWN0aW9uLCBsb2NhdGlvbjogbG9jYXRpb24gfSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHdhcm5pbmcoc3RhdGUgPT09IHVuZGVmaW5lZCwgJ0Jyb3dzZXIgaGlzdG9yeSBjYW5ub3QgcmVwbGFjZSBzdGF0ZSBpbiBicm93c2VycyB0aGF0IGRvIG5vdCBzdXBwb3J0IEhUTUw1IGhpc3RvcnknKTtcblxuICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVwbGFjZShocmVmKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfTtcblxuICB2YXIgZ28gPSBmdW5jdGlvbiBnbyhuKSB7XG4gICAgZ2xvYmFsSGlzdG9yeS5nbyhuKTtcbiAgfTtcblxuICB2YXIgZ29CYWNrID0gZnVuY3Rpb24gZ29CYWNrKCkge1xuICAgIHJldHVybiBnbygtMSk7XG4gIH07XG5cbiAgdmFyIGdvRm9yd2FyZCA9IGZ1bmN0aW9uIGdvRm9yd2FyZCgpIHtcbiAgICByZXR1cm4gZ28oMSk7XG4gIH07XG5cbiAgdmFyIGxpc3RlbmVyQ291bnQgPSAwO1xuXG4gIHZhciBjaGVja0RPTUxpc3RlbmVycyA9IGZ1bmN0aW9uIGNoZWNrRE9NTGlzdGVuZXJzKGRlbHRhKSB7XG4gICAgbGlzdGVuZXJDb3VudCArPSBkZWx0YTtcblxuICAgIGlmIChsaXN0ZW5lckNvdW50ID09PSAxKSB7XG4gICAgICBhZGRFdmVudExpc3RlbmVyKHdpbmRvdywgUG9wU3RhdGVFdmVudCwgaGFuZGxlUG9wU3RhdGUpO1xuXG4gICAgICBpZiAobmVlZHNIYXNoQ2hhbmdlTGlzdGVuZXIpIGFkZEV2ZW50TGlzdGVuZXIod2luZG93LCBIYXNoQ2hhbmdlRXZlbnQsIGhhbmRsZUhhc2hDaGFuZ2UpO1xuICAgIH0gZWxzZSBpZiAobGlzdGVuZXJDb3VudCA9PT0gMCkge1xuICAgICAgcmVtb3ZlRXZlbnRMaXN0ZW5lcih3aW5kb3csIFBvcFN0YXRlRXZlbnQsIGhhbmRsZVBvcFN0YXRlKTtcblxuICAgICAgaWYgKG5lZWRzSGFzaENoYW5nZUxpc3RlbmVyKSByZW1vdmVFdmVudExpc3RlbmVyKHdpbmRvdywgSGFzaENoYW5nZUV2ZW50LCBoYW5kbGVIYXNoQ2hhbmdlKTtcbiAgICB9XG4gIH07XG5cbiAgdmFyIGlzQmxvY2tlZCA9IGZhbHNlO1xuXG4gIHZhciBibG9jayA9IGZ1bmN0aW9uIGJsb2NrKCkge1xuICAgIHZhciBwcm9tcHQgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IGZhbHNlO1xuXG4gICAgdmFyIHVuYmxvY2sgPSB0cmFuc2l0aW9uTWFuYWdlci5zZXRQcm9tcHQocHJvbXB0KTtcblxuICAgIGlmICghaXNCbG9ja2VkKSB7XG4gICAgICBjaGVja0RPTUxpc3RlbmVycygxKTtcbiAgICAgIGlzQmxvY2tlZCA9IHRydWU7XG4gICAgfVxuXG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmIChpc0Jsb2NrZWQpIHtcbiAgICAgICAgaXNCbG9ja2VkID0gZmFsc2U7XG4gICAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKC0xKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHVuYmxvY2soKTtcbiAgICB9O1xuICB9O1xuXG4gIHZhciBsaXN0ZW4gPSBmdW5jdGlvbiBsaXN0ZW4obGlzdGVuZXIpIHtcbiAgICB2YXIgdW5saXN0ZW4gPSB0cmFuc2l0aW9uTWFuYWdlci5hcHBlbmRMaXN0ZW5lcihsaXN0ZW5lcik7XG4gICAgY2hlY2tET01MaXN0ZW5lcnMoMSk7XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgY2hlY2tET01MaXN0ZW5lcnMoLTEpO1xuICAgICAgdW5saXN0ZW4oKTtcbiAgICB9O1xuICB9O1xuXG4gIHZhciBoaXN0b3J5ID0ge1xuICAgIGxlbmd0aDogZ2xvYmFsSGlzdG9yeS5sZW5ndGgsXG4gICAgYWN0aW9uOiAnUE9QJyxcbiAgICBsb2NhdGlvbjogaW5pdGlhbExvY2F0aW9uLFxuICAgIGNyZWF0ZUhyZWY6IGNyZWF0ZUhyZWYsXG4gICAgcHVzaDogcHVzaCxcbiAgICByZXBsYWNlOiByZXBsYWNlLFxuICAgIGdvOiBnbyxcbiAgICBnb0JhY2s6IGdvQmFjayxcbiAgICBnb0ZvcndhcmQ6IGdvRm9yd2FyZCxcbiAgICBibG9jazogYmxvY2ssXG4gICAgbGlzdGVuOiBsaXN0ZW5cbiAgfTtcblxuICByZXR1cm4gaGlzdG9yeTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNyZWF0ZUJyb3dzZXJIaXN0b3J5OyIsInZhciBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxuaW1wb3J0IHdhcm5pbmcgZnJvbSBcIndhcm5pbmdcIjtcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSBcImludmFyaWFudFwiO1xuaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tIFwicHJvcC10eXBlc1wiO1xuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBwdXR0aW5nIGhpc3Rvcnkgb24gY29udGV4dC5cbiAqL1xuXG52YXIgUm91dGVyID0gZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzKFJvdXRlciwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gUm91dGVyKCkge1xuICAgIHZhciBfdGVtcCwgX3RoaXMsIF9yZXQ7XG5cbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgUm91dGVyKTtcblxuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIHJldHVybiBfcmV0ID0gKF90ZW1wID0gKF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgX1JlYWN0JENvbXBvbmVudC5jYWxsLmFwcGx5KF9SZWFjdCRDb21wb25lbnQsIFt0aGlzXS5jb25jYXQoYXJncykpKSwgX3RoaXMpLCBfdGhpcy5zdGF0ZSA9IHtcbiAgICAgIG1hdGNoOiBfdGhpcy5jb21wdXRlTWF0Y2goX3RoaXMucHJvcHMuaGlzdG9yeS5sb2NhdGlvbi5wYXRobmFtZSlcbiAgICB9LCBfdGVtcCksIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKF90aGlzLCBfcmV0KTtcbiAgfVxuXG4gIFJvdXRlci5wcm90b3R5cGUuZ2V0Q2hpbGRDb250ZXh0ID0gZnVuY3Rpb24gZ2V0Q2hpbGRDb250ZXh0KCkge1xuICAgIHJldHVybiB7XG4gICAgICByb3V0ZXI6IF9leHRlbmRzKHt9LCB0aGlzLmNvbnRleHQucm91dGVyLCB7XG4gICAgICAgIGhpc3Rvcnk6IHRoaXMucHJvcHMuaGlzdG9yeSxcbiAgICAgICAgcm91dGU6IHtcbiAgICAgICAgICBsb2NhdGlvbjogdGhpcy5wcm9wcy5oaXN0b3J5LmxvY2F0aW9uLFxuICAgICAgICAgIG1hdGNoOiB0aGlzLnN0YXRlLm1hdGNoXG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgfTtcbiAgfTtcblxuICBSb3V0ZXIucHJvdG90eXBlLmNvbXB1dGVNYXRjaCA9IGZ1bmN0aW9uIGNvbXB1dGVNYXRjaChwYXRobmFtZSkge1xuICAgIHJldHVybiB7XG4gICAgICBwYXRoOiBcIi9cIixcbiAgICAgIHVybDogXCIvXCIsXG4gICAgICBwYXJhbXM6IHt9LFxuICAgICAgaXNFeGFjdDogcGF0aG5hbWUgPT09IFwiL1wiXG4gICAgfTtcbiAgfTtcblxuICBSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudFdpbGxNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxNb3VudCgpIHtcbiAgICB2YXIgX3RoaXMyID0gdGhpcztcblxuICAgIHZhciBfcHJvcHMgPSB0aGlzLnByb3BzLFxuICAgICAgICBjaGlsZHJlbiA9IF9wcm9wcy5jaGlsZHJlbixcbiAgICAgICAgaGlzdG9yeSA9IF9wcm9wcy5oaXN0b3J5O1xuXG5cbiAgICBpbnZhcmlhbnQoY2hpbGRyZW4gPT0gbnVsbCB8fCBSZWFjdC5DaGlsZHJlbi5jb3VudChjaGlsZHJlbikgPT09IDEsIFwiQSA8Um91dGVyPiBtYXkgaGF2ZSBvbmx5IG9uZSBjaGlsZCBlbGVtZW50XCIpO1xuXG4gICAgLy8gRG8gdGhpcyBoZXJlIHNvIHdlIGNhbiBzZXRTdGF0ZSB3aGVuIGEgPFJlZGlyZWN0PiBjaGFuZ2VzIHRoZVxuICAgIC8vIGxvY2F0aW9uIGluIGNvbXBvbmVudFdpbGxNb3VudC4gVGhpcyBoYXBwZW5zIGUuZy4gd2hlbiBkb2luZ1xuICAgIC8vIHNlcnZlciByZW5kZXJpbmcgdXNpbmcgYSA8U3RhdGljUm91dGVyPi5cbiAgICB0aGlzLnVubGlzdGVuID0gaGlzdG9yeS5saXN0ZW4oZnVuY3Rpb24gKCkge1xuICAgICAgX3RoaXMyLnNldFN0YXRlKHtcbiAgICAgICAgbWF0Y2g6IF90aGlzMi5jb21wdXRlTWF0Y2goaGlzdG9yeS5sb2NhdGlvbi5wYXRobmFtZSlcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9O1xuXG4gIFJvdXRlci5wcm90b3R5cGUuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMobmV4dFByb3BzKSB7XG4gICAgd2FybmluZyh0aGlzLnByb3BzLmhpc3RvcnkgPT09IG5leHRQcm9wcy5oaXN0b3J5LCBcIllvdSBjYW5ub3QgY2hhbmdlIDxSb3V0ZXIgaGlzdG9yeT5cIik7XG4gIH07XG5cbiAgUm91dGVyLnByb3RvdHlwZS5jb21wb25lbnRXaWxsVW5tb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgIHRoaXMudW5saXN0ZW4oKTtcbiAgfTtcblxuICBSb3V0ZXIucHJvdG90eXBlLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICB2YXIgY2hpbGRyZW4gPSB0aGlzLnByb3BzLmNoaWxkcmVuO1xuXG4gICAgcmV0dXJuIGNoaWxkcmVuID8gUmVhY3QuQ2hpbGRyZW4ub25seShjaGlsZHJlbikgOiBudWxsO1xuICB9O1xuXG4gIHJldHVybiBSb3V0ZXI7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cblJvdXRlci5wcm9wVHlwZXMgPSB7XG4gIGhpc3Rvcnk6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcbiAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlXG59O1xuUm91dGVyLmNvbnRleHRUeXBlcyA9IHtcbiAgcm91dGVyOiBQcm9wVHlwZXMub2JqZWN0XG59O1xuUm91dGVyLmNoaWxkQ29udGV4dFR5cGVzID0ge1xuICByb3V0ZXI6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZFxufTtcblxuXG5leHBvcnQgZGVmYXVsdCBSb3V0ZXI7IiwidmFyIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTtcblxuaW1wb3J0IHdhcm5pbmcgZnJvbSAnd2FybmluZyc7XG5pbXBvcnQgaW52YXJpYW50IGZyb20gJ2ludmFyaWFudCc7XG5pbXBvcnQgeyBjcmVhdGVMb2NhdGlvbiwgbG9jYXRpb25zQXJlRXF1YWwgfSBmcm9tICcuL0xvY2F0aW9uVXRpbHMnO1xuaW1wb3J0IHsgYWRkTGVhZGluZ1NsYXNoLCBzdHJpcExlYWRpbmdTbGFzaCwgc3RyaXBUcmFpbGluZ1NsYXNoLCBoYXNCYXNlbmFtZSwgc3RyaXBCYXNlbmFtZSwgY3JlYXRlUGF0aCB9IGZyb20gJy4vUGF0aFV0aWxzJztcbmltcG9ydCBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlciBmcm9tICcuL2NyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyJztcbmltcG9ydCB7IGNhblVzZURPTSwgYWRkRXZlbnRMaXN0ZW5lciwgcmVtb3ZlRXZlbnRMaXN0ZW5lciwgZ2V0Q29uZmlybWF0aW9uLCBzdXBwb3J0c0dvV2l0aG91dFJlbG9hZFVzaW5nSGFzaCB9IGZyb20gJy4vRE9NVXRpbHMnO1xuXG52YXIgSGFzaENoYW5nZUV2ZW50ID0gJ2hhc2hjaGFuZ2UnO1xuXG52YXIgSGFzaFBhdGhDb2RlcnMgPSB7XG4gIGhhc2hiYW5nOiB7XG4gICAgZW5jb2RlUGF0aDogZnVuY3Rpb24gZW5jb2RlUGF0aChwYXRoKSB7XG4gICAgICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09ICchJyA/IHBhdGggOiAnIS8nICsgc3RyaXBMZWFkaW5nU2xhc2gocGF0aCk7XG4gICAgfSxcbiAgICBkZWNvZGVQYXRoOiBmdW5jdGlvbiBkZWNvZGVQYXRoKHBhdGgpIHtcbiAgICAgIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gJyEnID8gcGF0aC5zdWJzdHIoMSkgOiBwYXRoO1xuICAgIH1cbiAgfSxcbiAgbm9zbGFzaDoge1xuICAgIGVuY29kZVBhdGg6IHN0cmlwTGVhZGluZ1NsYXNoLFxuICAgIGRlY29kZVBhdGg6IGFkZExlYWRpbmdTbGFzaFxuICB9LFxuICBzbGFzaDoge1xuICAgIGVuY29kZVBhdGg6IGFkZExlYWRpbmdTbGFzaCxcbiAgICBkZWNvZGVQYXRoOiBhZGRMZWFkaW5nU2xhc2hcbiAgfVxufTtcblxudmFyIGdldEhhc2hQYXRoID0gZnVuY3Rpb24gZ2V0SGFzaFBhdGgoKSB7XG4gIC8vIFdlIGNhbid0IHVzZSB3aW5kb3cubG9jYXRpb24uaGFzaCBoZXJlIGJlY2F1c2UgaXQncyBub3RcbiAgLy8gY29uc2lzdGVudCBhY3Jvc3MgYnJvd3NlcnMgLSBGaXJlZm94IHdpbGwgcHJlLWRlY29kZSBpdCFcbiAgdmFyIGhyZWYgPSB3aW5kb3cubG9jYXRpb24uaHJlZjtcbiAgdmFyIGhhc2hJbmRleCA9IGhyZWYuaW5kZXhPZignIycpO1xuICByZXR1cm4gaGFzaEluZGV4ID09PSAtMSA/ICcnIDogaHJlZi5zdWJzdHJpbmcoaGFzaEluZGV4ICsgMSk7XG59O1xuXG52YXIgcHVzaEhhc2hQYXRoID0gZnVuY3Rpb24gcHVzaEhhc2hQYXRoKHBhdGgpIHtcbiAgcmV0dXJuIHdpbmRvdy5sb2NhdGlvbi5oYXNoID0gcGF0aDtcbn07XG5cbnZhciByZXBsYWNlSGFzaFBhdGggPSBmdW5jdGlvbiByZXBsYWNlSGFzaFBhdGgocGF0aCkge1xuICB2YXIgaGFzaEluZGV4ID0gd2luZG93LmxvY2F0aW9uLmhyZWYuaW5kZXhPZignIycpO1xuXG4gIHdpbmRvdy5sb2NhdGlvbi5yZXBsYWNlKHdpbmRvdy5sb2NhdGlvbi5ocmVmLnNsaWNlKDAsIGhhc2hJbmRleCA+PSAwID8gaGFzaEluZGV4IDogMCkgKyAnIycgKyBwYXRoKTtcbn07XG5cbnZhciBjcmVhdGVIYXNoSGlzdG9yeSA9IGZ1bmN0aW9uIGNyZWF0ZUhhc2hIaXN0b3J5KCkge1xuICB2YXIgcHJvcHMgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IHt9O1xuXG4gIGludmFyaWFudChjYW5Vc2VET00sICdIYXNoIGhpc3RvcnkgbmVlZHMgYSBET00nKTtcblxuICB2YXIgZ2xvYmFsSGlzdG9yeSA9IHdpbmRvdy5oaXN0b3J5O1xuICB2YXIgY2FuR29XaXRob3V0UmVsb2FkID0gc3VwcG9ydHNHb1dpdGhvdXRSZWxvYWRVc2luZ0hhc2goKTtcblxuICB2YXIgX3Byb3BzJGdldFVzZXJDb25maXJtID0gcHJvcHMuZ2V0VXNlckNvbmZpcm1hdGlvbixcbiAgICAgIGdldFVzZXJDb25maXJtYXRpb24gPSBfcHJvcHMkZ2V0VXNlckNvbmZpcm0gPT09IHVuZGVmaW5lZCA/IGdldENvbmZpcm1hdGlvbiA6IF9wcm9wcyRnZXRVc2VyQ29uZmlybSxcbiAgICAgIF9wcm9wcyRoYXNoVHlwZSA9IHByb3BzLmhhc2hUeXBlLFxuICAgICAgaGFzaFR5cGUgPSBfcHJvcHMkaGFzaFR5cGUgPT09IHVuZGVmaW5lZCA/ICdzbGFzaCcgOiBfcHJvcHMkaGFzaFR5cGU7XG5cbiAgdmFyIGJhc2VuYW1lID0gcHJvcHMuYmFzZW5hbWUgPyBzdHJpcFRyYWlsaW5nU2xhc2goYWRkTGVhZGluZ1NsYXNoKHByb3BzLmJhc2VuYW1lKSkgOiAnJztcblxuICB2YXIgX0hhc2hQYXRoQ29kZXJzJGhhc2hUID0gSGFzaFBhdGhDb2RlcnNbaGFzaFR5cGVdLFxuICAgICAgZW5jb2RlUGF0aCA9IF9IYXNoUGF0aENvZGVycyRoYXNoVC5lbmNvZGVQYXRoLFxuICAgICAgZGVjb2RlUGF0aCA9IF9IYXNoUGF0aENvZGVycyRoYXNoVC5kZWNvZGVQYXRoO1xuXG5cbiAgdmFyIGdldERPTUxvY2F0aW9uID0gZnVuY3Rpb24gZ2V0RE9NTG9jYXRpb24oKSB7XG4gICAgdmFyIHBhdGggPSBkZWNvZGVQYXRoKGdldEhhc2hQYXRoKCkpO1xuXG4gICAgd2FybmluZyghYmFzZW5hbWUgfHwgaGFzQmFzZW5hbWUocGF0aCwgYmFzZW5hbWUpLCAnWW91IGFyZSBhdHRlbXB0aW5nIHRvIHVzZSBhIGJhc2VuYW1lIG9uIGEgcGFnZSB3aG9zZSBVUkwgcGF0aCBkb2VzIG5vdCBiZWdpbiAnICsgJ3dpdGggdGhlIGJhc2VuYW1lLiBFeHBlY3RlZCBwYXRoIFwiJyArIHBhdGggKyAnXCIgdG8gYmVnaW4gd2l0aCBcIicgKyBiYXNlbmFtZSArICdcIi4nKTtcblxuICAgIGlmIChiYXNlbmFtZSkgcGF0aCA9IHN0cmlwQmFzZW5hbWUocGF0aCwgYmFzZW5hbWUpO1xuXG4gICAgcmV0dXJuIGNyZWF0ZUxvY2F0aW9uKHBhdGgpO1xuICB9O1xuXG4gIHZhciB0cmFuc2l0aW9uTWFuYWdlciA9IGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyKCk7XG5cbiAgdmFyIHNldFN0YXRlID0gZnVuY3Rpb24gc2V0U3RhdGUobmV4dFN0YXRlKSB7XG4gICAgX2V4dGVuZHMoaGlzdG9yeSwgbmV4dFN0YXRlKTtcblxuICAgIGhpc3RvcnkubGVuZ3RoID0gZ2xvYmFsSGlzdG9yeS5sZW5ndGg7XG5cbiAgICB0cmFuc2l0aW9uTWFuYWdlci5ub3RpZnlMaXN0ZW5lcnMoaGlzdG9yeS5sb2NhdGlvbiwgaGlzdG9yeS5hY3Rpb24pO1xuICB9O1xuXG4gIHZhciBmb3JjZU5leHRQb3AgPSBmYWxzZTtcbiAgdmFyIGlnbm9yZVBhdGggPSBudWxsO1xuXG4gIHZhciBoYW5kbGVIYXNoQ2hhbmdlID0gZnVuY3Rpb24gaGFuZGxlSGFzaENoYW5nZSgpIHtcbiAgICB2YXIgcGF0aCA9IGdldEhhc2hQYXRoKCk7XG4gICAgdmFyIGVuY29kZWRQYXRoID0gZW5jb2RlUGF0aChwYXRoKTtcblxuICAgIGlmIChwYXRoICE9PSBlbmNvZGVkUGF0aCkge1xuICAgICAgLy8gRW5zdXJlIHdlIGFsd2F5cyBoYXZlIGEgcHJvcGVybHktZW5jb2RlZCBoYXNoLlxuICAgICAgcmVwbGFjZUhhc2hQYXRoKGVuY29kZWRQYXRoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGxvY2F0aW9uID0gZ2V0RE9NTG9jYXRpb24oKTtcbiAgICAgIHZhciBwcmV2TG9jYXRpb24gPSBoaXN0b3J5LmxvY2F0aW9uO1xuXG4gICAgICBpZiAoIWZvcmNlTmV4dFBvcCAmJiBsb2NhdGlvbnNBcmVFcXVhbChwcmV2TG9jYXRpb24sIGxvY2F0aW9uKSkgcmV0dXJuOyAvLyBBIGhhc2hjaGFuZ2UgZG9lc24ndCBhbHdheXMgPT0gbG9jYXRpb24gY2hhbmdlLlxuXG4gICAgICBpZiAoaWdub3JlUGF0aCA9PT0gY3JlYXRlUGF0aChsb2NhdGlvbikpIHJldHVybjsgLy8gSWdub3JlIHRoaXMgY2hhbmdlOyB3ZSBhbHJlYWR5IHNldFN0YXRlIGluIHB1c2gvcmVwbGFjZS5cblxuICAgICAgaWdub3JlUGF0aCA9IG51bGw7XG5cbiAgICAgIGhhbmRsZVBvcChsb2NhdGlvbik7XG4gICAgfVxuICB9O1xuXG4gIHZhciBoYW5kbGVQb3AgPSBmdW5jdGlvbiBoYW5kbGVQb3AobG9jYXRpb24pIHtcbiAgICBpZiAoZm9yY2VOZXh0UG9wKSB7XG4gICAgICBmb3JjZU5leHRQb3AgPSBmYWxzZTtcbiAgICAgIHNldFN0YXRlKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBhY3Rpb24gPSAnUE9QJztcblxuICAgICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgICAgaWYgKG9rKSB7XG4gICAgICAgICAgc2V0U3RhdGUoeyBhY3Rpb246IGFjdGlvbiwgbG9jYXRpb246IGxvY2F0aW9uIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldmVydFBvcChsb2NhdGlvbik7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfTtcblxuICB2YXIgcmV2ZXJ0UG9wID0gZnVuY3Rpb24gcmV2ZXJ0UG9wKGZyb21Mb2NhdGlvbikge1xuICAgIHZhciB0b0xvY2F0aW9uID0gaGlzdG9yeS5sb2NhdGlvbjtcblxuICAgIC8vIFRPRE86IFdlIGNvdWxkIHByb2JhYmx5IG1ha2UgdGhpcyBtb3JlIHJlbGlhYmxlIGJ5XG4gICAgLy8ga2VlcGluZyBhIGxpc3Qgb2YgcGF0aHMgd2UndmUgc2VlbiBpbiBzZXNzaW9uU3RvcmFnZS5cbiAgICAvLyBJbnN0ZWFkLCB3ZSBqdXN0IGRlZmF1bHQgdG8gMCBmb3IgcGF0aHMgd2UgZG9uJ3Qga25vdy5cblxuICAgIHZhciB0b0luZGV4ID0gYWxsUGF0aHMubGFzdEluZGV4T2YoY3JlYXRlUGF0aCh0b0xvY2F0aW9uKSk7XG5cbiAgICBpZiAodG9JbmRleCA9PT0gLTEpIHRvSW5kZXggPSAwO1xuXG4gICAgdmFyIGZyb21JbmRleCA9IGFsbFBhdGhzLmxhc3RJbmRleE9mKGNyZWF0ZVBhdGgoZnJvbUxvY2F0aW9uKSk7XG5cbiAgICBpZiAoZnJvbUluZGV4ID09PSAtMSkgZnJvbUluZGV4ID0gMDtcblxuICAgIHZhciBkZWx0YSA9IHRvSW5kZXggLSBmcm9tSW5kZXg7XG5cbiAgICBpZiAoZGVsdGEpIHtcbiAgICAgIGZvcmNlTmV4dFBvcCA9IHRydWU7XG4gICAgICBnbyhkZWx0YSk7XG4gICAgfVxuICB9O1xuXG4gIC8vIEVuc3VyZSB0aGUgaGFzaCBpcyBlbmNvZGVkIHByb3Blcmx5IGJlZm9yZSBkb2luZyBhbnl0aGluZyBlbHNlLlxuICB2YXIgcGF0aCA9IGdldEhhc2hQYXRoKCk7XG4gIHZhciBlbmNvZGVkUGF0aCA9IGVuY29kZVBhdGgocGF0aCk7XG5cbiAgaWYgKHBhdGggIT09IGVuY29kZWRQYXRoKSByZXBsYWNlSGFzaFBhdGgoZW5jb2RlZFBhdGgpO1xuXG4gIHZhciBpbml0aWFsTG9jYXRpb24gPSBnZXRET01Mb2NhdGlvbigpO1xuICB2YXIgYWxsUGF0aHMgPSBbY3JlYXRlUGF0aChpbml0aWFsTG9jYXRpb24pXTtcblxuICAvLyBQdWJsaWMgaW50ZXJmYWNlXG5cbiAgdmFyIGNyZWF0ZUhyZWYgPSBmdW5jdGlvbiBjcmVhdGVIcmVmKGxvY2F0aW9uKSB7XG4gICAgcmV0dXJuICcjJyArIGVuY29kZVBhdGgoYmFzZW5hbWUgKyBjcmVhdGVQYXRoKGxvY2F0aW9uKSk7XG4gIH07XG5cbiAgdmFyIHB1c2ggPSBmdW5jdGlvbiBwdXNoKHBhdGgsIHN0YXRlKSB7XG4gICAgd2FybmluZyhzdGF0ZSA9PT0gdW5kZWZpbmVkLCAnSGFzaCBoaXN0b3J5IGNhbm5vdCBwdXNoIHN0YXRlOyBpdCBpcyBpZ25vcmVkJyk7XG5cbiAgICB2YXIgYWN0aW9uID0gJ1BVU0gnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBoaXN0b3J5LmxvY2F0aW9uKTtcblxuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG5cbiAgICAgIHZhciBwYXRoID0gY3JlYXRlUGF0aChsb2NhdGlvbik7XG4gICAgICB2YXIgZW5jb2RlZFBhdGggPSBlbmNvZGVQYXRoKGJhc2VuYW1lICsgcGF0aCk7XG4gICAgICB2YXIgaGFzaENoYW5nZWQgPSBnZXRIYXNoUGF0aCgpICE9PSBlbmNvZGVkUGF0aDtcblxuICAgICAgaWYgKGhhc2hDaGFuZ2VkKSB7XG4gICAgICAgIC8vIFdlIGNhbm5vdCB0ZWxsIGlmIGEgaGFzaGNoYW5nZSB3YXMgY2F1c2VkIGJ5IGEgUFVTSCwgc28gd2UnZFxuICAgICAgICAvLyByYXRoZXIgc2V0U3RhdGUgaGVyZSBhbmQgaWdub3JlIHRoZSBoYXNoY2hhbmdlLiBUaGUgY2F2ZWF0IGhlcmVcbiAgICAgICAgLy8gaXMgdGhhdCBvdGhlciBoYXNoIGhpc3RvcmllcyBpbiB0aGUgcGFnZSB3aWxsIGNvbnNpZGVyIGl0IGEgUE9QLlxuICAgICAgICBpZ25vcmVQYXRoID0gcGF0aDtcbiAgICAgICAgcHVzaEhhc2hQYXRoKGVuY29kZWRQYXRoKTtcblxuICAgICAgICB2YXIgcHJldkluZGV4ID0gYWxsUGF0aHMubGFzdEluZGV4T2YoY3JlYXRlUGF0aChoaXN0b3J5LmxvY2F0aW9uKSk7XG4gICAgICAgIHZhciBuZXh0UGF0aHMgPSBhbGxQYXRocy5zbGljZSgwLCBwcmV2SW5kZXggPT09IC0xID8gMCA6IHByZXZJbmRleCArIDEpO1xuXG4gICAgICAgIG5leHRQYXRocy5wdXNoKHBhdGgpO1xuICAgICAgICBhbGxQYXRocyA9IG5leHRQYXRocztcblxuICAgICAgICBzZXRTdGF0ZSh7IGFjdGlvbjogYWN0aW9uLCBsb2NhdGlvbjogbG9jYXRpb24gfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB3YXJuaW5nKGZhbHNlLCAnSGFzaCBoaXN0b3J5IGNhbm5vdCBQVVNIIHRoZSBzYW1lIHBhdGg7IGEgbmV3IGVudHJ5IHdpbGwgbm90IGJlIGFkZGVkIHRvIHRoZSBoaXN0b3J5IHN0YWNrJyk7XG5cbiAgICAgICAgc2V0U3RhdGUoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfTtcblxuICB2YXIgcmVwbGFjZSA9IGZ1bmN0aW9uIHJlcGxhY2UocGF0aCwgc3RhdGUpIHtcbiAgICB3YXJuaW5nKHN0YXRlID09PSB1bmRlZmluZWQsICdIYXNoIGhpc3RvcnkgY2Fubm90IHJlcGxhY2Ugc3RhdGU7IGl0IGlzIGlnbm9yZWQnKTtcblxuICAgIHZhciBhY3Rpb24gPSAnUkVQTEFDRSc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIGhpc3RvcnkubG9jYXRpb24pO1xuXG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcblxuICAgICAgdmFyIHBhdGggPSBjcmVhdGVQYXRoKGxvY2F0aW9uKTtcbiAgICAgIHZhciBlbmNvZGVkUGF0aCA9IGVuY29kZVBhdGgoYmFzZW5hbWUgKyBwYXRoKTtcbiAgICAgIHZhciBoYXNoQ2hhbmdlZCA9IGdldEhhc2hQYXRoKCkgIT09IGVuY29kZWRQYXRoO1xuXG4gICAgICBpZiAoaGFzaENoYW5nZWQpIHtcbiAgICAgICAgLy8gV2UgY2Fubm90IHRlbGwgaWYgYSBoYXNoY2hhbmdlIHdhcyBjYXVzZWQgYnkgYSBSRVBMQUNFLCBzbyB3ZSdkXG4gICAgICAgIC8vIHJhdGhlciBzZXRTdGF0ZSBoZXJlIGFuZCBpZ25vcmUgdGhlIGhhc2hjaGFuZ2UuIFRoZSBjYXZlYXQgaGVyZVxuICAgICAgICAvLyBpcyB0aGF0IG90aGVyIGhhc2ggaGlzdG9yaWVzIGluIHRoZSBwYWdlIHdpbGwgY29uc2lkZXIgaXQgYSBQT1AuXG4gICAgICAgIGlnbm9yZVBhdGggPSBwYXRoO1xuICAgICAgICByZXBsYWNlSGFzaFBhdGgoZW5jb2RlZFBhdGgpO1xuICAgICAgfVxuXG4gICAgICB2YXIgcHJldkluZGV4ID0gYWxsUGF0aHMuaW5kZXhPZihjcmVhdGVQYXRoKGhpc3RvcnkubG9jYXRpb24pKTtcblxuICAgICAgaWYgKHByZXZJbmRleCAhPT0gLTEpIGFsbFBhdGhzW3ByZXZJbmRleF0gPSBwYXRoO1xuXG4gICAgICBzZXRTdGF0ZSh7IGFjdGlvbjogYWN0aW9uLCBsb2NhdGlvbjogbG9jYXRpb24gfSk7XG4gICAgfSk7XG4gIH07XG5cbiAgdmFyIGdvID0gZnVuY3Rpb24gZ28obikge1xuICAgIHdhcm5pbmcoY2FuR29XaXRob3V0UmVsb2FkLCAnSGFzaCBoaXN0b3J5IGdvKG4pIGNhdXNlcyBhIGZ1bGwgcGFnZSByZWxvYWQgaW4gdGhpcyBicm93c2VyJyk7XG5cbiAgICBnbG9iYWxIaXN0b3J5LmdvKG4pO1xuICB9O1xuXG4gIHZhciBnb0JhY2sgPSBmdW5jdGlvbiBnb0JhY2soKSB7XG4gICAgcmV0dXJuIGdvKC0xKTtcbiAgfTtcblxuICB2YXIgZ29Gb3J3YXJkID0gZnVuY3Rpb24gZ29Gb3J3YXJkKCkge1xuICAgIHJldHVybiBnbygxKTtcbiAgfTtcblxuICB2YXIgbGlzdGVuZXJDb3VudCA9IDA7XG5cbiAgdmFyIGNoZWNrRE9NTGlzdGVuZXJzID0gZnVuY3Rpb24gY2hlY2tET01MaXN0ZW5lcnMoZGVsdGEpIHtcbiAgICBsaXN0ZW5lckNvdW50ICs9IGRlbHRhO1xuXG4gICAgaWYgKGxpc3RlbmVyQ291bnQgPT09IDEpIHtcbiAgICAgIGFkZEV2ZW50TGlzdGVuZXIod2luZG93LCBIYXNoQ2hhbmdlRXZlbnQsIGhhbmRsZUhhc2hDaGFuZ2UpO1xuICAgIH0gZWxzZSBpZiAobGlzdGVuZXJDb3VudCA9PT0gMCkge1xuICAgICAgcmVtb3ZlRXZlbnRMaXN0ZW5lcih3aW5kb3csIEhhc2hDaGFuZ2VFdmVudCwgaGFuZGxlSGFzaENoYW5nZSk7XG4gICAgfVxuICB9O1xuXG4gIHZhciBpc0Jsb2NrZWQgPSBmYWxzZTtcblxuICB2YXIgYmxvY2sgPSBmdW5jdGlvbiBibG9jaygpIHtcbiAgICB2YXIgcHJvbXB0ID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiBmYWxzZTtcblxuICAgIHZhciB1bmJsb2NrID0gdHJhbnNpdGlvbk1hbmFnZXIuc2V0UHJvbXB0KHByb21wdCk7XG5cbiAgICBpZiAoIWlzQmxvY2tlZCkge1xuICAgICAgY2hlY2tET01MaXN0ZW5lcnMoMSk7XG4gICAgICBpc0Jsb2NrZWQgPSB0cnVlO1xuICAgIH1cblxuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAoaXNCbG9ja2VkKSB7XG4gICAgICAgIGlzQmxvY2tlZCA9IGZhbHNlO1xuICAgICAgICBjaGVja0RPTUxpc3RlbmVycygtMSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB1bmJsb2NrKCk7XG4gICAgfTtcbiAgfTtcblxuICB2YXIgbGlzdGVuID0gZnVuY3Rpb24gbGlzdGVuKGxpc3RlbmVyKSB7XG4gICAgdmFyIHVubGlzdGVuID0gdHJhbnNpdGlvbk1hbmFnZXIuYXBwZW5kTGlzdGVuZXIobGlzdGVuZXIpO1xuICAgIGNoZWNrRE9NTGlzdGVuZXJzKDEpO1xuXG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKC0xKTtcbiAgICAgIHVubGlzdGVuKCk7XG4gICAgfTtcbiAgfTtcblxuICB2YXIgaGlzdG9yeSA9IHtcbiAgICBsZW5ndGg6IGdsb2JhbEhpc3RvcnkubGVuZ3RoLFxuICAgIGFjdGlvbjogJ1BPUCcsXG4gICAgbG9jYXRpb246IGluaXRpYWxMb2NhdGlvbixcbiAgICBjcmVhdGVIcmVmOiBjcmVhdGVIcmVmLFxuICAgIHB1c2g6IHB1c2gsXG4gICAgcmVwbGFjZTogcmVwbGFjZSxcbiAgICBnbzogZ28sXG4gICAgZ29CYWNrOiBnb0JhY2ssXG4gICAgZ29Gb3J3YXJkOiBnb0ZvcndhcmQsXG4gICAgYmxvY2s6IGJsb2NrLFxuICAgIGxpc3RlbjogbGlzdGVuXG4gIH07XG5cbiAgcmV0dXJuIGhpc3Rvcnk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBjcmVhdGVIYXNoSGlzdG9yeTsiLCJ2YXIgX3R5cGVvZiA9IHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID09PSBcInN5bWJvbFwiID8gZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gdHlwZW9mIG9iajsgfSA6IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7IH07XG5cbnZhciBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07XG5cbmltcG9ydCB3YXJuaW5nIGZyb20gJ3dhcm5pbmcnO1xuaW1wb3J0IHsgY3JlYXRlUGF0aCB9IGZyb20gJy4vUGF0aFV0aWxzJztcbmltcG9ydCB7IGNyZWF0ZUxvY2F0aW9uIH0gZnJvbSAnLi9Mb2NhdGlvblV0aWxzJztcbmltcG9ydCBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlciBmcm9tICcuL2NyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyJztcblxudmFyIGNsYW1wID0gZnVuY3Rpb24gY2xhbXAobiwgbG93ZXJCb3VuZCwgdXBwZXJCb3VuZCkge1xuICByZXR1cm4gTWF0aC5taW4oTWF0aC5tYXgobiwgbG93ZXJCb3VuZCksIHVwcGVyQm91bmQpO1xufTtcblxuLyoqXG4gKiBDcmVhdGVzIGEgaGlzdG9yeSBvYmplY3QgdGhhdCBzdG9yZXMgbG9jYXRpb25zIGluIG1lbW9yeS5cbiAqL1xudmFyIGNyZWF0ZU1lbW9yeUhpc3RvcnkgPSBmdW5jdGlvbiBjcmVhdGVNZW1vcnlIaXN0b3J5KCkge1xuICB2YXIgcHJvcHMgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IHt9O1xuICB2YXIgZ2V0VXNlckNvbmZpcm1hdGlvbiA9IHByb3BzLmdldFVzZXJDb25maXJtYXRpb24sXG4gICAgICBfcHJvcHMkaW5pdGlhbEVudHJpZXMgPSBwcm9wcy5pbml0aWFsRW50cmllcyxcbiAgICAgIGluaXRpYWxFbnRyaWVzID0gX3Byb3BzJGluaXRpYWxFbnRyaWVzID09PSB1bmRlZmluZWQgPyBbJy8nXSA6IF9wcm9wcyRpbml0aWFsRW50cmllcyxcbiAgICAgIF9wcm9wcyRpbml0aWFsSW5kZXggPSBwcm9wcy5pbml0aWFsSW5kZXgsXG4gICAgICBpbml0aWFsSW5kZXggPSBfcHJvcHMkaW5pdGlhbEluZGV4ID09PSB1bmRlZmluZWQgPyAwIDogX3Byb3BzJGluaXRpYWxJbmRleCxcbiAgICAgIF9wcm9wcyRrZXlMZW5ndGggPSBwcm9wcy5rZXlMZW5ndGgsXG4gICAgICBrZXlMZW5ndGggPSBfcHJvcHMka2V5TGVuZ3RoID09PSB1bmRlZmluZWQgPyA2IDogX3Byb3BzJGtleUxlbmd0aDtcblxuXG4gIHZhciB0cmFuc2l0aW9uTWFuYWdlciA9IGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyKCk7XG5cbiAgdmFyIHNldFN0YXRlID0gZnVuY3Rpb24gc2V0U3RhdGUobmV4dFN0YXRlKSB7XG4gICAgX2V4dGVuZHMoaGlzdG9yeSwgbmV4dFN0YXRlKTtcblxuICAgIGhpc3RvcnkubGVuZ3RoID0gaGlzdG9yeS5lbnRyaWVzLmxlbmd0aDtcblxuICAgIHRyYW5zaXRpb25NYW5hZ2VyLm5vdGlmeUxpc3RlbmVycyhoaXN0b3J5LmxvY2F0aW9uLCBoaXN0b3J5LmFjdGlvbik7XG4gIH07XG5cbiAgdmFyIGNyZWF0ZUtleSA9IGZ1bmN0aW9uIGNyZWF0ZUtleSgpIHtcbiAgICByZXR1cm4gTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyKDIsIGtleUxlbmd0aCk7XG4gIH07XG5cbiAgdmFyIGluZGV4ID0gY2xhbXAoaW5pdGlhbEluZGV4LCAwLCBpbml0aWFsRW50cmllcy5sZW5ndGggLSAxKTtcbiAgdmFyIGVudHJpZXMgPSBpbml0aWFsRW50cmllcy5tYXAoZnVuY3Rpb24gKGVudHJ5KSB7XG4gICAgcmV0dXJuIHR5cGVvZiBlbnRyeSA9PT0gJ3N0cmluZycgPyBjcmVhdGVMb2NhdGlvbihlbnRyeSwgdW5kZWZpbmVkLCBjcmVhdGVLZXkoKSkgOiBjcmVhdGVMb2NhdGlvbihlbnRyeSwgdW5kZWZpbmVkLCBlbnRyeS5rZXkgfHwgY3JlYXRlS2V5KCkpO1xuICB9KTtcblxuICAvLyBQdWJsaWMgaW50ZXJmYWNlXG5cbiAgdmFyIGNyZWF0ZUhyZWYgPSBjcmVhdGVQYXRoO1xuXG4gIHZhciBwdXNoID0gZnVuY3Rpb24gcHVzaChwYXRoLCBzdGF0ZSkge1xuICAgIHdhcm5pbmcoISgodHlwZW9mIHBhdGggPT09ICd1bmRlZmluZWQnID8gJ3VuZGVmaW5lZCcgOiBfdHlwZW9mKHBhdGgpKSA9PT0gJ29iamVjdCcgJiYgcGF0aC5zdGF0ZSAhPT0gdW5kZWZpbmVkICYmIHN0YXRlICE9PSB1bmRlZmluZWQpLCAnWW91IHNob3VsZCBhdm9pZCBwcm92aWRpbmcgYSAybmQgc3RhdGUgYXJndW1lbnQgdG8gcHVzaCB3aGVuIHRoZSAxc3QgJyArICdhcmd1bWVudCBpcyBhIGxvY2F0aW9uLWxpa2Ugb2JqZWN0IHRoYXQgYWxyZWFkeSBoYXMgc3RhdGU7IGl0IGlzIGlnbm9yZWQnKTtcblxuICAgIHZhciBhY3Rpb24gPSAnUFVTSCc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGNyZWF0ZUtleSgpLCBoaXN0b3J5LmxvY2F0aW9uKTtcblxuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG5cbiAgICAgIHZhciBwcmV2SW5kZXggPSBoaXN0b3J5LmluZGV4O1xuICAgICAgdmFyIG5leHRJbmRleCA9IHByZXZJbmRleCArIDE7XG5cbiAgICAgIHZhciBuZXh0RW50cmllcyA9IGhpc3RvcnkuZW50cmllcy5zbGljZSgwKTtcbiAgICAgIGlmIChuZXh0RW50cmllcy5sZW5ndGggPiBuZXh0SW5kZXgpIHtcbiAgICAgICAgbmV4dEVudHJpZXMuc3BsaWNlKG5leHRJbmRleCwgbmV4dEVudHJpZXMubGVuZ3RoIC0gbmV4dEluZGV4LCBsb2NhdGlvbik7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBuZXh0RW50cmllcy5wdXNoKGxvY2F0aW9uKTtcbiAgICAgIH1cblxuICAgICAgc2V0U3RhdGUoe1xuICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uLFxuICAgICAgICBpbmRleDogbmV4dEluZGV4LFxuICAgICAgICBlbnRyaWVzOiBuZXh0RW50cmllc1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH07XG5cbiAgdmFyIHJlcGxhY2UgPSBmdW5jdGlvbiByZXBsYWNlKHBhdGgsIHN0YXRlKSB7XG4gICAgd2FybmluZyghKCh0eXBlb2YgcGF0aCA9PT0gJ3VuZGVmaW5lZCcgPyAndW5kZWZpbmVkJyA6IF90eXBlb2YocGF0aCkpID09PSAnb2JqZWN0JyAmJiBwYXRoLnN0YXRlICE9PSB1bmRlZmluZWQgJiYgc3RhdGUgIT09IHVuZGVmaW5lZCksICdZb3Ugc2hvdWxkIGF2b2lkIHByb3ZpZGluZyBhIDJuZCBzdGF0ZSBhcmd1bWVudCB0byByZXBsYWNlIHdoZW4gdGhlIDFzdCAnICsgJ2FyZ3VtZW50IGlzIGEgbG9jYXRpb24tbGlrZSBvYmplY3QgdGhhdCBhbHJlYWR5IGhhcyBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpO1xuXG4gICAgdmFyIGFjdGlvbiA9ICdSRVBMQUNFJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwgY3JlYXRlS2V5KCksIGhpc3RvcnkubG9jYXRpb24pO1xuXG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcblxuICAgICAgaGlzdG9yeS5lbnRyaWVzW2hpc3RvcnkuaW5kZXhdID0gbG9jYXRpb247XG5cbiAgICAgIHNldFN0YXRlKHsgYWN0aW9uOiBhY3Rpb24sIGxvY2F0aW9uOiBsb2NhdGlvbiB9KTtcbiAgICB9KTtcbiAgfTtcblxuICB2YXIgZ28gPSBmdW5jdGlvbiBnbyhuKSB7XG4gICAgdmFyIG5leHRJbmRleCA9IGNsYW1wKGhpc3RvcnkuaW5kZXggKyBuLCAwLCBoaXN0b3J5LmVudHJpZXMubGVuZ3RoIC0gMSk7XG5cbiAgICB2YXIgYWN0aW9uID0gJ1BPUCc7XG4gICAgdmFyIGxvY2F0aW9uID0gaGlzdG9yeS5lbnRyaWVzW25leHRJbmRleF07XG5cbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKG9rKSB7XG4gICAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb24sXG4gICAgICAgICAgaW5kZXg6IG5leHRJbmRleFxuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIE1pbWljIHRoZSBiZWhhdmlvciBvZiBET00gaGlzdG9yaWVzIGJ5XG4gICAgICAgIC8vIGNhdXNpbmcgYSByZW5kZXIgYWZ0ZXIgYSBjYW5jZWxsZWQgUE9QLlxuICAgICAgICBzZXRTdGF0ZSgpO1xuICAgICAgfVxuICAgIH0pO1xuICB9O1xuXG4gIHZhciBnb0JhY2sgPSBmdW5jdGlvbiBnb0JhY2soKSB7XG4gICAgcmV0dXJuIGdvKC0xKTtcbiAgfTtcblxuICB2YXIgZ29Gb3J3YXJkID0gZnVuY3Rpb24gZ29Gb3J3YXJkKCkge1xuICAgIHJldHVybiBnbygxKTtcbiAgfTtcblxuICB2YXIgY2FuR28gPSBmdW5jdGlvbiBjYW5HbyhuKSB7XG4gICAgdmFyIG5leHRJbmRleCA9IGhpc3RvcnkuaW5kZXggKyBuO1xuICAgIHJldHVybiBuZXh0SW5kZXggPj0gMCAmJiBuZXh0SW5kZXggPCBoaXN0b3J5LmVudHJpZXMubGVuZ3RoO1xuICB9O1xuXG4gIHZhciBibG9jayA9IGZ1bmN0aW9uIGJsb2NrKCkge1xuICAgIHZhciBwcm9tcHQgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IGZhbHNlO1xuICAgIHJldHVybiB0cmFuc2l0aW9uTWFuYWdlci5zZXRQcm9tcHQocHJvbXB0KTtcbiAgfTtcblxuICB2YXIgbGlzdGVuID0gZnVuY3Rpb24gbGlzdGVuKGxpc3RlbmVyKSB7XG4gICAgcmV0dXJuIHRyYW5zaXRpb25NYW5hZ2VyLmFwcGVuZExpc3RlbmVyKGxpc3RlbmVyKTtcbiAgfTtcblxuICB2YXIgaGlzdG9yeSA9IHtcbiAgICBsZW5ndGg6IGVudHJpZXMubGVuZ3RoLFxuICAgIGFjdGlvbjogJ1BPUCcsXG4gICAgbG9jYXRpb246IGVudHJpZXNbaW5kZXhdLFxuICAgIGluZGV4OiBpbmRleCxcbiAgICBlbnRyaWVzOiBlbnRyaWVzLFxuICAgIGNyZWF0ZUhyZWY6IGNyZWF0ZUhyZWYsXG4gICAgcHVzaDogcHVzaCxcbiAgICByZXBsYWNlOiByZXBsYWNlLFxuICAgIGdvOiBnbyxcbiAgICBnb0JhY2s6IGdvQmFjayxcbiAgICBnb0ZvcndhcmQ6IGdvRm9yd2FyZCxcbiAgICBjYW5HbzogY2FuR28sXG4gICAgYmxvY2s6IGJsb2NrLFxuICAgIGxpc3RlbjogbGlzdGVuXG4gIH07XG5cbiAgcmV0dXJuIGhpc3Rvcnk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBjcmVhdGVNZW1vcnlIaXN0b3J5OyIsIi8vIFdyaXR0ZW4gaW4gdGhpcyByb3VuZCBhYm91dCB3YXkgZm9yIGJhYmVsLXRyYW5zZm9ybS1pbXBvcnRzXG5pbXBvcnQgUm91dGVyIGZyb20gXCJyZWFjdC1yb3V0ZXIvZXMvUm91dGVyXCI7XG5cbmV4cG9ydCBkZWZhdWx0IFJvdXRlcjsiLCJmdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbmltcG9ydCB3YXJuaW5nIGZyb20gXCJ3YXJuaW5nXCI7XG5pbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gXCJwcm9wLXR5cGVzXCI7XG5pbXBvcnQgeyBjcmVhdGVCcm93c2VySGlzdG9yeSBhcyBjcmVhdGVIaXN0b3J5IH0gZnJvbSBcImhpc3RvcnlcIjtcbmltcG9ydCBSb3V0ZXIgZnJvbSBcIi4vUm91dGVyXCI7XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIGEgPFJvdXRlcj4gdGhhdCB1c2VzIEhUTUw1IGhpc3RvcnkuXG4gKi9cblxudmFyIEJyb3dzZXJSb3V0ZXIgPSBmdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHMoQnJvd3NlclJvdXRlciwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gQnJvd3NlclJvdXRlcigpIHtcbiAgICB2YXIgX3RlbXAsIF90aGlzLCBfcmV0O1xuXG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEJyb3dzZXJSb3V0ZXIpO1xuXG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgcmV0dXJuIF9yZXQgPSAoX3RlbXAgPSAoX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfUmVhY3QkQ29tcG9uZW50LmNhbGwuYXBwbHkoX1JlYWN0JENvbXBvbmVudCwgW3RoaXNdLmNvbmNhdChhcmdzKSkpLCBfdGhpcyksIF90aGlzLmhpc3RvcnkgPSBjcmVhdGVIaXN0b3J5KF90aGlzLnByb3BzKSwgX3RlbXApLCBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihfdGhpcywgX3JldCk7XG4gIH1cblxuICBCcm93c2VyUm91dGVyLnByb3RvdHlwZS5jb21wb25lbnRXaWxsTW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsTW91bnQoKSB7XG4gICAgd2FybmluZyghdGhpcy5wcm9wcy5oaXN0b3J5LCBcIjxCcm93c2VyUm91dGVyPiBpZ25vcmVzIHRoZSBoaXN0b3J5IHByb3AuIFRvIHVzZSBhIGN1c3RvbSBoaXN0b3J5LCBcIiArIFwidXNlIGBpbXBvcnQgeyBSb3V0ZXIgfWAgaW5zdGVhZCBvZiBgaW1wb3J0IHsgQnJvd3NlclJvdXRlciBhcyBSb3V0ZXIgfWAuXCIpO1xuICB9O1xuXG4gIEJyb3dzZXJSb3V0ZXIucHJvdG90eXBlLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZXIsIHsgaGlzdG9yeTogdGhpcy5oaXN0b3J5LCBjaGlsZHJlbjogdGhpcy5wcm9wcy5jaGlsZHJlbiB9KTtcbiAgfTtcblxuICByZXR1cm4gQnJvd3NlclJvdXRlcjtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuQnJvd3NlclJvdXRlci5wcm9wVHlwZXMgPSB7XG4gIGJhc2VuYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBmb3JjZVJlZnJlc2g6IFByb3BUeXBlcy5ib29sLFxuICBnZXRVc2VyQ29uZmlybWF0aW9uOiBQcm9wVHlwZXMuZnVuYyxcbiAga2V5TGVuZ3RoOiBQcm9wVHlwZXMubnVtYmVyLFxuICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGVcbn07XG5cblxuZXhwb3J0IGRlZmF1bHQgQnJvd3NlclJvdXRlcjsiLCIvLyBpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG4vLyBpbXBvcnQge3JlbmRlcn0gZnJvbSAncmVhY3QtZG9tJztcclxuXHJcbi8vIGltcG9ydCAge0Jyb3dzZXJSb3V0ZXIgYXMgUm91dGVyfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJ1xyXG4vLyBpbXBvcnQgQXBwIGZyb20gJy4vY29tcG9uZW50cy9BcHAnO1xyXG5yZXF1aXJlKCdAYmFiZWwvcmVnaXN0ZXInKSh7XHJcbiAgICBwcmVzZXRzOiBbJ0BiYWJlbC9wcmVzZXQtcmVhY3QnXVxyXG59KTtcclxuXHJcbi8vIHZhciBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XHJcbi8vIHZhciBSZWFjdERPTVNlcnZlciA9IHJlcXVpcmUoJ3JlYWN0LWRvbS9zZXJ2ZXInKTtcclxuLy8gdmFyIFJvdXRlciA9IHJlcXVpcmUoJ3JlYWN0LXJvdXRlci1kb20nKS5Ccm93c2VyUm91dGVyXHJcbi8vIHZhciBSZWFjdERPTSA9IHJlcXVpcmUoJ3JlYWN0LWRvbScpO1xyXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQge3JlbmRlcn0gZnJvbSAncmVhY3QtZG9tJztcclxuaW1wb3J0IHtoeWRyYXRlfSBmcm9tICdyZWFjdC1kb20nO1xyXG5pbXBvcnQgIHtCcm93c2VyUm91dGVyIGFzIFJvdXRlcn0gZnJvbSAncmVhY3Qtcm91dGVyLWRvbSdcclxuaW1wb3J0IEFwcCBmcm9tICcuL2NvbXBvbmVudHMvQXBwJztcclxucmVuZGVyKFxyXG5cdDxSb3V0ZXI+XHJcblx0XHQ8QXBwIGRhdGEgPSB7d2luZG93Ll9fREFUQV9ffS8+XHJcblx0PC9Sb3V0ZXI+LFxyXG5cdGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyb290JylcclxuKTtcclxuXHJcbiIsImZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxuaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tIFwicHJvcC10eXBlc1wiO1xuaW1wb3J0IHdhcm5pbmcgZnJvbSBcIndhcm5pbmdcIjtcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSBcImludmFyaWFudFwiO1xuaW1wb3J0IG1hdGNoUGF0aCBmcm9tIFwiLi9tYXRjaFBhdGhcIjtcblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgcmVuZGVyaW5nIHRoZSBmaXJzdCA8Um91dGU+IHRoYXQgbWF0Y2hlcy5cbiAqL1xuXG52YXIgU3dpdGNoID0gZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzKFN3aXRjaCwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gU3dpdGNoKCkge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBTd2l0Y2gpO1xuXG4gICAgcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9SZWFjdCRDb21wb25lbnQuYXBwbHkodGhpcywgYXJndW1lbnRzKSk7XG4gIH1cblxuICBTd2l0Y2gucHJvdG90eXBlLmNvbXBvbmVudFdpbGxNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxNb3VudCgpIHtcbiAgICBpbnZhcmlhbnQodGhpcy5jb250ZXh0LnJvdXRlciwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFN3aXRjaD4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpO1xuICB9O1xuXG4gIFN3aXRjaC5wcm90b3R5cGUuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMobmV4dFByb3BzKSB7XG4gICAgd2FybmluZyghKG5leHRQcm9wcy5sb2NhdGlvbiAmJiAhdGhpcy5wcm9wcy5sb2NhdGlvbiksICc8U3dpdGNoPiBlbGVtZW50cyBzaG91bGQgbm90IGNoYW5nZSBmcm9tIHVuY29udHJvbGxlZCB0byBjb250cm9sbGVkIChvciB2aWNlIHZlcnNhKS4gWW91IGluaXRpYWxseSB1c2VkIG5vIFwibG9jYXRpb25cIiBwcm9wIGFuZCB0aGVuIHByb3ZpZGVkIG9uZSBvbiBhIHN1YnNlcXVlbnQgcmVuZGVyLicpO1xuXG4gICAgd2FybmluZyghKCFuZXh0UHJvcHMubG9jYXRpb24gJiYgdGhpcy5wcm9wcy5sb2NhdGlvbiksICc8U3dpdGNoPiBlbGVtZW50cyBzaG91bGQgbm90IGNoYW5nZSBmcm9tIGNvbnRyb2xsZWQgdG8gdW5jb250cm9sbGVkIChvciB2aWNlIHZlcnNhKS4gWW91IHByb3ZpZGVkIGEgXCJsb2NhdGlvblwiIHByb3AgaW5pdGlhbGx5IGJ1dCBvbWl0dGVkIGl0IG9uIGEgc3Vic2VxdWVudCByZW5kZXIuJyk7XG4gIH07XG5cbiAgU3dpdGNoLnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgdmFyIHJvdXRlID0gdGhpcy5jb250ZXh0LnJvdXRlci5yb3V0ZTtcbiAgICB2YXIgY2hpbGRyZW4gPSB0aGlzLnByb3BzLmNoaWxkcmVuO1xuXG4gICAgdmFyIGxvY2F0aW9uID0gdGhpcy5wcm9wcy5sb2NhdGlvbiB8fCByb3V0ZS5sb2NhdGlvbjtcblxuICAgIHZhciBtYXRjaCA9IHZvaWQgMCxcbiAgICAgICAgY2hpbGQgPSB2b2lkIDA7XG4gICAgUmVhY3QuQ2hpbGRyZW4uZm9yRWFjaChjaGlsZHJlbiwgZnVuY3Rpb24gKGVsZW1lbnQpIHtcbiAgICAgIGlmIChtYXRjaCA9PSBudWxsICYmIFJlYWN0LmlzVmFsaWRFbGVtZW50KGVsZW1lbnQpKSB7XG4gICAgICAgIHZhciBfZWxlbWVudCRwcm9wcyA9IGVsZW1lbnQucHJvcHMsXG4gICAgICAgICAgICBwYXRoUHJvcCA9IF9lbGVtZW50JHByb3BzLnBhdGgsXG4gICAgICAgICAgICBleGFjdCA9IF9lbGVtZW50JHByb3BzLmV4YWN0LFxuICAgICAgICAgICAgc3RyaWN0ID0gX2VsZW1lbnQkcHJvcHMuc3RyaWN0LFxuICAgICAgICAgICAgc2Vuc2l0aXZlID0gX2VsZW1lbnQkcHJvcHMuc2Vuc2l0aXZlLFxuICAgICAgICAgICAgZnJvbSA9IF9lbGVtZW50JHByb3BzLmZyb207XG5cbiAgICAgICAgdmFyIHBhdGggPSBwYXRoUHJvcCB8fCBmcm9tO1xuXG4gICAgICAgIGNoaWxkID0gZWxlbWVudDtcbiAgICAgICAgbWF0Y2ggPSBtYXRjaFBhdGgobG9jYXRpb24ucGF0aG5hbWUsIHsgcGF0aDogcGF0aCwgZXhhY3Q6IGV4YWN0LCBzdHJpY3Q6IHN0cmljdCwgc2Vuc2l0aXZlOiBzZW5zaXRpdmUgfSwgcm91dGUubWF0Y2gpO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgcmV0dXJuIG1hdGNoID8gUmVhY3QuY2xvbmVFbGVtZW50KGNoaWxkLCB7IGxvY2F0aW9uOiBsb2NhdGlvbiwgY29tcHV0ZWRNYXRjaDogbWF0Y2ggfSkgOiBudWxsO1xuICB9O1xuXG4gIHJldHVybiBTd2l0Y2g7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cblN3aXRjaC5jb250ZXh0VHlwZXMgPSB7XG4gIHJvdXRlcjogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICByb3V0ZTogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkXG4gIH0pLmlzUmVxdWlyZWRcbn07XG5Td2l0Y2gucHJvcFR5cGVzID0ge1xuICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG4gIGxvY2F0aW9uOiBQcm9wVHlwZXMub2JqZWN0XG59O1xuXG5cbmV4cG9ydCBkZWZhdWx0IFN3aXRjaDsiLCIvLyBXcml0dGVuIGluIHRoaXMgcm91bmQgYWJvdXQgd2F5IGZvciBiYWJlbC10cmFuc2Zvcm0taW1wb3J0c1xuaW1wb3J0IFN3aXRjaCBmcm9tIFwicmVhY3Qtcm91dGVyL2VzL1N3aXRjaFwiO1xuXG5leHBvcnQgZGVmYXVsdCBTd2l0Y2g7Il0sInNvdXJjZVJvb3QiOiIifQ==