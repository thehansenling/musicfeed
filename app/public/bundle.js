!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=18)}([function(e,t,n){"use strict";e.exports=n(10)},function(e,t,n){e.exports=n(15)()},function(e,t,n){"use strict";e.exports=function(){}},function(e,t){e.exports={checkLoggedIn:function(){return-1!=document.cookie.indexOf("username=")?(console.log("TRUE"),!0):(console.log("FALSE"),!1)}}},function(e,t,n){"use strict";var r=function(){};e.exports=r},function(e,t,n){"use strict";e.exports=function(e,t,n,r,o,i,a,l){if(!e){var u;if(void 0===t)u=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var s=[n,r,o,i,a,l],c=0;(u=new Error(t.replace(/%s/g,function(){return s[c++]}))).name="Invariant Violation"}throw u.framesToPop=1,u}}},function(e,t,n){"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(11)},function(e,t,n){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var r=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map(function(e){return t[e]}).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach(function(e){r[e]=e}),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,a,l=function(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}(e),u=1;u<arguments.length;u++){for(var s in n=Object(arguments[u]))o.call(n,s)&&(l[s]=n[s]);if(r){a=r(n);for(var c=0;c<a.length;c++)i.call(n,a[c])&&(l[a[c]]=n[a[c]])}}return l}},function(e,t,n){var r=n(17);e.exports=d,e.exports.parse=i,e.exports.compile=function(e,t){return l(i(e,t))},e.exports.tokensToFunction=l,e.exports.tokensToRegExp=f;var o=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function i(e,t){for(var n,r=[],i=0,a=0,l="",c=t&&t.delimiter||"/";null!=(n=o.exec(e));){var p=n[0],f=n[1],d=n.index;if(l+=e.slice(a,d),a=d+p.length,f)l+=f[1];else{var y=e[a],m=n[2],h=n[3],v=n[4],_=n[5],w=n[6],b=n[7];l&&(r.push(l),l="");var E=null!=m&&null!=y&&y!==m,T="+"===w||"*"===w,S="?"===w||"*"===w,C=n[2]||c,x=v||_;r.push({name:h||i++,prefix:m||"",delimiter:C,optional:S,repeat:T,partial:E,asterisk:!!b,pattern:x?s(x):b?".*":"[^"+u(C)+"]+?"})}}return a<e.length&&(l+=e.substr(a)),l&&r.push(l),r}function a(e){return encodeURI(e).replace(/[\/?#]/g,function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})}function l(e){for(var t=new Array(e.length),n=0;n<e.length;n++)"object"==typeof e[n]&&(t[n]=new RegExp("^(?:"+e[n].pattern+")$"));return function(n,o){for(var i="",l=n||{},u=(o||{}).pretty?a:encodeURIComponent,s=0;s<e.length;s++){var c=e[s];if("string"!=typeof c){var p,f=l[c.name];if(null==f){if(c.optional){c.partial&&(i+=c.prefix);continue}throw new TypeError('Expected "'+c.name+'" to be defined')}if(r(f)){if(!c.repeat)throw new TypeError('Expected "'+c.name+'" to not repeat, but received `'+JSON.stringify(f)+"`");if(0===f.length){if(c.optional)continue;throw new TypeError('Expected "'+c.name+'" to not be empty')}for(var d=0;d<f.length;d++){if(p=u(f[d]),!t[s].test(p))throw new TypeError('Expected all "'+c.name+'" to match "'+c.pattern+'", but received `'+JSON.stringify(p)+"`");i+=(0===d?c.prefix:c.delimiter)+p}}else{if(p=c.asterisk?encodeURI(f).replace(/[?#]/g,function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}):u(f),!t[s].test(p))throw new TypeError('Expected "'+c.name+'" to match "'+c.pattern+'", but received "'+p+'"');i+=c.prefix+p}}else i+=c}return i}}function u(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function s(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function c(e,t){return e.keys=t,e}function p(e){return e.sensitive?"":"i"}function f(e,t,n){r(t)||(n=t||n,t=[]);for(var o=(n=n||{}).strict,i=!1!==n.end,a="",l=0;l<e.length;l++){var s=e[l];if("string"==typeof s)a+=u(s);else{var f=u(s.prefix),d="(?:"+s.pattern+")";t.push(s),s.repeat&&(d+="(?:"+f+d+")*"),a+=d=s.optional?s.partial?f+"("+d+")?":"(?:"+f+"("+d+"))?":f+"("+d+")"}}var y=u(n.delimiter||"/"),m=a.slice(-y.length)===y;return o||(a=(m?a.slice(0,-y.length):a)+"(?:"+y+"(?=$))?"),a+=i?"$":o&&m?"":"(?="+y+"|$)",c(new RegExp("^"+a,p(n)),t)}function d(e,t,n){return r(t)||(n=t||n,t=[]),n=n||{},e instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var r=0;r<n.length;r++)t.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return c(e,t)}(e,t):r(e)?function(e,t,n){for(var r=[],o=0;o<e.length;o++)r.push(d(e[o],t,n).source);return c(new RegExp("(?:"+r.join("|")+")",p(n)),t)}(e,t,n):function(e,t,n){return f(i(e,n),t,n)}(e,t,n)}},,function(e,t,n){"use strict";
/** @license React v16.7.0
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(7),o="function"==typeof Symbol&&Symbol.for,i=o?Symbol.for("react.element"):60103,a=o?Symbol.for("react.portal"):60106,l=o?Symbol.for("react.fragment"):60107,u=o?Symbol.for("react.strict_mode"):60108,s=o?Symbol.for("react.profiler"):60114,c=o?Symbol.for("react.provider"):60109,p=o?Symbol.for("react.context"):60110,f=o?Symbol.for("react.concurrent_mode"):60111,d=o?Symbol.for("react.forward_ref"):60112,y=o?Symbol.for("react.suspense"):60113,m=o?Symbol.for("react.memo"):60115,h=o?Symbol.for("react.lazy"):60116,v="function"==typeof Symbol&&Symbol.iterator;function _(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);!function(e,t,n,r,o,i,a,l){if(!e){if(e=void 0,void 0===t)e=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var u=[n,r,o,i,a,l],s=0;(e=Error(t.replace(/%s/g,function(){return u[s++]}))).name="Invariant Violation"}throw e.framesToPop=1,e}}(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}var w={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},b={};function E(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||w}function T(){}function S(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||w}E.prototype.isReactComponent={},E.prototype.setState=function(e,t){"object"!=typeof e&&"function"!=typeof e&&null!=e&&_("85"),this.updater.enqueueSetState(this,e,t,"setState")},E.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},T.prototype=E.prototype;var C=S.prototype=new T;C.constructor=S,r(C,E.prototype),C.isPureReactComponent=!0;var x={current:null,currentDispatcher:null},g=Object.prototype.hasOwnProperty,O={key:!0,ref:!0,__self:!0,__source:!0};function P(e,t,n){var r=void 0,o={},a=null,l=null;if(null!=t)for(r in void 0!==t.ref&&(l=t.ref),void 0!==t.key&&(a=""+t.key),t)g.call(t,r)&&!O.hasOwnProperty(r)&&(o[r]=t[r]);var u=arguments.length-2;if(1===u)o.children=n;else if(1<u){for(var s=Array(u),c=0;c<u;c++)s[c]=arguments[c+2];o.children=s}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===o[r]&&(o[r]=u[r]);return{$$typeof:i,type:e,key:a,ref:l,props:o,_owner:x.current}}function N(e){return"object"==typeof e&&null!==e&&e.$$typeof===i}var k=/\/+/g,j=[];function R(e,t,n,r){if(j.length){var o=j.pop();return o.result=e,o.keyPrefix=t,o.func=n,o.context=r,o.count=0,o}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function U(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>j.length&&j.push(e)}function L(e,t,n){return null==e?0:function e(t,n,r,o){var l=typeof t;"undefined"!==l&&"boolean"!==l||(t=null);var u=!1;if(null===t)u=!0;else switch(l){case"string":case"number":u=!0;break;case"object":switch(t.$$typeof){case i:case a:u=!0}}if(u)return r(o,t,""===n?"."+D(t,0):n),1;if(u=0,n=""===n?".":n+":",Array.isArray(t))for(var s=0;s<t.length;s++){var c=n+D(l=t[s],s);u+=e(l,c,r,o)}else if(c=null===t||"object"!=typeof t?null:"function"==typeof(c=v&&t[v]||t["@@iterator"])?c:null,"function"==typeof c)for(t=c.call(t),s=0;!(l=t.next()).done;)u+=e(l=l.value,c=n+D(l,s++),r,o);else"object"===l&&_("31","[object Object]"==(r=""+t)?"object with keys {"+Object.keys(t).join(", ")+"}":r,"");return u}(e,"",t,n)}function D(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,function(e){return t[e]})}(e.key):t.toString(36)}function A(e,t){e.func.call(e.context,t,e.count++)}function M(e,t,n){var r=e.result,o=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?F(e,r,n,function(e){return e}):null!=e&&(N(e)&&(e=function(e,t){return{$$typeof:i,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,o+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(k,"$&/")+"/")+n)),r.push(e))}function F(e,t,n,r,o){var i="";null!=n&&(i=(""+n).replace(k,"$&/")+"/"),L(e,M,t=R(t,i,r,o)),U(t)}var I={Children:{map:function(e,t,n){if(null==e)return e;var r=[];return F(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;L(e,A,t=R(null,null,t,n)),U(t)},count:function(e){return L(e,function(){return null},null)},toArray:function(e){var t=[];return F(e,t,null,function(e){return e}),t},only:function(e){return N(e)||_("143"),e}},createRef:function(){return{current:null}},Component:E,PureComponent:S,createContext:function(e,t){return void 0===t&&(t=null),(e={$$typeof:p,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:c,_context:e},e.Consumer=e},forwardRef:function(e){return{$$typeof:d,render:e}},lazy:function(e){return{$$typeof:h,_ctor:e,_status:-1,_result:null}},memo:function(e,t){return{$$typeof:m,type:e,compare:void 0===t?null:t}},Fragment:l,StrictMode:u,Suspense:y,createElement:P,cloneElement:function(e,t,n){null==e&&_("267",e);var o=void 0,a=r({},e.props),l=e.key,u=e.ref,s=e._owner;if(null!=t){void 0!==t.ref&&(u=t.ref,s=x.current),void 0!==t.key&&(l=""+t.key);var c=void 0;for(o in e.type&&e.type.defaultProps&&(c=e.type.defaultProps),t)g.call(t,o)&&!O.hasOwnProperty(o)&&(a[o]=void 0===t[o]&&void 0!==c?c[o]:t[o])}if(1===(o=arguments.length-2))a.children=n;else if(1<o){c=Array(o);for(var p=0;p<o;p++)c[p]=arguments[p+2];a.children=c}return{$$typeof:i,type:e.type,key:l,ref:u,props:a,_owner:s}},createFactory:function(e){var t=P.bind(null,e);return t.type=e,t},isValidElement:N,version:"16.7.0",unstable_ConcurrentMode:f,unstable_Profiler:s,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:x,assign:r}},z={default:I},W=z&&I||z;e.exports=W.default||W},function(e,t,n){"use strict";
/** @license React v16.7.0
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(0),o=n(7),i=n(12);function a(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);!function(e,t,n,r,o,i,a,l){if(!e){if(e=void 0,void 0===t)e=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var u=[n,r,o,i,a,l],s=0;(e=Error(t.replace(/%s/g,function(){return u[s++]}))).name="Invariant Violation"}throw e.framesToPop=1,e}}(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}r||a("227");var l=!1,u=null,s=!1,c=null,p={onError:function(e){l=!0,u=e}};function f(e,t,n,r,o,i,a,s,c){l=!1,u=null,function(e,t,n,r,o,i,a,l,u){var s=Array.prototype.slice.call(arguments,3);try{t.apply(n,s)}catch(e){this.onError(e)}}.apply(p,arguments)}var d=null,y={};function m(){if(d)for(var e in y){var t=y[e],n=d.indexOf(e);if(-1<n||a("96",e),!v[n])for(var r in t.extractEvents||a("97",e),v[n]=t,n=t.eventTypes){var o=void 0,i=n[r],l=t,u=r;_.hasOwnProperty(u)&&a("99",u),_[u]=i;var s=i.phasedRegistrationNames;if(s){for(o in s)s.hasOwnProperty(o)&&h(s[o],l,u);o=!0}else i.registrationName?(h(i.registrationName,l,u),o=!0):o=!1;o||a("98",r,e)}}}function h(e,t,n){w[e]&&a("100",e),w[e]=t,b[e]=t.eventTypes[n].dependencies}var v=[],_={},w={},b={},E=null,T=null,S=null;function C(e,t,n){var r=e.type||"unknown-event";e.currentTarget=S(n),function(e,t,n,r,o,i,p,d,y){if(f.apply(this,arguments),l){if(l){var m=u;l=!1,u=null}else a("198"),m=void 0;s||(s=!0,c=m)}}(r,t,void 0,e),e.currentTarget=null}function x(e,t){return null==t&&a("30"),null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function g(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var O=null;function P(e){if(e){var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t))for(var r=0;r<t.length&&!e.isPropagationStopped();r++)C(e,t[r],n[r]);else t&&C(e,t,n);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}var N={injectEventPluginOrder:function(e){d&&a("101"),d=Array.prototype.slice.call(e),m()},injectEventPluginsByName:function(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];y.hasOwnProperty(t)&&y[t]===r||(y[t]&&a("102",t),y[t]=r,n=!0)}n&&m()}};function k(e,t){var n=e.stateNode;if(!n)return null;var r=E(n);if(!r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}return e?null:(n&&"function"!=typeof n&&a("231",t,typeof n),n)}function j(e){if(null!==e&&(O=x(O,e)),e=O,O=null,e&&(g(e,P),O&&a("95"),s))throw e=c,s=!1,c=null,e}var R=Math.random().toString(36).slice(2),U="__reactInternalInstance$"+R,L="__reactEventHandlers$"+R;function D(e){if(e[U])return e[U];for(;!e[U];){if(!e.parentNode)return null;e=e.parentNode}return 5===(e=e[U]).tag||6===e.tag?e:null}function A(e){return!(e=e[U])||5!==e.tag&&6!==e.tag?null:e}function M(e){if(5===e.tag||6===e.tag)return e.stateNode;a("33")}function F(e){return e[L]||null}function I(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function z(e,t,n){(t=k(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=x(n._dispatchListeners,t),n._dispatchInstances=x(n._dispatchInstances,e))}function W(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var t=e._targetInst,n=[];t;)n.push(t),t=I(t);for(t=n.length;0<t--;)z(n[t],"captured",e);for(t=0;t<n.length;t++)z(n[t],"bubbled",e)}}function $(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=k(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=x(n._dispatchListeners,t),n._dispatchInstances=x(n._dispatchInstances,e))}function Q(e){e&&e.dispatchConfig.registrationName&&$(e._targetInst,null,e)}function Y(e){g(e,W)}var J=!("undefined"==typeof window||!window.document||!window.document.createElement);function X(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var K={animationend:X("Animation","AnimationEnd"),animationiteration:X("Animation","AnimationIteration"),animationstart:X("Animation","AnimationStart"),transitionend:X("Transition","TransitionEnd")},Z={},V={};function G(e){if(Z[e])return Z[e];if(!K[e])return e;var t,n=K[e];for(t in n)if(n.hasOwnProperty(t)&&t in V)return Z[e]=n[t];return e}J&&(V=document.createElement("div").style,"AnimationEvent"in window||(delete K.animationend.animation,delete K.animationiteration.animation,delete K.animationstart.animation),"TransitionEvent"in window||delete K.transitionend.transition);var B=G("animationend"),q=G("animationiteration"),H=G("animationstart"),ee=G("transitionend"),te="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),ne=null,re=null,oe=null;function ie(){if(oe)return oe;var e,t,n=re,r=n.length,o="value"in ne?ne.value:ne.textContent,i=o.length;for(e=0;e<r&&n[e]===o[e];e++);var a=r-e;for(t=1;t<=a&&n[r-t]===o[i-t];t++);return oe=o.slice(e,1<t?1-t:void 0)}function ae(){return!0}function le(){return!1}function ue(e,t,n,r){for(var o in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(o)&&((t=e[o])?this[o]=t(n):"target"===o?this.target=r:this[o]=n[o]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?ae:le,this.isPropagationStopped=le,this}function se(e,t,n,r){if(this.eventPool.length){var o=this.eventPool.pop();return this.call(o,e,t,n,r),o}return new this(e,t,n,r)}function ce(e){e instanceof this||a("279"),e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function pe(e){e.eventPool=[],e.getPooled=se,e.release=ce}o(ue.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=ae)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=ae)},persist:function(){this.isPersistent=ae},isPersistent:le,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=le,this._dispatchInstances=this._dispatchListeners=null}}),ue.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},ue.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var i=new t;return o(i,n.prototype),n.prototype=i,n.prototype.constructor=n,n.Interface=o({},r.Interface,e),n.extend=r.extend,pe(n),n},pe(ue);var fe=ue.extend({data:null}),de=ue.extend({data:null}),ye=[9,13,27,32],me=J&&"CompositionEvent"in window,he=null;J&&"documentMode"in document&&(he=document.documentMode);var ve=J&&"TextEvent"in window&&!he,_e=J&&(!me||he&&8<he&&11>=he),we=String.fromCharCode(32),be={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},Ee=!1;function Te(e,t){switch(e){case"keyup":return-1!==ye.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function Se(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Ce=!1;var xe={eventTypes:be,extractEvents:function(e,t,n,r){var o=void 0,i=void 0;if(me)e:{switch(e){case"compositionstart":o=be.compositionStart;break e;case"compositionend":o=be.compositionEnd;break e;case"compositionupdate":o=be.compositionUpdate;break e}o=void 0}else Ce?Te(e,n)&&(o=be.compositionEnd):"keydown"===e&&229===n.keyCode&&(o=be.compositionStart);return o?(_e&&"ko"!==n.locale&&(Ce||o!==be.compositionStart?o===be.compositionEnd&&Ce&&(i=ie()):(re="value"in(ne=r)?ne.value:ne.textContent,Ce=!0)),o=fe.getPooled(o,t,n,r),i?o.data=i:null!==(i=Se(n))&&(o.data=i),Y(o),i=o):i=null,(e=ve?function(e,t){switch(e){case"compositionend":return Se(t);case"keypress":return 32!==t.which?null:(Ee=!0,we);case"textInput":return(e=t.data)===we&&Ee?null:e;default:return null}}(e,n):function(e,t){if(Ce)return"compositionend"===e||!me&&Te(e,t)?(e=ie(),oe=re=ne=null,Ce=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return _e&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))?((t=de.getPooled(be.beforeInput,t,n,r)).data=e,Y(t)):t=null,null===i?t:null===t?i:[i,t]}},ge=null,Oe=null,Pe=null;function Ne(e){if(e=T(e)){"function"!=typeof ge&&a("280");var t=E(e.stateNode);ge(e.stateNode,e.type,t)}}function ke(e){Oe?Pe?Pe.push(e):Pe=[e]:Oe=e}function je(){if(Oe){var e=Oe,t=Pe;if(Pe=Oe=null,Ne(e),t)for(e=0;e<t.length;e++)Ne(t[e])}}function Re(e,t){return e(t)}function Ue(e,t,n){return e(t,n)}function Le(){}var De=!1;function Ae(e,t){if(De)return e(t);De=!0;try{return Re(e,t)}finally{De=!1,(null!==Oe||null!==Pe)&&(Le(),je())}}var Me={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Fe(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Me[e.type]:"textarea"===t}function Ie(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function ze(e){if(!J)return!1;var t=(e="on"+e)in document;return t||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t}function We(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function $e(e){e._valueTracker||(e._valueTracker=function(e){var t=We(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var o=n.get,i=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,i.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function Qe(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=We(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}var Ye=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,Je=/^(.*)[\\\/]/,Xe="function"==typeof Symbol&&Symbol.for,Ke=Xe?Symbol.for("react.element"):60103,Ze=Xe?Symbol.for("react.portal"):60106,Ve=Xe?Symbol.for("react.fragment"):60107,Ge=Xe?Symbol.for("react.strict_mode"):60108,Be=Xe?Symbol.for("react.profiler"):60114,qe=Xe?Symbol.for("react.provider"):60109,He=Xe?Symbol.for("react.context"):60110,et=Xe?Symbol.for("react.concurrent_mode"):60111,tt=Xe?Symbol.for("react.forward_ref"):60112,nt=Xe?Symbol.for("react.suspense"):60113,rt=Xe?Symbol.for("react.memo"):60115,ot=Xe?Symbol.for("react.lazy"):60116,it="function"==typeof Symbol&&Symbol.iterator;function at(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=it&&e[it]||e["@@iterator"])?e:null}function lt(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case et:return"ConcurrentMode";case Ve:return"Fragment";case Ze:return"Portal";case Be:return"Profiler";case Ge:return"StrictMode";case nt:return"Suspense"}if("object"==typeof e)switch(e.$$typeof){case He:return"Context.Consumer";case qe:return"Context.Provider";case tt:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case rt:return lt(e.type);case ot:if(e=1===e._status?e._result:null)return lt(e)}return null}function ut(e){var t="";do{e:switch(e.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n="";break e;default:var r=e._debugOwner,o=e._debugSource,i=lt(e.type);n=null,r&&(n=lt(r.type)),r=i,i="",o?i=" (at "+o.fileName.replace(Je,"")+":"+o.lineNumber+")":n&&(i=" (created by "+n+")"),n="\n    in "+(r||"Unknown")+i}t+=n,e=e.return}while(e);return t}var st=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,ct=Object.prototype.hasOwnProperty,pt={},ft={};function dt(e,t,n,r,o){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=e,this.type=t}var yt={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(e){yt[e]=new dt(e,0,!1,e,null)}),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(e){var t=e[0];yt[t]=new dt(t,1,!1,e[1],null)}),["contentEditable","draggable","spellCheck","value"].forEach(function(e){yt[e]=new dt(e,2,!1,e.toLowerCase(),null)}),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(e){yt[e]=new dt(e,2,!1,e,null)}),"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(e){yt[e]=new dt(e,3,!1,e.toLowerCase(),null)}),["checked","multiple","muted","selected"].forEach(function(e){yt[e]=new dt(e,3,!0,e,null)}),["capture","download"].forEach(function(e){yt[e]=new dt(e,4,!1,e,null)}),["cols","rows","size","span"].forEach(function(e){yt[e]=new dt(e,6,!1,e,null)}),["rowSpan","start"].forEach(function(e){yt[e]=new dt(e,5,!1,e.toLowerCase(),null)});var mt=/[\-:]([a-z])/g;function ht(e){return e[1].toUpperCase()}function vt(e,t,n,r){var o=yt.hasOwnProperty(t)?yt[t]:null;(null!==o?0===o.type:!r&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,o,r)&&(n=null),r||null===o?function(e){return!!ct.call(ft,e)||!ct.call(pt,e)&&(st.test(e)?ft[e]=!0:(pt[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):o.mustUseProperty?e[o.propertyName]=null===n?3!==o.type&&"":n:(t=o.attributeName,r=o.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}function _t(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function wt(e,t){var n=t.checked;return o({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function bt(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=_t(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Et(e,t){null!=(t=t.checked)&&vt(e,"checked",t,!1)}function Tt(e,t){Et(e,t);var n=_t(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?Ct(e,t.type,n):t.hasOwnProperty("defaultValue")&&Ct(e,t.type,_t(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function St(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!e.defaultChecked,e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function Ct(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(e){var t=e.replace(mt,ht);yt[t]=new dt(t,1,!1,e,null)}),"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(e){var t=e.replace(mt,ht);yt[t]=new dt(t,1,!1,e,"http://www.w3.org/1999/xlink")}),["xml:base","xml:lang","xml:space"].forEach(function(e){var t=e.replace(mt,ht);yt[t]=new dt(t,1,!1,e,"http://www.w3.org/XML/1998/namespace")}),yt.tabIndex=new dt("tabIndex",1,!1,"tabindex",null);var xt={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function gt(e,t,n){return(e=ue.getPooled(xt.change,e,t,n)).type="change",ke(n),Y(e),e}var Ot=null,Pt=null;function Nt(e){j(e)}function kt(e){if(Qe(M(e)))return e}function jt(e,t){if("change"===e)return t}var Rt=!1;function Ut(){Ot&&(Ot.detachEvent("onpropertychange",Lt),Pt=Ot=null)}function Lt(e){"value"===e.propertyName&&kt(Pt)&&Ae(Nt,e=gt(Pt,e,Ie(e)))}function Dt(e,t,n){"focus"===e?(Ut(),Pt=n,(Ot=t).attachEvent("onpropertychange",Lt)):"blur"===e&&Ut()}function At(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return kt(Pt)}function Mt(e,t){if("click"===e)return kt(t)}function Ft(e,t){if("input"===e||"change"===e)return kt(t)}J&&(Rt=ze("input")&&(!document.documentMode||9<document.documentMode));var It={eventTypes:xt,_isInputEventSupported:Rt,extractEvents:function(e,t,n,r){var o=t?M(t):window,i=void 0,a=void 0,l=o.nodeName&&o.nodeName.toLowerCase();if("select"===l||"input"===l&&"file"===o.type?i=jt:Fe(o)?Rt?i=Ft:(i=At,a=Dt):(l=o.nodeName)&&"input"===l.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(i=Mt),i&&(i=i(e,t)))return gt(i,n,r);a&&a(e,o,t),"blur"===e&&(e=o._wrapperState)&&e.controlled&&"number"===o.type&&Ct(o,"number",o.value)}},zt=ue.extend({view:null,detail:null}),Wt={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function $t(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Wt[e])&&!!t[e]}function Qt(){return $t}var Yt=0,Jt=0,Xt=!1,Kt=!1,Zt=zt.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Qt,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in e)return e.movementX;var t=Yt;return Yt=e.screenX,Xt?"mousemove"===e.type?e.screenX-t:0:(Xt=!0,0)},movementY:function(e){if("movementY"in e)return e.movementY;var t=Jt;return Jt=e.screenY,Kt?"mousemove"===e.type?e.screenY-t:0:(Kt=!0,0)}}),Vt=Zt.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Gt={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},Bt={eventTypes:Gt,extractEvents:function(e,t,n,r){var o="mouseover"===e||"pointerover"===e,i="mouseout"===e||"pointerout"===e;if(o&&(n.relatedTarget||n.fromElement)||!i&&!o)return null;if(o=r.window===r?r:(o=r.ownerDocument)?o.defaultView||o.parentWindow:window,i?(i=t,t=(t=n.relatedTarget||n.toElement)?D(t):null):i=null,i===t)return null;var a=void 0,l=void 0,u=void 0,s=void 0;"mouseout"===e||"mouseover"===e?(a=Zt,l=Gt.mouseLeave,u=Gt.mouseEnter,s="mouse"):"pointerout"!==e&&"pointerover"!==e||(a=Vt,l=Gt.pointerLeave,u=Gt.pointerEnter,s="pointer");var c=null==i?o:M(i);if(o=null==t?o:M(t),(e=a.getPooled(l,i,n,r)).type=s+"leave",e.target=c,e.relatedTarget=o,(n=a.getPooled(u,t,n,r)).type=s+"enter",n.target=o,n.relatedTarget=c,r=t,i&&r)e:{for(o=r,s=0,a=t=i;a;a=I(a))s++;for(a=0,u=o;u;u=I(u))a++;for(;0<s-a;)t=I(t),s--;for(;0<a-s;)o=I(o),a--;for(;s--;){if(t===o||t===o.alternate)break e;t=I(t),o=I(o)}t=null}else t=null;for(o=t,t=[];i&&i!==o&&(null===(s=i.alternate)||s!==o);)t.push(i),i=I(i);for(i=[];r&&r!==o&&(null===(s=r.alternate)||s!==o);)i.push(r),r=I(r);for(r=0;r<t.length;r++)$(t[r],"bubbled",e);for(r=i.length;0<r--;)$(i[r],"captured",n);return[e,n]}},qt=Object.prototype.hasOwnProperty;function Ht(e,t){return e===t?0!==e||0!==t||1/e==1/t:e!=e&&t!=t}function en(e,t){if(Ht(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!qt.call(t,n[r])||!Ht(e[n[r]],t[n[r]]))return!1;return!0}function tn(e){var t=e;if(e.alternate)for(;t.return;)t=t.return;else{if(0!=(2&t.effectTag))return 1;for(;t.return;)if(0!=(2&(t=t.return).effectTag))return 1}return 3===t.tag?2:3}function nn(e){2!==tn(e)&&a("188")}function rn(e){if(!(e=function(e){var t=e.alternate;if(!t)return 3===(t=tn(e))&&a("188"),1===t?null:e;for(var n=e,r=t;;){var o=n.return,i=o?o.alternate:null;if(!o||!i)break;if(o.child===i.child){for(var l=o.child;l;){if(l===n)return nn(o),e;if(l===r)return nn(o),t;l=l.sibling}a("188")}if(n.return!==r.return)n=o,r=i;else{l=!1;for(var u=o.child;u;){if(u===n){l=!0,n=o,r=i;break}if(u===r){l=!0,r=o,n=i;break}u=u.sibling}if(!l){for(u=i.child;u;){if(u===n){l=!0,n=i,r=o;break}if(u===r){l=!0,r=i,n=o;break}u=u.sibling}l||a("189")}}n.alternate!==r&&a("190")}return 3!==n.tag&&a("188"),n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}var on=ue.extend({animationName:null,elapsedTime:null,pseudoElement:null}),an=ue.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),ln=zt.extend({relatedTarget:null});function un(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var sn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},cn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},pn=zt.extend({key:function(e){if(e.key){var t=sn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=un(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?cn[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Qt,charCode:function(e){return"keypress"===e.type?un(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?un(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),fn=Zt.extend({dataTransfer:null}),dn=zt.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Qt}),yn=ue.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),mn=Zt.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),hn=[["abort","abort"],[B,"animationEnd"],[q,"animationIteration"],[H,"animationStart"],["canplay","canPlay"],["canplaythrough","canPlayThrough"],["drag","drag"],["dragenter","dragEnter"],["dragexit","dragExit"],["dragleave","dragLeave"],["dragover","dragOver"],["durationchange","durationChange"],["emptied","emptied"],["encrypted","encrypted"],["ended","ended"],["error","error"],["gotpointercapture","gotPointerCapture"],["load","load"],["loadeddata","loadedData"],["loadedmetadata","loadedMetadata"],["loadstart","loadStart"],["lostpointercapture","lostPointerCapture"],["mousemove","mouseMove"],["mouseout","mouseOut"],["mouseover","mouseOver"],["playing","playing"],["pointermove","pointerMove"],["pointerout","pointerOut"],["pointerover","pointerOver"],["progress","progress"],["scroll","scroll"],["seeking","seeking"],["stalled","stalled"],["suspend","suspend"],["timeupdate","timeUpdate"],["toggle","toggle"],["touchmove","touchMove"],[ee,"transitionEnd"],["waiting","waiting"],["wheel","wheel"]],vn={},_n={};function wn(e,t){var n=e[0],r="on"+((e=e[1])[0].toUpperCase()+e.slice(1));t={phasedRegistrationNames:{bubbled:r,captured:r+"Capture"},dependencies:[n],isInteractive:t},vn[e]=t,_n[n]=t}[["blur","blur"],["cancel","cancel"],["click","click"],["close","close"],["contextmenu","contextMenu"],["copy","copy"],["cut","cut"],["auxclick","auxClick"],["dblclick","doubleClick"],["dragend","dragEnd"],["dragstart","dragStart"],["drop","drop"],["focus","focus"],["input","input"],["invalid","invalid"],["keydown","keyDown"],["keypress","keyPress"],["keyup","keyUp"],["mousedown","mouseDown"],["mouseup","mouseUp"],["paste","paste"],["pause","pause"],["play","play"],["pointercancel","pointerCancel"],["pointerdown","pointerDown"],["pointerup","pointerUp"],["ratechange","rateChange"],["reset","reset"],["seeked","seeked"],["submit","submit"],["touchcancel","touchCancel"],["touchend","touchEnd"],["touchstart","touchStart"],["volumechange","volumeChange"]].forEach(function(e){wn(e,!0)}),hn.forEach(function(e){wn(e,!1)});var bn={eventTypes:vn,isInteractiveTopLevelEventType:function(e){return void 0!==(e=_n[e])&&!0===e.isInteractive},extractEvents:function(e,t,n,r){var o=_n[e];if(!o)return null;switch(e){case"keypress":if(0===un(n))return null;case"keydown":case"keyup":e=pn;break;case"blur":case"focus":e=ln;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=Zt;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=fn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=dn;break;case B:case q:case H:e=on;break;case ee:e=yn;break;case"scroll":e=zt;break;case"wheel":e=mn;break;case"copy":case"cut":case"paste":e=an;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=Vt;break;default:e=ue}return Y(t=e.getPooled(o,t,n,r)),t}},En=bn.isInteractiveTopLevelEventType,Tn=[];function Sn(e){var t=e.targetInst,n=t;do{if(!n){e.ancestors.push(n);break}var r;for(r=n;r.return;)r=r.return;if(!(r=3!==r.tag?null:r.stateNode.containerInfo))break;e.ancestors.push(n),n=D(r)}while(n);for(n=0;n<e.ancestors.length;n++){t=e.ancestors[n];var o=Ie(e.nativeEvent);r=e.topLevelType;for(var i=e.nativeEvent,a=null,l=0;l<v.length;l++){var u=v[l];u&&(u=u.extractEvents(r,t,i,o))&&(a=x(a,u))}j(a)}}var Cn=!0;function xn(e,t){if(!t)return null;var n=(En(e)?On:Pn).bind(null,e);t.addEventListener(e,n,!1)}function gn(e,t){if(!t)return null;var n=(En(e)?On:Pn).bind(null,e);t.addEventListener(e,n,!0)}function On(e,t){Ue(Pn,e,t)}function Pn(e,t){if(Cn){var n=Ie(t);if(null===(n=D(n))||"number"!=typeof n.tag||2===tn(n)||(n=null),Tn.length){var r=Tn.pop();r.topLevelType=e,r.nativeEvent=t,r.targetInst=n,e=r}else e={topLevelType:e,nativeEvent:t,targetInst:n,ancestors:[]};try{Ae(Sn,e)}finally{e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>Tn.length&&Tn.push(e)}}}var Nn={},kn=0,jn="_reactListenersID"+(""+Math.random()).slice(2);function Rn(e){return Object.prototype.hasOwnProperty.call(e,jn)||(e[jn]=kn++,Nn[e[jn]]={}),Nn[e[jn]]}function Un(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function Ln(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function Dn(e,t){var n,r=Ln(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=Ln(r)}}function An(){for(var e=window,t=Un();t instanceof e.HTMLIFrameElement;){try{e=t.contentDocument.defaultView}catch(e){break}t=Un(e.document)}return t}function Mn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var Fn=J&&"documentMode"in document&&11>=document.documentMode,In={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},zn=null,Wn=null,$n=null,Qn=!1;function Yn(e,t){var n=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;return Qn||null==zn||zn!==Un(n)?null:("selectionStart"in(n=zn)&&Mn(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},$n&&en($n,n)?null:($n=n,(e=ue.getPooled(In.select,Wn,e,t)).type="select",e.target=zn,Y(e),e))}var Jn={eventTypes:In,extractEvents:function(e,t,n,r){var o,i=r.window===r?r.document:9===r.nodeType?r:r.ownerDocument;if(!(o=!i)){e:{i=Rn(i),o=b.onSelect;for(var a=0;a<o.length;a++){var l=o[a];if(!i.hasOwnProperty(l)||!i[l]){i=!1;break e}}i=!0}o=!i}if(o)return null;switch(i=t?M(t):window,e){case"focus":(Fe(i)||"true"===i.contentEditable)&&(zn=i,Wn=t,$n=null);break;case"blur":$n=Wn=zn=null;break;case"mousedown":Qn=!0;break;case"contextmenu":case"mouseup":case"dragend":return Qn=!1,Yn(n,r);case"selectionchange":if(Fn)break;case"keydown":case"keyup":return Yn(n,r)}return null}};function Xn(e,t){return e=o({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,function(e){null!=e&&(t+=e)}),t}(t.children))&&(e.children=t),e}function Kn(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+_t(n),t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function Zn(e,t){return null!=t.dangerouslySetInnerHTML&&a("91"),o({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function Vn(e,t){var n=t.value;null==n&&(n=t.defaultValue,null!=(t=t.children)&&(null!=n&&a("92"),Array.isArray(t)&&(1>=t.length||a("93"),t=t[0]),n=t),null==n&&(n="")),e._wrapperState={initialValue:_t(n)}}function Gn(e,t){var n=_t(t.value),r=_t(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function Bn(e){var t=e.textContent;t===e._wrapperState.initialValue&&(e.value=t)}N.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),E=F,T=A,S=M,N.injectEventPluginsByName({SimpleEventPlugin:bn,EnterLeaveEventPlugin:Bt,ChangeEventPlugin:It,SelectEventPlugin:Jn,BeforeInputEventPlugin:xe});var qn={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};function Hn(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function er(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?Hn(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var tr,nr=void 0,rr=(tr=function(e,t){if(e.namespaceURI!==qn.svg||"innerHTML"in e)e.innerHTML=t;else{for((nr=nr||document.createElement("div")).innerHTML="<svg>"+t+"</svg>",t=nr.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction(function(){return tr(e,t)})}:tr);function or(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var ir={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},ar=["Webkit","ms","Moz","O"];function lr(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||ir.hasOwnProperty(e)&&ir[e]?(""+t).trim():t+"px"}function ur(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=lr(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(ir).forEach(function(e){ar.forEach(function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),ir[t]=ir[e]})});var sr=o({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function cr(e,t){t&&(sr[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML)&&a("137",e,""),null!=t.dangerouslySetInnerHTML&&(null!=t.children&&a("60"),"object"==typeof t.dangerouslySetInnerHTML&&"__html"in t.dangerouslySetInnerHTML||a("61")),null!=t.style&&"object"!=typeof t.style&&a("62",""))}function pr(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function fr(e,t){var n=Rn(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=b[t];for(var r=0;r<t.length;r++){var o=t[r];if(!n.hasOwnProperty(o)||!n[o]){switch(o){case"scroll":gn("scroll",e);break;case"focus":case"blur":gn("focus",e),gn("blur",e),n.blur=!0,n.focus=!0;break;case"cancel":case"close":ze(o)&&gn(o,e);break;case"invalid":case"submit":case"reset":break;default:-1===te.indexOf(o)&&xn(o,e)}n[o]=!0}}}function dr(){}var yr=null,mr=null;function hr(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function vr(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var _r="function"==typeof setTimeout?setTimeout:void 0,wr="function"==typeof clearTimeout?clearTimeout:void 0;function br(e){for(e=e.nextSibling;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}function Er(e){for(e=e.firstChild;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}new Set;var Tr=[],Sr=-1;function Cr(e){0>Sr||(e.current=Tr[Sr],Tr[Sr]=null,Sr--)}function xr(e,t){Tr[++Sr]=e.current,e.current=t}var gr={},Or={current:gr},Pr={current:!1},Nr=gr;function kr(e,t){var n=e.type.contextTypes;if(!n)return gr;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,i={};for(o in n)i[o]=t[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=i),i}function jr(e){return null!=(e=e.childContextTypes)}function Rr(e){Cr(Pr),Cr(Or)}function Ur(e){Cr(Pr),Cr(Or)}function Lr(e,t,n){Or.current!==gr&&a("168"),xr(Or,t),xr(Pr,n)}function Dr(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var i in r=r.getChildContext())i in e||a("108",lt(t)||"Unknown",i);return o({},n,r)}function Ar(e){var t=e.stateNode;return t=t&&t.__reactInternalMemoizedMergedChildContext||gr,Nr=Or.current,xr(Or,t),xr(Pr,Pr.current),!0}function Mr(e,t,n){var r=e.stateNode;r||a("169"),n?(t=Dr(e,t,Nr),r.__reactInternalMemoizedMergedChildContext=t,Cr(Pr),Cr(Or),xr(Or,t)):Cr(Pr),xr(Pr,n)}var Fr=null,Ir=null;function zr(e){return function(t){try{return e(t)}catch(e){}}}function Wr(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.firstContextDependency=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function $r(e,t,n,r){return new Wr(e,t,n,r)}function Qr(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Yr(e,t){var n=e.alternate;return null===n?((n=$r(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=e.childExpirationTime,n.expirationTime=e.expirationTime,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,n.firstContextDependency=e.firstContextDependency,n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Jr(e,t,n,r,o,i){var l=2;if(r=e,"function"==typeof e)Qr(e)&&(l=1);else if("string"==typeof e)l=5;else e:switch(e){case Ve:return Xr(n.children,o,i,t);case et:return Kr(n,3|o,i,t);case Ge:return Kr(n,2|o,i,t);case Be:return(e=$r(12,n,t,4|o)).elementType=Be,e.type=Be,e.expirationTime=i,e;case nt:return(e=$r(13,n,t,o)).elementType=nt,e.type=nt,e.expirationTime=i,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case qe:l=10;break e;case He:l=9;break e;case tt:l=11;break e;case rt:l=14;break e;case ot:l=16,r=null;break e}a("130",null==e?e:typeof e,"")}return(t=$r(l,n,t,o)).elementType=e,t.type=r,t.expirationTime=i,t}function Xr(e,t,n,r){return(e=$r(7,e,r,t)).expirationTime=n,e}function Kr(e,t,n,r){return e=$r(8,e,r,t),t=0==(1&t)?Ge:et,e.elementType=t,e.type=t,e.expirationTime=n,e}function Zr(e,t,n){return(e=$r(6,e,null,t)).expirationTime=n,e}function Vr(e,t,n){return(t=$r(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Gr(e,t){e.didError=!1;var n=e.earliestPendingTime;0===n?e.earliestPendingTime=e.latestPendingTime=t:n<t?e.earliestPendingTime=t:e.latestPendingTime>t&&(e.latestPendingTime=t),Hr(t,e)}function Br(e,t){e.didError=!1,e.latestPingedTime>=t&&(e.latestPingedTime=0);var n=e.earliestPendingTime,r=e.latestPendingTime;n===t?e.earliestPendingTime=r===t?e.latestPendingTime=0:r:r===t&&(e.latestPendingTime=n),n=e.earliestSuspendedTime,r=e.latestSuspendedTime,0===n?e.earliestSuspendedTime=e.latestSuspendedTime=t:n<t?e.earliestSuspendedTime=t:r>t&&(e.latestSuspendedTime=t),Hr(t,e)}function qr(e,t){var n=e.earliestPendingTime;return n>t&&(t=n),(e=e.earliestSuspendedTime)>t&&(t=e),t}function Hr(e,t){var n=t.earliestSuspendedTime,r=t.latestSuspendedTime,o=t.earliestPendingTime,i=t.latestPingedTime;0===(o=0!==o?o:i)&&(0===e||r<e)&&(o=r),0!==(e=o)&&n>e&&(e=n),t.nextExpirationTimeToWorkOn=o,t.expirationTime=e}var eo=!1;function to(e){return{baseState:e,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function no(e){return{baseState:e.baseState,firstUpdate:e.firstUpdate,lastUpdate:e.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function ro(e){return{expirationTime:e,tag:0,payload:null,callback:null,next:null,nextEffect:null}}function oo(e,t){null===e.lastUpdate?e.firstUpdate=e.lastUpdate=t:(e.lastUpdate.next=t,e.lastUpdate=t)}function io(e,t){var n=e.alternate;if(null===n){var r=e.updateQueue,o=null;null===r&&(r=e.updateQueue=to(e.memoizedState))}else r=e.updateQueue,o=n.updateQueue,null===r?null===o?(r=e.updateQueue=to(e.memoizedState),o=n.updateQueue=to(n.memoizedState)):r=e.updateQueue=no(o):null===o&&(o=n.updateQueue=no(r));null===o||r===o?oo(r,t):null===r.lastUpdate||null===o.lastUpdate?(oo(r,t),oo(o,t)):(oo(r,t),o.lastUpdate=t)}function ao(e,t){var n=e.updateQueue;null===(n=null===n?e.updateQueue=to(e.memoizedState):lo(e,n)).lastCapturedUpdate?n.firstCapturedUpdate=n.lastCapturedUpdate=t:(n.lastCapturedUpdate.next=t,n.lastCapturedUpdate=t)}function lo(e,t){var n=e.alternate;return null!==n&&t===n.updateQueue&&(t=e.updateQueue=no(t)),t}function uo(e,t,n,r,i,a){switch(n.tag){case 1:return"function"==typeof(e=n.payload)?e.call(a,r,i):e;case 3:e.effectTag=-2049&e.effectTag|64;case 0:if(null==(i="function"==typeof(e=n.payload)?e.call(a,r,i):e))break;return o({},r,i);case 2:eo=!0}return r}function so(e,t,n,r,o){eo=!1;for(var i=(t=lo(e,t)).baseState,a=null,l=0,u=t.firstUpdate,s=i;null!==u;){var c=u.expirationTime;c<o?(null===a&&(a=u,i=s),l<c&&(l=c)):(s=uo(e,0,u,s,n,r),null!==u.callback&&(e.effectTag|=32,u.nextEffect=null,null===t.lastEffect?t.firstEffect=t.lastEffect=u:(t.lastEffect.nextEffect=u,t.lastEffect=u))),u=u.next}for(c=null,u=t.firstCapturedUpdate;null!==u;){var p=u.expirationTime;p<o?(null===c&&(c=u,null===a&&(i=s)),l<p&&(l=p)):(s=uo(e,0,u,s,n,r),null!==u.callback&&(e.effectTag|=32,u.nextEffect=null,null===t.lastCapturedEffect?t.firstCapturedEffect=t.lastCapturedEffect=u:(t.lastCapturedEffect.nextEffect=u,t.lastCapturedEffect=u))),u=u.next}null===a&&(t.lastUpdate=null),null===c?t.lastCapturedUpdate=null:e.effectTag|=32,null===a&&null===c&&(i=s),t.baseState=i,t.firstUpdate=a,t.firstCapturedUpdate=c,e.expirationTime=l,e.memoizedState=s}function co(e,t,n){null!==t.firstCapturedUpdate&&(null!==t.lastUpdate&&(t.lastUpdate.next=t.firstCapturedUpdate,t.lastUpdate=t.lastCapturedUpdate),t.firstCapturedUpdate=t.lastCapturedUpdate=null),po(t.firstEffect,n),t.firstEffect=t.lastEffect=null,po(t.firstCapturedEffect,n),t.firstCapturedEffect=t.lastCapturedEffect=null}function po(e,t){for(;null!==e;){var n=e.callback;if(null!==n){e.callback=null;var r=t;"function"!=typeof n&&a("191",n),n.call(r)}e=e.nextEffect}}function fo(e,t){return{value:e,source:t,stack:ut(t)}}var yo={current:null},mo=null,ho=null,vo=null;function _o(e,t){var n=e.type._context;xr(yo,n._currentValue),n._currentValue=t}function wo(e){var t=yo.current;Cr(yo),e.type._context._currentValue=t}function bo(e){mo=e,vo=ho=null,e.firstContextDependency=null}function Eo(e,t){return vo!==e&&!1!==t&&0!==t&&("number"==typeof t&&1073741823!==t||(vo=e,t=1073741823),t={context:e,observedBits:t,next:null},null===ho?(null===mo&&a("293"),mo.firstContextDependency=ho=t):ho=ho.next=t),e._currentValue}var To={},So={current:To},Co={current:To},xo={current:To};function go(e){return e===To&&a("174"),e}function Oo(e,t){xr(xo,t),xr(Co,e),xr(So,To);var n=t.nodeType;switch(n){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:er(null,"");break;default:t=er(t=(n=8===n?t.parentNode:t).namespaceURI||null,n=n.tagName)}Cr(So),xr(So,t)}function Po(e){Cr(So),Cr(Co),Cr(xo)}function No(e){go(xo.current);var t=go(So.current),n=er(t,e.type);t!==n&&(xr(Co,e),xr(So,n))}function ko(e){Co.current===e&&(Cr(So),Cr(Co))}function jo(e,t){if(e&&e.defaultProps)for(var n in t=o({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}var Ro=Ye.ReactCurrentOwner,Uo=(new r.Component).refs;function Lo(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:o({},t,n),e.memoizedState=n,null!==(r=e.updateQueue)&&0===e.expirationTime&&(r.baseState=n)}var Do={isMounted:function(e){return!!(e=e._reactInternalFiber)&&2===tn(e)},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=ga(),o=ro(r=qi(r,e));o.payload=t,null!=n&&(o.callback=n),Ki(),io(e,o),ta(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=ga(),o=ro(r=qi(r,e));o.tag=1,o.payload=t,null!=n&&(o.callback=n),Ki(),io(e,o),ta(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=ga(),r=ro(n=qi(n,e));r.tag=2,null!=t&&(r.callback=t),Ki(),io(e,r),ta(e,n)}};function Ao(e,t,n,r,o,i,a){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,i,a):!t.prototype||!t.prototype.isPureReactComponent||(!en(n,r)||!en(o,i))}function Mo(e,t,n){var r=!1,o=gr,i=t.contextType;return"object"==typeof i&&null!==i?i=Ro.currentDispatcher.readContext(i):(o=jr(t)?Nr:Or.current,i=(r=null!=(r=t.contextTypes))?kr(e,o):gr),t=new t(n,i),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=Do,e.stateNode=t,t._reactInternalFiber=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=i),t}function Fo(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&Do.enqueueReplaceState(t,t.state,null)}function Io(e,t,n,r){var o=e.stateNode;o.props=n,o.state=e.memoizedState,o.refs=Uo;var i=t.contextType;"object"==typeof i&&null!==i?o.context=Ro.currentDispatcher.readContext(i):(i=jr(t)?Nr:Or.current,o.context=kr(e,i)),null!==(i=e.updateQueue)&&(so(e,i,n,o,r),o.state=e.memoizedState),"function"==typeof(i=t.getDerivedStateFromProps)&&(Lo(e,t,i,n),o.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(t=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),t!==o.state&&Do.enqueueReplaceState(o,o.state,null),null!==(i=e.updateQueue)&&(so(e,i,n,o,r),o.state=e.memoizedState)),"function"==typeof o.componentDidMount&&(e.effectTag|=4)}var zo=Array.isArray;function Wo(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){n=n._owner;var r=void 0;n&&(1!==n.tag&&a("289"),r=n.stateNode),r||a("147",e);var o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:((t=function(e){var t=r.refs;t===Uo&&(t=r.refs={}),null===e?delete t[o]:t[o]=e})._stringRef=o,t)}"string"!=typeof e&&a("284"),n._owner||a("290",e)}return e}function $o(e,t){"textarea"!==e.type&&a("31","[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,"")}function Qo(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t,n){return(e=Yr(e,t)).index=0,e.sibling=null,e}function i(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function l(t){return e&&null===t.alternate&&(t.effectTag=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=Zr(n,e.mode,r)).return=e,t):((t=o(t,n)).return=e,t)}function s(e,t,n,r){return null!==t&&t.elementType===n.type?((r=o(t,n.props)).ref=Wo(e,t,n),r.return=e,r):((r=Jr(n.type,n.key,n.props,null,e.mode,r)).ref=Wo(e,t,n),r.return=e,r)}function c(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Vr(n,e.mode,r)).return=e,t):((t=o(t,n.children||[])).return=e,t)}function p(e,t,n,r,i){return null===t||7!==t.tag?((t=Xr(n,e.mode,r,i)).return=e,t):((t=o(t,n)).return=e,t)}function f(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Zr(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case Ke:return(n=Jr(t.type,t.key,t.props,null,e.mode,n)).ref=Wo(e,null,t),n.return=e,n;case Ze:return(t=Vr(t,e.mode,n)).return=e,t}if(zo(t)||at(t))return(t=Xr(t,e.mode,n,null)).return=e,t;$o(e,t)}return null}function d(e,t,n,r){var o=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==o?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case Ke:return n.key===o?n.type===Ve?p(e,t,n.props.children,r,o):s(e,t,n,r):null;case Ze:return n.key===o?c(e,t,n,r):null}if(zo(n)||at(n))return null!==o?null:p(e,t,n,r,null);$o(e,n)}return null}function y(e,t,n,r,o){if("string"==typeof r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case Ke:return e=e.get(null===r.key?n:r.key)||null,r.type===Ve?p(t,e,r.props.children,o,r.key):s(t,e,r,o);case Ze:return c(t,e=e.get(null===r.key?n:r.key)||null,r,o)}if(zo(r)||at(r))return p(t,e=e.get(n)||null,r,o,null);$o(t,r)}return null}function m(o,a,l,u){for(var s=null,c=null,p=a,m=a=0,h=null;null!==p&&m<l.length;m++){p.index>m?(h=p,p=null):h=p.sibling;var v=d(o,p,l[m],u);if(null===v){null===p&&(p=h);break}e&&p&&null===v.alternate&&t(o,p),a=i(v,a,m),null===c?s=v:c.sibling=v,c=v,p=h}if(m===l.length)return n(o,p),s;if(null===p){for(;m<l.length;m++)(p=f(o,l[m],u))&&(a=i(p,a,m),null===c?s=p:c.sibling=p,c=p);return s}for(p=r(o,p);m<l.length;m++)(h=y(p,o,m,l[m],u))&&(e&&null!==h.alternate&&p.delete(null===h.key?m:h.key),a=i(h,a,m),null===c?s=h:c.sibling=h,c=h);return e&&p.forEach(function(e){return t(o,e)}),s}function h(o,l,u,s){var c=at(u);"function"!=typeof c&&a("150"),null==(u=c.call(u))&&a("151");for(var p=c=null,m=l,h=l=0,v=null,_=u.next();null!==m&&!_.done;h++,_=u.next()){m.index>h?(v=m,m=null):v=m.sibling;var w=d(o,m,_.value,s);if(null===w){m||(m=v);break}e&&m&&null===w.alternate&&t(o,m),l=i(w,l,h),null===p?c=w:p.sibling=w,p=w,m=v}if(_.done)return n(o,m),c;if(null===m){for(;!_.done;h++,_=u.next())null!==(_=f(o,_.value,s))&&(l=i(_,l,h),null===p?c=_:p.sibling=_,p=_);return c}for(m=r(o,m);!_.done;h++,_=u.next())null!==(_=y(m,o,h,_.value,s))&&(e&&null!==_.alternate&&m.delete(null===_.key?h:_.key),l=i(_,l,h),null===p?c=_:p.sibling=_,p=_);return e&&m.forEach(function(e){return t(o,e)}),c}return function(e,r,i,u){var s="object"==typeof i&&null!==i&&i.type===Ve&&null===i.key;s&&(i=i.props.children);var c="object"==typeof i&&null!==i;if(c)switch(i.$$typeof){case Ke:e:{for(c=i.key,s=r;null!==s;){if(s.key===c){if(7===s.tag?i.type===Ve:s.elementType===i.type){n(e,s.sibling),(r=o(s,i.type===Ve?i.props.children:i.props)).ref=Wo(e,s,i),r.return=e,e=r;break e}n(e,s);break}t(e,s),s=s.sibling}i.type===Ve?((r=Xr(i.props.children,e.mode,u,i.key)).return=e,e=r):((u=Jr(i.type,i.key,i.props,null,e.mode,u)).ref=Wo(e,r,i),u.return=e,e=u)}return l(e);case Ze:e:{for(s=i.key;null!==r;){if(r.key===s){if(4===r.tag&&r.stateNode.containerInfo===i.containerInfo&&r.stateNode.implementation===i.implementation){n(e,r.sibling),(r=o(r,i.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Vr(i,e.mode,u)).return=e,e=r}return l(e)}if("string"==typeof i||"number"==typeof i)return i=""+i,null!==r&&6===r.tag?(n(e,r.sibling),(r=o(r,i)).return=e,e=r):(n(e,r),(r=Zr(i,e.mode,u)).return=e,e=r),l(e);if(zo(i))return m(e,r,i,u);if(at(i))return h(e,r,i,u);if(c&&$o(e,i),void 0===i&&!s)switch(e.tag){case 1:case 0:a("152",(u=e.type).displayName||u.name||"Component")}return n(e,r)}}var Yo=Qo(!0),Jo=Qo(!1),Xo=null,Ko=null,Zo=!1;function Vo(e,t){var n=$r(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function Go(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);default:return!1}}function Bo(e){if(Zo){var t=Ko;if(t){var n=t;if(!Go(e,t)){if(!(t=br(n))||!Go(e,t))return e.effectTag|=2,Zo=!1,void(Xo=e);Vo(Xo,n)}Xo=e,Ko=Er(t)}else e.effectTag|=2,Zo=!1,Xo=e}}function qo(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag;)e=e.return;Xo=e}function Ho(e){if(e!==Xo)return!1;if(!Zo)return qo(e),Zo=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!vr(t,e.memoizedProps))for(t=Ko;t;)Vo(e,t),t=br(t);return qo(e),Ko=Xo?br(e.stateNode):null,!0}function ei(){Ko=Xo=null,Zo=!1}var ti=Ye.ReactCurrentOwner;function ni(e,t,n,r){t.child=null===e?Jo(t,null,n,r):Yo(t,e.child,n,r)}function ri(e,t,n,r,o){n=n.render;var i=t.ref;return bo(t),r=n(r,i),t.effectTag|=1,ni(e,t,r,o),t.child}function oi(e,t,n,r,o,i){if(null===e){var a=n.type;return"function"!=typeof a||Qr(a)||void 0!==a.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Jr(n.type,null,r,null,t.mode,i)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=a,ii(e,t,a,r,o,i))}return a=e.child,o<i&&(o=a.memoizedProps,(n=null!==(n=n.compare)?n:en)(o,r)&&e.ref===t.ref)?fi(e,t,i):(t.effectTag|=1,(e=Yr(a,r)).ref=t.ref,e.return=t,t.child=e)}function ii(e,t,n,r,o,i){return null!==e&&o<i&&en(e.memoizedProps,r)&&e.ref===t.ref?fi(e,t,i):li(e,t,n,r,i)}function ai(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function li(e,t,n,r,o){var i=jr(n)?Nr:Or.current;return i=kr(t,i),bo(t),n=n(r,i),t.effectTag|=1,ni(e,t,n,o),t.child}function ui(e,t,n,r,o){if(jr(n)){var i=!0;Ar(t)}else i=!1;if(bo(t),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),Mo(t,n,r),Io(t,n,r,o),r=!0;else if(null===e){var a=t.stateNode,l=t.memoizedProps;a.props=l;var u=a.context,s=n.contextType;"object"==typeof s&&null!==s?s=Ro.currentDispatcher.readContext(s):s=kr(t,s=jr(n)?Nr:Or.current);var c=n.getDerivedStateFromProps,p="function"==typeof c||"function"==typeof a.getSnapshotBeforeUpdate;p||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(l!==r||u!==s)&&Fo(t,a,r,s),eo=!1;var f=t.memoizedState;u=a.state=f;var d=t.updateQueue;null!==d&&(so(t,d,r,a,o),u=t.memoizedState),l!==r||f!==u||Pr.current||eo?("function"==typeof c&&(Lo(t,n,c,r),u=t.memoizedState),(l=eo||Ao(t,n,l,r,f,u,s))?(p||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||("function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount()),"function"==typeof a.componentDidMount&&(t.effectTag|=4)):("function"==typeof a.componentDidMount&&(t.effectTag|=4),t.memoizedProps=r,t.memoizedState=u),a.props=r,a.state=u,a.context=s,r=l):("function"==typeof a.componentDidMount&&(t.effectTag|=4),r=!1)}else a=t.stateNode,l=t.memoizedProps,a.props=t.type===t.elementType?l:jo(t.type,l),u=a.context,"object"==typeof(s=n.contextType)&&null!==s?s=Ro.currentDispatcher.readContext(s):s=kr(t,s=jr(n)?Nr:Or.current),(p="function"==typeof(c=n.getDerivedStateFromProps)||"function"==typeof a.getSnapshotBeforeUpdate)||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(l!==r||u!==s)&&Fo(t,a,r,s),eo=!1,u=t.memoizedState,f=a.state=u,null!==(d=t.updateQueue)&&(so(t,d,r,a,o),f=t.memoizedState),l!==r||u!==f||Pr.current||eo?("function"==typeof c&&(Lo(t,n,c,r),f=t.memoizedState),(c=eo||Ao(t,n,l,r,u,f,s))?(p||"function"!=typeof a.UNSAFE_componentWillUpdate&&"function"!=typeof a.componentWillUpdate||("function"==typeof a.componentWillUpdate&&a.componentWillUpdate(r,f,s),"function"==typeof a.UNSAFE_componentWillUpdate&&a.UNSAFE_componentWillUpdate(r,f,s)),"function"==typeof a.componentDidUpdate&&(t.effectTag|=4),"function"==typeof a.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!=typeof a.componentDidUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof a.getSnapshotBeforeUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),t.memoizedProps=r,t.memoizedState=f),a.props=r,a.state=f,a.context=s,r=c):("function"!=typeof a.componentDidUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof a.getSnapshotBeforeUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),r=!1);return si(e,t,n,r,i,o)}function si(e,t,n,r,o,i){ai(e,t);var a=0!=(64&t.effectTag);if(!r&&!a)return o&&Mr(t,n,!1),fi(e,t,i);r=t.stateNode,ti.current=t;var l=a&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.effectTag|=1,null!==e&&a?(t.child=Yo(t,e.child,null,i),t.child=Yo(t,null,l,i)):ni(e,t,l,i),t.memoizedState=r.state,o&&Mr(t,n,!0),t.child}function ci(e){var t=e.stateNode;t.pendingContext?Lr(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Lr(0,t.context,!1),Oo(e,t.containerInfo)}function pi(e,t,n){var r=t.mode,o=t.pendingProps,i=t.memoizedState;if(0==(64&t.effectTag)){i=null;var a=!1}else i={timedOutAt:null!==i?i.timedOutAt:0},a=!0,t.effectTag&=-65;if(null===e)if(a){var l=o.fallback;e=Xr(null,r,0,null),0==(1&t.mode)&&(e.child=null!==t.memoizedState?t.child.child:t.child),r=Xr(l,r,n,null),e.sibling=r,(n=e).return=r.return=t}else n=r=Jo(t,null,o.children,n);else null!==e.memoizedState?(l=(r=e.child).sibling,a?(n=o.fallback,o=Yr(r,r.pendingProps),0==(1&t.mode)&&((a=null!==t.memoizedState?t.child.child:t.child)!==r.child&&(o.child=a)),r=o.sibling=Yr(l,n,l.expirationTime),n=o,o.childExpirationTime=0,n.return=r.return=t):n=r=Yo(t,r.child,o.children,n)):(l=e.child,a?(a=o.fallback,(o=Xr(null,r,0,null)).child=l,0==(1&t.mode)&&(o.child=null!==t.memoizedState?t.child.child:t.child),(r=o.sibling=Xr(a,r,n,null)).effectTag|=2,n=o,o.childExpirationTime=0,n.return=r.return=t):r=n=Yo(t,l,o.children,n)),t.stateNode=e.stateNode;return t.memoizedState=i,t.child=n,r}function fi(e,t,n){if(null!==e&&(t.firstContextDependency=e.firstContextDependency),t.childExpirationTime<n)return null;if(null!==e&&t.child!==e.child&&a("153"),null!==t.child){for(n=Yr(e=t.child,e.pendingProps,e.expirationTime),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Yr(e,e.pendingProps,e.expirationTime)).return=t;n.sibling=null}return t.child}function di(e,t,n){var r=t.expirationTime;if(null!==e&&e.memoizedProps===t.pendingProps&&!Pr.current&&r<n){switch(t.tag){case 3:ci(t),ei();break;case 5:No(t);break;case 1:jr(t.type)&&Ar(t);break;case 4:Oo(t,t.stateNode.containerInfo);break;case 10:_o(t,t.memoizedProps.value);break;case 13:if(null!==t.memoizedState)return 0!==(r=t.child.childExpirationTime)&&r>=n?pi(e,t,n):null!==(t=fi(e,t,n))?t.sibling:null}return fi(e,t,n)}switch(t.expirationTime=0,t.tag){case 2:r=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps;var o=kr(t,Or.current);if(bo(t),o=r(e,o),t.effectTag|=1,"object"==typeof o&&null!==o&&"function"==typeof o.render&&void 0===o.$$typeof){if(t.tag=1,jr(r)){var i=!0;Ar(t)}else i=!1;t.memoizedState=null!==o.state&&void 0!==o.state?o.state:null;var l=r.getDerivedStateFromProps;"function"==typeof l&&Lo(t,r,l,e),o.updater=Do,t.stateNode=o,o._reactInternalFiber=t,Io(t,r,e,n),t=si(null,t,r,!0,i,n)}else t.tag=0,ni(null,t,o,n),t=t.child;return t;case 16:switch(o=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),i=t.pendingProps,e=function(e){var t=e._result;switch(e._status){case 1:return t;case 2:case 0:throw t;default:throw e._status=0,(t=(t=e._ctor)()).then(function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)},function(t){0===e._status&&(e._status=2,e._result=t)}),e._result=t,t}}(o),t.type=e,o=t.tag=function(e){if("function"==typeof e)return Qr(e)?1:0;if(null!=e){if((e=e.$$typeof)===tt)return 11;if(e===rt)return 14}return 2}(e),i=jo(e,i),l=void 0,o){case 0:l=li(null,t,e,i,n);break;case 1:l=ui(null,t,e,i,n);break;case 11:l=ri(null,t,e,i,n);break;case 14:l=oi(null,t,e,jo(e.type,i),r,n);break;default:a("306",e,"")}return l;case 0:return r=t.type,o=t.pendingProps,li(e,t,r,o=t.elementType===r?o:jo(r,o),n);case 1:return r=t.type,o=t.pendingProps,ui(e,t,r,o=t.elementType===r?o:jo(r,o),n);case 3:return ci(t),null===(r=t.updateQueue)&&a("282"),o=null!==(o=t.memoizedState)?o.element:null,so(t,r,t.pendingProps,null,n),(r=t.memoizedState.element)===o?(ei(),t=fi(e,t,n)):(o=t.stateNode,(o=(null===e||null===e.child)&&o.hydrate)&&(Ko=Er(t.stateNode.containerInfo),Xo=t,o=Zo=!0),o?(t.effectTag|=2,t.child=Jo(t,null,r,n)):(ni(e,t,r,n),ei()),t=t.child),t;case 5:return No(t),null===e&&Bo(t),r=t.type,o=t.pendingProps,i=null!==e?e.memoizedProps:null,l=o.children,vr(r,o)?l=null:null!==i&&vr(r,i)&&(t.effectTag|=16),ai(e,t),1!==n&&1&t.mode&&o.hidden?(t.expirationTime=1,t=null):(ni(e,t,l,n),t=t.child),t;case 6:return null===e&&Bo(t),null;case 13:return pi(e,t,n);case 4:return Oo(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=Yo(t,null,r,n):ni(e,t,r,n),t.child;case 11:return r=t.type,o=t.pendingProps,ri(e,t,r,o=t.elementType===r?o:jo(r,o),n);case 7:return ni(e,t,t.pendingProps,n),t.child;case 8:case 12:return ni(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(r=t.type._context,o=t.pendingProps,l=t.memoizedProps,_o(t,i=o.value),null!==l){var u=l.value;if(0===(i=u===i&&(0!==u||1/u==1/i)||u!=u&&i!=i?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,i):1073741823))){if(l.children===o.children&&!Pr.current){t=fi(e,t,n);break e}}else for(null!==(l=t.child)&&(l.return=t);null!==l;){if(null!==(u=l.firstContextDependency))do{if(u.context===r&&0!=(u.observedBits&i)){if(1===l.tag){var s=ro(n);s.tag=2,io(l,s)}l.expirationTime<n&&(l.expirationTime=n),null!==(s=l.alternate)&&s.expirationTime<n&&(s.expirationTime=n);for(var c=l.return;null!==c;){if(s=c.alternate,c.childExpirationTime<n)c.childExpirationTime=n,null!==s&&s.childExpirationTime<n&&(s.childExpirationTime=n);else{if(!(null!==s&&s.childExpirationTime<n))break;s.childExpirationTime=n}c=c.return}}s=l.child,u=u.next}while(null!==u);else s=10===l.tag&&l.type===t.type?null:l.child;if(null!==s)s.return=l;else for(s=l;null!==s;){if(s===t){s=null;break}if(null!==(l=s.sibling)){l.return=s.return,s=l;break}s=s.return}l=s}}ni(e,t,o.children,n),t=t.child}return t;case 9:return o=t.type,r=(i=t.pendingProps).children,bo(t),r=r(o=Eo(o,i.unstable_observedBits)),t.effectTag|=1,ni(e,t,r,n),t.child;case 14:return i=jo(o=t.type,t.pendingProps),oi(e,t,o,i=jo(o.type,i),r,n);case 15:return ii(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,o=t.pendingProps,o=t.elementType===r?o:jo(r,o),null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),t.tag=1,jr(r)?(e=!0,Ar(t)):e=!1,bo(t),Mo(t,r,o),Io(t,r,o,n),si(null,t,r,!0,e,n);default:a("156")}}function yi(e){e.effectTag|=4}var mi=void 0,hi=void 0,vi=void 0,_i=void 0;mi=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},hi=function(){},vi=function(e,t,n,r,i){var a=e.memoizedProps;if(a!==r){var l=t.stateNode;switch(go(So.current),e=null,n){case"input":a=wt(l,a),r=wt(l,r),e=[];break;case"option":a=Xn(l,a),r=Xn(l,r),e=[];break;case"select":a=o({},a,{value:void 0}),r=o({},r,{value:void 0}),e=[];break;case"textarea":a=Zn(l,a),r=Zn(l,r),e=[];break;default:"function"!=typeof a.onClick&&"function"==typeof r.onClick&&(l.onclick=dr)}cr(n,r),l=n=void 0;var u=null;for(n in a)if(!r.hasOwnProperty(n)&&a.hasOwnProperty(n)&&null!=a[n])if("style"===n){var s=a[n];for(l in s)s.hasOwnProperty(l)&&(u||(u={}),u[l]="")}else"dangerouslySetInnerHTML"!==n&&"children"!==n&&"suppressContentEditableWarning"!==n&&"suppressHydrationWarning"!==n&&"autoFocus"!==n&&(w.hasOwnProperty(n)?e||(e=[]):(e=e||[]).push(n,null));for(n in r){var c=r[n];if(s=null!=a?a[n]:void 0,r.hasOwnProperty(n)&&c!==s&&(null!=c||null!=s))if("style"===n)if(s){for(l in s)!s.hasOwnProperty(l)||c&&c.hasOwnProperty(l)||(u||(u={}),u[l]="");for(l in c)c.hasOwnProperty(l)&&s[l]!==c[l]&&(u||(u={}),u[l]=c[l])}else u||(e||(e=[]),e.push(n,u)),u=c;else"dangerouslySetInnerHTML"===n?(c=c?c.__html:void 0,s=s?s.__html:void 0,null!=c&&s!==c&&(e=e||[]).push(n,""+c)):"children"===n?s===c||"string"!=typeof c&&"number"!=typeof c||(e=e||[]).push(n,""+c):"suppressContentEditableWarning"!==n&&"suppressHydrationWarning"!==n&&(w.hasOwnProperty(n)?(null!=c&&fr(i,n),e||s===c||(e=[])):(e=e||[]).push(n,c))}u&&(e=e||[]).push("style",u),i=e,(t.updateQueue=i)&&yi(t)}},_i=function(e,t,n,r){n!==r&&yi(t)};var wi="function"==typeof WeakSet?WeakSet:Set;function bi(e,t){var n=t.source,r=t.stack;null===r&&null!==n&&(r=ut(n)),null!==n&&lt(n.type),t=t.value,null!==e&&1===e.tag&&lt(e.type);try{console.error(t)}catch(e){setTimeout(function(){throw e})}}function Ei(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){Bi(e,t)}else t.current=null}function Ti(e){switch("function"==typeof Ir&&Ir(e),e.tag){case 0:case 11:case 14:case 15:var t=e.updateQueue;if(null!==t&&null!==(t=t.lastEffect)){var n=t=t.next;do{var r=n.destroy;if(null!==r){var o=e;try{r()}catch(e){Bi(o,e)}}n=n.next}while(n!==t)}break;case 1:if(Ei(e),"function"==typeof(t=e.stateNode).componentWillUnmount)try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){Bi(e,t)}break;case 5:Ei(e);break;case 4:xi(e)}}function Si(e){return 5===e.tag||3===e.tag||4===e.tag}function Ci(e){e:{for(var t=e.return;null!==t;){if(Si(t)){var n=t;break e}t=t.return}a("160"),n=void 0}var r=t=void 0;switch(n.tag){case 5:t=n.stateNode,r=!1;break;case 3:case 4:t=n.stateNode.containerInfo,r=!0;break;default:a("161")}16&n.effectTag&&(or(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||Si(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}for(var o=e;;){if(5===o.tag||6===o.tag)if(n)if(r){var i=t,l=o.stateNode,u=n;8===i.nodeType?i.parentNode.insertBefore(l,u):i.insertBefore(l,u)}else t.insertBefore(o.stateNode,n);else r?(l=t,u=o.stateNode,8===l.nodeType?(i=l.parentNode).insertBefore(u,l):(i=l).appendChild(u),null!=(l=l._reactRootContainer)||null!==i.onclick||(i.onclick=dr)):t.appendChild(o.stateNode);else if(4!==o.tag&&null!==o.child){o.child.return=o,o=o.child;continue}if(o===e)break;for(;null===o.sibling;){if(null===o.return||o.return===e)return;o=o.return}o.sibling.return=o.return,o=o.sibling}}function xi(e){for(var t=e,n=!1,r=void 0,o=void 0;;){if(!n){n=t.return;e:for(;;){switch(null===n&&a("160"),n.tag){case 5:r=n.stateNode,o=!1;break e;case 3:case 4:r=n.stateNode.containerInfo,o=!0;break e}n=n.return}n=!0}if(5===t.tag||6===t.tag){e:for(var i=t,l=i;;)if(Ti(l),null!==l.child&&4!==l.tag)l.child.return=l,l=l.child;else{if(l===i)break;for(;null===l.sibling;){if(null===l.return||l.return===i)break e;l=l.return}l.sibling.return=l.return,l=l.sibling}o?(i=r,l=t.stateNode,8===i.nodeType?i.parentNode.removeChild(l):i.removeChild(l)):r.removeChild(t.stateNode)}else if(4===t.tag?(r=t.stateNode.containerInfo,o=!0):Ti(t),null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return;4===(t=t.return).tag&&(n=!1)}t.sibling.return=t.return,t=t.sibling}}function gi(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 1:break;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps;e=null!==e?e.memoizedProps:r;var o=t.type,i=t.updateQueue;t.updateQueue=null,null!==i&&function(e,t,n,r,o){e[L]=o,"input"===n&&"radio"===o.type&&null!=o.name&&Et(e,o),pr(n,r),r=pr(n,o);for(var i=0;i<t.length;i+=2){var a=t[i],l=t[i+1];"style"===a?ur(e,l):"dangerouslySetInnerHTML"===a?rr(e,l):"children"===a?or(e,l):vt(e,a,l,r)}switch(n){case"input":Tt(e,o);break;case"textarea":Gn(e,o);break;case"select":t=e._wrapperState.wasMultiple,e._wrapperState.wasMultiple=!!o.multiple,null!=(n=o.value)?Kn(e,!!o.multiple,n,!1):t!==!!o.multiple&&(null!=o.defaultValue?Kn(e,!!o.multiple,o.defaultValue,!0):Kn(e,!!o.multiple,o.multiple?[]:"",!1))}}(n,i,o,e,r)}break;case 6:null===t.stateNode&&a("162"),t.stateNode.nodeValue=t.memoizedProps;break;case 3:case 12:break;case 13:if(n=t.memoizedState,r=void 0,e=t,null===n?r=!1:(r=!0,e=t.child,0===n.timedOutAt&&(n.timedOutAt=ga())),null!==e&&function(e,t){for(var n=e;;){if(5===n.tag){var r=n.stateNode;if(t)r.style.display="none";else{r=n.stateNode;var o=n.memoizedProps.style;o=null!=o&&o.hasOwnProperty("display")?o.display:null,r.style.display=lr("display",o)}}else if(6===n.tag)n.stateNode.nodeValue=t?"":n.memoizedProps;else{if(13===n.tag&&null!==n.memoizedState){(r=n.child.sibling).return=n,n=r;continue}if(null!==n.child){n.child.return=n,n=n.child;continue}}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}}(e,r),null!==(n=t.updateQueue)){t.updateQueue=null;var l=t.stateNode;null===l&&(l=t.stateNode=new wi),n.forEach(function(e){var n=function(e,t){var n=e.stateNode;null!==n&&n.delete(t),t=qi(t=ga(),e),null!==(e=ea(e,t))&&(Gr(e,t),0!==(t=e.expirationTime)&&Oa(e,t))}.bind(null,t,e);l.has(e)||(l.add(e),e.then(n,n))})}break;case 17:break;default:a("163")}}var Oi="function"==typeof WeakMap?WeakMap:Map;function Pi(e,t,n){(n=ro(n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Aa(r),bi(e,t)},n}function Ni(e,t,n){(n=ro(n)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var o=t.value;n.payload=function(){return r(o)}}var i=e.stateNode;return null!==i&&"function"==typeof i.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===Ji?Ji=new Set([this]):Ji.add(this));var n=t.value,o=t.stack;bi(e,t),this.componentDidCatch(n,{componentStack:null!==o?o:""})}),n}function ki(e){switch(e.tag){case 1:jr(e.type)&&Rr();var t=e.effectTag;return 2048&t?(e.effectTag=-2049&t|64,e):null;case 3:return Po(),Ur(),0!=(64&(t=e.effectTag))&&a("285"),e.effectTag=-2049&t|64,e;case 5:return ko(e),null;case 13:return 2048&(t=e.effectTag)?(e.effectTag=-2049&t|64,e):null;case 4:return Po(),null;case 10:return wo(e),null;default:return null}}var ji={readContext:Eo},Ri=Ye.ReactCurrentOwner,Ui=1073741822,Li=0,Di=!1,Ai=null,Mi=null,Fi=0,Ii=-1,zi=!1,Wi=null,$i=!1,Qi=null,Yi=null,Ji=null;function Xi(){if(null!==Ai)for(var e=Ai.return;null!==e;){var t=e;switch(t.tag){case 1:var n=t.type.childContextTypes;null!=n&&Rr();break;case 3:Po(),Ur();break;case 5:ko(t);break;case 4:Po();break;case 10:wo(t)}e=e.return}Mi=null,Fi=0,Ii=-1,zi=!1,Ai=null}function Ki(){null!==Yi&&(i.unstable_cancelCallback(Qi),Yi())}function Zi(e){for(;;){var t=e.alternate,n=e.return,r=e.sibling;if(0==(1024&e.effectTag)){Ai=e;e:{var i=t,l=Fi,u=(t=e).pendingProps;switch(t.tag){case 2:case 16:break;case 15:case 0:break;case 1:jr(t.type)&&Rr();break;case 3:Po(),Ur(),(u=t.stateNode).pendingContext&&(u.context=u.pendingContext,u.pendingContext=null),null!==i&&null!==i.child||(Ho(t),t.effectTag&=-3),hi(t);break;case 5:ko(t);var s=go(xo.current);if(l=t.type,null!==i&&null!=t.stateNode)vi(i,t,l,u,s),i.ref!==t.ref&&(t.effectTag|=128);else if(u){var c=go(So.current);if(Ho(t)){i=(u=t).stateNode;var p=u.type,f=u.memoizedProps,d=s;switch(i[U]=u,i[L]=f,l=void 0,s=p){case"iframe":case"object":xn("load",i);break;case"video":case"audio":for(p=0;p<te.length;p++)xn(te[p],i);break;case"source":xn("error",i);break;case"img":case"image":case"link":xn("error",i),xn("load",i);break;case"form":xn("reset",i),xn("submit",i);break;case"details":xn("toggle",i);break;case"input":bt(i,f),xn("invalid",i),fr(d,"onChange");break;case"select":i._wrapperState={wasMultiple:!!f.multiple},xn("invalid",i),fr(d,"onChange");break;case"textarea":Vn(i,f),xn("invalid",i),fr(d,"onChange")}for(l in cr(s,f),p=null,f)f.hasOwnProperty(l)&&(c=f[l],"children"===l?"string"==typeof c?i.textContent!==c&&(p=["children",c]):"number"==typeof c&&i.textContent!==""+c&&(p=["children",""+c]):w.hasOwnProperty(l)&&null!=c&&fr(d,l));switch(s){case"input":$e(i),St(i,f,!0);break;case"textarea":$e(i),Bn(i);break;case"select":case"option":break;default:"function"==typeof f.onClick&&(i.onclick=dr)}l=p,u.updateQueue=l,(u=null!==l)&&yi(t)}else{f=t,i=l,d=u,p=9===s.nodeType?s:s.ownerDocument,c===qn.html&&(c=Hn(i)),c===qn.html?"script"===i?((i=p.createElement("div")).innerHTML="<script><\/script>",p=i.removeChild(i.firstChild)):"string"==typeof d.is?p=p.createElement(i,{is:d.is}):(p=p.createElement(i),"select"===i&&d.multiple&&(p.multiple=!0)):p=p.createElementNS(c,i),(i=p)[U]=f,i[L]=u,mi(i,t,!1,!1),d=i;var y=s,m=pr(p=l,f=u);switch(p){case"iframe":case"object":xn("load",d),s=f;break;case"video":case"audio":for(s=0;s<te.length;s++)xn(te[s],d);s=f;break;case"source":xn("error",d),s=f;break;case"img":case"image":case"link":xn("error",d),xn("load",d),s=f;break;case"form":xn("reset",d),xn("submit",d),s=f;break;case"details":xn("toggle",d),s=f;break;case"input":bt(d,f),s=wt(d,f),xn("invalid",d),fr(y,"onChange");break;case"option":s=Xn(d,f);break;case"select":d._wrapperState={wasMultiple:!!f.multiple},s=o({},f,{value:void 0}),xn("invalid",d),fr(y,"onChange");break;case"textarea":Vn(d,f),s=Zn(d,f),xn("invalid",d),fr(y,"onChange");break;default:s=f}cr(p,s),c=void 0;var h=p,v=d,_=s;for(c in _)if(_.hasOwnProperty(c)){var b=_[c];"style"===c?ur(v,b):"dangerouslySetInnerHTML"===c?null!=(b=b?b.__html:void 0)&&rr(v,b):"children"===c?"string"==typeof b?("textarea"!==h||""!==b)&&or(v,b):"number"==typeof b&&or(v,""+b):"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&"autoFocus"!==c&&(w.hasOwnProperty(c)?null!=b&&fr(y,c):null!=b&&vt(v,c,b,m))}switch(p){case"input":$e(d),St(d,f,!1);break;case"textarea":$e(d),Bn(d);break;case"option":null!=f.value&&d.setAttribute("value",""+_t(f.value));break;case"select":(s=d).multiple=!!f.multiple,null!=(d=f.value)?Kn(s,!!f.multiple,d,!1):null!=f.defaultValue&&Kn(s,!!f.multiple,f.defaultValue,!0);break;default:"function"==typeof s.onClick&&(d.onclick=dr)}(u=hr(l,u))&&yi(t),t.stateNode=i}null!==t.ref&&(t.effectTag|=128)}else null===t.stateNode&&a("166");break;case 6:i&&null!=t.stateNode?_i(i,t,i.memoizedProps,u):("string"!=typeof u&&(null===t.stateNode&&a("166")),i=go(xo.current),go(So.current),Ho(t)?(l=(u=t).stateNode,i=u.memoizedProps,l[U]=u,(u=l.nodeValue!==i)&&yi(t)):(l=t,(u=(9===i.nodeType?i:i.ownerDocument).createTextNode(u))[U]=t,l.stateNode=u));break;case 11:break;case 13:if(u=t.memoizedState,0!=(64&t.effectTag)){t.expirationTime=l,Ai=t;break e}u=null!==u,l=null!==i&&null!==i.memoizedState,null!==i&&!u&&l&&(null!==(i=i.child.sibling)&&(null!==(s=t.firstEffect)?(t.firstEffect=i,i.nextEffect=s):(t.firstEffect=t.lastEffect=i,i.nextEffect=null),i.effectTag=8)),(u!==l||0==(1&t.effectTag)&&u)&&(t.effectTag|=4);break;case 7:case 8:case 12:break;case 4:Po(),hi(t);break;case 10:wo(t);break;case 9:case 14:break;case 17:jr(t.type)&&Rr();break;default:a("156")}Ai=null}if(t=e,1===Fi||1!==t.childExpirationTime){for(u=0,l=t.child;null!==l;)(i=l.expirationTime)>u&&(u=i),(s=l.childExpirationTime)>u&&(u=s),l=l.sibling;t.childExpirationTime=u}if(null!==Ai)return Ai;null!==n&&0==(1024&n.effectTag)&&(null===n.firstEffect&&(n.firstEffect=e.firstEffect),null!==e.lastEffect&&(null!==n.lastEffect&&(n.lastEffect.nextEffect=e.firstEffect),n.lastEffect=e.lastEffect),1<e.effectTag&&(null!==n.lastEffect?n.lastEffect.nextEffect=e:n.firstEffect=e,n.lastEffect=e))}else{if(null!==(e=ki(e)))return e.effectTag&=1023,e;null!==n&&(n.firstEffect=n.lastEffect=null,n.effectTag|=1024)}if(null!==r)return r;if(null===n)break;e=n}return null}function Vi(e){var t=di(e.alternate,e,Fi);return e.memoizedProps=e.pendingProps,null===t&&(t=Zi(e)),Ri.current=null,t}function Gi(e,t){Di&&a("243"),Ki(),Di=!0,Ri.currentDispatcher=ji;var n=e.nextExpirationTimeToWorkOn;n===Fi&&e===Mi&&null!==Ai||(Xi(),Fi=n,Ai=Yr((Mi=e).current,null),e.pendingCommitExpirationTime=0);for(var r=!1;;){try{if(t)for(;null!==Ai&&!ka();)Ai=Vi(Ai);else for(;null!==Ai;)Ai=Vi(Ai)}catch(t){if(vo=ho=mo=null,null===Ai)r=!0,Aa(t);else{null===Ai&&a("271");var o=Ai,i=o.return;if(null!==i){e:{var l=e,u=i,s=o,c=t;if(i=Fi,s.effectTag|=1024,s.firstEffect=s.lastEffect=null,null!==c&&"object"==typeof c&&"function"==typeof c.then){var p=c;c=u;var f=-1,d=-1;do{if(13===c.tag){var y=c.alternate;if(null!==y&&null!==(y=y.memoizedState)){d=10*(1073741822-y.timedOutAt);break}"number"==typeof(y=c.pendingProps.maxDuration)&&(0>=y?f=0:(-1===f||y<f)&&(f=y))}c=c.return}while(null!==c);c=u;do{if((y=13===c.tag)&&(y=void 0!==c.memoizedProps.fallback&&null===c.memoizedState),y){if(null===(u=c.updateQueue)?c.updateQueue=new Set([p]):u.add(p),0==(1&c.mode)){c.effectTag|=64,s.effectTag&=-1957,1===s.tag&&(null===s.alternate?s.tag=17:((i=ro(1073741823)).tag=2,io(s,i))),s.expirationTime=1073741823;break e}null===(s=l.pingCache)?(s=l.pingCache=new Oi,u=new Set,s.set(p,u)):void 0===(u=s.get(p))&&(u=new Set,s.set(p,u)),u.has(i)||(u.add(i),s=Hi.bind(null,l,p,i),p.then(s,s)),-1===f?l=1073741823:(-1===d&&(d=10*(1073741822-qr(l,i))-5e3),l=d+f),0<=l&&Ii<l&&(Ii=l),c.effectTag|=2048,c.expirationTime=i;break e}c=c.return}while(null!==c);c=Error((lt(s.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+ut(s))}zi=!0,c=fo(c,s),l=u;do{switch(l.tag){case 3:l.effectTag|=2048,l.expirationTime=i,ao(l,i=Pi(l,c,i));break e;case 1:if(p=c,f=l.type,d=l.stateNode,0==(64&l.effectTag)&&("function"==typeof f.getDerivedStateFromError||null!==d&&"function"==typeof d.componentDidCatch&&(null===Ji||!Ji.has(d)))){l.effectTag|=2048,l.expirationTime=i,ao(l,i=Ni(l,p,i));break e}}l=l.return}while(null!==l)}Ai=Zi(o);continue}r=!0,Aa(t)}}break}if(Di=!1,vo=ho=mo=Ri.currentDispatcher=null,r)Mi=null,e.finishedWork=null;else if(null!==Ai)e.finishedWork=null;else{if(null===(r=e.current.alternate)&&a("281"),Mi=null,zi){if(o=e.latestPendingTime,i=e.latestSuspendedTime,l=e.latestPingedTime,0!==o&&o<n||0!==i&&i<n||0!==l&&l<n)return Br(e,n),void xa(e,r,n,e.expirationTime,-1);if(!e.didError&&t)return e.didError=!0,n=e.nextExpirationTimeToWorkOn=n,t=e.expirationTime=1073741823,void xa(e,r,n,t,-1)}t&&-1!==Ii?(Br(e,n),(t=10*(1073741822-qr(e,n)))<Ii&&(Ii=t),t=10*(1073741822-ga()),t=Ii-t,xa(e,r,n,e.expirationTime,0>t?0:t)):(e.pendingCommitExpirationTime=n,e.finishedWork=r)}}function Bi(e,t){for(var n=e.return;null!==n;){switch(n.tag){case 1:var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Ji||!Ji.has(r)))return io(n,e=Ni(n,e=fo(t,e),1073741823)),void ta(n,1073741823);break;case 3:return io(n,e=Pi(n,e=fo(t,e),1073741823)),void ta(n,1073741823)}n=n.return}3===e.tag&&(io(e,n=Pi(e,n=fo(t,e),1073741823)),ta(e,1073741823))}function qi(e,t){return 0!==Li?e=Li:Di?e=$i?1073741823:Fi:1&t.mode?(e=ma?1073741822-10*(1+((1073741822-e+15)/10|0)):1073741822-25*(1+((1073741822-e+500)/25|0)),null!==Mi&&e===Fi&&--e):e=1073741823,ma&&(0===ca||e<ca)&&(ca=e),e}function Hi(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),null!==Mi&&Fi===n?Mi=null:(t=e.earliestSuspendedTime,r=e.latestSuspendedTime,0!==t&&n<=t&&n>=r&&(e.didError=!1,(0===(t=e.latestPingedTime)||t>n)&&(e.latestPingedTime=n),Hr(n,e),0!==(n=e.expirationTime)&&Oa(e,n)))}function ea(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t);var r=e.return,o=null;if(null===r&&3===e.tag)o=e.stateNode;else for(;null!==r;){if(n=r.alternate,r.childExpirationTime<t&&(r.childExpirationTime=t),null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t),null===r.return&&3===r.tag){o=r.stateNode;break}r=r.return}return o}function ta(e,t){null!==(e=ea(e,t))&&(!Di&&0!==Fi&&t>Fi&&Xi(),Gr(e,t),Di&&!$i&&Mi===e||Oa(e,e.expirationTime),Ea>ba&&(Ea=0,a("185")))}function na(e,t,n,r,o){var i=Li;Li=1073741823;try{return e(t,n,r,o)}finally{Li=i}}var ra=null,oa=null,ia=0,aa=void 0,la=!1,ua=null,sa=0,ca=0,pa=!1,fa=null,da=!1,ya=!1,ma=!1,ha=null,va=i.unstable_now(),_a=1073741822-(va/10|0),wa=_a,ba=50,Ea=0,Ta=null;function Sa(){_a=1073741822-((i.unstable_now()-va)/10|0)}function Ca(e,t){if(0!==ia){if(t<ia)return;null!==aa&&i.unstable_cancelCallback(aa)}ia=t,e=i.unstable_now()-va,aa=i.unstable_scheduleCallback(ja,{timeout:10*(1073741822-t)-e})}function xa(e,t,n,r,o){e.expirationTime=r,0!==o||ka()?0<o&&(e.timeoutHandle=_r(function(e,t,n){e.pendingCommitExpirationTime=n,e.finishedWork=t,Sa(),wa=_a,Ua(e,n)}.bind(null,e,t,n),o)):(e.pendingCommitExpirationTime=n,e.finishedWork=t)}function ga(){return la?wa:(Pa(),0!==sa&&1!==sa||(Sa(),wa=_a),wa)}function Oa(e,t){null===e.nextScheduledRoot?(e.expirationTime=t,null===oa?(ra=oa=e,e.nextScheduledRoot=e):(oa=oa.nextScheduledRoot=e).nextScheduledRoot=ra):t>e.expirationTime&&(e.expirationTime=t),la||(da?ya&&(ua=e,sa=1073741823,La(e,1073741823,!1)):1073741823===t?Ra(1073741823,!1):Ca(e,t))}function Pa(){var e=0,t=null;if(null!==oa)for(var n=oa,r=ra;null!==r;){var o=r.expirationTime;if(0===o){if((null===n||null===oa)&&a("244"),r===r.nextScheduledRoot){ra=oa=r.nextScheduledRoot=null;break}if(r===ra)ra=o=r.nextScheduledRoot,oa.nextScheduledRoot=o,r.nextScheduledRoot=null;else{if(r===oa){(oa=n).nextScheduledRoot=ra,r.nextScheduledRoot=null;break}n.nextScheduledRoot=r.nextScheduledRoot,r.nextScheduledRoot=null}r=n.nextScheduledRoot}else{if(o>e&&(e=o,t=r),r===oa)break;if(1073741823===e)break;n=r,r=r.nextScheduledRoot}}ua=t,sa=e}var Na=!1;function ka(){return!!Na||!!i.unstable_shouldYield()&&(Na=!0)}function ja(){try{if(!ka()&&null!==ra){Sa();var e=ra;do{var t=e.expirationTime;0!==t&&_a<=t&&(e.nextExpirationTimeToWorkOn=_a),e=e.nextScheduledRoot}while(e!==ra)}Ra(0,!0)}finally{Na=!1}}function Ra(e,t){if(Pa(),t)for(Sa(),wa=_a;null!==ua&&0!==sa&&e<=sa&&!(Na&&_a>sa);)La(ua,sa,_a>sa),Pa(),Sa(),wa=_a;else for(;null!==ua&&0!==sa&&e<=sa;)La(ua,sa,!1),Pa();if(t&&(ia=0,aa=null),0!==sa&&Ca(ua,sa),Ea=0,Ta=null,null!==ha)for(e=ha,ha=null,t=0;t<e.length;t++){var n=e[t];try{n._onComplete()}catch(e){pa||(pa=!0,fa=e)}}if(pa)throw e=fa,fa=null,pa=!1,e}function Ua(e,t){la&&a("253"),ua=e,sa=t,La(e,t,!1),Ra(1073741823,!1)}function La(e,t,n){if(la&&a("245"),la=!0,n){var r=e.finishedWork;null!==r?Da(e,r,t):(e.finishedWork=null,-1!==(r=e.timeoutHandle)&&(e.timeoutHandle=-1,wr(r)),Gi(e,n),null!==(r=e.finishedWork)&&(ka()?e.finishedWork=r:Da(e,r,t)))}else null!==(r=e.finishedWork)?Da(e,r,t):(e.finishedWork=null,-1!==(r=e.timeoutHandle)&&(e.timeoutHandle=-1,wr(r)),Gi(e,n),null!==(r=e.finishedWork)&&Da(e,r,t));la=!1}function Da(e,t,n){var r=e.firstBatch;if(null!==r&&r._expirationTime>=n&&(null===ha?ha=[r]:ha.push(r),r._defer))return e.finishedWork=t,void(e.expirationTime=0);e.finishedWork=null,e===Ta?Ea++:(Ta=e,Ea=0),$i=Di=!0,e.current===t&&a("177"),0===(n=e.pendingCommitExpirationTime)&&a("261"),e.pendingCommitExpirationTime=0,r=t.expirationTime;var o=t.childExpirationTime;if(r=o>r?o:r,e.didError=!1,0===r?(e.earliestPendingTime=0,e.latestPendingTime=0,e.earliestSuspendedTime=0,e.latestSuspendedTime=0,e.latestPingedTime=0):(r<e.latestPingedTime&&(e.latestPingedTime=0),0!==(o=e.latestPendingTime)&&(o>r?e.earliestPendingTime=e.latestPendingTime=0:e.earliestPendingTime>r&&(e.earliestPendingTime=e.latestPendingTime)),0===(o=e.earliestSuspendedTime)?Gr(e,r):r<e.latestSuspendedTime?(e.earliestSuspendedTime=0,e.latestSuspendedTime=0,e.latestPingedTime=0,Gr(e,r)):r>o&&Gr(e,r)),Hr(0,e),Ri.current=null,1<t.effectTag?null!==t.lastEffect?(t.lastEffect.nextEffect=t,r=t.firstEffect):r=t:r=t.firstEffect,yr=Cn,Mn(o=An())){if("selectionStart"in o)var i={start:o.selectionStart,end:o.selectionEnd};else e:{var l=(i=(i=o.ownerDocument)&&i.defaultView||window).getSelection&&i.getSelection();if(l&&0!==l.rangeCount){i=l.anchorNode;var u=l.anchorOffset,s=l.focusNode;l=l.focusOffset;try{i.nodeType,s.nodeType}catch(e){i=null;break e}var c=0,p=-1,f=-1,d=0,y=0,m=o,h=null;t:for(;;){for(var v;m!==i||0!==u&&3!==m.nodeType||(p=c+u),m!==s||0!==l&&3!==m.nodeType||(f=c+l),3===m.nodeType&&(c+=m.nodeValue.length),null!==(v=m.firstChild);)h=m,m=v;for(;;){if(m===o)break t;if(h===i&&++d===u&&(p=c),h===s&&++y===l&&(f=c),null!==(v=m.nextSibling))break;h=(m=h).parentNode}m=v}i=-1===p||-1===f?null:{start:p,end:f}}else i=null}i=i||{start:0,end:0}}else i=null;for(mr={focusedElem:o,selectionRange:i},Cn=!1,Wi=r;null!==Wi;){o=!1,i=void 0;try{for(;null!==Wi;){if(256&Wi.effectTag)e:{var _=Wi.alternate;switch((u=Wi).tag){case 0:case 11:case 15:break e;case 1:if(256&u.effectTag&&null!==_){var w=_.memoizedProps,b=_.memoizedState,E=u.stateNode,T=E.getSnapshotBeforeUpdate(u.elementType===u.type?w:jo(u.type,w),b);E.__reactInternalSnapshotBeforeUpdate=T}break e;case 3:case 5:case 6:case 4:case 17:break e;default:a("163")}}Wi=Wi.nextEffect}}catch(e){o=!0,i=e}o&&(null===Wi&&a("178"),Bi(Wi,i),null!==Wi&&(Wi=Wi.nextEffect))}for(Wi=r;null!==Wi;){_=!1,w=void 0;try{for(;null!==Wi;){var S=Wi.effectTag;if(16&S&&or(Wi.stateNode,""),128&S){var C=Wi.alternate;if(null!==C){var x=C.ref;null!==x&&("function"==typeof x?x(null):x.current=null)}}switch(14&S){case 2:Ci(Wi),Wi.effectTag&=-3;break;case 6:Ci(Wi),Wi.effectTag&=-3,gi(Wi.alternate,Wi);break;case 4:gi(Wi.alternate,Wi);break;case 8:xi(b=Wi),b.return=null,b.child=null,b.memoizedState=null,b.updateQueue=null;var g=b.alternate;null!==g&&(g.return=null,g.child=null,g.memoizedState=null,g.updateQueue=null)}Wi=Wi.nextEffect}}catch(e){_=!0,w=e}_&&(null===Wi&&a("178"),Bi(Wi,w),null!==Wi&&(Wi=Wi.nextEffect))}if(x=mr,C=An(),S=x.focusedElem,_=x.selectionRange,C!==S&&S&&S.ownerDocument&&function e(t,n){return!(!t||!n)&&(t===n||(!t||3!==t.nodeType)&&(n&&3===n.nodeType?e(t,n.parentNode):"contains"in t?t.contains(n):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(n))))}(S.ownerDocument.documentElement,S)){null!==_&&Mn(S)&&(C=_.start,void 0===(x=_.end)&&(x=C),"selectionStart"in S?(S.selectionStart=C,S.selectionEnd=Math.min(x,S.value.length)):(x=(C=S.ownerDocument||document)&&C.defaultView||window).getSelection&&(x=x.getSelection(),w=S.textContent.length,g=Math.min(_.start,w),_=void 0===_.end?g:Math.min(_.end,w),!x.extend&&g>_&&(w=_,_=g,g=w),w=Dn(S,g),b=Dn(S,_),w&&b&&(1!==x.rangeCount||x.anchorNode!==w.node||x.anchorOffset!==w.offset||x.focusNode!==b.node||x.focusOffset!==b.offset)&&((C=C.createRange()).setStart(w.node,w.offset),x.removeAllRanges(),g>_?(x.addRange(C),x.extend(b.node,b.offset)):(C.setEnd(b.node,b.offset),x.addRange(C))))),C=[];for(x=S;x=x.parentNode;)1===x.nodeType&&C.push({element:x,left:x.scrollLeft,top:x.scrollTop});for("function"==typeof S.focus&&S.focus(),S=0;S<C.length;S++)(x=C[S]).element.scrollLeft=x.left,x.element.scrollTop=x.top}for(mr=null,Cn=!!yr,yr=null,e.current=t,Wi=r;null!==Wi;){r=!1,S=void 0;try{for(C=n;null!==Wi;){var O=Wi.effectTag;if(36&O){var P=Wi.alternate;switch(g=C,(x=Wi).tag){case 0:case 11:case 15:break;case 1:var N=x.stateNode;if(4&x.effectTag)if(null===P)N.componentDidMount();else{var k=x.elementType===x.type?P.memoizedProps:jo(x.type,P.memoizedProps);N.componentDidUpdate(k,P.memoizedState,N.__reactInternalSnapshotBeforeUpdate)}var j=x.updateQueue;null!==j&&co(0,j,N);break;case 3:var R=x.updateQueue;if(null!==R){if(_=null,null!==x.child)switch(x.child.tag){case 5:_=x.child.stateNode;break;case 1:_=x.child.stateNode}co(0,R,_)}break;case 5:var U=x.stateNode;null===P&&4&x.effectTag&&hr(x.type,x.memoizedProps)&&U.focus();break;case 6:case 4:case 12:case 13:case 17:break;default:a("163")}}if(128&O){var L=Wi.ref;if(null!==L){var D=Wi.stateNode;switch(Wi.tag){case 5:var A=D;break;default:A=D}"function"==typeof L?L(A):L.current=A}}Wi=Wi.nextEffect}}catch(e){r=!0,S=e}r&&(null===Wi&&a("178"),Bi(Wi,S),null!==Wi&&(Wi=Wi.nextEffect))}Di=$i=!1,"function"==typeof Fr&&Fr(t.stateNode),O=t.expirationTime,0===(t=(t=t.childExpirationTime)>O?t:O)&&(Ji=null),e.expirationTime=t,e.finishedWork=null}function Aa(e){null===ua&&a("246"),ua.expirationTime=0,pa||(pa=!0,fa=e)}function Ma(e,t){var n=da;da=!0;try{return e(t)}finally{(da=n)||la||Ra(1073741823,!1)}}function Fa(e,t){if(da&&!ya){ya=!0;try{return e(t)}finally{ya=!1}}return e(t)}function Ia(e,t,n){if(ma)return e(t,n);da||la||0===ca||(Ra(ca,!1),ca=0);var r=ma,o=da;da=ma=!0;try{return e(t,n)}finally{ma=r,(da=o)||la||Ra(1073741823,!1)}}function za(e,t,n,r,o){var i=t.current;e:if(n){t:{2===tn(n=n._reactInternalFiber)&&1===n.tag||a("170");var l=n;do{switch(l.tag){case 3:l=l.stateNode.context;break t;case 1:if(jr(l.type)){l=l.stateNode.__reactInternalMemoizedMergedChildContext;break t}}l=l.return}while(null!==l);a("171"),l=void 0}if(1===n.tag){var u=n.type;if(jr(u)){n=Dr(n,u,l);break e}}n=l}else n=gr;return null===t.context?t.context=n:t.pendingContext=n,t=o,(o=ro(r)).payload={element:e},null!==(t=void 0===t?null:t)&&(o.callback=t),Ki(),io(i,o),ta(i,r),r}function Wa(e,t,n,r){var o=t.current;return za(e,t,n,o=qi(ga(),o),r)}function $a(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Qa(e){var t=1073741822-25*(1+((1073741822-ga()+500)/25|0));t>=Ui&&(t=Ui-1),this._expirationTime=Ui=t,this._root=e,this._callbacks=this._next=null,this._hasChildren=this._didComplete=!1,this._children=null,this._defer=!0}function Ya(){this._callbacks=null,this._didCommit=!1,this._onCommit=this._onCommit.bind(this)}function Ja(e,t,n){e={current:t=$r(3,null,null,t?3:0),containerInfo:e,pendingChildren:null,pingCache:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,didError:!1,pendingCommitExpirationTime:0,finishedWork:null,timeoutHandle:-1,context:null,pendingContext:null,hydrate:n,nextExpirationTimeToWorkOn:0,expirationTime:0,firstBatch:null,nextScheduledRoot:null},this._internalRoot=t.stateNode=e}function Xa(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Ka(e,t,n,r,o){Xa(n)||a("200");var i=n._reactRootContainer;if(i){if("function"==typeof o){var l=o;o=function(){var e=$a(i._internalRoot);l.call(e)}}null!=e?i.legacy_renderSubtreeIntoContainer(e,t,o):i.render(t,o)}else{if(i=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new Ja(e,!1,t)}(n,r),"function"==typeof o){var u=o;o=function(){var e=$a(i._internalRoot);u.call(e)}}Fa(function(){null!=e?i.legacy_renderSubtreeIntoContainer(e,t,o):i.render(t,o)})}return $a(i._internalRoot)}function Za(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;return Xa(t)||a("200"),function(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:Ze,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}(e,t,null,n)}ge=function(e,t,n){switch(t){case"input":if(Tt(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var o=F(r);o||a("90"),Qe(r),Tt(r,o)}}}break;case"textarea":Gn(e,n);break;case"select":null!=(t=n.value)&&Kn(e,!!n.multiple,t,!1)}},Qa.prototype.render=function(e){this._defer||a("250"),this._hasChildren=!0,this._children=e;var t=this._root._internalRoot,n=this._expirationTime,r=new Ya;return za(e,t,null,n,r._onCommit),r},Qa.prototype.then=function(e){if(this._didComplete)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},Qa.prototype.commit=function(){var e=this._root._internalRoot,t=e.firstBatch;if(this._defer&&null!==t||a("251"),this._hasChildren){var n=this._expirationTime;if(t!==this){this._hasChildren&&(n=this._expirationTime=t._expirationTime,this.render(this._children));for(var r=null,o=t;o!==this;)r=o,o=o._next;null===r&&a("251"),r._next=o._next,this._next=t,e.firstBatch=this}this._defer=!1,Ua(e,n),t=this._next,this._next=null,null!==(t=e.firstBatch=t)&&t._hasChildren&&t.render(t._children)}else this._next=null,this._defer=!1},Qa.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++)(0,e[t])()}},Ya.prototype.then=function(e){if(this._didCommit)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},Ya.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++){var n=e[t];"function"!=typeof n&&a("191",n),n()}}},Ja.prototype.render=function(e,t){var n=this._internalRoot,r=new Ya;return null!==(t=void 0===t?null:t)&&r.then(t),Wa(e,n,null,r._onCommit),r},Ja.prototype.unmount=function(e){var t=this._internalRoot,n=new Ya;return null!==(e=void 0===e?null:e)&&n.then(e),Wa(null,t,null,n._onCommit),n},Ja.prototype.legacy_renderSubtreeIntoContainer=function(e,t,n){var r=this._internalRoot,o=new Ya;return null!==(n=void 0===n?null:n)&&o.then(n),Wa(t,r,e,o._onCommit),o},Ja.prototype.createBatch=function(){var e=new Qa(this),t=e._expirationTime,n=this._internalRoot,r=n.firstBatch;if(null===r)n.firstBatch=e,e._next=null;else{for(n=null;null!==r&&r._expirationTime>=t;)n=r,r=r._next;e._next=r,null!==n&&(n._next=e)}return e},Re=Ma,Ue=Ia,Le=function(){la||0===ca||(Ra(ca,!1),ca=0)};var Va={createPortal:Za,findDOMNode:function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;return void 0===t&&("function"==typeof e.render?a("188"):a("268",Object.keys(e))),e=null===(e=rn(t))?null:e.stateNode},hydrate:function(e,t,n){return Ka(null,e,t,!0,n)},render:function(e,t,n){return Ka(null,e,t,!1,n)},unstable_renderSubtreeIntoContainer:function(e,t,n,r){return(null==e||void 0===e._reactInternalFiber)&&a("38"),Ka(e,t,n,!1,r)},unmountComponentAtNode:function(e){return Xa(e)||a("40"),!!e._reactRootContainer&&(Fa(function(){Ka(null,null,e,!1,function(){e._reactRootContainer=null})}),!0)},unstable_createPortal:function(){return Za.apply(void 0,arguments)},unstable_batchedUpdates:Ma,unstable_interactiveUpdates:Ia,flushSync:function(e,t){la&&a("187");var n=da;da=!0;try{return na(e,t)}finally{da=n,Ra(1073741823,!1)}},unstable_createRoot:function(e,t){return Xa(e)||a("299","unstable_createRoot"),new Ja(e,!0,null!=t&&!0===t.hydrate)},unstable_flushControlled:function(e){var t=da;da=!0;try{na(e)}finally{(da=t)||la||Ra(1073741823,!1)}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[A,M,F,N.injectEventPluginsByName,_,Y,function(e){g(e,Q)},ke,je,Pn,j]}};!function(e){var t=e.findFiberByHostInstance;(function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);Fr=zr(function(e){return t.onCommitFiberRoot(n,e)}),Ir=zr(function(e){return t.onCommitFiberUnmount(n,e)})}catch(e){}})(o({},e,{overrideProps:null,findHostInstanceByFiber:function(e){return null===(e=rn(e))?null:e.stateNode},findFiberByHostInstance:function(e){return t?t(e):null}}))}({findFiberByHostInstance:D,bundleType:0,version:"16.7.0",rendererPackageName:"react-dom"});var Ga={default:Va},Ba=Ga&&Va||Ga;e.exports=Ba.default||Ba},function(e,t,n){"use strict";e.exports=n(13)},function(e,t,n){"use strict";(function(e){
/** @license React v0.12.0
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(t,"__esModule",{value:!0});var n=null,r=!1,o=3,i=-1,a=-1,l=!1,u=!1;function s(){if(!l){var e=n.expirationTime;u?S():u=!0,T(f,e)}}function c(){var e=n,t=n.next;if(n===t)n=null;else{var r=n.previous;n=r.next=t,t.previous=r}e.next=e.previous=null,r=e.callback,t=e.expirationTime,e=e.priorityLevel;var i=o,l=a;o=e,a=t;try{var u=r()}finally{o=i,a=l}if("function"==typeof u)if(u={callback:u,priorityLevel:e,expirationTime:t,next:null,previous:null},null===n)n=u.next=u.previous=u;else{r=null,e=n;do{if(e.expirationTime>=t){r=e;break}e=e.next}while(e!==n);null===r?r=n:r===n&&(n=u,s()),(t=r.previous).next=r.previous=u,u.next=r,u.previous=t}}function p(){if(-1===i&&null!==n&&1===n.priorityLevel){l=!0;try{do{c()}while(null!==n&&1===n.priorityLevel)}finally{l=!1,null!==n?s():u=!1}}}function f(e){l=!0;var o=r;r=e;try{if(e)for(;null!==n;){var i=t.unstable_now();if(!(n.expirationTime<=i))break;do{c()}while(null!==n&&n.expirationTime<=i)}else if(null!==n)do{c()}while(null!==n&&!C())}finally{l=!1,r=o,null!==n?s():u=!1,p()}}var d,y,m=Date,h="function"==typeof setTimeout?setTimeout:void 0,v="function"==typeof clearTimeout?clearTimeout:void 0,_="function"==typeof requestAnimationFrame?requestAnimationFrame:void 0,w="function"==typeof cancelAnimationFrame?cancelAnimationFrame:void 0;function b(e){d=_(function(t){v(y),e(t)}),y=h(function(){w(d),e(t.unstable_now())},100)}if("object"==typeof performance&&"function"==typeof performance.now){var E=performance;t.unstable_now=function(){return E.now()}}else t.unstable_now=function(){return m.now()};var T,S,C,x=null;if("undefined"!=typeof window?x=window:void 0!==e&&(x=e),x&&x._schedMock){var g=x._schedMock;T=g[0],S=g[1],C=g[2],t.unstable_now=g[3]}else if("undefined"==typeof window||"function"!=typeof MessageChannel){var O=null,P=function(e){if(null!==O)try{O(e)}finally{O=null}};T=function(e){null!==O?setTimeout(T,0,e):(O=e,setTimeout(P,0,!1))},S=function(){O=null},C=function(){return!1}}else{"undefined"!=typeof console&&("function"!=typeof _&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!=typeof w&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"));var N=null,k=!1,j=-1,R=!1,U=!1,L=0,D=33,A=33;C=function(){return L<=t.unstable_now()};var M=new MessageChannel,F=M.port2;M.port1.onmessage=function(){k=!1;var e=N,n=j;N=null,j=-1;var r=t.unstable_now(),o=!1;if(0>=L-r){if(!(-1!==n&&n<=r))return R||(R=!0,b(I)),N=e,void(j=n);o=!0}if(null!==e){U=!0;try{e(o)}finally{U=!1}}};var I=function(e){if(null!==N){b(I);var t=e-L+A;t<A&&D<A?(8>t&&(t=8),A=t<D?D:t):D=t,L=e+A,k||(k=!0,F.postMessage(void 0))}else R=!1};T=function(e,t){N=e,j=t,U||0>t?F.postMessage(void 0):R||(R=!0,b(I))},S=function(){N=null,k=!1,j=-1}}t.unstable_ImmediatePriority=1,t.unstable_UserBlockingPriority=2,t.unstable_NormalPriority=3,t.unstable_IdlePriority=5,t.unstable_LowPriority=4,t.unstable_runWithPriority=function(e,n){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var r=o,a=i;o=e,i=t.unstable_now();try{return n()}finally{o=r,i=a,p()}},t.unstable_scheduleCallback=function(e,r){var a=-1!==i?i:t.unstable_now();if("object"==typeof r&&null!==r&&"number"==typeof r.timeout)r=a+r.timeout;else switch(o){case 1:r=a+-1;break;case 2:r=a+250;break;case 5:r=a+1073741823;break;case 4:r=a+1e4;break;default:r=a+5e3}if(e={callback:e,priorityLevel:o,expirationTime:r,next:null,previous:null},null===n)n=e.next=e.previous=e,s();else{a=null;var l=n;do{if(l.expirationTime>r){a=l;break}l=l.next}while(l!==n);null===a?a=n:a===n&&(n=e,s()),(r=a.previous).next=a.previous=e,e.next=a,e.previous=r}return e},t.unstable_cancelCallback=function(e){var t=e.next;if(null!==t){if(t===e)n=null;else{e===n&&(n=t);var r=e.previous;r.next=t,t.previous=r}e.next=e.previous=null}},t.unstable_wrapCallback=function(e){var n=o;return function(){var r=o,a=i;o=n,i=t.unstable_now();try{return e.apply(this,arguments)}finally{o=r,i=a,p()}}},t.unstable_getCurrentPriorityLevel=function(){return o},t.unstable_shouldYield=function(){return!r&&(null!==n&&n.expirationTime<a||C())},t.unstable_continueExecution=function(){null!==n&&s()},t.unstable_pauseExecution=function(){},t.unstable_getFirstCallbackNode=function(){return n}}).call(this,n(14))},function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t,n){"use strict";var r=n(16);function o(){}e.exports=function(){function e(e,t,n,o,i,a){if(a!==r){var l=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw l.name="Invariant Violation",l}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t};return n.checkPropTypes=o,n.PropTypes=n,n}},function(e,t,n){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},function(e,t){e.exports=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)}},function(e,t,n){"use strict";n.r(t);var r=n(0),o=n.n(r),i=n(6),a=n(4),l=n.n(a),u=n(1),s=n.n(u),c=n(2),p=n.n(c),f=n(5),d=n.n(f);function y(e){return"/"===e.charAt(0)}function m(e,t){for(var n=t,r=n+1,o=e.length;r<o;n+=1,r+=1)e[n]=e[r];e.pop()}var h=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=e&&e.split("/")||[],r=t&&t.split("/")||[],o=e&&y(e),i=t&&y(t),a=o||i;if(e&&y(e)?r=n:n.length&&(r.pop(),r=r.concat(n)),!r.length)return"/";var l=void 0;if(r.length){var u=r[r.length-1];l="."===u||".."===u||""===u}else l=!1;for(var s=0,c=r.length;c>=0;c--){var p=r[c];"."===p?m(r,c):".."===p?(m(r,c),s++):s&&(m(r,c),s--)}if(!a)for(;s--;s)r.unshift("..");!a||""===r[0]||r[0]&&y(r[0])||r.unshift("");var f=r.join("/");return l&&"/"!==f.substr(-1)&&(f+="/"),f};"function"==typeof Symbol&&Symbol.iterator;var v=function(e){return"/"===e.charAt(0)?e:"/"+e},_=function(e,t){return new RegExp("^"+t+"(\\/|\\?|#|$)","i").test(e)},w=function(e,t){return _(e,t)?e.substr(t.length):e},b=function(e){return"/"===e.charAt(e.length-1)?e.slice(0,-1):e},E=function(e){var t=e.pathname,n=e.search,r=e.hash,o=t||"/";return n&&"?"!==n&&(o+="?"===n.charAt(0)?n:"?"+n),r&&"#"!==r&&(o+="#"===r.charAt(0)?r:"#"+r),o},T=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},S=function(e,t,n,r){var o=void 0;"string"==typeof e?(o=function(e){var t=e||"/",n="",r="",o=t.indexOf("#");-1!==o&&(r=t.substr(o),t=t.substr(0,o));var i=t.indexOf("?");return-1!==i&&(n=t.substr(i),t=t.substr(0,i)),{pathname:t,search:"?"===n?"":n,hash:"#"===r?"":r}}(e)).state=t:(void 0===(o=T({},e)).pathname&&(o.pathname=""),o.search?"?"!==o.search.charAt(0)&&(o.search="?"+o.search):o.search="",o.hash?"#"!==o.hash.charAt(0)&&(o.hash="#"+o.hash):o.hash="",void 0!==t&&void 0===o.state&&(o.state=t));try{o.pathname=decodeURI(o.pathname)}catch(e){throw e instanceof URIError?new URIError('Pathname "'+o.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):e}return n&&(o.key=n),r?o.pathname?"/"!==o.pathname.charAt(0)&&(o.pathname=h(o.pathname,r.pathname)):o.pathname=r.pathname:o.pathname||(o.pathname="/"),o},C=function(){var e=null,t=[];return{setPrompt:function(t){return p()(null==e,"A history supports only one prompt at a time"),e=t,function(){e===t&&(e=null)}},confirmTransitionTo:function(t,n,r,o){if(null!=e){var i="function"==typeof e?e(t,n):e;"string"==typeof i?"function"==typeof r?r(i,o):(p()(!1,"A history needs a getUserConfirmation function in order to use a prompt message"),o(!0)):o(!1!==i)}else o(!0)},appendListener:function(e){var n=!0,r=function(){n&&e.apply(void 0,arguments)};return t.push(r),function(){n=!1,t=t.filter(function(e){return e!==r})}},notifyListeners:function(){for(var e=arguments.length,n=Array(e),r=0;r<e;r++)n[r]=arguments[r];t.forEach(function(e){return e.apply(void 0,n)})}}},x=!("undefined"==typeof window||!window.document||!window.document.createElement),g=function(e,t,n){return e.addEventListener?e.addEventListener(t,n,!1):e.attachEvent("on"+t,n)},O=function(e,t,n){return e.removeEventListener?e.removeEventListener(t,n,!1):e.detachEvent("on"+t,n)},P=function(e,t){return t(window.confirm(e))},N="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},k=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},j=function(){try{return window.history.state||{}}catch(e){return{}}},R=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};d()(x,"Browser history needs a DOM");var t,n=window.history,r=(-1===(t=window.navigator.userAgent).indexOf("Android 2.")&&-1===t.indexOf("Android 4.0")||-1===t.indexOf("Mobile Safari")||-1!==t.indexOf("Chrome")||-1!==t.indexOf("Windows Phone"))&&window.history&&"pushState"in window.history,o=!(-1===window.navigator.userAgent.indexOf("Trident")),i=e.forceRefresh,a=void 0!==i&&i,l=e.getUserConfirmation,u=void 0===l?P:l,s=e.keyLength,c=void 0===s?6:s,f=e.basename?b(v(e.basename)):"",y=function(e){var t=e||{},n=t.key,r=t.state,o=window.location,i=o.pathname+o.search+o.hash;return p()(!f||_(i,f),'You are attempting to use a basename on a page whose URL path does not begin with the basename. Expected path "'+i+'" to begin with "'+f+'".'),f&&(i=w(i,f)),S(i,r,n)},m=function(){return Math.random().toString(36).substr(2,c)},h=C(),T=function(e){k(Y,e),Y.length=n.length,h.notifyListeners(Y.location,Y.action)},R=function(e){(function(e){return void 0===e.state&&-1===navigator.userAgent.indexOf("CriOS")})(e)||D(y(e.state))},U=function(){D(y(j()))},L=!1,D=function(e){L?(L=!1,T()):h.confirmTransitionTo(e,"POP",u,function(t){t?T({action:"POP",location:e}):A(e)})},A=function(e){var t=Y.location,n=F.indexOf(t.key);-1===n&&(n=0);var r=F.indexOf(e.key);-1===r&&(r=0);var o=n-r;o&&(L=!0,z(o))},M=y(j()),F=[M.key],I=function(e){return f+E(e)},z=function(e){n.go(e)},W=0,$=function(e){1===(W+=e)?(g(window,"popstate",R),o&&g(window,"hashchange",U)):0===W&&(O(window,"popstate",R),o&&O(window,"hashchange",U))},Q=!1,Y={length:n.length,action:"POP",location:M,createHref:I,push:function(e,t){p()(!("object"===(void 0===e?"undefined":N(e))&&void 0!==e.state&&void 0!==t),"You should avoid providing a 2nd state argument to push when the 1st argument is a location-like object that already has state; it is ignored");var o=S(e,t,m(),Y.location);h.confirmTransitionTo(o,"PUSH",u,function(e){if(e){var t=I(o),i=o.key,l=o.state;if(r)if(n.pushState({key:i,state:l},null,t),a)window.location.href=t;else{var u=F.indexOf(Y.location.key),s=F.slice(0,-1===u?0:u+1);s.push(o.key),F=s,T({action:"PUSH",location:o})}else p()(void 0===l,"Browser history cannot push state in browsers that do not support HTML5 history"),window.location.href=t}})},replace:function(e,t){p()(!("object"===(void 0===e?"undefined":N(e))&&void 0!==e.state&&void 0!==t),"You should avoid providing a 2nd state argument to replace when the 1st argument is a location-like object that already has state; it is ignored");var o=S(e,t,m(),Y.location);h.confirmTransitionTo(o,"REPLACE",u,function(e){if(e){var t=I(o),i=o.key,l=o.state;if(r)if(n.replaceState({key:i,state:l},null,t),a)window.location.replace(t);else{var u=F.indexOf(Y.location.key);-1!==u&&(F[u]=o.key),T({action:"REPLACE",location:o})}else p()(void 0===l,"Browser history cannot replace state in browsers that do not support HTML5 history"),window.location.replace(t)}})},go:z,goBack:function(){return z(-1)},goForward:function(){return z(1)},block:function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],t=h.setPrompt(e);return Q||($(1),Q=!0),function(){return Q&&(Q=!1,$(-1)),t()}},listen:function(e){var t=h.appendListener(e);return $(1),function(){$(-1),t()}}};return Y},U=(Object.assign,"function"==typeof Symbol&&Symbol.iterator,Object.assign,Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e});function L(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var D=function(e){function t(){var n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var o=arguments.length,i=Array(o),a=0;a<o;a++)i[a]=arguments[a];return n=r=L(this,e.call.apply(e,[this].concat(i))),r.state={match:r.computeMatch(r.props.history.location.pathname)},L(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.getChildContext=function(){return{router:U({},this.context.router,{history:this.props.history,route:{location:this.props.history.location,match:this.state.match}})}},t.prototype.computeMatch=function(e){return{path:"/",url:"/",params:{},isExact:"/"===e}},t.prototype.componentWillMount=function(){var e=this,t=this.props,n=t.children,r=t.history;d()(null==n||1===o.a.Children.count(n),"A <Router> may have only one child element"),this.unlisten=r.listen(function(){e.setState({match:e.computeMatch(r.location.pathname)})})},t.prototype.componentWillReceiveProps=function(e){l()(this.props.history===e.history,"You cannot change <Router history>")},t.prototype.componentWillUnmount=function(){this.unlisten()},t.prototype.render=function(){var e=this.props.children;return e?o.a.Children.only(e):null},t}(o.a.Component);D.propTypes={history:s.a.object.isRequired,children:s.a.node},D.contextTypes={router:s.a.object},D.childContextTypes={router:s.a.object.isRequired};var A=D;function M(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var F=function(e){function t(){var n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var o=arguments.length,i=Array(o),a=0;a<o;a++)i[a]=arguments[a];return n=r=M(this,e.call.apply(e,[this].concat(i))),r.history=R(r.props),M(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.componentWillMount=function(){l()(!this.props.history,"<BrowserRouter> ignores the history prop. To use a custom history, use `import { Router }` instead of `import { BrowserRouter as Router }`.")},t.prototype.render=function(){return o.a.createElement(A,{history:this.history,children:this.props.children})},t}(o.a.Component);F.propTypes={basename:s.a.string,forceRefresh:s.a.bool,getUserConfirmation:s.a.func,keyLength:s.a.number,children:s.a.node};var I=F,z=n(8),W=n.n(z),$={},Q=0,Y=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments[2];"string"==typeof t&&(t={path:t});var r=t,o=r.path,i=r.exact,a=void 0!==i&&i,l=r.strict,u=void 0!==l&&l,s=r.sensitive;if(null==o)return n;var c=function(e,t){var n=""+t.end+t.strict+t.sensitive,r=$[n]||($[n]={});if(r[e])return r[e];var o=[],i={re:W()(e,o,t),keys:o};return Q<1e4&&(r[e]=i,Q++),i}(o,{end:a,strict:u,sensitive:void 0!==s&&s}),p=c.re,f=c.keys,d=p.exec(e);if(!d)return null;var y=d[0],m=d.slice(1),h=e===y;return a&&!h?null:{path:o,url:"/"===o&&""===y?"/":y,isExact:h,params:f.reduce(function(e,t,n){return e[t.name]=m[n],e},{})}};var J=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,e.apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.componentWillMount=function(){d()(this.context.router,"You should not use <Switch> outside a <Router>")},t.prototype.componentWillReceiveProps=function(e){l()(!(e.location&&!this.props.location),'<Switch> elements should not change from uncontrolled to controlled (or vice versa). You initially used no "location" prop and then provided one on a subsequent render.'),l()(!(!e.location&&this.props.location),'<Switch> elements should not change from controlled to uncontrolled (or vice versa). You provided a "location" prop initially but omitted it on a subsequent render.')},t.prototype.render=function(){var e=this.context.router.route,t=this.props.children,n=this.props.location||e.location,r=void 0,i=void 0;return o.a.Children.forEach(t,function(t){if(null==r&&o.a.isValidElement(t)){var a=t.props,l=a.path,u=a.exact,s=a.strict,c=a.sensitive,p=a.from,f=l||p;i=t,r=Y(n.pathname,{path:f,exact:u,strict:s,sensitive:c},e.match)}}),r?o.a.cloneElement(i,{location:n,computedMatch:r}):null},t}(o.a.Component);J.contextTypes={router:s.a.shape({route:s.a.object.isRequired}).isRequired},J.propTypes={children:s.a.node,location:s.a.object};var X=J,K=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};function Z(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var V=function(e){return 0===o.a.Children.count(e)},G=function(e){function t(){var n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var o=arguments.length,i=Array(o),a=0;a<o;a++)i[a]=arguments[a];return n=r=Z(this,e.call.apply(e,[this].concat(i))),r.state={match:r.computeMatch(r.props,r.context.router)},Z(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.getChildContext=function(){return{router:K({},this.context.router,{route:{location:this.props.location||this.context.router.route.location,match:this.state.match}})}},t.prototype.computeMatch=function(e,t){var n=e.computedMatch,r=e.location,o=e.path,i=e.strict,a=e.exact,l=e.sensitive;if(n)return n;d()(t,"You should not use <Route> or withRouter() outside a <Router>");var u=t.route,s=(r||u.location).pathname;return Y(s,{path:o,strict:i,exact:a,sensitive:l},u.match)},t.prototype.componentWillMount=function(){l()(!(this.props.component&&this.props.render),"You should not use <Route component> and <Route render> in the same route; <Route render> will be ignored"),l()(!(this.props.component&&this.props.children&&!V(this.props.children)),"You should not use <Route component> and <Route children> in the same route; <Route children> will be ignored"),l()(!(this.props.render&&this.props.children&&!V(this.props.children)),"You should not use <Route render> and <Route children> in the same route; <Route children> will be ignored")},t.prototype.componentWillReceiveProps=function(e,t){l()(!(e.location&&!this.props.location),'<Route> elements should not change from uncontrolled to controlled (or vice versa). You initially used no "location" prop and then provided one on a subsequent render.'),l()(!(!e.location&&this.props.location),'<Route> elements should not change from controlled to uncontrolled (or vice versa). You provided a "location" prop initially but omitted it on a subsequent render.'),this.setState({match:this.computeMatch(e,t.router)})},t.prototype.render=function(){var e=this.state.match,t=this.props,n=t.children,r=t.component,i=t.render,a=this.context.router,l=a.history,u=a.route,s=a.staticContext,c={match:e,location:this.props.location||u.location,history:l,staticContext:s};return r?e?o.a.createElement(r,c):null:i?e?i(c):null:"function"==typeof n?n(c):n&&!V(n)?o.a.Children.only(n):null},t}(o.a.Component);G.propTypes={computedMatch:s.a.object,path:s.a.string,exact:s.a.bool,strict:s.a.bool,sensitive:s.a.bool,component:s.a.func,render:s.a.func,children:s.a.oneOfType([s.a.func,s.a.node]),location:s.a.object},G.contextTypes={router:s.a.shape({history:s.a.object.isRequired,route:s.a.object.isRequired,staticContext:s.a.object})},G.childContextTypes={router:s.a.object.isRequired};var B=G;function q(e){return(q="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function H(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function ee(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function te(e,t,n){return t&&ee(e.prototype,t),n&&ee(e,n),e}function ne(e,t){return!t||"object"!==q(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function re(e){return(re=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function oe(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&ie(e,t)}function ie(e,t){return(ie=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var ae=n(0);n(6);var le=function(e){function t(e){var n;return H(this,t),(n=ne(this,re(t).call(this,e))).item_list=[],n}return oe(t,ae.Component),te(t,[{key:"clearItems",value:function(){this.item_list=[],this.forceUpdate()}},{key:"renderItem",value:function(e,t){this.item_list.push(ae.createElement("div",null,ae.createElement("a",{href:t}," ",e," "))),this.forceUpdate()}},{key:"render",value:function(){return ae.createElement("div",{className:"SearchItems"},this.item_list)}}]),t}(),ue=function(e){function t(e){var n;return H(this,t),(n=ne(this,re(t).call(this,e))).search_list=ae.createRef(),n}return oe(t,ae.Component),te(t,[{key:"handleChange",value:function(){var e=event.target.value,t=this;fetch("/about",{method:"POST",headers:{Accept:"application/json",Authorization:"Basic","Content-Type":"application/json"},body:JSON.stringify({type:"search",text:e})}).then(function(e){return e.json()}).then(function(e){var n=function(e,t,n,r){var o=[];for(var i in e){var a=e[i].username,l="/user/"+e[i].username;o.push([a,l])}for(var i in t){var u=t[i].artist,s="/artist/"+t[i].artist;o.push([u,s])}for(var i in n){var c=n[i].song,p="/post/"+n[i].artist+"/"+n[i].song;o.push([c,p])}for(var i in r){var f=r[i].album,d="/album/"+r[i].artist+"/"+r[i].album;o.push([f,d])}return o.sort(function(e,t){return e[0]>t[0]?1:-1}),o}(e.users,e.artists,e.songs,e.albums);for(var r in t.search_list.current.clearItems(),n)t.search_list.current.renderItem(n[r][0],n[r][1])})}},{key:"render",value:function(){return ae.createElement("div",null,ae.createElement("input",{onChange:this.handleChange.bind(this),placeholder:"Search",type:"text",name:"country",className:"search_bar"}),ae.createElement(le,{ref:this.search_list}))}}]),t}(),se=function(e){function t(e){var n;return H(this,t),(n=ne(this,re(t).call(this,e))).search_list=ae.createRef(),n}return oe(t,ae.Component),te(t,[{key:"logoutClicked",value:function(){fetch("/logout",{method:"POST",headers:{Accept:"application/json",Authorization:"Basic","Content-Type":"application/json"}}).then(function(e){return e.json()}).then(function(e){location.reload(!0)})}},{key:"render",value:function(){var e=ae.createElement("div",null,ae.createElement("a",{style:{marginRight:"10px"},href:"/user/"+this.props.username}," ",this.props.username," "),ae.createElement("a",{href:"/",onClick:this.logoutClicked.bind(this)},"Logout"));return null==this.props.username&&(e=ae.createElement("div",null,ae.createElement("a",{style:{marginRight:"10px"},href:"/register"},"Register"),ae.createElement("a",{href:"/login"},"Login"))),ae.createElement("div",null,ae.createElement("html",{lang:"en"}),ae.createElement("head",null,ae.createElement("title",null,"My Node Site"),ae.createElement("link",{rel:"stylesheet",href:"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css"})),ae.createElement("header",null,ae.createElement("div",{id:"reacttest",style:{position:"fixed",height:"60px",backgroundColor:"#178275",width:"100%",zIndex:"10"}},ae.createElement("div",{style:{position:"absolute",top:"15px",left:"10px"}},ae.createElement("a",{href:"/"},"Home")),ae.createElement("div",{style:{position:"absolute",top:"15px",left:"210px"}},ae.createElement("div",{className:"search_list",style:{overflow:"auto"}},ae.createElement(ue,null))),ae.createElement("div",null,ae.createElement("div",{style:{position:"absolute",top:"15px",right:"130px"}},e),ae.createElement("div",{style:{position:"absolute",top:"15px",right:"10px"}},ae.createElement("a",{style:{marginRight:"10px"},href:"/about"},"About"),ae.createElement("a",{href:"/contact"},"Contact"))))))}}]),t}(),ce=n(3),pe=n.n(ce);function fe(e){return(fe="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function de(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function ye(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function me(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function he(e,t,n){return t&&me(e.prototype,t),n&&me(e,n),e}function ve(e,t){return!t||"object"!==fe(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function _e(e){return(_e=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function we(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&be(e,t)}function be(e,t){return(be=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var Ee=function(e){function t(e){var n;return ye(this,t),(n=ve(this,_e(t).call(this,e))).likes_score=n.props.song.likes-e.song.dislikes,n.up_image="/small_up.png",n.down_image="/small_down.png",n}return we(t,o.a.Component),he(t,[{key:"renderiframe",value:function(e){return{__html:e}}},{key:"likeClicked",value:function(){if(pe.a.checkLoggedIn()){var e=this.props.song.post_id;null==e&&(e=this.props.song.id);var t="/like";null==this.props.song.username&&(t="/global_like"),fetch(t,{method:"POST",headers:{Accept:"application/json",Authorization:"Basic","Content-Type":"application/json"},body:JSON.stringify({user:this.props.song.username,id:e})}).then(function(e){return e.json()}).then(function(e){}),1==this.props.like_state?(this.likes_score-=1,this.up_image="/small_up.png",this.props.like_state=-1):(-1==this.props.like_state?this.likes_score+=1:this.likes_score+=2,this.up_image="/small_up_on.png",this.down_image="/small_down.png",this.props.like_state=1),this.forceUpdate()}else alert("MUST BE LOGGED IN")}},{key:"dislikeClicked",value:function(){if(pe.a.checkLoggedIn()){var e=this.props.song.post_id;null==e&&(e=this.props.song.id);var t="/dislike";null==this.props.song.username&&(t="/global_dislike"),fetch(t,{method:"POST",headers:{Accept:"application/json",Authorization:"Basic","Content-Type":"application/json"},body:JSON.stringify({user:this.props.song.username,id:e})}).then(function(e){return e.json()}).then(function(e){}),0==this.props.like_state?(this.down_image="/small_down.png",this.props.like_state=-1,this.likes_score+=1):(-1==this.props.like_state?this.likes_score-=1:this.likes_score-=2,this.down_image="/small_down_on.png",this.up_image="/small_up.png",this.props.like_state=0),this.forceUpdate()}else alert("MUST BE LOGGED IN")}},{key:"render",value:function(){var e,t,n=new Date(this.props.song.timestamp),r=o.a.createElement("h1",{style:{position:"relative"}},o.a.createElement("a",{href:"/user/"+this.props.song.username+"/"+this.props.song.id}," ",this.props.song.title)),i="",a="",l=this.props.song.artist,u="/artist/"+this.props.song.artist,s=[];this.props.song.content.split("\n").map(function(e,t){""==e?s.push(o.a.createElement("br",null)):s.push(o.a.createElement("p",{key:t},e))});o.a.createElement("h2",{style:{position:"relative"}},s);var c=this.props.song.post_id;null!=this.props.song.username&&(c=this.props.song.id," posted by "," at ",i=this.props.song.username,a="/user/"+this.props.song.username);var p={color:"black"},f={color:"black"};1==this.props.like_state?(p.color="blue",this.up_image="/small_up_on.png"):0==this.props.like_state&&(f.color="red",this.down_image="/small_down_on.png");o.a.createElement("div",null,o.a.createElement("div",{className:"likes",id:c},"Likes: ",this.likes_score," "),o.a.createElement("button",{ref:this.likeRef,onClick:this.likeClicked.bind(this),type:"button",className:"like",id:c,style:p},"Like"),o.a.createElement("button",{ref:this.dislikeRef,onClick:this.dislikeClicked.bind(this),type:"button",className:"unlike",id:c,style:f},"Hate")),o.a.createElement("div",{className:"comment_section",id:c});var d="/post/"+this.props.song.artist+"/"+this.props.song.song,y=this.props.song.song;return"NO_SONG_ALBUM_ONLY"==this.props.song.song&&(d="/album/"+this.props.song.artist+"/"+this.props.song.album,y=this.props.song.album),o.a.createElement("div",{key:this.props.song.post_id,style:{border:"1px solid #BABABA",borderRadius:"4px",width:"980px",background:"white"}},o.a.createElement("div",{style:{float:"left",width:"300px",paddingLeft:"10px",paddingTop:"10px"}},o.a.createElement("div",{style:{float:"left",fontFamily:"Playfair Display"}}," ",o.a.createElement("a",{href:a}," ",i," ")),o.a.createElement("div",{style:{float:"right",paddingRight:"10px"}},parseInt(n.getMonth())+1+"/"+n.getDate()+"/"+n.getFullYear()),o.a.createElement("div",{style:{clear:"both"}},o.a.createElement("a",{href:u}," ",l," ")),o.a.createElement("div",null," ",o.a.createElement("a",{href:d},y," "))),o.a.createElement("div",{style:{float:"left",paddingLeft:"180px",paddingTop:"8px"}},r),o.a.createElement("div",{style:{clear:"both"}},o.a.createElement("div",{style:{float:"left",paddingLeft:"10px",paddingTop:"3px",fontFamily:"Playfair Display"}},o.a.createElement("span",{dangerouslySetInnerHTML:this.renderiframe(this.props.song.embedded_content)})),o.a.createElement("div",{style:de({fontSize:"11pt",paddingLeft:"320px",paddingTop:"5px",height:"300px",width:"650px"},"fontSize","2em")},s),o.a.createElement("div",{style:{clear:"both",height:"35px"}},o.a.createElement("div",{style:{float:"left",width:"15px",height:"30px"}}),o.a.createElement("div",{style:{float:"left"}},o.a.createElement("img",{onClick:this.likeClicked.bind(this),src:this.up_image,width:"30",height:"30",alt:""})),o.a.createElement("div",{style:(e={width:"60px",height:"30px",float:"left",verticalAlign:"middle",textAlign:"center"},de(e,"width","60px"),de(e,"position","relative"),de(e,"top","0px"),de(e,"fontSize","21px"),e)},this.likes_score),o.a.createElement("div",{style:{float:"left"}},o.a.createElement("img",{onClick:this.dislikeClicked.bind(this),src:this.down_image,width:"30",height:"30",alt:""})),o.a.createElement("div",{style:{float:"left",width:"30px",height:"30px",borderRight:"1px solid black"}}),o.a.createElement("div",{style:{float:"left",width:"30px",height:"30px"}}),o.a.createElement("div",{style:{float:"left"}},o.a.createElement("img",{src:"/small_comment.png",width:"30",height:"30",alt:""})),o.a.createElement("div",{style:(t={width:"60px",height:"30px",float:"left",verticalAlign:"middle",textAlign:"center"},de(t,"width","80px"),de(t,"position","relative"),de(t,"top","0px"),de(t,"fontSize","21px"),t)},this.props.num_comments))))}}]),t}(),Te=function(e){function t(e){var n;return ye(this,t),(n=ve(this,_e(t).call(this,e))).posts=[],n}return we(t,o.a.Component),he(t,[{key:"makePost",value:function(e){var t=-1,n=0,r=!0,i=!1,a=void 0;try{for(var l,u=this.props.likes[Symbol.iterator]();!(r=(l=u.next()).done);r=!0){var s=l.value,c=s.post_id;null==c&&(c=s.id);var p=e.id;null==p&&(p=e.post_id),c==p&&(t=s.like_state)}}catch(e){i=!0,a=e}finally{try{r||null==u.return||u.return()}finally{if(i)throw a}}var f=!0,d=!1,y=void 0;try{for(var m,h=this.props.num_comments[Symbol.iterator]();!(f=(m=h.next()).done);f=!0){var v=m.value;n=0,e.post_id==v.post_id&&(n=v.count)}}catch(e){d=!0,y=e}finally{try{f||null==h.return||h.return()}finally{if(d)throw y}}this.posts.push(o.a.createElement(Ee,{key:e.post_id,song:e,like_state:t,num_comments:n}))}},{key:"addSongs",value:function(){var e=!0,t=!1,n=void 0;try{for(var r,o=this.props.songs[Symbol.iterator]();!(e=(r=o.next()).done);e=!0){var i=r.value;this.makePost(i)}}catch(e){t=!0,n=e}finally{try{e||null==o.return||o.return()}finally{if(t)throw n}}}},{key:"addPosts",value:function(e,t,n){var r=!0,i=!1,a=void 0;try{for(var l,u=e[Symbol.iterator]();!(r=(l=u.next()).done);r=!0){var s=l.value,c=-1,p=0,f=!0,d=!1,y=void 0;try{for(var m,h=t[Symbol.iterator]();!(f=(m=h.next()).done);f=!0){var v=m.value;null==(C=v.post_id)&&(C=v.id);var _=s.id;null==_&&(_=s.post_id),C==_&&(c=v.like_state)}}catch(e){d=!0,y=e}finally{try{f||null==h.return||h.return()}finally{if(d)throw y}}var w=!0,b=!1,E=void 0;try{for(var T,S=n[Symbol.iterator]();!(w=(T=S.next()).done);w=!0){var C,x=T.value;if((C=x.post_id)==s.post_id){p=x.count;break}}}catch(e){b=!0,E=e}finally{try{w||null==S.return||S.return()}finally{if(b)throw E}}this.posts.push(o.a.createElement(Ee,{key:s.post_id,song:s,like_state:c,num_comments:p}))}}catch(e){i=!0,a=e}finally{try{r||null==u.return||u.return()}finally{if(i)throw a}}this.forceUpdate()}},{key:"componentDidMount",value:function(){this.addSongs(),this.forceUpdate()}},{key:"render",value:function(){return o.a.createElement("div",{style:{left:"15%",top:"100px",position:"relative",width:"100%"}},this.posts.map(function(e){return o.a.createElement("div",null," ",e," ",o.a.createElement("br",null))}))}}]),t}();function Se(e){return(Se="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Ce(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function xe(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function ge(e,t,n){return t&&xe(e.prototype,t),n&&xe(e,n),e}function Oe(e,t){return!t||"object"!==Se(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function Pe(e){return(Pe=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Ne(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&ke(e,t)}function ke(e,t){return(ke=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var je=function(e){function t(e){var n;return Ce(this,t),(n=Oe(this,Pe(t).call(this,e))).embedded_content="",n.songEmbedRef=o.a.createRef(),n.contentRef=o.a.createRef(),n.titleRef=o.a.createRef(),n}return Ne(t,o.a.Component),ge(t,[{key:"songInput",value:function(){event.target.value,this.contentRef.current.value;""!=this.songEmbedRef.current.value?(this.songEmbedRef.current.style.width="30%",this.contentRef.current.style.width="30%",this.contentRef.current.style.height="200px",this.titleRef.current.style.width="30%",this.embedded_content=this.songEmbedRef.current.value):(this.songEmbedRef.current.style.width="80%",this.contentRef.current.style.width="80%",this.contentRef.current.style.height="50px",this.titleRef.current.style.width="80%",this.embedded_content=this.songEmbedRef.current.value),this.forceUpdate()}},{key:"contentInput",value:function(){event.target.value;var e=this.contentRef.current.value;""!=this.songEmbedRef.current.value?(this.songEmbedRef.current.style.width="30%",this.contentRef.current.style.width="30%",this.contentRef.current.style.height="200px",this.titleRef.current.style.width="30%",this.embedded_content=this.songEmbedRef.current.value):(this.songEmbedRef.current.style.width="80%",this.contentRef.current.style.width="80%",this.contentRef.current.style.height="50px",this.titleRef.current.style.width="80%"),this.contentRef.current.style.height=""!=e?"200px":"50px",this.forceUpdate()}},{key:"submitPost",value:function(){if(pe.a.checkLoggedIn()){var e=this;fetch("/post",{method:"POST",headers:{Accept:"application/json",Authorization:"Basic","Content-Type":"application/json"},body:JSON.stringify({song:this.songEmbedRef.current.value,content:this.contentRef.current.value,title:this.titleRef.current.value})}).then(function(e){return e.json()}).then(function(t){e.songEmbedRef.current.value="",e.contentRef.current.value="",e.titleRef.current.value="",location.reload(!0)})}else alert("MUST BE LOGGED IN")}},{key:"renderiframe",value:function(e){return{__html:e}}},{key:"render",value:function(){return o.a.createElement("div",{key:"what",id:"post",style:{left:"15%",top:"120px",position:"relative"},width:"100%",autoComplete:"off"},"Song/Playlist:",o.a.createElement("br",null),o.a.createElement("input",{ref:this.songEmbedRef,onChange:this.songInput.bind(this),id:"song",type:"text",name:"song",style:{width:"80%"}}),o.a.createElement("br",null),"Title:",o.a.createElement("br",null),o.a.createElement("input",{ref:this.titleRef,id:"title",type:"text",name:"title",style:{width:"80%"}}),o.a.createElement("br",null),o.a.createElement("textarea",{onChange:this.contentInput,ref:this.contentRef,id:"content",name:"content",rows:"10",cols:"90",style:{position:"relative",width:"80%",height:"50px"}}),o.a.createElement("br",null),o.a.createElement("button",{onClick:this.submitPost.bind(this),id:"post_button",type:"button"},"Post"),o.a.createElement("br",null),o.a.createElement("br",null),o.a.createElement("div",{id:"showsong",style:{position:"absolute",top:"0",left:"40%"},dangerouslySetInnerHTML:this.renderiframe(this.embedded_content)}),o.a.createElement("meta",{className:"post_number",content:"0"}),o.a.createElement("meta",{className:"non_priority_post_number",content:"0"}),o.a.createElement("meta",{className:"global_post_number",content:"0"}),o.a.createElement("meta",{className:"non_priority_global_post_number",content:"0"}))}}]),t}(),Re=function(e){function t(e){var n;return Ce(this,t),(n=Oe(this,Pe(t).call(this,e))).loading_posts_semaphor=!1,n.offset=0,n.non_priority_offset=0,n.global_offset=0,n.non_priority_global_offset=0,n.postsRef=o.a.createRef(),n}return Ne(t,o.a.Component),ge(t,[{key:"componentDidMount",value:function(){window.addEventListener("scroll",this.handleScroll.bind(this)),this.updateOffsets(this.props.data.songs)}},{key:"componentWillUnmount",value:function(){window.removeEventListener("scroll",this.handleScroll.bind(this))}},{key:"updateOffsets",value:function(e){var t=!0,n=!1,r=void 0;try{for(var o,i=e[Symbol.iterator]();!(t=(o=i.next()).done);t=!0){var a=o.value;0==a.offset_type?++this.offset:1==a.offset_type?++this.non_priority_offset:2==a.offset_type?++this.global_offset:++this.non_priority_global_offset}}catch(e){n=!0,r=e}finally{try{t||null==i.return||i.return()}finally{if(n)throw r}}}},{key:"handleScroll",value:function(){if(window.innerHeight+window.scrollY>=document.body.offsetHeight&&!this.loading_posts_semaphor){var e=this;this.loading_posts_semaphor=!0,fetch("/load_feed",{method:"POST",headers:{Accept:"application/json",Authorization:"Basic","Content-Type":"application/json"},body:JSON.stringify({offset:this.offset,non_priority_offset:this.non_priority_offset,global_offset:this.global_offset,non_priority_global_offset:this.non_priority_global_offset})}).then(function(e){return e.json()}).then(function(t){e.updateOffsets(t.songs),e.postsRef.current.addPosts(t.songs,t.likes,t.num_comments),e.loading_posts_semaphor=!1})}}},{key:"render",value:function(){return o.a.createElement("div",null,o.a.createElement(je,null),o.a.createElement(Te,{ref:this.postsRef,songs:this.props.data.songs,likes:this.props.data.likes,num_comments:this.props.data.num_comments}))}}]),t}();function Ue(e){return(Ue="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Le(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function De(e,t){return!t||"object"!==Ue(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function Ae(e){return(Ae=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Me(e,t){return(Me=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var Fe=function(e){function t(e){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),n=De(this,Ae(t).call(this,e)),console.log("Contact RENDERED"),n}var n,r,i;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Me(e,t)}(t,o.a.Component),n=t,(r=[{key:"render",value:function(){return o.a.createElement("div",null," Contact Page! ")}}])&&Le(n.prototype,r),i&&Le(n,i),t}();function Ie(e){return(Ie="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function ze(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function We(e,t){return!t||"object"!==Ie(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function $e(e){return($e=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Qe(e,t){return(Qe=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var Ye=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),We(this,$e(t).call(this,e))}var n,r,i;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Qe(e,t)}(t,o.a.Component),n=t,(r=[{key:"componentDidMount",value:function(){}},{key:"render",value:function(){return o.a.createElement("div",null,o.a.createElement("section",{className:"hero"},o.a.createElement("div",{className:"hero-content"},o.a.createElement("h2",null,"All about us"))),o.a.createElement("div",{className:"jumbotron text-center"},o.a.createElement("p",null,"1. Click register, enter name, password. Login using that info "),o.a.createElement("p",null,"2. To submit content. Get a spotify embed link. Go to a song or album, click ...->share->copy embed code. past in the song/playlist section. Enter in a title and text"),o.a.createElement("p",null,"3. You can search for a song, album, user, or artist. This will bring you to a global post about the song or album. This should have all data from posts about that topic"),o.a.createElement("a",{href:"/contact",className:"btn btn-lg btn-primary"},"Drop us a link")))}}])&&ze(n.prototype,r),i&&ze(n,i),t}();function Je(e){return(Je="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Xe(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function Ke(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function Ze(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Ve(e,t,n){return t&&Ze(e.prototype,t),n&&Ze(e,n),e}function Ge(e,t){return!t||"object"!==Je(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function Be(e){return(Be=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function qe(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&He(e,t)}function He(e,t){return(He=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var et=function(e){function t(e){return Ke(this,t),Ge(this,Be(t).call(this,e))}return qe(t,o.a.Component),Ve(t,[{key:"render",value:function(){var e;return o.a.createElement("div",{className:"user_info",style:(e={position:"relative",left:"15%",top:"100px"},Xe(e,"position","relative"),Xe(e,"width","100%"),e)},o.a.createElement("h1",null,this.props.user.username),o.a.createElement("h2",null,this.props.user.description),o.a.createElement("h2",null,this.props.user.upvotes-this.props.user.downvotes))}}]),t}(),tt=function(e){function t(e){return Ke(this,t),Ge(this,Be(t).call(this,e))}return qe(t,o.a.Component),Ve(t,[{key:"followClicked",value:function(){fetch("/follow",{method:"POST",headers:{Accept:"application/json",Authorization:"Basic","Content-Type":"application/json"},body:JSON.stringify({followee_id:this.props.user.username})}).then(function(e){return e.json()}).then(function(e){})}},{key:"render",value:function(){return o.a.createElement("div",{className:"user_body",style:{left:"15%",top:"100px",position:"relative",width:"100%"}},o.a.createElement("div",null,o.a.createElement("p",null," ",o.a.createElement("a",{href:"/followers/"+this.props.user.username}," Followers "),": ",this.props.follows," "),o.a.createElement("p",null," ",o.a.createElement("a",{href:"/following/"+this.props.user.username}," Following "),": ",this.props.followees," ")),o.a.createElement("button",{className:"follow_button",id:"follow_button",type:"button",onClick:this.followClicked.bind(this)},"Follow"),o.a.createElement("div",{className:"follow_icon"},"Not Following"))}}]),t}(),nt=function(e){function t(e){var n;return Ke(this,t),(n=Ge(this,Be(t).call(this,e))).offset=n.props.data.songs.length,n.postsRef=o.a.createRef(),n.loading_posts_semaphor=!1,n}return qe(t,o.a.Component),Ve(t,[{key:"componentDidMount",value:function(){window.addEventListener("scroll",this.handleScroll.bind(this))}},{key:"componentWillUnmount",value:function(){window.removeEventListener("scroll",this.handleScroll.bind(this))}},{key:"handleScroll",value:function(){if(console.log(this.props.data.username),window.innerHeight+window.scrollY>=document.body.offsetHeight&&!this.loading_posts_semaphor){var e=this;console.log("LOADING NEW POSTS"),this.loading_posts_semaphor=!0,fetch("/load_post_data",{method:"POST",headers:{Accept:"application/json",Authorization:"Basic","Content-Type":"application/json"},body:JSON.stringify({offset:e.offset,user:e.props.data.username})}).then(function(e){return e.json()}).then(function(t){e.offset+=t.songs.length,e.postsRef.current.addPosts(t.songs,t.likes,t.num_comments),e.loading_posts_semaphor=!1})}}},{key:"render",value:function(){return o.a.createElement("div",null,o.a.createElement(et,{user:this.props.data.user}),o.a.createElement(tt,{user:this.props.data.user,follows:this.props.data.follows,followees:this.props.data.followees}),o.a.createElement(Te,{ref:this.postsRef,songs:this.props.data.songs,likes:this.props.data.likes,num_comments:this.props.data.num_comments}),o.a.createElement("div",{className:"user_body",style:{left:"15%",top:"100px",position:"relative",width:"100%"}}))}}]),t}();function rt(e){return(rt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function ot(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function it(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function at(e,t,n){return t&&it(e.prototype,t),n&&it(e,n),e}function lt(e,t){return!t||"object"!==rt(t)&&"function"!=typeof t?pt(e):t}function ut(e){return(ut=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function st(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&ct(e,t)}function ct(e,t){return(ct=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function pt(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function ft(e,t,n,r){var i=[],a=0,l=!0,u=!1,s=void 0;try{for(var c,p=e[Symbol.iterator]();!(l=(c=p.next()).done);l=!0){if(0==(A=c.value).comment_level&&++a,A.comment_level+1>i.length){for(var f=i.length,d=0;d<A.comment_level+1-f;d++)i.push([]);i[A.comment_level].push(A)}else i[A.comment_level].push(A)}}catch(e){u=!0,s=e}finally{try{l||null==p.return||p.return()}finally{if(u)throw s}}for(var y={},m=[],h=i.length-1;h>=0;h--){var v=!0,_=!1,w=void 0;try{for(var b,E=i[h][Symbol.iterator]();!(v=(b=E.next()).done);v=!0){var T;if(null!=y[(A=b.value).comment_id]){var S=!0,C=!1,x=void 0;try{for(var g,O=y[A.comment_id][Symbol.iterator]();!(S=(g=O.next()).done);S=!0){var P=g.value;A.replies=A.replies-P.props.data.replies-1}}catch(e){C=!0,x=e}finally{try{S||null==O.return||O.return()}finally{if(C)throw x}}}var N=!0,k=!1,j=void 0;try{for(var R,U=t[Symbol.iterator]();!(N=(R=U.next()).done);N=!0){var L=R.value;L.comment_id==A.comment_id&&(T=L)}}catch(e){k=!0,j=e}finally{try{N||null==U.return||U.return()}finally{if(k)throw j}}m.push(o.a.createElement(dt,{key:A.comment_id,data:A,child_comments:y[A.comment_id],vote_state:T,post_id:n}))}}catch(e){_=!0,w=e}finally{try{v||null==E.return||E.return()}finally{if(_)throw w}}if(h==r)break;for(var D=0;D<m.length;D++){var A,M=(A=m[D]).props.data.parent_comment_id;null==y[M]?y[M]=[A]:y[M].push(A)}m=[]}return[m,a]}var dt=function(e){function t(e){var n;if(ot(this,t),(n=lt(this,ut(t).call(this,e))).id=n.props.data.comment_id,n.replies_button=void 0,n.child_comments=[],null!=e.child_comments){var r=!0,i=!1,a=void 0;try{for(var l,u=e.child_comments[Symbol.iterator]();!(r=(l=u.next()).done);r=!0){var s=l.value;n.child_comments.push(s)}}catch(e){i=!0,a=e}finally{try{r||null==u.return||u.return()}finally{if(i)throw a}}}if(e.data.replies>0){var c=String(5*(e.data.comment_level+1))+"%";n.replies_button=o.a.createElement("button",{onClick:n.showReplies.bind(pt(pt(n))),className:"show_replies",style:{position:"relative",left:c},id:e.data.comment_id}," show ",e.data.replies," replies ")}return n.upvoteRef=o.a.createRef(),n.downvoteRef=o.a.createRef(),n.scoreRef=o.a.createRef(),n.votes_score=n.props.data.upvotes-n.props.data.downvotes,n.vote_state=-1,null!=n.props.vote_state&&(n.vote_state=n.props.vote_state.vote_state),n.new_comment=void 0,n.newCommentTextRef=o.a.createRef(),n}return st(t,o.a.Component),at(t,[{key:"addChild",value:function(e){this.child_comments.push(o.a.createElement(t,{key:e.data.comment_id,data:e.data}))}},{key:"upvoteClicked",value:function(){pe.a.checkLoggedIn()?(0==this.vote_state||-1==this.vote_state?(this.upvoteRef.current.style.color="blue",this.downvoteRef.current.style.color="black",0==this.vote_state?this.votes_score=this.votes_score+2:this.votes_score=this.votes_score+1,this.vote_state=1):1==this.vote_state&&(this.upvoteRef.current.style.color="black",this.downvoteRef.current.style.color="black",this.vote_state=-1,this.votes_score=this.votes_score-1),this.forceUpdate(),fetch("/upvote",{method:"POST",headers:{Accept:"application/json",Authorization:"Basic","Content-Type":"application/json"},body:JSON.stringify({id:this.props.data.comment_id})}).then(function(e){return e.json()}).then(function(e){location.reload(!0)})):alert("MUST BE LOGGED IN")}},{key:"downvoteClicked",value:function(){pe.a.checkLoggedIn()?(1==this.vote_state||-1==this.vote_state?(this.upvoteRef.current.style.color="black",this.downvoteRef.current.style.color="red",1==this.vote_state?this.votes_score=this.votes_score-2:this.votes_score=this.votes_score-1,this.vote_state=0):0==this.vote_state&&(this.upvoteRef.current.style.color="black",this.downvoteRef.current.style.color="black",this.vote_state=-1,this.votes_score=this.votes_score+1),this.forceUpdate(),fetch("/downvote",{method:"POST",headers:{Accept:"application/json",Authorization:"Basic","Content-Type":"application/json"},body:JSON.stringify({id:this.props.data.comment_id})}).then(function(e){return e.json()}).then(function(e){})):alert("MUST BE LOGGED IN")}},{key:"openNewComment",value:function(){pe.a.checkLoggedIn()?(this.new_comment=o.a.createElement("div",null,o.a.createElement("textarea",{ref:this.newCommentTextRef,class:"comment_text",id:this.props.data.comment_id,name:"content",rows:"10",cols:"90",style:{width:"80%",height:"50px",zIndex:"100"}}),o.a.createElement("button",{onClick:this.submitNewComment.bind(this),style:{height:"30px",bottom:"30px",position:"relative"},type:"button",class:"submit_new_comment",id:this.props.data.comment_id},"submit"),o.a.createElement("button",{onClick:this.closeNewComment.bind(this),style:{bottom:"0px",position:"relative",height:"30px"},type:"button",class:"close_new_comment",id:this.props.data.comment_id},"x")),this.forceUpdate()):alert("MUST BE LOGGED IN")}},{key:"closeNewComment",value:function(){this.new_comment=void 0,this.forceUpdate()}},{key:"submitNewComment",value:function(){fetch("/comment",{method:"POST",headers:{Accept:"application/json",Authorization:"Basic","Content-Type":"application/json"},body:JSON.stringify({id:this.props.post_id,text:this.newCommentTextRef.current.value,comment_level:this.props.data.comment_level+1,parent_comment_id:this.props.data.comment_id})}).then(function(e){return e.json()}).then(function(e){}),this.closeNewComment()}},{key:"showReplies",value:function(){var e=this;this.replies_button=void 0,this.forceUpdate(),fetch("/show_replies",{method:"POST",headers:{Accept:"application/json",Authorization:"Basic","Content-Type":"application/json"},body:JSON.stringify({id:this.props.data.comment_id,offset:this.child_comments.length})}).then(function(e){return e.json()}).then(function(t){var n=ft(t.comments,t.comment_votes,e.props.post_id,e.props.data.comment_level+1)[0],r=!0,o=!1,i=void 0;try{for(var a,l=n[Symbol.iterator]();!(r=(a=l.next()).done);r=!0){var u=a.value;e.child_comments.push(u)}}catch(e){o=!0,i=e}finally{try{r||null==l.return||l.return()}finally{if(o)throw i}}e.forceUpdate()})}},{key:"addCommentChild",value:function(e){this.child_comments.push(e),this.forceUpdate()}},{key:"render",value:function(){var e="comment_level_"+String(this.props.data.comment_level),t=String(this.props.data.comment_id),n=String(5*this.props.data.comment_level)+"%",r=this.props.data.user_id,i=new Date(this.props.data.timestamp),a=i.getMinutes();1==String(a).length&&(a="0"+String(a));var l=i.getMonth()+"/"+i.getDate()+"/"+i.getFullYear()+" at "+i.getHours()+":"+a,u=this.props.data.text,s="black",c="black";return 1==this.vote_state?s="blue":0==this.vote_state&&(c="red"),o.a.createElement("div",null,o.a.createElement("div",{className:e,id:t,replies:0,style:{position:"relative",left:n}},o.a.createElement("div",{style:{position:"relative",float:"left",height:"60px",width:"5%"}},o.a.createElement("button",{ref:this.upvoteRef,onClick:this.upvoteClicked.bind(this),style:{top:"0px",position:"absolute",height:"30px",color:s},type:"button",className:"upvote",id:t},"^"),o.a.createElement("button",{ref:this.downvoteRef,onClick:this.downvoteClicked.bind(this),style:{bottom:"0px",position:"absolute",height:"30px",color:c},type:"button",className:"downvote",id:t},"v")),o.a.createElement("div",{style:{left:"5%",position:"relative"}},o.a.createElement("div",{ref:this.scoreRef,style:{borderStyle:"solid",borderBottomStyle:"none",width:"75%",height:"35px"},className:"comment_header",id:t},r+" "+l+" "+this.votes_score,o.a.createElement("button",{onClick:this.openNewComment.bind(this),type:"button",className:"begin_comment",id:t},"Comment")),o.a.createElement("div",{style:{borderStyle:"solid",borderTopStyle:"none",width:"75%"},className:"comment_body",id:t}," ",u," "))),this.child_comments.map(function(e){return e}),this.replies_button,this.new_comment,this.test_text)}}]),t}(),yt=function(e){function t(e){var n;return ot(this,t),(n=lt(this,ut(t).call(this,0))).comments=[],n.offset=0,n.loading_comments_semaphor=!1,n.new_comment=void 0,n.newCommentTextRef=o.a.createRef(),n}return st(t,o.a.Component),at(t,[{key:"getComments",value:function(e,t,n){var r=ft(e,t,n,0);this.comments=r[0],this.offset+=r[1]}},{key:"componentDidMount",value:function(){window.addEventListener("scroll",this.handleScroll.bind(this)),this.getComments(this.props.comments,this.props.comment_votes,this.props.post_id),this.forceUpdate()}},{key:"componentWillUnmount",value:function(){window.removeEventListener("scroll",this.handleScroll.bind(this))}},{key:"handleScroll",value:function(){var e=this;window.innerHeight+window.scrollY>=document.body.offsetHeight&&!this.loading_comments_semaphor&&(this.loading_comments_semaphor=!0,fetch("/load_comments",{method:"POST",headers:{Accept:"application/json",Authorization:"Basic","Content-Type":"application/json"},body:JSON.stringify({id:e.props.post_id,offset:this.offset})}).then(function(e){return e.json()}).then(function(t){var n=ft(t.comments,t.comment_votes,e.props.post_id,0),r=n[0];e.offset+=n[1];var o=!0,i=!1,a=void 0;try{for(var l,u=r[Symbol.iterator]();!(o=(l=u.next()).done);o=!0){var s=l.value;e.comments.push(s)}}catch(e){i=!0,a=e}finally{try{o||null==u.return||u.return()}finally{if(i)throw a}}e.forceUpdate(),e.loading_comments_semaphor=!1}))}},{key:"openNewComment",value:function(){pe.a.checkLoggedIn()?(this.new_comment=o.a.createElement("div",null,o.a.createElement("textarea",{ref:this.newCommentTextRef,class:"comment_text",id:this.props.comment_id,name:"content",rows:"10",cols:"90",style:{width:"80%",height:"50px",zIndex:"100"}}),o.a.createElement("button",{onClick:this.submitNewComment.bind(this),style:{height:"30px",bottom:"30px",position:"relative"},type:"button",class:"submit_new_comment",id:this.props.comment_id},"submit"),o.a.createElement("button",{onClick:this.closeNewComment.bind(this),style:{bottom:"0px",position:"relative",height:"30px"},type:"button",class:"close_new_comment",id:this.props.comment_id},"x")),this.forceUpdate()):alert("MUST BE LOGGED IN")}},{key:"closeNewComment",value:function(){this.new_comment=void 0,this.forceUpdate()}},{key:"submitNewComment",value:function(){fetch("/comment",{method:"POST",headers:{Accept:"application/json",Authorization:"Basic","Content-Type":"application/json"},body:JSON.stringify({id:this.props.post_id,text:this.newCommentTextRef.current.value,comment_level:0,parent_comment_id:-1})}).then(function(e){return e.json()}).then(function(e){location.reload(!0)}),this.closeNewComment()}},{key:"render",value:function(){return o.a.createElement("div",null,o.a.createElement("button",{onClick:this.openNewComment.bind(this),type:"button",className:"begin_comment"},"Comment"),this.new_comment,this.comments.map(function(e){return e}))}}]),t}();function mt(e){return(mt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function ht(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function vt(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function _t(e,t,n){return t&&vt(e.prototype,t),n&&vt(e,n),e}function wt(e,t){return!t||"object"!==mt(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function bt(e){return(bt=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Et(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Tt(e,t)}function Tt(e,t){return(Tt=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var St=function(e){function t(e){var n;return ht(this,t),(n=wt(this,bt(t).call(this,e))).likes_score=n.props.data.likes-e.data.dislikes,n.likeRef=o.a.createRef(),n.dislikeRef=o.a.createRef(),n.like_state=-1,n}return Et(t,o.a.Component),_t(t,[{key:"renderiframe",value:function(e){return{__html:e}}},{key:"likeClicked",value:function(){if(pe.a.checkLoggedIn()){fetch("/like",{method:"POST",headers:{Accept:"application/json",Authorization:"Basic","Content-Type":"application/json"},body:JSON.stringify({user:this.props.data.username,id:this.props.data.id})}).then(function(e){return e.json()}).then(function(e){}),1==this.props.like_state?(this.likes_score-=1,this.likeRef.current.style="black",this.dislikeRef.current.style.color="black",this.props.like_state=-1):(-1==this.props.like_state?this.likes_score+=1:this.likes_score+=2,this.likeRef.current.style="blue",this.dislikeRef.current.style.color="black",this.props.like_state=1),this.forceUpdate()}else alert("MUST BE LOGGED IN")}},{key:"dislikeClicked",value:function(){if(pe.a.checkLoggedIn()){fetch("/dislike",{method:"POST",headers:{Accept:"application/json",Authorization:"Basic","Content-Type":"application/json"},body:JSON.stringify({user:this.props.data.username,id:this.props.data.id})}).then(function(e){return e.json()}).then(function(e){}),0==this.props.like_state?(this.likeRef.current.style="black",this.dislikeRef.current.style.color="black",this.props.like_state=-1,this.likes_score+=1):(-1==this.props.like_state?this.likes_score-=1:this.likes_score-=2,this.likeRef.current.style="black",this.dislikeRef.current.style.color="red",this.props.like_state=0),this.forceUpdate()}else alert("MUST BE LOGGED IN")}},{key:"render",value:function(){var e={color:"black"},t={color:"black"};1==this.props.like_state?(e.color="blue",t.color="black"):0==this.props.like_state&&(e.color="black",t.color="red");var n=[];return this.props.data.content.split("\n").map(function(e,t){""==e?n.push(o.a.createElement("br",null)):n.push(o.a.createElement("p",{key:t},e))}),o.a.createElement("div",null,o.a.createElement("div",{style:{position:"relative",top:"100px",paddingBottom:"100px",height:"auto",minHeight:"550px"}},o.a.createElement("div",{style:{position:"relative",float:"left",top:"0px",paddingRight:"20px"},dangerouslySetInnerHTML:this.renderiframe(this.props.data.embedded_content)}),o.a.createElement("div",{style:{left:"10%",top:"20%"}},n)),o.a.createElement("br",null),o.a.createElement("br",null),o.a.createElement("br",null),o.a.createElement("br",null),o.a.createElement("div",null,o.a.createElement("div",{className:"likes",id:this.props.data.id},"Likes: ",this.likes_score," "),o.a.createElement("button",{ref:this.likeRef,onClick:this.likeClicked.bind(this),type:"button",className:"like",id:this.props.data.id,style:e},"Like"),o.a.createElement("button",{ref:this.dislikeRef,onClick:this.dislikeClicked.bind(this),type:"button",className:"unlike",id:this.props.data.id,style:t},"Hate")),o.a.createElement("meta",{className:"comment_offset",content:"0"}))}}]),t}(),Ct=function(e){function t(e){return ht(this,t),console.log(e),wt(this,bt(t).call(this,e))}return Et(t,o.a.Component),_t(t,[{key:"render",value:function(){return o.a.createElement("div",null,o.a.createElement(St,{data:this.props.data.user_post,like_state:this.props.data.like_state}),o.a.createElement(yt,{comments:this.props.data.comments,comment_votes:this.props.data.comment_votes,post_id:this.props.data.user_post.id}))}}]),t}();function xt(e){return(xt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function gt(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function Ot(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Pt(e,t,n){return t&&Ot(e.prototype,t),n&&Ot(e,n),e}function Nt(e,t){return!t||"object"!==xt(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function kt(e){return(kt=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function jt(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Rt(e,t)}function Rt(e,t){return(Rt=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var Ut=function(e){function t(e){var n;return gt(this,t),(n=Nt(this,kt(t).call(this,e))).album_songs=[],n.likes_score=n.props.data.likes-e.data.dislikes,n.likeRef=o.a.createRef(),n.dislikeRef=o.a.createRef(),n}return jt(t,o.a.Component),Pt(t,[{key:"renderiframe",value:function(e){return{__html:e}}},{key:"generateAlbumSongs",value:function(){for(var e=Object.keys(JSON.parse(this.props.data.data)),t=0;t<e.length;t++){var n=e[t];this.album_songs.push(o.a.createElement("div",{style:{padding:"0px"}}," ",n+"."," ",o.a.createElement("a",{href:"/post/"+this.props.data.artist+"/"+JSON.parse(this.props.data.data)[n]}," ",JSON.parse(this.props.data.data)[n]," ")))}}},{key:"likeClicked",value:function(){if(pe.a.checkLoggedIn()){var e=this;fetch("/global_like",{method:"POST",headers:{Accept:"application/json",Authorization:"Basic","Content-Type":"application/json"},body:JSON.stringify({id:this.props.data.post_id})}).then(function(e){return e.json()}).then(function(t){e.likes_score=t.likes_score,e.like_state=t.like_state,1==e.like_state?(e.likeRef.current.style.color="blue",e.dislikeRef.current.style.color="black"):0==e.like_state?(e.likeRef.current.style="black",e.dislikeRef.current.style.color="red"):(e.likeRef.current.style="black",e.dislikeRef.current.style.color="black"),e.forceUpdate()})}else alert("MUST BE LOGGED IN")}},{key:"dislikeClicked",value:function(){if(pe.a.checkLoggedIn()){var e=this;fetch("/global_dislike",{method:"POST",headers:{Accept:"application/json",Authorization:"Basic","Content-Type":"application/json"},body:JSON.stringify({id:this.props.data.post_id})}).then(function(e){return e.json()}).then(function(t){e.likes_score=t.likes_score,e.like_state=t.like_state,1==e.like_state?(e.likeRef.current.style.color="blue",e.dislikeRef.current.style.color="black"):0==e.like_state?(e.likeRef.current.style="black",e.dislikeRef.current.style.color="red"):(e.likeRef.current.style="black",e.dislikeRef.current.style.color="black"),e.forceUpdate()})}else alert("MUST BE LOGGED IN")}},{key:"render",value:function(){var e=o.a.createElement("div",null," ",this.props.data.song+" by "," ",o.a.createElement("a",{href:"/artist/"+this.props.data.artist}," ",this.props.data.artist," ")," ");1==this.props.data.type&&(e="",this.generateAlbumSongs());var t={color:"black"},n={color:"black"};return 1==this.props.like_state?(t.color="blue",n.color="black"):0==this.props.like_state&&(t.color="black",n.color="red"),o.a.createElement("div",null,o.a.createElement("div",{style:{position:"relative",top:"100px",paddingBottom:"100px",height:"auto",minHeight:"550px"}},o.a.createElement("div",{style:{position:"relative",float:"left",top:"0px",paddingRight:"20px"},dangerouslySetInnerHTML:this.renderiframe(this.props.data.embedded_content)}),o.a.createElement("div",{style:{left:"10%",top:"20%"}},o.a.createElement("div",null,e,o.a.createElement("div",null," Album: ",this.props.data.album," "),o.a.createElement("div",null," Released on: ",this.props.data.release_date," "),this.album_songs))),o.a.createElement("br",null),o.a.createElement("br",null),o.a.createElement("br",null),o.a.createElement("br",null),o.a.createElement("div",null,o.a.createElement("div",{className:"likes",id:this.props.data.id},"Likes: ",this.likes_score," "),o.a.createElement("button",{ref:this.likeRef,onClick:this.likeClicked.bind(this),type:"button",className:"like",id:this.props.data.id,style:t},"Like"),o.a.createElement("button",{ref:this.dislikeRef,onClick:this.dislikeClicked.bind(this),type:"button",className:"unlike",id:this.props.data.id,style:n},"Hate")),o.a.createElement("meta",{className:"comment_offset",content:"0"}))}}]),t}(),Lt=function(e){function t(e){return gt(this,t),Nt(this,kt(t).call(this,e))}return jt(t,o.a.Component),Pt(t,[{key:"render",value:function(){return o.a.createElement("div",null,o.a.createElement(Ut,{data:this.props.data.global_post,like_state:this.props.data.like_state}),o.a.createElement(yt,{comments:this.props.data.comments,comment_votes:this.props.data.comment_votes,post_id:this.props.data.global_post.post_id}))}}]),t}();function Dt(e){return(Dt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function At(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function Mt(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Ft(e,t,n){return t&&Mt(e.prototype,t),n&&Mt(e,n),e}function It(e,t){return!t||"object"!==Dt(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function zt(e){return(zt=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Wt(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&$t(e,t)}function $t(e,t){return($t=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var Qt=function(e){function t(e){return At(this,t),It(this,zt(t).call(this,e))}return Wt(t,o.a.Component),Ft(t,[{key:"render",value:function(){return o.a.createElement("div",null,"x",o.a.createElement("button",{className:"follow_button",id:"follow_button",type:"button"},"Follow"),o.a.createElement("div",{className:"follow_icon"},"Not Following"))}}]),t}(),Yt=function(e){function t(e){var n;return At(this,t),(n=It(this,zt(t).call(this,e))).albums=[],n}return Wt(t,o.a.Component),Ft(t,[{key:"renderiframe",value:function(e){return{__html:e}}},{key:"generateAlbums",value:function(){var e=!0,t=!1,n=void 0;try{for(var r,i=this.props.data[Symbol.iterator]();!(e=(r=i.next()).done);e=!0){var a=r.value;this.albums.push(o.a.createElement("div",{key:a.post_id,style:{display:"flex",flexDirection:"column",padding:"10px"}},a.album,o.a.createElement("div",{dangerouslySetInnerHTML:this.renderiframe(a.embedded_content)})))}}catch(e){t=!0,n=e}finally{try{e||null==i.return||i.return()}finally{if(t)throw n}}}},{key:"render",value:function(){return this.generateAlbums(),o.a.createElement("div",null,o.a.createElement("h1",null," ",o.a.createElement("a",{href:"/artist/"+this.props.artist+"/albums"}," Albums ")," "),o.a.createElement("div",{className:"album_display",style:{display:"flex",flexDirection:"row"}},this.albums))}}]),t}(),Jt=function(e){function t(e){var n;return At(this,t),(n=It(this,zt(t).call(this,e))).songs=[],n}return Wt(t,o.a.Component),Ft(t,[{key:"renderiframe",value:function(e){return{__html:e}}},{key:"generateSongs",value:function(){var e=!0,t=!1,n=void 0;try{for(var r,i=this.props.data[Symbol.iterator]();!(e=(r=i.next()).done);e=!0){var a=r.value;this.songs.push(o.a.createElement("div",{key:a.post_id,style:{display:"flex",flexDirection:"column",padding:"10px"}},a.song,o.a.createElement("div",{dangerouslySetInnerHTML:this.renderiframe(a.embedded_content)})))}}catch(e){t=!0,n=e}finally{try{e||null==i.return||i.return()}finally{if(t)throw n}}}},{key:"render",value:function(){return this.generateSongs(),o.a.createElement("div",null,o.a.createElement("h1",null," ",o.a.createElement("a",{href:"/artist/"+this.props.artist+"/songs"}," Songs ")," "),o.a.createElement("div",{className:"song_display",style:{display:"flex",flexDirection:"row"}},this.songs))}}]),t}(),Xt=function(e){function t(e){return At(this,t),It(this,zt(t).call(this,e))}return Wt(t,o.a.Component),Ft(t,[{key:"render",value:function(){return o.a.createElement("div",null,o.a.createElement("div",{className:"info_container",style:{left:"15%",top:"200px",position:"relative",width:"100%"}},o.a.createElement(Qt,null),o.a.createElement(Yt,{data:this.props.data.album_data,artist:this.props.data.artist}),o.a.createElement(Jt,{data:this.props.data.song_data,artist:this.props.data.artist})))}}]),t}();function Kt(e){return(Kt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Zt(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Vt(e,t){return!t||"object"!==Kt(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function Gt(e){return(Gt=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Bt(e,t){return(Bt=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var qt=function(e){function t(e){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(n=Vt(this,Gt(t).call(this,e))).songs=[],n}var n,r,i;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Bt(e,t)}(t,o.a.Component),n=t,(r=[{key:"generateSongs",value:function(){var e=!0,t=!1,n=void 0;try{for(var r,i=this.props.data.song_data[Symbol.iterator]();!(e=(r=i.next()).done);e=!0){var a=r.value;this.songs.push(o.a.createElement("div",{style:{display:"flex",flexDirection:"column"}},o.a.createElement("h2",null,"  ",o.a.createElement("a",{href:"/post/"+a.artist+"/"+a.song},a.song," "))))}}catch(e){t=!0,n=e}finally{try{e||null==i.return||i.return()}finally{if(t)throw n}}}},{key:"render",value:function(){return this.generateSongs(),o.a.createElement("div",null,o.a.createElement("div",{className:"songs_display",style:{left:"15%",top:"100px",position:"relative"}},o.a.createElement("h1",null," Songs "),this.songs))}}])&&Zt(n.prototype,r),i&&Zt(n,i),t}();function Ht(e){return(Ht="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function en(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function tn(e,t){return!t||"object"!==Ht(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function nn(e){return(nn=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function rn(e,t){return(rn=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var on=function(e){function t(e){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(n=tn(this,nn(t).call(this,e))).albums=[],n}var n,r,i;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&rn(e,t)}(t,o.a.Component),n=t,(r=[{key:"generateAlbums",value:function(){var e=!0,t=!1,n=void 0;try{for(var r,i=this.props.data.album_data[Symbol.iterator]();!(e=(r=i.next()).done);e=!0){var a=r.value;this.albums.push(o.a.createElement("div",{style:{display:"flex",flexDirection:"column"}},o.a.createElement("h2",null,"  ",o.a.createElement("a",{href:"/album/"+a.artist+"/"+a.album},a.album," "))))}}catch(e){t=!0,n=e}finally{try{e||null==i.return||i.return()}finally{if(t)throw n}}}},{key:"render",value:function(){return this.generateAlbums(),o.a.createElement("div",null,o.a.createElement("div",{className:"albums_display",style:{left:"15%",top:"100px",position:"relative"}},o.a.createElement("h1",null," Albums "),this.albums))}}])&&en(n.prototype,r),i&&en(n,i),t}();function an(e){return(an="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function ln(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function un(e,t){return!t||"object"!==an(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function sn(e){return(sn=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function cn(e,t){return(cn=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var pn=function(e){function t(e){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(n=un(this,sn(t).call(this,e))).usernameRef=o.a.createRef(),n.passwordRef=o.a.createRef(),n.login_message="",n}var n,r,i;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&cn(e,t)}(t,o.a.Component),n=t,(r=[{key:"submitLogin",value:function(){var e=this;fetch("/login",{method:"POST",headers:{Accept:"application/json",Authorization:"Basic","Content-Type":"application/json"},body:JSON.stringify({username:this.usernameRef.current.value,password:this.passwordRef.current.value})}).then(function(e){return e.json()}).then(function(t){e.login_message=t.login_message,"Login Successful"==t.login_message?window.location.href="/":e.forceUpdate()})}},{key:"render",value:function(){return o.a.createElement("div",null,o.a.createElement("section",{className:"hero",style:{position:"absolute",left:"10%",top:"20%"}},o.a.createElement("div",{className:"hero-content"},o.a.createElement("h2",null,"Login"),o.a.createElement("label",{style:{color:"black"}},"Username:"),o.a.createElement("input",{ref:this.usernameRef,type:"text",name:"username"}),o.a.createElement("br",null),o.a.createElement("label",{style:{color:"black"}},"Password:"),o.a.createElement("input",{ref:this.passwordRef,type:"text",name:"password"}),o.a.createElement("p",null,o.a.createElement("button",{onClick:this.submitLogin.bind(this),type:"submit",id:"submitButton",className:"btn btn-lg btn-primary"},"Login"),o.a.createElement("a",{href:"/register",id:"submitButton",className:"btn btn-lg btn-primary"},"Register")),o.a.createElement("p",null,this.login_message))))}}])&&ln(n.prototype,r),i&&ln(n,i),t}();function fn(e){return(fn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function dn(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function yn(e){return(yn=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function mn(e,t){return(mn=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function hn(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}var vn=function(e){function t(e){var n,r,i;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),r=this,(n=!(i=yn(t).call(this,e))||"object"!==fn(i)&&"function"!=typeof i?hn(r):i).usernameRef=o.a.createRef(),n.passwordRef=o.a.createRef(),n.confirmRef=o.a.createRef();hn(hn(n));return n}var n,r,i;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&mn(e,t)}(t,o.a.Component),n=t,(r=[{key:"submitRegistration",value:function(e){fetch("/register",{method:"POST",headers:{Accept:"application/json",Authorization:"Basic","Content-Type":"application/json"},body:JSON.stringify({username:this.usernameRef.current.value,password:this.passwordRef.current.value,password_confirm:this.confirmRef.current.value})}).then(function(e){return e.json()}).then(function(e){})}},{key:"render",value:function(){return o.a.createElement("div",null,o.a.createElement("section",{className:"hero",style:{position:"absolute",left:"10%",top:"20%"}},o.a.createElement("div",{className:"hero-content"},o.a.createElement("h2",null,"Register"),o.a.createElement("label",{style:{color:"black"}},"Enter Username:"),o.a.createElement("input",{ref:this.usernameRef,type:"text",name:"username"}),o.a.createElement("br",null),o.a.createElement("label",{style:{color:"black"}},"Enter Password:"),o.a.createElement("input",{ref:this.passwordRef,type:"text",name:"password"}),o.a.createElement("br",null),o.a.createElement("label",{style:{color:"black"}},"Confirm Password:"),o.a.createElement("input",{ref:this.confirmRef,type:"text",name:"password_confirm"}),o.a.createElement("p",null,o.a.createElement("button",{href:"/",type:"submit",id:"submitButton",className:"btn btn-lg btn-primary",onClick:this.submitRegistration.bind(this)},"Register")))))}}])&&dn(n.prototype,r),i&&dn(n,i),t}();function _n(e){return(_n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function wn(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function bn(e,t){return!t||"object"!==_n(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function En(e){return(En=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Tn(e,t){return(Tn=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var Sn=function(e){function t(e){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(n=bn(this,En(t).call(this,e))).followers=[],n}var n,r,i;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Tn(e,t)}(t,o.a.Component),n=t,(r=[{key:"generateFollowers",value:function(){var e=!0,t=!1,n=void 0;try{for(var r,i=this.props.data.followers[Symbol.iterator]();!(e=(r=i.next()).done);e=!0){var a=r.value;this.followers.push(o.a.createElement("div",{key:a.user_id},o.a.createElement("a",{href:"/user/"+a.user_id},a.user_id)))}}catch(e){t=!0,n=e}finally{try{e||null==i.return||i.return()}finally{if(t)throw n}}}},{key:"render",value:function(){return this.generateFollowers(),o.a.createElement("div",null,o.a.createElement("div",{className:"followers_div",style:{left:"15%",top:"100px",position:"relative"}},o.a.createElement("h1",null," Followers "),this.followers))}}])&&wn(n.prototype,r),i&&wn(n,i),t}();function Cn(e){return(Cn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function xn(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function gn(e,t){return!t||"object"!==Cn(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function On(e){return(On=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Pn(e,t){return(Pn=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var Nn=function(e){function t(e){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(n=gn(this,On(t).call(this,e))).follows=[],n}var n,r,i;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Pn(e,t)}(t,o.a.Component),n=t,(r=[{key:"generateFollows",value:function(){var e=!0,t=!1,n=void 0;try{for(var r,i=this.props.data.following[Symbol.iterator]();!(e=(r=i.next()).done);e=!0){var a=r.value;this.follows.push(o.a.createElement("div",{key:a.user_id},o.a.createElement("a",{href:"/user/"+a.user_id},a.user_id)))}}catch(e){t=!0,n=e}finally{try{e||null==i.return||i.return()}finally{if(t)throw n}}}},{key:"render",value:function(){return this.generateFollows(),o.a.createElement("div",null,o.a.createElement("div",{className:"follows_div",style:{left:"15%",top:"100px",position:"relative"}},o.a.createElement("h1",null," Follows "),this.follows))}}])&&xn(n.prototype,r),i&&xn(n,i),t}();function kn(e){return(kn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function jn(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Rn(e,t){return!t||"object"!==kn(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function Un(e){return(Un=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Ln(e,t){return(Ln=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var Dn=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),Rn(this,Un(t).call(this,e))}var n,r,i;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Ln(e,t)}(t,o.a.Component),n=t,(r=[{key:"handleClick",value:function(e){console.log("CLICKED")}},{key:"render",value:function(){var e=this;return o.a.createElement("div",{id:"root",style:{background:"#FAFAFA"}},o.a.createElement(se,{username:this.props.data.username}),o.a.createElement("link",{rel:"stylesheet",href:"/styles.css"}),o.a.createElement(X,null,o.a.createElement(B,{exact:!0,path:"/",render:function(){return o.a.createElement(Re,{data:e.props.data})}}),o.a.createElement(B,{exact:!0,path:"/user/:user/:post_id",render:function(){return o.a.createElement(Ct,{data:e.props.data})}}),o.a.createElement(B,{exact:!0,path:"/user/:user",render:function(){return o.a.createElement(nt,{data:e.props.data})}}),o.a.createElement(B,{exact:!0,path:"/followers/:user",render:function(){return o.a.createElement(Sn,{data:e.props.data})}}),o.a.createElement(B,{exact:!0,path:"/following/:user",render:function(){return o.a.createElement(Nn,{data:e.props.data})}}),o.a.createElement(B,{exact:!0,path:"/login",render:function(){return o.a.createElement(pn,{data:e.props.data})}}),o.a.createElement(B,{exact:!0,path:"/register",render:function(){return o.a.createElement(vn,{data:e.props.data})}}),o.a.createElement(B,{exact:!0,path:"/post/:artist/:song",render:function(){return o.a.createElement(Lt,{data:e.props.data})}}),o.a.createElement(B,{exact:!0,path:"/album/:artist/:album",render:function(){return o.a.createElement(Lt,{data:e.props.data})}}),o.a.createElement(B,{exact:!0,path:"/artist/:artist",render:function(){return o.a.createElement(Xt,{data:e.props.data})}}),o.a.createElement(B,{exact:!0,path:"/artist/:artist/songs",render:function(){return o.a.createElement(qt,{data:e.props.data})}}),o.a.createElement(B,{exact:!0,path:"/artist/:artist/albums",render:function(){return o.a.createElement(on,{data:e.props.data})}}),o.a.createElement(B,{exact:!0,path:"/contact",component:Fe}),o.a.createElement(B,{exact:!0,path:"/about",component:Ye})),o.a.createElement("script",{type:"text/javascript",src:"/public/bundle.js"}," "))}}])&&jn(n.prototype,r),i&&jn(n,i),t}();Object(i.render)(o.a.createElement(I,null,o.a.createElement(Dn,{data:window.__DATA__})),document.getElementById("root"))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oaXN0b3J5L25vZGVfbW9kdWxlcy93YXJuaW5nL2Jyb3dzZXIuanMiLCJ3ZWJwYWNrOi8vLy4vYXBwL2NvbXBvbmVudHMvdXRpbHMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3dhcm5pbmcvd2FybmluZy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaW52YXJpYW50L2Jyb3dzZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvb2JqZWN0LWFzc2lnbi9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcGF0aC10by1yZWdleHAvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2Nqcy9yZWFjdC5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3NjaGVkdWxlci9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc2NoZWR1bGVyL2Nqcy9zY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vLyh3ZWJwYWNrKS9idWlsZGluL2dsb2JhbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wYXRoLXRvLXJlZ2V4cC9ub2RlX21vZHVsZXMvaXNhcnJheS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVzb2x2ZS1wYXRobmFtZS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdmFsdWUtZXF1YWwvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2hpc3RvcnkvZXMvUGF0aFV0aWxzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oaXN0b3J5L2VzL0xvY2F0aW9uVXRpbHMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2hpc3RvcnkvZXMvY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2hpc3RvcnkvZXMvRE9NVXRpbHMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2hpc3RvcnkvZXMvY3JlYXRlQnJvd3Nlckhpc3RvcnkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci9lcy9Sb3V0ZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2hpc3RvcnkvZXMvY3JlYXRlSGFzaEhpc3RvcnkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2hpc3RvcnkvZXMvY3JlYXRlTWVtb3J5SGlzdG9yeS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyLWRvbS9lcy9Sb3V0ZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci1kb20vZXMvQnJvd3NlclJvdXRlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyL2VzL21hdGNoUGF0aC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyL2VzL1N3aXRjaC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyLWRvbS9lcy9Td2l0Y2guanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci9lcy9Sb3V0ZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyLWRvbS9lcy9Sb3V0ZS5qcyIsIndlYnBhY2s6Ly8vLi9hcHAvY29tcG9uZW50cy9zdGFuZGFyZF9oZWFkZXIuanMiLCJ3ZWJwYWNrOi8vLy4vYXBwL2NvbXBvbmVudHMvcG9zdC5qcyIsIndlYnBhY2s6Ly8vLi9hcHAvY29tcG9uZW50cy9mZWVkLmpzIiwid2VicGFjazovLy8uL2FwcC9jb21wb25lbnRzL0NvbnRhY3QuanMiLCJ3ZWJwYWNrOi8vLy4vYXBwL2NvbXBvbmVudHMvYWJvdXQuanMiLCJ3ZWJwYWNrOi8vLy4vYXBwL2NvbXBvbmVudHMvdXNlci5qcyIsIndlYnBhY2s6Ly8vLi9hcHAvY29tcG9uZW50cy9jb21tZW50cy5qcyIsIndlYnBhY2s6Ly8vLi9hcHAvY29tcG9uZW50cy91c2VyX3Bvc3QuanMiLCJ3ZWJwYWNrOi8vLy4vYXBwL2NvbXBvbmVudHMvZ2xvYmFsX3Bvc3QuanMiLCJ3ZWJwYWNrOi8vLy4vYXBwL2NvbXBvbmVudHMvYXJ0aXN0LmpzIiwid2VicGFjazovLy8uL2FwcC9jb21wb25lbnRzL2FydGlzdF9zb25ncy5qcyIsIndlYnBhY2s6Ly8vLi9hcHAvY29tcG9uZW50cy9hcnRpc3RfYWxidW1zLmpzIiwid2VicGFjazovLy8uL2FwcC9jb21wb25lbnRzL2xvZ2luLmpzIiwid2VicGFjazovLy8uL2FwcC9jb21wb25lbnRzL3JlZ2lzdGVyLmpzIiwid2VicGFjazovLy8uL2FwcC9jb21wb25lbnRzL2ZvbGxvd2Vycy5qcyIsIndlYnBhY2s6Ly8vLi9hcHAvY29tcG9uZW50cy9mb2xsb3dpbmcuanMiLCJ3ZWJwYWNrOi8vLy4vYXBwL2NvbXBvbmVudHMvQXBwLmpzIiwid2VicGFjazovLy8uL2FwcC9pbmRleC5qcyJdLCJuYW1lcyI6WyJpbnN0YWxsZWRNb2R1bGVzIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiZXhwb3J0cyIsIm1vZHVsZSIsImkiLCJsIiwibW9kdWxlcyIsImNhbGwiLCJtIiwiYyIsImQiLCJuYW1lIiwiZ2V0dGVyIiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInIiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsInZhbHVlIiwidCIsIm1vZGUiLCJfX2VzTW9kdWxlIiwibnMiLCJjcmVhdGUiLCJrZXkiLCJiaW5kIiwibiIsIm9iamVjdCIsInByb3BlcnR5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJwIiwicyIsImNoZWNrTG9nZ2VkSW4iLCJkb2N1bWVudCIsImNvb2tpZSIsImluZGV4T2YiLCJjb25zb2xlIiwibG9nIiwid2FybmluZyIsImNvbmRpdGlvbiIsImZvcm1hdCIsImEiLCJiIiwiZSIsImYiLCJlcnJvciIsInVuZGVmaW5lZCIsIkVycm9yIiwiYXJncyIsImFyZ0luZGV4IiwicmVwbGFjZSIsImZyYW1lc1RvUG9wIiwiY2hlY2tEQ0UiLCJfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18iLCJlcnIiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJwcm9wSXNFbnVtZXJhYmxlIiwicHJvcGVydHlJc0VudW1lcmFibGUiLCJhc3NpZ24iLCJ0ZXN0MSIsIlN0cmluZyIsImdldE93blByb3BlcnR5TmFtZXMiLCJ0ZXN0MiIsImZyb21DaGFyQ29kZSIsIm1hcCIsImpvaW4iLCJ0ZXN0MyIsInNwbGl0IiwiZm9yRWFjaCIsImxldHRlciIsImtleXMiLCJzaG91bGRVc2VOYXRpdmUiLCJ0YXJnZXQiLCJzb3VyY2UiLCJmcm9tIiwic3ltYm9scyIsInRvIiwidmFsIiwiVHlwZUVycm9yIiwidG9PYmplY3QiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJpc2FycmF5IiwicGF0aFRvUmVnZXhwIiwicGFyc2UiLCJjb21waWxlIiwic3RyIiwib3B0aW9ucyIsInRva2Vuc1RvRnVuY3Rpb24iLCJ0b2tlbnNUb1JlZ0V4cCIsIlBBVEhfUkVHRVhQIiwiUmVnRXhwIiwicmVzIiwidG9rZW5zIiwiaW5kZXgiLCJwYXRoIiwiZGVmYXVsdERlbGltaXRlciIsImRlbGltaXRlciIsImV4ZWMiLCJlc2NhcGVkIiwib2Zmc2V0Iiwic2xpY2UiLCJuZXh0IiwicHJlZml4IiwiY2FwdHVyZSIsImdyb3VwIiwibW9kaWZpZXIiLCJhc3RlcmlzayIsInB1c2giLCJwYXJ0aWFsIiwicmVwZWF0Iiwib3B0aW9uYWwiLCJwYXR0ZXJuIiwiZXNjYXBlR3JvdXAiLCJlc2NhcGVTdHJpbmciLCJzdWJzdHIiLCJlbmNvZGVVUklDb21wb25lbnRQcmV0dHkiLCJlbmNvZGVVUkkiLCJjaGFyQ29kZUF0IiwidG9TdHJpbmciLCJ0b1VwcGVyQ2FzZSIsIm1hdGNoZXMiLCJBcnJheSIsIm9iaiIsIm9wdHMiLCJkYXRhIiwiZW5jb2RlIiwicHJldHR5IiwiZW5jb2RlVVJJQ29tcG9uZW50IiwidG9rZW4iLCJzZWdtZW50IiwiSlNPTiIsInN0cmluZ2lmeSIsImoiLCJ0ZXN0IiwiYXR0YWNoS2V5cyIsInJlIiwiZmxhZ3MiLCJzZW5zaXRpdmUiLCJzdHJpY3QiLCJlbmQiLCJyb3V0ZSIsImVuZHNXaXRoRGVsaW1pdGVyIiwiZ3JvdXBzIiwibWF0Y2giLCJyZWdleHBUb1JlZ2V4cCIsInBhcnRzIiwiYXJyYXlUb1JlZ2V4cCIsInN0cmluZ1RvUmVnZXhwIiwiayIsImZvciIsInEiLCJ1IiwidiIsInciLCJ4IiwieSIsInoiLCJBIiwiQiIsIkMiLCJpdGVyYXRvciIsIkQiLCJnIiwiaCIsImFhIiwiRSIsImlzTW91bnRlZCIsImVucXVldWVGb3JjZVVwZGF0ZSIsImVucXVldWVSZXBsYWNlU3RhdGUiLCJlbnF1ZXVlU2V0U3RhdGUiLCJGIiwiRyIsInRoaXMiLCJwcm9wcyIsImNvbnRleHQiLCJyZWZzIiwidXBkYXRlciIsIkgiLCJJIiwiaXNSZWFjdENvbXBvbmVudCIsInNldFN0YXRlIiwiZm9yY2VVcGRhdGUiLCJKIiwiY29uc3RydWN0b3IiLCJpc1B1cmVSZWFjdENvbXBvbmVudCIsIksiLCJjdXJyZW50IiwiY3VycmVudERpc3BhdGNoZXIiLCJMIiwiTSIsInJlZiIsIl9fc2VsZiIsIl9fc291cmNlIiwiTiIsImNoaWxkcmVuIiwiZGVmYXVsdFByb3BzIiwiJCR0eXBlb2YiLCJ0eXBlIiwiX293bmVyIiwiTyIsIlAiLCJRIiwiUiIsInBvcCIsInJlc3VsdCIsImtleVByZWZpeCIsImZ1bmMiLCJjb3VudCIsIlMiLCJWIiwiVCIsIlUiLCJpc0FycmF5IiwiZG9uZSIsIj0iLCI6IiwiZXNjYXBlIiwiY2EiLCJkYSIsIlciLCJiYSIsIlgiLCJDaGlsZHJlbiIsInRvQXJyYXkiLCJvbmx5IiwiY3JlYXRlUmVmIiwiQ29tcG9uZW50IiwiUHVyZUNvbXBvbmVudCIsImNyZWF0ZUNvbnRleHQiLCJfY2FsY3VsYXRlQ2hhbmdlZEJpdHMiLCJfY3VycmVudFZhbHVlIiwiX2N1cnJlbnRWYWx1ZTIiLCJfdGhyZWFkQ291bnQiLCJQcm92aWRlciIsIkNvbnN1bWVyIiwiX2NvbnRleHQiLCJmb3J3YXJkUmVmIiwicmVuZGVyIiwibGF6eSIsIl9jdG9yIiwiX3N0YXR1cyIsIl9yZXN1bHQiLCJtZW1vIiwiY29tcGFyZSIsIkZyYWdtZW50IiwiU3RyaWN0TW9kZSIsIlN1c3BlbnNlIiwiY3JlYXRlRWxlbWVudCIsImNsb25lRWxlbWVudCIsImNyZWF0ZUZhY3RvcnkiLCJpc1ZhbGlkRWxlbWVudCIsInZlcnNpb24iLCJ1bnN0YWJsZV9Db25jdXJyZW50TW9kZSIsInVuc3RhYmxlX1Byb2ZpbGVyIiwiX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQiLCJSZWFjdEN1cnJlbnRPd25lciIsIlkiLCJkZWZhdWx0IiwiWiIsImVhIiwiZmEiLCJoYSIsImlhIiwiamEiLCJvbkVycm9yIiwia2EiLCJhcHBseSIsIm1hIiwibmEiLCJvYSIsInBhIiwiZXh0cmFjdEV2ZW50cyIsImV2ZW50VHlwZXMiLCJxYSIsInBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzIiwicmEiLCJyZWdpc3RyYXRpb25OYW1lIiwic2EiLCJ0YSIsImRlcGVuZGVuY2llcyIsInVhIiwidmEiLCJ3YSIsInhhIiwiY3VycmVudFRhcmdldCIsImxhIiwieWEiLCJjb25jYXQiLCJ6YSIsIkFhIiwiQmEiLCJfZGlzcGF0Y2hMaXN0ZW5lcnMiLCJfZGlzcGF0Y2hJbnN0YW5jZXMiLCJpc1Byb3BhZ2F0aW9uU3RvcHBlZCIsImlzUGVyc2lzdGVudCIsInJlbGVhc2UiLCJDYSIsImluamVjdEV2ZW50UGx1Z2luT3JkZXIiLCJpbmplY3RFdmVudFBsdWdpbnNCeU5hbWUiLCJEYSIsInN0YXRlTm9kZSIsImRpc2FibGVkIiwiRWEiLCJGYSIsIk1hdGgiLCJyYW5kb20iLCJHYSIsIkhhIiwiSWEiLCJwYXJlbnROb2RlIiwidGFnIiwiSmEiLCJLYSIsIkxhIiwiTWEiLCJyZXR1cm4iLCJOYSIsImRpc3BhdGNoQ29uZmlnIiwiT2EiLCJfdGFyZ2V0SW5zdCIsIlBhIiwiUWEiLCJSYSIsIlNhIiwid2luZG93IiwiVGEiLCJ0b0xvd2VyQ2FzZSIsIlVhIiwiYW5pbWF0aW9uZW5kIiwiYW5pbWF0aW9uaXRlcmF0aW9uIiwiYW5pbWF0aW9uc3RhcnQiLCJ0cmFuc2l0aW9uZW5kIiwiVmEiLCJXYSIsIlhhIiwic3R5bGUiLCJhbmltYXRpb24iLCJ0cmFuc2l0aW9uIiwiWWEiLCJaYSIsIiRhIiwiYWIiLCJiYiIsImNiIiwiZWIiLCJmYiIsImdiIiwidGV4dENvbnRlbnQiLCJoYiIsImliIiwibmF0aXZlRXZlbnQiLCJJbnRlcmZhY2UiLCJpc0RlZmF1bHRQcmV2ZW50ZWQiLCJkZWZhdWx0UHJldmVudGVkIiwicmV0dXJuVmFsdWUiLCJrYiIsImV2ZW50UG9vbCIsImxiIiwiZGVzdHJ1Y3RvciIsImpiIiwiZ2V0UG9vbGVkIiwicHJldmVudERlZmF1bHQiLCJzdG9wUHJvcGFnYXRpb24iLCJjYW5jZWxCdWJibGUiLCJwZXJzaXN0IiwiZXZlbnRQaGFzZSIsImJ1YmJsZXMiLCJjYW5jZWxhYmxlIiwidGltZVN0YW1wIiwiRGF0ZSIsIm5vdyIsImlzVHJ1c3RlZCIsImV4dGVuZCIsIm1iIiwibmIiLCJvYiIsInBiIiwicWIiLCJkb2N1bWVudE1vZGUiLCJyYiIsInNiIiwidGIiLCJ1YiIsImJlZm9yZUlucHV0IiwiYnViYmxlZCIsImNhcHR1cmVkIiwiY29tcG9zaXRpb25FbmQiLCJjb21wb3NpdGlvblN0YXJ0IiwiY29tcG9zaXRpb25VcGRhdGUiLCJ2YiIsIndiIiwia2V5Q29kZSIsInhiIiwiZGV0YWlsIiwieWIiLCJCYiIsImxvY2FsZSIsIndoaWNoIiwiemIiLCJjdHJsS2V5IiwiYWx0S2V5IiwibWV0YUtleSIsImNoYXIiLCJBYiIsIkNiIiwiRGIiLCJFYiIsIkhiIiwiSWIiLCJKYiIsIktiIiwiTGIiLCJNYiIsIk5iIiwiT2IiLCJQYiIsImNvbG9yIiwiZGF0ZSIsImRhdGV0aW1lIiwiZGF0ZXRpbWUtbG9jYWwiLCJlbWFpbCIsIm1vbnRoIiwibnVtYmVyIiwicGFzc3dvcmQiLCJyYW5nZSIsInNlYXJjaCIsInRlbCIsInRleHQiLCJ0aW1lIiwidXJsIiwid2VlayIsIlFiIiwibm9kZU5hbWUiLCJSYiIsInNyY0VsZW1lbnQiLCJjb3JyZXNwb25kaW5nVXNlRWxlbWVudCIsIm5vZGVUeXBlIiwiU2IiLCJzZXRBdHRyaWJ1dGUiLCJUYiIsIlZiIiwiX3ZhbHVlVHJhY2tlciIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsInNldCIsImNvbmZpZ3VyYWJsZSIsImdldFZhbHVlIiwic2V0VmFsdWUiLCJzdG9wVHJhY2tpbmciLCJVYiIsIldiIiwiY2hlY2tlZCIsIlhiIiwiWWIiLCJaYiIsIiRiIiwiYWMiLCJiYyIsImNjIiwiZGMiLCJlYyIsImZjIiwiZ2MiLCJoYyIsImljIiwiamMiLCJrYyIsImxjIiwibWMiLCJkaXNwbGF5TmFtZSIsIm5jIiwiX2RlYnVnT3duZXIiLCJfZGVidWdTb3VyY2UiLCJmaWxlTmFtZSIsImxpbmVOdW1iZXIiLCJvYyIsInBjIiwicWMiLCJyYyIsImFjY2VwdHNCb29sZWFucyIsImF0dHJpYnV0ZU5hbWUiLCJhdHRyaWJ1dGVOYW1lc3BhY2UiLCJtdXN0VXNlUHJvcGVydHkiLCJwcm9wZXJ0eU5hbWUiLCJ2YyIsIndjIiwieGMiLCJ0YyIsImlzTmFOIiwidWMiLCJzYyIsInJlbW92ZUF0dHJpYnV0ZSIsInNldEF0dHJpYnV0ZU5TIiwieWMiLCJ6YyIsImRlZmF1bHRDaGVja2VkIiwiZGVmYXVsdFZhbHVlIiwiX3dyYXBwZXJTdGF0ZSIsImluaXRpYWxDaGVja2VkIiwiQWMiLCJpbml0aWFsVmFsdWUiLCJjb250cm9sbGVkIiwiQmMiLCJDYyIsIkRjIiwiRWMiLCJvd25lckRvY3VtZW50IiwiYWN0aXZlRWxlbWVudCIsInRhYkluZGV4IiwiRmMiLCJjaGFuZ2UiLCJHYyIsIkpjIiwiS2MiLCJMYyIsIk1jIiwiTmMiLCJPYyIsIlBjIiwiZGV0YWNoRXZlbnQiLCJRYyIsIlJjIiwiYXR0YWNoRXZlbnQiLCJTYyIsIlRjIiwiVWMiLCJWYyIsIl9pc0lucHV0RXZlbnRTdXBwb3J0ZWQiLCJXYyIsInZpZXciLCJYYyIsIkFsdCIsIkNvbnRyb2wiLCJNZXRhIiwiU2hpZnQiLCJZYyIsImdldE1vZGlmaWVyU3RhdGUiLCJaYyIsIiRjIiwiYWQiLCJiZCIsImNkIiwiZGQiLCJzY3JlZW5YIiwic2NyZWVuWSIsImNsaWVudFgiLCJjbGllbnRZIiwicGFnZVgiLCJwYWdlWSIsInNoaWZ0S2V5IiwiYnV0dG9uIiwiYnV0dG9ucyIsInJlbGF0ZWRUYXJnZXQiLCJmcm9tRWxlbWVudCIsInRvRWxlbWVudCIsIm1vdmVtZW50WCIsIm1vdmVtZW50WSIsImVkIiwicG9pbnRlcklkIiwid2lkdGgiLCJoZWlnaHQiLCJwcmVzc3VyZSIsInRhbmdlbnRpYWxQcmVzc3VyZSIsInRpbHRYIiwidGlsdFkiLCJ0d2lzdCIsInBvaW50ZXJUeXBlIiwiaXNQcmltYXJ5IiwiZmQiLCJtb3VzZUVudGVyIiwibW91c2VMZWF2ZSIsInBvaW50ZXJFbnRlciIsInBvaW50ZXJMZWF2ZSIsImdkIiwiZGVmYXVsdFZpZXciLCJwYXJlbnRXaW5kb3ciLCJhbHRlcm5hdGUiLCJoZCIsImlkIiwiamQiLCJrZCIsImVmZmVjdFRhZyIsImxkIiwibmQiLCJjaGlsZCIsInNpYmxpbmciLCJtZCIsIm9kIiwiYW5pbWF0aW9uTmFtZSIsImVsYXBzZWRUaW1lIiwicHNldWRvRWxlbWVudCIsInBkIiwiY2xpcGJvYXJkRGF0YSIsInFkIiwicmQiLCJjaGFyQ29kZSIsInNkIiwiRXNjIiwiU3BhY2ViYXIiLCJMZWZ0IiwiVXAiLCJSaWdodCIsIkRvd24iLCJEZWwiLCJXaW4iLCJNZW51IiwiQXBwcyIsIlNjcm9sbCIsIk1velByaW50YWJsZUtleSIsInRkIiwiOCIsIjkiLCIxMiIsIjEzIiwiMTYiLCIxNyIsIjE4IiwiMTkiLCIyMCIsIjI3IiwiMzIiLCIzMyIsIjM0IiwiMzUiLCIzNiIsIjM3IiwiMzgiLCIzOSIsIjQwIiwiNDUiLCI0NiIsIjExMiIsIjExMyIsIjExNCIsIjExNSIsIjExNiIsIjExNyIsIjExOCIsIjExOSIsIjEyMCIsIjEyMSIsIjEyMiIsIjEyMyIsIjE0NCIsIjE0NSIsIjIyNCIsInVkIiwibG9jYXRpb24iLCJ2ZCIsImRhdGFUcmFuc2ZlciIsIndkIiwidG91Y2hlcyIsInRhcmdldFRvdWNoZXMiLCJjaGFuZ2VkVG91Y2hlcyIsInhkIiwieWQiLCJkZWx0YVgiLCJ3aGVlbERlbHRhWCIsImRlbHRhWSIsIndoZWVsRGVsdGFZIiwid2hlZWxEZWx0YSIsImRlbHRhWiIsImRlbHRhTW9kZSIsInpkIiwiQWQiLCJCZCIsIkNkIiwiaXNJbnRlcmFjdGl2ZSIsIkRkIiwiaXNJbnRlcmFjdGl2ZVRvcExldmVsRXZlbnRUeXBlIiwiRWQiLCJGZCIsIkdkIiwidGFyZ2V0SW5zdCIsImFuY2VzdG9ycyIsImNvbnRhaW5lckluZm8iLCJ0b3BMZXZlbFR5cGUiLCJIZCIsIklkIiwiSmQiLCJhZGRFdmVudExpc3RlbmVyIiwiS2QiLCJMZCIsIk1kIiwiTmQiLCJPZCIsIlBkIiwiYm9keSIsIlFkIiwiZmlyc3RDaGlsZCIsIlJkIiwibm9kZSIsIm5leHRTaWJsaW5nIiwiVGQiLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnREb2N1bWVudCIsIlVkIiwiY29udGVudEVkaXRhYmxlIiwiVmQiLCJXZCIsInNlbGVjdCIsIlhkIiwiWWQiLCJaZCIsIiRkIiwiYWUiLCJzdGFydCIsInNlbGVjdGlvblN0YXJ0Iiwic2VsZWN0aW9uRW5kIiwiYW5jaG9yTm9kZSIsImdldFNlbGVjdGlvbiIsImFuY2hvck9mZnNldCIsImZvY3VzTm9kZSIsImZvY3VzT2Zmc2V0IiwiYmUiLCJvblNlbGVjdCIsImVlIiwiZGUiLCJmZSIsInNlbGVjdGVkIiwiZGVmYXVsdFNlbGVjdGVkIiwiZ2UiLCJkYW5nZXJvdXNseVNldElubmVySFRNTCIsImhlIiwiaWUiLCJqZSIsIlNpbXBsZUV2ZW50UGx1Z2luIiwiRW50ZXJMZWF2ZUV2ZW50UGx1Z2luIiwiQ2hhbmdlRXZlbnRQbHVnaW4iLCJTZWxlY3RFdmVudFBsdWdpbiIsIkJlZm9yZUlucHV0RXZlbnRQbHVnaW4iLCJrZSIsImh0bWwiLCJtYXRobWwiLCJzdmciLCJsZSIsIm1lIiwibmUiLCJvZSIsIm5hbWVzcGFjZVVSSSIsImlubmVySFRNTCIsInJlbW92ZUNoaWxkIiwiYXBwZW5kQ2hpbGQiLCJNU0FwcCIsImV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uIiwicGUiLCJsYXN0Q2hpbGQiLCJub2RlVmFsdWUiLCJxZSIsImFuaW1hdGlvbkl0ZXJhdGlvbkNvdW50IiwiYm9yZGVySW1hZ2VPdXRzZXQiLCJib3JkZXJJbWFnZVNsaWNlIiwiYm9yZGVySW1hZ2VXaWR0aCIsImJveEZsZXgiLCJib3hGbGV4R3JvdXAiLCJib3hPcmRpbmFsR3JvdXAiLCJjb2x1bW5Db3VudCIsImNvbHVtbnMiLCJmbGV4IiwiZmxleEdyb3ciLCJmbGV4UG9zaXRpdmUiLCJmbGV4U2hyaW5rIiwiZmxleE5lZ2F0aXZlIiwiZmxleE9yZGVyIiwiZ3JpZEFyZWEiLCJncmlkUm93IiwiZ3JpZFJvd0VuZCIsImdyaWRSb3dTcGFuIiwiZ3JpZFJvd1N0YXJ0IiwiZ3JpZENvbHVtbiIsImdyaWRDb2x1bW5FbmQiLCJncmlkQ29sdW1uU3BhbiIsImdyaWRDb2x1bW5TdGFydCIsImZvbnRXZWlnaHQiLCJsaW5lQ2xhbXAiLCJsaW5lSGVpZ2h0Iiwib3BhY2l0eSIsIm9yZGVyIiwib3JwaGFucyIsInRhYlNpemUiLCJ3aWRvd3MiLCJ6SW5kZXgiLCJ6b29tIiwiZmlsbE9wYWNpdHkiLCJmbG9vZE9wYWNpdHkiLCJzdG9wT3BhY2l0eSIsInN0cm9rZURhc2hhcnJheSIsInN0cm9rZURhc2hvZmZzZXQiLCJzdHJva2VNaXRlcmxpbWl0Iiwic3Ryb2tlT3BhY2l0eSIsInN0cm9rZVdpZHRoIiwic2UiLCJ0cmltIiwidGUiLCJzZXRQcm9wZXJ0eSIsImNoYXJBdCIsInN1YnN0cmluZyIsInVlIiwibWVudWl0ZW0iLCJhcmVhIiwiYmFzZSIsImJyIiwiY29sIiwiZW1iZWQiLCJociIsImltZyIsImlucHV0Iiwia2V5Z2VuIiwibGluayIsIm1ldGEiLCJwYXJhbSIsInRyYWNrIiwid2JyIiwidmUiLCJ3ZSIsImlzIiwieGUiLCJibHVyIiwiZm9jdXMiLCJ5ZSIsInplIiwiQWUiLCJCZSIsImF1dG9Gb2N1cyIsIkNlIiwiX19odG1sIiwiRGUiLCJzZXRUaW1lb3V0IiwiRWUiLCJjbGVhclRpbWVvdXQiLCJHZSIsIkhlIiwiU2V0IiwiSWUiLCJKZSIsIktlIiwiTGUiLCJNZSIsImNvbnRleHRUeXBlcyIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dCIsImNoaWxkQ29udGV4dFR5cGVzIiwiTmUiLCJPZSIsIlBlIiwiUWUiLCJnZXRDaGlsZENvbnRleHQiLCJSZSIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0IiwiU2UiLCJUZSIsIlVlIiwiVmUiLCJYZSIsImVsZW1lbnRUeXBlIiwicGVuZGluZ1Byb3BzIiwiZmlyc3RDb250ZXh0RGVwZW5kZW5jeSIsIm1lbW9pemVkU3RhdGUiLCJ1cGRhdGVRdWV1ZSIsIm1lbW9pemVkUHJvcHMiLCJsYXN0RWZmZWN0IiwiZmlyc3RFZmZlY3QiLCJuZXh0RWZmZWN0IiwiY2hpbGRFeHBpcmF0aW9uVGltZSIsImV4cGlyYXRpb25UaW1lIiwiWWUiLCIkZSIsImFmIiwiYmYiLCJjZiIsImRmIiwiZWYiLCJwZW5kaW5nQ2hpbGRyZW4iLCJpbXBsZW1lbnRhdGlvbiIsImZmIiwiZGlkRXJyb3IiLCJlYXJsaWVzdFBlbmRpbmdUaW1lIiwibGF0ZXN0UGVuZGluZ1RpbWUiLCJnZiIsImhmIiwibGF0ZXN0UGluZ2VkVGltZSIsImVhcmxpZXN0U3VzcGVuZGVkVGltZSIsImxhdGVzdFN1c3BlbmRlZFRpbWUiLCJqZiIsIm5leHRFeHBpcmF0aW9uVGltZVRvV29ya09uIiwia2YiLCJsZiIsImJhc2VTdGF0ZSIsImZpcnN0VXBkYXRlIiwibGFzdFVwZGF0ZSIsImZpcnN0Q2FwdHVyZWRVcGRhdGUiLCJsYXN0Q2FwdHVyZWRVcGRhdGUiLCJmaXJzdENhcHR1cmVkRWZmZWN0IiwibGFzdENhcHR1cmVkRWZmZWN0IiwibWYiLCJuZiIsInBheWxvYWQiLCJjYWxsYmFjayIsIm9mIiwicGYiLCJxZiIsInJmIiwic2YiLCJ0ZiIsInVmIiwidmYiLCJ3ZiIsInN0YWNrIiwieGYiLCJ5ZiIsInpmIiwiQWYiLCJCZiIsIkNmIiwiRGYiLCJFZiIsIm9ic2VydmVkQml0cyIsIkZmIiwiR2YiLCJIZiIsIklmIiwiSmYiLCJkb2N1bWVudEVsZW1lbnQiLCJ0YWdOYW1lIiwiS2YiLCJMZiIsIk1mIiwiT2YiLCJQZiIsIlFmIiwiVmYiLCJfcmVhY3RJbnRlcm5hbEZpYmVyIiwiUmYiLCJTZiIsIlRmIiwiVWYiLCJXZiIsInNob3VsZENvbXBvbmVudFVwZGF0ZSIsIlhmIiwiY29udGV4dFR5cGUiLCJyZWFkQ29udGV4dCIsInN0YXRlIiwiWmYiLCJjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCIkZiIsImdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyIsImdldFNuYXBzaG90QmVmb3JlVXBkYXRlIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCIsImNvbXBvbmVudFdpbGxNb3VudCIsImNvbXBvbmVudERpZE1vdW50IiwiYWciLCJiZyIsIl9zdHJpbmdSZWYiLCJjZyIsImRnIiwiTWFwIiwiZGVsZXRlIiwiZWciLCJmZyIsImdnIiwiaGciLCJpZyIsImpnIiwia2ciLCJsZyIsIm1nIiwibmciLCJvZyIsInBnIiwicWciLCJyZyIsInNnIiwidGciLCJ1ZyIsInZnIiwid2ciLCJVTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSIsImNvbXBvbmVudFdpbGxVcGRhdGUiLCJjb21wb25lbnREaWRVcGRhdGUiLCJ4ZyIsImdldERlcml2ZWRTdGF0ZUZyb21FcnJvciIsInlnIiwicGVuZGluZ0NvbnRleHQiLCJ6ZyIsInRpbWVkT3V0QXQiLCJmYWxsYmFjayIsIkFnIiwidGhlbiIsIk5mIiwiWmUiLCJlbGVtZW50IiwiaHlkcmF0ZSIsImhpZGRlbiIsInVuc3RhYmxlX29ic2VydmVkQml0cyIsIkJnIiwiQ2ciLCJHZyIsIkhnIiwiSWciLCJvbkNsaWNrIiwib25jbGljayIsIkpnIiwiV2Vha1NldCIsIktnIiwiTGciLCJNZyIsIk9nIiwiZGVzdHJveSIsImNvbXBvbmVudFdpbGxVbm1vdW50IiwiUGciLCJRZyIsIlJnIiwiaW5zZXJ0QmVmb3JlIiwiX3JlYWN0Um9vdENvbnRhaW5lciIsIlNnIiwid2FzTXVsdGlwbGUiLCJtdWx0aXBsZSIsIkZlIiwiZGlzcGxheSIsIk5nIiwidGgiLCJzaCIsImhhcyIsImFkZCIsIlVnIiwiV2Vha01hcCIsIlZnIiwiV2ciLCJYZyIsImNvbXBvbmVudERpZENhdGNoIiwiWWciLCJjb21wb25lbnRTdGFjayIsIlpnIiwiJGciLCJhaCIsImJoIiwiY2giLCJkaCIsImVoIiwiZmgiLCJnaCIsImhoIiwiaWgiLCJqaCIsInVuc3RhYmxlX2NhbmNlbENhbGxiYWNrIiwia2giLCJjcmVhdGVFbGVtZW50TlMiLCJjcmVhdGVUZXh0Tm9kZSIsImxoIiwibWgiLCJwZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWUiLCJuaCIsIm1heER1cmF0aW9uIiwicGluZ0NhY2hlIiwib2giLCJmaW5pc2hlZFdvcmsiLCJwaCIsInFoIiwicmgiLCJ1aCIsInZoIiwid2giLCJ4aCIsInloIiwiemgiLCJBaCIsIkJoIiwiQ2giLCJEaCIsIkVoIiwiRmgiLCJ1bnN0YWJsZV9ub3ciLCJHaCIsIkhoIiwiSWgiLCJKaCIsIktoIiwidW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayIsIkxoIiwidGltZW91dCIsInRpbWVvdXRIYW5kbGUiLCJOaCIsIk9oIiwibmV4dFNjaGVkdWxlZFJvb3QiLCJQaCIsIlFoIiwiUmgiLCJ1bnN0YWJsZV9zaG91bGRZaWVsZCIsIl9vbkNvbXBsZXRlIiwiU2giLCJmaXJzdEJhdGNoIiwiX2V4cGlyYXRpb25UaW1lIiwiX2RlZmVyIiwicmFuZ2VDb3VudCIsImRiIiwiZm9jdXNlZEVsZW0iLCJzZWxlY3Rpb25SYW5nZSIsIllmIiwiVmgiLCJfX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZSIsIlNkIiwiY29udGFpbnMiLCJjb21wYXJlRG9jdW1lbnRQb3NpdGlvbiIsIm1pbiIsImNyZWF0ZVJhbmdlIiwic2V0U3RhcnQiLCJyZW1vdmVBbGxSYW5nZXMiLCJhZGRSYW5nZSIsInNldEVuZCIsImxlZnQiLCJzY3JvbGxMZWZ0IiwidG9wIiwic2Nyb2xsVG9wIiwiRmIiLCJHYiIsIkhjIiwiaWkiLCJEZyIsIkVnIiwiamkiLCJJYyIsIkZnIiwiY2UiLCJUaCIsIlVoIiwiV2giLCJYaCIsIlloIiwiWmgiLCJhaSIsIl9yb290IiwiX2NhbGxiYWNrcyIsIl9uZXh0IiwiX2hhc0NoaWxkcmVuIiwiX2RpZENvbXBsZXRlIiwiX2NoaWxkcmVuIiwiYmkiLCJfZGlkQ29tbWl0IiwiX29uQ29tbWl0IiwiY2kiLCJfaW50ZXJuYWxSb290IiwiZGkiLCJmaSIsImxlZ2FjeV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lciIsImhhc0F0dHJpYnV0ZSIsImVpIiwiZ2kiLCIkaCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JtIiwiY29tbWl0IiwidW5tb3VudCIsImNyZWF0ZUJhdGNoIiwia2kiLCJjcmVhdGVQb3J0YWwiLCJmaW5kRE9NTm9kZSIsInVuc3RhYmxlX3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyIiwidW5tb3VudENvbXBvbmVudEF0Tm9kZSIsInVuc3RhYmxlX2NyZWF0ZVBvcnRhbCIsInVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzIiwidW5zdGFibGVfaW50ZXJhY3RpdmVVcGRhdGVzIiwiZmx1c2hTeW5jIiwidW5zdGFibGVfY3JlYXRlUm9vdCIsInVuc3RhYmxlX2ZsdXNoQ29udHJvbGxlZCIsIkV2ZW50cyIsImZpbmRGaWJlckJ5SG9zdEluc3RhbmNlIiwiaXNEaXNhYmxlZCIsInN1cHBvcnRzRmliZXIiLCJpbmplY3QiLCJvbkNvbW1pdEZpYmVyUm9vdCIsIm9uQ29tbWl0RmliZXJVbm1vdW50IiwiV2UiLCJvdmVycmlkZVByb3BzIiwiZmluZEhvc3RJbnN0YW5jZUJ5RmliZXIiLCJidW5kbGVUeXBlIiwicmVuZGVyZXJQYWNrYWdlTmFtZSIsImxpIiwibWkiLCJnbG9iYWwiLCJwcmV2aW91cyIsInByaW9yaXR5TGV2ZWwiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJjYW5jZWxBbmltYXRpb25GcmFtZSIsInBlcmZvcm1hbmNlIiwiX3NjaGVkTW9jayIsIk1lc3NhZ2VDaGFubmVsIiwicG9ydDIiLCJwb3J0MSIsIm9ubWVzc2FnZSIsInBvc3RNZXNzYWdlIiwidW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHkiLCJ1bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eSIsInVuc3RhYmxlX05vcm1hbFByaW9yaXR5IiwidW5zdGFibGVfSWRsZVByaW9yaXR5IiwidW5zdGFibGVfTG93UHJpb3JpdHkiLCJ1bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHkiLCJ1bnN0YWJsZV93cmFwQ2FsbGJhY2siLCJ1bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbCIsInVuc3RhYmxlX2NvbnRpbnVlRXhlY3V0aW9uIiwidW5zdGFibGVfcGF1c2VFeGVjdXRpb24iLCJ1bnN0YWJsZV9nZXRGaXJzdENhbGxiYWNrTm9kZSIsIkZ1bmN0aW9uIiwiUmVhY3RQcm9wVHlwZXNTZWNyZXQiLCJlbXB0eUZ1bmN0aW9uIiwic2hpbSIsInByb3BOYW1lIiwiY29tcG9uZW50TmFtZSIsInByb3BGdWxsTmFtZSIsInNlY3JldCIsImdldFNoaW0iLCJpc1JlcXVpcmVkIiwiUmVhY3RQcm9wVHlwZXMiLCJhcnJheSIsImJvb2wiLCJzdHJpbmciLCJzeW1ib2wiLCJhbnkiLCJhcnJheU9mIiwiaW5zdGFuY2VPZiIsIm9iamVjdE9mIiwib25lT2YiLCJvbmVPZlR5cGUiLCJzaGFwZSIsImV4YWN0IiwiY2hlY2tQcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJhcnIiLCJpc0Fic29sdXRlIiwicGF0aG5hbWUiLCJzcGxpY2VPbmUiLCJsaXN0IiwicmVzb2x2ZV9wYXRobmFtZSIsInRvUGFydHMiLCJmcm9tUGFydHMiLCJpc1RvQWJzIiwiaXNGcm9tQWJzIiwibXVzdEVuZEFicyIsImhhc1RyYWlsaW5nU2xhc2giLCJsYXN0IiwidXAiLCJwYXJ0IiwidW5zaGlmdCIsImFkZExlYWRpbmdTbGFzaCIsImhhc0Jhc2VuYW1lIiwic3RyaXBCYXNlbmFtZSIsInN0cmlwVHJhaWxpbmdTbGFzaCIsImNyZWF0ZVBhdGgiLCJoYXNoIiwiX2V4dGVuZHMiLCJMb2NhdGlvblV0aWxzX2NyZWF0ZUxvY2F0aW9uIiwiY3VycmVudExvY2F0aW9uIiwiaGFzaEluZGV4Iiwic2VhcmNoSW5kZXgiLCJwYXJzZVBhdGgiLCJkZWNvZGVVUkkiLCJVUklFcnJvciIsImVzX2NyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyIiwicHJvbXB0IiwibGlzdGVuZXJzIiwic2V0UHJvbXB0IiwibmV4dFByb21wdCIsImJyb3dzZXJfZGVmYXVsdCIsImNvbmZpcm1UcmFuc2l0aW9uVG8iLCJhY3Rpb24iLCJnZXRVc2VyQ29uZmlybWF0aW9uIiwiYXBwZW5kTGlzdGVuZXIiLCJmbiIsImlzQWN0aXZlIiwibGlzdGVuZXIiLCJmaWx0ZXIiLCJpdGVtIiwibm90aWZ5TGlzdGVuZXJzIiwiX2xlbiIsIl9rZXkiLCJjYW5Vc2VET00iLCJldmVudCIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJnZXRDb25maXJtYXRpb24iLCJtZXNzYWdlIiwiY29uZmlybSIsImNyZWF0ZUJyb3dzZXJIaXN0b3J5X3R5cGVvZiIsImNyZWF0ZUJyb3dzZXJIaXN0b3J5X2V4dGVuZHMiLCJnZXRIaXN0b3J5U3RhdGUiLCJoaXN0b3J5IiwiZXNfY3JlYXRlQnJvd3Nlckhpc3RvcnkiLCJpbnZhcmlhbnRfYnJvd3Nlcl9kZWZhdWx0IiwiZ2xvYmFsSGlzdG9yeSIsImNhblVzZUhpc3RvcnkiLCJuYXZpZ2F0b3IiLCJ1c2VyQWdlbnQiLCJuZWVkc0hhc2hDaGFuZ2VMaXN0ZW5lciIsIl9wcm9wcyRmb3JjZVJlZnJlc2giLCJmb3JjZVJlZnJlc2giLCJfcHJvcHMkZ2V0VXNlckNvbmZpcm0iLCJfcHJvcHMka2V5TGVuZ3RoIiwia2V5TGVuZ3RoIiwiYmFzZW5hbWUiLCJnZXRET01Mb2NhdGlvbiIsImhpc3RvcnlTdGF0ZSIsIl9yZWYiLCJfd2luZG93JGxvY2F0aW9uIiwiY3JlYXRlS2V5IiwidHJhbnNpdGlvbk1hbmFnZXIiLCJuZXh0U3RhdGUiLCJoYW5kbGVQb3BTdGF0ZSIsImlzRXh0cmFuZW91c1BvcHN0YXRlRXZlbnQiLCJoYW5kbGVQb3AiLCJoYW5kbGVIYXNoQ2hhbmdlIiwiZm9yY2VOZXh0UG9wIiwib2siLCJyZXZlcnRQb3AiLCJmcm9tTG9jYXRpb24iLCJ0b0xvY2F0aW9uIiwidG9JbmRleCIsImFsbEtleXMiLCJmcm9tSW5kZXgiLCJkZWx0YSIsImdvIiwiaW5pdGlhbExvY2F0aW9uIiwiY3JlYXRlSHJlZiIsImxpc3RlbmVyQ291bnQiLCJjaGVja0RPTUxpc3RlbmVycyIsImlzQmxvY2tlZCIsImhyZWYiLCJwdXNoU3RhdGUiLCJwcmV2SW5kZXgiLCJuZXh0S2V5cyIsInJlcGxhY2VTdGF0ZSIsImdvQmFjayIsImdvRm9yd2FyZCIsImJsb2NrIiwidW5ibG9jayIsImxpc3RlbiIsInVubGlzdGVuIiwiUm91dGVyX2V4dGVuZHMiLCJfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsInNlbGYiLCJSZWZlcmVuY2VFcnJvciIsIlJvdXRlcl9Sb3V0ZXIiLCJfUmVhY3QkQ29tcG9uZW50IiwiUm91dGVyIiwiX3RlbXAiLCJfdGhpcyIsImluc3RhbmNlIiwiQ29uc3RydWN0b3IiLCJfY2xhc3NDYWxsQ2hlY2siLCJjb21wdXRlTWF0Y2giLCJzdWJDbGFzcyIsInN1cGVyQ2xhc3MiLCJ3cml0YWJsZSIsInNldFByb3RvdHlwZU9mIiwiX19wcm90b19fIiwiX2luaGVyaXRzIiwicm91dGVyIiwicGFyYW1zIiwiaXNFeGFjdCIsIl90aGlzMiIsIl9wcm9wcyIsInJlYWN0X2RlZmF1bHQiLCJuZXh0UHJvcHMiLCJ3YXJuaW5nX2RlZmF1bHQiLCJwcm9wVHlwZXMiLCJwcm9wX3R5cGVzX2RlZmF1bHQiLCJyZWFjdF9yb3V0ZXJfZG9tX2VzX1JvdXRlciIsIkJyb3dzZXJSb3V0ZXJfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsIkJyb3dzZXJSb3V0ZXJfQnJvd3NlclJvdXRlciIsIkJyb3dzZXJSb3V0ZXIiLCJCcm93c2VyUm91dGVyX2NsYXNzQ2FsbENoZWNrIiwiQnJvd3NlclJvdXRlcl9pbmhlcml0cyIsImVzX0Jyb3dzZXJSb3V0ZXIiLCJwYXR0ZXJuQ2FjaGUiLCJjYWNoZUNvdW50IiwiZXNfbWF0Y2hQYXRoIiwicGFyZW50IiwiX29wdGlvbnMiLCJfb3B0aW9ucyRleGFjdCIsIl9vcHRpb25zJHN0cmljdCIsIl9vcHRpb25zJHNlbnNpdGl2ZSIsIl9jb21waWxlUGF0aCIsImNhY2hlS2V5IiwiY2FjaGUiLCJjb21waWxlZFBhdHRlcm4iLCJwYXRoX3RvX3JlZ2V4cF9kZWZhdWx0IiwibWF0Y2hQYXRoX2NvbXBpbGVQYXRoIiwidmFsdWVzIiwicmVkdWNlIiwiU3dpdGNoX1N3aXRjaCIsIlN3aXRjaCIsIlN3aXRjaF9jbGFzc0NhbGxDaGVjayIsIlN3aXRjaF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwiU3dpdGNoX2luaGVyaXRzIiwiX2VsZW1lbnQkcHJvcHMiLCJwYXRoUHJvcCIsImNvbXB1dGVkTWF0Y2giLCJyZWFjdF9yb3V0ZXJfZG9tX2VzX1N3aXRjaCIsIlJvdXRlX2V4dGVuZHMiLCJSb3V0ZV9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwiUm91dGVfaXNFbXB0eUNoaWxkcmVuIiwiUm91dGVfUm91dGUiLCJSb3V0ZSIsIlJvdXRlX2NsYXNzQ2FsbENoZWNrIiwiUm91dGVfaW5oZXJpdHMiLCJjb21wb25lbnQiLCJuZXh0Q29udGV4dCIsIl9jb250ZXh0JHJvdXRlciIsInN0YXRpY0NvbnRleHQiLCJyZWFjdF9yb3V0ZXJfZG9tX2VzX1JvdXRlIiwiUmVhY3QiLCJyZXF1aXJlIiwiU2VhcmNoSXRlbSIsInN0YW5kYXJkX2hlYWRlcl9jbGFzc0NhbGxDaGVjayIsInN0YW5kYXJkX2hlYWRlcl9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwic3RhbmRhcmRfaGVhZGVyX2dldFByb3RvdHlwZU9mIiwiaXRlbV9saXN0IiwiY2xhc3NOYW1lIiwiU2VhcmNoTGlzdCIsInNlYXJjaF9saXN0IiwidGhhdCIsImZldGNoIiwibWV0aG9kIiwiaGVhZGVycyIsIkFjY2VwdCIsIkF1dGhvcml6YXRpb24iLCJDb250ZW50LVR5cGUiLCJyZXNwb25zZSIsImpzb24iLCJzZWFyY2hfcmVzdWx0cyIsInVzZXJzIiwiYXJ0aXN0cyIsInNvbmdzIiwiYWxidW1zIiwidXNlcl9kaXNwbGF5IiwidXNlcm5hbWUiLCJ1c2VyX3VybCIsImFydGlzdF9kaXNwbGF5IiwiYXJ0aXN0IiwiYXJ0aXN0X3VybCIsInNvbmdfZGlzcGxheSIsInNvbmciLCJzb25nX3VybCIsImFsYnVtX2Rpc3BsYXkiLCJhbGJ1bSIsImFsYnVtX3VybCIsInNvcnQiLCJTb3J0U2VhcmNoIiwiY2xlYXJJdGVtcyIsInJlbmRlckl0ZW0iLCJvbkNoYW5nZSIsImhhbmRsZUNoYW5nZSIsInBsYWNlaG9sZGVyIiwiU3RhbmRhcmRIZWFkZXIiLCJfdGhpczMiLCJyZWxvYWQiLCJsb2dpbl9pbmZvIiwibWFyZ2luUmlnaHQiLCJsb2dvdXRDbGlja2VkIiwibGFuZyIsInJlbCIsInBvc2l0aW9uIiwiYmFja2dyb3VuZENvbG9yIiwib3ZlcmZsb3ciLCJyaWdodCIsIlBvc3QiLCJwb3N0X2NsYXNzQ2FsbENoZWNrIiwicG9zdF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwicG9zdF9nZXRQcm90b3R5cGVPZiIsImxpa2VzX3Njb3JlIiwibGlrZXMiLCJkaXNsaWtlcyIsInVwX2ltYWdlIiwiZG93bl9pbWFnZSIsImlmcmFtZSIsInV0aWxzIiwicG9zdF9pZCIsInBvc3RfdXJsIiwidXNlciIsImxpa2Vfc3RhdGUiLCJhbGVydCIsIl9yZWYyIiwiX3JlZjMiLCJ0aW1lc3RhbXAiLCJwb3N0X3RpdGxlIiwidGl0bGUiLCJwb3N0ZXJfdXNlcm5hbWUiLCJwb3N0ZXJfdXNlcm5hbWVfdXJsIiwiYXJ0aXN0X25hbWUiLCJjb250ZW50X2RpdiIsImNvbnRlbnQiLCJsaWtlX3N0eWxlIiwiZGlzbGlrZV9zdHlsZSIsImxpa2VSZWYiLCJsaWtlQ2xpY2tlZCIsImRpc2xpa2VSZWYiLCJkaXNsaWtlQ2xpY2tlZCIsImNvbnRlbnRfdXJsIiwiY29udGVudF9uYW1lIiwiYm9yZGVyIiwiYm9yZGVyUmFkaXVzIiwiYmFja2dyb3VuZCIsImZsb2F0IiwicGFkZGluZ0xlZnQiLCJwYWRkaW5nVG9wIiwiZm9udEZhbWlseSIsInBhZGRpbmdSaWdodCIsInBhcnNlSW50IiwiZ2V0TW9udGgiLCJnZXREYXRlIiwiZ2V0RnVsbFllYXIiLCJjbGVhciIsInJlbmRlcmlmcmFtZSIsImVtYmVkZGVkX2NvbnRlbnQiLCJfZGVmaW5lUHJvcGVydHkiLCJmb250U2l6ZSIsInNyYyIsImFsdCIsInZlcnRpY2FsQWxpZ24iLCJ0ZXh0QWxpZ24iLCJib3JkZXJSaWdodCIsIm51bV9jb21tZW50cyIsIlBvc3RJbmZvIiwicG9zdHMiLCJjdXJyZW50X251bV9jb21tZW50cyIsIl9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24iLCJfZGlkSXRlcmF0b3JFcnJvciIsIl9pdGVyYXRvckVycm9yIiwiX3N0ZXAiLCJfaXRlcmF0b3IiLCJsaWtlIiwiX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjIiLCJfZGlkSXRlcmF0b3JFcnJvcjIiLCJfaXRlcmF0b3JFcnJvcjIiLCJfc3RlcDIiLCJfaXRlcmF0b3IyIiwicG9zdF9Qb3N0IiwiX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjMiLCJfZGlkSXRlcmF0b3JFcnJvcjMiLCJfaXRlcmF0b3JFcnJvcjMiLCJfc3RlcDMiLCJfaXRlcmF0b3IzIiwibWFrZVBvc3QiLCJhbGxfbnVtX2NvbW1lbnRzIiwiX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjQiLCJfZGlkSXRlcmF0b3JFcnJvcjQiLCJfaXRlcmF0b3JFcnJvcjQiLCJfc3RlcDQiLCJfaXRlcmF0b3I0IiwiX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjUiLCJfZGlkSXRlcmF0b3JFcnJvcjUiLCJfaXRlcmF0b3JFcnJvcjUiLCJfc3RlcDUiLCJfaXRlcmF0b3I1IiwiX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjYiLCJfZGlkSXRlcmF0b3JFcnJvcjYiLCJfaXRlcmF0b3JFcnJvcjYiLCJfc3RlcDYiLCJfaXRlcmF0b3I2IiwiYWRkU29uZ3MiLCJwb3N0IiwiTmV3UG9zdFN1Ym1pc3Npb24iLCJmZWVkX2NsYXNzQ2FsbENoZWNrIiwiZmVlZF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwiZmVlZF9nZXRQcm90b3R5cGVPZiIsInNvbmdFbWJlZFJlZiIsImNvbnRlbnRSZWYiLCJ0aXRsZVJlZiIsImNvbnRlbnRfc3RyIiwiYXV0b0NvbXBsZXRlIiwic29uZ0lucHV0IiwiY29udGVudElucHV0Iiwicm93cyIsImNvbHMiLCJzdWJtaXRQb3N0IiwiRmVlZCIsImxvYWRpbmdfcG9zdHNfc2VtYXBob3IiLCJub25fcHJpb3JpdHlfb2Zmc2V0IiwiZ2xvYmFsX29mZnNldCIsIm5vbl9wcmlvcml0eV9nbG9iYWxfb2Zmc2V0IiwicG9zdHNSZWYiLCJoYW5kbGVTY3JvbGwiLCJ1cGRhdGVPZmZzZXRzIiwib2Zmc2V0X3R5cGUiLCJpbm5lckhlaWdodCIsInNjcm9sbFkiLCJvZmZzZXRIZWlnaHQiLCJhZGRQb3N0cyIsImZlZWRfTmV3UG9zdFN1Ym1pc3Npb24iLCJwb3N0X1Bvc3RJbmZvIiwiQ29udGFjdCIsIkNvbnRhY3RfY2xhc3NDYWxsQ2hlY2siLCJDb250YWN0X3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iLCJDb250YWN0X2dldFByb3RvdHlwZU9mIiwiQWJvdXQiLCJhYm91dF9jbGFzc0NhbGxDaGVjayIsImFib3V0X3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iLCJhYm91dF9nZXRQcm90b3R5cGVPZiIsIlVzZXJJbmZvIiwidXNlcl9jbGFzc0NhbGxDaGVjayIsInVzZXJfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsInVzZXJfZ2V0UHJvdG90eXBlT2YiLCJ1c2VyX2RlZmluZVByb3BlcnR5IiwiZGVzY3JpcHRpb24iLCJ1cHZvdGVzIiwiZG93bnZvdGVzIiwiRm9sbG93ZXJJbmZvIiwiZm9sbG93ZWVfaWQiLCJmb2xsb3dzIiwiZm9sbG93ZWVzIiwiZm9sbG93Q2xpY2tlZCIsIlVzZXJQYWdlIiwidXNlcl9Vc2VySW5mbyIsInVzZXJfRm9sbG93ZXJJbmZvIiwiZ2VuZXJhdGVDb21tZW50cyIsImNvbW1lbnRzIiwiY29tbWVudF92b3RlcyIsInN0YXJ0aW5nX2NvbW1lbnRfbGV2ZWwiLCJsZXZlbHMiLCJsZXZlbF96ZXJvX2NvbW1lbnRzIiwiY29tbWVudCIsImNvbW1lbnRfbGV2ZWwiLCJjdXJyZW50X2xldmVsc19sZW5ndGgiLCJjb21tZW50X21hcCIsImN1cnJlbnRfY29tbWVudHMiLCJsZXZlbCIsImNvbW1lbnRfdm90ZSIsImNvbW1lbnRfaWQiLCJyZXBsaWVzIiwidm90ZSIsImNvbW1lbnRzX0NvbW1lbnQiLCJjaGlsZF9jb21tZW50cyIsInZvdGVfc3RhdGUiLCJfaSIsInBhcmVudF9pZCIsInBhcmVudF9jb21tZW50X2lkIiwiQ29tbWVudCIsImNvbW1lbnRzX2NsYXNzQ2FsbENoZWNrIiwiY29tbWVudHNfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsImNvbW1lbnRzX2dldFByb3RvdHlwZU9mIiwicmVwbGllc19idXR0b24iLCJsZWZ0X29mZnNldCIsInNob3dSZXBsaWVzIiwiY29tbWVudHNfYXNzZXJ0VGhpc0luaXRpYWxpemVkIiwidXB2b3RlUmVmIiwiZG93bnZvdGVSZWYiLCJzY29yZVJlZiIsInZvdGVzX3Njb3JlIiwibmV3X2NvbW1lbnQiLCJuZXdDb21tZW50VGV4dFJlZiIsImNsYXNzIiwic3VibWl0TmV3Q29tbWVudCIsImJvdHRvbSIsImNsb3NlTmV3Q29tbWVudCIsInVzZXJfaWQiLCJtaW51dGVzIiwiZ2V0TWludXRlcyIsImRhdGVfdGV4dCIsImdldEhvdXJzIiwiY29tbWVudF90ZXh0IiwidXB2b3RlX2NvbG9yIiwiZG93bnZvdGVfY29sb3IiLCJ1cHZvdGVDbGlja2VkIiwiZG93bnZvdGVDbGlja2VkIiwiYm9yZGVyU3R5bGUiLCJib3JkZXJCb3R0b21TdHlsZSIsIm9wZW5OZXdDb21tZW50IiwiYm9yZGVyVG9wU3R5bGUiLCJ0ZXN0X3RleHQiLCJDb21tZW50U2VjdGlvbiIsImxvYWRpbmdfY29tbWVudHNfc2VtYXBob3IiLCJjb21tZW50X3Jlc3VsdCIsImdldENvbW1lbnRzIiwiX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjciLCJfZGlkSXRlcmF0b3JFcnJvcjciLCJfaXRlcmF0b3JFcnJvcjciLCJfc3RlcDciLCJfaXRlcmF0b3I3IiwiVXNlclBvc3RDb250ZW50IiwidXNlcl9wb3N0X2NsYXNzQ2FsbENoZWNrIiwidXNlcl9wb3N0X3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iLCJ1c2VyX3Bvc3RfZ2V0UHJvdG90eXBlT2YiLCJwYWRkaW5nQm90dG9tIiwibWluSGVpZ2h0IiwiVXNlclBvc3QiLCJ1c2VyX3Bvc3RfVXNlclBvc3RDb250ZW50IiwidXNlcl9wb3N0IiwiY29tbWVudHNfQ29tbWVudFNlY3Rpb24iLCJHbG9iYWxQb3N0Q29udGVudCIsImdsb2JhbF9wb3N0X2NsYXNzQ2FsbENoZWNrIiwiZ2xvYmFsX3Bvc3RfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsImdsb2JhbF9wb3N0X2dldFByb3RvdHlwZU9mIiwiYWxidW1fc29uZ3MiLCJfYXJyIiwicGFkZGluZyIsImdlbmVyYXRlQWxidW1Tb25ncyIsInJlbGVhc2VfZGF0ZSIsIkdsb2JhbFBvc3QiLCJnbG9iYWxfcG9zdF9HbG9iYWxQb3N0Q29udGVudCIsImdsb2JhbF9wb3N0IiwiRm9sbG93aW5nSW5mbyIsImFydGlzdF9jbGFzc0NhbGxDaGVjayIsImFydGlzdF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwiYXJ0aXN0X2dldFByb3RvdHlwZU9mIiwiQWxidW1EaXNwbGF5IiwiZmxleERpcmVjdGlvbiIsImdlbmVyYXRlQWxidW1zIiwiU29uZ0Rpc3BsYXkiLCJnZW5lcmF0ZVNvbmdzIiwiQXJ0aXN0UG9zdCIsImFydGlzdF9Gb2xsb3dpbmdJbmZvIiwiYXJ0aXN0X0FsYnVtRGlzcGxheSIsImFsYnVtX2RhdGEiLCJhcnRpc3RfU29uZ0Rpc3BsYXkiLCJzb25nX2RhdGEiLCJBcnRpc3RTb25nc1BhZ2UiLCJhcnRpc3Rfc29uZ3NfY2xhc3NDYWxsQ2hlY2siLCJhcnRpc3Rfc29uZ3NfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsImFydGlzdF9zb25nc19nZXRQcm90b3R5cGVPZiIsIkFydGlzdEFsYnVtc1BhZ2UiLCJhcnRpc3RfYWxidW1zX2NsYXNzQ2FsbENoZWNrIiwiYXJ0aXN0X2FsYnVtc19wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwiYXJ0aXN0X2FsYnVtc19nZXRQcm90b3R5cGVPZiIsIkxvZ2luUGFnZSIsImxvZ2luX2NsYXNzQ2FsbENoZWNrIiwibG9naW5fcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsImxvZ2luX2dldFByb3RvdHlwZU9mIiwidXNlcm5hbWVSZWYiLCJwYXNzd29yZFJlZiIsImxvZ2luX21lc3NhZ2UiLCJzdWJtaXRMb2dpbiIsIlJlZ2lzdGVyUGFnZSIsInJlZ2lzdGVyX2NsYXNzQ2FsbENoZWNrIiwicmVnaXN0ZXJfZ2V0UHJvdG90eXBlT2YiLCJjb25maXJtUmVmIiwicmVnaXN0ZXJfYXNzZXJ0VGhpc0luaXRpYWxpemVkIiwicGFzc3dvcmRfY29uZmlybSIsInN1Ym1pdFJlZ2lzdHJhdGlvbiIsIkZvbGxvd2Vyc1BhZ2UiLCJmb2xsb3dlcnNfY2xhc3NDYWxsQ2hlY2siLCJmb2xsb3dlcnNfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsImZvbGxvd2Vyc19nZXRQcm90b3R5cGVPZiIsImZvbGxvd2VycyIsImZvbGxvd2VyIiwiZ2VuZXJhdGVGb2xsb3dlcnMiLCJGb2xsb3dpbmdQYWdlIiwiZm9sbG93aW5nX2NsYXNzQ2FsbENoZWNrIiwiZm9sbG93aW5nX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iLCJmb2xsb3dpbmdfZ2V0UHJvdG90eXBlT2YiLCJmb2xsb3dpbmciLCJmb2xsb3ciLCJnZW5lcmF0ZUZvbGxvd3MiLCJBcHAiLCJBcHBfY2xhc3NDYWxsQ2hlY2siLCJBcHBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsIkFwcF9nZXRQcm90b3R5cGVPZiIsImZlZWRfRmVlZCIsInVzZXJfcG9zdF9Vc2VyUG9zdCIsInVzZXJfVXNlclBhZ2UiLCJmb2xsb3dlcnNfRm9sbG93ZXJzUGFnZSIsImZvbGxvd2luZ19Gb2xsb3dpbmdQYWdlIiwibG9naW5fTG9naW5QYWdlIiwicmVnaXN0ZXJfUmVnaXN0ZXJQYWdlIiwiZ2xvYmFsX3Bvc3RfR2xvYmFsUG9zdCIsImFydGlzdF9BcnRpc3RQb3N0IiwiYXJ0aXN0X3NvbmdzX0FydGlzdFNvbmdzUGFnZSIsImFydGlzdF9hbGJ1bXNfQXJ0aXN0QWxidW1zUGFnZSIsIkFwcF9BcHAiLCJfX0RBVEFfXyIsImdldEVsZW1lbnRCeUlkIl0sIm1hcHBpbmdzIjoiYUFDQSxJQUFBQSxFQUFBLEdBR0EsU0FBQUMsRUFBQUMsR0FHQSxHQUFBRixFQUFBRSxHQUNBLE9BQUFGLEVBQUFFLEdBQUFDLFFBR0EsSUFBQUMsRUFBQUosRUFBQUUsR0FBQSxDQUNBRyxFQUFBSCxFQUNBSSxHQUFBLEVBQ0FILFFBQUEsSUFVQSxPQU5BSSxFQUFBTCxHQUFBTSxLQUFBSixFQUFBRCxRQUFBQyxJQUFBRCxRQUFBRixHQUdBRyxFQUFBRSxHQUFBLEVBR0FGLEVBQUFELFFBS0FGLEVBQUFRLEVBQUFGLEVBR0FOLEVBQUFTLEVBQUFWLEVBR0FDLEVBQUFVLEVBQUEsU0FBQVIsRUFBQVMsRUFBQUMsR0FDQVosRUFBQWEsRUFBQVgsRUFBQVMsSUFDQUcsT0FBQUMsZUFBQWIsRUFBQVMsRUFBQSxDQUEwQ0ssWUFBQSxFQUFBQyxJQUFBTCxLQUsxQ1osRUFBQWtCLEVBQUEsU0FBQWhCLEdBQ0Esb0JBQUFpQixlQUFBQyxhQUNBTixPQUFBQyxlQUFBYixFQUFBaUIsT0FBQUMsWUFBQSxDQUF3REMsTUFBQSxXQUV4RFAsT0FBQUMsZUFBQWIsRUFBQSxjQUFpRG1CLE9BQUEsS0FRakRyQixFQUFBc0IsRUFBQSxTQUFBRCxFQUFBRSxHQUVBLEdBREEsRUFBQUEsSUFBQUYsRUFBQXJCLEVBQUFxQixJQUNBLEVBQUFFLEVBQUEsT0FBQUYsRUFDQSxLQUFBRSxHQUFBLGlCQUFBRixRQUFBRyxXQUFBLE9BQUFILEVBQ0EsSUFBQUksRUFBQVgsT0FBQVksT0FBQSxNQUdBLEdBRkExQixFQUFBa0IsRUFBQU8sR0FD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QUFPLFdBQVk0eEMsVUFBV3lMLEtBQzNDck8sRUFBQXR5QyxFQUFBK00sY0FBQ3VvQyxFQUFELENBQU92TCxPQUFLLEVBQUN6bUMsS0FBTyxTQUFVNHhDLFVBQVc2TCxNQUUxQ3pPLEVBQUF0eUMsRUFBQStNLGNBQUEsVUFBUWxELEtBQUssa0JBQWtCb3lDLElBQUkscUJBQW5DLDZDQzVDSjV2QyxpQkFDQ2ltQyxFQUFBdHlDLEVBQUErTSxjQUFDa21DLEVBQUQsS0FDQ1gsRUFBQXR5QyxFQUFBK00sY0FBQzYrQyxHQUFELENBQUt4bUQsS0FBUXdNLE9BQU9pNkMsWUFFckJyc0QsU0FBU3NzRCxlQUFlIiwiZmlsZSI6ImJ1bmRsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIiBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbiBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG5cbiBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cbiBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKSB7XG4gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG4gXHRcdH1cbiBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbiBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuIFx0XHRcdGk6IG1vZHVsZUlkLFxuIFx0XHRcdGw6IGZhbHNlLFxuIFx0XHRcdGV4cG9ydHM6IHt9XG4gXHRcdH07XG5cbiBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG4gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcbiBcdFx0bW9kdWxlLmwgPSB0cnVlO1xuXG4gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbiBcdH1cblxuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcbiBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG5cbiBcdC8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb24gZm9yIGhhcm1vbnkgZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kID0gZnVuY3Rpb24oZXhwb3J0cywgbmFtZSwgZ2V0dGVyKSB7XG4gXHRcdGlmKCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywgbmFtZSkpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgbmFtZSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGdldHRlciB9KTtcbiBcdFx0fVxuIFx0fTtcblxuIFx0Ly8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yID0gZnVuY3Rpb24oZXhwb3J0cykge1xuIFx0XHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcbiBcdFx0fVxuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuIFx0fTtcblxuIFx0Ly8gY3JlYXRlIGEgZmFrZSBuYW1lc3BhY2Ugb2JqZWN0XG4gXHQvLyBtb2RlICYgMTogdmFsdWUgaXMgYSBtb2R1bGUgaWQsIHJlcXVpcmUgaXRcbiBcdC8vIG1vZGUgJiAyOiBtZXJnZSBhbGwgcHJvcGVydGllcyBvZiB2YWx1ZSBpbnRvIHRoZSBuc1xuIFx0Ly8gbW9kZSAmIDQ6IHJldHVybiB2YWx1ZSB3aGVuIGFscmVhZHkgbnMgb2JqZWN0XG4gXHQvLyBtb2RlICYgOHwxOiBiZWhhdmUgbGlrZSByZXF1aXJlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnQgPSBmdW5jdGlvbih2YWx1ZSwgbW9kZSkge1xuIFx0XHRpZihtb2RlICYgMSkgdmFsdWUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKHZhbHVlKTtcbiBcdFx0aWYobW9kZSAmIDgpIHJldHVybiB2YWx1ZTtcbiBcdFx0aWYoKG1vZGUgJiA0KSAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHZhbHVlICYmIHZhbHVlLl9fZXNNb2R1bGUpIHJldHVybiB2YWx1ZTtcbiBcdFx0dmFyIG5zID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yKG5zKTtcbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG5zLCAnZGVmYXVsdCcsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHZhbHVlIH0pO1xuIFx0XHRpZihtb2RlICYgMiAmJiB0eXBlb2YgdmFsdWUgIT0gJ3N0cmluZycpIGZvcih2YXIga2V5IGluIHZhbHVlKSBfX3dlYnBhY2tfcmVxdWlyZV9fLmQobnMsIGtleSwgZnVuY3Rpb24oa2V5KSB7IHJldHVybiB2YWx1ZVtrZXldOyB9LmJpbmQobnVsbCwga2V5KSk7XG4gXHRcdHJldHVybiBucztcbiBcdH07XG5cbiBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbiBcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbiBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4gXHRcdHJldHVybiBnZXR0ZXI7XG4gXHR9O1xuXG4gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7XG5cblxuIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyhfX3dlYnBhY2tfcmVxdWlyZV9fLnMgPSAxOCk7XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgdmFyIFJFQUNUX0VMRU1FTlRfVFlQRSA9ICh0eXBlb2YgU3ltYm9sID09PSAnZnVuY3Rpb24nICYmXG4gICAgU3ltYm9sLmZvciAmJlxuICAgIFN5bWJvbC5mb3IoJ3JlYWN0LmVsZW1lbnQnKSkgfHxcbiAgICAweGVhYzc7XG5cbiAgdmFyIGlzVmFsaWRFbGVtZW50ID0gZnVuY3Rpb24ob2JqZWN0KSB7XG4gICAgcmV0dXJuIHR5cGVvZiBvYmplY3QgPT09ICdvYmplY3QnICYmXG4gICAgICBvYmplY3QgIT09IG51bGwgJiZcbiAgICAgIG9iamVjdC4kJHR5cGVvZiA9PT0gUkVBQ1RfRUxFTUVOVF9UWVBFO1xuICB9O1xuXG4gIC8vIEJ5IGV4cGxpY2l0bHkgdXNpbmcgYHByb3AtdHlwZXNgIHlvdSBhcmUgb3B0aW5nIGludG8gbmV3IGRldmVsb3BtZW50IGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIHZhciB0aHJvd09uRGlyZWN0QWNjZXNzID0gdHJ1ZTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2ZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzJykoaXNWYWxpZEVsZW1lbnQsIHRocm93T25EaXJlY3RBY2Nlc3MpO1xufSBlbHNlIHtcbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgcHJvZHVjdGlvbiBiZWhhdmlvci5cbiAgLy8gaHR0cDovL2ZiLm1lL3Byb3AtdHlwZXMtaW4tcHJvZFxuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUaHJvd2luZ1NoaW1zJykoKTtcbn1cbiIsIi8qKlxuICogQ29weXJpZ2h0IDIwMTQtMjAxNSwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuIEFuIGFkZGl0aW9uYWwgZ3JhbnRcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBTaW1pbGFyIHRvIGludmFyaWFudCBidXQgb25seSBsb2dzIGEgd2FybmluZyBpZiB0aGUgY29uZGl0aW9uIGlzIG5vdCBtZXQuXG4gKiBUaGlzIGNhbiBiZSB1c2VkIHRvIGxvZyBpc3N1ZXMgaW4gZGV2ZWxvcG1lbnQgZW52aXJvbm1lbnRzIGluIGNyaXRpY2FsXG4gKiBwYXRocy4gUmVtb3ZpbmcgdGhlIGxvZ2dpbmcgY29kZSBmb3IgcHJvZHVjdGlvbiBlbnZpcm9ubWVudHMgd2lsbCBrZWVwIHRoZVxuICogc2FtZSBsb2dpYyBhbmQgZm9sbG93IHRoZSBzYW1lIGNvZGUgcGF0aHMuXG4gKi9cblxudmFyIHdhcm5pbmcgPSBmdW5jdGlvbigpIHt9O1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICB3YXJuaW5nID0gZnVuY3Rpb24oY29uZGl0aW9uLCBmb3JtYXQsIGFyZ3MpIHtcbiAgICB2YXIgbGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICBhcmdzID0gbmV3IEFycmF5KGxlbiA+IDIgPyBsZW4gLSAyIDogMCk7XG4gICAgZm9yICh2YXIga2V5ID0gMjsga2V5IDwgbGVuOyBrZXkrKykge1xuICAgICAgYXJnc1trZXkgLSAyXSA9IGFyZ3VtZW50c1trZXldO1xuICAgIH1cbiAgICBpZiAoZm9ybWF0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgJ2B3YXJuaW5nKGNvbmRpdGlvbiwgZm9ybWF0LCAuLi5hcmdzKWAgcmVxdWlyZXMgYSB3YXJuaW5nICcgK1xuICAgICAgICAnbWVzc2FnZSBhcmd1bWVudCdcbiAgICAgICk7XG4gICAgfVxuXG4gICAgaWYgKGZvcm1hdC5sZW5ndGggPCAxMCB8fCAoL15bc1xcV10qJC8pLnRlc3QoZm9ybWF0KSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICAnVGhlIHdhcm5pbmcgZm9ybWF0IHNob3VsZCBiZSBhYmxlIHRvIHVuaXF1ZWx5IGlkZW50aWZ5IHRoaXMgJyArXG4gICAgICAgICd3YXJuaW5nLiBQbGVhc2UsIHVzZSBhIG1vcmUgZGVzY3JpcHRpdmUgZm9ybWF0IHRoYW46ICcgKyBmb3JtYXRcbiAgICAgICk7XG4gICAgfVxuXG4gICAgaWYgKCFjb25kaXRpb24pIHtcbiAgICAgIHZhciBhcmdJbmRleCA9IDA7XG4gICAgICB2YXIgbWVzc2FnZSA9ICdXYXJuaW5nOiAnICtcbiAgICAgICAgZm9ybWF0LnJlcGxhY2UoLyVzL2csIGZ1bmN0aW9uKCkge1xuICAgICAgICAgIHJldHVybiBhcmdzW2FyZ0luZGV4KytdO1xuICAgICAgICB9KTtcbiAgICAgIGlmICh0eXBlb2YgY29uc29sZSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihtZXNzYWdlKTtcbiAgICAgIH1cbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgZXJyb3Igd2FzIHRocm93biBhcyBhIGNvbnZlbmllbmNlIHNvIHRoYXQgeW91IGNhbiB1c2UgdGhpcyBzdGFja1xuICAgICAgICAvLyB0byBmaW5kIHRoZSBjYWxsc2l0ZSB0aGF0IGNhdXNlZCB0aGlzIHdhcm5pbmcgdG8gZmlyZS5cbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKG1lc3NhZ2UpO1xuICAgICAgfSBjYXRjaCh4KSB7fVxuICAgIH1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB3YXJuaW5nO1xuIiwibW9kdWxlLmV4cG9ydHMgPSBcclxue1xyXG5cdGNoZWNrTG9nZ2VkSW4gOiBmdW5jdGlvbiAoKVxyXG5cdHtcclxuXHRcdGlmIChkb2N1bWVudC5jb29raWUuaW5kZXhPZihcInVzZXJuYW1lPVwiKSAhPSAtMSlcclxuXHRcdHtcclxuXHRcdFx0Y29uc29sZS5sb2coXCJUUlVFXCIpXHJcblx0XHRcdHJldHVybiB0cnVlXHJcblx0XHR9XHJcblx0XHRjb25zb2xlLmxvZyhcIkZBTFNFXCIpXHJcblx0XHRyZXR1cm4gZmFsc2VcclxuXHR9LFxyXG59XHJcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE0LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIFNpbWlsYXIgdG8gaW52YXJpYW50IGJ1dCBvbmx5IGxvZ3MgYSB3YXJuaW5nIGlmIHRoZSBjb25kaXRpb24gaXMgbm90IG1ldC5cbiAqIFRoaXMgY2FuIGJlIHVzZWQgdG8gbG9nIGlzc3VlcyBpbiBkZXZlbG9wbWVudCBlbnZpcm9ubWVudHMgaW4gY3JpdGljYWxcbiAqIHBhdGhzLiBSZW1vdmluZyB0aGUgbG9nZ2luZyBjb2RlIGZvciBwcm9kdWN0aW9uIGVudmlyb25tZW50cyB3aWxsIGtlZXAgdGhlXG4gKiBzYW1lIGxvZ2ljIGFuZCBmb2xsb3cgdGhlIHNhbWUgY29kZSBwYXRocy5cbiAqL1xuXG52YXIgX19ERVZfXyA9IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbic7XG5cbnZhciB3YXJuaW5nID0gZnVuY3Rpb24oKSB7fTtcblxuaWYgKF9fREVWX18pIHtcbiAgdmFyIHByaW50V2FybmluZyA9IGZ1bmN0aW9uIHByaW50V2FybmluZyhmb3JtYXQsIGFyZ3MpIHtcbiAgICB2YXIgbGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICBhcmdzID0gbmV3IEFycmF5KGxlbiA+IDIgPyBsZW4gLSAyIDogMCk7XG4gICAgZm9yICh2YXIga2V5ID0gMjsga2V5IDwgbGVuOyBrZXkrKykge1xuICAgICAgYXJnc1trZXkgLSAyXSA9IGFyZ3VtZW50c1trZXldO1xuICAgIH1cbiAgICB2YXIgYXJnSW5kZXggPSAwO1xuICAgIHZhciBtZXNzYWdlID0gJ1dhcm5pbmc6ICcgK1xuICAgICAgZm9ybWF0LnJlcGxhY2UoLyVzL2csIGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gYXJnc1thcmdJbmRleCsrXTtcbiAgICAgIH0pO1xuICAgIGlmICh0eXBlb2YgY29uc29sZSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IobWVzc2FnZSk7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAvLyAtLS0gV2VsY29tZSB0byBkZWJ1Z2dpbmcgUmVhY3QgLS0tXG4gICAgICAvLyBUaGlzIGVycm9yIHdhcyB0aHJvd24gYXMgYSBjb252ZW5pZW5jZSBzbyB0aGF0IHlvdSBjYW4gdXNlIHRoaXMgc3RhY2tcbiAgICAgIC8vIHRvIGZpbmQgdGhlIGNhbGxzaXRlIHRoYXQgY2F1c2VkIHRoaXMgd2FybmluZyB0byBmaXJlLlxuICAgICAgdGhyb3cgbmV3IEVycm9yKG1lc3NhZ2UpO1xuICAgIH0gY2F0Y2ggKHgpIHt9XG4gIH1cblxuICB3YXJuaW5nID0gZnVuY3Rpb24oY29uZGl0aW9uLCBmb3JtYXQsIGFyZ3MpIHtcbiAgICB2YXIgbGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICBhcmdzID0gbmV3IEFycmF5KGxlbiA+IDIgPyBsZW4gLSAyIDogMCk7XG4gICAgZm9yICh2YXIga2V5ID0gMjsga2V5IDwgbGVuOyBrZXkrKykge1xuICAgICAgYXJnc1trZXkgLSAyXSA9IGFyZ3VtZW50c1trZXldO1xuICAgIH1cbiAgICBpZiAoZm9ybWF0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgICAnYHdhcm5pbmcoY29uZGl0aW9uLCBmb3JtYXQsIC4uLmFyZ3MpYCByZXF1aXJlcyBhIHdhcm5pbmcgJyArXG4gICAgICAgICAgJ21lc3NhZ2UgYXJndW1lbnQnXG4gICAgICApO1xuICAgIH1cbiAgICBpZiAoIWNvbmRpdGlvbikge1xuICAgICAgcHJpbnRXYXJuaW5nLmFwcGx5KG51bGwsIFtmb3JtYXRdLmNvbmNhdChhcmdzKSk7XG4gICAgfVxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHdhcm5pbmc7XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBVc2UgaW52YXJpYW50KCkgdG8gYXNzZXJ0IHN0YXRlIHdoaWNoIHlvdXIgcHJvZ3JhbSBhc3N1bWVzIHRvIGJlIHRydWUuXG4gKlxuICogUHJvdmlkZSBzcHJpbnRmLXN0eWxlIGZvcm1hdCAob25seSAlcyBpcyBzdXBwb3J0ZWQpIGFuZCBhcmd1bWVudHNcbiAqIHRvIHByb3ZpZGUgaW5mb3JtYXRpb24gYWJvdXQgd2hhdCBicm9rZSBhbmQgd2hhdCB5b3Ugd2VyZVxuICogZXhwZWN0aW5nLlxuICpcbiAqIFRoZSBpbnZhcmlhbnQgbWVzc2FnZSB3aWxsIGJlIHN0cmlwcGVkIGluIHByb2R1Y3Rpb24sIGJ1dCB0aGUgaW52YXJpYW50XG4gKiB3aWxsIHJlbWFpbiB0byBlbnN1cmUgbG9naWMgZG9lcyBub3QgZGlmZmVyIGluIHByb2R1Y3Rpb24uXG4gKi9cblxudmFyIGludmFyaWFudCA9IGZ1bmN0aW9uKGNvbmRpdGlvbiwgZm9ybWF0LCBhLCBiLCBjLCBkLCBlLCBmKSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgaWYgKGZvcm1hdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ2ludmFyaWFudCByZXF1aXJlcyBhbiBlcnJvciBtZXNzYWdlIGFyZ3VtZW50Jyk7XG4gICAgfVxuICB9XG5cbiAgaWYgKCFjb25kaXRpb24pIHtcbiAgICB2YXIgZXJyb3I7XG4gICAgaWYgKGZvcm1hdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICBlcnJvciA9IG5ldyBFcnJvcihcbiAgICAgICAgJ01pbmlmaWVkIGV4Y2VwdGlvbiBvY2N1cnJlZDsgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50ICcgK1xuICAgICAgICAnZm9yIHRoZSBmdWxsIGVycm9yIG1lc3NhZ2UgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy4nXG4gICAgICApO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgYXJncyA9IFthLCBiLCBjLCBkLCBlLCBmXTtcbiAgICAgIHZhciBhcmdJbmRleCA9IDA7XG4gICAgICBlcnJvciA9IG5ldyBFcnJvcihcbiAgICAgICAgZm9ybWF0LnJlcGxhY2UoLyVzL2csIGZ1bmN0aW9uKCkgeyByZXR1cm4gYXJnc1thcmdJbmRleCsrXTsgfSlcbiAgICAgICk7XG4gICAgICBlcnJvci5uYW1lID0gJ0ludmFyaWFudCBWaW9sYXRpb24nO1xuICAgIH1cblxuICAgIGVycm9yLmZyYW1lc1RvUG9wID0gMTsgLy8gd2UgZG9uJ3QgY2FyZSBhYm91dCBpbnZhcmlhbnQncyBvd24gZnJhbWVcbiAgICB0aHJvdyBlcnJvcjtcbiAgfVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBpbnZhcmlhbnQ7XG4iLCIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIGNoZWNrRENFKCkge1xuICAvKiBnbG9iYWwgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fICovXG4gIGlmIChcbiAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fID09PSAndW5kZWZpbmVkJyB8fFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UgIT09ICdmdW5jdGlvbidcbiAgKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgLy8gVGhpcyBicmFuY2ggaXMgdW5yZWFjaGFibGUgYmVjYXVzZSB0aGlzIGZ1bmN0aW9uIGlzIG9ubHkgY2FsbGVkXG4gICAgLy8gaW4gcHJvZHVjdGlvbiwgYnV0IHRoZSBjb25kaXRpb24gaXMgdHJ1ZSBvbmx5IGluIGRldmVsb3BtZW50LlxuICAgIC8vIFRoZXJlZm9yZSBpZiB0aGUgYnJhbmNoIGlzIHN0aWxsIGhlcmUsIGRlYWQgY29kZSBlbGltaW5hdGlvbiB3YXNuJ3RcbiAgICAvLyBwcm9wZXJseSBhcHBsaWVkLlxuICAgIC8vIERvbid0IGNoYW5nZSB0aGUgbWVzc2FnZS4gUmVhY3QgRGV2VG9vbHMgcmVsaWVzIG9uIGl0LiBBbHNvIG1ha2Ugc3VyZVxuICAgIC8vIHRoaXMgbWVzc2FnZSBkb2Vzbid0IG9jY3VyIGVsc2V3aGVyZSBpbiB0aGlzIGZ1bmN0aW9uLCBvciBpdCB3aWxsIGNhdXNlXG4gICAgLy8gYSBmYWxzZSBwb3NpdGl2ZS5cbiAgICB0aHJvdyBuZXcgRXJyb3IoJ15fXicpO1xuICB9XG4gIHRyeSB7XG4gICAgLy8gVmVyaWZ5IHRoYXQgdGhlIGNvZGUgYWJvdmUgaGFzIGJlZW4gZGVhZCBjb2RlIGVsaW1pbmF0ZWQgKERDRSdkKS5cbiAgICBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UoY2hlY2tEQ0UpO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICAvLyBEZXZUb29scyBzaG91bGRuJ3QgY3Jhc2ggUmVhY3QsIG5vIG1hdHRlciB3aGF0LlxuICAgIC8vIFdlIHNob3VsZCBzdGlsbCByZXBvcnQgaW4gY2FzZSB3ZSBicmVhayB0aGlzIGNvZGUuXG4gICAgY29uc29sZS5lcnJvcihlcnIpO1xuICB9XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIC8vIERDRSBjaGVjayBzaG91bGQgaGFwcGVuIGJlZm9yZSBSZWFjdERPTSBidW5kbGUgZXhlY3V0ZXMgc28gdGhhdFxuICAvLyBEZXZUb29scyBjYW4gcmVwb3J0IGJhZCBtaW5pZmljYXRpb24gZHVyaW5nIGluamVjdGlvbi5cbiAgY2hlY2tEQ0UoKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtZG9tLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvKlxub2JqZWN0LWFzc2lnblxuKGMpIFNpbmRyZSBTb3JodXNcbkBsaWNlbnNlIE1JVFxuKi9cblxuJ3VzZSBzdHJpY3QnO1xuLyogZXNsaW50LWRpc2FibGUgbm8tdW51c2VkLXZhcnMgKi9cbnZhciBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzO1xudmFyIGhhc093blByb3BlcnR5ID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcbnZhciBwcm9wSXNFbnVtZXJhYmxlID0gT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZTtcblxuZnVuY3Rpb24gdG9PYmplY3QodmFsKSB7XG5cdGlmICh2YWwgPT09IG51bGwgfHwgdmFsID09PSB1bmRlZmluZWQpIHtcblx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKCdPYmplY3QuYXNzaWduIGNhbm5vdCBiZSBjYWxsZWQgd2l0aCBudWxsIG9yIHVuZGVmaW5lZCcpO1xuXHR9XG5cblx0cmV0dXJuIE9iamVjdCh2YWwpO1xufVxuXG5mdW5jdGlvbiBzaG91bGRVc2VOYXRpdmUoKSB7XG5cdHRyeSB7XG5cdFx0aWYgKCFPYmplY3QuYXNzaWduKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gRGV0ZWN0IGJ1Z2d5IHByb3BlcnR5IGVudW1lcmF0aW9uIG9yZGVyIGluIG9sZGVyIFY4IHZlcnNpb25zLlxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9NDExOFxuXHRcdHZhciB0ZXN0MSA9IG5ldyBTdHJpbmcoJ2FiYycpOyAgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1uZXctd3JhcHBlcnNcblx0XHR0ZXN0MVs1XSA9ICdkZSc7XG5cdFx0aWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRlc3QxKVswXSA9PT0gJzUnKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzA1NlxuXHRcdHZhciB0ZXN0MiA9IHt9O1xuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgMTA7IGkrKykge1xuXHRcdFx0dGVzdDJbJ18nICsgU3RyaW5nLmZyb21DaGFyQ29kZShpKV0gPSBpO1xuXHRcdH1cblx0XHR2YXIgb3JkZXIyID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGVzdDIpLm1hcChmdW5jdGlvbiAobikge1xuXHRcdFx0cmV0dXJuIHRlc3QyW25dO1xuXHRcdH0pO1xuXHRcdGlmIChvcmRlcjIuam9pbignJykgIT09ICcwMTIzNDU2Nzg5Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMwNTZcblx0XHR2YXIgdGVzdDMgPSB7fTtcblx0XHQnYWJjZGVmZ2hpamtsbW5vcHFyc3QnLnNwbGl0KCcnKS5mb3JFYWNoKGZ1bmN0aW9uIChsZXR0ZXIpIHtcblx0XHRcdHRlc3QzW2xldHRlcl0gPSBsZXR0ZXI7XG5cdFx0fSk7XG5cdFx0aWYgKE9iamVjdC5rZXlzKE9iamVjdC5hc3NpZ24oe30sIHRlc3QzKSkuam9pbignJykgIT09XG5cdFx0XHRcdCdhYmNkZWZnaGlqa2xtbm9wcXJzdCcpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdHJ1ZTtcblx0fSBjYXRjaCAoZXJyKSB7XG5cdFx0Ly8gV2UgZG9uJ3QgZXhwZWN0IGFueSBvZiB0aGUgYWJvdmUgdG8gdGhyb3csIGJ1dCBiZXR0ZXIgdG8gYmUgc2FmZS5cblx0XHRyZXR1cm4gZmFsc2U7XG5cdH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzaG91bGRVc2VOYXRpdmUoKSA/IE9iamVjdC5hc3NpZ24gOiBmdW5jdGlvbiAodGFyZ2V0LCBzb3VyY2UpIHtcblx0dmFyIGZyb207XG5cdHZhciB0byA9IHRvT2JqZWN0KHRhcmdldCk7XG5cdHZhciBzeW1ib2xzO1xuXG5cdGZvciAodmFyIHMgPSAxOyBzIDwgYXJndW1lbnRzLmxlbmd0aDsgcysrKSB7XG5cdFx0ZnJvbSA9IE9iamVjdChhcmd1bWVudHNbc10pO1xuXG5cdFx0Zm9yICh2YXIga2V5IGluIGZyb20pIHtcblx0XHRcdGlmIChoYXNPd25Qcm9wZXJ0eS5jYWxsKGZyb20sIGtleSkpIHtcblx0XHRcdFx0dG9ba2V5XSA9IGZyb21ba2V5XTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRpZiAoZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7XG5cdFx0XHRzeW1ib2xzID0gZ2V0T3duUHJvcGVydHlTeW1ib2xzKGZyb20pO1xuXHRcdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBzeW1ib2xzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRcdGlmIChwcm9wSXNFbnVtZXJhYmxlLmNhbGwoZnJvbSwgc3ltYm9sc1tpXSkpIHtcblx0XHRcdFx0XHR0b1tzeW1ib2xzW2ldXSA9IGZyb21bc3ltYm9sc1tpXV07XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gdG87XG59O1xuIiwidmFyIGlzYXJyYXkgPSByZXF1aXJlKCdpc2FycmF5JylcblxuLyoqXG4gKiBFeHBvc2UgYHBhdGhUb1JlZ2V4cGAuXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gcGF0aFRvUmVnZXhwXG5tb2R1bGUuZXhwb3J0cy5wYXJzZSA9IHBhcnNlXG5tb2R1bGUuZXhwb3J0cy5jb21waWxlID0gY29tcGlsZVxubW9kdWxlLmV4cG9ydHMudG9rZW5zVG9GdW5jdGlvbiA9IHRva2Vuc1RvRnVuY3Rpb25cbm1vZHVsZS5leHBvcnRzLnRva2Vuc1RvUmVnRXhwID0gdG9rZW5zVG9SZWdFeHBcblxuLyoqXG4gKiBUaGUgbWFpbiBwYXRoIG1hdGNoaW5nIHJlZ2V4cCB1dGlsaXR5LlxuICpcbiAqIEB0eXBlIHtSZWdFeHB9XG4gKi9cbnZhciBQQVRIX1JFR0VYUCA9IG5ldyBSZWdFeHAoW1xuICAvLyBNYXRjaCBlc2NhcGVkIGNoYXJhY3RlcnMgdGhhdCB3b3VsZCBvdGhlcndpc2UgYXBwZWFyIGluIGZ1dHVyZSBtYXRjaGVzLlxuICAvLyBUaGlzIGFsbG93cyB0aGUgdXNlciB0byBlc2NhcGUgc3BlY2lhbCBjaGFyYWN0ZXJzIHRoYXQgd29uJ3QgdHJhbnNmb3JtLlxuICAnKFxcXFxcXFxcLiknLFxuICAvLyBNYXRjaCBFeHByZXNzLXN0eWxlIHBhcmFtZXRlcnMgYW5kIHVuLW5hbWVkIHBhcmFtZXRlcnMgd2l0aCBhIHByZWZpeFxuICAvLyBhbmQgb3B0aW9uYWwgc3VmZml4ZXMuIE1hdGNoZXMgYXBwZWFyIGFzOlxuICAvL1xuICAvLyBcIi86dGVzdChcXFxcZCspP1wiID0+IFtcIi9cIiwgXCJ0ZXN0XCIsIFwiXFxkK1wiLCB1bmRlZmluZWQsIFwiP1wiLCB1bmRlZmluZWRdXG4gIC8vIFwiL3JvdXRlKFxcXFxkKylcIiAgPT4gW3VuZGVmaW5lZCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIFwiXFxkK1wiLCB1bmRlZmluZWQsIHVuZGVmaW5lZF1cbiAgLy8gXCIvKlwiICAgICAgICAgICAgPT4gW1wiL1wiLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIFwiKlwiXVxuICAnKFtcXFxcLy5dKT8oPzooPzpcXFxcOihcXFxcdyspKD86XFxcXCgoKD86XFxcXFxcXFwufFteXFxcXFxcXFwoKV0pKylcXFxcKSk/fFxcXFwoKCg/OlxcXFxcXFxcLnxbXlxcXFxcXFxcKCldKSspXFxcXCkpKFsrKj9dKT98KFxcXFwqKSknXG5dLmpvaW4oJ3wnKSwgJ2cnKVxuXG4vKipcbiAqIFBhcnNlIGEgc3RyaW5nIGZvciB0aGUgcmF3IHRva2Vucy5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9ICBzdHJcbiAqIEBwYXJhbSAge09iamVjdD19IG9wdGlvbnNcbiAqIEByZXR1cm4geyFBcnJheX1cbiAqL1xuZnVuY3Rpb24gcGFyc2UgKHN0ciwgb3B0aW9ucykge1xuICB2YXIgdG9rZW5zID0gW11cbiAgdmFyIGtleSA9IDBcbiAgdmFyIGluZGV4ID0gMFxuICB2YXIgcGF0aCA9ICcnXG4gIHZhciBkZWZhdWx0RGVsaW1pdGVyID0gb3B0aW9ucyAmJiBvcHRpb25zLmRlbGltaXRlciB8fCAnLydcbiAgdmFyIHJlc1xuXG4gIHdoaWxlICgocmVzID0gUEFUSF9SRUdFWFAuZXhlYyhzdHIpKSAhPSBudWxsKSB7XG4gICAgdmFyIG0gPSByZXNbMF1cbiAgICB2YXIgZXNjYXBlZCA9IHJlc1sxXVxuICAgIHZhciBvZmZzZXQgPSByZXMuaW5kZXhcbiAgICBwYXRoICs9IHN0ci5zbGljZShpbmRleCwgb2Zmc2V0KVxuICAgIGluZGV4ID0gb2Zmc2V0ICsgbS5sZW5ndGhcblxuICAgIC8vIElnbm9yZSBhbHJlYWR5IGVzY2FwZWQgc2VxdWVuY2VzLlxuICAgIGlmIChlc2NhcGVkKSB7XG4gICAgICBwYXRoICs9IGVzY2FwZWRbMV1cbiAgICAgIGNvbnRpbnVlXG4gICAgfVxuXG4gICAgdmFyIG5leHQgPSBzdHJbaW5kZXhdXG4gICAgdmFyIHByZWZpeCA9IHJlc1syXVxuICAgIHZhciBuYW1lID0gcmVzWzNdXG4gICAgdmFyIGNhcHR1cmUgPSByZXNbNF1cbiAgICB2YXIgZ3JvdXAgPSByZXNbNV1cbiAgICB2YXIgbW9kaWZpZXIgPSByZXNbNl1cbiAgICB2YXIgYXN0ZXJpc2sgPSByZXNbN11cblxuICAgIC8vIFB1c2ggdGhlIGN1cnJlbnQgcGF0aCBvbnRvIHRoZSB0b2tlbnMuXG4gICAgaWYgKHBhdGgpIHtcbiAgICAgIHRva2Vucy5wdXNoKHBhdGgpXG4gICAgICBwYXRoID0gJydcbiAgICB9XG5cbiAgICB2YXIgcGFydGlhbCA9IHByZWZpeCAhPSBudWxsICYmIG5leHQgIT0gbnVsbCAmJiBuZXh0ICE9PSBwcmVmaXhcbiAgICB2YXIgcmVwZWF0ID0gbW9kaWZpZXIgPT09ICcrJyB8fCBtb2RpZmllciA9PT0gJyonXG4gICAgdmFyIG9wdGlvbmFsID0gbW9kaWZpZXIgPT09ICc/JyB8fCBtb2RpZmllciA9PT0gJyonXG4gICAgdmFyIGRlbGltaXRlciA9IHJlc1syXSB8fCBkZWZhdWx0RGVsaW1pdGVyXG4gICAgdmFyIHBhdHRlcm4gPSBjYXB0dXJlIHx8IGdyb3VwXG5cbiAgICB0b2tlbnMucHVzaCh7XG4gICAgICBuYW1lOiBuYW1lIHx8IGtleSsrLFxuICAgICAgcHJlZml4OiBwcmVmaXggfHwgJycsXG4gICAgICBkZWxpbWl0ZXI6IGRlbGltaXRlcixcbiAgICAgIG9wdGlvbmFsOiBvcHRpb25hbCxcbiAgICAgIHJlcGVhdDogcmVwZWF0LFxuICAgICAgcGFydGlhbDogcGFydGlhbCxcbiAgICAgIGFzdGVyaXNrOiAhIWFzdGVyaXNrLFxuICAgICAgcGF0dGVybjogcGF0dGVybiA/IGVzY2FwZUdyb3VwKHBhdHRlcm4pIDogKGFzdGVyaXNrID8gJy4qJyA6ICdbXicgKyBlc2NhcGVTdHJpbmcoZGVsaW1pdGVyKSArICddKz8nKVxuICAgIH0pXG4gIH1cblxuICAvLyBNYXRjaCBhbnkgY2hhcmFjdGVycyBzdGlsbCByZW1haW5pbmcuXG4gIGlmIChpbmRleCA8IHN0ci5sZW5ndGgpIHtcbiAgICBwYXRoICs9IHN0ci5zdWJzdHIoaW5kZXgpXG4gIH1cblxuICAvLyBJZiB0aGUgcGF0aCBleGlzdHMsIHB1c2ggaXQgb250byB0aGUgZW5kLlxuICBpZiAocGF0aCkge1xuICAgIHRva2Vucy5wdXNoKHBhdGgpXG4gIH1cblxuICByZXR1cm4gdG9rZW5zXG59XG5cbi8qKlxuICogQ29tcGlsZSBhIHN0cmluZyB0byBhIHRlbXBsYXRlIGZ1bmN0aW9uIGZvciB0aGUgcGF0aC5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9ICAgICAgICAgICAgIHN0clxuICogQHBhcmFtICB7T2JqZWN0PX0gICAgICAgICAgICBvcHRpb25zXG4gKiBAcmV0dXJuIHshZnVuY3Rpb24oT2JqZWN0PSwgT2JqZWN0PSl9XG4gKi9cbmZ1bmN0aW9uIGNvbXBpbGUgKHN0ciwgb3B0aW9ucykge1xuICByZXR1cm4gdG9rZW5zVG9GdW5jdGlvbihwYXJzZShzdHIsIG9wdGlvbnMpKVxufVxuXG4vKipcbiAqIFByZXR0aWVyIGVuY29kaW5nIG9mIFVSSSBwYXRoIHNlZ21lbnRzLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ31cbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gZW5jb2RlVVJJQ29tcG9uZW50UHJldHR5IChzdHIpIHtcbiAgcmV0dXJuIGVuY29kZVVSSShzdHIpLnJlcGxhY2UoL1tcXC8/I10vZywgZnVuY3Rpb24gKGMpIHtcbiAgICByZXR1cm4gJyUnICsgYy5jaGFyQ29kZUF0KDApLnRvU3RyaW5nKDE2KS50b1VwcGVyQ2FzZSgpXG4gIH0pXG59XG5cbi8qKlxuICogRW5jb2RlIHRoZSBhc3RlcmlzayBwYXJhbWV0ZXIuIFNpbWlsYXIgdG8gYHByZXR0eWAsIGJ1dCBhbGxvd3Mgc2xhc2hlcy5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9XG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGVuY29kZUFzdGVyaXNrIChzdHIpIHtcbiAgcmV0dXJuIGVuY29kZVVSSShzdHIpLnJlcGxhY2UoL1s/I10vZywgZnVuY3Rpb24gKGMpIHtcbiAgICByZXR1cm4gJyUnICsgYy5jaGFyQ29kZUF0KDApLnRvU3RyaW5nKDE2KS50b1VwcGVyQ2FzZSgpXG4gIH0pXG59XG5cbi8qKlxuICogRXhwb3NlIGEgbWV0aG9kIGZvciB0cmFuc2Zvcm1pbmcgdG9rZW5zIGludG8gdGhlIHBhdGggZnVuY3Rpb24uXG4gKi9cbmZ1bmN0aW9uIHRva2Vuc1RvRnVuY3Rpb24gKHRva2Vucykge1xuICAvLyBDb21waWxlIGFsbCB0aGUgdG9rZW5zIGludG8gcmVnZXhwcy5cbiAgdmFyIG1hdGNoZXMgPSBuZXcgQXJyYXkodG9rZW5zLmxlbmd0aClcblxuICAvLyBDb21waWxlIGFsbCB0aGUgcGF0dGVybnMgYmVmb3JlIGNvbXBpbGF0aW9uLlxuICBmb3IgKHZhciBpID0gMDsgaSA8IHRva2Vucy5sZW5ndGg7IGkrKykge1xuICAgIGlmICh0eXBlb2YgdG9rZW5zW2ldID09PSAnb2JqZWN0Jykge1xuICAgICAgbWF0Y2hlc1tpXSA9IG5ldyBSZWdFeHAoJ14oPzonICsgdG9rZW5zW2ldLnBhdHRlcm4gKyAnKSQnKVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbiAob2JqLCBvcHRzKSB7XG4gICAgdmFyIHBhdGggPSAnJ1xuICAgIHZhciBkYXRhID0gb2JqIHx8IHt9XG4gICAgdmFyIG9wdGlvbnMgPSBvcHRzIHx8IHt9XG4gICAgdmFyIGVuY29kZSA9IG9wdGlvbnMucHJldHR5ID8gZW5jb2RlVVJJQ29tcG9uZW50UHJldHR5IDogZW5jb2RlVVJJQ29tcG9uZW50XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRva2Vucy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIHRva2VuID0gdG9rZW5zW2ldXG5cbiAgICAgIGlmICh0eXBlb2YgdG9rZW4gPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHBhdGggKz0gdG9rZW5cblxuICAgICAgICBjb250aW51ZVxuICAgICAgfVxuXG4gICAgICB2YXIgdmFsdWUgPSBkYXRhW3Rva2VuLm5hbWVdXG4gICAgICB2YXIgc2VnbWVudFxuXG4gICAgICBpZiAodmFsdWUgPT0gbnVsbCkge1xuICAgICAgICBpZiAodG9rZW4ub3B0aW9uYWwpIHtcbiAgICAgICAgICAvLyBQcmVwZW5kIHBhcnRpYWwgc2VnbWVudCBwcmVmaXhlcy5cbiAgICAgICAgICBpZiAodG9rZW4ucGFydGlhbCkge1xuICAgICAgICAgICAgcGF0aCArPSB0b2tlbi5wcmVmaXhcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBjb250aW51ZVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gYmUgZGVmaW5lZCcpXG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKGlzYXJyYXkodmFsdWUpKSB7XG4gICAgICAgIGlmICghdG9rZW4ucmVwZWF0KSB7XG4gICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBub3QgcmVwZWF0LCBidXQgcmVjZWl2ZWQgYCcgKyBKU09OLnN0cmluZ2lmeSh2YWx1ZSkgKyAnYCcpXG4gICAgICAgIH1cblxuICAgICAgICBpZiAodmFsdWUubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgaWYgKHRva2VuLm9wdGlvbmFsKSB7XG4gICAgICAgICAgICBjb250aW51ZVxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBcIicgKyB0b2tlbi5uYW1lICsgJ1wiIHRvIG5vdCBiZSBlbXB0eScpXG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCB2YWx1ZS5sZW5ndGg7IGorKykge1xuICAgICAgICAgIHNlZ21lbnQgPSBlbmNvZGUodmFsdWVbal0pXG5cbiAgICAgICAgICBpZiAoIW1hdGNoZXNbaV0udGVzdChzZWdtZW50KSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgYWxsIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gbWF0Y2ggXCInICsgdG9rZW4ucGF0dGVybiArICdcIiwgYnV0IHJlY2VpdmVkIGAnICsgSlNPTi5zdHJpbmdpZnkoc2VnbWVudCkgKyAnYCcpXG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcGF0aCArPSAoaiA9PT0gMCA/IHRva2VuLnByZWZpeCA6IHRva2VuLmRlbGltaXRlcikgKyBzZWdtZW50XG4gICAgICAgIH1cblxuICAgICAgICBjb250aW51ZVxuICAgICAgfVxuXG4gICAgICBzZWdtZW50ID0gdG9rZW4uYXN0ZXJpc2sgPyBlbmNvZGVBc3Rlcmlzayh2YWx1ZSkgOiBlbmNvZGUodmFsdWUpXG5cbiAgICAgIGlmICghbWF0Y2hlc1tpXS50ZXN0KHNlZ21lbnQpKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gbWF0Y2ggXCInICsgdG9rZW4ucGF0dGVybiArICdcIiwgYnV0IHJlY2VpdmVkIFwiJyArIHNlZ21lbnQgKyAnXCInKVxuICAgICAgfVxuXG4gICAgICBwYXRoICs9IHRva2VuLnByZWZpeCArIHNlZ21lbnRcbiAgICB9XG5cbiAgICByZXR1cm4gcGF0aFxuICB9XG59XG5cbi8qKlxuICogRXNjYXBlIGEgcmVndWxhciBleHByZXNzaW9uIHN0cmluZy5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9IHN0clxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBlc2NhcGVTdHJpbmcgKHN0cikge1xuICByZXR1cm4gc3RyLnJlcGxhY2UoLyhbLisqPz1eIToke30oKVtcXF18XFwvXFxcXF0pL2csICdcXFxcJDEnKVxufVxuXG4vKipcbiAqIEVzY2FwZSB0aGUgY2FwdHVyaW5nIGdyb3VwIGJ5IGVzY2FwaW5nIHNwZWNpYWwgY2hhcmFjdGVycyBhbmQgbWVhbmluZy5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9IGdyb3VwXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGVzY2FwZUdyb3VwIChncm91cCkge1xuICByZXR1cm4gZ3JvdXAucmVwbGFjZSgvKFs9ITokXFwvKCldKS9nLCAnXFxcXCQxJylcbn1cblxuLyoqXG4gKiBBdHRhY2ggdGhlIGtleXMgYXMgYSBwcm9wZXJ0eSBvZiB0aGUgcmVnZXhwLlxuICpcbiAqIEBwYXJhbSAgeyFSZWdFeHB9IHJlXG4gKiBAcGFyYW0gIHtBcnJheX0gICBrZXlzXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiBhdHRhY2hLZXlzIChyZSwga2V5cykge1xuICByZS5rZXlzID0ga2V5c1xuICByZXR1cm4gcmVcbn1cblxuLyoqXG4gKiBHZXQgdGhlIGZsYWdzIGZvciBhIHJlZ2V4cCBmcm9tIHRoZSBvcHRpb25zLlxuICpcbiAqIEBwYXJhbSAge09iamVjdH0gb3B0aW9uc1xuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBmbGFncyAob3B0aW9ucykge1xuICByZXR1cm4gb3B0aW9ucy5zZW5zaXRpdmUgPyAnJyA6ICdpJ1xufVxuXG4vKipcbiAqIFB1bGwgb3V0IGtleXMgZnJvbSBhIHJlZ2V4cC5cbiAqXG4gKiBAcGFyYW0gIHshUmVnRXhwfSBwYXRoXG4gKiBAcGFyYW0gIHshQXJyYXl9ICBrZXlzXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiByZWdleHBUb1JlZ2V4cCAocGF0aCwga2V5cykge1xuICAvLyBVc2UgYSBuZWdhdGl2ZSBsb29rYWhlYWQgdG8gbWF0Y2ggb25seSBjYXB0dXJpbmcgZ3JvdXBzLlxuICB2YXIgZ3JvdXBzID0gcGF0aC5zb3VyY2UubWF0Y2goL1xcKCg/IVxcPykvZylcblxuICBpZiAoZ3JvdXBzKSB7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBncm91cHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGtleXMucHVzaCh7XG4gICAgICAgIG5hbWU6IGksXG4gICAgICAgIHByZWZpeDogbnVsbCxcbiAgICAgICAgZGVsaW1pdGVyOiBudWxsLFxuICAgICAgICBvcHRpb25hbDogZmFsc2UsXG4gICAgICAgIHJlcGVhdDogZmFsc2UsXG4gICAgICAgIHBhcnRpYWw6IGZhbHNlLFxuICAgICAgICBhc3RlcmlzazogZmFsc2UsXG4gICAgICAgIHBhdHRlcm46IG51bGxcbiAgICAgIH0pXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGF0dGFjaEtleXMocGF0aCwga2V5cylcbn1cblxuLyoqXG4gKiBUcmFuc2Zvcm0gYW4gYXJyYXkgaW50byBhIHJlZ2V4cC5cbiAqXG4gKiBAcGFyYW0gIHshQXJyYXl9ICBwYXRoXG4gKiBAcGFyYW0gIHtBcnJheX0gICBrZXlzXG4gKiBAcGFyYW0gIHshT2JqZWN0fSBvcHRpb25zXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiBhcnJheVRvUmVnZXhwIChwYXRoLCBrZXlzLCBvcHRpb25zKSB7XG4gIHZhciBwYXJ0cyA9IFtdXG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBwYXRoLmxlbmd0aDsgaSsrKSB7XG4gICAgcGFydHMucHVzaChwYXRoVG9SZWdleHAocGF0aFtpXSwga2V5cywgb3B0aW9ucykuc291cmNlKVxuICB9XG5cbiAgdmFyIHJlZ2V4cCA9IG5ldyBSZWdFeHAoJyg/OicgKyBwYXJ0cy5qb2luKCd8JykgKyAnKScsIGZsYWdzKG9wdGlvbnMpKVxuXG4gIHJldHVybiBhdHRhY2hLZXlzKHJlZ2V4cCwga2V5cylcbn1cblxuLyoqXG4gKiBDcmVhdGUgYSBwYXRoIHJlZ2V4cCBmcm9tIHN0cmluZyBpbnB1dC5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9ICBwYXRoXG4gKiBAcGFyYW0gIHshQXJyYXl9ICBrZXlzXG4gKiBAcGFyYW0gIHshT2JqZWN0fSBvcHRpb25zXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiBzdHJpbmdUb1JlZ2V4cCAocGF0aCwga2V5cywgb3B0aW9ucykge1xuICByZXR1cm4gdG9rZW5zVG9SZWdFeHAocGFyc2UocGF0aCwgb3B0aW9ucyksIGtleXMsIG9wdGlvbnMpXG59XG5cbi8qKlxuICogRXhwb3NlIGEgZnVuY3Rpb24gZm9yIHRha2luZyB0b2tlbnMgYW5kIHJldHVybmluZyBhIFJlZ0V4cC5cbiAqXG4gKiBAcGFyYW0gIHshQXJyYXl9ICAgICAgICAgIHRva2Vuc1xuICogQHBhcmFtICB7KEFycmF5fE9iamVjdCk9fSBrZXlzXG4gKiBAcGFyYW0gIHtPYmplY3Q9fSAgICAgICAgIG9wdGlvbnNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIHRva2Vuc1RvUmVnRXhwICh0b2tlbnMsIGtleXMsIG9wdGlvbnMpIHtcbiAgaWYgKCFpc2FycmF5KGtleXMpKSB7XG4gICAgb3B0aW9ucyA9IC8qKiBAdHlwZSB7IU9iamVjdH0gKi8gKGtleXMgfHwgb3B0aW9ucylcbiAgICBrZXlzID0gW11cbiAgfVxuXG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9XG5cbiAgdmFyIHN0cmljdCA9IG9wdGlvbnMuc3RyaWN0XG4gIHZhciBlbmQgPSBvcHRpb25zLmVuZCAhPT0gZmFsc2VcbiAgdmFyIHJvdXRlID0gJydcblxuICAvLyBJdGVyYXRlIG92ZXIgdGhlIHRva2VucyBhbmQgY3JlYXRlIG91ciByZWdleHAgc3RyaW5nLlxuICBmb3IgKHZhciBpID0gMDsgaSA8IHRva2Vucy5sZW5ndGg7IGkrKykge1xuICAgIHZhciB0b2tlbiA9IHRva2Vuc1tpXVxuXG4gICAgaWYgKHR5cGVvZiB0b2tlbiA9PT0gJ3N0cmluZycpIHtcbiAgICAgIHJvdXRlICs9IGVzY2FwZVN0cmluZyh0b2tlbilcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHByZWZpeCA9IGVzY2FwZVN0cmluZyh0b2tlbi5wcmVmaXgpXG4gICAgICB2YXIgY2FwdHVyZSA9ICcoPzonICsgdG9rZW4ucGF0dGVybiArICcpJ1xuXG4gICAgICBrZXlzLnB1c2godG9rZW4pXG5cbiAgICAgIGlmICh0b2tlbi5yZXBlYXQpIHtcbiAgICAgICAgY2FwdHVyZSArPSAnKD86JyArIHByZWZpeCArIGNhcHR1cmUgKyAnKSonXG4gICAgICB9XG5cbiAgICAgIGlmICh0b2tlbi5vcHRpb25hbCkge1xuICAgICAgICBpZiAoIXRva2VuLnBhcnRpYWwpIHtcbiAgICAgICAgICBjYXB0dXJlID0gJyg/OicgKyBwcmVmaXggKyAnKCcgKyBjYXB0dXJlICsgJykpPydcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBjYXB0dXJlID0gcHJlZml4ICsgJygnICsgY2FwdHVyZSArICcpPydcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY2FwdHVyZSA9IHByZWZpeCArICcoJyArIGNhcHR1cmUgKyAnKSdcbiAgICAgIH1cblxuICAgICAgcm91dGUgKz0gY2FwdHVyZVxuICAgIH1cbiAgfVxuXG4gIHZhciBkZWxpbWl0ZXIgPSBlc2NhcGVTdHJpbmcob3B0aW9ucy5kZWxpbWl0ZXIgfHwgJy8nKVxuICB2YXIgZW5kc1dpdGhEZWxpbWl0ZXIgPSByb3V0ZS5zbGljZSgtZGVsaW1pdGVyLmxlbmd0aCkgPT09IGRlbGltaXRlclxuXG4gIC8vIEluIG5vbi1zdHJpY3QgbW9kZSB3ZSBhbGxvdyBhIHNsYXNoIGF0IHRoZSBlbmQgb2YgbWF0Y2guIElmIHRoZSBwYXRoIHRvXG4gIC8vIG1hdGNoIGFscmVhZHkgZW5kcyB3aXRoIGEgc2xhc2gsIHdlIHJlbW92ZSBpdCBmb3IgY29uc2lzdGVuY3kuIFRoZSBzbGFzaFxuICAvLyBpcyB2YWxpZCBhdCB0aGUgZW5kIG9mIGEgcGF0aCBtYXRjaCwgbm90IGluIHRoZSBtaWRkbGUuIFRoaXMgaXMgaW1wb3J0YW50XG4gIC8vIGluIG5vbi1lbmRpbmcgbW9kZSwgd2hlcmUgXCIvdGVzdC9cIiBzaG91bGRuJ3QgbWF0Y2ggXCIvdGVzdC8vcm91dGVcIi5cbiAgaWYgKCFzdHJpY3QpIHtcbiAgICByb3V0ZSA9IChlbmRzV2l0aERlbGltaXRlciA/IHJvdXRlLnNsaWNlKDAsIC1kZWxpbWl0ZXIubGVuZ3RoKSA6IHJvdXRlKSArICcoPzonICsgZGVsaW1pdGVyICsgJyg/PSQpKT8nXG4gIH1cblxuICBpZiAoZW5kKSB7XG4gICAgcm91dGUgKz0gJyQnXG4gIH0gZWxzZSB7XG4gICAgLy8gSW4gbm9uLWVuZGluZyBtb2RlLCB3ZSBuZWVkIHRoZSBjYXB0dXJpbmcgZ3JvdXBzIHRvIG1hdGNoIGFzIG11Y2ggYXNcbiAgICAvLyBwb3NzaWJsZSBieSB1c2luZyBhIHBvc2l0aXZlIGxvb2thaGVhZCB0byB0aGUgZW5kIG9yIG5leHQgcGF0aCBzZWdtZW50LlxuICAgIHJvdXRlICs9IHN0cmljdCAmJiBlbmRzV2l0aERlbGltaXRlciA/ICcnIDogJyg/PScgKyBkZWxpbWl0ZXIgKyAnfCQpJ1xuICB9XG5cbiAgcmV0dXJuIGF0dGFjaEtleXMobmV3IFJlZ0V4cCgnXicgKyByb3V0ZSwgZmxhZ3Mob3B0aW9ucykpLCBrZXlzKVxufVxuXG4vKipcbiAqIE5vcm1hbGl6ZSB0aGUgZ2l2ZW4gcGF0aCBzdHJpbmcsIHJldHVybmluZyBhIHJlZ3VsYXIgZXhwcmVzc2lvbi5cbiAqXG4gKiBBbiBlbXB0eSBhcnJheSBjYW4gYmUgcGFzc2VkIGluIGZvciB0aGUga2V5cywgd2hpY2ggd2lsbCBob2xkIHRoZVxuICogcGxhY2Vob2xkZXIga2V5IGRlc2NyaXB0aW9ucy4gRm9yIGV4YW1wbGUsIHVzaW5nIGAvdXNlci86aWRgLCBga2V5c2Agd2lsbFxuICogY29udGFpbiBgW3sgbmFtZTogJ2lkJywgZGVsaW1pdGVyOiAnLycsIG9wdGlvbmFsOiBmYWxzZSwgcmVwZWF0OiBmYWxzZSB9XWAuXG4gKlxuICogQHBhcmFtICB7KHN0cmluZ3xSZWdFeHB8QXJyYXkpfSBwYXRoXG4gKiBAcGFyYW0gIHsoQXJyYXl8T2JqZWN0KT19ICAgICAgIGtleXNcbiAqIEBwYXJhbSAge09iamVjdD19ICAgICAgICAgICAgICAgb3B0aW9uc1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gcGF0aFRvUmVnZXhwIChwYXRoLCBrZXlzLCBvcHRpb25zKSB7XG4gIGlmICghaXNhcnJheShrZXlzKSkge1xuICAgIG9wdGlvbnMgPSAvKiogQHR5cGUgeyFPYmplY3R9ICovIChrZXlzIHx8IG9wdGlvbnMpXG4gICAga2V5cyA9IFtdXG4gIH1cblxuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fVxuXG4gIGlmIChwYXRoIGluc3RhbmNlb2YgUmVnRXhwKSB7XG4gICAgcmV0dXJuIHJlZ2V4cFRvUmVnZXhwKHBhdGgsIC8qKiBAdHlwZSB7IUFycmF5fSAqLyAoa2V5cykpXG4gIH1cblxuICBpZiAoaXNhcnJheShwYXRoKSkge1xuICAgIHJldHVybiBhcnJheVRvUmVnZXhwKC8qKiBAdHlwZSB7IUFycmF5fSAqLyAocGF0aCksIC8qKiBAdHlwZSB7IUFycmF5fSAqLyAoa2V5cyksIG9wdGlvbnMpXG4gIH1cblxuICByZXR1cm4gc3RyaW5nVG9SZWdleHAoLyoqIEB0eXBlIHtzdHJpbmd9ICovIChwYXRoKSwgLyoqIEB0eXBlIHshQXJyYXl9ICovIChrZXlzKSwgb3B0aW9ucylcbn1cbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MTYuNy4wXG4gKiByZWFjdC5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0Jzt2YXIgaz1yZXF1aXJlKFwib2JqZWN0LWFzc2lnblwiKSxuPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5mb3IscD1uP1N5bWJvbC5mb3IoXCJyZWFjdC5lbGVtZW50XCIpOjYwMTAzLHE9bj9TeW1ib2wuZm9yKFwicmVhY3QucG9ydGFsXCIpOjYwMTA2LHI9bj9TeW1ib2wuZm9yKFwicmVhY3QuZnJhZ21lbnRcIik6NjAxMDcsdD1uP1N5bWJvbC5mb3IoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKTo2MDEwOCx1PW4/U3ltYm9sLmZvcihcInJlYWN0LnByb2ZpbGVyXCIpOjYwMTE0LHY9bj9TeW1ib2wuZm9yKFwicmVhY3QucHJvdmlkZXJcIik6NjAxMDksdz1uP1N5bWJvbC5mb3IoXCJyZWFjdC5jb250ZXh0XCIpOjYwMTEwLHg9bj9TeW1ib2wuZm9yKFwicmVhY3QuY29uY3VycmVudF9tb2RlXCIpOjYwMTExLHk9bj9TeW1ib2wuZm9yKFwicmVhY3QuZm9yd2FyZF9yZWZcIik6NjAxMTIsej1uP1N5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZVwiKTo2MDExMyxBPW4/U3ltYm9sLmZvcihcInJlYWN0Lm1lbW9cIik6XG42MDExNSxCPW4/U3ltYm9sLmZvcihcInJlYWN0LmxhenlcIik6NjAxMTYsQz1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuaXRlcmF0b3I7ZnVuY3Rpb24gYWEoYSxiLGUsYyxkLGcsaCxmKXtpZighYSl7YT12b2lkIDA7aWYodm9pZCAwPT09YilhPUVycm9yKFwiTWluaWZpZWQgZXhjZXB0aW9uIG9jY3VycmVkOyB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIHRoZSBmdWxsIGVycm9yIG1lc3NhZ2UgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy5cIik7ZWxzZXt2YXIgbD1bZSxjLGQsZyxoLGZdLG09MDthPUVycm9yKGIucmVwbGFjZSgvJXMvZyxmdW5jdGlvbigpe3JldHVybiBsW20rK119KSk7YS5uYW1lPVwiSW52YXJpYW50IFZpb2xhdGlvblwifWEuZnJhbWVzVG9Qb3A9MTt0aHJvdyBhO319XG5mdW5jdGlvbiBEKGEpe2Zvcih2YXIgYj1hcmd1bWVudHMubGVuZ3RoLTEsZT1cImh0dHBzOi8vcmVhY3Rqcy5vcmcvZG9jcy9lcnJvci1kZWNvZGVyLmh0bWw/aW52YXJpYW50PVwiK2EsYz0wO2M8YjtjKyspZSs9XCImYXJnc1tdPVwiK2VuY29kZVVSSUNvbXBvbmVudChhcmd1bWVudHNbYysxXSk7YWEoITEsXCJNaW5pZmllZCBSZWFjdCBlcnJvciAjXCIrYStcIjsgdmlzaXQgJXMgZm9yIHRoZSBmdWxsIG1lc3NhZ2Ugb3IgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciBmdWxsIGVycm9ycyBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLiBcIixlKX12YXIgRT17aXNNb3VudGVkOmZ1bmN0aW9uKCl7cmV0dXJuITF9LGVucXVldWVGb3JjZVVwZGF0ZTpmdW5jdGlvbigpe30sZW5xdWV1ZVJlcGxhY2VTdGF0ZTpmdW5jdGlvbigpe30sZW5xdWV1ZVNldFN0YXRlOmZ1bmN0aW9uKCl7fX0sRj17fTtcbmZ1bmN0aW9uIEcoYSxiLGUpe3RoaXMucHJvcHM9YTt0aGlzLmNvbnRleHQ9Yjt0aGlzLnJlZnM9Rjt0aGlzLnVwZGF0ZXI9ZXx8RX1HLnByb3RvdHlwZS5pc1JlYWN0Q29tcG9uZW50PXt9O0cucHJvdG90eXBlLnNldFN0YXRlPWZ1bmN0aW9uKGEsYil7XCJvYmplY3RcIiE9PXR5cGVvZiBhJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYSYmbnVsbCE9YT9EKFwiODVcIik6dm9pZCAwO3RoaXMudXBkYXRlci5lbnF1ZXVlU2V0U3RhdGUodGhpcyxhLGIsXCJzZXRTdGF0ZVwiKX07Ry5wcm90b3R5cGUuZm9yY2VVcGRhdGU9ZnVuY3Rpb24oYSl7dGhpcy51cGRhdGVyLmVucXVldWVGb3JjZVVwZGF0ZSh0aGlzLGEsXCJmb3JjZVVwZGF0ZVwiKX07ZnVuY3Rpb24gSCgpe31ILnByb3RvdHlwZT1HLnByb3RvdHlwZTtmdW5jdGlvbiBJKGEsYixlKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPUY7dGhpcy51cGRhdGVyPWV8fEV9dmFyIEo9SS5wcm90b3R5cGU9bmV3IEg7XG5KLmNvbnN0cnVjdG9yPUk7ayhKLEcucHJvdG90eXBlKTtKLmlzUHVyZVJlYWN0Q29tcG9uZW50PSEwO3ZhciBLPXtjdXJyZW50Om51bGwsY3VycmVudERpc3BhdGNoZXI6bnVsbH0sTD1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LE09e2tleTohMCxyZWY6ITAsX19zZWxmOiEwLF9fc291cmNlOiEwfTtcbmZ1bmN0aW9uIE4oYSxiLGUpe3ZhciBjPXZvaWQgMCxkPXt9LGc9bnVsbCxoPW51bGw7aWYobnVsbCE9Yilmb3IoYyBpbiB2b2lkIDAhPT1iLnJlZiYmKGg9Yi5yZWYpLHZvaWQgMCE9PWIua2V5JiYoZz1cIlwiK2Iua2V5KSxiKUwuY2FsbChiLGMpJiYhTS5oYXNPd25Qcm9wZXJ0eShjKSYmKGRbY109YltjXSk7dmFyIGY9YXJndW1lbnRzLmxlbmd0aC0yO2lmKDE9PT1mKWQuY2hpbGRyZW49ZTtlbHNlIGlmKDE8Zil7Zm9yKHZhciBsPUFycmF5KGYpLG09MDttPGY7bSsrKWxbbV09YXJndW1lbnRzW20rMl07ZC5jaGlsZHJlbj1sfWlmKGEmJmEuZGVmYXVsdFByb3BzKWZvcihjIGluIGY9YS5kZWZhdWx0UHJvcHMsZil2b2lkIDA9PT1kW2NdJiYoZFtjXT1mW2NdKTtyZXR1cm57JCR0eXBlb2Y6cCx0eXBlOmEsa2V5OmcscmVmOmgscHJvcHM6ZCxfb3duZXI6Sy5jdXJyZW50fX1cbmZ1bmN0aW9uIGJhKGEsYil7cmV0dXJueyQkdHlwZW9mOnAsdHlwZTphLnR5cGUsa2V5OmIscmVmOmEucmVmLHByb3BzOmEucHJvcHMsX293bmVyOmEuX293bmVyfX1mdW5jdGlvbiBPKGEpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJmEuJCR0eXBlb2Y9PT1wfWZ1bmN0aW9uIGVzY2FwZShhKXt2YXIgYj17XCI9XCI6XCI9MFwiLFwiOlwiOlwiPTJcIn07cmV0dXJuXCIkXCIrKFwiXCIrYSkucmVwbGFjZSgvWz06XS9nLGZ1bmN0aW9uKGEpe3JldHVybiBiW2FdfSl9dmFyIFA9L1xcLysvZyxRPVtdO2Z1bmN0aW9uIFIoYSxiLGUsYyl7aWYoUS5sZW5ndGgpe3ZhciBkPVEucG9wKCk7ZC5yZXN1bHQ9YTtkLmtleVByZWZpeD1iO2QuZnVuYz1lO2QuY29udGV4dD1jO2QuY291bnQ9MDtyZXR1cm4gZH1yZXR1cm57cmVzdWx0OmEsa2V5UHJlZml4OmIsZnVuYzplLGNvbnRleHQ6Yyxjb3VudDowfX1cbmZ1bmN0aW9uIFMoYSl7YS5yZXN1bHQ9bnVsbDthLmtleVByZWZpeD1udWxsO2EuZnVuYz1udWxsO2EuY29udGV4dD1udWxsO2EuY291bnQ9MDsxMD5RLmxlbmd0aCYmUS5wdXNoKGEpfVxuZnVuY3Rpb24gVChhLGIsZSxjKXt2YXIgZD10eXBlb2YgYTtpZihcInVuZGVmaW5lZFwiPT09ZHx8XCJib29sZWFuXCI9PT1kKWE9bnVsbDt2YXIgZz0hMTtpZihudWxsPT09YSlnPSEwO2Vsc2Ugc3dpdGNoKGQpe2Nhc2UgXCJzdHJpbmdcIjpjYXNlIFwibnVtYmVyXCI6Zz0hMDticmVhaztjYXNlIFwib2JqZWN0XCI6c3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgcDpjYXNlIHE6Zz0hMH19aWYoZylyZXR1cm4gZShjLGEsXCJcIj09PWI/XCIuXCIrVShhLDApOmIpLDE7Zz0wO2I9XCJcIj09PWI/XCIuXCI6YitcIjpcIjtpZihBcnJheS5pc0FycmF5KGEpKWZvcih2YXIgaD0wO2g8YS5sZW5ndGg7aCsrKXtkPWFbaF07dmFyIGY9YitVKGQsaCk7Zys9VChkLGYsZSxjKX1lbHNlIGlmKG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGE/Zj1udWxsOihmPUMmJmFbQ118fGFbXCJAQGl0ZXJhdG9yXCJdLGY9XCJmdW5jdGlvblwiPT09dHlwZW9mIGY/ZjpudWxsKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZilmb3IoYT1mLmNhbGwoYSksaD1cbjA7IShkPWEubmV4dCgpKS5kb25lOylkPWQudmFsdWUsZj1iK1UoZCxoKyspLGcrPVQoZCxmLGUsYyk7ZWxzZVwib2JqZWN0XCI9PT1kJiYoZT1cIlwiK2EsRChcIjMxXCIsXCJbb2JqZWN0IE9iamVjdF1cIj09PWU/XCJvYmplY3Qgd2l0aCBrZXlzIHtcIitPYmplY3Qua2V5cyhhKS5qb2luKFwiLCBcIikrXCJ9XCI6ZSxcIlwiKSk7cmV0dXJuIGd9ZnVuY3Rpb24gVihhLGIsZSl7cmV0dXJuIG51bGw9PWE/MDpUKGEsXCJcIixiLGUpfWZ1bmN0aW9uIFUoYSxiKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZudWxsIT1hLmtleT9lc2NhcGUoYS5rZXkpOmIudG9TdHJpbmcoMzYpfWZ1bmN0aW9uIGNhKGEsYil7YS5mdW5jLmNhbGwoYS5jb250ZXh0LGIsYS5jb3VudCsrKX1cbmZ1bmN0aW9uIGRhKGEsYixlKXt2YXIgYz1hLnJlc3VsdCxkPWEua2V5UHJlZml4O2E9YS5mdW5jLmNhbGwoYS5jb250ZXh0LGIsYS5jb3VudCsrKTtBcnJheS5pc0FycmF5KGEpP1coYSxjLGUsZnVuY3Rpb24oYSl7cmV0dXJuIGF9KTpudWxsIT1hJiYoTyhhKSYmKGE9YmEoYSxkKyghYS5rZXl8fGImJmIua2V5PT09YS5rZXk/XCJcIjooXCJcIithLmtleSkucmVwbGFjZShQLFwiJCYvXCIpK1wiL1wiKStlKSksYy5wdXNoKGEpKX1mdW5jdGlvbiBXKGEsYixlLGMsZCl7dmFyIGc9XCJcIjtudWxsIT1lJiYoZz0oXCJcIitlKS5yZXBsYWNlKFAsXCIkJi9cIikrXCIvXCIpO2I9UihiLGcsYyxkKTtWKGEsZGEsYik7UyhiKX1cbnZhciBYPXtDaGlsZHJlbjp7bWFwOmZ1bmN0aW9uKGEsYixlKXtpZihudWxsPT1hKXJldHVybiBhO3ZhciBjPVtdO1coYSxjLG51bGwsYixlKTtyZXR1cm4gY30sZm9yRWFjaDpmdW5jdGlvbihhLGIsZSl7aWYobnVsbD09YSlyZXR1cm4gYTtiPVIobnVsbCxudWxsLGIsZSk7VihhLGNhLGIpO1MoYil9LGNvdW50OmZ1bmN0aW9uKGEpe3JldHVybiBWKGEsZnVuY3Rpb24oKXtyZXR1cm4gbnVsbH0sbnVsbCl9LHRvQXJyYXk6ZnVuY3Rpb24oYSl7dmFyIGI9W107VyhhLGIsbnVsbCxmdW5jdGlvbihhKXtyZXR1cm4gYX0pO3JldHVybiBifSxvbmx5OmZ1bmN0aW9uKGEpe08oYSk/dm9pZCAwOkQoXCIxNDNcIik7cmV0dXJuIGF9fSxjcmVhdGVSZWY6ZnVuY3Rpb24oKXtyZXR1cm57Y3VycmVudDpudWxsfX0sQ29tcG9uZW50OkcsUHVyZUNvbXBvbmVudDpJLGNyZWF0ZUNvbnRleHQ6ZnVuY3Rpb24oYSxiKXt2b2lkIDA9PT1iJiYoYj1udWxsKTthPXskJHR5cGVvZjp3LF9jYWxjdWxhdGVDaGFuZ2VkQml0czpiLFxuX2N1cnJlbnRWYWx1ZTphLF9jdXJyZW50VmFsdWUyOmEsX3RocmVhZENvdW50OjAsUHJvdmlkZXI6bnVsbCxDb25zdW1lcjpudWxsfTthLlByb3ZpZGVyPXskJHR5cGVvZjp2LF9jb250ZXh0OmF9O3JldHVybiBhLkNvbnN1bWVyPWF9LGZvcndhcmRSZWY6ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOnkscmVuZGVyOmF9fSxsYXp5OmZ1bmN0aW9uKGEpe3JldHVybnskJHR5cGVvZjpCLF9jdG9yOmEsX3N0YXR1czotMSxfcmVzdWx0Om51bGx9fSxtZW1vOmZ1bmN0aW9uKGEsYil7cmV0dXJueyQkdHlwZW9mOkEsdHlwZTphLGNvbXBhcmU6dm9pZCAwPT09Yj9udWxsOmJ9fSxGcmFnbWVudDpyLFN0cmljdE1vZGU6dCxTdXNwZW5zZTp6LGNyZWF0ZUVsZW1lbnQ6TixjbG9uZUVsZW1lbnQ6ZnVuY3Rpb24oYSxiLGUpe251bGw9PT1hfHx2b2lkIDA9PT1hP0QoXCIyNjdcIixhKTp2b2lkIDA7dmFyIGM9dm9pZCAwLGQ9ayh7fSxhLnByb3BzKSxnPWEua2V5LGg9YS5yZWYsZj1hLl9vd25lcjtcbmlmKG51bGwhPWIpe3ZvaWQgMCE9PWIucmVmJiYoaD1iLnJlZixmPUsuY3VycmVudCk7dm9pZCAwIT09Yi5rZXkmJihnPVwiXCIrYi5rZXkpO3ZhciBsPXZvaWQgMDthLnR5cGUmJmEudHlwZS5kZWZhdWx0UHJvcHMmJihsPWEudHlwZS5kZWZhdWx0UHJvcHMpO2ZvcihjIGluIGIpTC5jYWxsKGIsYykmJiFNLmhhc093blByb3BlcnR5KGMpJiYoZFtjXT12b2lkIDA9PT1iW2NdJiZ2b2lkIDAhPT1sP2xbY106YltjXSl9Yz1hcmd1bWVudHMubGVuZ3RoLTI7aWYoMT09PWMpZC5jaGlsZHJlbj1lO2Vsc2UgaWYoMTxjKXtsPUFycmF5KGMpO2Zvcih2YXIgbT0wO208YzttKyspbFttXT1hcmd1bWVudHNbbSsyXTtkLmNoaWxkcmVuPWx9cmV0dXJueyQkdHlwZW9mOnAsdHlwZTphLnR5cGUsa2V5OmcscmVmOmgscHJvcHM6ZCxfb3duZXI6Zn19LGNyZWF0ZUZhY3Rvcnk6ZnVuY3Rpb24oYSl7dmFyIGI9Ti5iaW5kKG51bGwsYSk7Yi50eXBlPWE7cmV0dXJuIGJ9LGlzVmFsaWRFbGVtZW50Ok8sdmVyc2lvbjpcIjE2LjcuMFwiLFxudW5zdGFibGVfQ29uY3VycmVudE1vZGU6eCx1bnN0YWJsZV9Qcm9maWxlcjp1LF9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEOntSZWFjdEN1cnJlbnRPd25lcjpLLGFzc2lnbjprfX0sWT17ZGVmYXVsdDpYfSxaPVkmJlh8fFk7bW9kdWxlLmV4cG9ydHM9Wi5kZWZhdWx0fHxaO1xuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNi43LjBcbiAqIHJlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbi8qXG4gTW9kZXJuaXpyIDMuMC4wcHJlIChDdXN0b20gQnVpbGQpIHwgTUlUXG4qL1xuJ3VzZSBzdHJpY3QnO3ZhciBhYT1yZXF1aXJlKFwicmVhY3RcIiksbj1yZXF1aXJlKFwib2JqZWN0LWFzc2lnblwiKSxiYT1yZXF1aXJlKFwic2NoZWR1bGVyXCIpO2Z1bmN0aW9uIGNhKGEsYixjLGQsZSxmLGcsaCl7aWYoIWEpe2E9dm9pZCAwO2lmKHZvaWQgMD09PWIpYT1FcnJvcihcIk1pbmlmaWVkIGV4Y2VwdGlvbiBvY2N1cnJlZDsgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciB0aGUgZnVsbCBlcnJvciBtZXNzYWdlIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuXCIpO2Vsc2V7dmFyIGs9W2MsZCxlLGYsZyxoXSxsPTA7YT1FcnJvcihiLnJlcGxhY2UoLyVzL2csZnVuY3Rpb24oKXtyZXR1cm4ga1tsKytdfSkpO2EubmFtZT1cIkludmFyaWFudCBWaW9sYXRpb25cIn1hLmZyYW1lc1RvUG9wPTE7dGhyb3cgYTt9fVxuZnVuY3Rpb24gdChhKXtmb3IodmFyIGI9YXJndW1lbnRzLmxlbmd0aC0xLGM9XCJodHRwczovL3JlYWN0anMub3JnL2RvY3MvZXJyb3ItZGVjb2Rlci5odG1sP2ludmFyaWFudD1cIithLGQ9MDtkPGI7ZCsrKWMrPVwiJmFyZ3NbXT1cIitlbmNvZGVVUklDb21wb25lbnQoYXJndW1lbnRzW2QrMV0pO2NhKCExLFwiTWluaWZpZWQgUmVhY3QgZXJyb3IgI1wiK2ErXCI7IHZpc2l0ICVzIGZvciB0aGUgZnVsbCBtZXNzYWdlIG9yIHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgZnVsbCBlcnJvcnMgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy4gXCIsYyl9YWE/dm9pZCAwOnQoXCIyMjdcIik7ZnVuY3Rpb24gZGEoYSxiLGMsZCxlLGYsZyxoLGspe3ZhciBsPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywzKTt0cnl7Yi5hcHBseShjLGwpfWNhdGNoKG0pe3RoaXMub25FcnJvcihtKX19XG52YXIgZWE9ITEsZmE9bnVsbCxoYT0hMSxpYT1udWxsLGphPXtvbkVycm9yOmZ1bmN0aW9uKGEpe2VhPSEwO2ZhPWF9fTtmdW5jdGlvbiBrYShhLGIsYyxkLGUsZixnLGgsayl7ZWE9ITE7ZmE9bnVsbDtkYS5hcHBseShqYSxhcmd1bWVudHMpfWZ1bmN0aW9uIGxhKGEsYixjLGQsZSxmLGcsaCxrKXtrYS5hcHBseSh0aGlzLGFyZ3VtZW50cyk7aWYoZWEpe2lmKGVhKXt2YXIgbD1mYTtlYT0hMTtmYT1udWxsfWVsc2UgdChcIjE5OFwiKSxsPXZvaWQgMDtoYXx8KGhhPSEwLGlhPWwpfX12YXIgbWE9bnVsbCxuYT17fTtcbmZ1bmN0aW9uIG9hKCl7aWYobWEpZm9yKHZhciBhIGluIG5hKXt2YXIgYj1uYVthXSxjPW1hLmluZGV4T2YoYSk7LTE8Yz92b2lkIDA6dChcIjk2XCIsYSk7aWYoIXBhW2NdKXtiLmV4dHJhY3RFdmVudHM/dm9pZCAwOnQoXCI5N1wiLGEpO3BhW2NdPWI7Yz1iLmV2ZW50VHlwZXM7Zm9yKHZhciBkIGluIGMpe3ZhciBlPXZvaWQgMDt2YXIgZj1jW2RdLGc9YixoPWQ7cWEuaGFzT3duUHJvcGVydHkoaCk/dChcIjk5XCIsaCk6dm9pZCAwO3FhW2hdPWY7dmFyIGs9Zi5waGFzZWRSZWdpc3RyYXRpb25OYW1lcztpZihrKXtmb3IoZSBpbiBrKWsuaGFzT3duUHJvcGVydHkoZSkmJnJhKGtbZV0sZyxoKTtlPSEwfWVsc2UgZi5yZWdpc3RyYXRpb25OYW1lPyhyYShmLnJlZ2lzdHJhdGlvbk5hbWUsZyxoKSxlPSEwKTplPSExO2U/dm9pZCAwOnQoXCI5OFwiLGQsYSl9fX19XG5mdW5jdGlvbiByYShhLGIsYyl7c2FbYV0/dChcIjEwMFwiLGEpOnZvaWQgMDtzYVthXT1iO3RhW2FdPWIuZXZlbnRUeXBlc1tjXS5kZXBlbmRlbmNpZXN9dmFyIHBhPVtdLHFhPXt9LHNhPXt9LHRhPXt9LHVhPW51bGwsdmE9bnVsbCx3YT1udWxsO2Z1bmN0aW9uIHhhKGEsYixjKXt2YXIgZD1hLnR5cGV8fFwidW5rbm93bi1ldmVudFwiO2EuY3VycmVudFRhcmdldD13YShjKTtsYShkLGIsdm9pZCAwLGEpO2EuY3VycmVudFRhcmdldD1udWxsfWZ1bmN0aW9uIHlhKGEsYil7bnVsbD09Yj90KFwiMzBcIik6dm9pZCAwO2lmKG51bGw9PWEpcmV0dXJuIGI7aWYoQXJyYXkuaXNBcnJheShhKSl7aWYoQXJyYXkuaXNBcnJheShiKSlyZXR1cm4gYS5wdXNoLmFwcGx5KGEsYiksYTthLnB1c2goYik7cmV0dXJuIGF9cmV0dXJuIEFycmF5LmlzQXJyYXkoYik/W2FdLmNvbmNhdChiKTpbYSxiXX1cbmZ1bmN0aW9uIHphKGEsYixjKXtBcnJheS5pc0FycmF5KGEpP2EuZm9yRWFjaChiLGMpOmEmJmIuY2FsbChjLGEpfXZhciBBYT1udWxsO2Z1bmN0aW9uIEJhKGEpe2lmKGEpe3ZhciBiPWEuX2Rpc3BhdGNoTGlzdGVuZXJzLGM9YS5fZGlzcGF0Y2hJbnN0YW5jZXM7aWYoQXJyYXkuaXNBcnJheShiKSlmb3IodmFyIGQ9MDtkPGIubGVuZ3RoJiYhYS5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpO2QrKyl4YShhLGJbZF0sY1tkXSk7ZWxzZSBiJiZ4YShhLGIsYyk7YS5fZGlzcGF0Y2hMaXN0ZW5lcnM9bnVsbDthLl9kaXNwYXRjaEluc3RhbmNlcz1udWxsO2EuaXNQZXJzaXN0ZW50KCl8fGEuY29uc3RydWN0b3IucmVsZWFzZShhKX19XG52YXIgQ2E9e2luamVjdEV2ZW50UGx1Z2luT3JkZXI6ZnVuY3Rpb24oYSl7bWE/dChcIjEwMVwiKTp2b2lkIDA7bWE9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYSk7b2EoKX0saW5qZWN0RXZlbnRQbHVnaW5zQnlOYW1lOmZ1bmN0aW9uKGEpe3ZhciBiPSExLGM7Zm9yKGMgaW4gYSlpZihhLmhhc093blByb3BlcnR5KGMpKXt2YXIgZD1hW2NdO25hLmhhc093blByb3BlcnR5KGMpJiZuYVtjXT09PWR8fChuYVtjXT90KFwiMTAyXCIsYyk6dm9pZCAwLG5hW2NdPWQsYj0hMCl9YiYmb2EoKX19O1xuZnVuY3Rpb24gRGEoYSxiKXt2YXIgYz1hLnN0YXRlTm9kZTtpZighYylyZXR1cm4gbnVsbDt2YXIgZD11YShjKTtpZighZClyZXR1cm4gbnVsbDtjPWRbYl07YTpzd2l0Y2goYil7Y2FzZSBcIm9uQ2xpY2tcIjpjYXNlIFwib25DbGlja0NhcHR1cmVcIjpjYXNlIFwib25Eb3VibGVDbGlja1wiOmNhc2UgXCJvbkRvdWJsZUNsaWNrQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlRG93blwiOmNhc2UgXCJvbk1vdXNlRG93bkNhcHR1cmVcIjpjYXNlIFwib25Nb3VzZU1vdmVcIjpjYXNlIFwib25Nb3VzZU1vdmVDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VVcFwiOmNhc2UgXCJvbk1vdXNlVXBDYXB0dXJlXCI6KGQ9IWQuZGlzYWJsZWQpfHwoYT1hLnR5cGUsZD0hKFwiYnV0dG9uXCI9PT1hfHxcImlucHV0XCI9PT1hfHxcInNlbGVjdFwiPT09YXx8XCJ0ZXh0YXJlYVwiPT09YSkpO2E9IWQ7YnJlYWsgYTtkZWZhdWx0OmE9ITF9aWYoYSlyZXR1cm4gbnVsbDtjJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYz90KFwiMjMxXCIsYix0eXBlb2YgYyk6dm9pZCAwO1xucmV0dXJuIGN9ZnVuY3Rpb24gRWEoYSl7bnVsbCE9PWEmJihBYT15YShBYSxhKSk7YT1BYTtBYT1udWxsO2lmKGEmJih6YShhLEJhKSxBYT90KFwiOTVcIik6dm9pZCAwLGhhKSl0aHJvdyBhPWlhLGhhPSExLGlhPW51bGwsYTt9dmFyIEZhPU1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnNsaWNlKDIpLEdhPVwiX19yZWFjdEludGVybmFsSW5zdGFuY2UkXCIrRmEsSGE9XCJfX3JlYWN0RXZlbnRIYW5kbGVycyRcIitGYTtmdW5jdGlvbiBJYShhKXtpZihhW0dhXSlyZXR1cm4gYVtHYV07Zm9yKDshYVtHYV07KWlmKGEucGFyZW50Tm9kZSlhPWEucGFyZW50Tm9kZTtlbHNlIHJldHVybiBudWxsO2E9YVtHYV07cmV0dXJuIDU9PT1hLnRhZ3x8Nj09PWEudGFnP2E6bnVsbH1mdW5jdGlvbiBKYShhKXthPWFbR2FdO3JldHVybiFhfHw1IT09YS50YWcmJjYhPT1hLnRhZz9udWxsOmF9XG5mdW5jdGlvbiBLYShhKXtpZig1PT09YS50YWd8fDY9PT1hLnRhZylyZXR1cm4gYS5zdGF0ZU5vZGU7dChcIjMzXCIpfWZ1bmN0aW9uIExhKGEpe3JldHVybiBhW0hhXXx8bnVsbH1mdW5jdGlvbiBNYShhKXtkbyBhPWEucmV0dXJuO3doaWxlKGEmJjUhPT1hLnRhZyk7cmV0dXJuIGE/YTpudWxsfWZ1bmN0aW9uIE5hKGEsYixjKXtpZihiPURhKGEsYy5kaXNwYXRjaENvbmZpZy5waGFzZWRSZWdpc3RyYXRpb25OYW1lc1tiXSkpYy5fZGlzcGF0Y2hMaXN0ZW5lcnM9eWEoYy5fZGlzcGF0Y2hMaXN0ZW5lcnMsYiksYy5fZGlzcGF0Y2hJbnN0YW5jZXM9eWEoYy5fZGlzcGF0Y2hJbnN0YW5jZXMsYSl9XG5mdW5jdGlvbiBPYShhKXtpZihhJiZhLmRpc3BhdGNoQ29uZmlnLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzKXtmb3IodmFyIGI9YS5fdGFyZ2V0SW5zdCxjPVtdO2I7KWMucHVzaChiKSxiPU1hKGIpO2ZvcihiPWMubGVuZ3RoOzA8Yi0tOylOYShjW2JdLFwiY2FwdHVyZWRcIixhKTtmb3IoYj0wO2I8Yy5sZW5ndGg7YisrKU5hKGNbYl0sXCJidWJibGVkXCIsYSl9fWZ1bmN0aW9uIFBhKGEsYixjKXthJiZjJiZjLmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUmJihiPURhKGEsYy5kaXNwYXRjaENvbmZpZy5yZWdpc3RyYXRpb25OYW1lKSkmJihjLl9kaXNwYXRjaExpc3RlbmVycz15YShjLl9kaXNwYXRjaExpc3RlbmVycyxiKSxjLl9kaXNwYXRjaEluc3RhbmNlcz15YShjLl9kaXNwYXRjaEluc3RhbmNlcyxhKSl9ZnVuY3Rpb24gUWEoYSl7YSYmYS5kaXNwYXRjaENvbmZpZy5yZWdpc3RyYXRpb25OYW1lJiZQYShhLl90YXJnZXRJbnN0LG51bGwsYSl9XG5mdW5jdGlvbiBSYShhKXt6YShhLE9hKX12YXIgU2E9IShcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvd3x8IXdpbmRvdy5kb2N1bWVudHx8IXdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50KTtmdW5jdGlvbiBUYShhLGIpe3ZhciBjPXt9O2NbYS50b0xvd2VyQ2FzZSgpXT1iLnRvTG93ZXJDYXNlKCk7Y1tcIldlYmtpdFwiK2FdPVwid2Via2l0XCIrYjtjW1wiTW96XCIrYV09XCJtb3pcIitiO3JldHVybiBjfXZhciBVYT17YW5pbWF0aW9uZW5kOlRhKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25FbmRcIiksYW5pbWF0aW9uaXRlcmF0aW9uOlRhKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25JdGVyYXRpb25cIiksYW5pbWF0aW9uc3RhcnQ6VGEoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvblN0YXJ0XCIpLHRyYW5zaXRpb25lbmQ6VGEoXCJUcmFuc2l0aW9uXCIsXCJUcmFuc2l0aW9uRW5kXCIpfSxWYT17fSxXYT17fTtcblNhJiYoV2E9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKS5zdHlsZSxcIkFuaW1hdGlvbkV2ZW50XCJpbiB3aW5kb3d8fChkZWxldGUgVWEuYW5pbWF0aW9uZW5kLmFuaW1hdGlvbixkZWxldGUgVWEuYW5pbWF0aW9uaXRlcmF0aW9uLmFuaW1hdGlvbixkZWxldGUgVWEuYW5pbWF0aW9uc3RhcnQuYW5pbWF0aW9uKSxcIlRyYW5zaXRpb25FdmVudFwiaW4gd2luZG93fHxkZWxldGUgVWEudHJhbnNpdGlvbmVuZC50cmFuc2l0aW9uKTtmdW5jdGlvbiBYYShhKXtpZihWYVthXSlyZXR1cm4gVmFbYV07aWYoIVVhW2FdKXJldHVybiBhO3ZhciBiPVVhW2FdLGM7Zm9yKGMgaW4gYilpZihiLmhhc093blByb3BlcnR5KGMpJiZjIGluIFdhKXJldHVybiBWYVthXT1iW2NdO3JldHVybiBhfVxudmFyIFlhPVhhKFwiYW5pbWF0aW9uZW5kXCIpLFphPVhhKFwiYW5pbWF0aW9uaXRlcmF0aW9uXCIpLCRhPVhhKFwiYW5pbWF0aW9uc3RhcnRcIiksYWI9WGEoXCJ0cmFuc2l0aW9uZW5kXCIpLGJiPVwiYWJvcnQgY2FucGxheSBjYW5wbGF5dGhyb3VnaCBkdXJhdGlvbmNoYW5nZSBlbXB0aWVkIGVuY3J5cHRlZCBlbmRlZCBlcnJvciBsb2FkZWRkYXRhIGxvYWRlZG1ldGFkYXRhIGxvYWRzdGFydCBwYXVzZSBwbGF5IHBsYXlpbmcgcHJvZ3Jlc3MgcmF0ZWNoYW5nZSBzZWVrZWQgc2Vla2luZyBzdGFsbGVkIHN1c3BlbmQgdGltZXVwZGF0ZSB2b2x1bWVjaGFuZ2Ugd2FpdGluZ1wiLnNwbGl0KFwiIFwiKSxjYj1udWxsLGViPW51bGwsZmI9bnVsbDtcbmZ1bmN0aW9uIGdiKCl7aWYoZmIpcmV0dXJuIGZiO3ZhciBhLGI9ZWIsYz1iLmxlbmd0aCxkLGU9XCJ2YWx1ZVwiaW4gY2I/Y2IudmFsdWU6Y2IudGV4dENvbnRlbnQsZj1lLmxlbmd0aDtmb3IoYT0wO2E8YyYmYlthXT09PWVbYV07YSsrKTt2YXIgZz1jLWE7Zm9yKGQ9MTtkPD1nJiZiW2MtZF09PT1lW2YtZF07ZCsrKTtyZXR1cm4gZmI9ZS5zbGljZShhLDE8ZD8xLWQ6dm9pZCAwKX1mdW5jdGlvbiBoYigpe3JldHVybiEwfWZ1bmN0aW9uIGliKCl7cmV0dXJuITF9XG5mdW5jdGlvbiB6KGEsYixjLGQpe3RoaXMuZGlzcGF0Y2hDb25maWc9YTt0aGlzLl90YXJnZXRJbnN0PWI7dGhpcy5uYXRpdmVFdmVudD1jO2E9dGhpcy5jb25zdHJ1Y3Rvci5JbnRlcmZhY2U7Zm9yKHZhciBlIGluIGEpYS5oYXNPd25Qcm9wZXJ0eShlKSYmKChiPWFbZV0pP3RoaXNbZV09YihjKTpcInRhcmdldFwiPT09ZT90aGlzLnRhcmdldD1kOnRoaXNbZV09Y1tlXSk7dGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9KG51bGwhPWMuZGVmYXVsdFByZXZlbnRlZD9jLmRlZmF1bHRQcmV2ZW50ZWQ6ITE9PT1jLnJldHVyblZhbHVlKT9oYjppYjt0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPWliO3JldHVybiB0aGlzfVxubih6LnByb3RvdHlwZSx7cHJldmVudERlZmF1bHQ6ZnVuY3Rpb24oKXt0aGlzLmRlZmF1bHRQcmV2ZW50ZWQ9ITA7dmFyIGE9dGhpcy5uYXRpdmVFdmVudDthJiYoYS5wcmV2ZW50RGVmYXVsdD9hLnByZXZlbnREZWZhdWx0KCk6XCJ1bmtub3duXCIhPT10eXBlb2YgYS5yZXR1cm5WYWx1ZSYmKGEucmV0dXJuVmFsdWU9ITEpLHRoaXMuaXNEZWZhdWx0UHJldmVudGVkPWhiKX0sc3RvcFByb3BhZ2F0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5uYXRpdmVFdmVudDthJiYoYS5zdG9wUHJvcGFnYXRpb24/YS5zdG9wUHJvcGFnYXRpb24oKTpcInVua25vd25cIiE9PXR5cGVvZiBhLmNhbmNlbEJ1YmJsZSYmKGEuY2FuY2VsQnViYmxlPSEwKSx0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPWhiKX0scGVyc2lzdDpmdW5jdGlvbigpe3RoaXMuaXNQZXJzaXN0ZW50PWhifSxpc1BlcnNpc3RlbnQ6aWIsZGVzdHJ1Y3RvcjpmdW5jdGlvbigpe3ZhciBhPXRoaXMuY29uc3RydWN0b3IuSW50ZXJmYWNlLFxuYjtmb3IoYiBpbiBhKXRoaXNbYl09bnVsbDt0aGlzLm5hdGl2ZUV2ZW50PXRoaXMuX3RhcmdldEluc3Q9dGhpcy5kaXNwYXRjaENvbmZpZz1udWxsO3RoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9dGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9aWI7dGhpcy5fZGlzcGF0Y2hJbnN0YW5jZXM9dGhpcy5fZGlzcGF0Y2hMaXN0ZW5lcnM9bnVsbH19KTt6LkludGVyZmFjZT17dHlwZTpudWxsLHRhcmdldDpudWxsLGN1cnJlbnRUYXJnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gbnVsbH0sZXZlbnRQaGFzZTpudWxsLGJ1YmJsZXM6bnVsbCxjYW5jZWxhYmxlOm51bGwsdGltZVN0YW1wOmZ1bmN0aW9uKGEpe3JldHVybiBhLnRpbWVTdGFtcHx8RGF0ZS5ub3coKX0sZGVmYXVsdFByZXZlbnRlZDpudWxsLGlzVHJ1c3RlZDpudWxsfTtcbnouZXh0ZW5kPWZ1bmN0aW9uKGEpe2Z1bmN0aW9uIGIoKXt9ZnVuY3Rpb24gYygpe3JldHVybiBkLmFwcGx5KHRoaXMsYXJndW1lbnRzKX12YXIgZD10aGlzO2IucHJvdG90eXBlPWQucHJvdG90eXBlO3ZhciBlPW5ldyBiO24oZSxjLnByb3RvdHlwZSk7Yy5wcm90b3R5cGU9ZTtjLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1jO2MuSW50ZXJmYWNlPW4oe30sZC5JbnRlcmZhY2UsYSk7Yy5leHRlbmQ9ZC5leHRlbmQ7amIoYyk7cmV0dXJuIGN9O2piKHopO2Z1bmN0aW9uIGtiKGEsYixjLGQpe2lmKHRoaXMuZXZlbnRQb29sLmxlbmd0aCl7dmFyIGU9dGhpcy5ldmVudFBvb2wucG9wKCk7dGhpcy5jYWxsKGUsYSxiLGMsZCk7cmV0dXJuIGV9cmV0dXJuIG5ldyB0aGlzKGEsYixjLGQpfWZ1bmN0aW9uIGxiKGEpe2EgaW5zdGFuY2VvZiB0aGlzP3ZvaWQgMDp0KFwiMjc5XCIpO2EuZGVzdHJ1Y3RvcigpOzEwPnRoaXMuZXZlbnRQb29sLmxlbmd0aCYmdGhpcy5ldmVudFBvb2wucHVzaChhKX1cbmZ1bmN0aW9uIGpiKGEpe2EuZXZlbnRQb29sPVtdO2EuZ2V0UG9vbGVkPWtiO2EucmVsZWFzZT1sYn12YXIgbWI9ei5leHRlbmQoe2RhdGE6bnVsbH0pLG5iPXouZXh0ZW5kKHtkYXRhOm51bGx9KSxvYj1bOSwxMywyNywzMl0scGI9U2EmJlwiQ29tcG9zaXRpb25FdmVudFwiaW4gd2luZG93LHFiPW51bGw7U2EmJlwiZG9jdW1lbnRNb2RlXCJpbiBkb2N1bWVudCYmKHFiPWRvY3VtZW50LmRvY3VtZW50TW9kZSk7XG52YXIgcmI9U2EmJlwiVGV4dEV2ZW50XCJpbiB3aW5kb3cmJiFxYixzYj1TYSYmKCFwYnx8cWImJjg8cWImJjExPj1xYiksdGI9U3RyaW5nLmZyb21DaGFyQ29kZSgzMiksdWI9e2JlZm9yZUlucHV0OntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQmVmb3JlSW5wdXRcIixjYXB0dXJlZDpcIm9uQmVmb3JlSW5wdXRDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpbXCJjb21wb3NpdGlvbmVuZFwiLFwia2V5cHJlc3NcIixcInRleHRJbnB1dFwiLFwicGFzdGVcIl19LGNvbXBvc2l0aW9uRW5kOntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ29tcG9zaXRpb25FbmRcIixjYXB0dXJlZDpcIm9uQ29tcG9zaXRpb25FbmRDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY29tcG9zaXRpb25lbmQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIil9LGNvbXBvc2l0aW9uU3RhcnQ6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25Db21wb3NpdGlvblN0YXJ0XCIsXG5jYXB0dXJlZDpcIm9uQ29tcG9zaXRpb25TdGFydENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb21wb3NpdGlvbnN0YXJ0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpfSxjb21wb3NpdGlvblVwZGF0ZTp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNvbXBvc2l0aW9uVXBkYXRlXCIsY2FwdHVyZWQ6XCJvbkNvbXBvc2l0aW9uVXBkYXRlQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbXBvc2l0aW9udXBkYXRlIGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpfX0sdmI9ITE7XG5mdW5jdGlvbiB3YihhLGIpe3N3aXRjaChhKXtjYXNlIFwia2V5dXBcIjpyZXR1cm4tMSE9PW9iLmluZGV4T2YoYi5rZXlDb2RlKTtjYXNlIFwia2V5ZG93blwiOnJldHVybiAyMjkhPT1iLmtleUNvZGU7Y2FzZSBcImtleXByZXNzXCI6Y2FzZSBcIm1vdXNlZG93blwiOmNhc2UgXCJibHVyXCI6cmV0dXJuITA7ZGVmYXVsdDpyZXR1cm4hMX19ZnVuY3Rpb24geGIoYSl7YT1hLmRldGFpbDtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJlwiZGF0YVwiaW4gYT9hLmRhdGE6bnVsbH12YXIgeWI9ITE7ZnVuY3Rpb24gemIoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6cmV0dXJuIHhiKGIpO2Nhc2UgXCJrZXlwcmVzc1wiOmlmKDMyIT09Yi53aGljaClyZXR1cm4gbnVsbDt2Yj0hMDtyZXR1cm4gdGI7Y2FzZSBcInRleHRJbnB1dFwiOnJldHVybiBhPWIuZGF0YSxhPT09dGImJnZiP251bGw6YTtkZWZhdWx0OnJldHVybiBudWxsfX1cbmZ1bmN0aW9uIEFiKGEsYil7aWYoeWIpcmV0dXJuXCJjb21wb3NpdGlvbmVuZFwiPT09YXx8IXBiJiZ3YihhLGIpPyhhPWdiKCksZmI9ZWI9Y2I9bnVsbCx5Yj0hMSxhKTpudWxsO3N3aXRjaChhKXtjYXNlIFwicGFzdGVcIjpyZXR1cm4gbnVsbDtjYXNlIFwia2V5cHJlc3NcIjppZighKGIuY3RybEtleXx8Yi5hbHRLZXl8fGIubWV0YUtleSl8fGIuY3RybEtleSYmYi5hbHRLZXkpe2lmKGIuY2hhciYmMTxiLmNoYXIubGVuZ3RoKXJldHVybiBiLmNoYXI7aWYoYi53aGljaClyZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZShiLndoaWNoKX1yZXR1cm4gbnVsbDtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpyZXR1cm4gc2ImJlwia29cIiE9PWIubG9jYWxlP251bGw6Yi5kYXRhO2RlZmF1bHQ6cmV0dXJuIG51bGx9fVxudmFyIEJiPXtldmVudFR5cGVzOnViLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9dm9pZCAwO3ZhciBmPXZvaWQgMDtpZihwYiliOntzd2l0Y2goYSl7Y2FzZSBcImNvbXBvc2l0aW9uc3RhcnRcIjplPXViLmNvbXBvc2l0aW9uU3RhcnQ7YnJlYWsgYjtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjplPXViLmNvbXBvc2l0aW9uRW5kO2JyZWFrIGI7Y2FzZSBcImNvbXBvc2l0aW9udXBkYXRlXCI6ZT11Yi5jb21wb3NpdGlvblVwZGF0ZTticmVhayBifWU9dm9pZCAwfWVsc2UgeWI/d2IoYSxjKSYmKGU9dWIuY29tcG9zaXRpb25FbmQpOlwia2V5ZG93blwiPT09YSYmMjI5PT09Yy5rZXlDb2RlJiYoZT11Yi5jb21wb3NpdGlvblN0YXJ0KTtlPyhzYiYmXCJrb1wiIT09Yy5sb2NhbGUmJih5Ynx8ZSE9PXViLmNvbXBvc2l0aW9uU3RhcnQ/ZT09PXViLmNvbXBvc2l0aW9uRW5kJiZ5YiYmKGY9Z2IoKSk6KGNiPWQsZWI9XCJ2YWx1ZVwiaW4gY2I/Y2IudmFsdWU6Y2IudGV4dENvbnRlbnQseWI9XG4hMCkpLGU9bWIuZ2V0UG9vbGVkKGUsYixjLGQpLGY/ZS5kYXRhPWY6KGY9eGIoYyksbnVsbCE9PWYmJihlLmRhdGE9ZikpLFJhKGUpLGY9ZSk6Zj1udWxsOyhhPXJiP3piKGEsYyk6QWIoYSxjKSk/KGI9bmIuZ2V0UG9vbGVkKHViLmJlZm9yZUlucHV0LGIsYyxkKSxiLmRhdGE9YSxSYShiKSk6Yj1udWxsO3JldHVybiBudWxsPT09Zj9iOm51bGw9PT1iP2Y6W2YsYl19fSxDYj1udWxsLERiPW51bGwsRWI9bnVsbDtmdW5jdGlvbiBIYihhKXtpZihhPXZhKGEpKXtcImZ1bmN0aW9uXCIhPT10eXBlb2YgQ2I/dChcIjI4MFwiKTp2b2lkIDA7dmFyIGI9dWEoYS5zdGF0ZU5vZGUpO0NiKGEuc3RhdGVOb2RlLGEudHlwZSxiKX19ZnVuY3Rpb24gSWIoYSl7RGI/RWI/RWIucHVzaChhKTpFYj1bYV06RGI9YX1mdW5jdGlvbiBKYigpe2lmKERiKXt2YXIgYT1EYixiPUViO0ViPURiPW51bGw7SGIoYSk7aWYoYilmb3IoYT0wO2E8Yi5sZW5ndGg7YSsrKUhiKGJbYV0pfX1cbmZ1bmN0aW9uIEtiKGEsYil7cmV0dXJuIGEoYil9ZnVuY3Rpb24gTGIoYSxiLGMpe3JldHVybiBhKGIsYyl9ZnVuY3Rpb24gTWIoKXt9dmFyIE5iPSExO2Z1bmN0aW9uIE9iKGEsYil7aWYoTmIpcmV0dXJuIGEoYik7TmI9ITA7dHJ5e3JldHVybiBLYihhLGIpfWZpbmFsbHl7aWYoTmI9ITEsbnVsbCE9PURifHxudWxsIT09RWIpTWIoKSxKYigpfX12YXIgUGI9e2NvbG9yOiEwLGRhdGU6ITAsZGF0ZXRpbWU6ITAsXCJkYXRldGltZS1sb2NhbFwiOiEwLGVtYWlsOiEwLG1vbnRoOiEwLG51bWJlcjohMCxwYXNzd29yZDohMCxyYW5nZTohMCxzZWFyY2g6ITAsdGVsOiEwLHRleHQ6ITAsdGltZTohMCx1cmw6ITAsd2VlazohMH07ZnVuY3Rpb24gUWIoYSl7dmFyIGI9YSYmYS5ub2RlTmFtZSYmYS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVyblwiaW5wdXRcIj09PWI/ISFQYlthLnR5cGVdOlwidGV4dGFyZWFcIj09PWI/ITA6ITF9XG5mdW5jdGlvbiBSYihhKXthPWEudGFyZ2V0fHxhLnNyY0VsZW1lbnR8fHdpbmRvdzthLmNvcnJlc3BvbmRpbmdVc2VFbGVtZW50JiYoYT1hLmNvcnJlc3BvbmRpbmdVc2VFbGVtZW50KTtyZXR1cm4gMz09PWEubm9kZVR5cGU/YS5wYXJlbnROb2RlOmF9ZnVuY3Rpb24gU2IoYSl7aWYoIVNhKXJldHVybiExO2E9XCJvblwiK2E7dmFyIGI9YSBpbiBkb2N1bWVudDtifHwoYj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLGIuc2V0QXR0cmlidXRlKGEsXCJyZXR1cm47XCIpLGI9XCJmdW5jdGlvblwiPT09dHlwZW9mIGJbYV0pO3JldHVybiBifWZ1bmN0aW9uIFRiKGEpe3ZhciBiPWEudHlwZTtyZXR1cm4oYT1hLm5vZGVOYW1lKSYmXCJpbnB1dFwiPT09YS50b0xvd2VyQ2FzZSgpJiYoXCJjaGVja2JveFwiPT09Ynx8XCJyYWRpb1wiPT09Yil9XG5mdW5jdGlvbiBVYihhKXt2YXIgYj1UYihhKT9cImNoZWNrZWRcIjpcInZhbHVlXCIsYz1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGEuY29uc3RydWN0b3IucHJvdG90eXBlLGIpLGQ9XCJcIithW2JdO2lmKCFhLmhhc093blByb3BlcnR5KGIpJiZcInVuZGVmaW5lZFwiIT09dHlwZW9mIGMmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLmdldCYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGMuc2V0KXt2YXIgZT1jLmdldCxmPWMuc2V0O09iamVjdC5kZWZpbmVQcm9wZXJ0eShhLGIse2NvbmZpZ3VyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gZS5jYWxsKHRoaXMpfSxzZXQ6ZnVuY3Rpb24oYSl7ZD1cIlwiK2E7Zi5jYWxsKHRoaXMsYSl9fSk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGEsYix7ZW51bWVyYWJsZTpjLmVudW1lcmFibGV9KTtyZXR1cm57Z2V0VmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gZH0sc2V0VmFsdWU6ZnVuY3Rpb24oYSl7ZD1cIlwiK2F9LHN0b3BUcmFja2luZzpmdW5jdGlvbigpe2EuX3ZhbHVlVHJhY2tlcj1cbm51bGw7ZGVsZXRlIGFbYl19fX19ZnVuY3Rpb24gVmIoYSl7YS5fdmFsdWVUcmFja2VyfHwoYS5fdmFsdWVUcmFja2VyPVViKGEpKX1mdW5jdGlvbiBXYihhKXtpZighYSlyZXR1cm4hMTt2YXIgYj1hLl92YWx1ZVRyYWNrZXI7aWYoIWIpcmV0dXJuITA7dmFyIGM9Yi5nZXRWYWx1ZSgpO3ZhciBkPVwiXCI7YSYmKGQ9VGIoYSk/YS5jaGVja2VkP1widHJ1ZVwiOlwiZmFsc2VcIjphLnZhbHVlKTthPWQ7cmV0dXJuIGEhPT1jPyhiLnNldFZhbHVlKGEpLCEwKTohMX1cbnZhciBYYj1hYS5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRCxZYj0vXiguKilbXFxcXFxcL10vLEQ9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcixaYj1EP1N5bWJvbC5mb3IoXCJyZWFjdC5lbGVtZW50XCIpOjYwMTAzLCRiPUQ/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixhYz1EP1N5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKTo2MDEwNyxiYz1EP1N5bWJvbC5mb3IoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKTo2MDEwOCxjYz1EP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCxkYz1EP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKTo2MDEwOSxlYz1EP1N5bWJvbC5mb3IoXCJyZWFjdC5jb250ZXh0XCIpOjYwMTEwLGZjPUQ/U3ltYm9sLmZvcihcInJlYWN0LmNvbmN1cnJlbnRfbW9kZVwiKTo2MDExMSxnYz1EP1N5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTo2MDExMixoYz1EP1N5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZVwiKTpcbjYwMTEzLGljPUQ/U3ltYm9sLmZvcihcInJlYWN0Lm1lbW9cIik6NjAxMTUsamM9RD9TeW1ib2wuZm9yKFwicmVhY3QubGF6eVwiKTo2MDExNixrYz1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuaXRlcmF0b3I7ZnVuY3Rpb24gbGMoYSl7aWYobnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYSlyZXR1cm4gbnVsbDthPWtjJiZhW2tjXXx8YVtcIkBAaXRlcmF0b3JcIl07cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YTpudWxsfVxuZnVuY3Rpb24gbWMoYSl7aWYobnVsbD09YSlyZXR1cm4gbnVsbDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlyZXR1cm4gYS5kaXNwbGF5TmFtZXx8YS5uYW1lfHxudWxsO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYSlyZXR1cm4gYTtzd2l0Y2goYSl7Y2FzZSBmYzpyZXR1cm5cIkNvbmN1cnJlbnRNb2RlXCI7Y2FzZSBhYzpyZXR1cm5cIkZyYWdtZW50XCI7Y2FzZSAkYjpyZXR1cm5cIlBvcnRhbFwiO2Nhc2UgY2M6cmV0dXJuXCJQcm9maWxlclwiO2Nhc2UgYmM6cmV0dXJuXCJTdHJpY3RNb2RlXCI7Y2FzZSBoYzpyZXR1cm5cIlN1c3BlbnNlXCJ9aWYoXCJvYmplY3RcIj09PXR5cGVvZiBhKXN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIGVjOnJldHVyblwiQ29udGV4dC5Db25zdW1lclwiO2Nhc2UgZGM6cmV0dXJuXCJDb250ZXh0LlByb3ZpZGVyXCI7Y2FzZSBnYzp2YXIgYj1hLnJlbmRlcjtiPWIuZGlzcGxheU5hbWV8fGIubmFtZXx8XCJcIjtyZXR1cm4gYS5kaXNwbGF5TmFtZXx8KFwiXCIhPT1iP1wiRm9yd2FyZFJlZihcIitiK1xuXCIpXCI6XCJGb3J3YXJkUmVmXCIpO2Nhc2UgaWM6cmV0dXJuIG1jKGEudHlwZSk7Y2FzZSBqYzppZihhPTE9PT1hLl9zdGF0dXM/YS5fcmVzdWx0Om51bGwpcmV0dXJuIG1jKGEpfXJldHVybiBudWxsfWZ1bmN0aW9uIG5jKGEpe3ZhciBiPVwiXCI7ZG97YTpzd2l0Y2goYS50YWcpe2Nhc2UgMzpjYXNlIDQ6Y2FzZSA2OmNhc2UgNzpjYXNlIDEwOmNhc2UgOTp2YXIgYz1cIlwiO2JyZWFrIGE7ZGVmYXVsdDp2YXIgZD1hLl9kZWJ1Z093bmVyLGU9YS5fZGVidWdTb3VyY2UsZj1tYyhhLnR5cGUpO2M9bnVsbDtkJiYoYz1tYyhkLnR5cGUpKTtkPWY7Zj1cIlwiO2U/Zj1cIiAoYXQgXCIrZS5maWxlTmFtZS5yZXBsYWNlKFliLFwiXCIpK1wiOlwiK2UubGluZU51bWJlcitcIilcIjpjJiYoZj1cIiAoY3JlYXRlZCBieSBcIitjK1wiKVwiKTtjPVwiXFxuICAgIGluIFwiKyhkfHxcIlVua25vd25cIikrZn1iKz1jO2E9YS5yZXR1cm59d2hpbGUoYSk7cmV0dXJuIGJ9XG52YXIgb2M9L15bOkEtWl9hLXpcXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwRjZcXHUwMEY4LVxcdTAyRkZcXHUwMzcwLVxcdTAzN0RcXHUwMzdGLVxcdTFGRkZcXHUyMDBDLVxcdTIwMERcXHUyMDcwLVxcdTIxOEZcXHUyQzAwLVxcdTJGRUZcXHUzMDAxLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRkRdWzpBLVpfYS16XFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMkZGXFx1MDM3MC1cXHUwMzdEXFx1MDM3Ri1cXHUxRkZGXFx1MjAwQy1cXHUyMDBEXFx1MjA3MC1cXHUyMThGXFx1MkMwMC1cXHUyRkVGXFx1MzAwMS1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkZEXFwtLjAtOVxcdTAwQjdcXHUwMzAwLVxcdTAzNkZcXHUyMDNGLVxcdTIwNDBdKiQvLHBjPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkscWM9e30scmM9e307XG5mdW5jdGlvbiBzYyhhKXtpZihwYy5jYWxsKHJjLGEpKXJldHVybiEwO2lmKHBjLmNhbGwocWMsYSkpcmV0dXJuITE7aWYob2MudGVzdChhKSlyZXR1cm4gcmNbYV09ITA7cWNbYV09ITA7cmV0dXJuITF9ZnVuY3Rpb24gdGMoYSxiLGMsZCl7aWYobnVsbCE9PWMmJjA9PT1jLnR5cGUpcmV0dXJuITE7c3dpdGNoKHR5cGVvZiBiKXtjYXNlIFwiZnVuY3Rpb25cIjpjYXNlIFwic3ltYm9sXCI6cmV0dXJuITA7Y2FzZSBcImJvb2xlYW5cIjppZihkKXJldHVybiExO2lmKG51bGwhPT1jKXJldHVybiFjLmFjY2VwdHNCb29sZWFuczthPWEudG9Mb3dlckNhc2UoKS5zbGljZSgwLDUpO3JldHVyblwiZGF0YS1cIiE9PWEmJlwiYXJpYS1cIiE9PWE7ZGVmYXVsdDpyZXR1cm4hMX19XG5mdW5jdGlvbiB1YyhhLGIsYyxkKXtpZihudWxsPT09Ynx8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiBifHx0YyhhLGIsYyxkKSlyZXR1cm4hMDtpZihkKXJldHVybiExO2lmKG51bGwhPT1jKXN3aXRjaChjLnR5cGUpe2Nhc2UgMzpyZXR1cm4hYjtjYXNlIDQ6cmV0dXJuITE9PT1iO2Nhc2UgNTpyZXR1cm4gaXNOYU4oYik7Y2FzZSA2OnJldHVybiBpc05hTihiKXx8MT5ifXJldHVybiExfWZ1bmN0aW9uIEUoYSxiLGMsZCxlKXt0aGlzLmFjY2VwdHNCb29sZWFucz0yPT09Ynx8Mz09PWJ8fDQ9PT1iO3RoaXMuYXR0cmlidXRlTmFtZT1kO3RoaXMuYXR0cmlidXRlTmFtZXNwYWNlPWU7dGhpcy5tdXN0VXNlUHJvcGVydHk9Yzt0aGlzLnByb3BlcnR5TmFtZT1hO3RoaXMudHlwZT1ifXZhciBGPXt9O1xuXCJjaGlsZHJlbiBkYW5nZXJvdXNseVNldElubmVySFRNTCBkZWZhdWx0VmFsdWUgZGVmYXVsdENoZWNrZWQgaW5uZXJIVE1MIHN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZyBzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmcgc3R5bGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXtGW2FdPW5ldyBFKGEsMCwhMSxhLG51bGwpfSk7W1tcImFjY2VwdENoYXJzZXRcIixcImFjY2VwdC1jaGFyc2V0XCJdLFtcImNsYXNzTmFtZVwiLFwiY2xhc3NcIl0sW1wiaHRtbEZvclwiLFwiZm9yXCJdLFtcImh0dHBFcXVpdlwiLFwiaHR0cC1lcXVpdlwiXV0uZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hWzBdO0ZbYl09bmV3IEUoYiwxLCExLGFbMV0sbnVsbCl9KTtbXCJjb250ZW50RWRpdGFibGVcIixcImRyYWdnYWJsZVwiLFwic3BlbGxDaGVja1wiLFwidmFsdWVcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtGW2FdPW5ldyBFKGEsMiwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCl9KTtcbltcImF1dG9SZXZlcnNlXCIsXCJleHRlcm5hbFJlc291cmNlc1JlcXVpcmVkXCIsXCJmb2N1c2FibGVcIixcInByZXNlcnZlQWxwaGFcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtGW2FdPW5ldyBFKGEsMiwhMSxhLG51bGwpfSk7XCJhbGxvd0Z1bGxTY3JlZW4gYXN5bmMgYXV0b0ZvY3VzIGF1dG9QbGF5IGNvbnRyb2xzIGRlZmF1bHQgZGVmZXIgZGlzYWJsZWQgZm9ybU5vVmFsaWRhdGUgaGlkZGVuIGxvb3Agbm9Nb2R1bGUgbm9WYWxpZGF0ZSBvcGVuIHBsYXlzSW5saW5lIHJlYWRPbmx5IHJlcXVpcmVkIHJldmVyc2VkIHNjb3BlZCBzZWFtbGVzcyBpdGVtU2NvcGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXtGW2FdPW5ldyBFKGEsMywhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCl9KTtbXCJjaGVja2VkXCIsXCJtdWx0aXBsZVwiLFwibXV0ZWRcIixcInNlbGVjdGVkXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RlthXT1uZXcgRShhLDMsITAsYSxudWxsKX0pO1xuW1wiY2FwdHVyZVwiLFwiZG93bmxvYWRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtGW2FdPW5ldyBFKGEsNCwhMSxhLG51bGwpfSk7W1wiY29sc1wiLFwicm93c1wiLFwic2l6ZVwiLFwic3BhblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0ZbYV09bmV3IEUoYSw2LCExLGEsbnVsbCl9KTtbXCJyb3dTcGFuXCIsXCJzdGFydFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0ZbYV09bmV3IEUoYSw1LCExLGEudG9Mb3dlckNhc2UoKSxudWxsKX0pO3ZhciB2Yz0vW1xcLTpdKFthLXpdKS9nO2Z1bmN0aW9uIHdjKGEpe3JldHVybiBhWzFdLnRvVXBwZXJDYXNlKCl9XG5cImFjY2VudC1oZWlnaHQgYWxpZ25tZW50LWJhc2VsaW5lIGFyYWJpYy1mb3JtIGJhc2VsaW5lLXNoaWZ0IGNhcC1oZWlnaHQgY2xpcC1wYXRoIGNsaXAtcnVsZSBjb2xvci1pbnRlcnBvbGF0aW9uIGNvbG9yLWludGVycG9sYXRpb24tZmlsdGVycyBjb2xvci1wcm9maWxlIGNvbG9yLXJlbmRlcmluZyBkb21pbmFudC1iYXNlbGluZSBlbmFibGUtYmFja2dyb3VuZCBmaWxsLW9wYWNpdHkgZmlsbC1ydWxlIGZsb29kLWNvbG9yIGZsb29kLW9wYWNpdHkgZm9udC1mYW1pbHkgZm9udC1zaXplIGZvbnQtc2l6ZS1hZGp1c3QgZm9udC1zdHJldGNoIGZvbnQtc3R5bGUgZm9udC12YXJpYW50IGZvbnQtd2VpZ2h0IGdseXBoLW5hbWUgZ2x5cGgtb3JpZW50YXRpb24taG9yaXpvbnRhbCBnbHlwaC1vcmllbnRhdGlvbi12ZXJ0aWNhbCBob3Jpei1hZHYteCBob3Jpei1vcmlnaW4teCBpbWFnZS1yZW5kZXJpbmcgbGV0dGVyLXNwYWNpbmcgbGlnaHRpbmctY29sb3IgbWFya2VyLWVuZCBtYXJrZXItbWlkIG1hcmtlci1zdGFydCBvdmVybGluZS1wb3NpdGlvbiBvdmVybGluZS10aGlja25lc3MgcGFpbnQtb3JkZXIgcGFub3NlLTEgcG9pbnRlci1ldmVudHMgcmVuZGVyaW5nLWludGVudCBzaGFwZS1yZW5kZXJpbmcgc3RvcC1jb2xvciBzdG9wLW9wYWNpdHkgc3RyaWtldGhyb3VnaC1wb3NpdGlvbiBzdHJpa2V0aHJvdWdoLXRoaWNrbmVzcyBzdHJva2UtZGFzaGFycmF5IHN0cm9rZS1kYXNob2Zmc2V0IHN0cm9rZS1saW5lY2FwIHN0cm9rZS1saW5lam9pbiBzdHJva2UtbWl0ZXJsaW1pdCBzdHJva2Utb3BhY2l0eSBzdHJva2Utd2lkdGggdGV4dC1hbmNob3IgdGV4dC1kZWNvcmF0aW9uIHRleHQtcmVuZGVyaW5nIHVuZGVybGluZS1wb3NpdGlvbiB1bmRlcmxpbmUtdGhpY2tuZXNzIHVuaWNvZGUtYmlkaSB1bmljb2RlLXJhbmdlIHVuaXRzLXBlci1lbSB2LWFscGhhYmV0aWMgdi1oYW5naW5nIHYtaWRlb2dyYXBoaWMgdi1tYXRoZW1hdGljYWwgdmVjdG9yLWVmZmVjdCB2ZXJ0LWFkdi15IHZlcnQtb3JpZ2luLXggdmVydC1vcmlnaW4teSB3b3JkLXNwYWNpbmcgd3JpdGluZy1tb2RlIHhtbG5zOnhsaW5rIHgtaGVpZ2h0XCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKHZjLFxud2MpO0ZbYl09bmV3IEUoYiwxLCExLGEsbnVsbCl9KTtcInhsaW5rOmFjdHVhdGUgeGxpbms6YXJjcm9sZSB4bGluazpocmVmIHhsaW5rOnJvbGUgeGxpbms6c2hvdyB4bGluazp0aXRsZSB4bGluazp0eXBlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKHZjLHdjKTtGW2JdPW5ldyBFKGIsMSwhMSxhLFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiKX0pO1tcInhtbDpiYXNlXCIsXCJ4bWw6bGFuZ1wiLFwieG1sOnNwYWNlXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKHZjLHdjKTtGW2JdPW5ldyBFKGIsMSwhMSxhLFwiaHR0cDovL3d3dy53My5vcmcvWE1MLzE5OTgvbmFtZXNwYWNlXCIpfSk7Ri50YWJJbmRleD1uZXcgRShcInRhYkluZGV4XCIsMSwhMSxcInRhYmluZGV4XCIsbnVsbCk7XG5mdW5jdGlvbiB4YyhhLGIsYyxkKXt2YXIgZT1GLmhhc093blByb3BlcnR5KGIpP0ZbYl06bnVsbDt2YXIgZj1udWxsIT09ZT8wPT09ZS50eXBlOmQ/ITE6ISgyPGIubGVuZ3RoKXx8XCJvXCIhPT1iWzBdJiZcIk9cIiE9PWJbMF18fFwiblwiIT09YlsxXSYmXCJOXCIhPT1iWzFdPyExOiEwO2Z8fCh1YyhiLGMsZSxkKSYmKGM9bnVsbCksZHx8bnVsbD09PWU/c2MoYikmJihudWxsPT09Yz9hLnJlbW92ZUF0dHJpYnV0ZShiKTphLnNldEF0dHJpYnV0ZShiLFwiXCIrYykpOmUubXVzdFVzZVByb3BlcnR5P2FbZS5wcm9wZXJ0eU5hbWVdPW51bGw9PT1jPzM9PT1lLnR5cGU/ITE6XCJcIjpjOihiPWUuYXR0cmlidXRlTmFtZSxkPWUuYXR0cmlidXRlTmFtZXNwYWNlLG51bGw9PT1jP2EucmVtb3ZlQXR0cmlidXRlKGIpOihlPWUudHlwZSxjPTM9PT1lfHw0PT09ZSYmITA9PT1jP1wiXCI6XCJcIitjLGQ/YS5zZXRBdHRyaWJ1dGVOUyhkLGIsYyk6YS5zZXRBdHRyaWJ1dGUoYixjKSkpKX1cbmZ1bmN0aW9uIHljKGEpe3N3aXRjaCh0eXBlb2YgYSl7Y2FzZSBcImJvb2xlYW5cIjpjYXNlIFwibnVtYmVyXCI6Y2FzZSBcIm9iamVjdFwiOmNhc2UgXCJzdHJpbmdcIjpjYXNlIFwidW5kZWZpbmVkXCI6cmV0dXJuIGE7ZGVmYXVsdDpyZXR1cm5cIlwifX1mdW5jdGlvbiB6YyhhLGIpe3ZhciBjPWIuY2hlY2tlZDtyZXR1cm4gbih7fSxiLHtkZWZhdWx0Q2hlY2tlZDp2b2lkIDAsZGVmYXVsdFZhbHVlOnZvaWQgMCx2YWx1ZTp2b2lkIDAsY2hlY2tlZDpudWxsIT1jP2M6YS5fd3JhcHBlclN0YXRlLmluaXRpYWxDaGVja2VkfSl9XG5mdW5jdGlvbiBBYyhhLGIpe3ZhciBjPW51bGw9PWIuZGVmYXVsdFZhbHVlP1wiXCI6Yi5kZWZhdWx0VmFsdWUsZD1udWxsIT1iLmNoZWNrZWQ/Yi5jaGVja2VkOmIuZGVmYXVsdENoZWNrZWQ7Yz15YyhudWxsIT1iLnZhbHVlP2IudmFsdWU6Yyk7YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsQ2hlY2tlZDpkLGluaXRpYWxWYWx1ZTpjLGNvbnRyb2xsZWQ6XCJjaGVja2JveFwiPT09Yi50eXBlfHxcInJhZGlvXCI9PT1iLnR5cGU/bnVsbCE9Yi5jaGVja2VkOm51bGwhPWIudmFsdWV9fWZ1bmN0aW9uIEJjKGEsYil7Yj1iLmNoZWNrZWQ7bnVsbCE9YiYmeGMoYSxcImNoZWNrZWRcIixiLCExKX1cbmZ1bmN0aW9uIENjKGEsYil7QmMoYSxiKTt2YXIgYz15YyhiLnZhbHVlKSxkPWIudHlwZTtpZihudWxsIT1jKWlmKFwibnVtYmVyXCI9PT1kKXtpZigwPT09YyYmXCJcIj09PWEudmFsdWV8fGEudmFsdWUhPWMpYS52YWx1ZT1cIlwiK2N9ZWxzZSBhLnZhbHVlIT09XCJcIitjJiYoYS52YWx1ZT1cIlwiK2MpO2Vsc2UgaWYoXCJzdWJtaXRcIj09PWR8fFwicmVzZXRcIj09PWQpe2EucmVtb3ZlQXR0cmlidXRlKFwidmFsdWVcIik7cmV0dXJufWIuaGFzT3duUHJvcGVydHkoXCJ2YWx1ZVwiKT9EYyhhLGIudHlwZSxjKTpiLmhhc093blByb3BlcnR5KFwiZGVmYXVsdFZhbHVlXCIpJiZEYyhhLGIudHlwZSx5YyhiLmRlZmF1bHRWYWx1ZSkpO251bGw9PWIuY2hlY2tlZCYmbnVsbCE9Yi5kZWZhdWx0Q2hlY2tlZCYmKGEuZGVmYXVsdENoZWNrZWQ9ISFiLmRlZmF1bHRDaGVja2VkKX1cbmZ1bmN0aW9uIEVjKGEsYixjKXtpZihiLmhhc093blByb3BlcnR5KFwidmFsdWVcIil8fGIuaGFzT3duUHJvcGVydHkoXCJkZWZhdWx0VmFsdWVcIikpe3ZhciBkPWIudHlwZTtpZighKFwic3VibWl0XCIhPT1kJiZcInJlc2V0XCIhPT1kfHx2b2lkIDAhPT1iLnZhbHVlJiZudWxsIT09Yi52YWx1ZSkpcmV0dXJuO2I9XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlO2N8fGI9PT1hLnZhbHVlfHwoYS52YWx1ZT1iKTthLmRlZmF1bHRWYWx1ZT1ifWM9YS5uYW1lO1wiXCIhPT1jJiYoYS5uYW1lPVwiXCIpO2EuZGVmYXVsdENoZWNrZWQ9IWEuZGVmYXVsdENoZWNrZWQ7YS5kZWZhdWx0Q2hlY2tlZD0hIWEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsQ2hlY2tlZDtcIlwiIT09YyYmKGEubmFtZT1jKX1cbmZ1bmN0aW9uIERjKGEsYixjKXtpZihcIm51bWJlclwiIT09Ynx8YS5vd25lckRvY3VtZW50LmFjdGl2ZUVsZW1lbnQhPT1hKW51bGw9PWM/YS5kZWZhdWx0VmFsdWU9XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlOmEuZGVmYXVsdFZhbHVlIT09XCJcIitjJiYoYS5kZWZhdWx0VmFsdWU9XCJcIitjKX12YXIgRmM9e2NoYW5nZTp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNoYW5nZVwiLGNhcHR1cmVkOlwib25DaGFuZ2VDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY2hhbmdlIGNsaWNrIGZvY3VzIGlucHV0IGtleWRvd24ga2V5dXAgc2VsZWN0aW9uY2hhbmdlXCIuc3BsaXQoXCIgXCIpfX07ZnVuY3Rpb24gR2MoYSxiLGMpe2E9ei5nZXRQb29sZWQoRmMuY2hhbmdlLGEsYixjKTthLnR5cGU9XCJjaGFuZ2VcIjtJYihjKTtSYShhKTtyZXR1cm4gYX12YXIgSmM9bnVsbCxLYz1udWxsO2Z1bmN0aW9uIExjKGEpe0VhKGEpfVxuZnVuY3Rpb24gTWMoYSl7dmFyIGI9S2EoYSk7aWYoV2IoYikpcmV0dXJuIGF9ZnVuY3Rpb24gTmMoYSxiKXtpZihcImNoYW5nZVwiPT09YSlyZXR1cm4gYn12YXIgT2M9ITE7U2EmJihPYz1TYihcImlucHV0XCIpJiYoIWRvY3VtZW50LmRvY3VtZW50TW9kZXx8OTxkb2N1bWVudC5kb2N1bWVudE1vZGUpKTtmdW5jdGlvbiBQYygpe0pjJiYoSmMuZGV0YWNoRXZlbnQoXCJvbnByb3BlcnR5Y2hhbmdlXCIsUWMpLEtjPUpjPW51bGwpfWZ1bmN0aW9uIFFjKGEpe1widmFsdWVcIj09PWEucHJvcGVydHlOYW1lJiZNYyhLYykmJihhPUdjKEtjLGEsUmIoYSkpLE9iKExjLGEpKX1mdW5jdGlvbiBSYyhhLGIsYyl7XCJmb2N1c1wiPT09YT8oUGMoKSxKYz1iLEtjPWMsSmMuYXR0YWNoRXZlbnQoXCJvbnByb3BlcnR5Y2hhbmdlXCIsUWMpKTpcImJsdXJcIj09PWEmJlBjKCl9ZnVuY3Rpb24gU2MoYSl7aWYoXCJzZWxlY3Rpb25jaGFuZ2VcIj09PWF8fFwia2V5dXBcIj09PWF8fFwia2V5ZG93blwiPT09YSlyZXR1cm4gTWMoS2MpfVxuZnVuY3Rpb24gVGMoYSxiKXtpZihcImNsaWNrXCI9PT1hKXJldHVybiBNYyhiKX1mdW5jdGlvbiBVYyhhLGIpe2lmKFwiaW5wdXRcIj09PWF8fFwiY2hhbmdlXCI9PT1hKXJldHVybiBNYyhiKX1cbnZhciBWYz17ZXZlbnRUeXBlczpGYyxfaXNJbnB1dEV2ZW50U3VwcG9ydGVkOk9jLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9Yj9LYShiKTp3aW5kb3csZj12b2lkIDAsZz12b2lkIDAsaD1lLm5vZGVOYW1lJiZlLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7XCJzZWxlY3RcIj09PWh8fFwiaW5wdXRcIj09PWgmJlwiZmlsZVwiPT09ZS50eXBlP2Y9TmM6UWIoZSk/T2M/Zj1VYzooZj1TYyxnPVJjKTooaD1lLm5vZGVOYW1lKSYmXCJpbnB1dFwiPT09aC50b0xvd2VyQ2FzZSgpJiYoXCJjaGVja2JveFwiPT09ZS50eXBlfHxcInJhZGlvXCI9PT1lLnR5cGUpJiYoZj1UYyk7aWYoZiYmKGY9ZihhLGIpKSlyZXR1cm4gR2MoZixjLGQpO2cmJmcoYSxlLGIpO1wiYmx1clwiPT09YSYmKGE9ZS5fd3JhcHBlclN0YXRlKSYmYS5jb250cm9sbGVkJiZcIm51bWJlclwiPT09ZS50eXBlJiZEYyhlLFwibnVtYmVyXCIsZS52YWx1ZSl9fSxXYz16LmV4dGVuZCh7dmlldzpudWxsLGRldGFpbDpudWxsfSksWGM9e0FsdDpcImFsdEtleVwiLFxuQ29udHJvbDpcImN0cmxLZXlcIixNZXRhOlwibWV0YUtleVwiLFNoaWZ0Olwic2hpZnRLZXlcIn07ZnVuY3Rpb24gWWMoYSl7dmFyIGI9dGhpcy5uYXRpdmVFdmVudDtyZXR1cm4gYi5nZXRNb2RpZmllclN0YXRlP2IuZ2V0TW9kaWZpZXJTdGF0ZShhKTooYT1YY1thXSk/ISFiW2FdOiExfWZ1bmN0aW9uIFpjKCl7cmV0dXJuIFljfVxudmFyICRjPTAsYWQ9MCxiZD0hMSxjZD0hMSxkZD1XYy5leHRlbmQoe3NjcmVlblg6bnVsbCxzY3JlZW5ZOm51bGwsY2xpZW50WDpudWxsLGNsaWVudFk6bnVsbCxwYWdlWDpudWxsLHBhZ2VZOm51bGwsY3RybEtleTpudWxsLHNoaWZ0S2V5Om51bGwsYWx0S2V5Om51bGwsbWV0YUtleTpudWxsLGdldE1vZGlmaWVyU3RhdGU6WmMsYnV0dG9uOm51bGwsYnV0dG9uczpudWxsLHJlbGF0ZWRUYXJnZXQ6ZnVuY3Rpb24oYSl7cmV0dXJuIGEucmVsYXRlZFRhcmdldHx8KGEuZnJvbUVsZW1lbnQ9PT1hLnNyY0VsZW1lbnQ/YS50b0VsZW1lbnQ6YS5mcm9tRWxlbWVudCl9LG1vdmVtZW50WDpmdW5jdGlvbihhKXtpZihcIm1vdmVtZW50WFwiaW4gYSlyZXR1cm4gYS5tb3ZlbWVudFg7dmFyIGI9JGM7JGM9YS5zY3JlZW5YO3JldHVybiBiZD9cIm1vdXNlbW92ZVwiPT09YS50eXBlP2Euc2NyZWVuWC1iOjA6KGJkPSEwLDApfSxtb3ZlbWVudFk6ZnVuY3Rpb24oYSl7aWYoXCJtb3ZlbWVudFlcImluIGEpcmV0dXJuIGEubW92ZW1lbnRZO1xudmFyIGI9YWQ7YWQ9YS5zY3JlZW5ZO3JldHVybiBjZD9cIm1vdXNlbW92ZVwiPT09YS50eXBlP2Euc2NyZWVuWS1iOjA6KGNkPSEwLDApfX0pLGVkPWRkLmV4dGVuZCh7cG9pbnRlcklkOm51bGwsd2lkdGg6bnVsbCxoZWlnaHQ6bnVsbCxwcmVzc3VyZTpudWxsLHRhbmdlbnRpYWxQcmVzc3VyZTpudWxsLHRpbHRYOm51bGwsdGlsdFk6bnVsbCx0d2lzdDpudWxsLHBvaW50ZXJUeXBlOm51bGwsaXNQcmltYXJ5Om51bGx9KSxmZD17bW91c2VFbnRlcjp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uTW91c2VFbnRlclwiLGRlcGVuZGVuY2llczpbXCJtb3VzZW91dFwiLFwibW91c2VvdmVyXCJdfSxtb3VzZUxlYXZlOntyZWdpc3RyYXRpb25OYW1lOlwib25Nb3VzZUxlYXZlXCIsZGVwZW5kZW5jaWVzOltcIm1vdXNlb3V0XCIsXCJtb3VzZW92ZXJcIl19LHBvaW50ZXJFbnRlcjp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uUG9pbnRlckVudGVyXCIsZGVwZW5kZW5jaWVzOltcInBvaW50ZXJvdXRcIixcInBvaW50ZXJvdmVyXCJdfSxwb2ludGVyTGVhdmU6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvblBvaW50ZXJMZWF2ZVwiLFxuZGVwZW5kZW5jaWVzOltcInBvaW50ZXJvdXRcIixcInBvaW50ZXJvdmVyXCJdfX0sZ2Q9e2V2ZW50VHlwZXM6ZmQsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1cIm1vdXNlb3ZlclwiPT09YXx8XCJwb2ludGVyb3ZlclwiPT09YSxmPVwibW91c2VvdXRcIj09PWF8fFwicG9pbnRlcm91dFwiPT09YTtpZihlJiYoYy5yZWxhdGVkVGFyZ2V0fHxjLmZyb21FbGVtZW50KXx8IWYmJiFlKXJldHVybiBudWxsO2U9ZC53aW5kb3c9PT1kP2Q6KGU9ZC5vd25lckRvY3VtZW50KT9lLmRlZmF1bHRWaWV3fHxlLnBhcmVudFdpbmRvdzp3aW5kb3c7Zj8oZj1iLGI9KGI9Yy5yZWxhdGVkVGFyZ2V0fHxjLnRvRWxlbWVudCk/SWEoYik6bnVsbCk6Zj1udWxsO2lmKGY9PT1iKXJldHVybiBudWxsO3ZhciBnPXZvaWQgMCxoPXZvaWQgMCxrPXZvaWQgMCxsPXZvaWQgMDtpZihcIm1vdXNlb3V0XCI9PT1hfHxcIm1vdXNlb3ZlclwiPT09YSlnPWRkLGg9ZmQubW91c2VMZWF2ZSxrPWZkLm1vdXNlRW50ZXIsbD1cIm1vdXNlXCI7XG5lbHNlIGlmKFwicG9pbnRlcm91dFwiPT09YXx8XCJwb2ludGVyb3ZlclwiPT09YSlnPWVkLGg9ZmQucG9pbnRlckxlYXZlLGs9ZmQucG9pbnRlckVudGVyLGw9XCJwb2ludGVyXCI7dmFyIG09bnVsbD09Zj9lOkthKGYpO2U9bnVsbD09Yj9lOkthKGIpO2E9Zy5nZXRQb29sZWQoaCxmLGMsZCk7YS50eXBlPWwrXCJsZWF2ZVwiO2EudGFyZ2V0PW07YS5yZWxhdGVkVGFyZ2V0PWU7Yz1nLmdldFBvb2xlZChrLGIsYyxkKTtjLnR5cGU9bCtcImVudGVyXCI7Yy50YXJnZXQ9ZTtjLnJlbGF0ZWRUYXJnZXQ9bTtkPWI7aWYoZiYmZClhOntiPWY7ZT1kO2w9MDtmb3IoZz1iO2c7Zz1NYShnKSlsKys7Zz0wO2ZvcihrPWU7aztrPU1hKGspKWcrKztmb3IoOzA8bC1nOyliPU1hKGIpLGwtLTtmb3IoOzA8Zy1sOyllPU1hKGUpLGctLTtmb3IoO2wtLTspe2lmKGI9PT1lfHxiPT09ZS5hbHRlcm5hdGUpYnJlYWsgYTtiPU1hKGIpO2U9TWEoZSl9Yj1udWxsfWVsc2UgYj1udWxsO2U9Yjtmb3IoYj1bXTtmJiZmIT09ZTspe2w9XG5mLmFsdGVybmF0ZTtpZihudWxsIT09bCYmbD09PWUpYnJlYWs7Yi5wdXNoKGYpO2Y9TWEoZil9Zm9yKGY9W107ZCYmZCE9PWU7KXtsPWQuYWx0ZXJuYXRlO2lmKG51bGwhPT1sJiZsPT09ZSlicmVhaztmLnB1c2goZCk7ZD1NYShkKX1mb3IoZD0wO2Q8Yi5sZW5ndGg7ZCsrKVBhKGJbZF0sXCJidWJibGVkXCIsYSk7Zm9yKGQ9Zi5sZW5ndGg7MDxkLS07KVBhKGZbZF0sXCJjYXB0dXJlZFwiLGMpO3JldHVyblthLGNdfX0saGQ9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtmdW5jdGlvbiBpZChhLGIpe3JldHVybiBhPT09Yj8wIT09YXx8MCE9PWJ8fDEvYT09PTEvYjphIT09YSYmYiE9PWJ9XG5mdW5jdGlvbiBqZChhLGIpe2lmKGlkKGEsYikpcmV0dXJuITA7aWYoXCJvYmplY3RcIiE9PXR5cGVvZiBhfHxudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBifHxudWxsPT09YilyZXR1cm4hMTt2YXIgYz1PYmplY3Qua2V5cyhhKSxkPU9iamVjdC5rZXlzKGIpO2lmKGMubGVuZ3RoIT09ZC5sZW5ndGgpcmV0dXJuITE7Zm9yKGQ9MDtkPGMubGVuZ3RoO2QrKylpZighaGQuY2FsbChiLGNbZF0pfHwhaWQoYVtjW2RdXSxiW2NbZF1dKSlyZXR1cm4hMTtyZXR1cm4hMH1mdW5jdGlvbiBrZChhKXt2YXIgYj1hO2lmKGEuYWx0ZXJuYXRlKWZvcig7Yi5yZXR1cm47KWI9Yi5yZXR1cm47ZWxzZXtpZigwIT09KGIuZWZmZWN0VGFnJjIpKXJldHVybiAxO2Zvcig7Yi5yZXR1cm47KWlmKGI9Yi5yZXR1cm4sMCE9PShiLmVmZmVjdFRhZyYyKSlyZXR1cm4gMX1yZXR1cm4gMz09PWIudGFnPzI6M31mdW5jdGlvbiBsZChhKXsyIT09a2QoYSk/dChcIjE4OFwiKTp2b2lkIDB9XG5mdW5jdGlvbiBtZChhKXt2YXIgYj1hLmFsdGVybmF0ZTtpZighYilyZXR1cm4gYj1rZChhKSwzPT09Yj90KFwiMTg4XCIpOnZvaWQgMCwxPT09Yj9udWxsOmE7Zm9yKHZhciBjPWEsZD1iOzspe3ZhciBlPWMucmV0dXJuLGY9ZT9lLmFsdGVybmF0ZTpudWxsO2lmKCFlfHwhZilicmVhaztpZihlLmNoaWxkPT09Zi5jaGlsZCl7Zm9yKHZhciBnPWUuY2hpbGQ7Zzspe2lmKGc9PT1jKXJldHVybiBsZChlKSxhO2lmKGc9PT1kKXJldHVybiBsZChlKSxiO2c9Zy5zaWJsaW5nfXQoXCIxODhcIil9aWYoYy5yZXR1cm4hPT1kLnJldHVybiljPWUsZD1mO2Vsc2V7Zz0hMTtmb3IodmFyIGg9ZS5jaGlsZDtoOyl7aWYoaD09PWMpe2c9ITA7Yz1lO2Q9ZjticmVha31pZihoPT09ZCl7Zz0hMDtkPWU7Yz1mO2JyZWFrfWg9aC5zaWJsaW5nfWlmKCFnKXtmb3IoaD1mLmNoaWxkO2g7KXtpZihoPT09Yyl7Zz0hMDtjPWY7ZD1lO2JyZWFrfWlmKGg9PT1kKXtnPSEwO2Q9ZjtjPWU7YnJlYWt9aD1oLnNpYmxpbmd9Zz9cbnZvaWQgMDp0KFwiMTg5XCIpfX1jLmFsdGVybmF0ZSE9PWQ/dChcIjE5MFwiKTp2b2lkIDB9MyE9PWMudGFnP3QoXCIxODhcIik6dm9pZCAwO3JldHVybiBjLnN0YXRlTm9kZS5jdXJyZW50PT09Yz9hOmJ9ZnVuY3Rpb24gbmQoYSl7YT1tZChhKTtpZighYSlyZXR1cm4gbnVsbDtmb3IodmFyIGI9YTs7KXtpZig1PT09Yi50YWd8fDY9PT1iLnRhZylyZXR1cm4gYjtpZihiLmNoaWxkKWIuY2hpbGQucmV0dXJuPWIsYj1iLmNoaWxkO2Vsc2V7aWYoYj09PWEpYnJlYWs7Zm9yKDshYi5zaWJsaW5nOyl7aWYoIWIucmV0dXJufHxiLnJldHVybj09PWEpcmV0dXJuIG51bGw7Yj1iLnJldHVybn1iLnNpYmxpbmcucmV0dXJuPWIucmV0dXJuO2I9Yi5zaWJsaW5nfX1yZXR1cm4gbnVsbH1cbnZhciBvZD16LmV4dGVuZCh7YW5pbWF0aW9uTmFtZTpudWxsLGVsYXBzZWRUaW1lOm51bGwscHNldWRvRWxlbWVudDpudWxsfSkscGQ9ei5leHRlbmQoe2NsaXBib2FyZERhdGE6ZnVuY3Rpb24oYSl7cmV0dXJuXCJjbGlwYm9hcmREYXRhXCJpbiBhP2EuY2xpcGJvYXJkRGF0YTp3aW5kb3cuY2xpcGJvYXJkRGF0YX19KSxxZD1XYy5leHRlbmQoe3JlbGF0ZWRUYXJnZXQ6bnVsbH0pO2Z1bmN0aW9uIHJkKGEpe3ZhciBiPWEua2V5Q29kZTtcImNoYXJDb2RlXCJpbiBhPyhhPWEuY2hhckNvZGUsMD09PWEmJjEzPT09YiYmKGE9MTMpKTphPWI7MTA9PT1hJiYoYT0xMyk7cmV0dXJuIDMyPD1hfHwxMz09PWE/YTowfVxudmFyIHNkPXtFc2M6XCJFc2NhcGVcIixTcGFjZWJhcjpcIiBcIixMZWZ0OlwiQXJyb3dMZWZ0XCIsVXA6XCJBcnJvd1VwXCIsUmlnaHQ6XCJBcnJvd1JpZ2h0XCIsRG93bjpcIkFycm93RG93blwiLERlbDpcIkRlbGV0ZVwiLFdpbjpcIk9TXCIsTWVudTpcIkNvbnRleHRNZW51XCIsQXBwczpcIkNvbnRleHRNZW51XCIsU2Nyb2xsOlwiU2Nyb2xsTG9ja1wiLE1velByaW50YWJsZUtleTpcIlVuaWRlbnRpZmllZFwifSx0ZD17ODpcIkJhY2tzcGFjZVwiLDk6XCJUYWJcIiwxMjpcIkNsZWFyXCIsMTM6XCJFbnRlclwiLDE2OlwiU2hpZnRcIiwxNzpcIkNvbnRyb2xcIiwxODpcIkFsdFwiLDE5OlwiUGF1c2VcIiwyMDpcIkNhcHNMb2NrXCIsMjc6XCJFc2NhcGVcIiwzMjpcIiBcIiwzMzpcIlBhZ2VVcFwiLDM0OlwiUGFnZURvd25cIiwzNTpcIkVuZFwiLDM2OlwiSG9tZVwiLDM3OlwiQXJyb3dMZWZ0XCIsMzg6XCJBcnJvd1VwXCIsMzk6XCJBcnJvd1JpZ2h0XCIsNDA6XCJBcnJvd0Rvd25cIiw0NTpcIkluc2VydFwiLDQ2OlwiRGVsZXRlXCIsMTEyOlwiRjFcIiwxMTM6XCJGMlwiLDExNDpcIkYzXCIsMTE1OlwiRjRcIixcbjExNjpcIkY1XCIsMTE3OlwiRjZcIiwxMTg6XCJGN1wiLDExOTpcIkY4XCIsMTIwOlwiRjlcIiwxMjE6XCJGMTBcIiwxMjI6XCJGMTFcIiwxMjM6XCJGMTJcIiwxNDQ6XCJOdW1Mb2NrXCIsMTQ1OlwiU2Nyb2xsTG9ja1wiLDIyNDpcIk1ldGFcIn0sdWQ9V2MuZXh0ZW5kKHtrZXk6ZnVuY3Rpb24oYSl7aWYoYS5rZXkpe3ZhciBiPXNkW2Eua2V5XXx8YS5rZXk7aWYoXCJVbmlkZW50aWZpZWRcIiE9PWIpcmV0dXJuIGJ9cmV0dXJuXCJrZXlwcmVzc1wiPT09YS50eXBlPyhhPXJkKGEpLDEzPT09YT9cIkVudGVyXCI6U3RyaW5nLmZyb21DaGFyQ29kZShhKSk6XCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT90ZFthLmtleUNvZGVdfHxcIlVuaWRlbnRpZmllZFwiOlwiXCJ9LGxvY2F0aW9uOm51bGwsY3RybEtleTpudWxsLHNoaWZ0S2V5Om51bGwsYWx0S2V5Om51bGwsbWV0YUtleTpudWxsLHJlcGVhdDpudWxsLGxvY2FsZTpudWxsLGdldE1vZGlmaWVyU3RhdGU6WmMsY2hhckNvZGU6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlwcmVzc1wiPT09XG5hLnR5cGU/cmQoYSk6MH0sa2V5Q29kZTpmdW5jdGlvbihhKXtyZXR1cm5cImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP2Eua2V5Q29kZTowfSx3aGljaDpmdW5jdGlvbihhKXtyZXR1cm5cImtleXByZXNzXCI9PT1hLnR5cGU/cmQoYSk6XCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9hLmtleUNvZGU6MH19KSx2ZD1kZC5leHRlbmQoe2RhdGFUcmFuc2ZlcjpudWxsfSksd2Q9V2MuZXh0ZW5kKHt0b3VjaGVzOm51bGwsdGFyZ2V0VG91Y2hlczpudWxsLGNoYW5nZWRUb3VjaGVzOm51bGwsYWx0S2V5Om51bGwsbWV0YUtleTpudWxsLGN0cmxLZXk6bnVsbCxzaGlmdEtleTpudWxsLGdldE1vZGlmaWVyU3RhdGU6WmN9KSx4ZD16LmV4dGVuZCh7cHJvcGVydHlOYW1lOm51bGwsZWxhcHNlZFRpbWU6bnVsbCxwc2V1ZG9FbGVtZW50Om51bGx9KSx5ZD1kZC5leHRlbmQoe2RlbHRhWDpmdW5jdGlvbihhKXtyZXR1cm5cImRlbHRhWFwiaW4gYT9hLmRlbHRhWDpcIndoZWVsRGVsdGFYXCJpblxuYT8tYS53aGVlbERlbHRhWDowfSxkZWx0YVk6ZnVuY3Rpb24oYSl7cmV0dXJuXCJkZWx0YVlcImluIGE/YS5kZWx0YVk6XCJ3aGVlbERlbHRhWVwiaW4gYT8tYS53aGVlbERlbHRhWTpcIndoZWVsRGVsdGFcImluIGE/LWEud2hlZWxEZWx0YTowfSxkZWx0YVo6bnVsbCxkZWx0YU1vZGU6bnVsbH0pLHpkPVtbXCJhYm9ydFwiLFwiYWJvcnRcIl0sW1lhLFwiYW5pbWF0aW9uRW5kXCJdLFtaYSxcImFuaW1hdGlvbkl0ZXJhdGlvblwiXSxbJGEsXCJhbmltYXRpb25TdGFydFwiXSxbXCJjYW5wbGF5XCIsXCJjYW5QbGF5XCJdLFtcImNhbnBsYXl0aHJvdWdoXCIsXCJjYW5QbGF5VGhyb3VnaFwiXSxbXCJkcmFnXCIsXCJkcmFnXCJdLFtcImRyYWdlbnRlclwiLFwiZHJhZ0VudGVyXCJdLFtcImRyYWdleGl0XCIsXCJkcmFnRXhpdFwiXSxbXCJkcmFnbGVhdmVcIixcImRyYWdMZWF2ZVwiXSxbXCJkcmFnb3ZlclwiLFwiZHJhZ092ZXJcIl0sW1wiZHVyYXRpb25jaGFuZ2VcIixcImR1cmF0aW9uQ2hhbmdlXCJdLFtcImVtcHRpZWRcIixcImVtcHRpZWRcIl0sW1wiZW5jcnlwdGVkXCIsXCJlbmNyeXB0ZWRcIl0sXG5bXCJlbmRlZFwiLFwiZW5kZWRcIl0sW1wiZXJyb3JcIixcImVycm9yXCJdLFtcImdvdHBvaW50ZXJjYXB0dXJlXCIsXCJnb3RQb2ludGVyQ2FwdHVyZVwiXSxbXCJsb2FkXCIsXCJsb2FkXCJdLFtcImxvYWRlZGRhdGFcIixcImxvYWRlZERhdGFcIl0sW1wibG9hZGVkbWV0YWRhdGFcIixcImxvYWRlZE1ldGFkYXRhXCJdLFtcImxvYWRzdGFydFwiLFwibG9hZFN0YXJ0XCJdLFtcImxvc3Rwb2ludGVyY2FwdHVyZVwiLFwibG9zdFBvaW50ZXJDYXB0dXJlXCJdLFtcIm1vdXNlbW92ZVwiLFwibW91c2VNb3ZlXCJdLFtcIm1vdXNlb3V0XCIsXCJtb3VzZU91dFwiXSxbXCJtb3VzZW92ZXJcIixcIm1vdXNlT3ZlclwiXSxbXCJwbGF5aW5nXCIsXCJwbGF5aW5nXCJdLFtcInBvaW50ZXJtb3ZlXCIsXCJwb2ludGVyTW92ZVwiXSxbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyT3V0XCJdLFtcInBvaW50ZXJvdmVyXCIsXCJwb2ludGVyT3ZlclwiXSxbXCJwcm9ncmVzc1wiLFwicHJvZ3Jlc3NcIl0sW1wic2Nyb2xsXCIsXCJzY3JvbGxcIl0sW1wic2Vla2luZ1wiLFwic2Vla2luZ1wiXSxbXCJzdGFsbGVkXCIsXCJzdGFsbGVkXCJdLFxuW1wic3VzcGVuZFwiLFwic3VzcGVuZFwiXSxbXCJ0aW1ldXBkYXRlXCIsXCJ0aW1lVXBkYXRlXCJdLFtcInRvZ2dsZVwiLFwidG9nZ2xlXCJdLFtcInRvdWNobW92ZVwiLFwidG91Y2hNb3ZlXCJdLFthYixcInRyYW5zaXRpb25FbmRcIl0sW1wid2FpdGluZ1wiLFwid2FpdGluZ1wiXSxbXCJ3aGVlbFwiLFwid2hlZWxcIl1dLEFkPXt9LEJkPXt9O2Z1bmN0aW9uIENkKGEsYil7dmFyIGM9YVswXTthPWFbMV07dmFyIGQ9XCJvblwiKyhhWzBdLnRvVXBwZXJDYXNlKCkrYS5zbGljZSgxKSk7Yj17cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6ZCxjYXB0dXJlZDpkK1wiQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6W2NdLGlzSW50ZXJhY3RpdmU6Yn07QWRbYV09YjtCZFtjXT1ifVxuW1tcImJsdXJcIixcImJsdXJcIl0sW1wiY2FuY2VsXCIsXCJjYW5jZWxcIl0sW1wiY2xpY2tcIixcImNsaWNrXCJdLFtcImNsb3NlXCIsXCJjbG9zZVwiXSxbXCJjb250ZXh0bWVudVwiLFwiY29udGV4dE1lbnVcIl0sW1wiY29weVwiLFwiY29weVwiXSxbXCJjdXRcIixcImN1dFwiXSxbXCJhdXhjbGlja1wiLFwiYXV4Q2xpY2tcIl0sW1wiZGJsY2xpY2tcIixcImRvdWJsZUNsaWNrXCJdLFtcImRyYWdlbmRcIixcImRyYWdFbmRcIl0sW1wiZHJhZ3N0YXJ0XCIsXCJkcmFnU3RhcnRcIl0sW1wiZHJvcFwiLFwiZHJvcFwiXSxbXCJmb2N1c1wiLFwiZm9jdXNcIl0sW1wiaW5wdXRcIixcImlucHV0XCJdLFtcImludmFsaWRcIixcImludmFsaWRcIl0sW1wia2V5ZG93blwiLFwia2V5RG93blwiXSxbXCJrZXlwcmVzc1wiLFwia2V5UHJlc3NcIl0sW1wia2V5dXBcIixcImtleVVwXCJdLFtcIm1vdXNlZG93blwiLFwibW91c2VEb3duXCJdLFtcIm1vdXNldXBcIixcIm1vdXNlVXBcIl0sW1wicGFzdGVcIixcInBhc3RlXCJdLFtcInBhdXNlXCIsXCJwYXVzZVwiXSxbXCJwbGF5XCIsXCJwbGF5XCJdLFtcInBvaW50ZXJjYW5jZWxcIixcInBvaW50ZXJDYW5jZWxcIl0sXG5bXCJwb2ludGVyZG93blwiLFwicG9pbnRlckRvd25cIl0sW1wicG9pbnRlcnVwXCIsXCJwb2ludGVyVXBcIl0sW1wicmF0ZWNoYW5nZVwiLFwicmF0ZUNoYW5nZVwiXSxbXCJyZXNldFwiLFwicmVzZXRcIl0sW1wic2Vla2VkXCIsXCJzZWVrZWRcIl0sW1wic3VibWl0XCIsXCJzdWJtaXRcIl0sW1widG91Y2hjYW5jZWxcIixcInRvdWNoQ2FuY2VsXCJdLFtcInRvdWNoZW5kXCIsXCJ0b3VjaEVuZFwiXSxbXCJ0b3VjaHN0YXJ0XCIsXCJ0b3VjaFN0YXJ0XCJdLFtcInZvbHVtZWNoYW5nZVwiLFwidm9sdW1lQ2hhbmdlXCJdXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0NkKGEsITApfSk7emQuZm9yRWFjaChmdW5jdGlvbihhKXtDZChhLCExKX0pO1xudmFyIERkPXtldmVudFR5cGVzOkFkLGlzSW50ZXJhY3RpdmVUb3BMZXZlbEV2ZW50VHlwZTpmdW5jdGlvbihhKXthPUJkW2FdO3JldHVybiB2b2lkIDAhPT1hJiYhMD09PWEuaXNJbnRlcmFjdGl2ZX0sZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1CZFthXTtpZighZSlyZXR1cm4gbnVsbDtzd2l0Y2goYSl7Y2FzZSBcImtleXByZXNzXCI6aWYoMD09PXJkKGMpKXJldHVybiBudWxsO2Nhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXVwXCI6YT11ZDticmVhaztjYXNlIFwiYmx1clwiOmNhc2UgXCJmb2N1c1wiOmE9cWQ7YnJlYWs7Y2FzZSBcImNsaWNrXCI6aWYoMj09PWMuYnV0dG9uKXJldHVybiBudWxsO2Nhc2UgXCJhdXhjbGlja1wiOmNhc2UgXCJkYmxjbGlja1wiOmNhc2UgXCJtb3VzZWRvd25cIjpjYXNlIFwibW91c2Vtb3ZlXCI6Y2FzZSBcIm1vdXNldXBcIjpjYXNlIFwibW91c2VvdXRcIjpjYXNlIFwibW91c2VvdmVyXCI6Y2FzZSBcImNvbnRleHRtZW51XCI6YT1kZDticmVhaztjYXNlIFwiZHJhZ1wiOmNhc2UgXCJkcmFnZW5kXCI6Y2FzZSBcImRyYWdlbnRlclwiOmNhc2UgXCJkcmFnZXhpdFwiOmNhc2UgXCJkcmFnbGVhdmVcIjpjYXNlIFwiZHJhZ292ZXJcIjpjYXNlIFwiZHJhZ3N0YXJ0XCI6Y2FzZSBcImRyb3BcIjphPVxudmQ7YnJlYWs7Y2FzZSBcInRvdWNoY2FuY2VsXCI6Y2FzZSBcInRvdWNoZW5kXCI6Y2FzZSBcInRvdWNobW92ZVwiOmNhc2UgXCJ0b3VjaHN0YXJ0XCI6YT13ZDticmVhaztjYXNlIFlhOmNhc2UgWmE6Y2FzZSAkYTphPW9kO2JyZWFrO2Nhc2UgYWI6YT14ZDticmVhaztjYXNlIFwic2Nyb2xsXCI6YT1XYzticmVhaztjYXNlIFwid2hlZWxcIjphPXlkO2JyZWFrO2Nhc2UgXCJjb3B5XCI6Y2FzZSBcImN1dFwiOmNhc2UgXCJwYXN0ZVwiOmE9cGQ7YnJlYWs7Y2FzZSBcImdvdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcImxvc3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJwb2ludGVyY2FuY2VsXCI6Y2FzZSBcInBvaW50ZXJkb3duXCI6Y2FzZSBcInBvaW50ZXJtb3ZlXCI6Y2FzZSBcInBvaW50ZXJvdXRcIjpjYXNlIFwicG9pbnRlcm92ZXJcIjpjYXNlIFwicG9pbnRlcnVwXCI6YT1lZDticmVhaztkZWZhdWx0OmE9en1iPWEuZ2V0UG9vbGVkKGUsYixjLGQpO1JhKGIpO3JldHVybiBifX0sRWQ9RGQuaXNJbnRlcmFjdGl2ZVRvcExldmVsRXZlbnRUeXBlLFxuRmQ9W107ZnVuY3Rpb24gR2QoYSl7dmFyIGI9YS50YXJnZXRJbnN0LGM9Yjtkb3tpZighYyl7YS5hbmNlc3RvcnMucHVzaChjKTticmVha312YXIgZDtmb3IoZD1jO2QucmV0dXJuOylkPWQucmV0dXJuO2Q9MyE9PWQudGFnP251bGw6ZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztpZighZClicmVhazthLmFuY2VzdG9ycy5wdXNoKGMpO2M9SWEoZCl9d2hpbGUoYyk7Zm9yKGM9MDtjPGEuYW5jZXN0b3JzLmxlbmd0aDtjKyspe2I9YS5hbmNlc3RvcnNbY107dmFyIGU9UmIoYS5uYXRpdmVFdmVudCk7ZD1hLnRvcExldmVsVHlwZTtmb3IodmFyIGY9YS5uYXRpdmVFdmVudCxnPW51bGwsaD0wO2g8cGEubGVuZ3RoO2grKyl7dmFyIGs9cGFbaF07ayYmKGs9ay5leHRyYWN0RXZlbnRzKGQsYixmLGUpKSYmKGc9eWEoZyxrKSl9RWEoZyl9fXZhciBIZD0hMDtcbmZ1bmN0aW9uIEgoYSxiKXtpZighYilyZXR1cm4gbnVsbDt2YXIgYz0oRWQoYSk/SWQ6SmQpLmJpbmQobnVsbCxhKTtiLmFkZEV2ZW50TGlzdGVuZXIoYSxjLCExKX1mdW5jdGlvbiBLZChhLGIpe2lmKCFiKXJldHVybiBudWxsO3ZhciBjPShFZChhKT9JZDpKZCkuYmluZChudWxsLGEpO2IuYWRkRXZlbnRMaXN0ZW5lcihhLGMsITApfWZ1bmN0aW9uIElkKGEsYil7TGIoSmQsYSxiKX1cbmZ1bmN0aW9uIEpkKGEsYil7aWYoSGQpe3ZhciBjPVJiKGIpO2M9SWEoYyk7bnVsbD09PWN8fFwibnVtYmVyXCIhPT10eXBlb2YgYy50YWd8fDI9PT1rZChjKXx8KGM9bnVsbCk7aWYoRmQubGVuZ3RoKXt2YXIgZD1GZC5wb3AoKTtkLnRvcExldmVsVHlwZT1hO2QubmF0aXZlRXZlbnQ9YjtkLnRhcmdldEluc3Q9YzthPWR9ZWxzZSBhPXt0b3BMZXZlbFR5cGU6YSxuYXRpdmVFdmVudDpiLHRhcmdldEluc3Q6YyxhbmNlc3RvcnM6W119O3RyeXtPYihHZCxhKX1maW5hbGx5e2EudG9wTGV2ZWxUeXBlPW51bGwsYS5uYXRpdmVFdmVudD1udWxsLGEudGFyZ2V0SW5zdD1udWxsLGEuYW5jZXN0b3JzLmxlbmd0aD0wLDEwPkZkLmxlbmd0aCYmRmQucHVzaChhKX19fXZhciBMZD17fSxNZD0wLE5kPVwiX3JlYWN0TGlzdGVuZXJzSURcIisoXCJcIitNYXRoLnJhbmRvbSgpKS5zbGljZSgyKTtcbmZ1bmN0aW9uIE9kKGEpe09iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChhLE5kKXx8KGFbTmRdPU1kKyssTGRbYVtOZF1dPXt9KTtyZXR1cm4gTGRbYVtOZF1dfWZ1bmN0aW9uIFBkKGEpe2E9YXx8KFwidW5kZWZpbmVkXCIhPT10eXBlb2YgZG9jdW1lbnQ/ZG9jdW1lbnQ6dm9pZCAwKTtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIGEpcmV0dXJuIG51bGw7dHJ5e3JldHVybiBhLmFjdGl2ZUVsZW1lbnR8fGEuYm9keX1jYXRjaChiKXtyZXR1cm4gYS5ib2R5fX1mdW5jdGlvbiBRZChhKXtmb3IoO2EmJmEuZmlyc3RDaGlsZDspYT1hLmZpcnN0Q2hpbGQ7cmV0dXJuIGF9XG5mdW5jdGlvbiBSZChhLGIpe3ZhciBjPVFkKGEpO2E9MDtmb3IodmFyIGQ7Yzspe2lmKDM9PT1jLm5vZGVUeXBlKXtkPWErYy50ZXh0Q29udGVudC5sZW5ndGg7aWYoYTw9YiYmZD49YilyZXR1cm57bm9kZTpjLG9mZnNldDpiLWF9O2E9ZH1hOntmb3IoO2M7KXtpZihjLm5leHRTaWJsaW5nKXtjPWMubmV4dFNpYmxpbmc7YnJlYWsgYX1jPWMucGFyZW50Tm9kZX1jPXZvaWQgMH1jPVFkKGMpfX1mdW5jdGlvbiBTZChhLGIpe3JldHVybiBhJiZiP2E9PT1iPyEwOmEmJjM9PT1hLm5vZGVUeXBlPyExOmImJjM9PT1iLm5vZGVUeXBlP1NkKGEsYi5wYXJlbnROb2RlKTpcImNvbnRhaW5zXCJpbiBhP2EuY29udGFpbnMoYik6YS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbj8hIShhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKGIpJjE2KTohMTohMX1cbmZ1bmN0aW9uIFRkKCl7Zm9yKHZhciBhPXdpbmRvdyxiPVBkKCk7YiBpbnN0YW5jZW9mIGEuSFRNTElGcmFtZUVsZW1lbnQ7KXt0cnl7YT1iLmNvbnRlbnREb2N1bWVudC5kZWZhdWx0Vmlld31jYXRjaChjKXticmVha31iPVBkKGEuZG9jdW1lbnQpfXJldHVybiBifWZ1bmN0aW9uIFVkKGEpe3ZhciBiPWEmJmEubm9kZU5hbWUmJmEubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm4gYiYmKFwiaW5wdXRcIj09PWImJihcInRleHRcIj09PWEudHlwZXx8XCJzZWFyY2hcIj09PWEudHlwZXx8XCJ0ZWxcIj09PWEudHlwZXx8XCJ1cmxcIj09PWEudHlwZXx8XCJwYXNzd29yZFwiPT09YS50eXBlKXx8XCJ0ZXh0YXJlYVwiPT09Ynx8XCJ0cnVlXCI9PT1hLmNvbnRlbnRFZGl0YWJsZSl9XG52YXIgVmQ9U2EmJlwiZG9jdW1lbnRNb2RlXCJpbiBkb2N1bWVudCYmMTE+PWRvY3VtZW50LmRvY3VtZW50TW9kZSxXZD17c2VsZWN0OntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uU2VsZWN0XCIsY2FwdHVyZWQ6XCJvblNlbGVjdENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb250ZXh0bWVudSBkcmFnZW5kIGZvY3VzIGtleWRvd24ga2V5dXAgbW91c2Vkb3duIG1vdXNldXAgc2VsZWN0aW9uY2hhbmdlXCIuc3BsaXQoXCIgXCIpfX0sWGQ9bnVsbCxZZD1udWxsLFpkPW51bGwsJGQ9ITE7XG5mdW5jdGlvbiBhZShhLGIpe3ZhciBjPWIud2luZG93PT09Yj9iLmRvY3VtZW50Ojk9PT1iLm5vZGVUeXBlP2I6Yi5vd25lckRvY3VtZW50O2lmKCRkfHxudWxsPT1YZHx8WGQhPT1QZChjKSlyZXR1cm4gbnVsbDtjPVhkO1wic2VsZWN0aW9uU3RhcnRcImluIGMmJlVkKGMpP2M9e3N0YXJ0OmMuc2VsZWN0aW9uU3RhcnQsZW5kOmMuc2VsZWN0aW9uRW5kfTooYz0oYy5vd25lckRvY3VtZW50JiZjLm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXd8fHdpbmRvdykuZ2V0U2VsZWN0aW9uKCksYz17YW5jaG9yTm9kZTpjLmFuY2hvck5vZGUsYW5jaG9yT2Zmc2V0OmMuYW5jaG9yT2Zmc2V0LGZvY3VzTm9kZTpjLmZvY3VzTm9kZSxmb2N1c09mZnNldDpjLmZvY3VzT2Zmc2V0fSk7cmV0dXJuIFpkJiZqZChaZCxjKT9udWxsOihaZD1jLGE9ei5nZXRQb29sZWQoV2Quc2VsZWN0LFlkLGEsYiksYS50eXBlPVwic2VsZWN0XCIsYS50YXJnZXQ9WGQsUmEoYSksYSl9XG52YXIgYmU9e2V2ZW50VHlwZXM6V2QsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1kLndpbmRvdz09PWQ/ZC5kb2N1bWVudDo5PT09ZC5ub2RlVHlwZT9kOmQub3duZXJEb2N1bWVudCxmO2lmKCEoZj0hZSkpe2E6e2U9T2QoZSk7Zj10YS5vblNlbGVjdDtmb3IodmFyIGc9MDtnPGYubGVuZ3RoO2crKyl7dmFyIGg9ZltnXTtpZighZS5oYXNPd25Qcm9wZXJ0eShoKXx8IWVbaF0pe2U9ITE7YnJlYWsgYX19ZT0hMH1mPSFlfWlmKGYpcmV0dXJuIG51bGw7ZT1iP0thKGIpOndpbmRvdztzd2l0Y2goYSl7Y2FzZSBcImZvY3VzXCI6aWYoUWIoZSl8fFwidHJ1ZVwiPT09ZS5jb250ZW50RWRpdGFibGUpWGQ9ZSxZZD1iLFpkPW51bGw7YnJlYWs7Y2FzZSBcImJsdXJcIjpaZD1ZZD1YZD1udWxsO2JyZWFrO2Nhc2UgXCJtb3VzZWRvd25cIjokZD0hMDticmVhaztjYXNlIFwiY29udGV4dG1lbnVcIjpjYXNlIFwibW91c2V1cFwiOmNhc2UgXCJkcmFnZW5kXCI6cmV0dXJuICRkPSExLGFlKGMsZCk7Y2FzZSBcInNlbGVjdGlvbmNoYW5nZVwiOmlmKFZkKWJyZWFrO1xuY2FzZSBcImtleWRvd25cIjpjYXNlIFwia2V5dXBcIjpyZXR1cm4gYWUoYyxkKX1yZXR1cm4gbnVsbH19O0NhLmluamVjdEV2ZW50UGx1Z2luT3JkZXIoXCJSZXNwb25kZXJFdmVudFBsdWdpbiBTaW1wbGVFdmVudFBsdWdpbiBFbnRlckxlYXZlRXZlbnRQbHVnaW4gQ2hhbmdlRXZlbnRQbHVnaW4gU2VsZWN0RXZlbnRQbHVnaW4gQmVmb3JlSW5wdXRFdmVudFBsdWdpblwiLnNwbGl0KFwiIFwiKSk7dWE9TGE7dmE9SmE7d2E9S2E7Q2EuaW5qZWN0RXZlbnRQbHVnaW5zQnlOYW1lKHtTaW1wbGVFdmVudFBsdWdpbjpEZCxFbnRlckxlYXZlRXZlbnRQbHVnaW46Z2QsQ2hhbmdlRXZlbnRQbHVnaW46VmMsU2VsZWN0RXZlbnRQbHVnaW46YmUsQmVmb3JlSW5wdXRFdmVudFBsdWdpbjpCYn0pO2Z1bmN0aW9uIGRlKGEpe3ZhciBiPVwiXCI7YWEuQ2hpbGRyZW4uZm9yRWFjaChhLGZ1bmN0aW9uKGEpe251bGwhPWEmJihiKz1hKX0pO3JldHVybiBifVxuZnVuY3Rpb24gZWUoYSxiKXthPW4oe2NoaWxkcmVuOnZvaWQgMH0sYik7aWYoYj1kZShiLmNoaWxkcmVuKSlhLmNoaWxkcmVuPWI7cmV0dXJuIGF9ZnVuY3Rpb24gZmUoYSxiLGMsZCl7YT1hLm9wdGlvbnM7aWYoYil7Yj17fTtmb3IodmFyIGU9MDtlPGMubGVuZ3RoO2UrKyliW1wiJFwiK2NbZV1dPSEwO2ZvcihjPTA7YzxhLmxlbmd0aDtjKyspZT1iLmhhc093blByb3BlcnR5KFwiJFwiK2FbY10udmFsdWUpLGFbY10uc2VsZWN0ZWQhPT1lJiYoYVtjXS5zZWxlY3RlZD1lKSxlJiZkJiYoYVtjXS5kZWZhdWx0U2VsZWN0ZWQ9ITApfWVsc2V7Yz1cIlwiK3ljKGMpO2I9bnVsbDtmb3IoZT0wO2U8YS5sZW5ndGg7ZSsrKXtpZihhW2VdLnZhbHVlPT09Yyl7YVtlXS5zZWxlY3RlZD0hMDtkJiYoYVtlXS5kZWZhdWx0U2VsZWN0ZWQ9ITApO3JldHVybn1udWxsIT09Ynx8YVtlXS5kaXNhYmxlZHx8KGI9YVtlXSl9bnVsbCE9PWImJihiLnNlbGVjdGVkPSEwKX19XG5mdW5jdGlvbiBnZShhLGIpe251bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw/dChcIjkxXCIpOnZvaWQgMDtyZXR1cm4gbih7fSxiLHt2YWx1ZTp2b2lkIDAsZGVmYXVsdFZhbHVlOnZvaWQgMCxjaGlsZHJlbjpcIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWV9KX1mdW5jdGlvbiBoZShhLGIpe3ZhciBjPWIudmFsdWU7bnVsbD09YyYmKGM9Yi5kZWZhdWx0VmFsdWUsYj1iLmNoaWxkcmVuLG51bGwhPWImJihudWxsIT1jP3QoXCI5MlwiKTp2b2lkIDAsQXJyYXkuaXNBcnJheShiKSYmKDE+PWIubGVuZ3RoP3ZvaWQgMDp0KFwiOTNcIiksYj1iWzBdKSxjPWIpLG51bGw9PWMmJihjPVwiXCIpKTthLl93cmFwcGVyU3RhdGU9e2luaXRpYWxWYWx1ZTp5YyhjKX19XG5mdW5jdGlvbiBpZShhLGIpe3ZhciBjPXljKGIudmFsdWUpLGQ9eWMoYi5kZWZhdWx0VmFsdWUpO251bGwhPWMmJihjPVwiXCIrYyxjIT09YS52YWx1ZSYmKGEudmFsdWU9YyksbnVsbD09Yi5kZWZhdWx0VmFsdWUmJmEuZGVmYXVsdFZhbHVlIT09YyYmKGEuZGVmYXVsdFZhbHVlPWMpKTtudWxsIT1kJiYoYS5kZWZhdWx0VmFsdWU9XCJcIitkKX1mdW5jdGlvbiBqZShhKXt2YXIgYj1hLnRleHRDb250ZW50O2I9PT1hLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlJiYoYS52YWx1ZT1iKX12YXIga2U9e2h0bWw6XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCIsbWF0aG1sOlwiaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTFwiLHN2ZzpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCJ9O1xuZnVuY3Rpb24gbGUoYSl7c3dpdGNoKGEpe2Nhc2UgXCJzdmdcIjpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI7Y2FzZSBcIm1hdGhcIjpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzE5OTgvTWF0aC9NYXRoTUxcIjtkZWZhdWx0OnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwifX1mdW5jdGlvbiBtZShhLGIpe3JldHVybiBudWxsPT1hfHxcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIj09PWE/bGUoYik6XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPT09YSYmXCJmb3JlaWduT2JqZWN0XCI9PT1iP1wiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiOmF9XG52YXIgbmU9dm9pZCAwLG9lPWZ1bmN0aW9uKGEpe3JldHVyblwidW5kZWZpbmVkXCIhPT10eXBlb2YgTVNBcHAmJk1TQXBwLmV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uP2Z1bmN0aW9uKGIsYyxkLGUpe01TQXBwLmV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uKGZ1bmN0aW9uKCl7cmV0dXJuIGEoYixjLGQsZSl9KX06YX0oZnVuY3Rpb24oYSxiKXtpZihhLm5hbWVzcGFjZVVSSSE9PWtlLnN2Z3x8XCJpbm5lckhUTUxcImluIGEpYS5pbm5lckhUTUw9YjtlbHNle25lPW5lfHxkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO25lLmlubmVySFRNTD1cIjxzdmc+XCIrYitcIjwvc3ZnPlwiO2ZvcihiPW5lLmZpcnN0Q2hpbGQ7YS5maXJzdENoaWxkOylhLnJlbW92ZUNoaWxkKGEuZmlyc3RDaGlsZCk7Zm9yKDtiLmZpcnN0Q2hpbGQ7KWEuYXBwZW5kQ2hpbGQoYi5maXJzdENoaWxkKX19KTtcbmZ1bmN0aW9uIHBlKGEsYil7aWYoYil7dmFyIGM9YS5maXJzdENoaWxkO2lmKGMmJmM9PT1hLmxhc3RDaGlsZCYmMz09PWMubm9kZVR5cGUpe2Mubm9kZVZhbHVlPWI7cmV0dXJufX1hLnRleHRDb250ZW50PWJ9XG52YXIgcWU9e2FuaW1hdGlvbkl0ZXJhdGlvbkNvdW50OiEwLGJvcmRlckltYWdlT3V0c2V0OiEwLGJvcmRlckltYWdlU2xpY2U6ITAsYm9yZGVySW1hZ2VXaWR0aDohMCxib3hGbGV4OiEwLGJveEZsZXhHcm91cDohMCxib3hPcmRpbmFsR3JvdXA6ITAsY29sdW1uQ291bnQ6ITAsY29sdW1uczohMCxmbGV4OiEwLGZsZXhHcm93OiEwLGZsZXhQb3NpdGl2ZTohMCxmbGV4U2hyaW5rOiEwLGZsZXhOZWdhdGl2ZTohMCxmbGV4T3JkZXI6ITAsZ3JpZEFyZWE6ITAsZ3JpZFJvdzohMCxncmlkUm93RW5kOiEwLGdyaWRSb3dTcGFuOiEwLGdyaWRSb3dTdGFydDohMCxncmlkQ29sdW1uOiEwLGdyaWRDb2x1bW5FbmQ6ITAsZ3JpZENvbHVtblNwYW46ITAsZ3JpZENvbHVtblN0YXJ0OiEwLGZvbnRXZWlnaHQ6ITAsbGluZUNsYW1wOiEwLGxpbmVIZWlnaHQ6ITAsb3BhY2l0eTohMCxvcmRlcjohMCxvcnBoYW5zOiEwLHRhYlNpemU6ITAsd2lkb3dzOiEwLHpJbmRleDohMCx6b29tOiEwLGZpbGxPcGFjaXR5OiEwLFxuZmxvb2RPcGFjaXR5OiEwLHN0b3BPcGFjaXR5OiEwLHN0cm9rZURhc2hhcnJheTohMCxzdHJva2VEYXNob2Zmc2V0OiEwLHN0cm9rZU1pdGVybGltaXQ6ITAsc3Ryb2tlT3BhY2l0eTohMCxzdHJva2VXaWR0aDohMH0scmU9W1wiV2Via2l0XCIsXCJtc1wiLFwiTW96XCIsXCJPXCJdO09iamVjdC5rZXlzKHFlKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JlLmZvckVhY2goZnVuY3Rpb24oYil7Yj1iK2EuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkrYS5zdWJzdHJpbmcoMSk7cWVbYl09cWVbYV19KX0pO2Z1bmN0aW9uIHNlKGEsYixjKXtyZXR1cm4gbnVsbD09Ynx8XCJib29sZWFuXCI9PT10eXBlb2YgYnx8XCJcIj09PWI/XCJcIjpjfHxcIm51bWJlclwiIT09dHlwZW9mIGJ8fDA9PT1ifHxxZS5oYXNPd25Qcm9wZXJ0eShhKSYmcWVbYV0/KFwiXCIrYikudHJpbSgpOmIrXCJweFwifVxuZnVuY3Rpb24gdGUoYSxiKXthPWEuc3R5bGU7Zm9yKHZhciBjIGluIGIpaWYoYi5oYXNPd25Qcm9wZXJ0eShjKSl7dmFyIGQ9MD09PWMuaW5kZXhPZihcIi0tXCIpLGU9c2UoYyxiW2NdLGQpO1wiZmxvYXRcIj09PWMmJihjPVwiY3NzRmxvYXRcIik7ZD9hLnNldFByb3BlcnR5KGMsZSk6YVtjXT1lfX12YXIgdWU9bih7bWVudWl0ZW06ITB9LHthcmVhOiEwLGJhc2U6ITAsYnI6ITAsY29sOiEwLGVtYmVkOiEwLGhyOiEwLGltZzohMCxpbnB1dDohMCxrZXlnZW46ITAsbGluazohMCxtZXRhOiEwLHBhcmFtOiEwLHNvdXJjZTohMCx0cmFjazohMCx3YnI6ITB9KTtcbmZ1bmN0aW9uIHZlKGEsYil7YiYmKHVlW2FdJiYobnVsbCE9Yi5jaGlsZHJlbnx8bnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTD90KFwiMTM3XCIsYSxcIlwiKTp2b2lkIDApLG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJihudWxsIT1iLmNoaWxkcmVuP3QoXCI2MFwiKTp2b2lkIDAsXCJvYmplY3RcIj09PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZcIl9faHRtbFwiaW4gYi5kYW5nZXJvdXNseVNldElubmVySFRNTD92b2lkIDA6dChcIjYxXCIpKSxudWxsIT1iLnN0eWxlJiZcIm9iamVjdFwiIT09dHlwZW9mIGIuc3R5bGU/dChcIjYyXCIsXCJcIik6dm9pZCAwKX1cbmZ1bmN0aW9uIHdlKGEsYil7aWYoLTE9PT1hLmluZGV4T2YoXCItXCIpKXJldHVyblwic3RyaW5nXCI9PT10eXBlb2YgYi5pcztzd2l0Y2goYSl7Y2FzZSBcImFubm90YXRpb24teG1sXCI6Y2FzZSBcImNvbG9yLXByb2ZpbGVcIjpjYXNlIFwiZm9udC1mYWNlXCI6Y2FzZSBcImZvbnQtZmFjZS1zcmNcIjpjYXNlIFwiZm9udC1mYWNlLXVyaVwiOmNhc2UgXCJmb250LWZhY2UtZm9ybWF0XCI6Y2FzZSBcImZvbnQtZmFjZS1uYW1lXCI6Y2FzZSBcIm1pc3NpbmctZ2x5cGhcIjpyZXR1cm4hMTtkZWZhdWx0OnJldHVybiEwfX1cbmZ1bmN0aW9uIHhlKGEsYil7YT05PT09YS5ub2RlVHlwZXx8MTE9PT1hLm5vZGVUeXBlP2E6YS5vd25lckRvY3VtZW50O3ZhciBjPU9kKGEpO2I9dGFbYl07Zm9yKHZhciBkPTA7ZDxiLmxlbmd0aDtkKyspe3ZhciBlPWJbZF07aWYoIWMuaGFzT3duUHJvcGVydHkoZSl8fCFjW2VdKXtzd2l0Y2goZSl7Y2FzZSBcInNjcm9sbFwiOktkKFwic2Nyb2xsXCIsYSk7YnJlYWs7Y2FzZSBcImZvY3VzXCI6Y2FzZSBcImJsdXJcIjpLZChcImZvY3VzXCIsYSk7S2QoXCJibHVyXCIsYSk7Yy5ibHVyPSEwO2MuZm9jdXM9ITA7YnJlYWs7Y2FzZSBcImNhbmNlbFwiOmNhc2UgXCJjbG9zZVwiOlNiKGUpJiZLZChlLGEpO2JyZWFrO2Nhc2UgXCJpbnZhbGlkXCI6Y2FzZSBcInN1Ym1pdFwiOmNhc2UgXCJyZXNldFwiOmJyZWFrO2RlZmF1bHQ6LTE9PT1iYi5pbmRleE9mKGUpJiZIKGUsYSl9Y1tlXT0hMH19fWZ1bmN0aW9uIHllKCl7fXZhciB6ZT1udWxsLEFlPW51bGw7XG5mdW5jdGlvbiBCZShhLGIpe3N3aXRjaChhKXtjYXNlIFwiYnV0dG9uXCI6Y2FzZSBcImlucHV0XCI6Y2FzZSBcInNlbGVjdFwiOmNhc2UgXCJ0ZXh0YXJlYVwiOnJldHVybiEhYi5hdXRvRm9jdXN9cmV0dXJuITF9ZnVuY3Rpb24gQ2UoYSxiKXtyZXR1cm5cInRleHRhcmVhXCI9PT1hfHxcIm9wdGlvblwiPT09YXx8XCJub3NjcmlwdFwiPT09YXx8XCJzdHJpbmdcIj09PXR5cGVvZiBiLmNoaWxkcmVufHxcIm51bWJlclwiPT09dHlwZW9mIGIuY2hpbGRyZW58fFwib2JqZWN0XCI9PT10eXBlb2YgYi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmbnVsbCE9PWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJm51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwuX19odG1sfXZhciBEZT1cImZ1bmN0aW9uXCI9PT10eXBlb2Ygc2V0VGltZW91dD9zZXRUaW1lb3V0OnZvaWQgMCxFZT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgY2xlYXJUaW1lb3V0P2NsZWFyVGltZW91dDp2b2lkIDA7XG5mdW5jdGlvbiBGZShhLGIsYyxkLGUpe2FbSGFdPWU7XCJpbnB1dFwiPT09YyYmXCJyYWRpb1wiPT09ZS50eXBlJiZudWxsIT1lLm5hbWUmJkJjKGEsZSk7d2UoYyxkKTtkPXdlKGMsZSk7Zm9yKHZhciBmPTA7ZjxiLmxlbmd0aDtmKz0yKXt2YXIgZz1iW2ZdLGg9YltmKzFdO1wic3R5bGVcIj09PWc/dGUoYSxoKTpcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1nP29lKGEsaCk6XCJjaGlsZHJlblwiPT09Zz9wZShhLGgpOnhjKGEsZyxoLGQpfXN3aXRjaChjKXtjYXNlIFwiaW5wdXRcIjpDYyhhLGUpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmllKGEsZSk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmI9YS5fd3JhcHBlclN0YXRlLndhc011bHRpcGxlLGEuX3dyYXBwZXJTdGF0ZS53YXNNdWx0aXBsZT0hIWUubXVsdGlwbGUsYz1lLnZhbHVlLG51bGwhPWM/ZmUoYSwhIWUubXVsdGlwbGUsYywhMSk6YiE9PSEhZS5tdWx0aXBsZSYmKG51bGwhPWUuZGVmYXVsdFZhbHVlP2ZlKGEsISFlLm11bHRpcGxlLGUuZGVmYXVsdFZhbHVlLFxuITApOmZlKGEsISFlLm11bHRpcGxlLGUubXVsdGlwbGU/W106XCJcIiwhMSkpfX1mdW5jdGlvbiBHZShhKXtmb3IoYT1hLm5leHRTaWJsaW5nO2EmJjEhPT1hLm5vZGVUeXBlJiYzIT09YS5ub2RlVHlwZTspYT1hLm5leHRTaWJsaW5nO3JldHVybiBhfWZ1bmN0aW9uIEhlKGEpe2ZvcihhPWEuZmlyc3RDaGlsZDthJiYxIT09YS5ub2RlVHlwZSYmMyE9PWEubm9kZVR5cGU7KWE9YS5uZXh0U2libGluZztyZXR1cm4gYX1uZXcgU2V0O3ZhciBJZT1bXSxKZT0tMTtmdW5jdGlvbiBJKGEpezA+SmV8fChhLmN1cnJlbnQ9SWVbSmVdLEllW0plXT1udWxsLEplLS0pfWZ1bmN0aW9uIEooYSxiKXtKZSsrO0llW0plXT1hLmN1cnJlbnQ7YS5jdXJyZW50PWJ9dmFyIEtlPXt9LEs9e2N1cnJlbnQ6S2V9LEw9e2N1cnJlbnQ6ITF9LExlPUtlO1xuZnVuY3Rpb24gTWUoYSxiKXt2YXIgYz1hLnR5cGUuY29udGV4dFR5cGVzO2lmKCFjKXJldHVybiBLZTt2YXIgZD1hLnN0YXRlTm9kZTtpZihkJiZkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9PT1iKXJldHVybiBkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0O3ZhciBlPXt9LGY7Zm9yKGYgaW4gYyllW2ZdPWJbZl07ZCYmKGE9YS5zdGF0ZU5vZGUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PWIsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dD1lKTtyZXR1cm4gZX1mdW5jdGlvbiBNKGEpe2E9YS5jaGlsZENvbnRleHRUeXBlcztyZXR1cm4gbnVsbCE9PWEmJnZvaWQgMCE9PWF9ZnVuY3Rpb24gTmUoYSl7SShMLGEpO0koSyxhKX1mdW5jdGlvbiBPZShhKXtJKEwsYSk7SShLLGEpfVxuZnVuY3Rpb24gUGUoYSxiLGMpe0suY3VycmVudCE9PUtlP3QoXCIxNjhcIik6dm9pZCAwO0ooSyxiLGEpO0ooTCxjLGEpfWZ1bmN0aW9uIFFlKGEsYixjKXt2YXIgZD1hLnN0YXRlTm9kZTthPWIuY2hpbGRDb250ZXh0VHlwZXM7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGQuZ2V0Q2hpbGRDb250ZXh0KXJldHVybiBjO2Q9ZC5nZXRDaGlsZENvbnRleHQoKTtmb3IodmFyIGUgaW4gZCllIGluIGE/dm9pZCAwOnQoXCIxMDhcIixtYyhiKXx8XCJVbmtub3duXCIsZSk7cmV0dXJuIG4oe30sYyxkKX1mdW5jdGlvbiBSZShhKXt2YXIgYj1hLnN0YXRlTm9kZTtiPWImJmIuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHR8fEtlO0xlPUsuY3VycmVudDtKKEssYixhKTtKKEwsTC5jdXJyZW50LGEpO3JldHVybiEwfVxuZnVuY3Rpb24gU2UoYSxiLGMpe3ZhciBkPWEuc3RhdGVOb2RlO2Q/dm9pZCAwOnQoXCIxNjlcIik7Yz8oYj1RZShhLGIsTGUpLGQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQ9YixJKEwsYSksSShLLGEpLEooSyxiLGEpKTpJKEwsYSk7SihMLGMsYSl9dmFyIFRlPW51bGwsVWU9bnVsbDtmdW5jdGlvbiBWZShhKXtyZXR1cm4gZnVuY3Rpb24oYil7dHJ5e3JldHVybiBhKGIpfWNhdGNoKGMpe319fVxuZnVuY3Rpb24gV2UoYSl7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18pcmV0dXJuITE7dmFyIGI9X19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fO2lmKGIuaXNEaXNhYmxlZHx8IWIuc3VwcG9ydHNGaWJlcilyZXR1cm4hMDt0cnl7dmFyIGM9Yi5pbmplY3QoYSk7VGU9VmUoZnVuY3Rpb24oYSl7cmV0dXJuIGIub25Db21taXRGaWJlclJvb3QoYyxhKX0pO1VlPVZlKGZ1bmN0aW9uKGEpe3JldHVybiBiLm9uQ29tbWl0RmliZXJVbm1vdW50KGMsYSl9KX1jYXRjaChkKXt9cmV0dXJuITB9XG5mdW5jdGlvbiBYZShhLGIsYyxkKXt0aGlzLnRhZz1hO3RoaXMua2V5PWM7dGhpcy5zaWJsaW5nPXRoaXMuY2hpbGQ9dGhpcy5yZXR1cm49dGhpcy5zdGF0ZU5vZGU9dGhpcy50eXBlPXRoaXMuZWxlbWVudFR5cGU9bnVsbDt0aGlzLmluZGV4PTA7dGhpcy5yZWY9bnVsbDt0aGlzLnBlbmRpbmdQcm9wcz1iO3RoaXMuZmlyc3RDb250ZXh0RGVwZW5kZW5jeT10aGlzLm1lbW9pemVkU3RhdGU9dGhpcy51cGRhdGVRdWV1ZT10aGlzLm1lbW9pemVkUHJvcHM9bnVsbDt0aGlzLm1vZGU9ZDt0aGlzLmVmZmVjdFRhZz0wO3RoaXMubGFzdEVmZmVjdD10aGlzLmZpcnN0RWZmZWN0PXRoaXMubmV4dEVmZmVjdD1udWxsO3RoaXMuY2hpbGRFeHBpcmF0aW9uVGltZT10aGlzLmV4cGlyYXRpb25UaW1lPTA7dGhpcy5hbHRlcm5hdGU9bnVsbH1mdW5jdGlvbiBOKGEsYixjLGQpe3JldHVybiBuZXcgWGUoYSxiLGMsZCl9XG5mdW5jdGlvbiBZZShhKXthPWEucHJvdG90eXBlO3JldHVybiEoIWF8fCFhLmlzUmVhY3RDb21wb25lbnQpfWZ1bmN0aW9uIFplKGEpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKXJldHVybiBZZShhKT8xOjA7aWYodm9pZCAwIT09YSYmbnVsbCE9PWEpe2E9YS4kJHR5cGVvZjtpZihhPT09Z2MpcmV0dXJuIDExO2lmKGE9PT1pYylyZXR1cm4gMTR9cmV0dXJuIDJ9XG5mdW5jdGlvbiAkZShhLGIpe3ZhciBjPWEuYWx0ZXJuYXRlO251bGw9PT1jPyhjPU4oYS50YWcsYixhLmtleSxhLm1vZGUpLGMuZWxlbWVudFR5cGU9YS5lbGVtZW50VHlwZSxjLnR5cGU9YS50eXBlLGMuc3RhdGVOb2RlPWEuc3RhdGVOb2RlLGMuYWx0ZXJuYXRlPWEsYS5hbHRlcm5hdGU9Yyk6KGMucGVuZGluZ1Byb3BzPWIsYy5lZmZlY3RUYWc9MCxjLm5leHRFZmZlY3Q9bnVsbCxjLmZpcnN0RWZmZWN0PW51bGwsYy5sYXN0RWZmZWN0PW51bGwpO2MuY2hpbGRFeHBpcmF0aW9uVGltZT1hLmNoaWxkRXhwaXJhdGlvblRpbWU7Yy5leHBpcmF0aW9uVGltZT1hLmV4cGlyYXRpb25UaW1lO2MuY2hpbGQ9YS5jaGlsZDtjLm1lbW9pemVkUHJvcHM9YS5tZW1vaXplZFByb3BzO2MubWVtb2l6ZWRTdGF0ZT1hLm1lbW9pemVkU3RhdGU7Yy51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlO2MuZmlyc3RDb250ZXh0RGVwZW5kZW5jeT1hLmZpcnN0Q29udGV4dERlcGVuZGVuY3k7Yy5zaWJsaW5nPWEuc2libGluZztcbmMuaW5kZXg9YS5pbmRleDtjLnJlZj1hLnJlZjtyZXR1cm4gY31cbmZ1bmN0aW9uIGFmKGEsYixjLGQsZSxmKXt2YXIgZz0yO2Q9YTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlZZShhKSYmKGc9MSk7ZWxzZSBpZihcInN0cmluZ1wiPT09dHlwZW9mIGEpZz01O2Vsc2UgYTpzd2l0Y2goYSl7Y2FzZSBhYzpyZXR1cm4gYmYoYy5jaGlsZHJlbixlLGYsYik7Y2FzZSBmYzpyZXR1cm4gY2YoYyxlfDMsZixiKTtjYXNlIGJjOnJldHVybiBjZihjLGV8MixmLGIpO2Nhc2UgY2M6cmV0dXJuIGE9TigxMixjLGIsZXw0KSxhLmVsZW1lbnRUeXBlPWNjLGEudHlwZT1jYyxhLmV4cGlyYXRpb25UaW1lPWYsYTtjYXNlIGhjOnJldHVybiBhPU4oMTMsYyxiLGUpLGEuZWxlbWVudFR5cGU9aGMsYS50eXBlPWhjLGEuZXhwaXJhdGlvblRpbWU9ZixhO2RlZmF1bHQ6aWYoXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSlzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSBkYzpnPTEwO2JyZWFrIGE7Y2FzZSBlYzpnPTk7YnJlYWsgYTtjYXNlIGdjOmc9MTE7YnJlYWsgYTtjYXNlIGljOmc9XG4xNDticmVhayBhO2Nhc2UgamM6Zz0xNjtkPW51bGw7YnJlYWsgYX10KFwiMTMwXCIsbnVsbD09YT9hOnR5cGVvZiBhLFwiXCIpfWI9TihnLGMsYixlKTtiLmVsZW1lbnRUeXBlPWE7Yi50eXBlPWQ7Yi5leHBpcmF0aW9uVGltZT1mO3JldHVybiBifWZ1bmN0aW9uIGJmKGEsYixjLGQpe2E9Tig3LGEsZCxiKTthLmV4cGlyYXRpb25UaW1lPWM7cmV0dXJuIGF9ZnVuY3Rpb24gY2YoYSxiLGMsZCl7YT1OKDgsYSxkLGIpO2I9MD09PShiJjEpP2JjOmZjO2EuZWxlbWVudFR5cGU9YjthLnR5cGU9YjthLmV4cGlyYXRpb25UaW1lPWM7cmV0dXJuIGF9ZnVuY3Rpb24gZGYoYSxiLGMpe2E9Tig2LGEsbnVsbCxiKTthLmV4cGlyYXRpb25UaW1lPWM7cmV0dXJuIGF9XG5mdW5jdGlvbiBlZihhLGIsYyl7Yj1OKDQsbnVsbCE9PWEuY2hpbGRyZW4/YS5jaGlsZHJlbjpbXSxhLmtleSxiKTtiLmV4cGlyYXRpb25UaW1lPWM7Yi5zdGF0ZU5vZGU9e2NvbnRhaW5lckluZm86YS5jb250YWluZXJJbmZvLHBlbmRpbmdDaGlsZHJlbjpudWxsLGltcGxlbWVudGF0aW9uOmEuaW1wbGVtZW50YXRpb259O3JldHVybiBifWZ1bmN0aW9uIGZmKGEsYil7YS5kaWRFcnJvcj0hMTt2YXIgYz1hLmVhcmxpZXN0UGVuZGluZ1RpbWU7MD09PWM/YS5lYXJsaWVzdFBlbmRpbmdUaW1lPWEubGF0ZXN0UGVuZGluZ1RpbWU9YjpjPGI/YS5lYXJsaWVzdFBlbmRpbmdUaW1lPWI6YS5sYXRlc3RQZW5kaW5nVGltZT5iJiYoYS5sYXRlc3RQZW5kaW5nVGltZT1iKTtnZihiLGEpfVxuZnVuY3Rpb24gaGYoYSxiKXthLmRpZEVycm9yPSExO2EubGF0ZXN0UGluZ2VkVGltZT49YiYmKGEubGF0ZXN0UGluZ2VkVGltZT0wKTt2YXIgYz1hLmVhcmxpZXN0UGVuZGluZ1RpbWUsZD1hLmxhdGVzdFBlbmRpbmdUaW1lO2M9PT1iP2EuZWFybGllc3RQZW5kaW5nVGltZT1kPT09Yj9hLmxhdGVzdFBlbmRpbmdUaW1lPTA6ZDpkPT09YiYmKGEubGF0ZXN0UGVuZGluZ1RpbWU9Yyk7Yz1hLmVhcmxpZXN0U3VzcGVuZGVkVGltZTtkPWEubGF0ZXN0U3VzcGVuZGVkVGltZTswPT09Yz9hLmVhcmxpZXN0U3VzcGVuZGVkVGltZT1hLmxhdGVzdFN1c3BlbmRlZFRpbWU9YjpjPGI/YS5lYXJsaWVzdFN1c3BlbmRlZFRpbWU9YjpkPmImJihhLmxhdGVzdFN1c3BlbmRlZFRpbWU9Yik7Z2YoYixhKX1mdW5jdGlvbiBqZihhLGIpe3ZhciBjPWEuZWFybGllc3RQZW5kaW5nVGltZTthPWEuZWFybGllc3RTdXNwZW5kZWRUaW1lO2M+YiYmKGI9Yyk7YT5iJiYoYj1hKTtyZXR1cm4gYn1cbmZ1bmN0aW9uIGdmKGEsYil7dmFyIGM9Yi5lYXJsaWVzdFN1c3BlbmRlZFRpbWUsZD1iLmxhdGVzdFN1c3BlbmRlZFRpbWUsZT1iLmVhcmxpZXN0UGVuZGluZ1RpbWUsZj1iLmxhdGVzdFBpbmdlZFRpbWU7ZT0wIT09ZT9lOmY7MD09PWUmJigwPT09YXx8ZDxhKSYmKGU9ZCk7YT1lOzAhPT1hJiZjPmEmJihhPWMpO2IubmV4dEV4cGlyYXRpb25UaW1lVG9Xb3JrT249ZTtiLmV4cGlyYXRpb25UaW1lPWF9dmFyIGtmPSExO2Z1bmN0aW9uIGxmKGEpe3JldHVybntiYXNlU3RhdGU6YSxmaXJzdFVwZGF0ZTpudWxsLGxhc3RVcGRhdGU6bnVsbCxmaXJzdENhcHR1cmVkVXBkYXRlOm51bGwsbGFzdENhcHR1cmVkVXBkYXRlOm51bGwsZmlyc3RFZmZlY3Q6bnVsbCxsYXN0RWZmZWN0Om51bGwsZmlyc3RDYXB0dXJlZEVmZmVjdDpudWxsLGxhc3RDYXB0dXJlZEVmZmVjdDpudWxsfX1cbmZ1bmN0aW9uIG1mKGEpe3JldHVybntiYXNlU3RhdGU6YS5iYXNlU3RhdGUsZmlyc3RVcGRhdGU6YS5maXJzdFVwZGF0ZSxsYXN0VXBkYXRlOmEubGFzdFVwZGF0ZSxmaXJzdENhcHR1cmVkVXBkYXRlOm51bGwsbGFzdENhcHR1cmVkVXBkYXRlOm51bGwsZmlyc3RFZmZlY3Q6bnVsbCxsYXN0RWZmZWN0Om51bGwsZmlyc3RDYXB0dXJlZEVmZmVjdDpudWxsLGxhc3RDYXB0dXJlZEVmZmVjdDpudWxsfX1mdW5jdGlvbiBuZihhKXtyZXR1cm57ZXhwaXJhdGlvblRpbWU6YSx0YWc6MCxwYXlsb2FkOm51bGwsY2FsbGJhY2s6bnVsbCxuZXh0Om51bGwsbmV4dEVmZmVjdDpudWxsfX1mdW5jdGlvbiBvZihhLGIpe251bGw9PT1hLmxhc3RVcGRhdGU/YS5maXJzdFVwZGF0ZT1hLmxhc3RVcGRhdGU9YjooYS5sYXN0VXBkYXRlLm5leHQ9YixhLmxhc3RVcGRhdGU9Yil9XG5mdW5jdGlvbiBwZihhLGIpe3ZhciBjPWEuYWx0ZXJuYXRlO2lmKG51bGw9PT1jKXt2YXIgZD1hLnVwZGF0ZVF1ZXVlO3ZhciBlPW51bGw7bnVsbD09PWQmJihkPWEudXBkYXRlUXVldWU9bGYoYS5tZW1vaXplZFN0YXRlKSl9ZWxzZSBkPWEudXBkYXRlUXVldWUsZT1jLnVwZGF0ZVF1ZXVlLG51bGw9PT1kP251bGw9PT1lPyhkPWEudXBkYXRlUXVldWU9bGYoYS5tZW1vaXplZFN0YXRlKSxlPWMudXBkYXRlUXVldWU9bGYoYy5tZW1vaXplZFN0YXRlKSk6ZD1hLnVwZGF0ZVF1ZXVlPW1mKGUpOm51bGw9PT1lJiYoZT1jLnVwZGF0ZVF1ZXVlPW1mKGQpKTtudWxsPT09ZXx8ZD09PWU/b2YoZCxiKTpudWxsPT09ZC5sYXN0VXBkYXRlfHxudWxsPT09ZS5sYXN0VXBkYXRlPyhvZihkLGIpLG9mKGUsYikpOihvZihkLGIpLGUubGFzdFVwZGF0ZT1iKX1cbmZ1bmN0aW9uIHFmKGEsYil7dmFyIGM9YS51cGRhdGVRdWV1ZTtjPW51bGw9PT1jP2EudXBkYXRlUXVldWU9bGYoYS5tZW1vaXplZFN0YXRlKTpyZihhLGMpO251bGw9PT1jLmxhc3RDYXB0dXJlZFVwZGF0ZT9jLmZpcnN0Q2FwdHVyZWRVcGRhdGU9Yy5sYXN0Q2FwdHVyZWRVcGRhdGU9YjooYy5sYXN0Q2FwdHVyZWRVcGRhdGUubmV4dD1iLGMubGFzdENhcHR1cmVkVXBkYXRlPWIpfWZ1bmN0aW9uIHJmKGEsYil7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWMmJmI9PT1jLnVwZGF0ZVF1ZXVlJiYoYj1hLnVwZGF0ZVF1ZXVlPW1mKGIpKTtyZXR1cm4gYn1cbmZ1bmN0aW9uIHNmKGEsYixjLGQsZSxmKXtzd2l0Y2goYy50YWcpe2Nhc2UgMTpyZXR1cm4gYT1jLnBheWxvYWQsXCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YS5jYWxsKGYsZCxlKTphO2Nhc2UgMzphLmVmZmVjdFRhZz1hLmVmZmVjdFRhZyYtMjA0OXw2NDtjYXNlIDA6YT1jLnBheWxvYWQ7ZT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hLmNhbGwoZixkLGUpOmE7aWYobnVsbD09PWV8fHZvaWQgMD09PWUpYnJlYWs7cmV0dXJuIG4oe30sZCxlKTtjYXNlIDI6a2Y9ITB9cmV0dXJuIGR9XG5mdW5jdGlvbiB0ZihhLGIsYyxkLGUpe2tmPSExO2I9cmYoYSxiKTtmb3IodmFyIGY9Yi5iYXNlU3RhdGUsZz1udWxsLGg9MCxrPWIuZmlyc3RVcGRhdGUsbD1mO251bGwhPT1rOyl7dmFyIG09ay5leHBpcmF0aW9uVGltZTttPGU/KG51bGw9PT1nJiYoZz1rLGY9bCksaDxtJiYoaD1tKSk6KGw9c2YoYSxiLGssbCxjLGQpLG51bGwhPT1rLmNhbGxiYWNrJiYoYS5lZmZlY3RUYWd8PTMyLGsubmV4dEVmZmVjdD1udWxsLG51bGw9PT1iLmxhc3RFZmZlY3Q/Yi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9azooYi5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9ayxiLmxhc3RFZmZlY3Q9aykpKTtrPWsubmV4dH1tPW51bGw7Zm9yKGs9Yi5maXJzdENhcHR1cmVkVXBkYXRlO251bGwhPT1rOyl7dmFyIHI9ay5leHBpcmF0aW9uVGltZTtyPGU/KG51bGw9PT1tJiYobT1rLG51bGw9PT1nJiYoZj1sKSksaDxyJiYoaD1yKSk6KGw9c2YoYSxiLGssbCxjLGQpLG51bGwhPT1rLmNhbGxiYWNrJiYoYS5lZmZlY3RUYWd8PVxuMzIsay5uZXh0RWZmZWN0PW51bGwsbnVsbD09PWIubGFzdENhcHR1cmVkRWZmZWN0P2IuZmlyc3RDYXB0dXJlZEVmZmVjdD1iLmxhc3RDYXB0dXJlZEVmZmVjdD1rOihiLmxhc3RDYXB0dXJlZEVmZmVjdC5uZXh0RWZmZWN0PWssYi5sYXN0Q2FwdHVyZWRFZmZlY3Q9aykpKTtrPWsubmV4dH1udWxsPT09ZyYmKGIubGFzdFVwZGF0ZT1udWxsKTtudWxsPT09bT9iLmxhc3RDYXB0dXJlZFVwZGF0ZT1udWxsOmEuZWZmZWN0VGFnfD0zMjtudWxsPT09ZyYmbnVsbD09PW0mJihmPWwpO2IuYmFzZVN0YXRlPWY7Yi5maXJzdFVwZGF0ZT1nO2IuZmlyc3RDYXB0dXJlZFVwZGF0ZT1tO2EuZXhwaXJhdGlvblRpbWU9aDthLm1lbW9pemVkU3RhdGU9bH1cbmZ1bmN0aW9uIHVmKGEsYixjKXtudWxsIT09Yi5maXJzdENhcHR1cmVkVXBkYXRlJiYobnVsbCE9PWIubGFzdFVwZGF0ZSYmKGIubGFzdFVwZGF0ZS5uZXh0PWIuZmlyc3RDYXB0dXJlZFVwZGF0ZSxiLmxhc3RVcGRhdGU9Yi5sYXN0Q2FwdHVyZWRVcGRhdGUpLGIuZmlyc3RDYXB0dXJlZFVwZGF0ZT1iLmxhc3RDYXB0dXJlZFVwZGF0ZT1udWxsKTt2ZihiLmZpcnN0RWZmZWN0LGMpO2IuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PW51bGw7dmYoYi5maXJzdENhcHR1cmVkRWZmZWN0LGMpO2IuZmlyc3RDYXB0dXJlZEVmZmVjdD1iLmxhc3RDYXB0dXJlZEVmZmVjdD1udWxsfWZ1bmN0aW9uIHZmKGEsYil7Zm9yKDtudWxsIT09YTspe3ZhciBjPWEuY2FsbGJhY2s7aWYobnVsbCE9PWMpe2EuY2FsbGJhY2s9bnVsbDt2YXIgZD1iO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBjP3QoXCIxOTFcIixjKTp2b2lkIDA7Yy5jYWxsKGQpfWE9YS5uZXh0RWZmZWN0fX1cbmZ1bmN0aW9uIHdmKGEsYil7cmV0dXJue3ZhbHVlOmEsc291cmNlOmIsc3RhY2s6bmMoYil9fXZhciB4Zj17Y3VycmVudDpudWxsfSx5Zj1udWxsLHpmPW51bGwsQWY9bnVsbDtmdW5jdGlvbiBCZihhLGIpe3ZhciBjPWEudHlwZS5fY29udGV4dDtKKHhmLGMuX2N1cnJlbnRWYWx1ZSxhKTtjLl9jdXJyZW50VmFsdWU9Yn1mdW5jdGlvbiBDZihhKXt2YXIgYj14Zi5jdXJyZW50O0koeGYsYSk7YS50eXBlLl9jb250ZXh0Ll9jdXJyZW50VmFsdWU9Yn1mdW5jdGlvbiBEZihhKXt5Zj1hO0FmPXpmPW51bGw7YS5maXJzdENvbnRleHREZXBlbmRlbmN5PW51bGx9XG5mdW5jdGlvbiBFZihhLGIpe2lmKEFmIT09YSYmITEhPT1iJiYwIT09Yil7aWYoXCJudW1iZXJcIiE9PXR5cGVvZiBifHwxMDczNzQxODIzPT09YilBZj1hLGI9MTA3Mzc0MTgyMztiPXtjb250ZXh0OmEsb2JzZXJ2ZWRCaXRzOmIsbmV4dDpudWxsfTtudWxsPT09emY/KG51bGw9PT15Zj90KFwiMjkzXCIpOnZvaWQgMCx5Zi5maXJzdENvbnRleHREZXBlbmRlbmN5PXpmPWIpOnpmPXpmLm5leHQ9Yn1yZXR1cm4gYS5fY3VycmVudFZhbHVlfXZhciBGZj17fSxPPXtjdXJyZW50OkZmfSxHZj17Y3VycmVudDpGZn0sSGY9e2N1cnJlbnQ6RmZ9O2Z1bmN0aW9uIElmKGEpe2E9PT1GZj90KFwiMTc0XCIpOnZvaWQgMDtyZXR1cm4gYX1cbmZ1bmN0aW9uIEpmKGEsYil7SihIZixiLGEpO0ooR2YsYSxhKTtKKE8sRmYsYSk7dmFyIGM9Yi5ub2RlVHlwZTtzd2l0Y2goYyl7Y2FzZSA5OmNhc2UgMTE6Yj0oYj1iLmRvY3VtZW50RWxlbWVudCk/Yi5uYW1lc3BhY2VVUkk6bWUobnVsbCxcIlwiKTticmVhaztkZWZhdWx0OmM9OD09PWM/Yi5wYXJlbnROb2RlOmIsYj1jLm5hbWVzcGFjZVVSSXx8bnVsbCxjPWMudGFnTmFtZSxiPW1lKGIsYyl9SShPLGEpO0ooTyxiLGEpfWZ1bmN0aW9uIEtmKGEpe0koTyxhKTtJKEdmLGEpO0koSGYsYSl9ZnVuY3Rpb24gTGYoYSl7SWYoSGYuY3VycmVudCk7dmFyIGI9SWYoTy5jdXJyZW50KTt2YXIgYz1tZShiLGEudHlwZSk7YiE9PWMmJihKKEdmLGEsYSksSihPLGMsYSkpfWZ1bmN0aW9uIE1mKGEpe0dmLmN1cnJlbnQ9PT1hJiYoSShPLGEpLEkoR2YsYSkpfVxuZnVuY3Rpb24gUChhLGIpe2lmKGEmJmEuZGVmYXVsdFByb3BzKXtiPW4oe30sYik7YT1hLmRlZmF1bHRQcm9wcztmb3IodmFyIGMgaW4gYSl2b2lkIDA9PT1iW2NdJiYoYltjXT1hW2NdKX1yZXR1cm4gYn1mdW5jdGlvbiBOZihhKXt2YXIgYj1hLl9yZXN1bHQ7c3dpdGNoKGEuX3N0YXR1cyl7Y2FzZSAxOnJldHVybiBiO2Nhc2UgMjp0aHJvdyBiO2Nhc2UgMDp0aHJvdyBiO2RlZmF1bHQ6dGhyb3cgYS5fc3RhdHVzPTAsYj1hLl9jdG9yLGI9YigpLGIudGhlbihmdW5jdGlvbihiKXswPT09YS5fc3RhdHVzJiYoYj1iLmRlZmF1bHQsYS5fc3RhdHVzPTEsYS5fcmVzdWx0PWIpfSxmdW5jdGlvbihiKXswPT09YS5fc3RhdHVzJiYoYS5fc3RhdHVzPTIsYS5fcmVzdWx0PWIpfSksYS5fcmVzdWx0PWIsYjt9fXZhciBPZj1YYi5SZWFjdEN1cnJlbnRPd25lcixQZj0obmV3IGFhLkNvbXBvbmVudCkucmVmcztcbmZ1bmN0aW9uIFFmKGEsYixjLGQpe2I9YS5tZW1vaXplZFN0YXRlO2M9YyhkLGIpO2M9bnVsbD09PWN8fHZvaWQgMD09PWM/YjpuKHt9LGIsYyk7YS5tZW1vaXplZFN0YXRlPWM7ZD1hLnVwZGF0ZVF1ZXVlO251bGwhPT1kJiYwPT09YS5leHBpcmF0aW9uVGltZSYmKGQuYmFzZVN0YXRlPWMpfVxudmFyIFZmPXtpc01vdW50ZWQ6ZnVuY3Rpb24oYSl7cmV0dXJuKGE9YS5fcmVhY3RJbnRlcm5hbEZpYmVyKT8yPT09a2QoYSk6ITF9LGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbihhLGIsYyl7YT1hLl9yZWFjdEludGVybmFsRmliZXI7dmFyIGQ9UmYoKTtkPVNmKGQsYSk7dmFyIGU9bmYoZCk7ZS5wYXlsb2FkPWI7dm9pZCAwIT09YyYmbnVsbCE9PWMmJihlLmNhbGxiYWNrPWMpO1RmKCk7cGYoYSxlKTtVZihhLGQpfSxlbnF1ZXVlUmVwbGFjZVN0YXRlOmZ1bmN0aW9uKGEsYixjKXthPWEuX3JlYWN0SW50ZXJuYWxGaWJlcjt2YXIgZD1SZigpO2Q9U2YoZCxhKTt2YXIgZT1uZihkKTtlLnRhZz0xO2UucGF5bG9hZD1iO3ZvaWQgMCE9PWMmJm51bGwhPT1jJiYoZS5jYWxsYmFjaz1jKTtUZigpO3BmKGEsZSk7VWYoYSxkKX0sZW5xdWV1ZUZvcmNlVXBkYXRlOmZ1bmN0aW9uKGEsYil7YT1hLl9yZWFjdEludGVybmFsRmliZXI7dmFyIGM9UmYoKTtjPVNmKGMsYSk7dmFyIGQ9bmYoYyk7ZC50YWc9XG4yO3ZvaWQgMCE9PWImJm51bGwhPT1iJiYoZC5jYWxsYmFjaz1iKTtUZigpO3BmKGEsZCk7VWYoYSxjKX19O2Z1bmN0aW9uIFdmKGEsYixjLGQsZSxmLGcpe2E9YS5zdGF0ZU5vZGU7cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGEuc2hvdWxkQ29tcG9uZW50VXBkYXRlP2Euc2hvdWxkQ29tcG9uZW50VXBkYXRlKGQsZixnKTpiLnByb3RvdHlwZSYmYi5wcm90b3R5cGUuaXNQdXJlUmVhY3RDb21wb25lbnQ/IWpkKGMsZCl8fCFqZChlLGYpOiEwfVxuZnVuY3Rpb24gWGYoYSxiLGMpe3ZhciBkPSExLGU9S2U7dmFyIGY9Yi5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mP2Y9T2YuY3VycmVudERpc3BhdGNoZXIucmVhZENvbnRleHQoZik6KGU9TShiKT9MZTpLLmN1cnJlbnQsZD1iLmNvbnRleHRUeXBlcyxmPShkPW51bGwhPT1kJiZ2b2lkIDAhPT1kKT9NZShhLGUpOktlKTtiPW5ldyBiKGMsZik7YS5tZW1vaXplZFN0YXRlPW51bGwhPT1iLnN0YXRlJiZ2b2lkIDAhPT1iLnN0YXRlP2Iuc3RhdGU6bnVsbDtiLnVwZGF0ZXI9VmY7YS5zdGF0ZU5vZGU9YjtiLl9yZWFjdEludGVybmFsRmliZXI9YTtkJiYoYT1hLnN0YXRlTm9kZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9ZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0PWYpO3JldHVybiBifVxuZnVuY3Rpb24gWmYoYSxiLGMsZCl7YT1iLnN0YXRlO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJmIuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhjLGQpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZiLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKGMsZCk7Yi5zdGF0ZSE9PWEmJlZmLmVucXVldWVSZXBsYWNlU3RhdGUoYixiLnN0YXRlLG51bGwpfVxuZnVuY3Rpb24gJGYoYSxiLGMsZCl7dmFyIGU9YS5zdGF0ZU5vZGU7ZS5wcm9wcz1jO2Uuc3RhdGU9YS5tZW1vaXplZFN0YXRlO2UucmVmcz1QZjt2YXIgZj1iLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY/ZS5jb250ZXh0PU9mLmN1cnJlbnREaXNwYXRjaGVyLnJlYWRDb250ZXh0KGYpOihmPU0oYik/TGU6Sy5jdXJyZW50LGUuY29udGV4dD1NZShhLGYpKTtmPWEudXBkYXRlUXVldWU7bnVsbCE9PWYmJih0ZihhLGYsYyxlLGQpLGUuc3RhdGU9YS5tZW1vaXplZFN0YXRlKTtmPWIuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBmJiYoUWYoYSxiLGYsYyksZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGUpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wc3x8XCJmdW5jdGlvblwiPT09dHlwZW9mIGUuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJlxuXCJmdW5jdGlvblwiIT09dHlwZW9mIGUuY29tcG9uZW50V2lsbE1vdW50fHwoYj1lLnN0YXRlLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmNvbXBvbmVudFdpbGxNb3VudCYmZS5jb21wb25lbnRXaWxsTW91bnQoKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQoKSxiIT09ZS5zdGF0ZSYmVmYuZW5xdWV1ZVJlcGxhY2VTdGF0ZShlLGUuc3RhdGUsbnVsbCksZj1hLnVwZGF0ZVF1ZXVlLG51bGwhPT1mJiYodGYoYSxmLGMsZSxkKSxlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSkpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmNvbXBvbmVudERpZE1vdW50JiYoYS5lZmZlY3RUYWd8PTQpfXZhciBhZz1BcnJheS5pc0FycmF5O1xuZnVuY3Rpb24gYmcoYSxiLGMpe2E9Yy5yZWY7aWYobnVsbCE9PWEmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBhJiZcIm9iamVjdFwiIT09dHlwZW9mIGEpe2lmKGMuX293bmVyKXtjPWMuX293bmVyO3ZhciBkPXZvaWQgMDtjJiYoMSE9PWMudGFnP3QoXCIyODlcIik6dm9pZCAwLGQ9Yy5zdGF0ZU5vZGUpO2Q/dm9pZCAwOnQoXCIxNDdcIixhKTt2YXIgZT1cIlwiK2E7aWYobnVsbCE9PWImJm51bGwhPT1iLnJlZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGIucmVmJiZiLnJlZi5fc3RyaW5nUmVmPT09ZSlyZXR1cm4gYi5yZWY7Yj1mdW5jdGlvbihhKXt2YXIgYj1kLnJlZnM7Yj09PVBmJiYoYj1kLnJlZnM9e30pO251bGw9PT1hP2RlbGV0ZSBiW2VdOmJbZV09YX07Yi5fc3RyaW5nUmVmPWU7cmV0dXJuIGJ9XCJzdHJpbmdcIiE9PXR5cGVvZiBhP3QoXCIyODRcIik6dm9pZCAwO2MuX293bmVyP3ZvaWQgMDp0KFwiMjkwXCIsYSl9cmV0dXJuIGF9XG5mdW5jdGlvbiBjZyhhLGIpe1widGV4dGFyZWFcIiE9PWEudHlwZSYmdChcIjMxXCIsXCJbb2JqZWN0IE9iamVjdF1cIj09PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChiKT9cIm9iamVjdCB3aXRoIGtleXMge1wiK09iamVjdC5rZXlzKGIpLmpvaW4oXCIsIFwiKStcIn1cIjpiLFwiXCIpfVxuZnVuY3Rpb24gZGcoYSl7ZnVuY3Rpb24gYihiLGMpe2lmKGEpe3ZhciBkPWIubGFzdEVmZmVjdDtudWxsIT09ZD8oZC5uZXh0RWZmZWN0PWMsYi5sYXN0RWZmZWN0PWMpOmIuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PWM7Yy5uZXh0RWZmZWN0PW51bGw7Yy5lZmZlY3RUYWc9OH19ZnVuY3Rpb24gYyhjLGQpe2lmKCFhKXJldHVybiBudWxsO2Zvcig7bnVsbCE9PWQ7KWIoYyxkKSxkPWQuc2libGluZztyZXR1cm4gbnVsbH1mdW5jdGlvbiBkKGEsYil7Zm9yKGE9bmV3IE1hcDtudWxsIT09YjspbnVsbCE9PWIua2V5P2Euc2V0KGIua2V5LGIpOmEuc2V0KGIuaW5kZXgsYiksYj1iLnNpYmxpbmc7cmV0dXJuIGF9ZnVuY3Rpb24gZShhLGIsYyl7YT0kZShhLGIsYyk7YS5pbmRleD0wO2Euc2libGluZz1udWxsO3JldHVybiBhfWZ1bmN0aW9uIGYoYixjLGQpe2IuaW5kZXg9ZDtpZighYSlyZXR1cm4gYztkPWIuYWx0ZXJuYXRlO2lmKG51bGwhPT1kKXJldHVybiBkPWQuaW5kZXgsZDxjPyhiLmVmZmVjdFRhZz1cbjIsYyk6ZDtiLmVmZmVjdFRhZz0yO3JldHVybiBjfWZ1bmN0aW9uIGcoYil7YSYmbnVsbD09PWIuYWx0ZXJuYXRlJiYoYi5lZmZlY3RUYWc9Mik7cmV0dXJuIGJ9ZnVuY3Rpb24gaChhLGIsYyxkKXtpZihudWxsPT09Ynx8NiE9PWIudGFnKXJldHVybiBiPWRmKGMsYS5tb2RlLGQpLGIucmV0dXJuPWEsYjtiPWUoYixjLGQpO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gayhhLGIsYyxkKXtpZihudWxsIT09YiYmYi5lbGVtZW50VHlwZT09PWMudHlwZSlyZXR1cm4gZD1lKGIsYy5wcm9wcyxkKSxkLnJlZj1iZyhhLGIsYyksZC5yZXR1cm49YSxkO2Q9YWYoYy50eXBlLGMua2V5LGMucHJvcHMsbnVsbCxhLm1vZGUsZCk7ZC5yZWY9YmcoYSxiLGMpO2QucmV0dXJuPWE7cmV0dXJuIGR9ZnVuY3Rpb24gbChhLGIsYyxkKXtpZihudWxsPT09Ynx8NCE9PWIudGFnfHxiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvIT09Yy5jb250YWluZXJJbmZvfHxiLnN0YXRlTm9kZS5pbXBsZW1lbnRhdGlvbiE9PVxuYy5pbXBsZW1lbnRhdGlvbilyZXR1cm4gYj1lZihjLGEubW9kZSxkKSxiLnJldHVybj1hLGI7Yj1lKGIsYy5jaGlsZHJlbnx8W10sZCk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBtKGEsYixjLGQsZyl7aWYobnVsbD09PWJ8fDchPT1iLnRhZylyZXR1cm4gYj1iZihjLGEubW9kZSxkLGcpLGIucmV0dXJuPWEsYjtiPWUoYixjLGQpO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gcihhLGIsYyl7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBifHxcIm51bWJlclwiPT09dHlwZW9mIGIpcmV0dXJuIGI9ZGYoXCJcIitiLGEubW9kZSxjKSxiLnJldHVybj1hLGI7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBiJiZudWxsIT09Yil7c3dpdGNoKGIuJCR0eXBlb2Ype2Nhc2UgWmI6cmV0dXJuIGM9YWYoYi50eXBlLGIua2V5LGIucHJvcHMsbnVsbCxhLm1vZGUsYyksYy5yZWY9YmcoYSxudWxsLGIpLGMucmV0dXJuPWEsYztjYXNlICRiOnJldHVybiBiPWVmKGIsYS5tb2RlLGMpLGIucmV0dXJuPWEsYn1pZihhZyhiKXx8XG5sYyhiKSlyZXR1cm4gYj1iZihiLGEubW9kZSxjLG51bGwpLGIucmV0dXJuPWEsYjtjZyhhLGIpfXJldHVybiBudWxsfWZ1bmN0aW9uIHcoYSxiLGMsZCl7dmFyIGU9bnVsbCE9PWI/Yi5rZXk6bnVsbDtpZihcInN0cmluZ1wiPT09dHlwZW9mIGN8fFwibnVtYmVyXCI9PT10eXBlb2YgYylyZXR1cm4gbnVsbCE9PWU/bnVsbDpoKGEsYixcIlwiK2MsZCk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBjJiZudWxsIT09Yyl7c3dpdGNoKGMuJCR0eXBlb2Ype2Nhc2UgWmI6cmV0dXJuIGMua2V5PT09ZT9jLnR5cGU9PT1hYz9tKGEsYixjLnByb3BzLmNoaWxkcmVuLGQsZSk6ayhhLGIsYyxkKTpudWxsO2Nhc2UgJGI6cmV0dXJuIGMua2V5PT09ZT9sKGEsYixjLGQpOm51bGx9aWYoYWcoYyl8fGxjKGMpKXJldHVybiBudWxsIT09ZT9udWxsOm0oYSxiLGMsZCxudWxsKTtjZyhhLGMpfXJldHVybiBudWxsfWZ1bmN0aW9uIHkoYSxiLGMsZCxlKXtpZihcInN0cmluZ1wiPT09dHlwZW9mIGR8fFwibnVtYmVyXCI9PT10eXBlb2YgZClyZXR1cm4gYT1cbmEuZ2V0KGMpfHxudWxsLGgoYixhLFwiXCIrZCxlKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGQmJm51bGwhPT1kKXtzd2l0Y2goZC4kJHR5cGVvZil7Y2FzZSBaYjpyZXR1cm4gYT1hLmdldChudWxsPT09ZC5rZXk/YzpkLmtleSl8fG51bGwsZC50eXBlPT09YWM/bShiLGEsZC5wcm9wcy5jaGlsZHJlbixlLGQua2V5KTprKGIsYSxkLGUpO2Nhc2UgJGI6cmV0dXJuIGE9YS5nZXQobnVsbD09PWQua2V5P2M6ZC5rZXkpfHxudWxsLGwoYixhLGQsZSl9aWYoYWcoZCl8fGxjKGQpKXJldHVybiBhPWEuZ2V0KGMpfHxudWxsLG0oYixhLGQsZSxudWxsKTtjZyhiLGQpfXJldHVybiBudWxsfWZ1bmN0aW9uIEIoZSxnLGgsayl7Zm9yKHZhciBsPW51bGwscT1udWxsLG09Zyx1PWc9MCxwPW51bGw7bnVsbCE9PW0mJnU8aC5sZW5ndGg7dSsrKXttLmluZGV4PnU/KHA9bSxtPW51bGwpOnA9bS5zaWJsaW5nO3ZhciB2PXcoZSxtLGhbdV0sayk7aWYobnVsbD09PXYpe251bGw9PT1tJiYobT1wKTticmVha31hJiZcbm0mJm51bGw9PT12LmFsdGVybmF0ZSYmYihlLG0pO2c9Zih2LGcsdSk7bnVsbD09PXE/bD12OnEuc2libGluZz12O3E9djttPXB9aWYodT09PWgubGVuZ3RoKXJldHVybiBjKGUsbSksbDtpZihudWxsPT09bSl7Zm9yKDt1PGgubGVuZ3RoO3UrKylpZihtPXIoZSxoW3VdLGspKWc9ZihtLGcsdSksbnVsbD09PXE/bD1tOnEuc2libGluZz1tLHE9bTtyZXR1cm4gbH1mb3IobT1kKGUsbSk7dTxoLmxlbmd0aDt1KyspaWYocD15KG0sZSx1LGhbdV0saykpYSYmbnVsbCE9PXAuYWx0ZXJuYXRlJiZtLmRlbGV0ZShudWxsPT09cC5rZXk/dTpwLmtleSksZz1mKHAsZyx1KSxudWxsPT09cT9sPXA6cS5zaWJsaW5nPXAscT1wO2EmJm0uZm9yRWFjaChmdW5jdGlvbihhKXtyZXR1cm4gYihlLGEpfSk7cmV0dXJuIGx9ZnVuY3Rpb24gUihlLGcsaCxrKXt2YXIgbD1sYyhoKTtcImZ1bmN0aW9uXCIhPT10eXBlb2YgbD90KFwiMTUwXCIpOnZvaWQgMDtoPWwuY2FsbChoKTtudWxsPT1oP3QoXCIxNTFcIik6dm9pZCAwO1xuZm9yKHZhciBtPWw9bnVsbCxxPWcsdT1nPTAscD1udWxsLHY9aC5uZXh0KCk7bnVsbCE9PXEmJiF2LmRvbmU7dSsrLHY9aC5uZXh0KCkpe3EuaW5kZXg+dT8ocD1xLHE9bnVsbCk6cD1xLnNpYmxpbmc7dmFyIEE9dyhlLHEsdi52YWx1ZSxrKTtpZihudWxsPT09QSl7cXx8KHE9cCk7YnJlYWt9YSYmcSYmbnVsbD09PUEuYWx0ZXJuYXRlJiZiKGUscSk7Zz1mKEEsZyx1KTtudWxsPT09bT9sPUE6bS5zaWJsaW5nPUE7bT1BO3E9cH1pZih2LmRvbmUpcmV0dXJuIGMoZSxxKSxsO2lmKG51bGw9PT1xKXtmb3IoOyF2LmRvbmU7dSsrLHY9aC5uZXh0KCkpdj1yKGUsdi52YWx1ZSxrKSxudWxsIT09diYmKGc9Zih2LGcsdSksbnVsbD09PW0/bD12Om0uc2libGluZz12LG09dik7cmV0dXJuIGx9Zm9yKHE9ZChlLHEpOyF2LmRvbmU7dSsrLHY9aC5uZXh0KCkpdj15KHEsZSx1LHYudmFsdWUsayksbnVsbCE9PXYmJihhJiZudWxsIT09di5hbHRlcm5hdGUmJnEuZGVsZXRlKG51bGw9PT12LmtleT91Olxudi5rZXkpLGc9Zih2LGcsdSksbnVsbD09PW0/bD12Om0uc2libGluZz12LG09dik7YSYmcS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JldHVybiBiKGUsYSl9KTtyZXR1cm4gbH1yZXR1cm4gZnVuY3Rpb24oYSxkLGYsaCl7dmFyIGs9XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09ZiYmZi50eXBlPT09YWMmJm51bGw9PT1mLmtleTtrJiYoZj1mLnByb3BzLmNoaWxkcmVuKTt2YXIgbD1cIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mO2lmKGwpc3dpdGNoKGYuJCR0eXBlb2Ype2Nhc2UgWmI6YTp7bD1mLmtleTtmb3Ioaz1kO251bGwhPT1rOyl7aWYoay5rZXk9PT1sKWlmKDc9PT1rLnRhZz9mLnR5cGU9PT1hYzprLmVsZW1lbnRUeXBlPT09Zi50eXBlKXtjKGEsay5zaWJsaW5nKTtkPWUoayxmLnR5cGU9PT1hYz9mLnByb3BzLmNoaWxkcmVuOmYucHJvcHMsaCk7ZC5yZWY9YmcoYSxrLGYpO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9ZWxzZXtjKGEsayk7YnJlYWt9ZWxzZSBiKGEsayk7az1cbmsuc2libGluZ31mLnR5cGU9PT1hYz8oZD1iZihmLnByb3BzLmNoaWxkcmVuLGEubW9kZSxoLGYua2V5KSxkLnJldHVybj1hLGE9ZCk6KGg9YWYoZi50eXBlLGYua2V5LGYucHJvcHMsbnVsbCxhLm1vZGUsaCksaC5yZWY9YmcoYSxkLGYpLGgucmV0dXJuPWEsYT1oKX1yZXR1cm4gZyhhKTtjYXNlICRiOmE6e2ZvcihrPWYua2V5O251bGwhPT1kOyl7aWYoZC5rZXk9PT1rKWlmKDQ9PT1kLnRhZyYmZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbz09PWYuY29udGFpbmVySW5mbyYmZC5zdGF0ZU5vZGUuaW1wbGVtZW50YXRpb249PT1mLmltcGxlbWVudGF0aW9uKXtjKGEsZC5zaWJsaW5nKTtkPWUoZCxmLmNoaWxkcmVufHxbXSxoKTtkLnJldHVybj1hO2E9ZDticmVhayBhfWVsc2V7YyhhLGQpO2JyZWFrfWVsc2UgYihhLGQpO2Q9ZC5zaWJsaW5nfWQ9ZWYoZixhLm1vZGUsaCk7ZC5yZXR1cm49YTthPWR9cmV0dXJuIGcoYSl9aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBmfHxcIm51bWJlclwiPT09dHlwZW9mIGYpcmV0dXJuIGY9XG5cIlwiK2YsbnVsbCE9PWQmJjY9PT1kLnRhZz8oYyhhLGQuc2libGluZyksZD1lKGQsZixoKSxkLnJldHVybj1hLGE9ZCk6KGMoYSxkKSxkPWRmKGYsYS5tb2RlLGgpLGQucmV0dXJuPWEsYT1kKSxnKGEpO2lmKGFnKGYpKXJldHVybiBCKGEsZCxmLGgpO2lmKGxjKGYpKXJldHVybiBSKGEsZCxmLGgpO2wmJmNnKGEsZik7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBmJiYhaylzd2l0Y2goYS50YWcpe2Nhc2UgMTpjYXNlIDA6aD1hLnR5cGUsdChcIjE1MlwiLGguZGlzcGxheU5hbWV8fGgubmFtZXx8XCJDb21wb25lbnRcIil9cmV0dXJuIGMoYSxkKX19dmFyIGVnPWRnKCEwKSxmZz1kZyghMSksZ2c9bnVsbCxoZz1udWxsLGlnPSExO1xuZnVuY3Rpb24gamcoYSxiKXt2YXIgYz1OKDUsbnVsbCxudWxsLDApO2MuZWxlbWVudFR5cGU9XCJERUxFVEVEXCI7Yy50eXBlPVwiREVMRVRFRFwiO2Muc3RhdGVOb2RlPWI7Yy5yZXR1cm49YTtjLmVmZmVjdFRhZz04O251bGwhPT1hLmxhc3RFZmZlY3Q/KGEubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWMsYS5sYXN0RWZmZWN0PWMpOmEuZmlyc3RFZmZlY3Q9YS5sYXN0RWZmZWN0PWN9ZnVuY3Rpb24ga2coYSxiKXtzd2l0Y2goYS50YWcpe2Nhc2UgNTp2YXIgYz1hLnR5cGU7Yj0xIT09Yi5ub2RlVHlwZXx8Yy50b0xvd2VyQ2FzZSgpIT09Yi5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpP251bGw6YjtyZXR1cm4gbnVsbCE9PWI/KGEuc3RhdGVOb2RlPWIsITApOiExO2Nhc2UgNjpyZXR1cm4gYj1cIlwiPT09YS5wZW5kaW5nUHJvcHN8fDMhPT1iLm5vZGVUeXBlP251bGw6YixudWxsIT09Yj8oYS5zdGF0ZU5vZGU9YiwhMCk6ITE7ZGVmYXVsdDpyZXR1cm4hMX19XG5mdW5jdGlvbiBsZyhhKXtpZihpZyl7dmFyIGI9aGc7aWYoYil7dmFyIGM9YjtpZigha2coYSxiKSl7Yj1HZShjKTtpZighYnx8IWtnKGEsYikpe2EuZWZmZWN0VGFnfD0yO2lnPSExO2dnPWE7cmV0dXJufWpnKGdnLGMpfWdnPWE7aGc9SGUoYil9ZWxzZSBhLmVmZmVjdFRhZ3w9MixpZz0hMSxnZz1hfX1mdW5jdGlvbiBtZyhhKXtmb3IoYT1hLnJldHVybjtudWxsIT09YSYmNSE9PWEudGFnJiYzIT09YS50YWc7KWE9YS5yZXR1cm47Z2c9YX1mdW5jdGlvbiBuZyhhKXtpZihhIT09Z2cpcmV0dXJuITE7aWYoIWlnKXJldHVybiBtZyhhKSxpZz0hMCwhMTt2YXIgYj1hLnR5cGU7aWYoNSE9PWEudGFnfHxcImhlYWRcIiE9PWImJlwiYm9keVwiIT09YiYmIUNlKGIsYS5tZW1vaXplZFByb3BzKSlmb3IoYj1oZztiOylqZyhhLGIpLGI9R2UoYik7bWcoYSk7aGc9Z2c/R2UoYS5zdGF0ZU5vZGUpOm51bGw7cmV0dXJuITB9ZnVuY3Rpb24gb2coKXtoZz1nZz1udWxsO2lnPSExfXZhciBwZz1YYi5SZWFjdEN1cnJlbnRPd25lcjtcbmZ1bmN0aW9uIFEoYSxiLGMsZCl7Yi5jaGlsZD1udWxsPT09YT9mZyhiLG51bGwsYyxkKTplZyhiLGEuY2hpbGQsYyxkKX1mdW5jdGlvbiBxZyhhLGIsYyxkLGUpe2M9Yy5yZW5kZXI7dmFyIGY9Yi5yZWY7RGYoYixlKTtkPWMoZCxmKTtiLmVmZmVjdFRhZ3w9MTtRKGEsYixkLGUpO3JldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gcmcoYSxiLGMsZCxlLGYpe2lmKG51bGw9PT1hKXt2YXIgZz1jLnR5cGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcmJiFZZShnKSYmdm9pZCAwPT09Zy5kZWZhdWx0UHJvcHMmJm51bGw9PT1jLmNvbXBhcmUmJnZvaWQgMD09PWMuZGVmYXVsdFByb3BzKXJldHVybiBiLnRhZz0xNSxiLnR5cGU9ZyxzZyhhLGIsZyxkLGUsZik7YT1hZihjLnR5cGUsbnVsbCxkLG51bGwsYi5tb2RlLGYpO2EucmVmPWIucmVmO2EucmV0dXJuPWI7cmV0dXJuIGIuY2hpbGQ9YX1nPWEuY2hpbGQ7aWYoZTxmJiYoZT1nLm1lbW9pemVkUHJvcHMsYz1jLmNvbXBhcmUsYz1udWxsIT09Yz9jOmpkLGMoZSxkKSYmYS5yZWY9PT1iLnJlZikpcmV0dXJuIHRnKGEsYixmKTtiLmVmZmVjdFRhZ3w9MTthPSRlKGcsZCxmKTthLnJlZj1iLnJlZjthLnJldHVybj1iO3JldHVybiBiLmNoaWxkPWF9XG5mdW5jdGlvbiBzZyhhLGIsYyxkLGUsZil7cmV0dXJuIG51bGwhPT1hJiZlPGYmJmpkKGEubWVtb2l6ZWRQcm9wcyxkKSYmYS5yZWY9PT1iLnJlZj90ZyhhLGIsZik6dWcoYSxiLGMsZCxmKX1mdW5jdGlvbiB2ZyhhLGIpe3ZhciBjPWIucmVmO2lmKG51bGw9PT1hJiZudWxsIT09Y3x8bnVsbCE9PWEmJmEucmVmIT09YyliLmVmZmVjdFRhZ3w9MTI4fWZ1bmN0aW9uIHVnKGEsYixjLGQsZSl7dmFyIGY9TShjKT9MZTpLLmN1cnJlbnQ7Zj1NZShiLGYpO0RmKGIsZSk7Yz1jKGQsZik7Yi5lZmZlY3RUYWd8PTE7UShhLGIsYyxlKTtyZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIHdnKGEsYixjLGQsZSl7aWYoTShjKSl7dmFyIGY9ITA7UmUoYil9ZWxzZSBmPSExO0RmKGIsZSk7aWYobnVsbD09PWIuc3RhdGVOb2RlKW51bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKSxYZihiLGMsZCxlKSwkZihiLGMsZCxlKSxkPSEwO2Vsc2UgaWYobnVsbD09PWEpe3ZhciBnPWIuc3RhdGVOb2RlLGg9Yi5tZW1vaXplZFByb3BzO2cucHJvcHM9aDt2YXIgaz1nLmNvbnRleHQsbD1jLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgbCYmbnVsbCE9PWw/bD1PZi5jdXJyZW50RGlzcGF0Y2hlci5yZWFkQ29udGV4dChsKToobD1NKGMpP0xlOksuY3VycmVudCxsPU1lKGIsbCkpO3ZhciBtPWMuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzLHI9XCJmdW5jdGlvblwiPT09dHlwZW9mIG18fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlO3J8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcblwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHN8fChoIT09ZHx8ayE9PWwpJiZaZihiLGcsZCxsKTtrZj0hMTt2YXIgdz1iLm1lbW9pemVkU3RhdGU7az1nLnN0YXRlPXc7dmFyIHk9Yi51cGRhdGVRdWV1ZTtudWxsIT09eSYmKHRmKGIseSxkLGcsZSksaz1iLm1lbW9pemVkU3RhdGUpO2ghPT1kfHx3IT09a3x8TC5jdXJyZW50fHxrZj8oXCJmdW5jdGlvblwiPT09dHlwZW9mIG0mJihRZihiLGMsbSxkKSxrPWIubWVtb2l6ZWRTdGF0ZSksKGg9a2Z8fFdmKGIsYyxoLGQsdyxrLGwpKT8ocnx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbE1vdW50fHwoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50V2lsbE1vdW50JiZnLmNvbXBvbmVudFdpbGxNb3VudCgpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJlxuZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCkpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5lZmZlY3RUYWd8PTQpKTooXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmVmZmVjdFRhZ3w9NCksYi5tZW1vaXplZFByb3BzPWQsYi5tZW1vaXplZFN0YXRlPWspLGcucHJvcHM9ZCxnLnN0YXRlPWssZy5jb250ZXh0PWwsZD1oKTooXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmVmZmVjdFRhZ3w9NCksZD0hMSl9ZWxzZSBnPWIuc3RhdGVOb2RlLGg9Yi5tZW1vaXplZFByb3BzLGcucHJvcHM9Yi50eXBlPT09Yi5lbGVtZW50VHlwZT9oOlAoYi50eXBlLGgpLGs9Zy5jb250ZXh0LGw9Yy5jb250ZXh0VHlwZSxcIm9iamVjdFwiPT09dHlwZW9mIGwmJm51bGwhPT1sP2w9T2YuY3VycmVudERpc3BhdGNoZXIucmVhZENvbnRleHQobCk6KGw9TShjKT9MZTpLLmN1cnJlbnQsbD1NZShiLGwpKSxtPWMuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzLFxuKHI9XCJmdW5jdGlvblwiPT09dHlwZW9mIG18fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlKXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHN8fChoIT09ZHx8ayE9PWwpJiZaZihiLGcsZCxsKSxrZj0hMSxrPWIubWVtb2l6ZWRTdGF0ZSx3PWcuc3RhdGU9ayx5PWIudXBkYXRlUXVldWUsbnVsbCE9PXkmJih0ZihiLHksZCxnLGUpLHc9Yi5tZW1vaXplZFN0YXRlKSxoIT09ZHx8ayE9PXd8fEwuY3VycmVudHx8a2Y/KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBtJiYoUWYoYixjLG0sZCksdz1iLm1lbW9pemVkU3RhdGUpLChtPWtmfHxXZihiLGMsaCxkLGssdyxsKSk/KHJ8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsVXBkYXRlfHxcbihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnRXaWxsVXBkYXRlJiZnLmNvbXBvbmVudFdpbGxVcGRhdGUoZCx3LGwpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlJiZnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlKGQsdyxsKSksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlJiYoYi5lZmZlY3RUYWd8PTQpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlJiYoYi5lZmZlY3RUYWd8PTI1NikpOihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJms9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9NCksXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJms9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9MjU2KSxiLm1lbW9pemVkUHJvcHM9XG5kLGIubWVtb2l6ZWRTdGF0ZT13KSxnLnByb3BzPWQsZy5zdGF0ZT13LGcuY29udGV4dD1sLGQ9bSk6KFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmaz09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD00KSxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmaz09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD0yNTYpLGQ9ITEpO3JldHVybiB4ZyhhLGIsYyxkLGYsZSl9XG5mdW5jdGlvbiB4ZyhhLGIsYyxkLGUsZil7dmcoYSxiKTt2YXIgZz0wIT09KGIuZWZmZWN0VGFnJjY0KTtpZighZCYmIWcpcmV0dXJuIGUmJlNlKGIsYywhMSksdGcoYSxiLGYpO2Q9Yi5zdGF0ZU5vZGU7cGcuY3VycmVudD1iO3ZhciBoPWcmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBjLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcj9udWxsOmQucmVuZGVyKCk7Yi5lZmZlY3RUYWd8PTE7bnVsbCE9PWEmJmc/KGIuY2hpbGQ9ZWcoYixhLmNoaWxkLG51bGwsZiksYi5jaGlsZD1lZyhiLG51bGwsaCxmKSk6UShhLGIsaCxmKTtiLm1lbW9pemVkU3RhdGU9ZC5zdGF0ZTtlJiZTZShiLGMsITApO3JldHVybiBiLmNoaWxkfWZ1bmN0aW9uIHlnKGEpe3ZhciBiPWEuc3RhdGVOb2RlO2IucGVuZGluZ0NvbnRleHQ/UGUoYSxiLnBlbmRpbmdDb250ZXh0LGIucGVuZGluZ0NvbnRleHQhPT1iLmNvbnRleHQpOmIuY29udGV4dCYmUGUoYSxiLmNvbnRleHQsITEpO0pmKGEsYi5jb250YWluZXJJbmZvKX1cbmZ1bmN0aW9uIHpnKGEsYixjKXt2YXIgZD1iLm1vZGUsZT1iLnBlbmRpbmdQcm9wcyxmPWIubWVtb2l6ZWRTdGF0ZTtpZigwPT09KGIuZWZmZWN0VGFnJjY0KSl7Zj1udWxsO3ZhciBnPSExfWVsc2UgZj17dGltZWRPdXRBdDpudWxsIT09Zj9mLnRpbWVkT3V0QXQ6MH0sZz0hMCxiLmVmZmVjdFRhZyY9LTY1O2lmKG51bGw9PT1hKWlmKGcpe3ZhciBoPWUuZmFsbGJhY2s7YT1iZihudWxsLGQsMCxudWxsKTswPT09KGIubW9kZSYxKSYmKGEuY2hpbGQ9bnVsbCE9PWIubWVtb2l6ZWRTdGF0ZT9iLmNoaWxkLmNoaWxkOmIuY2hpbGQpO2Q9YmYoaCxkLGMsbnVsbCk7YS5zaWJsaW5nPWQ7Yz1hO2MucmV0dXJuPWQucmV0dXJuPWJ9ZWxzZSBjPWQ9ZmcoYixudWxsLGUuY2hpbGRyZW4sYyk7ZWxzZSBudWxsIT09YS5tZW1vaXplZFN0YXRlPyhkPWEuY2hpbGQsaD1kLnNpYmxpbmcsZz8oYz1lLmZhbGxiYWNrLGU9JGUoZCxkLnBlbmRpbmdQcm9wcywwKSwwPT09KGIubW9kZSYxKSYmKGc9bnVsbCE9PVxuYi5tZW1vaXplZFN0YXRlP2IuY2hpbGQuY2hpbGQ6Yi5jaGlsZCxnIT09ZC5jaGlsZCYmKGUuY2hpbGQ9ZykpLGQ9ZS5zaWJsaW5nPSRlKGgsYyxoLmV4cGlyYXRpb25UaW1lKSxjPWUsZS5jaGlsZEV4cGlyYXRpb25UaW1lPTAsYy5yZXR1cm49ZC5yZXR1cm49Yik6Yz1kPWVnKGIsZC5jaGlsZCxlLmNoaWxkcmVuLGMpKTooaD1hLmNoaWxkLGc/KGc9ZS5mYWxsYmFjayxlPWJmKG51bGwsZCwwLG51bGwpLGUuY2hpbGQ9aCwwPT09KGIubW9kZSYxKSYmKGUuY2hpbGQ9bnVsbCE9PWIubWVtb2l6ZWRTdGF0ZT9iLmNoaWxkLmNoaWxkOmIuY2hpbGQpLGQ9ZS5zaWJsaW5nPWJmKGcsZCxjLG51bGwpLGQuZWZmZWN0VGFnfD0yLGM9ZSxlLmNoaWxkRXhwaXJhdGlvblRpbWU9MCxjLnJldHVybj1kLnJldHVybj1iKTpkPWM9ZWcoYixoLGUuY2hpbGRyZW4sYykpLGIuc3RhdGVOb2RlPWEuc3RhdGVOb2RlO2IubWVtb2l6ZWRTdGF0ZT1mO2IuY2hpbGQ9YztyZXR1cm4gZH1cbmZ1bmN0aW9uIHRnKGEsYixjKXtudWxsIT09YSYmKGIuZmlyc3RDb250ZXh0RGVwZW5kZW5jeT1hLmZpcnN0Q29udGV4dERlcGVuZGVuY3kpO2lmKGIuY2hpbGRFeHBpcmF0aW9uVGltZTxjKXJldHVybiBudWxsO251bGwhPT1hJiZiLmNoaWxkIT09YS5jaGlsZD90KFwiMTUzXCIpOnZvaWQgMDtpZihudWxsIT09Yi5jaGlsZCl7YT1iLmNoaWxkO2M9JGUoYSxhLnBlbmRpbmdQcm9wcyxhLmV4cGlyYXRpb25UaW1lKTtiLmNoaWxkPWM7Zm9yKGMucmV0dXJuPWI7bnVsbCE9PWEuc2libGluZzspYT1hLnNpYmxpbmcsYz1jLnNpYmxpbmc9JGUoYSxhLnBlbmRpbmdQcm9wcyxhLmV4cGlyYXRpb25UaW1lKSxjLnJldHVybj1iO2Muc2libGluZz1udWxsfXJldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gQWcoYSxiLGMpe3ZhciBkPWIuZXhwaXJhdGlvblRpbWU7aWYobnVsbCE9PWEmJmEubWVtb2l6ZWRQcm9wcz09PWIucGVuZGluZ1Byb3BzJiYhTC5jdXJyZW50JiZkPGMpe3N3aXRjaChiLnRhZyl7Y2FzZSAzOnlnKGIpO29nKCk7YnJlYWs7Y2FzZSA1OkxmKGIpO2JyZWFrO2Nhc2UgMTpNKGIudHlwZSkmJlJlKGIpO2JyZWFrO2Nhc2UgNDpKZihiLGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pO2JyZWFrO2Nhc2UgMTA6QmYoYixiLm1lbW9pemVkUHJvcHMudmFsdWUpO2JyZWFrO2Nhc2UgMTM6aWYobnVsbCE9PWIubWVtb2l6ZWRTdGF0ZSl7ZD1iLmNoaWxkLmNoaWxkRXhwaXJhdGlvblRpbWU7aWYoMCE9PWQmJmQ+PWMpcmV0dXJuIHpnKGEsYixjKTtiPXRnKGEsYixjKTtyZXR1cm4gbnVsbCE9PWI/Yi5zaWJsaW5nOm51bGx9fXJldHVybiB0ZyhhLGIsYyl9Yi5leHBpcmF0aW9uVGltZT0wO3N3aXRjaChiLnRhZyl7Y2FzZSAyOmQ9Yi5lbGVtZW50VHlwZTtudWxsIT09XG5hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKTthPWIucGVuZGluZ1Byb3BzO3ZhciBlPU1lKGIsSy5jdXJyZW50KTtEZihiLGMpO2U9ZChhLGUpO2IuZWZmZWN0VGFnfD0xO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgZSYmbnVsbCE9PWUmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLnJlbmRlciYmdm9pZCAwPT09ZS4kJHR5cGVvZil7Yi50YWc9MTtpZihNKGQpKXt2YXIgZj0hMDtSZShiKX1lbHNlIGY9ITE7Yi5tZW1vaXplZFN0YXRlPW51bGwhPT1lLnN0YXRlJiZ2b2lkIDAhPT1lLnN0YXRlP2Uuc3RhdGU6bnVsbDt2YXIgZz1kLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcztcImZ1bmN0aW9uXCI9PT10eXBlb2YgZyYmUWYoYixkLGcsYSk7ZS51cGRhdGVyPVZmO2Iuc3RhdGVOb2RlPWU7ZS5fcmVhY3RJbnRlcm5hbEZpYmVyPWI7JGYoYixkLGEsYyk7Yj14ZyhudWxsLGIsZCwhMCxmLGMpfWVsc2UgYi50YWc9MCxRKG51bGwsYixlLGMpLGI9Yi5jaGlsZDtcbnJldHVybiBiO2Nhc2UgMTY6ZT1iLmVsZW1lbnRUeXBlO251bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKTtmPWIucGVuZGluZ1Byb3BzO2E9TmYoZSk7Yi50eXBlPWE7ZT1iLnRhZz1aZShhKTtmPVAoYSxmKTtnPXZvaWQgMDtzd2l0Y2goZSl7Y2FzZSAwOmc9dWcobnVsbCxiLGEsZixjKTticmVhaztjYXNlIDE6Zz13ZyhudWxsLGIsYSxmLGMpO2JyZWFrO2Nhc2UgMTE6Zz1xZyhudWxsLGIsYSxmLGMpO2JyZWFrO2Nhc2UgMTQ6Zz1yZyhudWxsLGIsYSxQKGEudHlwZSxmKSxkLGMpO2JyZWFrO2RlZmF1bHQ6dChcIjMwNlwiLGEsXCJcIil9cmV0dXJuIGc7Y2FzZSAwOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTpQKGQsZSksdWcoYSxiLGQsZSxjKTtjYXNlIDE6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOlAoZCxlKSx3ZyhhLGIsXG5kLGUsYyk7Y2FzZSAzOnlnKGIpO2Q9Yi51cGRhdGVRdWV1ZTtudWxsPT09ZD90KFwiMjgyXCIpOnZvaWQgMDtlPWIubWVtb2l6ZWRTdGF0ZTtlPW51bGwhPT1lP2UuZWxlbWVudDpudWxsO3RmKGIsZCxiLnBlbmRpbmdQcm9wcyxudWxsLGMpO2Q9Yi5tZW1vaXplZFN0YXRlLmVsZW1lbnQ7aWYoZD09PWUpb2coKSxiPXRnKGEsYixjKTtlbHNle2U9Yi5zdGF0ZU5vZGU7aWYoZT0obnVsbD09PWF8fG51bGw9PT1hLmNoaWxkKSYmZS5oeWRyYXRlKWhnPUhlKGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pLGdnPWIsZT1pZz0hMDtlPyhiLmVmZmVjdFRhZ3w9MixiLmNoaWxkPWZnKGIsbnVsbCxkLGMpKTooUShhLGIsZCxjKSxvZygpKTtiPWIuY2hpbGR9cmV0dXJuIGI7Y2FzZSA1OnJldHVybiBMZihiKSxudWxsPT09YSYmbGcoYiksZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxmPW51bGwhPT1hP2EubWVtb2l6ZWRQcm9wczpudWxsLGc9ZS5jaGlsZHJlbixDZShkLGUpP2c9bnVsbDpudWxsIT09XG5mJiZDZShkLGYpJiYoYi5lZmZlY3RUYWd8PTE2KSx2ZyhhLGIpLDEhPT1jJiZiLm1vZGUmMSYmZS5oaWRkZW4/KGIuZXhwaXJhdGlvblRpbWU9MSxiPW51bGwpOihRKGEsYixnLGMpLGI9Yi5jaGlsZCksYjtjYXNlIDY6cmV0dXJuIG51bGw9PT1hJiZsZyhiKSxudWxsO2Nhc2UgMTM6cmV0dXJuIHpnKGEsYixjKTtjYXNlIDQ6cmV0dXJuIEpmKGIsYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyksZD1iLnBlbmRpbmdQcm9wcyxudWxsPT09YT9iLmNoaWxkPWVnKGIsbnVsbCxkLGMpOlEoYSxiLGQsYyksYi5jaGlsZDtjYXNlIDExOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTpQKGQsZSkscWcoYSxiLGQsZSxjKTtjYXNlIDc6cmV0dXJuIFEoYSxiLGIucGVuZGluZ1Byb3BzLGMpLGIuY2hpbGQ7Y2FzZSA4OnJldHVybiBRKGEsYixiLnBlbmRpbmdQcm9wcy5jaGlsZHJlbixjKSxiLmNoaWxkO2Nhc2UgMTI6cmV0dXJuIFEoYSxiLGIucGVuZGluZ1Byb3BzLmNoaWxkcmVuLFxuYyksYi5jaGlsZDtjYXNlIDEwOmE6e2Q9Yi50eXBlLl9jb250ZXh0O2U9Yi5wZW5kaW5nUHJvcHM7Zz1iLm1lbW9pemVkUHJvcHM7Zj1lLnZhbHVlO0JmKGIsZik7aWYobnVsbCE9PWcpe3ZhciBoPWcudmFsdWU7Zj1oPT09ZiYmKDAhPT1ofHwxL2g9PT0xL2YpfHxoIT09aCYmZiE9PWY/MDooXCJmdW5jdGlvblwiPT09dHlwZW9mIGQuX2NhbGN1bGF0ZUNoYW5nZWRCaXRzP2QuX2NhbGN1bGF0ZUNoYW5nZWRCaXRzKGgsZik6MTA3Mzc0MTgyMyl8MDtpZigwPT09Zil7aWYoZy5jaGlsZHJlbj09PWUuY2hpbGRyZW4mJiFMLmN1cnJlbnQpe2I9dGcoYSxiLGMpO2JyZWFrIGF9fWVsc2UgZm9yKGc9Yi5jaGlsZCxudWxsIT09ZyYmKGcucmV0dXJuPWIpO251bGwhPT1nOyl7aD1nLmZpcnN0Q29udGV4dERlcGVuZGVuY3k7aWYobnVsbCE9PWgpe2Rve2lmKGguY29udGV4dD09PWQmJjAhPT0oaC5vYnNlcnZlZEJpdHMmZikpe2lmKDE9PT1nLnRhZyl7dmFyIGs9bmYoYyk7ay50YWc9MjtwZihnLGspfWcuZXhwaXJhdGlvblRpbWU8XG5jJiYoZy5leHBpcmF0aW9uVGltZT1jKTtrPWcuYWx0ZXJuYXRlO251bGwhPT1rJiZrLmV4cGlyYXRpb25UaW1lPGMmJihrLmV4cGlyYXRpb25UaW1lPWMpO2Zvcih2YXIgbD1nLnJldHVybjtudWxsIT09bDspe2s9bC5hbHRlcm5hdGU7aWYobC5jaGlsZEV4cGlyYXRpb25UaW1lPGMpbC5jaGlsZEV4cGlyYXRpb25UaW1lPWMsbnVsbCE9PWsmJmsuY2hpbGRFeHBpcmF0aW9uVGltZTxjJiYoay5jaGlsZEV4cGlyYXRpb25UaW1lPWMpO2Vsc2UgaWYobnVsbCE9PWsmJmsuY2hpbGRFeHBpcmF0aW9uVGltZTxjKWsuY2hpbGRFeHBpcmF0aW9uVGltZT1jO2Vsc2UgYnJlYWs7bD1sLnJldHVybn19az1nLmNoaWxkO2g9aC5uZXh0fXdoaWxlKG51bGwhPT1oKX1lbHNlIGs9MTA9PT1nLnRhZz9nLnR5cGU9PT1iLnR5cGU/bnVsbDpnLmNoaWxkOmcuY2hpbGQ7aWYobnVsbCE9PWspay5yZXR1cm49ZztlbHNlIGZvcihrPWc7bnVsbCE9PWs7KXtpZihrPT09Yil7az1udWxsO2JyZWFrfWc9ay5zaWJsaW5nO1xuaWYobnVsbCE9PWcpe2cucmV0dXJuPWsucmV0dXJuO2s9ZzticmVha31rPWsucmV0dXJufWc9a319UShhLGIsZS5jaGlsZHJlbixjKTtiPWIuY2hpbGR9cmV0dXJuIGI7Y2FzZSA5OnJldHVybiBlPWIudHlwZSxmPWIucGVuZGluZ1Byb3BzLGQ9Zi5jaGlsZHJlbixEZihiLGMpLGU9RWYoZSxmLnVuc3RhYmxlX29ic2VydmVkQml0cyksZD1kKGUpLGIuZWZmZWN0VGFnfD0xLFEoYSxiLGQsYyksYi5jaGlsZDtjYXNlIDE0OnJldHVybiBlPWIudHlwZSxmPVAoZSxiLnBlbmRpbmdQcm9wcyksZj1QKGUudHlwZSxmKSxyZyhhLGIsZSxmLGQsYyk7Y2FzZSAxNTpyZXR1cm4gc2coYSxiLGIudHlwZSxiLnBlbmRpbmdQcm9wcyxkLGMpO2Nhc2UgMTc6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOlAoZCxlKSxudWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmVmZmVjdFRhZ3w9MiksYi50YWc9MSxNKGQpPyhhPVxuITAsUmUoYikpOmE9ITEsRGYoYixjKSxYZihiLGQsZSxjKSwkZihiLGQsZSxjKSx4ZyhudWxsLGIsZCwhMCxhLGMpO2RlZmF1bHQ6dChcIjE1NlwiKX19ZnVuY3Rpb24gQmcoYSl7YS5lZmZlY3RUYWd8PTR9dmFyIENnPXZvaWQgMCxHZz12b2lkIDAsSGc9dm9pZCAwLElnPXZvaWQgMDtDZz1mdW5jdGlvbihhLGIpe2Zvcih2YXIgYz1iLmNoaWxkO251bGwhPT1jOyl7aWYoNT09PWMudGFnfHw2PT09Yy50YWcpYS5hcHBlbmRDaGlsZChjLnN0YXRlTm9kZSk7ZWxzZSBpZig0IT09Yy50YWcmJm51bGwhPT1jLmNoaWxkKXtjLmNoaWxkLnJldHVybj1jO2M9Yy5jaGlsZDtjb250aW51ZX1pZihjPT09YilicmVhaztmb3IoO251bGw9PT1jLnNpYmxpbmc7KXtpZihudWxsPT09Yy5yZXR1cm58fGMucmV0dXJuPT09YilyZXR1cm47Yz1jLnJldHVybn1jLnNpYmxpbmcucmV0dXJuPWMucmV0dXJuO2M9Yy5zaWJsaW5nfX07R2c9ZnVuY3Rpb24oKXt9O1xuSGc9ZnVuY3Rpb24oYSxiLGMsZCxlKXt2YXIgZj1hLm1lbW9pemVkUHJvcHM7aWYoZiE9PWQpe3ZhciBnPWIuc3RhdGVOb2RlO0lmKE8uY3VycmVudCk7YT1udWxsO3N3aXRjaChjKXtjYXNlIFwiaW5wdXRcIjpmPXpjKGcsZik7ZD16YyhnLGQpO2E9W107YnJlYWs7Y2FzZSBcIm9wdGlvblwiOmY9ZWUoZyxmKTtkPWVlKGcsZCk7YT1bXTticmVhaztjYXNlIFwic2VsZWN0XCI6Zj1uKHt9LGYse3ZhbHVlOnZvaWQgMH0pO2Q9bih7fSxkLHt2YWx1ZTp2b2lkIDB9KTthPVtdO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmY9Z2UoZyxmKTtkPWdlKGcsZCk7YT1bXTticmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBmLm9uQ2xpY2smJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLm9uQ2xpY2smJihnLm9uY2xpY2s9eWUpfXZlKGMsZCk7Zz1jPXZvaWQgMDt2YXIgaD1udWxsO2ZvcihjIGluIGYpaWYoIWQuaGFzT3duUHJvcGVydHkoYykmJmYuaGFzT3duUHJvcGVydHkoYykmJm51bGwhPWZbY10paWYoXCJzdHlsZVwiPT09XG5jKXt2YXIgaz1mW2NdO2ZvcihnIGluIGspay5oYXNPd25Qcm9wZXJ0eShnKSYmKGh8fChoPXt9KSxoW2ddPVwiXCIpfWVsc2VcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCIhPT1jJiZcImNoaWxkcmVuXCIhPT1jJiZcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09YyYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWMmJlwiYXV0b0ZvY3VzXCIhPT1jJiYoc2EuaGFzT3duUHJvcGVydHkoYyk/YXx8KGE9W10pOihhPWF8fFtdKS5wdXNoKGMsbnVsbCkpO2ZvcihjIGluIGQpe3ZhciBsPWRbY107az1udWxsIT1mP2ZbY106dm9pZCAwO2lmKGQuaGFzT3duUHJvcGVydHkoYykmJmwhPT1rJiYobnVsbCE9bHx8bnVsbCE9aykpaWYoXCJzdHlsZVwiPT09YylpZihrKXtmb3IoZyBpbiBrKSFrLmhhc093blByb3BlcnR5KGcpfHxsJiZsLmhhc093blByb3BlcnR5KGcpfHwoaHx8KGg9e30pLGhbZ109XCJcIik7Zm9yKGcgaW4gbClsLmhhc093blByb3BlcnR5KGcpJiZrW2ddIT09bFtnXSYmKGh8fFxuKGg9e30pLGhbZ109bFtnXSl9ZWxzZSBofHwoYXx8KGE9W10pLGEucHVzaChjLGgpKSxoPWw7ZWxzZVwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWM/KGw9bD9sLl9faHRtbDp2b2lkIDAsaz1rP2suX19odG1sOnZvaWQgMCxudWxsIT1sJiZrIT09bCYmKGE9YXx8W10pLnB1c2goYyxcIlwiK2wpKTpcImNoaWxkcmVuXCI9PT1jP2s9PT1sfHxcInN0cmluZ1wiIT09dHlwZW9mIGwmJlwibnVtYmVyXCIhPT10eXBlb2YgbHx8KGE9YXx8W10pLnB1c2goYyxcIlwiK2wpOlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1jJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09YyYmKHNhLmhhc093blByb3BlcnR5KGMpPyhudWxsIT1sJiZ4ZShlLGMpLGF8fGs9PT1sfHwoYT1bXSkpOihhPWF8fFtdKS5wdXNoKGMsbCkpfWgmJihhPWF8fFtdKS5wdXNoKFwic3R5bGVcIixoKTtlPWE7KGIudXBkYXRlUXVldWU9ZSkmJkJnKGIpfX07SWc9ZnVuY3Rpb24oYSxiLGMsZCl7YyE9PWQmJkJnKGIpfTtcbnZhciBKZz1cImZ1bmN0aW9uXCI9PT10eXBlb2YgV2Vha1NldD9XZWFrU2V0OlNldDtmdW5jdGlvbiBLZyhhLGIpe3ZhciBjPWIuc291cmNlLGQ9Yi5zdGFjaztudWxsPT09ZCYmbnVsbCE9PWMmJihkPW5jKGMpKTtudWxsIT09YyYmbWMoYy50eXBlKTtiPWIudmFsdWU7bnVsbCE9PWEmJjE9PT1hLnRhZyYmbWMoYS50eXBlKTt0cnl7Y29uc29sZS5lcnJvcihiKX1jYXRjaChlKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dGhyb3cgZTt9KX19ZnVuY3Rpb24gTGcoYSl7dmFyIGI9YS5yZWY7aWYobnVsbCE9PWIpaWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGIpdHJ5e2IobnVsbCl9Y2F0Y2goYyl7TWcoYSxjKX1lbHNlIGIuY3VycmVudD1udWxsfVxuZnVuY3Rpb24gTmcoYSxiKXtmb3IodmFyIGM9YTs7KXtpZig1PT09Yy50YWcpe3ZhciBkPWMuc3RhdGVOb2RlO2lmKGIpZC5zdHlsZS5kaXNwbGF5PVwibm9uZVwiO2Vsc2V7ZD1jLnN0YXRlTm9kZTt2YXIgZT1jLm1lbW9pemVkUHJvcHMuc3R5bGU7ZT12b2lkIDAhPT1lJiZudWxsIT09ZSYmZS5oYXNPd25Qcm9wZXJ0eShcImRpc3BsYXlcIik/ZS5kaXNwbGF5Om51bGw7ZC5zdHlsZS5kaXNwbGF5PXNlKFwiZGlzcGxheVwiLGUpfX1lbHNlIGlmKDY9PT1jLnRhZyljLnN0YXRlTm9kZS5ub2RlVmFsdWU9Yj9cIlwiOmMubWVtb2l6ZWRQcm9wcztlbHNlIGlmKDEzPT09Yy50YWcmJm51bGwhPT1jLm1lbW9pemVkU3RhdGUpe2Q9Yy5jaGlsZC5zaWJsaW5nO2QucmV0dXJuPWM7Yz1kO2NvbnRpbnVlfWVsc2UgaWYobnVsbCE9PWMuY2hpbGQpe2MuY2hpbGQucmV0dXJuPWM7Yz1jLmNoaWxkO2NvbnRpbnVlfWlmKGM9PT1hKWJyZWFrO2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jLnJldHVybnx8XG5jLnJldHVybj09PWEpcmV0dXJuO2M9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtjPWMuc2libGluZ319XG5mdW5jdGlvbiBPZyhhKXtcImZ1bmN0aW9uXCI9PT10eXBlb2YgVWUmJlVlKGEpO3N3aXRjaChhLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNDpjYXNlIDE1OnZhciBiPWEudXBkYXRlUXVldWU7aWYobnVsbCE9PWImJihiPWIubGFzdEVmZmVjdCxudWxsIT09Yikpe3ZhciBjPWI9Yi5uZXh0O2Rve3ZhciBkPWMuZGVzdHJveTtpZihudWxsIT09ZCl7dmFyIGU9YTt0cnl7ZCgpfWNhdGNoKGYpe01nKGUsZil9fWM9Yy5uZXh0fXdoaWxlKGMhPT1iKX1icmVhaztjYXNlIDE6TGcoYSk7Yj1hLnN0YXRlTm9kZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5jb21wb25lbnRXaWxsVW5tb3VudCl0cnl7Yi5wcm9wcz1hLm1lbW9pemVkUHJvcHMsYi5zdGF0ZT1hLm1lbW9pemVkU3RhdGUsYi5jb21wb25lbnRXaWxsVW5tb3VudCgpfWNhdGNoKGYpe01nKGEsZil9YnJlYWs7Y2FzZSA1OkxnKGEpO2JyZWFrO2Nhc2UgNDpQZyhhKX19XG5mdW5jdGlvbiBRZyhhKXtyZXR1cm4gNT09PWEudGFnfHwzPT09YS50YWd8fDQ9PT1hLnRhZ31cbmZ1bmN0aW9uIFJnKGEpe2E6e2Zvcih2YXIgYj1hLnJldHVybjtudWxsIT09Yjspe2lmKFFnKGIpKXt2YXIgYz1iO2JyZWFrIGF9Yj1iLnJldHVybn10KFwiMTYwXCIpO2M9dm9pZCAwfXZhciBkPWI9dm9pZCAwO3N3aXRjaChjLnRhZyl7Y2FzZSA1OmI9Yy5zdGF0ZU5vZGU7ZD0hMTticmVhaztjYXNlIDM6Yj1jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2Q9ITA7YnJlYWs7Y2FzZSA0OmI9Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztkPSEwO2JyZWFrO2RlZmF1bHQ6dChcIjE2MVwiKX1jLmVmZmVjdFRhZyYxNiYmKHBlKGIsXCJcIiksYy5lZmZlY3RUYWcmPS0xNyk7YTpiOmZvcihjPWE7Oyl7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxRZyhjLnJldHVybikpe2M9bnVsbDticmVhayBhfWM9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtmb3IoYz1jLnNpYmxpbmc7NSE9PWMudGFnJiY2IT09Yy50YWc7KXtpZihjLmVmZmVjdFRhZyYyKWNvbnRpbnVlIGI7XG5pZihudWxsPT09Yy5jaGlsZHx8ND09PWMudGFnKWNvbnRpbnVlIGI7ZWxzZSBjLmNoaWxkLnJldHVybj1jLGM9Yy5jaGlsZH1pZighKGMuZWZmZWN0VGFnJjIpKXtjPWMuc3RhdGVOb2RlO2JyZWFrIGF9fWZvcih2YXIgZT1hOzspe2lmKDU9PT1lLnRhZ3x8Nj09PWUudGFnKWlmKGMpaWYoZCl7dmFyIGY9YixnPWUuc3RhdGVOb2RlLGg9Yzs4PT09Zi5ub2RlVHlwZT9mLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGcsaCk6Zi5pbnNlcnRCZWZvcmUoZyxoKX1lbHNlIGIuaW5zZXJ0QmVmb3JlKGUuc3RhdGVOb2RlLGMpO2Vsc2UgZD8oZz1iLGg9ZS5zdGF0ZU5vZGUsOD09PWcubm9kZVR5cGU/KGY9Zy5wYXJlbnROb2RlLGYuaW5zZXJ0QmVmb3JlKGgsZykpOihmPWcsZi5hcHBlbmRDaGlsZChoKSksZz1nLl9yZWFjdFJvb3RDb250YWluZXIsbnVsbCE9PWcmJnZvaWQgMCE9PWd8fG51bGwhPT1mLm9uY2xpY2t8fChmLm9uY2xpY2s9eWUpKTpiLmFwcGVuZENoaWxkKGUuc3RhdGVOb2RlKTtcbmVsc2UgaWYoNCE9PWUudGFnJiZudWxsIT09ZS5jaGlsZCl7ZS5jaGlsZC5yZXR1cm49ZTtlPWUuY2hpbGQ7Y29udGludWV9aWYoZT09PWEpYnJlYWs7Zm9yKDtudWxsPT09ZS5zaWJsaW5nOyl7aWYobnVsbD09PWUucmV0dXJufHxlLnJldHVybj09PWEpcmV0dXJuO2U9ZS5yZXR1cm59ZS5zaWJsaW5nLnJldHVybj1lLnJldHVybjtlPWUuc2libGluZ319XG5mdW5jdGlvbiBQZyhhKXtmb3IodmFyIGI9YSxjPSExLGQ9dm9pZCAwLGU9dm9pZCAwOzspe2lmKCFjKXtjPWIucmV0dXJuO2E6Zm9yKDs7KXtudWxsPT09Yz90KFwiMTYwXCIpOnZvaWQgMDtzd2l0Y2goYy50YWcpe2Nhc2UgNTpkPWMuc3RhdGVOb2RlO2U9ITE7YnJlYWsgYTtjYXNlIDM6ZD1jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2U9ITA7YnJlYWsgYTtjYXNlIDQ6ZD1jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2U9ITA7YnJlYWsgYX1jPWMucmV0dXJufWM9ITB9aWYoNT09PWIudGFnfHw2PT09Yi50YWcpe2E6Zm9yKHZhciBmPWIsZz1mOzspaWYoT2coZyksbnVsbCE9PWcuY2hpbGQmJjQhPT1nLnRhZylnLmNoaWxkLnJldHVybj1nLGc9Zy5jaGlsZDtlbHNle2lmKGc9PT1mKWJyZWFrO2Zvcig7bnVsbD09PWcuc2libGluZzspe2lmKG51bGw9PT1nLnJldHVybnx8Zy5yZXR1cm49PT1mKWJyZWFrIGE7Zz1nLnJldHVybn1nLnNpYmxpbmcucmV0dXJuPWcucmV0dXJuO2c9Zy5zaWJsaW5nfWU/XG4oZj1kLGc9Yi5zdGF0ZU5vZGUsOD09PWYubm9kZVR5cGU/Zi5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGcpOmYucmVtb3ZlQ2hpbGQoZykpOmQucmVtb3ZlQ2hpbGQoYi5zdGF0ZU5vZGUpfWVsc2UgaWYoND09PWIudGFnPyhkPWIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8sZT0hMCk6T2coYiksbnVsbCE9PWIuY2hpbGQpe2IuY2hpbGQucmV0dXJuPWI7Yj1iLmNoaWxkO2NvbnRpbnVlfWlmKGI9PT1hKWJyZWFrO2Zvcig7bnVsbD09PWIuc2libGluZzspe2lmKG51bGw9PT1iLnJldHVybnx8Yi5yZXR1cm49PT1hKXJldHVybjtiPWIucmV0dXJuOzQ9PT1iLnRhZyYmKGM9ITEpfWIuc2libGluZy5yZXR1cm49Yi5yZXR1cm47Yj1iLnNpYmxpbmd9fVxuZnVuY3Rpb24gU2coYSxiKXtzd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTQ6Y2FzZSAxNTpicmVhaztjYXNlIDE6YnJlYWs7Y2FzZSA1OnZhciBjPWIuc3RhdGVOb2RlO2lmKG51bGwhPWMpe3ZhciBkPWIubWVtb2l6ZWRQcm9wczthPW51bGwhPT1hP2EubWVtb2l6ZWRQcm9wczpkO3ZhciBlPWIudHlwZSxmPWIudXBkYXRlUXVldWU7Yi51cGRhdGVRdWV1ZT1udWxsO251bGwhPT1mJiZGZShjLGYsZSxhLGQsYil9YnJlYWs7Y2FzZSA2Om51bGw9PT1iLnN0YXRlTm9kZT90KFwiMTYyXCIpOnZvaWQgMDtiLnN0YXRlTm9kZS5ub2RlVmFsdWU9Yi5tZW1vaXplZFByb3BzO2JyZWFrO2Nhc2UgMzpicmVhaztjYXNlIDEyOmJyZWFrO2Nhc2UgMTM6Yz1iLm1lbW9pemVkU3RhdGU7ZD12b2lkIDA7YT1iO251bGw9PT1jP2Q9ITE6KGQ9ITAsYT1iLmNoaWxkLDA9PT1jLnRpbWVkT3V0QXQmJihjLnRpbWVkT3V0QXQ9UmYoKSkpO251bGwhPT1hJiZOZyhhLGQpO2M9Yi51cGRhdGVRdWV1ZTtcbmlmKG51bGwhPT1jKXtiLnVwZGF0ZVF1ZXVlPW51bGw7dmFyIGc9Yi5zdGF0ZU5vZGU7bnVsbD09PWcmJihnPWIuc3RhdGVOb2RlPW5ldyBKZyk7Yy5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBjPVRnLmJpbmQobnVsbCxiLGEpO2cuaGFzKGEpfHwoZy5hZGQoYSksYS50aGVuKGMsYykpfSl9YnJlYWs7Y2FzZSAxNzpicmVhaztkZWZhdWx0OnQoXCIxNjNcIil9fXZhciBVZz1cImZ1bmN0aW9uXCI9PT10eXBlb2YgV2Vha01hcD9XZWFrTWFwOk1hcDtmdW5jdGlvbiBWZyhhLGIsYyl7Yz1uZihjKTtjLnRhZz0zO2MucGF5bG9hZD17ZWxlbWVudDpudWxsfTt2YXIgZD1iLnZhbHVlO2MuY2FsbGJhY2s9ZnVuY3Rpb24oKXtXZyhkKTtLZyhhLGIpfTtyZXR1cm4gY31cbmZ1bmN0aW9uIFhnKGEsYixjKXtjPW5mKGMpO2MudGFnPTM7dmFyIGQ9YS50eXBlLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcjtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZCl7dmFyIGU9Yi52YWx1ZTtjLnBheWxvYWQ9ZnVuY3Rpb24oKXtyZXR1cm4gZChlKX19dmFyIGY9YS5zdGF0ZU5vZGU7bnVsbCE9PWYmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBmLmNvbXBvbmVudERpZENhdGNoJiYoYy5jYWxsYmFjaz1mdW5jdGlvbigpe1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBkJiYobnVsbD09PVlnP1lnPW5ldyBTZXQoW3RoaXNdKTpZZy5hZGQodGhpcykpO3ZhciBjPWIudmFsdWUsZT1iLnN0YWNrO0tnKGEsYik7dGhpcy5jb21wb25lbnREaWRDYXRjaChjLHtjb21wb25lbnRTdGFjazpudWxsIT09ZT9lOlwiXCJ9KX0pO3JldHVybiBjfVxuZnVuY3Rpb24gWmcoYSl7c3dpdGNoKGEudGFnKXtjYXNlIDE6TShhLnR5cGUpJiZOZShhKTt2YXIgYj1hLmVmZmVjdFRhZztyZXR1cm4gYiYyMDQ4PyhhLmVmZmVjdFRhZz1iJi0yMDQ5fDY0LGEpOm51bGw7Y2FzZSAzOnJldHVybiBLZihhKSxPZShhKSxiPWEuZWZmZWN0VGFnLDAhPT0oYiY2NCk/dChcIjI4NVwiKTp2b2lkIDAsYS5lZmZlY3RUYWc9YiYtMjA0OXw2NCxhO2Nhc2UgNTpyZXR1cm4gTWYoYSksbnVsbDtjYXNlIDEzOnJldHVybiBiPWEuZWZmZWN0VGFnLGImMjA0OD8oYS5lZmZlY3RUYWc9YiYtMjA0OXw2NCxhKTpudWxsO2Nhc2UgNDpyZXR1cm4gS2YoYSksbnVsbDtjYXNlIDEwOnJldHVybiBDZihhKSxudWxsO2RlZmF1bHQ6cmV0dXJuIG51bGx9fVxudmFyICRnPXtyZWFkQ29udGV4dDpFZn0sYWg9WGIuUmVhY3RDdXJyZW50T3duZXIsYmg9MTA3Mzc0MTgyMixjaD0wLGRoPSExLFM9bnVsbCxUPW51bGwsVT0wLGVoPS0xLGZoPSExLFY9bnVsbCxnaD0hMSxoaD1udWxsLGloPW51bGwsWWc9bnVsbDtmdW5jdGlvbiBqaCgpe2lmKG51bGwhPT1TKWZvcih2YXIgYT1TLnJldHVybjtudWxsIT09YTspe3ZhciBiPWE7c3dpdGNoKGIudGFnKXtjYXNlIDE6dmFyIGM9Yi50eXBlLmNoaWxkQ29udGV4dFR5cGVzO251bGwhPT1jJiZ2b2lkIDAhPT1jJiZOZShiKTticmVhaztjYXNlIDM6S2YoYik7T2UoYik7YnJlYWs7Y2FzZSA1Ok1mKGIpO2JyZWFrO2Nhc2UgNDpLZihiKTticmVhaztjYXNlIDEwOkNmKGIpfWE9YS5yZXR1cm59VD1udWxsO1U9MDtlaD0tMTtmaD0hMTtTPW51bGx9ZnVuY3Rpb24gVGYoKXtudWxsIT09aWgmJihiYS51bnN0YWJsZV9jYW5jZWxDYWxsYmFjayhoaCksaWgoKSl9XG5mdW5jdGlvbiBraChhKXtmb3IoOzspe3ZhciBiPWEuYWx0ZXJuYXRlLGM9YS5yZXR1cm4sZD1hLnNpYmxpbmc7aWYoMD09PShhLmVmZmVjdFRhZyYxMDI0KSl7Uz1hO2E6e3ZhciBlPWI7Yj1hO3ZhciBmPVU7dmFyIGc9Yi5wZW5kaW5nUHJvcHM7c3dpdGNoKGIudGFnKXtjYXNlIDI6YnJlYWs7Y2FzZSAxNjpicmVhaztjYXNlIDE1OmNhc2UgMDpicmVhaztjYXNlIDE6TShiLnR5cGUpJiZOZShiKTticmVhaztjYXNlIDM6S2YoYik7T2UoYik7Zz1iLnN0YXRlTm9kZTtnLnBlbmRpbmdDb250ZXh0JiYoZy5jb250ZXh0PWcucGVuZGluZ0NvbnRleHQsZy5wZW5kaW5nQ29udGV4dD1udWxsKTtpZihudWxsPT09ZXx8bnVsbD09PWUuY2hpbGQpbmcoYiksYi5lZmZlY3RUYWcmPS0zO0dnKGIpO2JyZWFrO2Nhc2UgNTpNZihiKTt2YXIgaD1JZihIZi5jdXJyZW50KTtmPWIudHlwZTtpZihudWxsIT09ZSYmbnVsbCE9Yi5zdGF0ZU5vZGUpSGcoZSxiLGYsZyxoKSxlLnJlZiE9PWIucmVmJiYoYi5lZmZlY3RUYWd8PVxuMTI4KTtlbHNlIGlmKGcpe3ZhciBrPUlmKE8uY3VycmVudCk7aWYobmcoYikpe2c9YjtlPWcuc3RhdGVOb2RlO3ZhciBsPWcudHlwZSxtPWcubWVtb2l6ZWRQcm9wcyxyPWg7ZVtHYV09ZztlW0hhXT1tO2Y9dm9pZCAwO2g9bDtzd2l0Y2goaCl7Y2FzZSBcImlmcmFtZVwiOmNhc2UgXCJvYmplY3RcIjpIKFwibG9hZFwiLGUpO2JyZWFrO2Nhc2UgXCJ2aWRlb1wiOmNhc2UgXCJhdWRpb1wiOmZvcihsPTA7bDxiYi5sZW5ndGg7bCsrKUgoYmJbbF0sZSk7YnJlYWs7Y2FzZSBcInNvdXJjZVwiOkgoXCJlcnJvclwiLGUpO2JyZWFrO2Nhc2UgXCJpbWdcIjpjYXNlIFwiaW1hZ2VcIjpjYXNlIFwibGlua1wiOkgoXCJlcnJvclwiLGUpO0goXCJsb2FkXCIsZSk7YnJlYWs7Y2FzZSBcImZvcm1cIjpIKFwicmVzZXRcIixlKTtIKFwic3VibWl0XCIsZSk7YnJlYWs7Y2FzZSBcImRldGFpbHNcIjpIKFwidG9nZ2xlXCIsZSk7YnJlYWs7Y2FzZSBcImlucHV0XCI6QWMoZSxtKTtIKFwiaW52YWxpZFwiLGUpO3hlKHIsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwic2VsZWN0XCI6ZS5fd3JhcHBlclN0YXRlPVxue3dhc011bHRpcGxlOiEhbS5tdWx0aXBsZX07SChcImludmFsaWRcIixlKTt4ZShyLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6aGUoZSxtKSxIKFwiaW52YWxpZFwiLGUpLHhlKHIsXCJvbkNoYW5nZVwiKX12ZShoLG0pO2w9bnVsbDtmb3IoZiBpbiBtKW0uaGFzT3duUHJvcGVydHkoZikmJihrPW1bZl0sXCJjaGlsZHJlblwiPT09Zj9cInN0cmluZ1wiPT09dHlwZW9mIGs/ZS50ZXh0Q29udGVudCE9PWsmJihsPVtcImNoaWxkcmVuXCIsa10pOlwibnVtYmVyXCI9PT10eXBlb2YgayYmZS50ZXh0Q29udGVudCE9PVwiXCIrayYmKGw9W1wiY2hpbGRyZW5cIixcIlwiK2tdKTpzYS5oYXNPd25Qcm9wZXJ0eShmKSYmbnVsbCE9ayYmeGUocixmKSk7c3dpdGNoKGgpe2Nhc2UgXCJpbnB1dFwiOlZiKGUpO0VjKGUsbSwhMCk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6VmIoZSk7amUoZSxtKTticmVhaztjYXNlIFwic2VsZWN0XCI6Y2FzZSBcIm9wdGlvblwiOmJyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiPT09dHlwZW9mIG0ub25DbGljayYmXG4oZS5vbmNsaWNrPXllKX1mPWw7Zy51cGRhdGVRdWV1ZT1mO2c9bnVsbCE9PWY/ITA6ITE7ZyYmQmcoYil9ZWxzZXttPWI7ZT1mO3I9ZztsPTk9PT1oLm5vZGVUeXBlP2g6aC5vd25lckRvY3VtZW50O2s9PT1rZS5odG1sJiYoaz1sZShlKSk7az09PWtlLmh0bWw/XCJzY3JpcHRcIj09PWU/KGU9bC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLGUuaW5uZXJIVE1MPVwiPHNjcmlwdD5cXHgzYy9zY3JpcHQ+XCIsbD1lLnJlbW92ZUNoaWxkKGUuZmlyc3RDaGlsZCkpOlwic3RyaW5nXCI9PT10eXBlb2Ygci5pcz9sPWwuY3JlYXRlRWxlbWVudChlLHtpczpyLmlzfSk6KGw9bC5jcmVhdGVFbGVtZW50KGUpLFwic2VsZWN0XCI9PT1lJiZyLm11bHRpcGxlJiYobC5tdWx0aXBsZT0hMCkpOmw9bC5jcmVhdGVFbGVtZW50TlMoayxlKTtlPWw7ZVtHYV09bTtlW0hhXT1nO0NnKGUsYiwhMSwhMSk7cj1lO2w9ZjttPWc7dmFyIHc9aCx5PXdlKGwsbSk7c3dpdGNoKGwpe2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6SChcImxvYWRcIixcbnIpO2g9bTticmVhaztjYXNlIFwidmlkZW9cIjpjYXNlIFwiYXVkaW9cIjpmb3IoaD0wO2g8YmIubGVuZ3RoO2grKylIKGJiW2hdLHIpO2g9bTticmVhaztjYXNlIFwic291cmNlXCI6SChcImVycm9yXCIscik7aD1tO2JyZWFrO2Nhc2UgXCJpbWdcIjpjYXNlIFwiaW1hZ2VcIjpjYXNlIFwibGlua1wiOkgoXCJlcnJvclwiLHIpO0goXCJsb2FkXCIscik7aD1tO2JyZWFrO2Nhc2UgXCJmb3JtXCI6SChcInJlc2V0XCIscik7SChcInN1Ym1pdFwiLHIpO2g9bTticmVhaztjYXNlIFwiZGV0YWlsc1wiOkgoXCJ0b2dnbGVcIixyKTtoPW07YnJlYWs7Y2FzZSBcImlucHV0XCI6QWMocixtKTtoPXpjKHIsbSk7SChcImludmFsaWRcIixyKTt4ZSh3LFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcIm9wdGlvblwiOmg9ZWUocixtKTticmVhaztjYXNlIFwic2VsZWN0XCI6ci5fd3JhcHBlclN0YXRlPXt3YXNNdWx0aXBsZTohIW0ubXVsdGlwbGV9O2g9bih7fSxtLHt2YWx1ZTp2b2lkIDB9KTtIKFwiaW52YWxpZFwiLHIpO3hlKHcsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpoZShyLFxubSk7aD1nZShyLG0pO0goXCJpbnZhbGlkXCIscik7eGUodyxcIm9uQ2hhbmdlXCIpO2JyZWFrO2RlZmF1bHQ6aD1tfXZlKGwsaCk7az12b2lkIDA7dmFyIEI9bCxSPXIsdj1oO2ZvcihrIGluIHYpaWYodi5oYXNPd25Qcm9wZXJ0eShrKSl7dmFyIHE9dltrXTtcInN0eWxlXCI9PT1rP3RlKFIscSk6XCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09az8ocT1xP3EuX19odG1sOnZvaWQgMCxudWxsIT1xJiZvZShSLHEpKTpcImNoaWxkcmVuXCI9PT1rP1wic3RyaW5nXCI9PT10eXBlb2YgcT8oXCJ0ZXh0YXJlYVwiIT09Qnx8XCJcIiE9PXEpJiZwZShSLHEpOlwibnVtYmVyXCI9PT10eXBlb2YgcSYmcGUoUixcIlwiK3EpOlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1rJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09ayYmXCJhdXRvRm9jdXNcIiE9PWsmJihzYS5oYXNPd25Qcm9wZXJ0eShrKT9udWxsIT1xJiZ4ZSh3LGspOm51bGwhPXEmJnhjKFIsayxxLHkpKX1zd2l0Y2gobCl7Y2FzZSBcImlucHV0XCI6VmIocik7XG5FYyhyLG0sITEpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOlZiKHIpO2plKHIsbSk7YnJlYWs7Y2FzZSBcIm9wdGlvblwiOm51bGwhPW0udmFsdWUmJnIuc2V0QXR0cmlidXRlKFwidmFsdWVcIixcIlwiK3ljKG0udmFsdWUpKTticmVhaztjYXNlIFwic2VsZWN0XCI6aD1yO2gubXVsdGlwbGU9ISFtLm11bHRpcGxlO3I9bS52YWx1ZTtudWxsIT1yP2ZlKGgsISFtLm11bHRpcGxlLHIsITEpOm51bGwhPW0uZGVmYXVsdFZhbHVlJiZmZShoLCEhbS5tdWx0aXBsZSxtLmRlZmF1bHRWYWx1ZSwhMCk7YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2YgaC5vbkNsaWNrJiYoci5vbmNsaWNrPXllKX0oZz1CZShmLGcpKSYmQmcoYik7Yi5zdGF0ZU5vZGU9ZX1udWxsIT09Yi5yZWYmJihiLmVmZmVjdFRhZ3w9MTI4KX1lbHNlIG51bGw9PT1iLnN0YXRlTm9kZT90KFwiMTY2XCIpOnZvaWQgMDticmVhaztjYXNlIDY6ZSYmbnVsbCE9Yi5zdGF0ZU5vZGU/SWcoZSxiLGUubWVtb2l6ZWRQcm9wcyxnKTooXCJzdHJpbmdcIiE9PVxudHlwZW9mIGcmJihudWxsPT09Yi5zdGF0ZU5vZGU/dChcIjE2NlwiKTp2b2lkIDApLGU9SWYoSGYuY3VycmVudCksSWYoTy5jdXJyZW50KSxuZyhiKT8oZz1iLGY9Zy5zdGF0ZU5vZGUsZT1nLm1lbW9pemVkUHJvcHMsZltHYV09ZywoZz1mLm5vZGVWYWx1ZSE9PWUpJiZCZyhiKSk6KGY9YixnPSg5PT09ZS5ub2RlVHlwZT9lOmUub3duZXJEb2N1bWVudCkuY3JlYXRlVGV4dE5vZGUoZyksZ1tHYV09YixmLnN0YXRlTm9kZT1nKSk7YnJlYWs7Y2FzZSAxMTpicmVhaztjYXNlIDEzOmc9Yi5tZW1vaXplZFN0YXRlO2lmKDAhPT0oYi5lZmZlY3RUYWcmNjQpKXtiLmV4cGlyYXRpb25UaW1lPWY7Uz1iO2JyZWFrIGF9Zz1udWxsIT09ZztmPW51bGwhPT1lJiZudWxsIT09ZS5tZW1vaXplZFN0YXRlO251bGwhPT1lJiYhZyYmZiYmKGU9ZS5jaGlsZC5zaWJsaW5nLG51bGwhPT1lJiYoaD1iLmZpcnN0RWZmZWN0LG51bGwhPT1oPyhiLmZpcnN0RWZmZWN0PWUsZS5uZXh0RWZmZWN0PWgpOihiLmZpcnN0RWZmZWN0PVxuYi5sYXN0RWZmZWN0PWUsZS5uZXh0RWZmZWN0PW51bGwpLGUuZWZmZWN0VGFnPTgpKTtpZihnIT09Znx8MD09PShiLmVmZmVjdFRhZyYxKSYmZyliLmVmZmVjdFRhZ3w9NDticmVhaztjYXNlIDc6YnJlYWs7Y2FzZSA4OmJyZWFrO2Nhc2UgMTI6YnJlYWs7Y2FzZSA0OktmKGIpO0dnKGIpO2JyZWFrO2Nhc2UgMTA6Q2YoYik7YnJlYWs7Y2FzZSA5OmJyZWFrO2Nhc2UgMTQ6YnJlYWs7Y2FzZSAxNzpNKGIudHlwZSkmJk5lKGIpO2JyZWFrO2RlZmF1bHQ6dChcIjE1NlwiKX1TPW51bGx9Yj1hO2lmKDE9PT1VfHwxIT09Yi5jaGlsZEV4cGlyYXRpb25UaW1lKXtnPTA7Zm9yKGY9Yi5jaGlsZDtudWxsIT09ZjspZT1mLmV4cGlyYXRpb25UaW1lLGg9Zi5jaGlsZEV4cGlyYXRpb25UaW1lLGU+ZyYmKGc9ZSksaD5nJiYoZz1oKSxmPWYuc2libGluZztiLmNoaWxkRXhwaXJhdGlvblRpbWU9Z31pZihudWxsIT09UylyZXR1cm4gUztudWxsIT09YyYmMD09PShjLmVmZmVjdFRhZyYxMDI0KSYmKG51bGw9PT1cbmMuZmlyc3RFZmZlY3QmJihjLmZpcnN0RWZmZWN0PWEuZmlyc3RFZmZlY3QpLG51bGwhPT1hLmxhc3RFZmZlY3QmJihudWxsIT09Yy5sYXN0RWZmZWN0JiYoYy5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YS5maXJzdEVmZmVjdCksYy5sYXN0RWZmZWN0PWEubGFzdEVmZmVjdCksMTxhLmVmZmVjdFRhZyYmKG51bGwhPT1jLmxhc3RFZmZlY3Q/Yy5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YTpjLmZpcnN0RWZmZWN0PWEsYy5sYXN0RWZmZWN0PWEpKX1lbHNle2E9WmcoYSxVKTtpZihudWxsIT09YSlyZXR1cm4gYS5lZmZlY3RUYWcmPTEwMjMsYTtudWxsIT09YyYmKGMuZmlyc3RFZmZlY3Q9Yy5sYXN0RWZmZWN0PW51bGwsYy5lZmZlY3RUYWd8PTEwMjQpfWlmKG51bGwhPT1kKXJldHVybiBkO2lmKG51bGwhPT1jKWE9YztlbHNlIGJyZWFrfXJldHVybiBudWxsfVxuZnVuY3Rpb24gbGgoYSl7dmFyIGI9QWcoYS5hbHRlcm5hdGUsYSxVKTthLm1lbW9pemVkUHJvcHM9YS5wZW5kaW5nUHJvcHM7bnVsbD09PWImJihiPWtoKGEpKTthaC5jdXJyZW50PW51bGw7cmV0dXJuIGJ9XG5mdW5jdGlvbiBtaChhLGIpe2RoP3QoXCIyNDNcIik6dm9pZCAwO1RmKCk7ZGg9ITA7YWguY3VycmVudERpc3BhdGNoZXI9JGc7dmFyIGM9YS5uZXh0RXhwaXJhdGlvblRpbWVUb1dvcmtPbjtpZihjIT09VXx8YSE9PVR8fG51bGw9PT1TKWpoKCksVD1hLFU9YyxTPSRlKFQuY3VycmVudCxudWxsLFUpLGEucGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lPTA7dmFyIGQ9ITE7ZG97dHJ5e2lmKGIpZm9yKDtudWxsIT09UyYmIW5oKCk7KVM9bGgoUyk7ZWxzZSBmb3IoO251bGwhPT1TOylTPWxoKFMpfWNhdGNoKEIpe2lmKEFmPXpmPXlmPW51bGwsbnVsbD09PVMpZD0hMCxXZyhCKTtlbHNle251bGw9PT1TP3QoXCIyNzFcIik6dm9pZCAwO3ZhciBlPVMsZj1lLnJldHVybjtpZihudWxsPT09ZilkPSEwLFdnKEIpO2Vsc2V7YTp7dmFyIGc9YSxoPWYsaz1lLGw9QjtmPVU7ay5lZmZlY3RUYWd8PTEwMjQ7ay5maXJzdEVmZmVjdD1rLmxhc3RFZmZlY3Q9bnVsbDtpZihudWxsIT09bCYmXCJvYmplY3RcIj09PVxudHlwZW9mIGwmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBsLnRoZW4pe3ZhciBtPWw7bD1oO3ZhciByPS0xLHc9LTE7ZG97aWYoMTM9PT1sLnRhZyl7dmFyIHk9bC5hbHRlcm5hdGU7aWYobnVsbCE9PXkmJih5PXkubWVtb2l6ZWRTdGF0ZSxudWxsIT09eSkpe3c9MTAqKDEwNzM3NDE4MjIteS50aW1lZE91dEF0KTticmVha315PWwucGVuZGluZ1Byb3BzLm1heER1cmF0aW9uO2lmKFwibnVtYmVyXCI9PT10eXBlb2YgeSlpZigwPj15KXI9MDtlbHNlIGlmKC0xPT09cnx8eTxyKXI9eX1sPWwucmV0dXJufXdoaWxlKG51bGwhPT1sKTtsPWg7ZG97aWYoeT0xMz09PWwudGFnKXk9dm9pZCAwPT09bC5tZW1vaXplZFByb3BzLmZhbGxiYWNrPyExOm51bGw9PT1sLm1lbW9pemVkU3RhdGU7aWYoeSl7aD1sLnVwZGF0ZVF1ZXVlO251bGw9PT1oP2wudXBkYXRlUXVldWU9bmV3IFNldChbbV0pOmguYWRkKG0pO2lmKDA9PT0obC5tb2RlJjEpKXtsLmVmZmVjdFRhZ3w9NjQ7ay5lZmZlY3RUYWcmPS0xOTU3O1xuMT09PWsudGFnJiYobnVsbD09PWsuYWx0ZXJuYXRlP2sudGFnPTE3OihmPW5mKDEwNzM3NDE4MjMpLGYudGFnPTIscGYoayxmKSkpO2suZXhwaXJhdGlvblRpbWU9MTA3Mzc0MTgyMzticmVhayBhfWs9Zy5waW5nQ2FjaGU7bnVsbD09PWs/KGs9Zy5waW5nQ2FjaGU9bmV3IFVnLGg9bmV3IFNldCxrLnNldChtLGgpKTooaD1rLmdldChtKSx2b2lkIDA9PT1oJiYoaD1uZXcgU2V0LGsuc2V0KG0saCkpKTtoLmhhcyhmKXx8KGguYWRkKGYpLGs9b2guYmluZChudWxsLGcsbSxmKSxtLnRoZW4oayxrKSk7LTE9PT1yP2c9MTA3Mzc0MTgyMzooLTE9PT13JiYodz0xMCooMTA3Mzc0MTgyMi1qZihnLGYpKS01RTMpLGc9dytyKTswPD1nJiZlaDxnJiYoZWg9Zyk7bC5lZmZlY3RUYWd8PTIwNDg7bC5leHBpcmF0aW9uVGltZT1mO2JyZWFrIGF9bD1sLnJldHVybn13aGlsZShudWxsIT09bCk7bD1FcnJvcigobWMoay50eXBlKXx8XCJBIFJlYWN0IGNvbXBvbmVudFwiKStcIiBzdXNwZW5kZWQgd2hpbGUgcmVuZGVyaW5nLCBidXQgbm8gZmFsbGJhY2sgVUkgd2FzIHNwZWNpZmllZC5cXG5cXG5BZGQgYSA8U3VzcGVuc2UgZmFsbGJhY2s9Li4uPiBjb21wb25lbnQgaGlnaGVyIGluIHRoZSB0cmVlIHRvIHByb3ZpZGUgYSBsb2FkaW5nIGluZGljYXRvciBvciBwbGFjZWhvbGRlciB0byBkaXNwbGF5LlwiK1xubmMoaykpfWZoPSEwO2w9d2YobCxrKTtnPWg7ZG97c3dpdGNoKGcudGFnKXtjYXNlIDM6Zy5lZmZlY3RUYWd8PTIwNDg7Zy5leHBpcmF0aW9uVGltZT1mO2Y9VmcoZyxsLGYpO3FmKGcsZik7YnJlYWsgYTtjYXNlIDE6aWYobT1sLHI9Zy50eXBlLHc9Zy5zdGF0ZU5vZGUsMD09PShnLmVmZmVjdFRhZyY2NCkmJihcImZ1bmN0aW9uXCI9PT10eXBlb2Ygci5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3J8fG51bGwhPT13JiZcImZ1bmN0aW9uXCI9PT10eXBlb2Ygdy5jb21wb25lbnREaWRDYXRjaCYmKG51bGw9PT1ZZ3x8IVlnLmhhcyh3KSkpKXtnLmVmZmVjdFRhZ3w9MjA0ODtnLmV4cGlyYXRpb25UaW1lPWY7Zj1YZyhnLG0sZik7cWYoZyxmKTticmVhayBhfX1nPWcucmV0dXJufXdoaWxlKG51bGwhPT1nKX1TPWtoKGUpO2NvbnRpbnVlfX19YnJlYWt9d2hpbGUoMSk7ZGg9ITE7QWY9emY9eWY9YWguY3VycmVudERpc3BhdGNoZXI9bnVsbDtpZihkKVQ9bnVsbCxhLmZpbmlzaGVkV29yaz1udWxsO1xuZWxzZSBpZihudWxsIT09UylhLmZpbmlzaGVkV29yaz1udWxsO2Vsc2V7ZD1hLmN1cnJlbnQuYWx0ZXJuYXRlO251bGw9PT1kP3QoXCIyODFcIik6dm9pZCAwO1Q9bnVsbDtpZihmaCl7ZT1hLmxhdGVzdFBlbmRpbmdUaW1lO2Y9YS5sYXRlc3RTdXNwZW5kZWRUaW1lO2c9YS5sYXRlc3RQaW5nZWRUaW1lO2lmKDAhPT1lJiZlPGN8fDAhPT1mJiZmPGN8fDAhPT1nJiZnPGMpe2hmKGEsYyk7cGgoYSxkLGMsYS5leHBpcmF0aW9uVGltZSwtMSk7cmV0dXJufWlmKCFhLmRpZEVycm9yJiZiKXthLmRpZEVycm9yPSEwO2M9YS5uZXh0RXhwaXJhdGlvblRpbWVUb1dvcmtPbj1jO2I9YS5leHBpcmF0aW9uVGltZT0xMDczNzQxODIzO3BoKGEsZCxjLGIsLTEpO3JldHVybn19YiYmLTEhPT1laD8oaGYoYSxjKSxiPTEwKigxMDczNzQxODIyLWpmKGEsYykpLGI8ZWgmJihlaD1iKSxiPTEwKigxMDczNzQxODIyLVJmKCkpLGI9ZWgtYixwaChhLGQsYyxhLmV4cGlyYXRpb25UaW1lLDA+Yj8wOmIpKTooYS5wZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU9XG5jLGEuZmluaXNoZWRXb3JrPWQpfX1mdW5jdGlvbiBNZyhhLGIpe2Zvcih2YXIgYz1hLnJldHVybjtudWxsIT09Yzspe3N3aXRjaChjLnRhZyl7Y2FzZSAxOnZhciBkPWMuc3RhdGVOb2RlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLnR5cGUuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5jb21wb25lbnREaWRDYXRjaCYmKG51bGw9PT1ZZ3x8IVlnLmhhcyhkKSkpe2E9d2YoYixhKTthPVhnKGMsYSwxMDczNzQxODIzKTtwZihjLGEpO1VmKGMsMTA3Mzc0MTgyMyk7cmV0dXJufWJyZWFrO2Nhc2UgMzphPXdmKGIsYSk7YT1WZyhjLGEsMTA3Mzc0MTgyMyk7cGYoYyxhKTtVZihjLDEwNzM3NDE4MjMpO3JldHVybn1jPWMucmV0dXJufTM9PT1hLnRhZyYmKGM9d2YoYixhKSxjPVZnKGEsYywxMDczNzQxODIzKSxwZihhLGMpLFVmKGEsMTA3Mzc0MTgyMykpfVxuZnVuY3Rpb24gU2YoYSxiKXswIT09Y2g/YT1jaDpkaD9hPWdoPzEwNzM3NDE4MjM6VTpiLm1vZGUmMT8oYT1xaD8xMDczNzQxODIyLTEwKigoKDEwNzM3NDE4MjItYSsxNSkvMTB8MCkrMSk6MTA3Mzc0MTgyMi0yNSooKCgxMDczNzQxODIyLWErNTAwKS8yNXwwKSsxKSxudWxsIT09VCYmYT09PVUmJi0tYSk6YT0xMDczNzQxODIzO3FoJiYoMD09PXJofHxhPHJoKSYmKHJoPWEpO3JldHVybiBhfWZ1bmN0aW9uIG9oKGEsYixjKXt2YXIgZD1hLnBpbmdDYWNoZTtudWxsIT09ZCYmZC5kZWxldGUoYik7aWYobnVsbCE9PVQmJlU9PT1jKVQ9bnVsbDtlbHNlIGlmKGI9YS5lYXJsaWVzdFN1c3BlbmRlZFRpbWUsZD1hLmxhdGVzdFN1c3BlbmRlZFRpbWUsMCE9PWImJmM8PWImJmM+PWQpe2EuZGlkRXJyb3I9ITE7Yj1hLmxhdGVzdFBpbmdlZFRpbWU7aWYoMD09PWJ8fGI+YylhLmxhdGVzdFBpbmdlZFRpbWU9YztnZihjLGEpO2M9YS5leHBpcmF0aW9uVGltZTswIT09YyYmc2goYSxjKX19XG5mdW5jdGlvbiBUZyhhLGIpe3ZhciBjPWEuc3RhdGVOb2RlO251bGwhPT1jJiZjLmRlbGV0ZShiKTtiPVJmKCk7Yj1TZihiLGEpO2E9dGgoYSxiKTtudWxsIT09YSYmKGZmKGEsYiksYj1hLmV4cGlyYXRpb25UaW1lLDAhPT1iJiZzaChhLGIpKX1cbmZ1bmN0aW9uIHRoKGEsYil7YS5leHBpcmF0aW9uVGltZTxiJiYoYS5leHBpcmF0aW9uVGltZT1iKTt2YXIgYz1hLmFsdGVybmF0ZTtudWxsIT09YyYmYy5leHBpcmF0aW9uVGltZTxiJiYoYy5leHBpcmF0aW9uVGltZT1iKTt2YXIgZD1hLnJldHVybixlPW51bGw7aWYobnVsbD09PWQmJjM9PT1hLnRhZyllPWEuc3RhdGVOb2RlO2Vsc2UgZm9yKDtudWxsIT09ZDspe2M9ZC5hbHRlcm5hdGU7ZC5jaGlsZEV4cGlyYXRpb25UaW1lPGImJihkLmNoaWxkRXhwaXJhdGlvblRpbWU9Yik7bnVsbCE9PWMmJmMuY2hpbGRFeHBpcmF0aW9uVGltZTxiJiYoYy5jaGlsZEV4cGlyYXRpb25UaW1lPWIpO2lmKG51bGw9PT1kLnJldHVybiYmMz09PWQudGFnKXtlPWQuc3RhdGVOb2RlO2JyZWFrfWQ9ZC5yZXR1cm59cmV0dXJuIGV9XG5mdW5jdGlvbiBVZihhLGIpe2E9dGgoYSxiKTtudWxsIT09YSYmKCFkaCYmMCE9PVUmJmI+VSYmamgoKSxmZihhLGIpLGRoJiYhZ2gmJlQ9PT1hfHxzaChhLGEuZXhwaXJhdGlvblRpbWUpLHVoPnZoJiYodWg9MCx0KFwiMTg1XCIpKSl9ZnVuY3Rpb24gd2goYSxiLGMsZCxlKXt2YXIgZj1jaDtjaD0xMDczNzQxODIzO3RyeXtyZXR1cm4gYShiLGMsZCxlKX1maW5hbGx5e2NoPWZ9fXZhciB4aD1udWxsLFc9bnVsbCx5aD0wLHpoPXZvaWQgMCxYPSExLEFoPW51bGwsWT0wLHJoPTAsQmg9ITEsQ2g9bnVsbCxaPSExLERoPSExLHFoPSExLEVoPW51bGwsRmg9YmEudW5zdGFibGVfbm93KCksR2g9MTA3Mzc0MTgyMi0oRmgvMTB8MCksSGg9R2gsdmg9NTAsdWg9MCxJaD1udWxsO2Z1bmN0aW9uIEpoKCl7R2g9MTA3Mzc0MTgyMi0oKGJhLnVuc3RhYmxlX25vdygpLUZoKS8xMHwwKX1cbmZ1bmN0aW9uIEtoKGEsYil7aWYoMCE9PXloKXtpZihiPHloKXJldHVybjtudWxsIT09emgmJmJhLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrKHpoKX15aD1iO2E9YmEudW5zdGFibGVfbm93KCktRmg7emg9YmEudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayhMaCx7dGltZW91dDoxMCooMTA3Mzc0MTgyMi1iKS1hfSl9ZnVuY3Rpb24gcGgoYSxiLGMsZCxlKXthLmV4cGlyYXRpb25UaW1lPWQ7MCE9PWV8fG5oKCk/MDxlJiYoYS50aW1lb3V0SGFuZGxlPURlKE1oLmJpbmQobnVsbCxhLGIsYyksZSkpOihhLnBlbmRpbmdDb21taXRFeHBpcmF0aW9uVGltZT1jLGEuZmluaXNoZWRXb3JrPWIpfWZ1bmN0aW9uIE1oKGEsYixjKXthLnBlbmRpbmdDb21taXRFeHBpcmF0aW9uVGltZT1jO2EuZmluaXNoZWRXb3JrPWI7SmgoKTtIaD1HaDtOaChhLGMpfWZ1bmN0aW9uIFJmKCl7aWYoWClyZXR1cm4gSGg7T2goKTtpZigwPT09WXx8MT09PVkpSmgoKSxIaD1HaDtyZXR1cm4gSGh9XG5mdW5jdGlvbiBzaChhLGIpe251bGw9PT1hLm5leHRTY2hlZHVsZWRSb290PyhhLmV4cGlyYXRpb25UaW1lPWIsbnVsbD09PVc/KHhoPVc9YSxhLm5leHRTY2hlZHVsZWRSb290PWEpOihXPVcubmV4dFNjaGVkdWxlZFJvb3Q9YSxXLm5leHRTY2hlZHVsZWRSb290PXhoKSk6Yj5hLmV4cGlyYXRpb25UaW1lJiYoYS5leHBpcmF0aW9uVGltZT1iKTtYfHwoWj9EaCYmKEFoPWEsWT0xMDczNzQxODIzLFBoKGEsMTA3Mzc0MTgyMywhMSkpOjEwNzM3NDE4MjM9PT1iP1FoKDEwNzM3NDE4MjMsITEpOktoKGEsYikpfVxuZnVuY3Rpb24gT2goKXt2YXIgYT0wLGI9bnVsbDtpZihudWxsIT09Vylmb3IodmFyIGM9VyxkPXhoO251bGwhPT1kOyl7dmFyIGU9ZC5leHBpcmF0aW9uVGltZTtpZigwPT09ZSl7bnVsbD09PWN8fG51bGw9PT1XP3QoXCIyNDRcIik6dm9pZCAwO2lmKGQ9PT1kLm5leHRTY2hlZHVsZWRSb290KXt4aD1XPWQubmV4dFNjaGVkdWxlZFJvb3Q9bnVsbDticmVha31lbHNlIGlmKGQ9PT14aCl4aD1lPWQubmV4dFNjaGVkdWxlZFJvb3QsVy5uZXh0U2NoZWR1bGVkUm9vdD1lLGQubmV4dFNjaGVkdWxlZFJvb3Q9bnVsbDtlbHNlIGlmKGQ9PT1XKXtXPWM7Vy5uZXh0U2NoZWR1bGVkUm9vdD14aDtkLm5leHRTY2hlZHVsZWRSb290PW51bGw7YnJlYWt9ZWxzZSBjLm5leHRTY2hlZHVsZWRSb290PWQubmV4dFNjaGVkdWxlZFJvb3QsZC5uZXh0U2NoZWR1bGVkUm9vdD1udWxsO2Q9Yy5uZXh0U2NoZWR1bGVkUm9vdH1lbHNle2U+YSYmKGE9ZSxiPWQpO2lmKGQ9PT1XKWJyZWFrO2lmKDEwNzM3NDE4MjM9PT1cbmEpYnJlYWs7Yz1kO2Q9ZC5uZXh0U2NoZWR1bGVkUm9vdH19QWg9YjtZPWF9dmFyIFJoPSExO2Z1bmN0aW9uIG5oKCl7cmV0dXJuIFJoPyEwOmJhLnVuc3RhYmxlX3Nob3VsZFlpZWxkKCk/Umg9ITA6ITF9ZnVuY3Rpb24gTGgoKXt0cnl7aWYoIW5oKCkmJm51bGwhPT14aCl7SmgoKTt2YXIgYT14aDtkb3t2YXIgYj1hLmV4cGlyYXRpb25UaW1lOzAhPT1iJiZHaDw9YiYmKGEubmV4dEV4cGlyYXRpb25UaW1lVG9Xb3JrT249R2gpO2E9YS5uZXh0U2NoZWR1bGVkUm9vdH13aGlsZShhIT09eGgpfVFoKDAsITApfWZpbmFsbHl7Umg9ITF9fVxuZnVuY3Rpb24gUWgoYSxiKXtPaCgpO2lmKGIpZm9yKEpoKCksSGg9R2g7bnVsbCE9PUFoJiYwIT09WSYmYTw9WSYmIShSaCYmR2g+WSk7KVBoKEFoLFksR2g+WSksT2goKSxKaCgpLEhoPUdoO2Vsc2UgZm9yKDtudWxsIT09QWgmJjAhPT1ZJiZhPD1ZOylQaChBaCxZLCExKSxPaCgpO2ImJih5aD0wLHpoPW51bGwpOzAhPT1ZJiZLaChBaCxZKTt1aD0wO0loPW51bGw7aWYobnVsbCE9PUVoKWZvcihhPUVoLEVoPW51bGwsYj0wO2I8YS5sZW5ndGg7YisrKXt2YXIgYz1hW2JdO3RyeXtjLl9vbkNvbXBsZXRlKCl9Y2F0Y2goZCl7Qmh8fChCaD0hMCxDaD1kKX19aWYoQmgpdGhyb3cgYT1DaCxDaD1udWxsLEJoPSExLGE7fWZ1bmN0aW9uIE5oKGEsYil7WD90KFwiMjUzXCIpOnZvaWQgMDtBaD1hO1k9YjtQaChhLGIsITEpO1FoKDEwNzM3NDE4MjMsITEpfVxuZnVuY3Rpb24gUGgoYSxiLGMpe1g/dChcIjI0NVwiKTp2b2lkIDA7WD0hMDtpZihjKXt2YXIgZD1hLmZpbmlzaGVkV29yaztudWxsIT09ZD9TaChhLGQsYik6KGEuZmluaXNoZWRXb3JrPW51bGwsZD1hLnRpbWVvdXRIYW5kbGUsLTEhPT1kJiYoYS50aW1lb3V0SGFuZGxlPS0xLEVlKGQpKSxtaChhLGMpLGQ9YS5maW5pc2hlZFdvcmssbnVsbCE9PWQmJihuaCgpP2EuZmluaXNoZWRXb3JrPWQ6U2goYSxkLGIpKSl9ZWxzZSBkPWEuZmluaXNoZWRXb3JrLG51bGwhPT1kP1NoKGEsZCxiKTooYS5maW5pc2hlZFdvcms9bnVsbCxkPWEudGltZW91dEhhbmRsZSwtMSE9PWQmJihhLnRpbWVvdXRIYW5kbGU9LTEsRWUoZCkpLG1oKGEsYyksZD1hLmZpbmlzaGVkV29yayxudWxsIT09ZCYmU2goYSxkLGIpKTtYPSExfVxuZnVuY3Rpb24gU2goYSxiLGMpe3ZhciBkPWEuZmlyc3RCYXRjaDtpZihudWxsIT09ZCYmZC5fZXhwaXJhdGlvblRpbWU+PWMmJihudWxsPT09RWg/RWg9W2RdOkVoLnB1c2goZCksZC5fZGVmZXIpKXthLmZpbmlzaGVkV29yaz1iO2EuZXhwaXJhdGlvblRpbWU9MDtyZXR1cm59YS5maW5pc2hlZFdvcms9bnVsbDthPT09SWg/dWgrKzooSWg9YSx1aD0wKTtnaD1kaD0hMDthLmN1cnJlbnQ9PT1iP3QoXCIxNzdcIik6dm9pZCAwO2M9YS5wZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU7MD09PWM/dChcIjI2MVwiKTp2b2lkIDA7YS5wZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU9MDtkPWIuZXhwaXJhdGlvblRpbWU7dmFyIGU9Yi5jaGlsZEV4cGlyYXRpb25UaW1lO2Q9ZT5kP2U6ZDthLmRpZEVycm9yPSExOzA9PT1kPyhhLmVhcmxpZXN0UGVuZGluZ1RpbWU9MCxhLmxhdGVzdFBlbmRpbmdUaW1lPTAsYS5lYXJsaWVzdFN1c3BlbmRlZFRpbWU9MCxhLmxhdGVzdFN1c3BlbmRlZFRpbWU9MCxhLmxhdGVzdFBpbmdlZFRpbWU9XG4wKTooZDxhLmxhdGVzdFBpbmdlZFRpbWUmJihhLmxhdGVzdFBpbmdlZFRpbWU9MCksZT1hLmxhdGVzdFBlbmRpbmdUaW1lLDAhPT1lJiYoZT5kP2EuZWFybGllc3RQZW5kaW5nVGltZT1hLmxhdGVzdFBlbmRpbmdUaW1lPTA6YS5lYXJsaWVzdFBlbmRpbmdUaW1lPmQmJihhLmVhcmxpZXN0UGVuZGluZ1RpbWU9YS5sYXRlc3RQZW5kaW5nVGltZSkpLGU9YS5lYXJsaWVzdFN1c3BlbmRlZFRpbWUsMD09PWU/ZmYoYSxkKTpkPGEubGF0ZXN0U3VzcGVuZGVkVGltZT8oYS5lYXJsaWVzdFN1c3BlbmRlZFRpbWU9MCxhLmxhdGVzdFN1c3BlbmRlZFRpbWU9MCxhLmxhdGVzdFBpbmdlZFRpbWU9MCxmZihhLGQpKTpkPmUmJmZmKGEsZCkpO2dmKDAsYSk7YWguY3VycmVudD1udWxsOzE8Yi5lZmZlY3RUYWc/bnVsbCE9PWIubGFzdEVmZmVjdD8oYi5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YixkPWIuZmlyc3RFZmZlY3QpOmQ9YjpkPWIuZmlyc3RFZmZlY3Q7emU9SGQ7ZT1UZCgpO2lmKFVkKGUpKXtpZihcInNlbGVjdGlvblN0YXJ0XCJpblxuZSl2YXIgZj17c3RhcnQ6ZS5zZWxlY3Rpb25TdGFydCxlbmQ6ZS5zZWxlY3Rpb25FbmR9O2Vsc2UgYTp7Zj0oZj1lLm93bmVyRG9jdW1lbnQpJiZmLmRlZmF1bHRWaWV3fHx3aW5kb3c7dmFyIGc9Zi5nZXRTZWxlY3Rpb24mJmYuZ2V0U2VsZWN0aW9uKCk7aWYoZyYmMCE9PWcucmFuZ2VDb3VudCl7Zj1nLmFuY2hvck5vZGU7dmFyIGg9Zy5hbmNob3JPZmZzZXQsaz1nLmZvY3VzTm9kZTtnPWcuZm9jdXNPZmZzZXQ7dHJ5e2Yubm9kZVR5cGUsay5ub2RlVHlwZX1jYXRjaChkYil7Zj1udWxsO2JyZWFrIGF9dmFyIGw9MCxtPS0xLHI9LTEsdz0wLHk9MCxCPWUsUj1udWxsO2I6Zm9yKDs7KXtmb3IodmFyIHY7Oyl7QiE9PWZ8fDAhPT1oJiYzIT09Qi5ub2RlVHlwZXx8KG09bCtoKTtCIT09a3x8MCE9PWcmJjMhPT1CLm5vZGVUeXBlfHwocj1sK2cpOzM9PT1CLm5vZGVUeXBlJiYobCs9Qi5ub2RlVmFsdWUubGVuZ3RoKTtpZihudWxsPT09KHY9Qi5maXJzdENoaWxkKSlicmVhaztSPUI7Qj12fWZvcig7Oyl7aWYoQj09PVxuZSlicmVhayBiO1I9PT1mJiYrK3c9PT1oJiYobT1sKTtSPT09ayYmKyt5PT09ZyYmKHI9bCk7aWYobnVsbCE9PSh2PUIubmV4dFNpYmxpbmcpKWJyZWFrO0I9UjtSPUIucGFyZW50Tm9kZX1CPXZ9Zj0tMT09PW18fC0xPT09cj9udWxsOntzdGFydDptLGVuZDpyfX1lbHNlIGY9bnVsbH1mPWZ8fHtzdGFydDowLGVuZDowfX1lbHNlIGY9bnVsbDtBZT17Zm9jdXNlZEVsZW06ZSxzZWxlY3Rpb25SYW5nZTpmfTtIZD0hMTtmb3IoVj1kO251bGwhPT1WOyl7ZT0hMTtmPXZvaWQgMDt0cnl7Zm9yKDtudWxsIT09Vjspe2lmKFYuZWZmZWN0VGFnJjI1NilhOnt2YXIgcT1WLmFsdGVybmF0ZTtoPVY7c3dpdGNoKGgudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OmJyZWFrIGE7Y2FzZSAxOmlmKGguZWZmZWN0VGFnJjI1NiYmbnVsbCE9PXEpe3ZhciB1PXEubWVtb2l6ZWRQcm9wcyxBPXEubWVtb2l6ZWRTdGF0ZSxZZj1oLnN0YXRlTm9kZSxWaD1ZZi5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZShoLmVsZW1lbnRUeXBlPT09XG5oLnR5cGU/dTpQKGgudHlwZSx1KSxBKTtZZi5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZT1WaH1icmVhayBhO2Nhc2UgMzpjYXNlIDU6Y2FzZSA2OmNhc2UgNDpjYXNlIDE3OmJyZWFrIGE7ZGVmYXVsdDp0KFwiMTYzXCIpfX1WPVYubmV4dEVmZmVjdH19Y2F0Y2goZGIpe2U9ITAsZj1kYn1lJiYobnVsbD09PVY/dChcIjE3OFwiKTp2b2lkIDAsTWcoVixmKSxudWxsIT09ViYmKFY9Vi5uZXh0RWZmZWN0KSl9Zm9yKFY9ZDtudWxsIT09Vjspe3E9ITE7dT12b2lkIDA7dHJ5e2Zvcig7bnVsbCE9PVY7KXt2YXIgeD1WLmVmZmVjdFRhZzt4JjE2JiZwZShWLnN0YXRlTm9kZSxcIlwiKTtpZih4JjEyOCl7dmFyIEM9Vi5hbHRlcm5hdGU7aWYobnVsbCE9PUMpe3ZhciBwPUMucmVmO251bGwhPT1wJiYoXCJmdW5jdGlvblwiPT09dHlwZW9mIHA/cChudWxsKTpwLmN1cnJlbnQ9bnVsbCl9fXN3aXRjaCh4JjE0KXtjYXNlIDI6UmcoVik7Vi5lZmZlY3RUYWcmPS0zO2JyZWFrO2Nhc2UgNjpSZyhWKTtcblYuZWZmZWN0VGFnJj0tMztTZyhWLmFsdGVybmF0ZSxWKTticmVhaztjYXNlIDQ6U2coVi5hbHRlcm5hdGUsVik7YnJlYWs7Y2FzZSA4OkE9VjtQZyhBKTtBLnJldHVybj1udWxsO0EuY2hpbGQ9bnVsbDtBLm1lbW9pemVkU3RhdGU9bnVsbDtBLnVwZGF0ZVF1ZXVlPW51bGw7dmFyIEc9QS5hbHRlcm5hdGU7bnVsbCE9PUcmJihHLnJldHVybj1udWxsLEcuY2hpbGQ9bnVsbCxHLm1lbW9pemVkU3RhdGU9bnVsbCxHLnVwZGF0ZVF1ZXVlPW51bGwpfVY9Vi5uZXh0RWZmZWN0fX1jYXRjaChkYil7cT0hMCx1PWRifXEmJihudWxsPT09Vj90KFwiMTc4XCIpOnZvaWQgMCxNZyhWLHUpLG51bGwhPT1WJiYoVj1WLm5leHRFZmZlY3QpKX1wPUFlO0M9VGQoKTt4PXAuZm9jdXNlZEVsZW07cT1wLnNlbGVjdGlvblJhbmdlO2lmKEMhPT14JiZ4JiZ4Lm93bmVyRG9jdW1lbnQmJlNkKHgub3duZXJEb2N1bWVudC5kb2N1bWVudEVsZW1lbnQseCkpe251bGwhPT1xJiZVZCh4KSYmKEM9cS5zdGFydCxwPXEuZW5kLFxudm9pZCAwPT09cCYmKHA9QyksXCJzZWxlY3Rpb25TdGFydFwiaW4geD8oeC5zZWxlY3Rpb25TdGFydD1DLHguc2VsZWN0aW9uRW5kPU1hdGgubWluKHAseC52YWx1ZS5sZW5ndGgpKToocD0oQz14Lm93bmVyRG9jdW1lbnR8fGRvY3VtZW50KSYmQy5kZWZhdWx0Vmlld3x8d2luZG93LHAuZ2V0U2VsZWN0aW9uJiYocD1wLmdldFNlbGVjdGlvbigpLHU9eC50ZXh0Q29udGVudC5sZW5ndGgsRz1NYXRoLm1pbihxLnN0YXJ0LHUpLHE9dm9pZCAwPT09cS5lbmQ/RzpNYXRoLm1pbihxLmVuZCx1KSwhcC5leHRlbmQmJkc+cSYmKHU9cSxxPUcsRz11KSx1PVJkKHgsRyksQT1SZCh4LHEpLHUmJkEmJigxIT09cC5yYW5nZUNvdW50fHxwLmFuY2hvck5vZGUhPT11Lm5vZGV8fHAuYW5jaG9yT2Zmc2V0IT09dS5vZmZzZXR8fHAuZm9jdXNOb2RlIT09QS5ub2RlfHxwLmZvY3VzT2Zmc2V0IT09QS5vZmZzZXQpJiYoQz1DLmNyZWF0ZVJhbmdlKCksQy5zZXRTdGFydCh1Lm5vZGUsdS5vZmZzZXQpLHAucmVtb3ZlQWxsUmFuZ2VzKCksXG5HPnE/KHAuYWRkUmFuZ2UoQykscC5leHRlbmQoQS5ub2RlLEEub2Zmc2V0KSk6KEMuc2V0RW5kKEEubm9kZSxBLm9mZnNldCkscC5hZGRSYW5nZShDKSkpKSkpO0M9W107Zm9yKHA9eDtwPXAucGFyZW50Tm9kZTspMT09PXAubm9kZVR5cGUmJkMucHVzaCh7ZWxlbWVudDpwLGxlZnQ6cC5zY3JvbGxMZWZ0LHRvcDpwLnNjcm9sbFRvcH0pO1wiZnVuY3Rpb25cIj09PXR5cGVvZiB4LmZvY3VzJiZ4LmZvY3VzKCk7Zm9yKHg9MDt4PEMubGVuZ3RoO3grKylwPUNbeF0scC5lbGVtZW50LnNjcm9sbExlZnQ9cC5sZWZ0LHAuZWxlbWVudC5zY3JvbGxUb3A9cC50b3B9QWU9bnVsbDtIZD0hIXplO3plPW51bGw7YS5jdXJyZW50PWI7Zm9yKFY9ZDtudWxsIT09Vjspe2Q9ITE7eD12b2lkIDA7dHJ5e2ZvcihDPWM7bnVsbCE9PVY7KXt2YXIgRmI9Vi5lZmZlY3RUYWc7aWYoRmImMzYpe3ZhciBHYj1WLmFsdGVybmF0ZTtwPVY7Rz1DO3N3aXRjaChwLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTpicmVhaztcbmNhc2UgMTp2YXIgSGM9cC5zdGF0ZU5vZGU7aWYocC5lZmZlY3RUYWcmNClpZihudWxsPT09R2IpSGMuY29tcG9uZW50RGlkTW91bnQoKTtlbHNle3ZhciBpaT1wLmVsZW1lbnRUeXBlPT09cC50eXBlP0diLm1lbW9pemVkUHJvcHM6UChwLnR5cGUsR2IubWVtb2l6ZWRQcm9wcyk7SGMuY29tcG9uZW50RGlkVXBkYXRlKGlpLEdiLm1lbW9pemVkU3RhdGUsSGMuX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGUpfXZhciBEZz1wLnVwZGF0ZVF1ZXVlO251bGwhPT1EZyYmdWYocCxEZyxIYyxHKTticmVhaztjYXNlIDM6dmFyIEVnPXAudXBkYXRlUXVldWU7aWYobnVsbCE9PUVnKXtxPW51bGw7aWYobnVsbCE9PXAuY2hpbGQpc3dpdGNoKHAuY2hpbGQudGFnKXtjYXNlIDU6cT1wLmNoaWxkLnN0YXRlTm9kZTticmVhaztjYXNlIDE6cT1wLmNoaWxkLnN0YXRlTm9kZX11ZihwLEVnLHEsRyl9YnJlYWs7Y2FzZSA1OnZhciBqaT1wLnN0YXRlTm9kZTtudWxsPT09R2ImJnAuZWZmZWN0VGFnJlxuNCYmQmUocC50eXBlLHAubWVtb2l6ZWRQcm9wcykmJmppLmZvY3VzKCk7YnJlYWs7Y2FzZSA2OmJyZWFrO2Nhc2UgNDpicmVhaztjYXNlIDEyOmJyZWFrO2Nhc2UgMTM6YnJlYWs7Y2FzZSAxNzpicmVhaztkZWZhdWx0OnQoXCIxNjNcIil9fWlmKEZiJjEyOCl7dmFyIEljPVYucmVmO2lmKG51bGwhPT1JYyl7dmFyIEZnPVYuc3RhdGVOb2RlO3N3aXRjaChWLnRhZyl7Y2FzZSA1OnZhciBjZT1GZzticmVhaztkZWZhdWx0OmNlPUZnfVwiZnVuY3Rpb25cIj09PXR5cGVvZiBJYz9JYyhjZSk6SWMuY3VycmVudD1jZX19Vj1WLm5leHRFZmZlY3R9fWNhdGNoKGRiKXtkPSEwLHg9ZGJ9ZCYmKG51bGw9PT1WP3QoXCIxNzhcIik6dm9pZCAwLE1nKFYseCksbnVsbCE9PVYmJihWPVYubmV4dEVmZmVjdCkpfWRoPWdoPSExO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBUZSYmVGUoYi5zdGF0ZU5vZGUpO0ZiPWIuZXhwaXJhdGlvblRpbWU7Yj1iLmNoaWxkRXhwaXJhdGlvblRpbWU7Yj1iPkZiP2I6RmI7MD09PWImJihZZz1cbm51bGwpO2EuZXhwaXJhdGlvblRpbWU9YjthLmZpbmlzaGVkV29yaz1udWxsfWZ1bmN0aW9uIFdnKGEpe251bGw9PT1BaD90KFwiMjQ2XCIpOnZvaWQgMDtBaC5leHBpcmF0aW9uVGltZT0wO0JofHwoQmg9ITAsQ2g9YSl9ZnVuY3Rpb24gVGgoYSxiKXt2YXIgYz1aO1o9ITA7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7KFo9Yyl8fFh8fFFoKDEwNzM3NDE4MjMsITEpfX1mdW5jdGlvbiBVaChhLGIpe2lmKFomJiFEaCl7RGg9ITA7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7RGg9ITF9fXJldHVybiBhKGIpfWZ1bmN0aW9uIFdoKGEsYixjKXtpZihxaClyZXR1cm4gYShiLGMpO1p8fFh8fDA9PT1yaHx8KFFoKHJoLCExKSxyaD0wKTt2YXIgZD1xaCxlPVo7Wj1xaD0hMDt0cnl7cmV0dXJuIGEoYixjKX1maW5hbGx5e3FoPWQsKFo9ZSl8fFh8fFFoKDEwNzM3NDE4MjMsITEpfX1cbmZ1bmN0aW9uIFhoKGEsYixjLGQsZSl7dmFyIGY9Yi5jdXJyZW50O2E6aWYoYyl7Yz1jLl9yZWFjdEludGVybmFsRmliZXI7Yjp7Mj09PWtkKGMpJiYxPT09Yy50YWc/dm9pZCAwOnQoXCIxNzBcIik7dmFyIGc9Yztkb3tzd2l0Y2goZy50YWcpe2Nhc2UgMzpnPWcuc3RhdGVOb2RlLmNvbnRleHQ7YnJlYWsgYjtjYXNlIDE6aWYoTShnLnR5cGUpKXtnPWcuc3RhdGVOb2RlLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0O2JyZWFrIGJ9fWc9Zy5yZXR1cm59d2hpbGUobnVsbCE9PWcpO3QoXCIxNzFcIik7Zz12b2lkIDB9aWYoMT09PWMudGFnKXt2YXIgaD1jLnR5cGU7aWYoTShoKSl7Yz1RZShjLGgsZyk7YnJlYWsgYX19Yz1nfWVsc2UgYz1LZTtudWxsPT09Yi5jb250ZXh0P2IuY29udGV4dD1jOmIucGVuZGluZ0NvbnRleHQ9YztiPWU7ZT1uZihkKTtlLnBheWxvYWQ9e2VsZW1lbnQ6YX07Yj12b2lkIDA9PT1iP251bGw6YjtudWxsIT09YiYmKGUuY2FsbGJhY2s9Yik7XG5UZigpO3BmKGYsZSk7VWYoZixkKTtyZXR1cm4gZH1mdW5jdGlvbiBZaChhLGIsYyxkKXt2YXIgZT1iLmN1cnJlbnQsZj1SZigpO2U9U2YoZixlKTtyZXR1cm4gWGgoYSxiLGMsZSxkKX1mdW5jdGlvbiBaaChhKXthPWEuY3VycmVudDtpZighYS5jaGlsZClyZXR1cm4gbnVsbDtzd2l0Y2goYS5jaGlsZC50YWcpe2Nhc2UgNTpyZXR1cm4gYS5jaGlsZC5zdGF0ZU5vZGU7ZGVmYXVsdDpyZXR1cm4gYS5jaGlsZC5zdGF0ZU5vZGV9fWZ1bmN0aW9uICRoKGEsYixjKXt2YXIgZD0zPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1szXT9hcmd1bWVudHNbM106bnVsbDtyZXR1cm57JCR0eXBlb2Y6JGIsa2V5Om51bGw9PWQ/bnVsbDpcIlwiK2QsY2hpbGRyZW46YSxjb250YWluZXJJbmZvOmIsaW1wbGVtZW50YXRpb246Y319XG5DYj1mdW5jdGlvbihhLGIsYyl7c3dpdGNoKGIpe2Nhc2UgXCJpbnB1dFwiOkNjKGEsYyk7Yj1jLm5hbWU7aWYoXCJyYWRpb1wiPT09Yy50eXBlJiZudWxsIT1iKXtmb3IoYz1hO2MucGFyZW50Tm9kZTspYz1jLnBhcmVudE5vZGU7Yz1jLnF1ZXJ5U2VsZWN0b3JBbGwoXCJpbnB1dFtuYW1lPVwiK0pTT04uc3RyaW5naWZ5KFwiXCIrYikrJ11bdHlwZT1cInJhZGlvXCJdJyk7Zm9yKGI9MDtiPGMubGVuZ3RoO2IrKyl7dmFyIGQ9Y1tiXTtpZihkIT09YSYmZC5mb3JtPT09YS5mb3JtKXt2YXIgZT1MYShkKTtlP3ZvaWQgMDp0KFwiOTBcIik7V2IoZCk7Q2MoZCxlKX19fWJyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmllKGEsYyk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmI9Yy52YWx1ZSxudWxsIT1iJiZmZShhLCEhYy5tdWx0aXBsZSxiLCExKX19O1xuZnVuY3Rpb24gYWkoYSl7dmFyIGI9MTA3Mzc0MTgyMi0yNSooKCgxMDczNzQxODIyLVJmKCkrNTAwKS8yNXwwKSsxKTtiPj1iaCYmKGI9YmgtMSk7dGhpcy5fZXhwaXJhdGlvblRpbWU9Ymg9Yjt0aGlzLl9yb290PWE7dGhpcy5fY2FsbGJhY2tzPXRoaXMuX25leHQ9bnVsbDt0aGlzLl9oYXNDaGlsZHJlbj10aGlzLl9kaWRDb21wbGV0ZT0hMTt0aGlzLl9jaGlsZHJlbj1udWxsO3RoaXMuX2RlZmVyPSEwfWFpLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24oYSl7dGhpcy5fZGVmZXI/dm9pZCAwOnQoXCIyNTBcIik7dGhpcy5faGFzQ2hpbGRyZW49ITA7dGhpcy5fY2hpbGRyZW49YTt2YXIgYj10aGlzLl9yb290Ll9pbnRlcm5hbFJvb3QsYz10aGlzLl9leHBpcmF0aW9uVGltZSxkPW5ldyBiaTtYaChhLGIsbnVsbCxjLGQuX29uQ29tbWl0KTtyZXR1cm4gZH07XG5haS5wcm90b3R5cGUudGhlbj1mdW5jdGlvbihhKXtpZih0aGlzLl9kaWRDb21wbGV0ZSlhKCk7ZWxzZXt2YXIgYj10aGlzLl9jYWxsYmFja3M7bnVsbD09PWImJihiPXRoaXMuX2NhbGxiYWNrcz1bXSk7Yi5wdXNoKGEpfX07XG5haS5wcm90b3R5cGUuY29tbWl0PWZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5fcm9vdC5faW50ZXJuYWxSb290LGI9YS5maXJzdEJhdGNoO3RoaXMuX2RlZmVyJiZudWxsIT09Yj92b2lkIDA6dChcIjI1MVwiKTtpZih0aGlzLl9oYXNDaGlsZHJlbil7dmFyIGM9dGhpcy5fZXhwaXJhdGlvblRpbWU7aWYoYiE9PXRoaXMpe3RoaXMuX2hhc0NoaWxkcmVuJiYoYz10aGlzLl9leHBpcmF0aW9uVGltZT1iLl9leHBpcmF0aW9uVGltZSx0aGlzLnJlbmRlcih0aGlzLl9jaGlsZHJlbikpO2Zvcih2YXIgZD1udWxsLGU9YjtlIT09dGhpczspZD1lLGU9ZS5fbmV4dDtudWxsPT09ZD90KFwiMjUxXCIpOnZvaWQgMDtkLl9uZXh0PWUuX25leHQ7dGhpcy5fbmV4dD1iO2EuZmlyc3RCYXRjaD10aGlzfXRoaXMuX2RlZmVyPSExO05oKGEsYyk7Yj10aGlzLl9uZXh0O3RoaXMuX25leHQ9bnVsbDtiPWEuZmlyc3RCYXRjaD1iO251bGwhPT1iJiZiLl9oYXNDaGlsZHJlbiYmYi5yZW5kZXIoYi5fY2hpbGRyZW4pfWVsc2UgdGhpcy5fbmV4dD1cbm51bGwsdGhpcy5fZGVmZXI9ITF9O2FpLnByb3RvdHlwZS5fb25Db21wbGV0ZT1mdW5jdGlvbigpe2lmKCF0aGlzLl9kaWRDb21wbGV0ZSl7dGhpcy5fZGlkQ29tcGxldGU9ITA7dmFyIGE9dGhpcy5fY2FsbGJhY2tzO2lmKG51bGwhPT1hKWZvcih2YXIgYj0wO2I8YS5sZW5ndGg7YisrKSgwLGFbYl0pKCl9fTtmdW5jdGlvbiBiaSgpe3RoaXMuX2NhbGxiYWNrcz1udWxsO3RoaXMuX2RpZENvbW1pdD0hMTt0aGlzLl9vbkNvbW1pdD10aGlzLl9vbkNvbW1pdC5iaW5kKHRoaXMpfWJpLnByb3RvdHlwZS50aGVuPWZ1bmN0aW9uKGEpe2lmKHRoaXMuX2RpZENvbW1pdClhKCk7ZWxzZXt2YXIgYj10aGlzLl9jYWxsYmFja3M7bnVsbD09PWImJihiPXRoaXMuX2NhbGxiYWNrcz1bXSk7Yi5wdXNoKGEpfX07XG5iaS5wcm90b3R5cGUuX29uQ29tbWl0PWZ1bmN0aW9uKCl7aWYoIXRoaXMuX2RpZENvbW1pdCl7dGhpcy5fZGlkQ29tbWl0PSEwO3ZhciBhPXRoaXMuX2NhbGxiYWNrcztpZihudWxsIT09YSlmb3IodmFyIGI9MDtiPGEubGVuZ3RoO2IrKyl7dmFyIGM9YVtiXTtcImZ1bmN0aW9uXCIhPT10eXBlb2YgYz90KFwiMTkxXCIsYyk6dm9pZCAwO2MoKX19fTtcbmZ1bmN0aW9uIGNpKGEsYixjKXtiPU4oMyxudWxsLG51bGwsYj8zOjApO2E9e2N1cnJlbnQ6Yixjb250YWluZXJJbmZvOmEscGVuZGluZ0NoaWxkcmVuOm51bGwscGluZ0NhY2hlOm51bGwsZWFybGllc3RQZW5kaW5nVGltZTowLGxhdGVzdFBlbmRpbmdUaW1lOjAsZWFybGllc3RTdXNwZW5kZWRUaW1lOjAsbGF0ZXN0U3VzcGVuZGVkVGltZTowLGxhdGVzdFBpbmdlZFRpbWU6MCxkaWRFcnJvcjohMSxwZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU6MCxmaW5pc2hlZFdvcms6bnVsbCx0aW1lb3V0SGFuZGxlOi0xLGNvbnRleHQ6bnVsbCxwZW5kaW5nQ29udGV4dDpudWxsLGh5ZHJhdGU6YyxuZXh0RXhwaXJhdGlvblRpbWVUb1dvcmtPbjowLGV4cGlyYXRpb25UaW1lOjAsZmlyc3RCYXRjaDpudWxsLG5leHRTY2hlZHVsZWRSb290Om51bGx9O3RoaXMuX2ludGVybmFsUm9vdD1iLnN0YXRlTm9kZT1hfVxuY2kucHJvdG90eXBlLnJlbmRlcj1mdW5jdGlvbihhLGIpe3ZhciBjPXRoaXMuX2ludGVybmFsUm9vdCxkPW5ldyBiaTtiPXZvaWQgMD09PWI/bnVsbDpiO251bGwhPT1iJiZkLnRoZW4oYik7WWgoYSxjLG51bGwsZC5fb25Db21taXQpO3JldHVybiBkfTtjaS5wcm90b3R5cGUudW5tb3VudD1mdW5jdGlvbihhKXt2YXIgYj10aGlzLl9pbnRlcm5hbFJvb3QsYz1uZXcgYmk7YT12b2lkIDA9PT1hP251bGw6YTtudWxsIT09YSYmYy50aGVuKGEpO1loKG51bGwsYixudWxsLGMuX29uQ29tbWl0KTtyZXR1cm4gY307Y2kucHJvdG90eXBlLmxlZ2FjeV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcj1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9dGhpcy5faW50ZXJuYWxSb290LGU9bmV3IGJpO2M9dm9pZCAwPT09Yz9udWxsOmM7bnVsbCE9PWMmJmUudGhlbihjKTtZaChiLGQsYSxlLl9vbkNvbW1pdCk7cmV0dXJuIGV9O1xuY2kucHJvdG90eXBlLmNyZWF0ZUJhdGNoPWZ1bmN0aW9uKCl7dmFyIGE9bmV3IGFpKHRoaXMpLGI9YS5fZXhwaXJhdGlvblRpbWUsYz10aGlzLl9pbnRlcm5hbFJvb3QsZD1jLmZpcnN0QmF0Y2g7aWYobnVsbD09PWQpYy5maXJzdEJhdGNoPWEsYS5fbmV4dD1udWxsO2Vsc2V7Zm9yKGM9bnVsbDtudWxsIT09ZCYmZC5fZXhwaXJhdGlvblRpbWU+PWI7KWM9ZCxkPWQuX25leHQ7YS5fbmV4dD1kO251bGwhPT1jJiYoYy5fbmV4dD1hKX1yZXR1cm4gYX07ZnVuY3Rpb24gZGkoYSl7cmV0dXJuISghYXx8MSE9PWEubm9kZVR5cGUmJjkhPT1hLm5vZGVUeXBlJiYxMSE9PWEubm9kZVR5cGUmJig4IT09YS5ub2RlVHlwZXx8XCIgcmVhY3QtbW91bnQtcG9pbnQtdW5zdGFibGUgXCIhPT1hLm5vZGVWYWx1ZSkpfUtiPVRoO0xiPVdoO01iPWZ1bmN0aW9uKCl7WHx8MD09PXJofHwoUWgocmgsITEpLHJoPTApfTtcbmZ1bmN0aW9uIGVpKGEsYil7Ynx8KGI9YT85PT09YS5ub2RlVHlwZT9hLmRvY3VtZW50RWxlbWVudDphLmZpcnN0Q2hpbGQ6bnVsbCxiPSEoIWJ8fDEhPT1iLm5vZGVUeXBlfHwhYi5oYXNBdHRyaWJ1dGUoXCJkYXRhLXJlYWN0cm9vdFwiKSkpO2lmKCFiKWZvcih2YXIgYztjPWEubGFzdENoaWxkOylhLnJlbW92ZUNoaWxkKGMpO3JldHVybiBuZXcgY2koYSwhMSxiKX1cbmZ1bmN0aW9uIGZpKGEsYixjLGQsZSl7ZGkoYyk/dm9pZCAwOnQoXCIyMDBcIik7dmFyIGY9Yy5fcmVhY3RSb290Q29udGFpbmVyO2lmKGYpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlKXt2YXIgZz1lO2U9ZnVuY3Rpb24oKXt2YXIgYT1aaChmLl9pbnRlcm5hbFJvb3QpO2cuY2FsbChhKX19bnVsbCE9YT9mLmxlZ2FjeV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcihhLGIsZSk6Zi5yZW5kZXIoYixlKX1lbHNle2Y9Yy5fcmVhY3RSb290Q29udGFpbmVyPWVpKGMsZCk7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGUpe3ZhciBoPWU7ZT1mdW5jdGlvbigpe3ZhciBhPVpoKGYuX2ludGVybmFsUm9vdCk7aC5jYWxsKGEpfX1VaChmdW5jdGlvbigpe251bGwhPWE/Zi5sZWdhY3lfcmVuZGVyU3VidHJlZUludG9Db250YWluZXIoYSxiLGUpOmYucmVuZGVyKGIsZSl9KX1yZXR1cm4gWmgoZi5faW50ZXJuYWxSb290KX1cbmZ1bmN0aW9uIGdpKGEsYil7dmFyIGM9Mjxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOm51bGw7ZGkoYik/dm9pZCAwOnQoXCIyMDBcIik7cmV0dXJuICRoKGEsYixudWxsLGMpfVxudmFyIGtpPXtjcmVhdGVQb3J0YWw6Z2ksZmluZERPTU5vZGU6ZnVuY3Rpb24oYSl7aWYobnVsbD09YSlyZXR1cm4gbnVsbDtpZigxPT09YS5ub2RlVHlwZSlyZXR1cm4gYTt2YXIgYj1hLl9yZWFjdEludGVybmFsRmliZXI7dm9pZCAwPT09YiYmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLnJlbmRlcj90KFwiMTg4XCIpOnQoXCIyNjhcIixPYmplY3Qua2V5cyhhKSkpO2E9bmQoYik7YT1udWxsPT09YT9udWxsOmEuc3RhdGVOb2RlO3JldHVybiBhfSxoeWRyYXRlOmZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gZmkobnVsbCxhLGIsITAsYyl9LHJlbmRlcjpmdW5jdGlvbihhLGIsYyl7cmV0dXJuIGZpKG51bGwsYSxiLCExLGMpfSx1bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcjpmdW5jdGlvbihhLGIsYyxkKXtudWxsPT1hfHx2b2lkIDA9PT1hLl9yZWFjdEludGVybmFsRmliZXI/dChcIjM4XCIpOnZvaWQgMDtyZXR1cm4gZmkoYSxiLGMsITEsZCl9LHVubW91bnRDb21wb25lbnRBdE5vZGU6ZnVuY3Rpb24oYSl7ZGkoYSk/XG52b2lkIDA6dChcIjQwXCIpO3JldHVybiBhLl9yZWFjdFJvb3RDb250YWluZXI/KFVoKGZ1bmN0aW9uKCl7ZmkobnVsbCxudWxsLGEsITEsZnVuY3Rpb24oKXthLl9yZWFjdFJvb3RDb250YWluZXI9bnVsbH0pfSksITApOiExfSx1bnN0YWJsZV9jcmVhdGVQb3J0YWw6ZnVuY3Rpb24oKXtyZXR1cm4gZ2kuYXBwbHkodm9pZCAwLGFyZ3VtZW50cyl9LHVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzOlRoLHVuc3RhYmxlX2ludGVyYWN0aXZlVXBkYXRlczpXaCxmbHVzaFN5bmM6ZnVuY3Rpb24oYSxiKXtYP3QoXCIxODdcIik6dm9pZCAwO3ZhciBjPVo7Wj0hMDt0cnl7cmV0dXJuIHdoKGEsYil9ZmluYWxseXtaPWMsUWgoMTA3Mzc0MTgyMywhMSl9fSx1bnN0YWJsZV9jcmVhdGVSb290OmhpLHVuc3RhYmxlX2ZsdXNoQ29udHJvbGxlZDpmdW5jdGlvbihhKXt2YXIgYj1aO1o9ITA7dHJ5e3doKGEpfWZpbmFsbHl7KFo9Yil8fFh8fFFoKDEwNzM3NDE4MjMsITEpfX0sX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ6e0V2ZW50czpbSmEsXG5LYSxMYSxDYS5pbmplY3RFdmVudFBsdWdpbnNCeU5hbWUscWEsUmEsZnVuY3Rpb24oYSl7emEoYSxRYSl9LEliLEpiLEpkLEVhXX19O2Z1bmN0aW9uIGhpKGEsYil7ZGkoYSk/dm9pZCAwOnQoXCIyOTlcIixcInVuc3RhYmxlX2NyZWF0ZVJvb3RcIik7cmV0dXJuIG5ldyBjaShhLCEwLG51bGwhPWImJiEwPT09Yi5oeWRyYXRlKX0oZnVuY3Rpb24oYSl7dmFyIGI9YS5maW5kRmliZXJCeUhvc3RJbnN0YW5jZTtyZXR1cm4gV2Uobih7fSxhLHtvdmVycmlkZVByb3BzOm51bGwsZmluZEhvc3RJbnN0YW5jZUJ5RmliZXI6ZnVuY3Rpb24oYSl7YT1uZChhKTtyZXR1cm4gbnVsbD09PWE/bnVsbDphLnN0YXRlTm9kZX0sZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6ZnVuY3Rpb24oYSl7cmV0dXJuIGI/YihhKTpudWxsfX0pKX0pKHtmaW5kRmliZXJCeUhvc3RJbnN0YW5jZTpJYSxidW5kbGVUeXBlOjAsdmVyc2lvbjpcIjE2LjcuMFwiLHJlbmRlcmVyUGFja2FnZU5hbWU6XCJyZWFjdC1kb21cIn0pO1xudmFyIGxpPXtkZWZhdWx0OmtpfSxtaT1saSYma2l8fGxpO21vZHVsZS5leHBvcnRzPW1pLmRlZmF1bHR8fG1pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3NjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9zY2hlZHVsZXIuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MC4xMi4wXG4gKiBzY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7dmFyIGM9bnVsbCxmPSExLGg9MyxrPS0xLGw9LTEsbT0hMSxuPSExO2Z1bmN0aW9uIHAoKXtpZighbSl7dmFyIGE9Yy5leHBpcmF0aW9uVGltZTtuP3EoKTpuPSEwO3IodCxhKX19XG5mdW5jdGlvbiB1KCl7dmFyIGE9YyxiPWMubmV4dDtpZihjPT09YiljPW51bGw7ZWxzZXt2YXIgZD1jLnByZXZpb3VzO2M9ZC5uZXh0PWI7Yi5wcmV2aW91cz1kfWEubmV4dD1hLnByZXZpb3VzPW51bGw7ZD1hLmNhbGxiYWNrO2I9YS5leHBpcmF0aW9uVGltZTthPWEucHJpb3JpdHlMZXZlbDt2YXIgZT1oLFE9bDtoPWE7bD1iO3RyeXt2YXIgZz1kKCl9ZmluYWxseXtoPWUsbD1RfWlmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnKWlmKGc9e2NhbGxiYWNrOmcscHJpb3JpdHlMZXZlbDphLGV4cGlyYXRpb25UaW1lOmIsbmV4dDpudWxsLHByZXZpb3VzOm51bGx9LG51bGw9PT1jKWM9Zy5uZXh0PWcucHJldmlvdXM9ZztlbHNle2Q9bnVsbDthPWM7ZG97aWYoYS5leHBpcmF0aW9uVGltZT49Yil7ZD1hO2JyZWFrfWE9YS5uZXh0fXdoaWxlKGEhPT1jKTtudWxsPT09ZD9kPWM6ZD09PWMmJihjPWcscCgpKTtiPWQucHJldmlvdXM7Yi5uZXh0PWQucHJldmlvdXM9ZztnLm5leHQ9ZDtnLnByZXZpb3VzPVxuYn19ZnVuY3Rpb24gdigpe2lmKC0xPT09ayYmbnVsbCE9PWMmJjE9PT1jLnByaW9yaXR5TGV2ZWwpe209ITA7dHJ5e2RvIHUoKTt3aGlsZShudWxsIT09YyYmMT09PWMucHJpb3JpdHlMZXZlbCl9ZmluYWxseXttPSExLG51bGwhPT1jP3AoKTpuPSExfX19ZnVuY3Rpb24gdChhKXttPSEwO3ZhciBiPWY7Zj1hO3RyeXtpZihhKWZvcig7bnVsbCE9PWM7KXt2YXIgZD1leHBvcnRzLnVuc3RhYmxlX25vdygpO2lmKGMuZXhwaXJhdGlvblRpbWU8PWQpe2RvIHUoKTt3aGlsZShudWxsIT09YyYmYy5leHBpcmF0aW9uVGltZTw9ZCl9ZWxzZSBicmVha31lbHNlIGlmKG51bGwhPT1jKXtkbyB1KCk7d2hpbGUobnVsbCE9PWMmJiF3KCkpfX1maW5hbGx5e209ITEsZj1iLG51bGwhPT1jP3AoKTpuPSExLHYoKX19XG52YXIgeD1EYXRlLHk9XCJmdW5jdGlvblwiPT09dHlwZW9mIHNldFRpbWVvdXQ/c2V0VGltZW91dDp2b2lkIDAsej1cImZ1bmN0aW9uXCI9PT10eXBlb2YgY2xlYXJUaW1lb3V0P2NsZWFyVGltZW91dDp2b2lkIDAsQT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgcmVxdWVzdEFuaW1hdGlvbkZyYW1lP3JlcXVlc3RBbmltYXRpb25GcmFtZTp2b2lkIDAsQj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgY2FuY2VsQW5pbWF0aW9uRnJhbWU/Y2FuY2VsQW5pbWF0aW9uRnJhbWU6dm9pZCAwLEMsRDtmdW5jdGlvbiBFKGEpe0M9QShmdW5jdGlvbihiKXt6KEQpO2EoYil9KTtEPXkoZnVuY3Rpb24oKXtCKEMpO2EoZXhwb3J0cy51bnN0YWJsZV9ub3coKSl9LDEwMCl9XG5pZihcIm9iamVjdFwiPT09dHlwZW9mIHBlcmZvcm1hbmNlJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgcGVyZm9ybWFuY2Uubm93KXt2YXIgRj1wZXJmb3JtYW5jZTtleHBvcnRzLnVuc3RhYmxlX25vdz1mdW5jdGlvbigpe3JldHVybiBGLm5vdygpfX1lbHNlIGV4cG9ydHMudW5zdGFibGVfbm93PWZ1bmN0aW9uKCl7cmV0dXJuIHgubm93KCl9O3ZhciByLHEsdyxHPW51bGw7XCJ1bmRlZmluZWRcIiE9PXR5cGVvZiB3aW5kb3c/Rz13aW5kb3c6XCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBnbG9iYWwmJihHPWdsb2JhbCk7XG5pZihHJiZHLl9zY2hlZE1vY2spe3ZhciBIPUcuX3NjaGVkTW9jaztyPUhbMF07cT1IWzFdO3c9SFsyXTtleHBvcnRzLnVuc3RhYmxlX25vdz1IWzNdfWVsc2UgaWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3d8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBNZXNzYWdlQ2hhbm5lbCl7dmFyIEk9bnVsbCxKPWZ1bmN0aW9uKGEpe2lmKG51bGwhPT1JKXRyeXtJKGEpfWZpbmFsbHl7ST1udWxsfX07cj1mdW5jdGlvbihhKXtudWxsIT09ST9zZXRUaW1lb3V0KHIsMCxhKTooST1hLHNldFRpbWVvdXQoSiwwLCExKSl9O3E9ZnVuY3Rpb24oKXtJPW51bGx9O3c9ZnVuY3Rpb24oKXtyZXR1cm4hMX19ZWxzZXtcInVuZGVmaW5lZFwiIT09dHlwZW9mIGNvbnNvbGUmJihcImZ1bmN0aW9uXCIhPT10eXBlb2YgQSYmY29uc29sZS5lcnJvcihcIlRoaXMgYnJvd3NlciBkb2Vzbid0IHN1cHBvcnQgcmVxdWVzdEFuaW1hdGlvbkZyYW1lLiBNYWtlIHN1cmUgdGhhdCB5b3UgbG9hZCBhIHBvbHlmaWxsIGluIG9sZGVyIGJyb3dzZXJzLiBodHRwczovL2ZiLm1lL3JlYWN0LXBvbHlmaWxsc1wiKSxcblwiZnVuY3Rpb25cIiE9PXR5cGVvZiBCJiZjb25zb2xlLmVycm9yKFwiVGhpcyBicm93c2VyIGRvZXNuJ3Qgc3VwcG9ydCBjYW5jZWxBbmltYXRpb25GcmFtZS4gTWFrZSBzdXJlIHRoYXQgeW91IGxvYWQgYSBwb2x5ZmlsbCBpbiBvbGRlciBicm93c2Vycy4gaHR0cHM6Ly9mYi5tZS9yZWFjdC1wb2x5ZmlsbHNcIikpO3ZhciBLPW51bGwsTD0hMSxNPS0xLE49ITEsTz0hMSxQPTAsUj0zMyxTPTMzO3c9ZnVuY3Rpb24oKXtyZXR1cm4gUDw9ZXhwb3J0cy51bnN0YWJsZV9ub3coKX07dmFyIFQ9bmV3IE1lc3NhZ2VDaGFubmVsLFU9VC5wb3J0MjtULnBvcnQxLm9ubWVzc2FnZT1mdW5jdGlvbigpe0w9ITE7dmFyIGE9SyxiPU07Sz1udWxsO009LTE7dmFyIGQ9ZXhwb3J0cy51bnN0YWJsZV9ub3coKSxlPSExO2lmKDA+PVAtZClpZigtMSE9PWImJmI8PWQpZT0hMDtlbHNle058fChOPSEwLEUoVikpO0s9YTtNPWI7cmV0dXJufWlmKG51bGwhPT1hKXtPPSEwO3RyeXthKGUpfWZpbmFsbHl7Tz0hMX19fTtcbnZhciBWPWZ1bmN0aW9uKGEpe2lmKG51bGwhPT1LKXtFKFYpO3ZhciBiPWEtUCtTO2I8UyYmUjxTPyg4PmImJihiPTgpLFM9YjxSP1I6Yik6Uj1iO1A9YStTO0x8fChMPSEwLFUucG9zdE1lc3NhZ2Uodm9pZCAwKSl9ZWxzZSBOPSExfTtyPWZ1bmN0aW9uKGEsYil7Sz1hO009YjtPfHwwPmI/VS5wb3N0TWVzc2FnZSh2b2lkIDApOk58fChOPSEwLEUoVikpfTtxPWZ1bmN0aW9uKCl7Sz1udWxsO0w9ITE7TT0tMX19ZXhwb3J0cy51bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eT0xO2V4cG9ydHMudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHk9MjtleHBvcnRzLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5PTM7ZXhwb3J0cy51bnN0YWJsZV9JZGxlUHJpb3JpdHk9NTtleHBvcnRzLnVuc3RhYmxlX0xvd1ByaW9yaXR5PTQ7XG5leHBvcnRzLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eT1mdW5jdGlvbihhLGIpe3N3aXRjaChhKXtjYXNlIDE6Y2FzZSAyOmNhc2UgMzpjYXNlIDQ6Y2FzZSA1OmJyZWFrO2RlZmF1bHQ6YT0zfXZhciBkPWgsZT1rO2g9YTtrPWV4cG9ydHMudW5zdGFibGVfbm93KCk7dHJ5e3JldHVybiBiKCl9ZmluYWxseXtoPWQsaz1lLHYoKX19O1xuZXhwb3J0cy51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrPWZ1bmN0aW9uKGEsYil7dmFyIGQ9LTEhPT1rP2s6ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGImJm51bGwhPT1iJiZcIm51bWJlclwiPT09dHlwZW9mIGIudGltZW91dCliPWQrYi50aW1lb3V0O2Vsc2Ugc3dpdGNoKGgpe2Nhc2UgMTpiPWQrLTE7YnJlYWs7Y2FzZSAyOmI9ZCsyNTA7YnJlYWs7Y2FzZSA1OmI9ZCsxMDczNzQxODIzO2JyZWFrO2Nhc2UgNDpiPWQrMUU0O2JyZWFrO2RlZmF1bHQ6Yj1kKzVFM31hPXtjYWxsYmFjazphLHByaW9yaXR5TGV2ZWw6aCxleHBpcmF0aW9uVGltZTpiLG5leHQ6bnVsbCxwcmV2aW91czpudWxsfTtpZihudWxsPT09YyljPWEubmV4dD1hLnByZXZpb3VzPWEscCgpO2Vsc2V7ZD1udWxsO3ZhciBlPWM7ZG97aWYoZS5leHBpcmF0aW9uVGltZT5iKXtkPWU7YnJlYWt9ZT1lLm5leHR9d2hpbGUoZSE9PWMpO251bGw9PT1kP2Q9YzpkPT09YyYmKGM9YSxwKCkpO1xuYj1kLnByZXZpb3VzO2IubmV4dD1kLnByZXZpb3VzPWE7YS5uZXh0PWQ7YS5wcmV2aW91cz1ifXJldHVybiBhfTtleHBvcnRzLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrPWZ1bmN0aW9uKGEpe3ZhciBiPWEubmV4dDtpZihudWxsIT09Yil7aWYoYj09PWEpYz1udWxsO2Vsc2V7YT09PWMmJihjPWIpO3ZhciBkPWEucHJldmlvdXM7ZC5uZXh0PWI7Yi5wcmV2aW91cz1kfWEubmV4dD1hLnByZXZpb3VzPW51bGx9fTtleHBvcnRzLnVuc3RhYmxlX3dyYXBDYWxsYmFjaz1mdW5jdGlvbihhKXt2YXIgYj1oO3JldHVybiBmdW5jdGlvbigpe3ZhciBkPWgsZT1rO2g9YjtrPWV4cG9ydHMudW5zdGFibGVfbm93KCk7dHJ5e3JldHVybiBhLmFwcGx5KHRoaXMsYXJndW1lbnRzKX1maW5hbGx5e2g9ZCxrPWUsdigpfX19O2V4cG9ydHMudW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWw9ZnVuY3Rpb24oKXtyZXR1cm4gaH07XG5leHBvcnRzLnVuc3RhYmxlX3Nob3VsZFlpZWxkPWZ1bmN0aW9uKCl7cmV0dXJuIWYmJihudWxsIT09YyYmYy5leHBpcmF0aW9uVGltZTxsfHx3KCkpfTtleHBvcnRzLnVuc3RhYmxlX2NvbnRpbnVlRXhlY3V0aW9uPWZ1bmN0aW9uKCl7bnVsbCE9PWMmJnAoKX07ZXhwb3J0cy51bnN0YWJsZV9wYXVzZUV4ZWN1dGlvbj1mdW5jdGlvbigpe307ZXhwb3J0cy51bnN0YWJsZV9nZXRGaXJzdENhbGxiYWNrTm9kZT1mdW5jdGlvbigpe3JldHVybiBjfTtcbiIsInZhciBnO1xuXG4vLyBUaGlzIHdvcmtzIGluIG5vbi1zdHJpY3QgbW9kZVxuZyA9IChmdW5jdGlvbigpIHtcblx0cmV0dXJuIHRoaXM7XG59KSgpO1xuXG50cnkge1xuXHQvLyBUaGlzIHdvcmtzIGlmIGV2YWwgaXMgYWxsb3dlZCAoc2VlIENTUClcblx0ZyA9IGcgfHwgbmV3IEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKTtcbn0gY2F0Y2ggKGUpIHtcblx0Ly8gVGhpcyB3b3JrcyBpZiB0aGUgd2luZG93IHJlZmVyZW5jZSBpcyBhdmFpbGFibGVcblx0aWYgKHR5cGVvZiB3aW5kb3cgPT09IFwib2JqZWN0XCIpIGcgPSB3aW5kb3c7XG59XG5cbi8vIGcgY2FuIHN0aWxsIGJlIHVuZGVmaW5lZCwgYnV0IG5vdGhpbmcgdG8gZG8gYWJvdXQgaXQuLi5cbi8vIFdlIHJldHVybiB1bmRlZmluZWQsIGluc3RlYWQgb2Ygbm90aGluZyBoZXJlLCBzbyBpdCdzXG4vLyBlYXNpZXIgdG8gaGFuZGxlIHRoaXMgY2FzZS4gaWYoIWdsb2JhbCkgeyAuLi59XG5cbm1vZHVsZS5leHBvcnRzID0gZztcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSByZXF1aXJlKCcuL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldCcpO1xuXG5mdW5jdGlvbiBlbXB0eUZ1bmN0aW9uKCkge31cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbigpIHtcbiAgZnVuY3Rpb24gc2hpbShwcm9wcywgcHJvcE5hbWUsIGNvbXBvbmVudE5hbWUsIGxvY2F0aW9uLCBwcm9wRnVsbE5hbWUsIHNlY3JldCkge1xuICAgIGlmIChzZWNyZXQgPT09IFJlYWN0UHJvcFR5cGVzU2VjcmV0KSB7XG4gICAgICAvLyBJdCBpcyBzdGlsbCBzYWZlIHdoZW4gY2FsbGVkIGZyb20gUmVhY3QuXG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHZhciBlcnIgPSBuZXcgRXJyb3IoXG4gICAgICAnQ2FsbGluZyBQcm9wVHlwZXMgdmFsaWRhdG9ycyBkaXJlY3RseSBpcyBub3Qgc3VwcG9ydGVkIGJ5IHRoZSBgcHJvcC10eXBlc2AgcGFja2FnZS4gJyArXG4gICAgICAnVXNlIFByb3BUeXBlcy5jaGVja1Byb3BUeXBlcygpIHRvIGNhbGwgdGhlbS4gJyArXG4gICAgICAnUmVhZCBtb3JlIGF0IGh0dHA6Ly9mYi5tZS91c2UtY2hlY2stcHJvcC10eXBlcydcbiAgICApO1xuICAgIGVyci5uYW1lID0gJ0ludmFyaWFudCBWaW9sYXRpb24nO1xuICAgIHRocm93IGVycjtcbiAgfTtcbiAgc2hpbS5pc1JlcXVpcmVkID0gc2hpbTtcbiAgZnVuY3Rpb24gZ2V0U2hpbSgpIHtcbiAgICByZXR1cm4gc2hpbTtcbiAgfTtcbiAgLy8gSW1wb3J0YW50IVxuICAvLyBLZWVwIHRoaXMgbGlzdCBpbiBzeW5jIHdpdGggcHJvZHVjdGlvbiB2ZXJzaW9uIGluIGAuL2ZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzLmpzYC5cbiAgdmFyIFJlYWN0UHJvcFR5cGVzID0ge1xuICAgIGFycmF5OiBzaGltLFxuICAgIGJvb2w6IHNoaW0sXG4gICAgZnVuYzogc2hpbSxcbiAgICBudW1iZXI6IHNoaW0sXG4gICAgb2JqZWN0OiBzaGltLFxuICAgIHN0cmluZzogc2hpbSxcbiAgICBzeW1ib2w6IHNoaW0sXG5cbiAgICBhbnk6IHNoaW0sXG4gICAgYXJyYXlPZjogZ2V0U2hpbSxcbiAgICBlbGVtZW50OiBzaGltLFxuICAgIGluc3RhbmNlT2Y6IGdldFNoaW0sXG4gICAgbm9kZTogc2hpbSxcbiAgICBvYmplY3RPZjogZ2V0U2hpbSxcbiAgICBvbmVPZjogZ2V0U2hpbSxcbiAgICBvbmVPZlR5cGU6IGdldFNoaW0sXG4gICAgc2hhcGU6IGdldFNoaW0sXG4gICAgZXhhY3Q6IGdldFNoaW1cbiAgfTtcblxuICBSZWFjdFByb3BUeXBlcy5jaGVja1Byb3BUeXBlcyA9IGVtcHR5RnVuY3Rpb247XG4gIFJlYWN0UHJvcFR5cGVzLlByb3BUeXBlcyA9IFJlYWN0UHJvcFR5cGVzO1xuXG4gIHJldHVybiBSZWFjdFByb3BUeXBlcztcbn07XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gJ1NFQ1JFVF9ET19OT1RfUEFTU19USElTX09SX1lPVV9XSUxMX0JFX0ZJUkVEJztcblxubW9kdWxlLmV4cG9ydHMgPSBSZWFjdFByb3BUeXBlc1NlY3JldDtcbiIsIm1vZHVsZS5leHBvcnRzID0gQXJyYXkuaXNBcnJheSB8fCBmdW5jdGlvbiAoYXJyKSB7XG4gIHJldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoYXJyKSA9PSAnW29iamVjdCBBcnJheV0nO1xufTtcbiIsImZ1bmN0aW9uIGlzQWJzb2x1dGUocGF0aG5hbWUpIHtcbiAgcmV0dXJuIHBhdGhuYW1lLmNoYXJBdCgwKSA9PT0gJy8nO1xufVxuXG4vLyBBYm91dCAxLjV4IGZhc3RlciB0aGFuIHRoZSB0d28tYXJnIHZlcnNpb24gb2YgQXJyYXkjc3BsaWNlKClcbmZ1bmN0aW9uIHNwbGljZU9uZShsaXN0LCBpbmRleCkge1xuICBmb3IgKHZhciBpID0gaW5kZXgsIGsgPSBpICsgMSwgbiA9IGxpc3QubGVuZ3RoOyBrIDwgbjsgaSArPSAxLCBrICs9IDEpIHtcbiAgICBsaXN0W2ldID0gbGlzdFtrXTtcbiAgfVxuXG4gIGxpc3QucG9wKCk7XG59XG5cbi8vIFRoaXMgaW1wbGVtZW50YXRpb24gaXMgYmFzZWQgaGVhdmlseSBvbiBub2RlJ3MgdXJsLnBhcnNlXG5mdW5jdGlvbiByZXNvbHZlUGF0aG5hbWUodG8pIHtcbiAgdmFyIGZyb20gPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6ICcnO1xuXG4gIHZhciB0b1BhcnRzID0gdG8gJiYgdG8uc3BsaXQoJy8nKSB8fCBbXTtcbiAgdmFyIGZyb21QYXJ0cyA9IGZyb20gJiYgZnJvbS5zcGxpdCgnLycpIHx8IFtdO1xuXG4gIHZhciBpc1RvQWJzID0gdG8gJiYgaXNBYnNvbHV0ZSh0byk7XG4gIHZhciBpc0Zyb21BYnMgPSBmcm9tICYmIGlzQWJzb2x1dGUoZnJvbSk7XG4gIHZhciBtdXN0RW5kQWJzID0gaXNUb0FicyB8fCBpc0Zyb21BYnM7XG5cbiAgaWYgKHRvICYmIGlzQWJzb2x1dGUodG8pKSB7XG4gICAgLy8gdG8gaXMgYWJzb2x1dGVcbiAgICBmcm9tUGFydHMgPSB0b1BhcnRzO1xuICB9IGVsc2UgaWYgKHRvUGFydHMubGVuZ3RoKSB7XG4gICAgLy8gdG8gaXMgcmVsYXRpdmUsIGRyb3AgdGhlIGZpbGVuYW1lXG4gICAgZnJvbVBhcnRzLnBvcCgpO1xuICAgIGZyb21QYXJ0cyA9IGZyb21QYXJ0cy5jb25jYXQodG9QYXJ0cyk7XG4gIH1cblxuICBpZiAoIWZyb21QYXJ0cy5sZW5ndGgpIHJldHVybiAnLyc7XG5cbiAgdmFyIGhhc1RyYWlsaW5nU2xhc2ggPSB2b2lkIDA7XG4gIGlmIChmcm9tUGFydHMubGVuZ3RoKSB7XG4gICAgdmFyIGxhc3QgPSBmcm9tUGFydHNbZnJvbVBhcnRzLmxlbmd0aCAtIDFdO1xuICAgIGhhc1RyYWlsaW5nU2xhc2ggPSBsYXN0ID09PSAnLicgfHwgbGFzdCA9PT0gJy4uJyB8fCBsYXN0ID09PSAnJztcbiAgfSBlbHNlIHtcbiAgICBoYXNUcmFpbGluZ1NsYXNoID0gZmFsc2U7XG4gIH1cblxuICB2YXIgdXAgPSAwO1xuICBmb3IgKHZhciBpID0gZnJvbVBhcnRzLmxlbmd0aDsgaSA+PSAwOyBpLS0pIHtcbiAgICB2YXIgcGFydCA9IGZyb21QYXJ0c1tpXTtcblxuICAgIGlmIChwYXJ0ID09PSAnLicpIHtcbiAgICAgIHNwbGljZU9uZShmcm9tUGFydHMsIGkpO1xuICAgIH0gZWxzZSBpZiAocGFydCA9PT0gJy4uJykge1xuICAgICAgc3BsaWNlT25lKGZyb21QYXJ0cywgaSk7XG4gICAgICB1cCsrO1xuICAgIH0gZWxzZSBpZiAodXApIHtcbiAgICAgIHNwbGljZU9uZShmcm9tUGFydHMsIGkpO1xuICAgICAgdXAtLTtcbiAgICB9XG4gIH1cblxuICBpZiAoIW11c3RFbmRBYnMpIGZvciAoOyB1cC0tOyB1cCkge1xuICAgIGZyb21QYXJ0cy51bnNoaWZ0KCcuLicpO1xuICB9aWYgKG11c3RFbmRBYnMgJiYgZnJvbVBhcnRzWzBdICE9PSAnJyAmJiAoIWZyb21QYXJ0c1swXSB8fCAhaXNBYnNvbHV0ZShmcm9tUGFydHNbMF0pKSkgZnJvbVBhcnRzLnVuc2hpZnQoJycpO1xuXG4gIHZhciByZXN1bHQgPSBmcm9tUGFydHMuam9pbignLycpO1xuXG4gIGlmIChoYXNUcmFpbGluZ1NsYXNoICYmIHJlc3VsdC5zdWJzdHIoLTEpICE9PSAnLycpIHJlc3VsdCArPSAnLyc7XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgcmVzb2x2ZVBhdGhuYW1lOyIsInZhciBfdHlwZW9mID0gdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09IFwic3ltYm9sXCIgPyBmdW5jdGlvbiAob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9IDogZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajsgfTtcblxuZnVuY3Rpb24gdmFsdWVFcXVhbChhLCBiKSB7XG4gIGlmIChhID09PSBiKSByZXR1cm4gdHJ1ZTtcblxuICBpZiAoYSA9PSBudWxsIHx8IGIgPT0gbnVsbCkgcmV0dXJuIGZhbHNlO1xuXG4gIGlmIChBcnJheS5pc0FycmF5KGEpKSB7XG4gICAgcmV0dXJuIEFycmF5LmlzQXJyYXkoYikgJiYgYS5sZW5ndGggPT09IGIubGVuZ3RoICYmIGEuZXZlcnkoZnVuY3Rpb24gKGl0ZW0sIGluZGV4KSB7XG4gICAgICByZXR1cm4gdmFsdWVFcXVhbChpdGVtLCBiW2luZGV4XSk7XG4gICAgfSk7XG4gIH1cblxuICB2YXIgYVR5cGUgPSB0eXBlb2YgYSA9PT0gJ3VuZGVmaW5lZCcgPyAndW5kZWZpbmVkJyA6IF90eXBlb2YoYSk7XG4gIHZhciBiVHlwZSA9IHR5cGVvZiBiID09PSAndW5kZWZpbmVkJyA/ICd1bmRlZmluZWQnIDogX3R5cGVvZihiKTtcblxuICBpZiAoYVR5cGUgIT09IGJUeXBlKSByZXR1cm4gZmFsc2U7XG5cbiAgaWYgKGFUeXBlID09PSAnb2JqZWN0Jykge1xuICAgIHZhciBhVmFsdWUgPSBhLnZhbHVlT2YoKTtcbiAgICB2YXIgYlZhbHVlID0gYi52YWx1ZU9mKCk7XG5cbiAgICBpZiAoYVZhbHVlICE9PSBhIHx8IGJWYWx1ZSAhPT0gYikgcmV0dXJuIHZhbHVlRXF1YWwoYVZhbHVlLCBiVmFsdWUpO1xuXG4gICAgdmFyIGFLZXlzID0gT2JqZWN0LmtleXMoYSk7XG4gICAgdmFyIGJLZXlzID0gT2JqZWN0LmtleXMoYik7XG5cbiAgICBpZiAoYUtleXMubGVuZ3RoICE9PSBiS2V5cy5sZW5ndGgpIHJldHVybiBmYWxzZTtcblxuICAgIHJldHVybiBhS2V5cy5ldmVyeShmdW5jdGlvbiAoa2V5KSB7XG4gICAgICByZXR1cm4gdmFsdWVFcXVhbChhW2tleV0sIGJba2V5XSk7XG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4gZmFsc2U7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHZhbHVlRXF1YWw7IiwiZXhwb3J0IHZhciBhZGRMZWFkaW5nU2xhc2ggPSBmdW5jdGlvbiBhZGRMZWFkaW5nU2xhc2gocGF0aCkge1xuICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09ICcvJyA/IHBhdGggOiAnLycgKyBwYXRoO1xufTtcblxuZXhwb3J0IHZhciBzdHJpcExlYWRpbmdTbGFzaCA9IGZ1bmN0aW9uIHN0cmlwTGVhZGluZ1NsYXNoKHBhdGgpIHtcbiAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSAnLycgPyBwYXRoLnN1YnN0cigxKSA6IHBhdGg7XG59O1xuXG5leHBvcnQgdmFyIGhhc0Jhc2VuYW1lID0gZnVuY3Rpb24gaGFzQmFzZW5hbWUocGF0aCwgcHJlZml4KSB7XG4gIHJldHVybiBuZXcgUmVnRXhwKCdeJyArIHByZWZpeCArICcoXFxcXC98XFxcXD98I3wkKScsICdpJykudGVzdChwYXRoKTtcbn07XG5cbmV4cG9ydCB2YXIgc3RyaXBCYXNlbmFtZSA9IGZ1bmN0aW9uIHN0cmlwQmFzZW5hbWUocGF0aCwgcHJlZml4KSB7XG4gIHJldHVybiBoYXNCYXNlbmFtZShwYXRoLCBwcmVmaXgpID8gcGF0aC5zdWJzdHIocHJlZml4Lmxlbmd0aCkgOiBwYXRoO1xufTtcblxuZXhwb3J0IHZhciBzdHJpcFRyYWlsaW5nU2xhc2ggPSBmdW5jdGlvbiBzdHJpcFRyYWlsaW5nU2xhc2gocGF0aCkge1xuICByZXR1cm4gcGF0aC5jaGFyQXQocGF0aC5sZW5ndGggLSAxKSA9PT0gJy8nID8gcGF0aC5zbGljZSgwLCAtMSkgOiBwYXRoO1xufTtcblxuZXhwb3J0IHZhciBwYXJzZVBhdGggPSBmdW5jdGlvbiBwYXJzZVBhdGgocGF0aCkge1xuICB2YXIgcGF0aG5hbWUgPSBwYXRoIHx8ICcvJztcbiAgdmFyIHNlYXJjaCA9ICcnO1xuICB2YXIgaGFzaCA9ICcnO1xuXG4gIHZhciBoYXNoSW5kZXggPSBwYXRobmFtZS5pbmRleE9mKCcjJyk7XG4gIGlmIChoYXNoSW5kZXggIT09IC0xKSB7XG4gICAgaGFzaCA9IHBhdGhuYW1lLnN1YnN0cihoYXNoSW5kZXgpO1xuICAgIHBhdGhuYW1lID0gcGF0aG5hbWUuc3Vic3RyKDAsIGhhc2hJbmRleCk7XG4gIH1cblxuICB2YXIgc2VhcmNoSW5kZXggPSBwYXRobmFtZS5pbmRleE9mKCc/Jyk7XG4gIGlmIChzZWFyY2hJbmRleCAhPT0gLTEpIHtcbiAgICBzZWFyY2ggPSBwYXRobmFtZS5zdWJzdHIoc2VhcmNoSW5kZXgpO1xuICAgIHBhdGhuYW1lID0gcGF0aG5hbWUuc3Vic3RyKDAsIHNlYXJjaEluZGV4KTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgcGF0aG5hbWU6IHBhdGhuYW1lLFxuICAgIHNlYXJjaDogc2VhcmNoID09PSAnPycgPyAnJyA6IHNlYXJjaCxcbiAgICBoYXNoOiBoYXNoID09PSAnIycgPyAnJyA6IGhhc2hcbiAgfTtcbn07XG5cbmV4cG9ydCB2YXIgY3JlYXRlUGF0aCA9IGZ1bmN0aW9uIGNyZWF0ZVBhdGgobG9jYXRpb24pIHtcbiAgdmFyIHBhdGhuYW1lID0gbG9jYXRpb24ucGF0aG5hbWUsXG4gICAgICBzZWFyY2ggPSBsb2NhdGlvbi5zZWFyY2gsXG4gICAgICBoYXNoID0gbG9jYXRpb24uaGFzaDtcblxuXG4gIHZhciBwYXRoID0gcGF0aG5hbWUgfHwgJy8nO1xuXG4gIGlmIChzZWFyY2ggJiYgc2VhcmNoICE9PSAnPycpIHBhdGggKz0gc2VhcmNoLmNoYXJBdCgwKSA9PT0gJz8nID8gc2VhcmNoIDogJz8nICsgc2VhcmNoO1xuXG4gIGlmIChoYXNoICYmIGhhc2ggIT09ICcjJykgcGF0aCArPSBoYXNoLmNoYXJBdCgwKSA9PT0gJyMnID8gaGFzaCA6ICcjJyArIGhhc2g7XG5cbiAgcmV0dXJuIHBhdGg7XG59OyIsInZhciBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07XG5cbmltcG9ydCByZXNvbHZlUGF0aG5hbWUgZnJvbSAncmVzb2x2ZS1wYXRobmFtZSc7XG5pbXBvcnQgdmFsdWVFcXVhbCBmcm9tICd2YWx1ZS1lcXVhbCc7XG5pbXBvcnQgeyBwYXJzZVBhdGggfSBmcm9tICcuL1BhdGhVdGlscyc7XG5cbmV4cG9ydCB2YXIgY3JlYXRlTG9jYXRpb24gPSBmdW5jdGlvbiBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwga2V5LCBjdXJyZW50TG9jYXRpb24pIHtcbiAgdmFyIGxvY2F0aW9uID0gdm9pZCAwO1xuICBpZiAodHlwZW9mIHBhdGggPT09ICdzdHJpbmcnKSB7XG4gICAgLy8gVHdvLWFyZyBmb3JtOiBwdXNoKHBhdGgsIHN0YXRlKVxuICAgIGxvY2F0aW9uID0gcGFyc2VQYXRoKHBhdGgpO1xuICAgIGxvY2F0aW9uLnN0YXRlID0gc3RhdGU7XG4gIH0gZWxzZSB7XG4gICAgLy8gT25lLWFyZyBmb3JtOiBwdXNoKGxvY2F0aW9uKVxuICAgIGxvY2F0aW9uID0gX2V4dGVuZHMoe30sIHBhdGgpO1xuXG4gICAgaWYgKGxvY2F0aW9uLnBhdGhuYW1lID09PSB1bmRlZmluZWQpIGxvY2F0aW9uLnBhdGhuYW1lID0gJyc7XG5cbiAgICBpZiAobG9jYXRpb24uc2VhcmNoKSB7XG4gICAgICBpZiAobG9jYXRpb24uc2VhcmNoLmNoYXJBdCgwKSAhPT0gJz8nKSBsb2NhdGlvbi5zZWFyY2ggPSAnPycgKyBsb2NhdGlvbi5zZWFyY2g7XG4gICAgfSBlbHNlIHtcbiAgICAgIGxvY2F0aW9uLnNlYXJjaCA9ICcnO1xuICAgIH1cblxuICAgIGlmIChsb2NhdGlvbi5oYXNoKSB7XG4gICAgICBpZiAobG9jYXRpb24uaGFzaC5jaGFyQXQoMCkgIT09ICcjJykgbG9jYXRpb24uaGFzaCA9ICcjJyArIGxvY2F0aW9uLmhhc2g7XG4gICAgfSBlbHNlIHtcbiAgICAgIGxvY2F0aW9uLmhhc2ggPSAnJztcbiAgICB9XG5cbiAgICBpZiAoc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBsb2NhdGlvbi5zdGF0ZSA9PT0gdW5kZWZpbmVkKSBsb2NhdGlvbi5zdGF0ZSA9IHN0YXRlO1xuICB9XG5cbiAgdHJ5IHtcbiAgICBsb2NhdGlvbi5wYXRobmFtZSA9IGRlY29kZVVSSShsb2NhdGlvbi5wYXRobmFtZSk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBpZiAoZSBpbnN0YW5jZW9mIFVSSUVycm9yKSB7XG4gICAgICB0aHJvdyBuZXcgVVJJRXJyb3IoJ1BhdGhuYW1lIFwiJyArIGxvY2F0aW9uLnBhdGhuYW1lICsgJ1wiIGNvdWxkIG5vdCBiZSBkZWNvZGVkLiAnICsgJ1RoaXMgaXMgbGlrZWx5IGNhdXNlZCBieSBhbiBpbnZhbGlkIHBlcmNlbnQtZW5jb2RpbmcuJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRocm93IGU7XG4gICAgfVxuICB9XG5cbiAgaWYgKGtleSkgbG9jYXRpb24ua2V5ID0ga2V5O1xuXG4gIGlmIChjdXJyZW50TG9jYXRpb24pIHtcbiAgICAvLyBSZXNvbHZlIGluY29tcGxldGUvcmVsYXRpdmUgcGF0aG5hbWUgcmVsYXRpdmUgdG8gY3VycmVudCBsb2NhdGlvbi5cbiAgICBpZiAoIWxvY2F0aW9uLnBhdGhuYW1lKSB7XG4gICAgICBsb2NhdGlvbi5wYXRobmFtZSA9IGN1cnJlbnRMb2NhdGlvbi5wYXRobmFtZTtcbiAgICB9IGVsc2UgaWYgKGxvY2F0aW9uLnBhdGhuYW1lLmNoYXJBdCgwKSAhPT0gJy8nKSB7XG4gICAgICBsb2NhdGlvbi5wYXRobmFtZSA9IHJlc29sdmVQYXRobmFtZShsb2NhdGlvbi5wYXRobmFtZSwgY3VycmVudExvY2F0aW9uLnBhdGhuYW1lKTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgLy8gV2hlbiB0aGVyZSBpcyBubyBwcmlvciBsb2NhdGlvbiBhbmQgcGF0aG5hbWUgaXMgZW1wdHksIHNldCBpdCB0byAvXG4gICAgaWYgKCFsb2NhdGlvbi5wYXRobmFtZSkge1xuICAgICAgbG9jYXRpb24ucGF0aG5hbWUgPSAnLyc7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGxvY2F0aW9uO1xufTtcblxuZXhwb3J0IHZhciBsb2NhdGlvbnNBcmVFcXVhbCA9IGZ1bmN0aW9uIGxvY2F0aW9uc0FyZUVxdWFsKGEsIGIpIHtcbiAgcmV0dXJuIGEucGF0aG5hbWUgPT09IGIucGF0aG5hbWUgJiYgYS5zZWFyY2ggPT09IGIuc2VhcmNoICYmIGEuaGFzaCA9PT0gYi5oYXNoICYmIGEua2V5ID09PSBiLmtleSAmJiB2YWx1ZUVxdWFsKGEuc3RhdGUsIGIuc3RhdGUpO1xufTsiLCJpbXBvcnQgd2FybmluZyBmcm9tICd3YXJuaW5nJztcblxudmFyIGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyID0gZnVuY3Rpb24gY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIoKSB7XG4gIHZhciBwcm9tcHQgPSBudWxsO1xuXG4gIHZhciBzZXRQcm9tcHQgPSBmdW5jdGlvbiBzZXRQcm9tcHQobmV4dFByb21wdCkge1xuICAgIHdhcm5pbmcocHJvbXB0ID09IG51bGwsICdBIGhpc3Rvcnkgc3VwcG9ydHMgb25seSBvbmUgcHJvbXB0IGF0IGEgdGltZScpO1xuXG4gICAgcHJvbXB0ID0gbmV4dFByb21wdDtcblxuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAocHJvbXB0ID09PSBuZXh0UHJvbXB0KSBwcm9tcHQgPSBudWxsO1xuICAgIH07XG4gIH07XG5cbiAgdmFyIGNvbmZpcm1UcmFuc2l0aW9uVG8gPSBmdW5jdGlvbiBjb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGNhbGxiYWNrKSB7XG4gICAgLy8gVE9ETzogSWYgYW5vdGhlciB0cmFuc2l0aW9uIHN0YXJ0cyB3aGlsZSB3ZSdyZSBzdGlsbCBjb25maXJtaW5nXG4gICAgLy8gdGhlIHByZXZpb3VzIG9uZSwgd2UgbWF5IGVuZCB1cCBpbiBhIHdlaXJkIHN0YXRlLiBGaWd1cmUgb3V0IHRoZVxuICAgIC8vIGJlc3Qgd2F5IHRvIGhhbmRsZSB0aGlzLlxuICAgIGlmIChwcm9tcHQgIT0gbnVsbCkge1xuICAgICAgdmFyIHJlc3VsdCA9IHR5cGVvZiBwcm9tcHQgPT09ICdmdW5jdGlvbicgPyBwcm9tcHQobG9jYXRpb24sIGFjdGlvbikgOiBwcm9tcHQ7XG5cbiAgICAgIGlmICh0eXBlb2YgcmVzdWx0ID09PSAnc3RyaW5nJykge1xuICAgICAgICBpZiAodHlwZW9mIGdldFVzZXJDb25maXJtYXRpb24gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICBnZXRVc2VyQ29uZmlybWF0aW9uKHJlc3VsdCwgY2FsbGJhY2spO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHdhcm5pbmcoZmFsc2UsICdBIGhpc3RvcnkgbmVlZHMgYSBnZXRVc2VyQ29uZmlybWF0aW9uIGZ1bmN0aW9uIGluIG9yZGVyIHRvIHVzZSBhIHByb21wdCBtZXNzYWdlJyk7XG5cbiAgICAgICAgICBjYWxsYmFjayh0cnVlKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gUmV0dXJuIGZhbHNlIGZyb20gYSB0cmFuc2l0aW9uIGhvb2sgdG8gY2FuY2VsIHRoZSB0cmFuc2l0aW9uLlxuICAgICAgICBjYWxsYmFjayhyZXN1bHQgIT09IGZhbHNlKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgY2FsbGJhY2sodHJ1ZSk7XG4gICAgfVxuICB9O1xuXG4gIHZhciBsaXN0ZW5lcnMgPSBbXTtcblxuICB2YXIgYXBwZW5kTGlzdGVuZXIgPSBmdW5jdGlvbiBhcHBlbmRMaXN0ZW5lcihmbikge1xuICAgIHZhciBpc0FjdGl2ZSA9IHRydWU7XG5cbiAgICB2YXIgbGlzdGVuZXIgPSBmdW5jdGlvbiBsaXN0ZW5lcigpIHtcbiAgICAgIGlmIChpc0FjdGl2ZSkgZm4uYXBwbHkodW5kZWZpbmVkLCBhcmd1bWVudHMpO1xuICAgIH07XG5cbiAgICBsaXN0ZW5lcnMucHVzaChsaXN0ZW5lcik7XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgaXNBY3RpdmUgPSBmYWxzZTtcbiAgICAgIGxpc3RlbmVycyA9IGxpc3RlbmVycy5maWx0ZXIoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgICAgcmV0dXJuIGl0ZW0gIT09IGxpc3RlbmVyO1xuICAgICAgfSk7XG4gICAgfTtcbiAgfTtcblxuICB2YXIgbm90aWZ5TGlzdGVuZXJzID0gZnVuY3Rpb24gbm90aWZ5TGlzdGVuZXJzKCkge1xuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIGxpc3RlbmVycy5mb3JFYWNoKGZ1bmN0aW9uIChsaXN0ZW5lcikge1xuICAgICAgcmV0dXJuIGxpc3RlbmVyLmFwcGx5KHVuZGVmaW5lZCwgYXJncyk7XG4gICAgfSk7XG4gIH07XG5cbiAgcmV0dXJuIHtcbiAgICBzZXRQcm9tcHQ6IHNldFByb21wdCxcbiAgICBjb25maXJtVHJhbnNpdGlvblRvOiBjb25maXJtVHJhbnNpdGlvblRvLFxuICAgIGFwcGVuZExpc3RlbmVyOiBhcHBlbmRMaXN0ZW5lcixcbiAgICBub3RpZnlMaXN0ZW5lcnM6IG5vdGlmeUxpc3RlbmVyc1xuICB9O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXI7IiwiZXhwb3J0IHZhciBjYW5Vc2VET00gPSAhISh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB3aW5kb3cuZG9jdW1lbnQgJiYgd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQpO1xuXG5leHBvcnQgdmFyIGFkZEV2ZW50TGlzdGVuZXIgPSBmdW5jdGlvbiBhZGRFdmVudExpc3RlbmVyKG5vZGUsIGV2ZW50LCBsaXN0ZW5lcikge1xuICByZXR1cm4gbm9kZS5hZGRFdmVudExpc3RlbmVyID8gbm9kZS5hZGRFdmVudExpc3RlbmVyKGV2ZW50LCBsaXN0ZW5lciwgZmFsc2UpIDogbm9kZS5hdHRhY2hFdmVudCgnb24nICsgZXZlbnQsIGxpc3RlbmVyKTtcbn07XG5cbmV4cG9ydCB2YXIgcmVtb3ZlRXZlbnRMaXN0ZW5lciA9IGZ1bmN0aW9uIHJlbW92ZUV2ZW50TGlzdGVuZXIobm9kZSwgZXZlbnQsIGxpc3RlbmVyKSB7XG4gIHJldHVybiBub2RlLnJlbW92ZUV2ZW50TGlzdGVuZXIgPyBub2RlLnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZlbnQsIGxpc3RlbmVyLCBmYWxzZSkgOiBub2RlLmRldGFjaEV2ZW50KCdvbicgKyBldmVudCwgbGlzdGVuZXIpO1xufTtcblxuZXhwb3J0IHZhciBnZXRDb25maXJtYXRpb24gPSBmdW5jdGlvbiBnZXRDb25maXJtYXRpb24obWVzc2FnZSwgY2FsbGJhY2spIHtcbiAgcmV0dXJuIGNhbGxiYWNrKHdpbmRvdy5jb25maXJtKG1lc3NhZ2UpKTtcbn07IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tYWxlcnRcblxuLyoqXG4gKiBSZXR1cm5zIHRydWUgaWYgdGhlIEhUTUw1IGhpc3RvcnkgQVBJIGlzIHN1cHBvcnRlZC4gVGFrZW4gZnJvbSBNb2Rlcm5penIuXG4gKlxuICogaHR0cHM6Ly9naXRodWIuY29tL01vZGVybml6ci9Nb2Rlcm5penIvYmxvYi9tYXN0ZXIvTElDRU5TRVxuICogaHR0cHM6Ly9naXRodWIuY29tL01vZGVybml6ci9Nb2Rlcm5penIvYmxvYi9tYXN0ZXIvZmVhdHVyZS1kZXRlY3RzL2hpc3RvcnkuanNcbiAqIGNoYW5nZWQgdG8gYXZvaWQgZmFsc2UgbmVnYXRpdmVzIGZvciBXaW5kb3dzIFBob25lczogaHR0cHM6Ly9naXRodWIuY29tL3JlYWN0anMvcmVhY3Qtcm91dGVyL2lzc3Vlcy81ODZcbiAqL1xuZXhwb3J0IHZhciBzdXBwb3J0c0hpc3RvcnkgPSBmdW5jdGlvbiBzdXBwb3J0c0hpc3RvcnkoKSB7XG4gIHZhciB1YSA9IHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50O1xuXG4gIGlmICgodWEuaW5kZXhPZignQW5kcm9pZCAyLicpICE9PSAtMSB8fCB1YS5pbmRleE9mKCdBbmRyb2lkIDQuMCcpICE9PSAtMSkgJiYgdWEuaW5kZXhPZignTW9iaWxlIFNhZmFyaScpICE9PSAtMSAmJiB1YS5pbmRleE9mKCdDaHJvbWUnKSA9PT0gLTEgJiYgdWEuaW5kZXhPZignV2luZG93cyBQaG9uZScpID09PSAtMSkgcmV0dXJuIGZhbHNlO1xuXG4gIHJldHVybiB3aW5kb3cuaGlzdG9yeSAmJiAncHVzaFN0YXRlJyBpbiB3aW5kb3cuaGlzdG9yeTtcbn07XG5cbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIGJyb3dzZXIgZmlyZXMgcG9wc3RhdGUgb24gaGFzaCBjaGFuZ2UuXG4gKiBJRTEwIGFuZCBJRTExIGRvIG5vdC5cbiAqL1xuZXhwb3J0IHZhciBzdXBwb3J0c1BvcFN0YXRlT25IYXNoQ2hhbmdlID0gZnVuY3Rpb24gc3VwcG9ydHNQb3BTdGF0ZU9uSGFzaENoYW5nZSgpIHtcbiAgcmV0dXJuIHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoJ1RyaWRlbnQnKSA9PT0gLTE7XG59O1xuXG4vKipcbiAqIFJldHVybnMgZmFsc2UgaWYgdXNpbmcgZ28obikgd2l0aCBoYXNoIGhpc3RvcnkgY2F1c2VzIGEgZnVsbCBwYWdlIHJlbG9hZC5cbiAqL1xuZXhwb3J0IHZhciBzdXBwb3J0c0dvV2l0aG91dFJlbG9hZFVzaW5nSGFzaCA9IGZ1bmN0aW9uIHN1cHBvcnRzR29XaXRob3V0UmVsb2FkVXNpbmdIYXNoKCkge1xuICByZXR1cm4gd2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZignRmlyZWZveCcpID09PSAtMTtcbn07XG5cbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIGEgZ2l2ZW4gcG9wc3RhdGUgZXZlbnQgaXMgYW4gZXh0cmFuZW91cyBXZWJLaXQgZXZlbnQuXG4gKiBBY2NvdW50cyBmb3IgdGhlIGZhY3QgdGhhdCBDaHJvbWUgb24gaU9TIGZpcmVzIHJlYWwgcG9wc3RhdGUgZXZlbnRzXG4gKiBjb250YWluaW5nIHVuZGVmaW5lZCBzdGF0ZSB3aGVuIHByZXNzaW5nIHRoZSBiYWNrIGJ1dHRvbi5cbiAqL1xuZXhwb3J0IHZhciBpc0V4dHJhbmVvdXNQb3BzdGF0ZUV2ZW50ID0gZnVuY3Rpb24gaXNFeHRyYW5lb3VzUG9wc3RhdGVFdmVudChldmVudCkge1xuICByZXR1cm4gZXZlbnQuc3RhdGUgPT09IHVuZGVmaW5lZCAmJiBuYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoJ0NyaU9TJykgPT09IC0xO1xufTsiLCJ2YXIgX3R5cGVvZiA9IHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID09PSBcInN5bWJvbFwiID8gZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gdHlwZW9mIG9iajsgfSA6IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7IH07XG5cbnZhciBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07XG5cbmltcG9ydCB3YXJuaW5nIGZyb20gJ3dhcm5pbmcnO1xuaW1wb3J0IGludmFyaWFudCBmcm9tICdpbnZhcmlhbnQnO1xuaW1wb3J0IHsgY3JlYXRlTG9jYXRpb24gfSBmcm9tICcuL0xvY2F0aW9uVXRpbHMnO1xuaW1wb3J0IHsgYWRkTGVhZGluZ1NsYXNoLCBzdHJpcFRyYWlsaW5nU2xhc2gsIGhhc0Jhc2VuYW1lLCBzdHJpcEJhc2VuYW1lLCBjcmVhdGVQYXRoIH0gZnJvbSAnLi9QYXRoVXRpbHMnO1xuaW1wb3J0IGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyIGZyb20gJy4vY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXInO1xuaW1wb3J0IHsgY2FuVXNlRE9NLCBhZGRFdmVudExpc3RlbmVyLCByZW1vdmVFdmVudExpc3RlbmVyLCBnZXRDb25maXJtYXRpb24sIHN1cHBvcnRzSGlzdG9yeSwgc3VwcG9ydHNQb3BTdGF0ZU9uSGFzaENoYW5nZSwgaXNFeHRyYW5lb3VzUG9wc3RhdGVFdmVudCB9IGZyb20gJy4vRE9NVXRpbHMnO1xuXG52YXIgUG9wU3RhdGVFdmVudCA9ICdwb3BzdGF0ZSc7XG52YXIgSGFzaENoYW5nZUV2ZW50ID0gJ2hhc2hjaGFuZ2UnO1xuXG52YXIgZ2V0SGlzdG9yeVN0YXRlID0gZnVuY3Rpb24gZ2V0SGlzdG9yeVN0YXRlKCkge1xuICB0cnkge1xuICAgIHJldHVybiB3aW5kb3cuaGlzdG9yeS5zdGF0ZSB8fCB7fTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIC8vIElFIDExIHNvbWV0aW1lcyB0aHJvd3Mgd2hlbiBhY2Nlc3Npbmcgd2luZG93Lmhpc3Rvcnkuc3RhdGVcbiAgICAvLyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL1JlYWN0VHJhaW5pbmcvaGlzdG9yeS9wdWxsLzI4OVxuICAgIHJldHVybiB7fTtcbiAgfVxufTtcblxuLyoqXG4gKiBDcmVhdGVzIGEgaGlzdG9yeSBvYmplY3QgdGhhdCB1c2VzIHRoZSBIVE1MNSBoaXN0b3J5IEFQSSBpbmNsdWRpbmdcbiAqIHB1c2hTdGF0ZSwgcmVwbGFjZVN0YXRlLCBhbmQgdGhlIHBvcHN0YXRlIGV2ZW50LlxuICovXG52YXIgY3JlYXRlQnJvd3Nlckhpc3RvcnkgPSBmdW5jdGlvbiBjcmVhdGVCcm93c2VySGlzdG9yeSgpIHtcbiAgdmFyIHByb3BzID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiB7fTtcblxuICBpbnZhcmlhbnQoY2FuVXNlRE9NLCAnQnJvd3NlciBoaXN0b3J5IG5lZWRzIGEgRE9NJyk7XG5cbiAgdmFyIGdsb2JhbEhpc3RvcnkgPSB3aW5kb3cuaGlzdG9yeTtcbiAgdmFyIGNhblVzZUhpc3RvcnkgPSBzdXBwb3J0c0hpc3RvcnkoKTtcbiAgdmFyIG5lZWRzSGFzaENoYW5nZUxpc3RlbmVyID0gIXN1cHBvcnRzUG9wU3RhdGVPbkhhc2hDaGFuZ2UoKTtcblxuICB2YXIgX3Byb3BzJGZvcmNlUmVmcmVzaCA9IHByb3BzLmZvcmNlUmVmcmVzaCxcbiAgICAgIGZvcmNlUmVmcmVzaCA9IF9wcm9wcyRmb3JjZVJlZnJlc2ggPT09IHVuZGVmaW5lZCA/IGZhbHNlIDogX3Byb3BzJGZvcmNlUmVmcmVzaCxcbiAgICAgIF9wcm9wcyRnZXRVc2VyQ29uZmlybSA9IHByb3BzLmdldFVzZXJDb25maXJtYXRpb24sXG4gICAgICBnZXRVc2VyQ29uZmlybWF0aW9uID0gX3Byb3BzJGdldFVzZXJDb25maXJtID09PSB1bmRlZmluZWQgPyBnZXRDb25maXJtYXRpb24gOiBfcHJvcHMkZ2V0VXNlckNvbmZpcm0sXG4gICAgICBfcHJvcHMka2V5TGVuZ3RoID0gcHJvcHMua2V5TGVuZ3RoLFxuICAgICAga2V5TGVuZ3RoID0gX3Byb3BzJGtleUxlbmd0aCA9PT0gdW5kZWZpbmVkID8gNiA6IF9wcm9wcyRrZXlMZW5ndGg7XG5cbiAgdmFyIGJhc2VuYW1lID0gcHJvcHMuYmFzZW5hbWUgPyBzdHJpcFRyYWlsaW5nU2xhc2goYWRkTGVhZGluZ1NsYXNoKHByb3BzLmJhc2VuYW1lKSkgOiAnJztcblxuICB2YXIgZ2V0RE9NTG9jYXRpb24gPSBmdW5jdGlvbiBnZXRET01Mb2NhdGlvbihoaXN0b3J5U3RhdGUpIHtcbiAgICB2YXIgX3JlZiA9IGhpc3RvcnlTdGF0ZSB8fCB7fSxcbiAgICAgICAga2V5ID0gX3JlZi5rZXksXG4gICAgICAgIHN0YXRlID0gX3JlZi5zdGF0ZTtcblxuICAgIHZhciBfd2luZG93JGxvY2F0aW9uID0gd2luZG93LmxvY2F0aW9uLFxuICAgICAgICBwYXRobmFtZSA9IF93aW5kb3ckbG9jYXRpb24ucGF0aG5hbWUsXG4gICAgICAgIHNlYXJjaCA9IF93aW5kb3ckbG9jYXRpb24uc2VhcmNoLFxuICAgICAgICBoYXNoID0gX3dpbmRvdyRsb2NhdGlvbi5oYXNoO1xuXG5cbiAgICB2YXIgcGF0aCA9IHBhdGhuYW1lICsgc2VhcmNoICsgaGFzaDtcblxuICAgIHdhcm5pbmcoIWJhc2VuYW1lIHx8IGhhc0Jhc2VuYW1lKHBhdGgsIGJhc2VuYW1lKSwgJ1lvdSBhcmUgYXR0ZW1wdGluZyB0byB1c2UgYSBiYXNlbmFtZSBvbiBhIHBhZ2Ugd2hvc2UgVVJMIHBhdGggZG9lcyBub3QgYmVnaW4gJyArICd3aXRoIHRoZSBiYXNlbmFtZS4gRXhwZWN0ZWQgcGF0aCBcIicgKyBwYXRoICsgJ1wiIHRvIGJlZ2luIHdpdGggXCInICsgYmFzZW5hbWUgKyAnXCIuJyk7XG5cbiAgICBpZiAoYmFzZW5hbWUpIHBhdGggPSBzdHJpcEJhc2VuYW1lKHBhdGgsIGJhc2VuYW1lKTtcblxuICAgIHJldHVybiBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwga2V5KTtcbiAgfTtcblxuICB2YXIgY3JlYXRlS2V5ID0gZnVuY3Rpb24gY3JlYXRlS2V5KCkge1xuICAgIHJldHVybiBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHIoMiwga2V5TGVuZ3RoKTtcbiAgfTtcblxuICB2YXIgdHJhbnNpdGlvbk1hbmFnZXIgPSBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlcigpO1xuXG4gIHZhciBzZXRTdGF0ZSA9IGZ1bmN0aW9uIHNldFN0YXRlKG5leHRTdGF0ZSkge1xuICAgIF9leHRlbmRzKGhpc3RvcnksIG5leHRTdGF0ZSk7XG5cbiAgICBoaXN0b3J5Lmxlbmd0aCA9IGdsb2JhbEhpc3RvcnkubGVuZ3RoO1xuXG4gICAgdHJhbnNpdGlvbk1hbmFnZXIubm90aWZ5TGlzdGVuZXJzKGhpc3RvcnkubG9jYXRpb24sIGhpc3RvcnkuYWN0aW9uKTtcbiAgfTtcblxuICB2YXIgaGFuZGxlUG9wU3RhdGUgPSBmdW5jdGlvbiBoYW5kbGVQb3BTdGF0ZShldmVudCkge1xuICAgIC8vIElnbm9yZSBleHRyYW5lb3VzIHBvcHN0YXRlIGV2ZW50cyBpbiBXZWJLaXQuXG4gICAgaWYgKGlzRXh0cmFuZW91c1BvcHN0YXRlRXZlbnQoZXZlbnQpKSByZXR1cm47XG5cbiAgICBoYW5kbGVQb3AoZ2V0RE9NTG9jYXRpb24oZXZlbnQuc3RhdGUpKTtcbiAgfTtcblxuICB2YXIgaGFuZGxlSGFzaENoYW5nZSA9IGZ1bmN0aW9uIGhhbmRsZUhhc2hDaGFuZ2UoKSB7XG4gICAgaGFuZGxlUG9wKGdldERPTUxvY2F0aW9uKGdldEhpc3RvcnlTdGF0ZSgpKSk7XG4gIH07XG5cbiAgdmFyIGZvcmNlTmV4dFBvcCA9IGZhbHNlO1xuXG4gIHZhciBoYW5kbGVQb3AgPSBmdW5jdGlvbiBoYW5kbGVQb3AobG9jYXRpb24pIHtcbiAgICBpZiAoZm9yY2VOZXh0UG9wKSB7XG4gICAgICBmb3JjZU5leHRQb3AgPSBmYWxzZTtcbiAgICAgIHNldFN0YXRlKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBhY3Rpb24gPSAnUE9QJztcblxuICAgICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgICAgaWYgKG9rKSB7XG4gICAgICAgICAgc2V0U3RhdGUoeyBhY3Rpb246IGFjdGlvbiwgbG9jYXRpb246IGxvY2F0aW9uIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldmVydFBvcChsb2NhdGlvbik7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfTtcblxuICB2YXIgcmV2ZXJ0UG9wID0gZnVuY3Rpb24gcmV2ZXJ0UG9wKGZyb21Mb2NhdGlvbikge1xuICAgIHZhciB0b0xvY2F0aW9uID0gaGlzdG9yeS5sb2NhdGlvbjtcblxuICAgIC8vIFRPRE86IFdlIGNvdWxkIHByb2JhYmx5IG1ha2UgdGhpcyBtb3JlIHJlbGlhYmxlIGJ5XG4gICAgLy8ga2VlcGluZyBhIGxpc3Qgb2Yga2V5cyB3ZSd2ZSBzZWVuIGluIHNlc3Npb25TdG9yYWdlLlxuICAgIC8vIEluc3RlYWQsIHdlIGp1c3QgZGVmYXVsdCB0byAwIGZvciBrZXlzIHdlIGRvbid0IGtub3cuXG5cbiAgICB2YXIgdG9JbmRleCA9IGFsbEtleXMuaW5kZXhPZih0b0xvY2F0aW9uLmtleSk7XG5cbiAgICBpZiAodG9JbmRleCA9PT0gLTEpIHRvSW5kZXggPSAwO1xuXG4gICAgdmFyIGZyb21JbmRleCA9IGFsbEtleXMuaW5kZXhPZihmcm9tTG9jYXRpb24ua2V5KTtcblxuICAgIGlmIChmcm9tSW5kZXggPT09IC0xKSBmcm9tSW5kZXggPSAwO1xuXG4gICAgdmFyIGRlbHRhID0gdG9JbmRleCAtIGZyb21JbmRleDtcblxuICAgIGlmIChkZWx0YSkge1xuICAgICAgZm9yY2VOZXh0UG9wID0gdHJ1ZTtcbiAgICAgIGdvKGRlbHRhKTtcbiAgICB9XG4gIH07XG5cbiAgdmFyIGluaXRpYWxMb2NhdGlvbiA9IGdldERPTUxvY2F0aW9uKGdldEhpc3RvcnlTdGF0ZSgpKTtcbiAgdmFyIGFsbEtleXMgPSBbaW5pdGlhbExvY2F0aW9uLmtleV07XG5cbiAgLy8gUHVibGljIGludGVyZmFjZVxuXG4gIHZhciBjcmVhdGVIcmVmID0gZnVuY3Rpb24gY3JlYXRlSHJlZihsb2NhdGlvbikge1xuICAgIHJldHVybiBiYXNlbmFtZSArIGNyZWF0ZVBhdGgobG9jYXRpb24pO1xuICB9O1xuXG4gIHZhciBwdXNoID0gZnVuY3Rpb24gcHVzaChwYXRoLCBzdGF0ZSkge1xuICAgIHdhcm5pbmcoISgodHlwZW9mIHBhdGggPT09ICd1bmRlZmluZWQnID8gJ3VuZGVmaW5lZCcgOiBfdHlwZW9mKHBhdGgpKSA9PT0gJ29iamVjdCcgJiYgcGF0aC5zdGF0ZSAhPT0gdW5kZWZpbmVkICYmIHN0YXRlICE9PSB1bmRlZmluZWQpLCAnWW91IHNob3VsZCBhdm9pZCBwcm92aWRpbmcgYSAybmQgc3RhdGUgYXJndW1lbnQgdG8gcHVzaCB3aGVuIHRoZSAxc3QgJyArICdhcmd1bWVudCBpcyBhIGxvY2F0aW9uLWxpa2Ugb2JqZWN0IHRoYXQgYWxyZWFkeSBoYXMgc3RhdGU7IGl0IGlzIGlnbm9yZWQnKTtcblxuICAgIHZhciBhY3Rpb24gPSAnUFVTSCc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGNyZWF0ZUtleSgpLCBoaXN0b3J5LmxvY2F0aW9uKTtcblxuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG5cbiAgICAgIHZhciBocmVmID0gY3JlYXRlSHJlZihsb2NhdGlvbik7XG4gICAgICB2YXIga2V5ID0gbG9jYXRpb24ua2V5LFxuICAgICAgICAgIHN0YXRlID0gbG9jYXRpb24uc3RhdGU7XG5cblxuICAgICAgaWYgKGNhblVzZUhpc3RvcnkpIHtcbiAgICAgICAgZ2xvYmFsSGlzdG9yeS5wdXNoU3RhdGUoeyBrZXk6IGtleSwgc3RhdGU6IHN0YXRlIH0sIG51bGwsIGhyZWYpO1xuXG4gICAgICAgIGlmIChmb3JjZVJlZnJlc2gpIHtcbiAgICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IGhyZWY7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdmFyIHByZXZJbmRleCA9IGFsbEtleXMuaW5kZXhPZihoaXN0b3J5LmxvY2F0aW9uLmtleSk7XG4gICAgICAgICAgdmFyIG5leHRLZXlzID0gYWxsS2V5cy5zbGljZSgwLCBwcmV2SW5kZXggPT09IC0xID8gMCA6IHByZXZJbmRleCArIDEpO1xuXG4gICAgICAgICAgbmV4dEtleXMucHVzaChsb2NhdGlvbi5rZXkpO1xuICAgICAgICAgIGFsbEtleXMgPSBuZXh0S2V5cztcblxuICAgICAgICAgIHNldFN0YXRlKHsgYWN0aW9uOiBhY3Rpb24sIGxvY2F0aW9uOiBsb2NhdGlvbiB9KTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgd2FybmluZyhzdGF0ZSA9PT0gdW5kZWZpbmVkLCAnQnJvd3NlciBoaXN0b3J5IGNhbm5vdCBwdXNoIHN0YXRlIGluIGJyb3dzZXJzIHRoYXQgZG8gbm90IHN1cHBvcnQgSFRNTDUgaGlzdG9yeScpO1xuXG4gICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gaHJlZjtcbiAgICAgIH1cbiAgICB9KTtcbiAgfTtcblxuICB2YXIgcmVwbGFjZSA9IGZ1bmN0aW9uIHJlcGxhY2UocGF0aCwgc3RhdGUpIHtcbiAgICB3YXJuaW5nKCEoKHR5cGVvZiBwYXRoID09PSAndW5kZWZpbmVkJyA/ICd1bmRlZmluZWQnIDogX3R5cGVvZihwYXRoKSkgPT09ICdvYmplY3QnICYmIHBhdGguc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBzdGF0ZSAhPT0gdW5kZWZpbmVkKSwgJ1lvdSBzaG91bGQgYXZvaWQgcHJvdmlkaW5nIGEgMm5kIHN0YXRlIGFyZ3VtZW50IHRvIHJlcGxhY2Ugd2hlbiB0aGUgMXN0ICcgKyAnYXJndW1lbnQgaXMgYSBsb2NhdGlvbi1saWtlIG9iamVjdCB0aGF0IGFscmVhZHkgaGFzIHN0YXRlOyBpdCBpcyBpZ25vcmVkJyk7XG5cbiAgICB2YXIgYWN0aW9uID0gJ1JFUExBQ0UnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBjcmVhdGVLZXkoKSwgaGlzdG9yeS5sb2NhdGlvbik7XG5cbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuXG4gICAgICB2YXIgaHJlZiA9IGNyZWF0ZUhyZWYobG9jYXRpb24pO1xuICAgICAgdmFyIGtleSA9IGxvY2F0aW9uLmtleSxcbiAgICAgICAgICBzdGF0ZSA9IGxvY2F0aW9uLnN0YXRlO1xuXG5cbiAgICAgIGlmIChjYW5Vc2VIaXN0b3J5KSB7XG4gICAgICAgIGdsb2JhbEhpc3RvcnkucmVwbGFjZVN0YXRlKHsga2V5OiBrZXksIHN0YXRlOiBzdGF0ZSB9LCBudWxsLCBocmVmKTtcblxuICAgICAgICBpZiAoZm9yY2VSZWZyZXNoKSB7XG4gICAgICAgICAgd2luZG93LmxvY2F0aW9uLnJlcGxhY2UoaHJlZik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdmFyIHByZXZJbmRleCA9IGFsbEtleXMuaW5kZXhPZihoaXN0b3J5LmxvY2F0aW9uLmtleSk7XG5cbiAgICAgICAgICBpZiAocHJldkluZGV4ICE9PSAtMSkgYWxsS2V5c1twcmV2SW5kZXhdID0gbG9jYXRpb24ua2V5O1xuXG4gICAgICAgICAgc2V0U3RhdGUoeyBhY3Rpb246IGFjdGlvbiwgbG9jYXRpb246IGxvY2F0aW9uIH0pO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB3YXJuaW5nKHN0YXRlID09PSB1bmRlZmluZWQsICdCcm93c2VyIGhpc3RvcnkgY2Fubm90IHJlcGxhY2Ugc3RhdGUgaW4gYnJvd3NlcnMgdGhhdCBkbyBub3Qgc3VwcG9ydCBIVE1MNSBoaXN0b3J5Jyk7XG5cbiAgICAgICAgd2luZG93LmxvY2F0aW9uLnJlcGxhY2UoaHJlZik7XG4gICAgICB9XG4gICAgfSk7XG4gIH07XG5cbiAgdmFyIGdvID0gZnVuY3Rpb24gZ28obikge1xuICAgIGdsb2JhbEhpc3RvcnkuZ28obik7XG4gIH07XG5cbiAgdmFyIGdvQmFjayA9IGZ1bmN0aW9uIGdvQmFjaygpIHtcbiAgICByZXR1cm4gZ28oLTEpO1xuICB9O1xuXG4gIHZhciBnb0ZvcndhcmQgPSBmdW5jdGlvbiBnb0ZvcndhcmQoKSB7XG4gICAgcmV0dXJuIGdvKDEpO1xuICB9O1xuXG4gIHZhciBsaXN0ZW5lckNvdW50ID0gMDtcblxuICB2YXIgY2hlY2tET01MaXN0ZW5lcnMgPSBmdW5jdGlvbiBjaGVja0RPTUxpc3RlbmVycyhkZWx0YSkge1xuICAgIGxpc3RlbmVyQ291bnQgKz0gZGVsdGE7XG5cbiAgICBpZiAobGlzdGVuZXJDb3VudCA9PT0gMSkge1xuICAgICAgYWRkRXZlbnRMaXN0ZW5lcih3aW5kb3csIFBvcFN0YXRlRXZlbnQsIGhhbmRsZVBvcFN0YXRlKTtcblxuICAgICAgaWYgKG5lZWRzSGFzaENoYW5nZUxpc3RlbmVyKSBhZGRFdmVudExpc3RlbmVyKHdpbmRvdywgSGFzaENoYW5nZUV2ZW50LCBoYW5kbGVIYXNoQ2hhbmdlKTtcbiAgICB9IGVsc2UgaWYgKGxpc3RlbmVyQ291bnQgPT09IDApIHtcbiAgICAgIHJlbW92ZUV2ZW50TGlzdGVuZXIod2luZG93LCBQb3BTdGF0ZUV2ZW50LCBoYW5kbGVQb3BTdGF0ZSk7XG5cbiAgICAgIGlmIChuZWVkc0hhc2hDaGFuZ2VMaXN0ZW5lcikgcmVtb3ZlRXZlbnRMaXN0ZW5lcih3aW5kb3csIEhhc2hDaGFuZ2VFdmVudCwgaGFuZGxlSGFzaENoYW5nZSk7XG4gICAgfVxuICB9O1xuXG4gIHZhciBpc0Jsb2NrZWQgPSBmYWxzZTtcblxuICB2YXIgYmxvY2sgPSBmdW5jdGlvbiBibG9jaygpIHtcbiAgICB2YXIgcHJvbXB0ID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiBmYWxzZTtcblxuICAgIHZhciB1bmJsb2NrID0gdHJhbnNpdGlvbk1hbmFnZXIuc2V0UHJvbXB0KHByb21wdCk7XG5cbiAgICBpZiAoIWlzQmxvY2tlZCkge1xuICAgICAgY2hlY2tET01MaXN0ZW5lcnMoMSk7XG4gICAgICBpc0Jsb2NrZWQgPSB0cnVlO1xuICAgIH1cblxuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAoaXNCbG9ja2VkKSB7XG4gICAgICAgIGlzQmxvY2tlZCA9IGZhbHNlO1xuICAgICAgICBjaGVja0RPTUxpc3RlbmVycygtMSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB1bmJsb2NrKCk7XG4gICAgfTtcbiAgfTtcblxuICB2YXIgbGlzdGVuID0gZnVuY3Rpb24gbGlzdGVuKGxpc3RlbmVyKSB7XG4gICAgdmFyIHVubGlzdGVuID0gdHJhbnNpdGlvbk1hbmFnZXIuYXBwZW5kTGlzdGVuZXIobGlzdGVuZXIpO1xuICAgIGNoZWNrRE9NTGlzdGVuZXJzKDEpO1xuXG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKC0xKTtcbiAgICAgIHVubGlzdGVuKCk7XG4gICAgfTtcbiAgfTtcblxuICB2YXIgaGlzdG9yeSA9IHtcbiAgICBsZW5ndGg6IGdsb2JhbEhpc3RvcnkubGVuZ3RoLFxuICAgIGFjdGlvbjogJ1BPUCcsXG4gICAgbG9jYXRpb246IGluaXRpYWxMb2NhdGlvbixcbiAgICBjcmVhdGVIcmVmOiBjcmVhdGVIcmVmLFxuICAgIHB1c2g6IHB1c2gsXG4gICAgcmVwbGFjZTogcmVwbGFjZSxcbiAgICBnbzogZ28sXG4gICAgZ29CYWNrOiBnb0JhY2ssXG4gICAgZ29Gb3J3YXJkOiBnb0ZvcndhcmQsXG4gICAgYmxvY2s6IGJsb2NrLFxuICAgIGxpc3RlbjogbGlzdGVuXG4gIH07XG5cbiAgcmV0dXJuIGhpc3Rvcnk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBjcmVhdGVCcm93c2VySGlzdG9yeTsiLCJ2YXIgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9O1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbmltcG9ydCB3YXJuaW5nIGZyb20gXCJ3YXJuaW5nXCI7XG5pbXBvcnQgaW52YXJpYW50IGZyb20gXCJpbnZhcmlhbnRcIjtcbmltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSBcInByb3AtdHlwZXNcIjtcblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgcHV0dGluZyBoaXN0b3J5IG9uIGNvbnRleHQuXG4gKi9cblxudmFyIFJvdXRlciA9IGZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0cyhSb3V0ZXIsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIFJvdXRlcigpIHtcbiAgICB2YXIgX3RlbXAsIF90aGlzLCBfcmV0O1xuXG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFJvdXRlcik7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICByZXR1cm4gX3JldCA9IChfdGVtcCA9IChfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9SZWFjdCRDb21wb25lbnQuY2FsbC5hcHBseShfUmVhY3QkQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KGFyZ3MpKSksIF90aGlzKSwgX3RoaXMuc3RhdGUgPSB7XG4gICAgICBtYXRjaDogX3RoaXMuY29tcHV0ZU1hdGNoKF90aGlzLnByb3BzLmhpc3RvcnkubG9jYXRpb24ucGF0aG5hbWUpXG4gICAgfSwgX3RlbXApLCBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihfdGhpcywgX3JldCk7XG4gIH1cblxuICBSb3V0ZXIucHJvdG90eXBlLmdldENoaWxkQ29udGV4dCA9IGZ1bmN0aW9uIGdldENoaWxkQ29udGV4dCgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgcm91dGVyOiBfZXh0ZW5kcyh7fSwgdGhpcy5jb250ZXh0LnJvdXRlciwge1xuICAgICAgICBoaXN0b3J5OiB0aGlzLnByb3BzLmhpc3RvcnksXG4gICAgICAgIHJvdXRlOiB7XG4gICAgICAgICAgbG9jYXRpb246IHRoaXMucHJvcHMuaGlzdG9yeS5sb2NhdGlvbixcbiAgICAgICAgICBtYXRjaDogdGhpcy5zdGF0ZS5tYXRjaFxuICAgICAgICB9XG4gICAgICB9KVxuICAgIH07XG4gIH07XG5cbiAgUm91dGVyLnByb3RvdHlwZS5jb21wdXRlTWF0Y2ggPSBmdW5jdGlvbiBjb21wdXRlTWF0Y2gocGF0aG5hbWUpIHtcbiAgICByZXR1cm4ge1xuICAgICAgcGF0aDogXCIvXCIsXG4gICAgICB1cmw6IFwiL1wiLFxuICAgICAgcGFyYW1zOiB7fSxcbiAgICAgIGlzRXhhY3Q6IHBhdGhuYW1lID09PSBcIi9cIlxuICAgIH07XG4gIH07XG5cbiAgUm91dGVyLnByb3RvdHlwZS5jb21wb25lbnRXaWxsTW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsTW91bnQoKSB7XG4gICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICB2YXIgX3Byb3BzID0gdGhpcy5wcm9wcyxcbiAgICAgICAgY2hpbGRyZW4gPSBfcHJvcHMuY2hpbGRyZW4sXG4gICAgICAgIGhpc3RvcnkgPSBfcHJvcHMuaGlzdG9yeTtcblxuXG4gICAgaW52YXJpYW50KGNoaWxkcmVuID09IG51bGwgfHwgUmVhY3QuQ2hpbGRyZW4uY291bnQoY2hpbGRyZW4pID09PSAxLCBcIkEgPFJvdXRlcj4gbWF5IGhhdmUgb25seSBvbmUgY2hpbGQgZWxlbWVudFwiKTtcblxuICAgIC8vIERvIHRoaXMgaGVyZSBzbyB3ZSBjYW4gc2V0U3RhdGUgd2hlbiBhIDxSZWRpcmVjdD4gY2hhbmdlcyB0aGVcbiAgICAvLyBsb2NhdGlvbiBpbiBjb21wb25lbnRXaWxsTW91bnQuIFRoaXMgaGFwcGVucyBlLmcuIHdoZW4gZG9pbmdcbiAgICAvLyBzZXJ2ZXIgcmVuZGVyaW5nIHVzaW5nIGEgPFN0YXRpY1JvdXRlcj4uXG4gICAgdGhpcy51bmxpc3RlbiA9IGhpc3RvcnkubGlzdGVuKGZ1bmN0aW9uICgpIHtcbiAgICAgIF90aGlzMi5zZXRTdGF0ZSh7XG4gICAgICAgIG1hdGNoOiBfdGhpczIuY29tcHV0ZU1hdGNoKGhpc3RvcnkubG9jYXRpb24ucGF0aG5hbWUpXG4gICAgICB9KTtcbiAgICB9KTtcbiAgfTtcblxuICBSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKG5leHRQcm9wcykge1xuICAgIHdhcm5pbmcodGhpcy5wcm9wcy5oaXN0b3J5ID09PSBuZXh0UHJvcHMuaGlzdG9yeSwgXCJZb3UgY2Fubm90IGNoYW5nZSA8Um91dGVyIGhpc3Rvcnk+XCIpO1xuICB9O1xuXG4gIFJvdXRlci5wcm90b3R5cGUuY29tcG9uZW50V2lsbFVubW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICB0aGlzLnVubGlzdGVuKCk7XG4gIH07XG5cbiAgUm91dGVyLnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgdmFyIGNoaWxkcmVuID0gdGhpcy5wcm9wcy5jaGlsZHJlbjtcblxuICAgIHJldHVybiBjaGlsZHJlbiA/IFJlYWN0LkNoaWxkcmVuLm9ubHkoY2hpbGRyZW4pIDogbnVsbDtcbiAgfTtcblxuICByZXR1cm4gUm91dGVyO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5Sb3V0ZXIucHJvcFR5cGVzID0ge1xuICBoaXN0b3J5OiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsXG4gIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZVxufTtcblJvdXRlci5jb250ZXh0VHlwZXMgPSB7XG4gIHJvdXRlcjogUHJvcFR5cGVzLm9iamVjdFxufTtcblJvdXRlci5jaGlsZENvbnRleHRUeXBlcyA9IHtcbiAgcm91dGVyOiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWRcbn07XG5cblxuZXhwb3J0IGRlZmF1bHQgUm91dGVyOyIsInZhciBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07XG5cbmltcG9ydCB3YXJuaW5nIGZyb20gJ3dhcm5pbmcnO1xuaW1wb3J0IGludmFyaWFudCBmcm9tICdpbnZhcmlhbnQnO1xuaW1wb3J0IHsgY3JlYXRlTG9jYXRpb24sIGxvY2F0aW9uc0FyZUVxdWFsIH0gZnJvbSAnLi9Mb2NhdGlvblV0aWxzJztcbmltcG9ydCB7IGFkZExlYWRpbmdTbGFzaCwgc3RyaXBMZWFkaW5nU2xhc2gsIHN0cmlwVHJhaWxpbmdTbGFzaCwgaGFzQmFzZW5hbWUsIHN0cmlwQmFzZW5hbWUsIGNyZWF0ZVBhdGggfSBmcm9tICcuL1BhdGhVdGlscyc7XG5pbXBvcnQgY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIgZnJvbSAnLi9jcmVhdGVUcmFuc2l0aW9uTWFuYWdlcic7XG5pbXBvcnQgeyBjYW5Vc2VET00sIGFkZEV2ZW50TGlzdGVuZXIsIHJlbW92ZUV2ZW50TGlzdGVuZXIsIGdldENvbmZpcm1hdGlvbiwgc3VwcG9ydHNHb1dpdGhvdXRSZWxvYWRVc2luZ0hhc2ggfSBmcm9tICcuL0RPTVV0aWxzJztcblxudmFyIEhhc2hDaGFuZ2VFdmVudCA9ICdoYXNoY2hhbmdlJztcblxudmFyIEhhc2hQYXRoQ29kZXJzID0ge1xuICBoYXNoYmFuZzoge1xuICAgIGVuY29kZVBhdGg6IGZ1bmN0aW9uIGVuY29kZVBhdGgocGF0aCkge1xuICAgICAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSAnIScgPyBwYXRoIDogJyEvJyArIHN0cmlwTGVhZGluZ1NsYXNoKHBhdGgpO1xuICAgIH0sXG4gICAgZGVjb2RlUGF0aDogZnVuY3Rpb24gZGVjb2RlUGF0aChwYXRoKSB7XG4gICAgICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09ICchJyA/IHBhdGguc3Vic3RyKDEpIDogcGF0aDtcbiAgICB9XG4gIH0sXG4gIG5vc2xhc2g6IHtcbiAgICBlbmNvZGVQYXRoOiBzdHJpcExlYWRpbmdTbGFzaCxcbiAgICBkZWNvZGVQYXRoOiBhZGRMZWFkaW5nU2xhc2hcbiAgfSxcbiAgc2xhc2g6IHtcbiAgICBlbmNvZGVQYXRoOiBhZGRMZWFkaW5nU2xhc2gsXG4gICAgZGVjb2RlUGF0aDogYWRkTGVhZGluZ1NsYXNoXG4gIH1cbn07XG5cbnZhciBnZXRIYXNoUGF0aCA9IGZ1bmN0aW9uIGdldEhhc2hQYXRoKCkge1xuICAvLyBXZSBjYW4ndCB1c2Ugd2luZG93LmxvY2F0aW9uLmhhc2ggaGVyZSBiZWNhdXNlIGl0J3Mgbm90XG4gIC8vIGNvbnNpc3RlbnQgYWNyb3NzIGJyb3dzZXJzIC0gRmlyZWZveCB3aWxsIHByZS1kZWNvZGUgaXQhXG4gIHZhciBocmVmID0gd2luZG93LmxvY2F0aW9uLmhyZWY7XG4gIHZhciBoYXNoSW5kZXggPSBocmVmLmluZGV4T2YoJyMnKTtcbiAgcmV0dXJuIGhhc2hJbmRleCA9PT0gLTEgPyAnJyA6IGhyZWYuc3Vic3RyaW5nKGhhc2hJbmRleCArIDEpO1xufTtcblxudmFyIHB1c2hIYXNoUGF0aCA9IGZ1bmN0aW9uIHB1c2hIYXNoUGF0aChwYXRoKSB7XG4gIHJldHVybiB3aW5kb3cubG9jYXRpb24uaGFzaCA9IHBhdGg7XG59O1xuXG52YXIgcmVwbGFjZUhhc2hQYXRoID0gZnVuY3Rpb24gcmVwbGFjZUhhc2hQYXRoKHBhdGgpIHtcbiAgdmFyIGhhc2hJbmRleCA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmLmluZGV4T2YoJyMnKTtcblxuICB3aW5kb3cubG9jYXRpb24ucmVwbGFjZSh3aW5kb3cubG9jYXRpb24uaHJlZi5zbGljZSgwLCBoYXNoSW5kZXggPj0gMCA/IGhhc2hJbmRleCA6IDApICsgJyMnICsgcGF0aCk7XG59O1xuXG52YXIgY3JlYXRlSGFzaEhpc3RvcnkgPSBmdW5jdGlvbiBjcmVhdGVIYXNoSGlzdG9yeSgpIHtcbiAgdmFyIHByb3BzID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiB7fTtcblxuICBpbnZhcmlhbnQoY2FuVXNlRE9NLCAnSGFzaCBoaXN0b3J5IG5lZWRzIGEgRE9NJyk7XG5cbiAgdmFyIGdsb2JhbEhpc3RvcnkgPSB3aW5kb3cuaGlzdG9yeTtcbiAgdmFyIGNhbkdvV2l0aG91dFJlbG9hZCA9IHN1cHBvcnRzR29XaXRob3V0UmVsb2FkVXNpbmdIYXNoKCk7XG5cbiAgdmFyIF9wcm9wcyRnZXRVc2VyQ29uZmlybSA9IHByb3BzLmdldFVzZXJDb25maXJtYXRpb24sXG4gICAgICBnZXRVc2VyQ29uZmlybWF0aW9uID0gX3Byb3BzJGdldFVzZXJDb25maXJtID09PSB1bmRlZmluZWQgPyBnZXRDb25maXJtYXRpb24gOiBfcHJvcHMkZ2V0VXNlckNvbmZpcm0sXG4gICAgICBfcHJvcHMkaGFzaFR5cGUgPSBwcm9wcy5oYXNoVHlwZSxcbiAgICAgIGhhc2hUeXBlID0gX3Byb3BzJGhhc2hUeXBlID09PSB1bmRlZmluZWQgPyAnc2xhc2gnIDogX3Byb3BzJGhhc2hUeXBlO1xuXG4gIHZhciBiYXNlbmFtZSA9IHByb3BzLmJhc2VuYW1lID8gc3RyaXBUcmFpbGluZ1NsYXNoKGFkZExlYWRpbmdTbGFzaChwcm9wcy5iYXNlbmFtZSkpIDogJyc7XG5cbiAgdmFyIF9IYXNoUGF0aENvZGVycyRoYXNoVCA9IEhhc2hQYXRoQ29kZXJzW2hhc2hUeXBlXSxcbiAgICAgIGVuY29kZVBhdGggPSBfSGFzaFBhdGhDb2RlcnMkaGFzaFQuZW5jb2RlUGF0aCxcbiAgICAgIGRlY29kZVBhdGggPSBfSGFzaFBhdGhDb2RlcnMkaGFzaFQuZGVjb2RlUGF0aDtcblxuXG4gIHZhciBnZXRET01Mb2NhdGlvbiA9IGZ1bmN0aW9uIGdldERPTUxvY2F0aW9uKCkge1xuICAgIHZhciBwYXRoID0gZGVjb2RlUGF0aChnZXRIYXNoUGF0aCgpKTtcblxuICAgIHdhcm5pbmcoIWJhc2VuYW1lIHx8IGhhc0Jhc2VuYW1lKHBhdGgsIGJhc2VuYW1lKSwgJ1lvdSBhcmUgYXR0ZW1wdGluZyB0byB1c2UgYSBiYXNlbmFtZSBvbiBhIHBhZ2Ugd2hvc2UgVVJMIHBhdGggZG9lcyBub3QgYmVnaW4gJyArICd3aXRoIHRoZSBiYXNlbmFtZS4gRXhwZWN0ZWQgcGF0aCBcIicgKyBwYXRoICsgJ1wiIHRvIGJlZ2luIHdpdGggXCInICsgYmFzZW5hbWUgKyAnXCIuJyk7XG5cbiAgICBpZiAoYmFzZW5hbWUpIHBhdGggPSBzdHJpcEJhc2VuYW1lKHBhdGgsIGJhc2VuYW1lKTtcblxuICAgIHJldHVybiBjcmVhdGVMb2NhdGlvbihwYXRoKTtcbiAgfTtcblxuICB2YXIgdHJhbnNpdGlvbk1hbmFnZXIgPSBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlcigpO1xuXG4gIHZhciBzZXRTdGF0ZSA9IGZ1bmN0aW9uIHNldFN0YXRlKG5leHRTdGF0ZSkge1xuICAgIF9leHRlbmRzKGhpc3RvcnksIG5leHRTdGF0ZSk7XG5cbiAgICBoaXN0b3J5Lmxlbmd0aCA9IGdsb2JhbEhpc3RvcnkubGVuZ3RoO1xuXG4gICAgdHJhbnNpdGlvbk1hbmFnZXIubm90aWZ5TGlzdGVuZXJzKGhpc3RvcnkubG9jYXRpb24sIGhpc3RvcnkuYWN0aW9uKTtcbiAgfTtcblxuICB2YXIgZm9yY2VOZXh0UG9wID0gZmFsc2U7XG4gIHZhciBpZ25vcmVQYXRoID0gbnVsbDtcblxuICB2YXIgaGFuZGxlSGFzaENoYW5nZSA9IGZ1bmN0aW9uIGhhbmRsZUhhc2hDaGFuZ2UoKSB7XG4gICAgdmFyIHBhdGggPSBnZXRIYXNoUGF0aCgpO1xuICAgIHZhciBlbmNvZGVkUGF0aCA9IGVuY29kZVBhdGgocGF0aCk7XG5cbiAgICBpZiAocGF0aCAhPT0gZW5jb2RlZFBhdGgpIHtcbiAgICAgIC8vIEVuc3VyZSB3ZSBhbHdheXMgaGF2ZSBhIHByb3Blcmx5LWVuY29kZWQgaGFzaC5cbiAgICAgIHJlcGxhY2VIYXNoUGF0aChlbmNvZGVkUGF0aCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBsb2NhdGlvbiA9IGdldERPTUxvY2F0aW9uKCk7XG4gICAgICB2YXIgcHJldkxvY2F0aW9uID0gaGlzdG9yeS5sb2NhdGlvbjtcblxuICAgICAgaWYgKCFmb3JjZU5leHRQb3AgJiYgbG9jYXRpb25zQXJlRXF1YWwocHJldkxvY2F0aW9uLCBsb2NhdGlvbikpIHJldHVybjsgLy8gQSBoYXNoY2hhbmdlIGRvZXNuJ3QgYWx3YXlzID09IGxvY2F0aW9uIGNoYW5nZS5cblxuICAgICAgaWYgKGlnbm9yZVBhdGggPT09IGNyZWF0ZVBhdGgobG9jYXRpb24pKSByZXR1cm47IC8vIElnbm9yZSB0aGlzIGNoYW5nZTsgd2UgYWxyZWFkeSBzZXRTdGF0ZSBpbiBwdXNoL3JlcGxhY2UuXG5cbiAgICAgIGlnbm9yZVBhdGggPSBudWxsO1xuXG4gICAgICBoYW5kbGVQb3AobG9jYXRpb24pO1xuICAgIH1cbiAgfTtcblxuICB2YXIgaGFuZGxlUG9wID0gZnVuY3Rpb24gaGFuZGxlUG9wKGxvY2F0aW9uKSB7XG4gICAgaWYgKGZvcmNlTmV4dFBvcCkge1xuICAgICAgZm9yY2VOZXh0UG9wID0gZmFsc2U7XG4gICAgICBzZXRTdGF0ZSgpO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgYWN0aW9uID0gJ1BPUCc7XG5cbiAgICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICAgIGlmIChvaykge1xuICAgICAgICAgIHNldFN0YXRlKHsgYWN0aW9uOiBhY3Rpb24sIGxvY2F0aW9uOiBsb2NhdGlvbiB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXZlcnRQb3AobG9jYXRpb24pO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH07XG5cbiAgdmFyIHJldmVydFBvcCA9IGZ1bmN0aW9uIHJldmVydFBvcChmcm9tTG9jYXRpb24pIHtcbiAgICB2YXIgdG9Mb2NhdGlvbiA9IGhpc3RvcnkubG9jYXRpb247XG5cbiAgICAvLyBUT0RPOiBXZSBjb3VsZCBwcm9iYWJseSBtYWtlIHRoaXMgbW9yZSByZWxpYWJsZSBieVxuICAgIC8vIGtlZXBpbmcgYSBsaXN0IG9mIHBhdGhzIHdlJ3ZlIHNlZW4gaW4gc2Vzc2lvblN0b3JhZ2UuXG4gICAgLy8gSW5zdGVhZCwgd2UganVzdCBkZWZhdWx0IHRvIDAgZm9yIHBhdGhzIHdlIGRvbid0IGtub3cuXG5cbiAgICB2YXIgdG9JbmRleCA9IGFsbFBhdGhzLmxhc3RJbmRleE9mKGNyZWF0ZVBhdGgodG9Mb2NhdGlvbikpO1xuXG4gICAgaWYgKHRvSW5kZXggPT09IC0xKSB0b0luZGV4ID0gMDtcblxuICAgIHZhciBmcm9tSW5kZXggPSBhbGxQYXRocy5sYXN0SW5kZXhPZihjcmVhdGVQYXRoKGZyb21Mb2NhdGlvbikpO1xuXG4gICAgaWYgKGZyb21JbmRleCA9PT0gLTEpIGZyb21JbmRleCA9IDA7XG5cbiAgICB2YXIgZGVsdGEgPSB0b0luZGV4IC0gZnJvbUluZGV4O1xuXG4gICAgaWYgKGRlbHRhKSB7XG4gICAgICBmb3JjZU5leHRQb3AgPSB0cnVlO1xuICAgICAgZ28oZGVsdGEpO1xuICAgIH1cbiAgfTtcblxuICAvLyBFbnN1cmUgdGhlIGhhc2ggaXMgZW5jb2RlZCBwcm9wZXJseSBiZWZvcmUgZG9pbmcgYW55dGhpbmcgZWxzZS5cbiAgdmFyIHBhdGggPSBnZXRIYXNoUGF0aCgpO1xuICB2YXIgZW5jb2RlZFBhdGggPSBlbmNvZGVQYXRoKHBhdGgpO1xuXG4gIGlmIChwYXRoICE9PSBlbmNvZGVkUGF0aCkgcmVwbGFjZUhhc2hQYXRoKGVuY29kZWRQYXRoKTtcblxuICB2YXIgaW5pdGlhbExvY2F0aW9uID0gZ2V0RE9NTG9jYXRpb24oKTtcbiAgdmFyIGFsbFBhdGhzID0gW2NyZWF0ZVBhdGgoaW5pdGlhbExvY2F0aW9uKV07XG5cbiAgLy8gUHVibGljIGludGVyZmFjZVxuXG4gIHZhciBjcmVhdGVIcmVmID0gZnVuY3Rpb24gY3JlYXRlSHJlZihsb2NhdGlvbikge1xuICAgIHJldHVybiAnIycgKyBlbmNvZGVQYXRoKGJhc2VuYW1lICsgY3JlYXRlUGF0aChsb2NhdGlvbikpO1xuICB9O1xuXG4gIHZhciBwdXNoID0gZnVuY3Rpb24gcHVzaChwYXRoLCBzdGF0ZSkge1xuICAgIHdhcm5pbmcoc3RhdGUgPT09IHVuZGVmaW5lZCwgJ0hhc2ggaGlzdG9yeSBjYW5ub3QgcHVzaCBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpO1xuXG4gICAgdmFyIGFjdGlvbiA9ICdQVVNIJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaGlzdG9yeS5sb2NhdGlvbik7XG5cbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuXG4gICAgICB2YXIgcGF0aCA9IGNyZWF0ZVBhdGgobG9jYXRpb24pO1xuICAgICAgdmFyIGVuY29kZWRQYXRoID0gZW5jb2RlUGF0aChiYXNlbmFtZSArIHBhdGgpO1xuICAgICAgdmFyIGhhc2hDaGFuZ2VkID0gZ2V0SGFzaFBhdGgoKSAhPT0gZW5jb2RlZFBhdGg7XG5cbiAgICAgIGlmIChoYXNoQ2hhbmdlZCkge1xuICAgICAgICAvLyBXZSBjYW5ub3QgdGVsbCBpZiBhIGhhc2hjaGFuZ2Ugd2FzIGNhdXNlZCBieSBhIFBVU0gsIHNvIHdlJ2RcbiAgICAgICAgLy8gcmF0aGVyIHNldFN0YXRlIGhlcmUgYW5kIGlnbm9yZSB0aGUgaGFzaGNoYW5nZS4gVGhlIGNhdmVhdCBoZXJlXG4gICAgICAgIC8vIGlzIHRoYXQgb3RoZXIgaGFzaCBoaXN0b3JpZXMgaW4gdGhlIHBhZ2Ugd2lsbCBjb25zaWRlciBpdCBhIFBPUC5cbiAgICAgICAgaWdub3JlUGF0aCA9IHBhdGg7XG4gICAgICAgIHB1c2hIYXNoUGF0aChlbmNvZGVkUGF0aCk7XG5cbiAgICAgICAgdmFyIHByZXZJbmRleCA9IGFsbFBhdGhzLmxhc3RJbmRleE9mKGNyZWF0ZVBhdGgoaGlzdG9yeS5sb2NhdGlvbikpO1xuICAgICAgICB2YXIgbmV4dFBhdGhzID0gYWxsUGF0aHMuc2xpY2UoMCwgcHJldkluZGV4ID09PSAtMSA/IDAgOiBwcmV2SW5kZXggKyAxKTtcblxuICAgICAgICBuZXh0UGF0aHMucHVzaChwYXRoKTtcbiAgICAgICAgYWxsUGF0aHMgPSBuZXh0UGF0aHM7XG5cbiAgICAgICAgc2V0U3RhdGUoeyBhY3Rpb246IGFjdGlvbiwgbG9jYXRpb246IGxvY2F0aW9uIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgd2FybmluZyhmYWxzZSwgJ0hhc2ggaGlzdG9yeSBjYW5ub3QgUFVTSCB0aGUgc2FtZSBwYXRoOyBhIG5ldyBlbnRyeSB3aWxsIG5vdCBiZSBhZGRlZCB0byB0aGUgaGlzdG9yeSBzdGFjaycpO1xuXG4gICAgICAgIHNldFN0YXRlKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH07XG5cbiAgdmFyIHJlcGxhY2UgPSBmdW5jdGlvbiByZXBsYWNlKHBhdGgsIHN0YXRlKSB7XG4gICAgd2FybmluZyhzdGF0ZSA9PT0gdW5kZWZpbmVkLCAnSGFzaCBoaXN0b3J5IGNhbm5vdCByZXBsYWNlIHN0YXRlOyBpdCBpcyBpZ25vcmVkJyk7XG5cbiAgICB2YXIgYWN0aW9uID0gJ1JFUExBQ0UnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBoaXN0b3J5LmxvY2F0aW9uKTtcblxuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG5cbiAgICAgIHZhciBwYXRoID0gY3JlYXRlUGF0aChsb2NhdGlvbik7XG4gICAgICB2YXIgZW5jb2RlZFBhdGggPSBlbmNvZGVQYXRoKGJhc2VuYW1lICsgcGF0aCk7XG4gICAgICB2YXIgaGFzaENoYW5nZWQgPSBnZXRIYXNoUGF0aCgpICE9PSBlbmNvZGVkUGF0aDtcblxuICAgICAgaWYgKGhhc2hDaGFuZ2VkKSB7XG4gICAgICAgIC8vIFdlIGNhbm5vdCB0ZWxsIGlmIGEgaGFzaGNoYW5nZSB3YXMgY2F1c2VkIGJ5IGEgUkVQTEFDRSwgc28gd2UnZFxuICAgICAgICAvLyByYXRoZXIgc2V0U3RhdGUgaGVyZSBhbmQgaWdub3JlIHRoZSBoYXNoY2hhbmdlLiBUaGUgY2F2ZWF0IGhlcmVcbiAgICAgICAgLy8gaXMgdGhhdCBvdGhlciBoYXNoIGhpc3RvcmllcyBpbiB0aGUgcGFnZSB3aWxsIGNvbnNpZGVyIGl0IGEgUE9QLlxuICAgICAgICBpZ25vcmVQYXRoID0gcGF0aDtcbiAgICAgICAgcmVwbGFjZUhhc2hQYXRoKGVuY29kZWRQYXRoKTtcbiAgICAgIH1cblxuICAgICAgdmFyIHByZXZJbmRleCA9IGFsbFBhdGhzLmluZGV4T2YoY3JlYXRlUGF0aChoaXN0b3J5LmxvY2F0aW9uKSk7XG5cbiAgICAgIGlmIChwcmV2SW5kZXggIT09IC0xKSBhbGxQYXRoc1twcmV2SW5kZXhdID0gcGF0aDtcblxuICAgICAgc2V0U3RhdGUoeyBhY3Rpb246IGFjdGlvbiwgbG9jYXRpb246IGxvY2F0aW9uIH0pO1xuICAgIH0pO1xuICB9O1xuXG4gIHZhciBnbyA9IGZ1bmN0aW9uIGdvKG4pIHtcbiAgICB3YXJuaW5nKGNhbkdvV2l0aG91dFJlbG9hZCwgJ0hhc2ggaGlzdG9yeSBnbyhuKSBjYXVzZXMgYSBmdWxsIHBhZ2UgcmVsb2FkIGluIHRoaXMgYnJvd3NlcicpO1xuXG4gICAgZ2xvYmFsSGlzdG9yeS5nbyhuKTtcbiAgfTtcblxuICB2YXIgZ29CYWNrID0gZnVuY3Rpb24gZ29CYWNrKCkge1xuICAgIHJldHVybiBnbygtMSk7XG4gIH07XG5cbiAgdmFyIGdvRm9yd2FyZCA9IGZ1bmN0aW9uIGdvRm9yd2FyZCgpIHtcbiAgICByZXR1cm4gZ28oMSk7XG4gIH07XG5cbiAgdmFyIGxpc3RlbmVyQ291bnQgPSAwO1xuXG4gIHZhciBjaGVja0RPTUxpc3RlbmVycyA9IGZ1bmN0aW9uIGNoZWNrRE9NTGlzdGVuZXJzKGRlbHRhKSB7XG4gICAgbGlzdGVuZXJDb3VudCArPSBkZWx0YTtcblxuICAgIGlmIChsaXN0ZW5lckNvdW50ID09PSAxKSB7XG4gICAgICBhZGRFdmVudExpc3RlbmVyKHdpbmRvdywgSGFzaENoYW5nZUV2ZW50LCBoYW5kbGVIYXNoQ2hhbmdlKTtcbiAgICB9IGVsc2UgaWYgKGxpc3RlbmVyQ291bnQgPT09IDApIHtcbiAgICAgIHJlbW92ZUV2ZW50TGlzdGVuZXIod2luZG93LCBIYXNoQ2hhbmdlRXZlbnQsIGhhbmRsZUhhc2hDaGFuZ2UpO1xuICAgIH1cbiAgfTtcblxuICB2YXIgaXNCbG9ja2VkID0gZmFsc2U7XG5cbiAgdmFyIGJsb2NrID0gZnVuY3Rpb24gYmxvY2soKSB7XG4gICAgdmFyIHByb21wdCA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogZmFsc2U7XG5cbiAgICB2YXIgdW5ibG9jayA9IHRyYW5zaXRpb25NYW5hZ2VyLnNldFByb21wdChwcm9tcHQpO1xuXG4gICAgaWYgKCFpc0Jsb2NrZWQpIHtcbiAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKDEpO1xuICAgICAgaXNCbG9ja2VkID0gdHJ1ZTtcbiAgICB9XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKGlzQmxvY2tlZCkge1xuICAgICAgICBpc0Jsb2NrZWQgPSBmYWxzZTtcbiAgICAgICAgY2hlY2tET01MaXN0ZW5lcnMoLTEpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdW5ibG9jaygpO1xuICAgIH07XG4gIH07XG5cbiAgdmFyIGxpc3RlbiA9IGZ1bmN0aW9uIGxpc3RlbihsaXN0ZW5lcikge1xuICAgIHZhciB1bmxpc3RlbiA9IHRyYW5zaXRpb25NYW5hZ2VyLmFwcGVuZExpc3RlbmVyKGxpc3RlbmVyKTtcbiAgICBjaGVja0RPTUxpc3RlbmVycygxKTtcblxuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBjaGVja0RPTUxpc3RlbmVycygtMSk7XG4gICAgICB1bmxpc3RlbigpO1xuICAgIH07XG4gIH07XG5cbiAgdmFyIGhpc3RvcnkgPSB7XG4gICAgbGVuZ3RoOiBnbG9iYWxIaXN0b3J5Lmxlbmd0aCxcbiAgICBhY3Rpb246ICdQT1AnLFxuICAgIGxvY2F0aW9uOiBpbml0aWFsTG9jYXRpb24sXG4gICAgY3JlYXRlSHJlZjogY3JlYXRlSHJlZixcbiAgICBwdXNoOiBwdXNoLFxuICAgIHJlcGxhY2U6IHJlcGxhY2UsXG4gICAgZ286IGdvLFxuICAgIGdvQmFjazogZ29CYWNrLFxuICAgIGdvRm9yd2FyZDogZ29Gb3J3YXJkLFxuICAgIGJsb2NrOiBibG9jayxcbiAgICBsaXN0ZW46IGxpc3RlblxuICB9O1xuXG4gIHJldHVybiBoaXN0b3J5O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY3JlYXRlSGFzaEhpc3Rvcnk7IiwidmFyIF90eXBlb2YgPSB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gXCJzeW1ib2xcIiA/IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIHR5cGVvZiBvYmo7IH0gOiBmdW5jdGlvbiAob2JqKSB7IHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqOyB9O1xuXG52YXIgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9O1xuXG5pbXBvcnQgd2FybmluZyBmcm9tICd3YXJuaW5nJztcbmltcG9ydCB7IGNyZWF0ZVBhdGggfSBmcm9tICcuL1BhdGhVdGlscyc7XG5pbXBvcnQgeyBjcmVhdGVMb2NhdGlvbiB9IGZyb20gJy4vTG9jYXRpb25VdGlscyc7XG5pbXBvcnQgY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIgZnJvbSAnLi9jcmVhdGVUcmFuc2l0aW9uTWFuYWdlcic7XG5cbnZhciBjbGFtcCA9IGZ1bmN0aW9uIGNsYW1wKG4sIGxvd2VyQm91bmQsIHVwcGVyQm91bmQpIHtcbiAgcmV0dXJuIE1hdGgubWluKE1hdGgubWF4KG4sIGxvd2VyQm91bmQpLCB1cHBlckJvdW5kKTtcbn07XG5cbi8qKlxuICogQ3JlYXRlcyBhIGhpc3Rvcnkgb2JqZWN0IHRoYXQgc3RvcmVzIGxvY2F0aW9ucyBpbiBtZW1vcnkuXG4gKi9cbnZhciBjcmVhdGVNZW1vcnlIaXN0b3J5ID0gZnVuY3Rpb24gY3JlYXRlTWVtb3J5SGlzdG9yeSgpIHtcbiAgdmFyIHByb3BzID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiB7fTtcbiAgdmFyIGdldFVzZXJDb25maXJtYXRpb24gPSBwcm9wcy5nZXRVc2VyQ29uZmlybWF0aW9uLFxuICAgICAgX3Byb3BzJGluaXRpYWxFbnRyaWVzID0gcHJvcHMuaW5pdGlhbEVudHJpZXMsXG4gICAgICBpbml0aWFsRW50cmllcyA9IF9wcm9wcyRpbml0aWFsRW50cmllcyA9PT0gdW5kZWZpbmVkID8gWycvJ10gOiBfcHJvcHMkaW5pdGlhbEVudHJpZXMsXG4gICAgICBfcHJvcHMkaW5pdGlhbEluZGV4ID0gcHJvcHMuaW5pdGlhbEluZGV4LFxuICAgICAgaW5pdGlhbEluZGV4ID0gX3Byb3BzJGluaXRpYWxJbmRleCA9PT0gdW5kZWZpbmVkID8gMCA6IF9wcm9wcyRpbml0aWFsSW5kZXgsXG4gICAgICBfcHJvcHMka2V5TGVuZ3RoID0gcHJvcHMua2V5TGVuZ3RoLFxuICAgICAga2V5TGVuZ3RoID0gX3Byb3BzJGtleUxlbmd0aCA9PT0gdW5kZWZpbmVkID8gNiA6IF9wcm9wcyRrZXlMZW5ndGg7XG5cblxuICB2YXIgdHJhbnNpdGlvbk1hbmFnZXIgPSBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlcigpO1xuXG4gIHZhciBzZXRTdGF0ZSA9IGZ1bmN0aW9uIHNldFN0YXRlKG5leHRTdGF0ZSkge1xuICAgIF9leHRlbmRzKGhpc3RvcnksIG5leHRTdGF0ZSk7XG5cbiAgICBoaXN0b3J5Lmxlbmd0aCA9IGhpc3RvcnkuZW50cmllcy5sZW5ndGg7XG5cbiAgICB0cmFuc2l0aW9uTWFuYWdlci5ub3RpZnlMaXN0ZW5lcnMoaGlzdG9yeS5sb2NhdGlvbiwgaGlzdG9yeS5hY3Rpb24pO1xuICB9O1xuXG4gIHZhciBjcmVhdGVLZXkgPSBmdW5jdGlvbiBjcmVhdGVLZXkoKSB7XG4gICAgcmV0dXJuIE1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cigyLCBrZXlMZW5ndGgpO1xuICB9O1xuXG4gIHZhciBpbmRleCA9IGNsYW1wKGluaXRpYWxJbmRleCwgMCwgaW5pdGlhbEVudHJpZXMubGVuZ3RoIC0gMSk7XG4gIHZhciBlbnRyaWVzID0gaW5pdGlhbEVudHJpZXMubWFwKGZ1bmN0aW9uIChlbnRyeSkge1xuICAgIHJldHVybiB0eXBlb2YgZW50cnkgPT09ICdzdHJpbmcnID8gY3JlYXRlTG9jYXRpb24oZW50cnksIHVuZGVmaW5lZCwgY3JlYXRlS2V5KCkpIDogY3JlYXRlTG9jYXRpb24oZW50cnksIHVuZGVmaW5lZCwgZW50cnkua2V5IHx8IGNyZWF0ZUtleSgpKTtcbiAgfSk7XG5cbiAgLy8gUHVibGljIGludGVyZmFjZVxuXG4gIHZhciBjcmVhdGVIcmVmID0gY3JlYXRlUGF0aDtcblxuICB2YXIgcHVzaCA9IGZ1bmN0aW9uIHB1c2gocGF0aCwgc3RhdGUpIHtcbiAgICB3YXJuaW5nKCEoKHR5cGVvZiBwYXRoID09PSAndW5kZWZpbmVkJyA/ICd1bmRlZmluZWQnIDogX3R5cGVvZihwYXRoKSkgPT09ICdvYmplY3QnICYmIHBhdGguc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBzdGF0ZSAhPT0gdW5kZWZpbmVkKSwgJ1lvdSBzaG91bGQgYXZvaWQgcHJvdmlkaW5nIGEgMm5kIHN0YXRlIGFyZ3VtZW50IHRvIHB1c2ggd2hlbiB0aGUgMXN0ICcgKyAnYXJndW1lbnQgaXMgYSBsb2NhdGlvbi1saWtlIG9iamVjdCB0aGF0IGFscmVhZHkgaGFzIHN0YXRlOyBpdCBpcyBpZ25vcmVkJyk7XG5cbiAgICB2YXIgYWN0aW9uID0gJ1BVU0gnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBjcmVhdGVLZXkoKSwgaGlzdG9yeS5sb2NhdGlvbik7XG5cbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuXG4gICAgICB2YXIgcHJldkluZGV4ID0gaGlzdG9yeS5pbmRleDtcbiAgICAgIHZhciBuZXh0SW5kZXggPSBwcmV2SW5kZXggKyAxO1xuXG4gICAgICB2YXIgbmV4dEVudHJpZXMgPSBoaXN0b3J5LmVudHJpZXMuc2xpY2UoMCk7XG4gICAgICBpZiAobmV4dEVudHJpZXMubGVuZ3RoID4gbmV4dEluZGV4KSB7XG4gICAgICAgIG5leHRFbnRyaWVzLnNwbGljZShuZXh0SW5kZXgsIG5leHRFbnRyaWVzLmxlbmd0aCAtIG5leHRJbmRleCwgbG9jYXRpb24pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbmV4dEVudHJpZXMucHVzaChsb2NhdGlvbik7XG4gICAgICB9XG5cbiAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvbixcbiAgICAgICAgaW5kZXg6IG5leHRJbmRleCxcbiAgICAgICAgZW50cmllczogbmV4dEVudHJpZXNcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9O1xuXG4gIHZhciByZXBsYWNlID0gZnVuY3Rpb24gcmVwbGFjZShwYXRoLCBzdGF0ZSkge1xuICAgIHdhcm5pbmcoISgodHlwZW9mIHBhdGggPT09ICd1bmRlZmluZWQnID8gJ3VuZGVmaW5lZCcgOiBfdHlwZW9mKHBhdGgpKSA9PT0gJ29iamVjdCcgJiYgcGF0aC5zdGF0ZSAhPT0gdW5kZWZpbmVkICYmIHN0YXRlICE9PSB1bmRlZmluZWQpLCAnWW91IHNob3VsZCBhdm9pZCBwcm92aWRpbmcgYSAybmQgc3RhdGUgYXJndW1lbnQgdG8gcmVwbGFjZSB3aGVuIHRoZSAxc3QgJyArICdhcmd1bWVudCBpcyBhIGxvY2F0aW9uLWxpa2Ugb2JqZWN0IHRoYXQgYWxyZWFkeSBoYXMgc3RhdGU7IGl0IGlzIGlnbm9yZWQnKTtcblxuICAgIHZhciBhY3Rpb24gPSAnUkVQTEFDRSc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGNyZWF0ZUtleSgpLCBoaXN0b3J5LmxvY2F0aW9uKTtcblxuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG5cbiAgICAgIGhpc3RvcnkuZW50cmllc1toaXN0b3J5LmluZGV4XSA9IGxvY2F0aW9uO1xuXG4gICAgICBzZXRTdGF0ZSh7IGFjdGlvbjogYWN0aW9uLCBsb2NhdGlvbjogbG9jYXRpb24gfSk7XG4gICAgfSk7XG4gIH07XG5cbiAgdmFyIGdvID0gZnVuY3Rpb24gZ28obikge1xuICAgIHZhciBuZXh0SW5kZXggPSBjbGFtcChoaXN0b3J5LmluZGV4ICsgbiwgMCwgaGlzdG9yeS5lbnRyaWVzLmxlbmd0aCAtIDEpO1xuXG4gICAgdmFyIGFjdGlvbiA9ICdQT1AnO1xuICAgIHZhciBsb2NhdGlvbiA9IGhpc3RvcnkuZW50cmllc1tuZXh0SW5kZXhdO1xuXG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmIChvaykge1xuICAgICAgICBzZXRTdGF0ZSh7XG4gICAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uLFxuICAgICAgICAgIGluZGV4OiBuZXh0SW5kZXhcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBNaW1pYyB0aGUgYmVoYXZpb3Igb2YgRE9NIGhpc3RvcmllcyBieVxuICAgICAgICAvLyBjYXVzaW5nIGEgcmVuZGVyIGFmdGVyIGEgY2FuY2VsbGVkIFBPUC5cbiAgICAgICAgc2V0U3RhdGUoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfTtcblxuICB2YXIgZ29CYWNrID0gZnVuY3Rpb24gZ29CYWNrKCkge1xuICAgIHJldHVybiBnbygtMSk7XG4gIH07XG5cbiAgdmFyIGdvRm9yd2FyZCA9IGZ1bmN0aW9uIGdvRm9yd2FyZCgpIHtcbiAgICByZXR1cm4gZ28oMSk7XG4gIH07XG5cbiAgdmFyIGNhbkdvID0gZnVuY3Rpb24gY2FuR28obikge1xuICAgIHZhciBuZXh0SW5kZXggPSBoaXN0b3J5LmluZGV4ICsgbjtcbiAgICByZXR1cm4gbmV4dEluZGV4ID49IDAgJiYgbmV4dEluZGV4IDwgaGlzdG9yeS5lbnRyaWVzLmxlbmd0aDtcbiAgfTtcblxuICB2YXIgYmxvY2sgPSBmdW5jdGlvbiBibG9jaygpIHtcbiAgICB2YXIgcHJvbXB0ID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiBmYWxzZTtcbiAgICByZXR1cm4gdHJhbnNpdGlvbk1hbmFnZXIuc2V0UHJvbXB0KHByb21wdCk7XG4gIH07XG5cbiAgdmFyIGxpc3RlbiA9IGZ1bmN0aW9uIGxpc3RlbihsaXN0ZW5lcikge1xuICAgIHJldHVybiB0cmFuc2l0aW9uTWFuYWdlci5hcHBlbmRMaXN0ZW5lcihsaXN0ZW5lcik7XG4gIH07XG5cbiAgdmFyIGhpc3RvcnkgPSB7XG4gICAgbGVuZ3RoOiBlbnRyaWVzLmxlbmd0aCxcbiAgICBhY3Rpb246ICdQT1AnLFxuICAgIGxvY2F0aW9uOiBlbnRyaWVzW2luZGV4XSxcbiAgICBpbmRleDogaW5kZXgsXG4gICAgZW50cmllczogZW50cmllcyxcbiAgICBjcmVhdGVIcmVmOiBjcmVhdGVIcmVmLFxuICAgIHB1c2g6IHB1c2gsXG4gICAgcmVwbGFjZTogcmVwbGFjZSxcbiAgICBnbzogZ28sXG4gICAgZ29CYWNrOiBnb0JhY2ssXG4gICAgZ29Gb3J3YXJkOiBnb0ZvcndhcmQsXG4gICAgY2FuR286IGNhbkdvLFxuICAgIGJsb2NrOiBibG9jayxcbiAgICBsaXN0ZW46IGxpc3RlblxuICB9O1xuXG4gIHJldHVybiBoaXN0b3J5O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY3JlYXRlTWVtb3J5SGlzdG9yeTsiLCIvLyBXcml0dGVuIGluIHRoaXMgcm91bmQgYWJvdXQgd2F5IGZvciBiYWJlbC10cmFuc2Zvcm0taW1wb3J0c1xuaW1wb3J0IFJvdXRlciBmcm9tIFwicmVhY3Qtcm91dGVyL2VzL1JvdXRlclwiO1xuXG5leHBvcnQgZGVmYXVsdCBSb3V0ZXI7IiwiZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG5pbXBvcnQgd2FybmluZyBmcm9tIFwid2FybmluZ1wiO1xuaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tIFwicHJvcC10eXBlc1wiO1xuaW1wb3J0IHsgY3JlYXRlQnJvd3Nlckhpc3RvcnkgYXMgY3JlYXRlSGlzdG9yeSB9IGZyb20gXCJoaXN0b3J5XCI7XG5pbXBvcnQgUm91dGVyIGZyb20gXCIuL1JvdXRlclwiO1xuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBhIDxSb3V0ZXI+IHRoYXQgdXNlcyBIVE1MNSBoaXN0b3J5LlxuICovXG5cbnZhciBCcm93c2VyUm91dGVyID0gZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzKEJyb3dzZXJSb3V0ZXIsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIEJyb3dzZXJSb3V0ZXIoKSB7XG4gICAgdmFyIF90ZW1wLCBfdGhpcywgX3JldDtcblxuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBCcm93c2VyUm91dGVyKTtcblxuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIHJldHVybiBfcmV0ID0gKF90ZW1wID0gKF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgX1JlYWN0JENvbXBvbmVudC5jYWxsLmFwcGx5KF9SZWFjdCRDb21wb25lbnQsIFt0aGlzXS5jb25jYXQoYXJncykpKSwgX3RoaXMpLCBfdGhpcy5oaXN0b3J5ID0gY3JlYXRlSGlzdG9yeShfdGhpcy5wcm9wcyksIF90ZW1wKSwgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oX3RoaXMsIF9yZXQpO1xuICB9XG5cbiAgQnJvd3NlclJvdXRlci5wcm90b3R5cGUuY29tcG9uZW50V2lsbE1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbE1vdW50KCkge1xuICAgIHdhcm5pbmcoIXRoaXMucHJvcHMuaGlzdG9yeSwgXCI8QnJvd3NlclJvdXRlcj4gaWdub3JlcyB0aGUgaGlzdG9yeSBwcm9wLiBUbyB1c2UgYSBjdXN0b20gaGlzdG9yeSwgXCIgKyBcInVzZSBgaW1wb3J0IHsgUm91dGVyIH1gIGluc3RlYWQgb2YgYGltcG9ydCB7IEJyb3dzZXJSb3V0ZXIgYXMgUm91dGVyIH1gLlwiKTtcbiAgfTtcblxuICBCcm93c2VyUm91dGVyLnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGVyLCB7IGhpc3Rvcnk6IHRoaXMuaGlzdG9yeSwgY2hpbGRyZW46IHRoaXMucHJvcHMuY2hpbGRyZW4gfSk7XG4gIH07XG5cbiAgcmV0dXJuIEJyb3dzZXJSb3V0ZXI7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbkJyb3dzZXJSb3V0ZXIucHJvcFR5cGVzID0ge1xuICBiYXNlbmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgZm9yY2VSZWZyZXNoOiBQcm9wVHlwZXMuYm9vbCxcbiAgZ2V0VXNlckNvbmZpcm1hdGlvbjogUHJvcFR5cGVzLmZ1bmMsXG4gIGtleUxlbmd0aDogUHJvcFR5cGVzLm51bWJlcixcbiAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlXG59O1xuXG5cbmV4cG9ydCBkZWZhdWx0IEJyb3dzZXJSb3V0ZXI7IiwiaW1wb3J0IHBhdGhUb1JlZ2V4cCBmcm9tIFwicGF0aC10by1yZWdleHBcIjtcblxudmFyIHBhdHRlcm5DYWNoZSA9IHt9O1xudmFyIGNhY2hlTGltaXQgPSAxMDAwMDtcbnZhciBjYWNoZUNvdW50ID0gMDtcblxudmFyIGNvbXBpbGVQYXRoID0gZnVuY3Rpb24gY29tcGlsZVBhdGgocGF0dGVybiwgb3B0aW9ucykge1xuICB2YXIgY2FjaGVLZXkgPSBcIlwiICsgb3B0aW9ucy5lbmQgKyBvcHRpb25zLnN0cmljdCArIG9wdGlvbnMuc2Vuc2l0aXZlO1xuICB2YXIgY2FjaGUgPSBwYXR0ZXJuQ2FjaGVbY2FjaGVLZXldIHx8IChwYXR0ZXJuQ2FjaGVbY2FjaGVLZXldID0ge30pO1xuXG4gIGlmIChjYWNoZVtwYXR0ZXJuXSkgcmV0dXJuIGNhY2hlW3BhdHRlcm5dO1xuXG4gIHZhciBrZXlzID0gW107XG4gIHZhciByZSA9IHBhdGhUb1JlZ2V4cChwYXR0ZXJuLCBrZXlzLCBvcHRpb25zKTtcbiAgdmFyIGNvbXBpbGVkUGF0dGVybiA9IHsgcmU6IHJlLCBrZXlzOiBrZXlzIH07XG5cbiAgaWYgKGNhY2hlQ291bnQgPCBjYWNoZUxpbWl0KSB7XG4gICAgY2FjaGVbcGF0dGVybl0gPSBjb21waWxlZFBhdHRlcm47XG4gICAgY2FjaGVDb3VudCsrO1xuICB9XG5cbiAgcmV0dXJuIGNvbXBpbGVkUGF0dGVybjtcbn07XG5cbi8qKlxuICogUHVibGljIEFQSSBmb3IgbWF0Y2hpbmcgYSBVUkwgcGF0aG5hbWUgdG8gYSBwYXRoIHBhdHRlcm4uXG4gKi9cbnZhciBtYXRjaFBhdGggPSBmdW5jdGlvbiBtYXRjaFBhdGgocGF0aG5hbWUpIHtcbiAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IHt9O1xuICB2YXIgcGFyZW50ID0gYXJndW1lbnRzWzJdO1xuXG4gIGlmICh0eXBlb2Ygb3B0aW9ucyA9PT0gXCJzdHJpbmdcIikgb3B0aW9ucyA9IHsgcGF0aDogb3B0aW9ucyB9O1xuXG4gIHZhciBfb3B0aW9ucyA9IG9wdGlvbnMsXG4gICAgICBwYXRoID0gX29wdGlvbnMucGF0aCxcbiAgICAgIF9vcHRpb25zJGV4YWN0ID0gX29wdGlvbnMuZXhhY3QsXG4gICAgICBleGFjdCA9IF9vcHRpb25zJGV4YWN0ID09PSB1bmRlZmluZWQgPyBmYWxzZSA6IF9vcHRpb25zJGV4YWN0LFxuICAgICAgX29wdGlvbnMkc3RyaWN0ID0gX29wdGlvbnMuc3RyaWN0LFxuICAgICAgc3RyaWN0ID0gX29wdGlvbnMkc3RyaWN0ID09PSB1bmRlZmluZWQgPyBmYWxzZSA6IF9vcHRpb25zJHN0cmljdCxcbiAgICAgIF9vcHRpb25zJHNlbnNpdGl2ZSA9IF9vcHRpb25zLnNlbnNpdGl2ZSxcbiAgICAgIHNlbnNpdGl2ZSA9IF9vcHRpb25zJHNlbnNpdGl2ZSA9PT0gdW5kZWZpbmVkID8gZmFsc2UgOiBfb3B0aW9ucyRzZW5zaXRpdmU7XG5cblxuICBpZiAocGF0aCA9PSBudWxsKSByZXR1cm4gcGFyZW50O1xuXG4gIHZhciBfY29tcGlsZVBhdGggPSBjb21waWxlUGF0aChwYXRoLCB7IGVuZDogZXhhY3QsIHN0cmljdDogc3RyaWN0LCBzZW5zaXRpdmU6IHNlbnNpdGl2ZSB9KSxcbiAgICAgIHJlID0gX2NvbXBpbGVQYXRoLnJlLFxuICAgICAga2V5cyA9IF9jb21waWxlUGF0aC5rZXlzO1xuXG4gIHZhciBtYXRjaCA9IHJlLmV4ZWMocGF0aG5hbWUpO1xuXG4gIGlmICghbWF0Y2gpIHJldHVybiBudWxsO1xuXG4gIHZhciB1cmwgPSBtYXRjaFswXSxcbiAgICAgIHZhbHVlcyA9IG1hdGNoLnNsaWNlKDEpO1xuXG4gIHZhciBpc0V4YWN0ID0gcGF0aG5hbWUgPT09IHVybDtcblxuICBpZiAoZXhhY3QgJiYgIWlzRXhhY3QpIHJldHVybiBudWxsO1xuXG4gIHJldHVybiB7XG4gICAgcGF0aDogcGF0aCwgLy8gdGhlIHBhdGggcGF0dGVybiB1c2VkIHRvIG1hdGNoXG4gICAgdXJsOiBwYXRoID09PSBcIi9cIiAmJiB1cmwgPT09IFwiXCIgPyBcIi9cIiA6IHVybCwgLy8gdGhlIG1hdGNoZWQgcG9ydGlvbiBvZiB0aGUgVVJMXG4gICAgaXNFeGFjdDogaXNFeGFjdCwgLy8gd2hldGhlciBvciBub3Qgd2UgbWF0Y2hlZCBleGFjdGx5XG4gICAgcGFyYW1zOiBrZXlzLnJlZHVjZShmdW5jdGlvbiAobWVtbywga2V5LCBpbmRleCkge1xuICAgICAgbWVtb1trZXkubmFtZV0gPSB2YWx1ZXNbaW5kZXhdO1xuICAgICAgcmV0dXJuIG1lbW87XG4gICAgfSwge30pXG4gIH07XG59O1xuXG5leHBvcnQgZGVmYXVsdCBtYXRjaFBhdGg7IiwiZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG5pbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gXCJwcm9wLXR5cGVzXCI7XG5pbXBvcnQgd2FybmluZyBmcm9tIFwid2FybmluZ1wiO1xuaW1wb3J0IGludmFyaWFudCBmcm9tIFwiaW52YXJpYW50XCI7XG5pbXBvcnQgbWF0Y2hQYXRoIGZyb20gXCIuL21hdGNoUGF0aFwiO1xuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciByZW5kZXJpbmcgdGhlIGZpcnN0IDxSb3V0ZT4gdGhhdCBtYXRjaGVzLlxuICovXG5cbnZhciBTd2l0Y2ggPSBmdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHMoU3dpdGNoLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBTd2l0Y2goKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFN3aXRjaCk7XG5cbiAgICByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgX1JlYWN0JENvbXBvbmVudC5hcHBseSh0aGlzLCBhcmd1bWVudHMpKTtcbiAgfVxuXG4gIFN3aXRjaC5wcm90b3R5cGUuY29tcG9uZW50V2lsbE1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbE1vdW50KCkge1xuICAgIGludmFyaWFudCh0aGlzLmNvbnRleHQucm91dGVyLCBcIllvdSBzaG91bGQgbm90IHVzZSA8U3dpdGNoPiBvdXRzaWRlIGEgPFJvdXRlcj5cIik7XG4gIH07XG5cbiAgU3dpdGNoLnByb3RvdHlwZS5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhuZXh0UHJvcHMpIHtcbiAgICB3YXJuaW5nKCEobmV4dFByb3BzLmxvY2F0aW9uICYmICF0aGlzLnByb3BzLmxvY2F0aW9uKSwgJzxTd2l0Y2g+IGVsZW1lbnRzIHNob3VsZCBub3QgY2hhbmdlIGZyb20gdW5jb250cm9sbGVkIHRvIGNvbnRyb2xsZWQgKG9yIHZpY2UgdmVyc2EpLiBZb3UgaW5pdGlhbGx5IHVzZWQgbm8gXCJsb2NhdGlvblwiIHByb3AgYW5kIHRoZW4gcHJvdmlkZWQgb25lIG9uIGEgc3Vic2VxdWVudCByZW5kZXIuJyk7XG5cbiAgICB3YXJuaW5nKCEoIW5leHRQcm9wcy5sb2NhdGlvbiAmJiB0aGlzLnByb3BzLmxvY2F0aW9uKSwgJzxTd2l0Y2g+IGVsZW1lbnRzIHNob3VsZCBub3QgY2hhbmdlIGZyb20gY29udHJvbGxlZCB0byB1bmNvbnRyb2xsZWQgKG9yIHZpY2UgdmVyc2EpLiBZb3UgcHJvdmlkZWQgYSBcImxvY2F0aW9uXCIgcHJvcCBpbml0aWFsbHkgYnV0IG9taXR0ZWQgaXQgb24gYSBzdWJzZXF1ZW50IHJlbmRlci4nKTtcbiAgfTtcblxuICBTd2l0Y2gucHJvdG90eXBlLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICB2YXIgcm91dGUgPSB0aGlzLmNvbnRleHQucm91dGVyLnJvdXRlO1xuICAgIHZhciBjaGlsZHJlbiA9IHRoaXMucHJvcHMuY2hpbGRyZW47XG5cbiAgICB2YXIgbG9jYXRpb24gPSB0aGlzLnByb3BzLmxvY2F0aW9uIHx8IHJvdXRlLmxvY2F0aW9uO1xuXG4gICAgdmFyIG1hdGNoID0gdm9pZCAwLFxuICAgICAgICBjaGlsZCA9IHZvaWQgMDtcbiAgICBSZWFjdC5DaGlsZHJlbi5mb3JFYWNoKGNoaWxkcmVuLCBmdW5jdGlvbiAoZWxlbWVudCkge1xuICAgICAgaWYgKG1hdGNoID09IG51bGwgJiYgUmVhY3QuaXNWYWxpZEVsZW1lbnQoZWxlbWVudCkpIHtcbiAgICAgICAgdmFyIF9lbGVtZW50JHByb3BzID0gZWxlbWVudC5wcm9wcyxcbiAgICAgICAgICAgIHBhdGhQcm9wID0gX2VsZW1lbnQkcHJvcHMucGF0aCxcbiAgICAgICAgICAgIGV4YWN0ID0gX2VsZW1lbnQkcHJvcHMuZXhhY3QsXG4gICAgICAgICAgICBzdHJpY3QgPSBfZWxlbWVudCRwcm9wcy5zdHJpY3QsXG4gICAgICAgICAgICBzZW5zaXRpdmUgPSBfZWxlbWVudCRwcm9wcy5zZW5zaXRpdmUsXG4gICAgICAgICAgICBmcm9tID0gX2VsZW1lbnQkcHJvcHMuZnJvbTtcblxuICAgICAgICB2YXIgcGF0aCA9IHBhdGhQcm9wIHx8IGZyb207XG5cbiAgICAgICAgY2hpbGQgPSBlbGVtZW50O1xuICAgICAgICBtYXRjaCA9IG1hdGNoUGF0aChsb2NhdGlvbi5wYXRobmFtZSwgeyBwYXRoOiBwYXRoLCBleGFjdDogZXhhY3QsIHN0cmljdDogc3RyaWN0LCBzZW5zaXRpdmU6IHNlbnNpdGl2ZSB9LCByb3V0ZS5tYXRjaCk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICByZXR1cm4gbWF0Y2ggPyBSZWFjdC5jbG9uZUVsZW1lbnQoY2hpbGQsIHsgbG9jYXRpb246IGxvY2F0aW9uLCBjb21wdXRlZE1hdGNoOiBtYXRjaCB9KSA6IG51bGw7XG4gIH07XG5cbiAgcmV0dXJuIFN3aXRjaDtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuU3dpdGNoLmNvbnRleHRUeXBlcyA9IHtcbiAgcm91dGVyOiBQcm9wVHlwZXMuc2hhcGUoe1xuICAgIHJvdXRlOiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWRcbiAgfSkuaXNSZXF1aXJlZFxufTtcblN3aXRjaC5wcm9wVHlwZXMgPSB7XG4gIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcbiAgbG9jYXRpb246IFByb3BUeXBlcy5vYmplY3Rcbn07XG5cblxuZXhwb3J0IGRlZmF1bHQgU3dpdGNoOyIsIi8vIFdyaXR0ZW4gaW4gdGhpcyByb3VuZCBhYm91dCB3YXkgZm9yIGJhYmVsLXRyYW5zZm9ybS1pbXBvcnRzXG5pbXBvcnQgU3dpdGNoIGZyb20gXCJyZWFjdC1yb3V0ZXIvZXMvU3dpdGNoXCI7XG5cbmV4cG9ydCBkZWZhdWx0IFN3aXRjaDsiLCJ2YXIgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9O1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbmltcG9ydCB3YXJuaW5nIGZyb20gXCJ3YXJuaW5nXCI7XG5pbXBvcnQgaW52YXJpYW50IGZyb20gXCJpbnZhcmlhbnRcIjtcbmltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSBcInByb3AtdHlwZXNcIjtcbmltcG9ydCBtYXRjaFBhdGggZnJvbSBcIi4vbWF0Y2hQYXRoXCI7XG5cbnZhciBpc0VtcHR5Q2hpbGRyZW4gPSBmdW5jdGlvbiBpc0VtcHR5Q2hpbGRyZW4oY2hpbGRyZW4pIHtcbiAgcmV0dXJuIFJlYWN0LkNoaWxkcmVuLmNvdW50KGNoaWxkcmVuKSA9PT0gMDtcbn07XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIG1hdGNoaW5nIGEgc2luZ2xlIHBhdGggYW5kIHJlbmRlcmluZy5cbiAqL1xuXG52YXIgUm91dGUgPSBmdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHMoUm91dGUsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIFJvdXRlKCkge1xuICAgIHZhciBfdGVtcCwgX3RoaXMsIF9yZXQ7XG5cbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgUm91dGUpO1xuXG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgcmV0dXJuIF9yZXQgPSAoX3RlbXAgPSAoX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfUmVhY3QkQ29tcG9uZW50LmNhbGwuYXBwbHkoX1JlYWN0JENvbXBvbmVudCwgW3RoaXNdLmNvbmNhdChhcmdzKSkpLCBfdGhpcyksIF90aGlzLnN0YXRlID0ge1xuICAgICAgbWF0Y2g6IF90aGlzLmNvbXB1dGVNYXRjaChfdGhpcy5wcm9wcywgX3RoaXMuY29udGV4dC5yb3V0ZXIpXG4gICAgfSwgX3RlbXApLCBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihfdGhpcywgX3JldCk7XG4gIH1cblxuICBSb3V0ZS5wcm90b3R5cGUuZ2V0Q2hpbGRDb250ZXh0ID0gZnVuY3Rpb24gZ2V0Q2hpbGRDb250ZXh0KCkge1xuICAgIHJldHVybiB7XG4gICAgICByb3V0ZXI6IF9leHRlbmRzKHt9LCB0aGlzLmNvbnRleHQucm91dGVyLCB7XG4gICAgICAgIHJvdXRlOiB7XG4gICAgICAgICAgbG9jYXRpb246IHRoaXMucHJvcHMubG9jYXRpb24gfHwgdGhpcy5jb250ZXh0LnJvdXRlci5yb3V0ZS5sb2NhdGlvbixcbiAgICAgICAgICBtYXRjaDogdGhpcy5zdGF0ZS5tYXRjaFxuICAgICAgICB9XG4gICAgICB9KVxuICAgIH07XG4gIH07XG5cbiAgUm91dGUucHJvdG90eXBlLmNvbXB1dGVNYXRjaCA9IGZ1bmN0aW9uIGNvbXB1dGVNYXRjaChfcmVmLCByb3V0ZXIpIHtcbiAgICB2YXIgY29tcHV0ZWRNYXRjaCA9IF9yZWYuY29tcHV0ZWRNYXRjaCxcbiAgICAgICAgbG9jYXRpb24gPSBfcmVmLmxvY2F0aW9uLFxuICAgICAgICBwYXRoID0gX3JlZi5wYXRoLFxuICAgICAgICBzdHJpY3QgPSBfcmVmLnN0cmljdCxcbiAgICAgICAgZXhhY3QgPSBfcmVmLmV4YWN0LFxuICAgICAgICBzZW5zaXRpdmUgPSBfcmVmLnNlbnNpdGl2ZTtcblxuICAgIGlmIChjb21wdXRlZE1hdGNoKSByZXR1cm4gY29tcHV0ZWRNYXRjaDsgLy8gPFN3aXRjaD4gYWxyZWFkeSBjb21wdXRlZCB0aGUgbWF0Y2ggZm9yIHVzXG5cbiAgICBpbnZhcmlhbnQocm91dGVyLCBcIllvdSBzaG91bGQgbm90IHVzZSA8Um91dGU+IG9yIHdpdGhSb3V0ZXIoKSBvdXRzaWRlIGEgPFJvdXRlcj5cIik7XG5cbiAgICB2YXIgcm91dGUgPSByb3V0ZXIucm91dGU7XG5cbiAgICB2YXIgcGF0aG5hbWUgPSAobG9jYXRpb24gfHwgcm91dGUubG9jYXRpb24pLnBhdGhuYW1lO1xuXG4gICAgcmV0dXJuIG1hdGNoUGF0aChwYXRobmFtZSwgeyBwYXRoOiBwYXRoLCBzdHJpY3Q6IHN0cmljdCwgZXhhY3Q6IGV4YWN0LCBzZW5zaXRpdmU6IHNlbnNpdGl2ZSB9LCByb3V0ZS5tYXRjaCk7XG4gIH07XG5cbiAgUm91dGUucHJvdG90eXBlLmNvbXBvbmVudFdpbGxNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxNb3VudCgpIHtcbiAgICB3YXJuaW5nKCEodGhpcy5wcm9wcy5jb21wb25lbnQgJiYgdGhpcy5wcm9wcy5yZW5kZXIpLCBcIllvdSBzaG91bGQgbm90IHVzZSA8Um91dGUgY29tcG9uZW50PiBhbmQgPFJvdXRlIHJlbmRlcj4gaW4gdGhlIHNhbWUgcm91dGU7IDxSb3V0ZSByZW5kZXI+IHdpbGwgYmUgaWdub3JlZFwiKTtcblxuICAgIHdhcm5pbmcoISh0aGlzLnByb3BzLmNvbXBvbmVudCAmJiB0aGlzLnByb3BzLmNoaWxkcmVuICYmICFpc0VtcHR5Q2hpbGRyZW4odGhpcy5wcm9wcy5jaGlsZHJlbikpLCBcIllvdSBzaG91bGQgbm90IHVzZSA8Um91dGUgY29tcG9uZW50PiBhbmQgPFJvdXRlIGNoaWxkcmVuPiBpbiB0aGUgc2FtZSByb3V0ZTsgPFJvdXRlIGNoaWxkcmVuPiB3aWxsIGJlIGlnbm9yZWRcIik7XG5cbiAgICB3YXJuaW5nKCEodGhpcy5wcm9wcy5yZW5kZXIgJiYgdGhpcy5wcm9wcy5jaGlsZHJlbiAmJiAhaXNFbXB0eUNoaWxkcmVuKHRoaXMucHJvcHMuY2hpbGRyZW4pKSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFJvdXRlIHJlbmRlcj4gYW5kIDxSb3V0ZSBjaGlsZHJlbj4gaW4gdGhlIHNhbWUgcm91dGU7IDxSb3V0ZSBjaGlsZHJlbj4gd2lsbCBiZSBpZ25vcmVkXCIpO1xuICB9O1xuXG4gIFJvdXRlLnByb3RvdHlwZS5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhuZXh0UHJvcHMsIG5leHRDb250ZXh0KSB7XG4gICAgd2FybmluZyghKG5leHRQcm9wcy5sb2NhdGlvbiAmJiAhdGhpcy5wcm9wcy5sb2NhdGlvbiksICc8Um91dGU+IGVsZW1lbnRzIHNob3VsZCBub3QgY2hhbmdlIGZyb20gdW5jb250cm9sbGVkIHRvIGNvbnRyb2xsZWQgKG9yIHZpY2UgdmVyc2EpLiBZb3UgaW5pdGlhbGx5IHVzZWQgbm8gXCJsb2NhdGlvblwiIHByb3AgYW5kIHRoZW4gcHJvdmlkZWQgb25lIG9uIGEgc3Vic2VxdWVudCByZW5kZXIuJyk7XG5cbiAgICB3YXJuaW5nKCEoIW5leHRQcm9wcy5sb2NhdGlvbiAmJiB0aGlzLnByb3BzLmxvY2F0aW9uKSwgJzxSb3V0ZT4gZWxlbWVudHMgc2hvdWxkIG5vdCBjaGFuZ2UgZnJvbSBjb250cm9sbGVkIHRvIHVuY29udHJvbGxlZCAob3IgdmljZSB2ZXJzYSkuIFlvdSBwcm92aWRlZCBhIFwibG9jYXRpb25cIiBwcm9wIGluaXRpYWxseSBidXQgb21pdHRlZCBpdCBvbiBhIHN1YnNlcXVlbnQgcmVuZGVyLicpO1xuXG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICBtYXRjaDogdGhpcy5jb21wdXRlTWF0Y2gobmV4dFByb3BzLCBuZXh0Q29udGV4dC5yb3V0ZXIpXG4gICAgfSk7XG4gIH07XG5cbiAgUm91dGUucHJvdG90eXBlLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICB2YXIgbWF0Y2ggPSB0aGlzLnN0YXRlLm1hdGNoO1xuICAgIHZhciBfcHJvcHMgPSB0aGlzLnByb3BzLFxuICAgICAgICBjaGlsZHJlbiA9IF9wcm9wcy5jaGlsZHJlbixcbiAgICAgICAgY29tcG9uZW50ID0gX3Byb3BzLmNvbXBvbmVudCxcbiAgICAgICAgcmVuZGVyID0gX3Byb3BzLnJlbmRlcjtcbiAgICB2YXIgX2NvbnRleHQkcm91dGVyID0gdGhpcy5jb250ZXh0LnJvdXRlcixcbiAgICAgICAgaGlzdG9yeSA9IF9jb250ZXh0JHJvdXRlci5oaXN0b3J5LFxuICAgICAgICByb3V0ZSA9IF9jb250ZXh0JHJvdXRlci5yb3V0ZSxcbiAgICAgICAgc3RhdGljQ29udGV4dCA9IF9jb250ZXh0JHJvdXRlci5zdGF0aWNDb250ZXh0O1xuXG4gICAgdmFyIGxvY2F0aW9uID0gdGhpcy5wcm9wcy5sb2NhdGlvbiB8fCByb3V0ZS5sb2NhdGlvbjtcbiAgICB2YXIgcHJvcHMgPSB7IG1hdGNoOiBtYXRjaCwgbG9jYXRpb246IGxvY2F0aW9uLCBoaXN0b3J5OiBoaXN0b3J5LCBzdGF0aWNDb250ZXh0OiBzdGF0aWNDb250ZXh0IH07XG5cbiAgICBpZiAoY29tcG9uZW50KSByZXR1cm4gbWF0Y2ggPyBSZWFjdC5jcmVhdGVFbGVtZW50KGNvbXBvbmVudCwgcHJvcHMpIDogbnVsbDtcblxuICAgIGlmIChyZW5kZXIpIHJldHVybiBtYXRjaCA/IHJlbmRlcihwcm9wcykgOiBudWxsO1xuXG4gICAgaWYgKHR5cGVvZiBjaGlsZHJlbiA9PT0gXCJmdW5jdGlvblwiKSByZXR1cm4gY2hpbGRyZW4ocHJvcHMpO1xuXG4gICAgaWYgKGNoaWxkcmVuICYmICFpc0VtcHR5Q2hpbGRyZW4oY2hpbGRyZW4pKSByZXR1cm4gUmVhY3QuQ2hpbGRyZW4ub25seShjaGlsZHJlbik7XG5cbiAgICByZXR1cm4gbnVsbDtcbiAgfTtcblxuICByZXR1cm4gUm91dGU7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cblJvdXRlLnByb3BUeXBlcyA9IHtcbiAgY29tcHV0ZWRNYXRjaDogUHJvcFR5cGVzLm9iamVjdCwgLy8gcHJpdmF0ZSwgZnJvbSA8U3dpdGNoPlxuICBwYXRoOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBleGFjdDogUHJvcFR5cGVzLmJvb2wsXG4gIHN0cmljdDogUHJvcFR5cGVzLmJvb2wsXG4gIHNlbnNpdGl2ZTogUHJvcFR5cGVzLmJvb2wsXG4gIGNvbXBvbmVudDogUHJvcFR5cGVzLmZ1bmMsXG4gIHJlbmRlcjogUHJvcFR5cGVzLmZ1bmMsXG4gIGNoaWxkcmVuOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuZnVuYywgUHJvcFR5cGVzLm5vZGVdKSxcbiAgbG9jYXRpb246IFByb3BUeXBlcy5vYmplY3Rcbn07XG5Sb3V0ZS5jb250ZXh0VHlwZXMgPSB7XG4gIHJvdXRlcjogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICBoaXN0b3J5OiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsXG4gICAgcm91dGU6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcbiAgICBzdGF0aWNDb250ZXh0OiBQcm9wVHlwZXMub2JqZWN0XG4gIH0pXG59O1xuUm91dGUuY2hpbGRDb250ZXh0VHlwZXMgPSB7XG4gIHJvdXRlcjogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkXG59O1xuXG5cbmV4cG9ydCBkZWZhdWx0IFJvdXRlOyIsIi8vIFdyaXR0ZW4gaW4gdGhpcyByb3VuZCBhYm91dCB3YXkgZm9yIGJhYmVsLXRyYW5zZm9ybS1pbXBvcnRzXG5pbXBvcnQgUm91dGUgZnJvbSBcInJlYWN0LXJvdXRlci9lcy9Sb3V0ZVwiO1xuXG5leHBvcnQgZGVmYXVsdCBSb3V0ZTsiLCJ2YXIgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xyXG52YXIgUmVhY3RET00gPSByZXF1aXJlKCdyZWFjdC1kb20nKVxyXG5cclxuZnVuY3Rpb24gU29ydFNlYXJjaCh1c2VycywgYXJ0aXN0cywgc29uZ3MsIGFsYnVtcylcclxue1xyXG5cdHZhciBzZWFyY2hfbGlzdCA9IFtdO1xyXG5cclxuXHRmb3IgKHZhciBrZXkgaW4gdXNlcnMpXHJcblx0e1xyXG5cdFx0dmFyIHVzZXJfZGlzcGxheSA9IHVzZXJzW2tleV0udXNlcm5hbWU7XHJcblx0XHR2YXIgdXNlcl91cmwgPSBcIi91c2VyL1wiICsgdXNlcnNba2V5XS51c2VybmFtZTtcclxuXHRcdHNlYXJjaF9saXN0LnB1c2goW3VzZXJfZGlzcGxheSwgdXNlcl91cmxdKTtcclxuIFx0fVxyXG5cclxuIFx0Zm9yICh2YXIga2V5IGluIGFydGlzdHMpXHJcbiBcdHtcclxuXHQgXHR2YXIgYXJ0aXN0X2Rpc3BsYXkgPSBhcnRpc3RzW2tleV0uYXJ0aXN0O1xyXG5cdCBcdHZhciBhcnRpc3RfdXJsID0gXCIvYXJ0aXN0L1wiICsgYXJ0aXN0c1trZXldLmFydGlzdFxyXG5cdCBcdHNlYXJjaF9saXN0LnB1c2goW2FydGlzdF9kaXNwbGF5LCBhcnRpc3RfdXJsXSk7XHJcblx0fVxyXG5cclxuXHRmb3IgKHZhciBrZXkgaW4gc29uZ3MpXHJcblx0e1xyXG5cdCBcdHZhciBzb25nX2Rpc3BsYXkgPSBzb25nc1trZXldLnNvbmc7XHJcblx0IFx0dmFyIHNvbmdfdXJsID0gXCIvcG9zdC9cIiArIHNvbmdzW2tleV0uYXJ0aXN0ICsgXCIvXCIgKyBzb25nc1trZXldLnNvbmc7XHJcblx0IFx0c2VhcmNoX2xpc3QucHVzaChbc29uZ19kaXNwbGF5LCBzb25nX3VybF0pO1xyXG4gXHR9XHJcblxyXG4gXHRmb3IgKHZhciBrZXkgaW4gYWxidW1zKVxyXG4gXHR7XHJcblx0IFx0dmFyIGFsYnVtX2Rpc3BsYXkgPSBhbGJ1bXNba2V5XS5hbGJ1bTtcclxuXHQgXHR2YXIgYWxidW1fdXJsID0gXCIvYWxidW0vXCIgKyBhbGJ1bXNba2V5XS5hcnRpc3QgKyBcIi9cIiArIGFsYnVtc1trZXldLmFsYnVtO1xyXG5cdCBcdHNlYXJjaF9saXN0LnB1c2goW2FsYnVtX2Rpc3BsYXksIGFsYnVtX3VybF0pO1xyXG4gXHR9XHJcblxyXG4gICAgc2VhcmNoX2xpc3Quc29ydChmdW5jdGlvbihhLCBiKXtcclxuICAgIFx0aWYgKGFbMF0gPiBiWzBdKVxyXG4gICAgICAgIHtcclxuICAgICAgICBcdHJldHVybiAxO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gLTE7XHJcbiAgICB9KTtcclxuICAgIHJldHVybiBzZWFyY2hfbGlzdDtcclxufVxyXG5cclxuY2xhc3MgU2VhcmNoSXRlbSBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XHJcblxyXG5cdGNvbnN0cnVjdG9yKHByb3BzKSB7XHJcblx0XHRzdXBlcihwcm9wcyk7XHJcblx0XHR0aGlzLml0ZW1fbGlzdCA9IFtdO1xyXG5cdH1cclxuXHJcblx0Y2xlYXJJdGVtcygpXHJcblx0e1xyXG5cdFx0dGhpcy5pdGVtX2xpc3QgPSBbXTtcclxuXHRcdHRoaXMuZm9yY2VVcGRhdGUoKTtcclxuXHR9XHJcblxyXG5cdHJlbmRlckl0ZW0oaXRlbSwgdXJsKVxyXG5cdHtcclxuXHRcdHRoaXMuaXRlbV9saXN0LnB1c2goPGRpdj48YSBocmVmID0ge3VybH0+IHtpdGVtfSA8L2E+PC9kaXY+KTtcclxuXHRcdHRoaXMuZm9yY2VVcGRhdGUoKTtcclxuXHR9XHJcblxyXG5cdHJlbmRlciAoKVxyXG5cdHtcclxuXHRcdHJldHVybihcclxuXHRcdFx0PGRpdiBjbGFzc05hbWU9XCJTZWFyY2hJdGVtc1wiPlxyXG5cdFx0XHRcdHt0aGlzLml0ZW1fbGlzdH1cclxuXHRcdFx0PC9kaXY+XHJcblx0XHQpO1xyXG5cdH1cclxufTtcclxuXHJcbmNsYXNzIFNlYXJjaExpc3QgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xyXG5cdFxyXG5cdGNvbnN0cnVjdG9yKHByb3BzKVxyXG5cdHtcclxuXHRcdHN1cGVyKHByb3BzKTtcclxuXHRcdHRoaXMuc2VhcmNoX2xpc3QgPSBSZWFjdC5jcmVhdGVSZWYoKTtcclxuXHR9XHJcblxyXG5cdGhhbmRsZUNoYW5nZSgpXHJcblx0e1xyXG5cclxuXHRcdHZhciBpbnB1dCA9IGV2ZW50LnRhcmdldC52YWx1ZTtcclxuXHRcdHZhciB0aGF0ID0gdGhpcztcclxuXHJcblx0ICAgIGZldGNoKFwiL2Fib3V0XCIsIHtcclxuXHQgICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcblx0ICAgICAgICBoZWFkZXJzOiB7XHJcblx0ICAgICAgICBcdEFjY2VwdDogJ2FwcGxpY2F0aW9uL2pzb24nLFxyXG5cdCAgICAgICAgXHQnQXV0aG9yaXphdGlvbic6ICdCYXNpYycsXHJcblx0ICAgICAgICBcdCdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXHJcblx0ICAgICAgICB9LFxyXG5cdCAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe3R5cGU6IFwic2VhcmNoXCIsIHRleHQ6IGlucHV0fSksXHJcblx0ICAgIH0pLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHsgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTt9KVxyXG5cdCAgICAudGhlbihmdW5jdGlvbiAoZGF0YSkgeyAgICBcdFxyXG5cdCAgICBcdHZhciBzZWFyY2hfcmVzdWx0cyA9IFNvcnRTZWFyY2goZGF0YS51c2VycywgZGF0YS5hcnRpc3RzLCBkYXRhLnNvbmdzLCBkYXRhLmFsYnVtcyk7XHJcblx0ICAgIFx0dGhhdC5zZWFyY2hfbGlzdC5jdXJyZW50LmNsZWFySXRlbXMoKTtcclxuXHQgICAgXHRmb3IgKHZhciBrZXkgaW4gc2VhcmNoX3Jlc3VsdHMpXHJcblx0ICAgICAgICB7XHJcblx0ICAgICAgICBcdHRoYXQuc2VhcmNoX2xpc3QuY3VycmVudC5yZW5kZXJJdGVtKHNlYXJjaF9yZXN1bHRzW2tleV1bMF0sIHNlYXJjaF9yZXN1bHRzW2tleV1bMV0pO1xyXG5cdCAgICAgICAgfVxyXG5cdCBcdH0pXHRcclxuXHR9XHJcblxyXG5cdHJlbmRlciAoKVxyXG5cdHtcclxuXHRcdHJldHVybihcclxuXHRcdFx0PGRpdj5cclxuXHRcdFx0XHQ8aW5wdXQgb25DaGFuZ2U9e3RoaXMuaGFuZGxlQ2hhbmdlLmJpbmQodGhpcyl9IHBsYWNlaG9sZGVyID0gXCJTZWFyY2hcIiB0eXBlPSd0ZXh0JyBuYW1lPSdjb3VudHJ5JyBjbGFzc05hbWU9J3NlYXJjaF9iYXInLz5cclxuXHRcdFx0XHQ8U2VhcmNoSXRlbSByZWY9e3RoaXMuc2VhcmNoX2xpc3R9Lz5cclxuXHRcdFx0PC9kaXY+XHJcblx0XHQpO1xyXG5cclxuXHR9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFN0YW5kYXJkSGVhZGVyIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcclxuXHJcblx0Y29uc3RydWN0b3IgKHByb3BzKVxyXG5cdHtcclxuXHRcdHN1cGVyKHByb3BzKTtcclxuXHRcdHRoaXMuc2VhcmNoX2xpc3QgPSBSZWFjdC5jcmVhdGVSZWYoKTtcclxuXHR9XHJcblxyXG5cdGxvZ291dENsaWNrZWQgKClcclxuXHR7XHJcblx0ICAgIGZldGNoKCcvbG9nb3V0Jywge1xyXG5cdCAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcclxuXHQgICAgICAgIGhlYWRlcnM6IHtcclxuXHQgICAgICAgIFx0QWNjZXB0OiAnYXBwbGljYXRpb24vanNvbicsXHJcblx0ICAgICAgICBcdCdBdXRob3JpemF0aW9uJzogJ0Jhc2ljJyxcclxuXHQgICAgICAgIFx0J0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuXHQgICAgICAgIH0sXHJcblx0ICAgIH0pXHJcblx0ICAgIC50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7IHJldHVybiByZXNwb25zZS5qc29uKCk7fSlcclxuXHQgICAgLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsgICAgXHRcclxuXHQgICAgXHRsb2NhdGlvbi5yZWxvYWQodHJ1ZSk7XHJcblx0IFx0fSlcdFx0XHJcblx0fVxyXG5cclxuICByZW5kZXIoKSB7XHJcblxyXG4gIFx0dmFyIGxvZ2luX2luZm8gPSA8ZGl2PlxyXG5cdFx0XHQgICAgICAgIDxhIHN0eWxlID0ge3ttYXJnaW5SaWdodDogJzEwcHgnfX0gaHJlZiA9IHtcIi91c2VyL1wiICsgdGhpcy5wcm9wcy51c2VybmFtZX0+IHt0aGlzLnByb3BzLnVzZXJuYW1lfSA8L2E+XHJcblx0XHRcdCAgICAgICAgPGEgaHJlZj1cIi9cIiBvbkNsaWNrID0ge3RoaXMubG9nb3V0Q2xpY2tlZC5iaW5kKHRoaXMpfT5Mb2dvdXQ8L2E+XHJcbiAgXHRcdFx0ICAgPC9kaXY+XHJcbiAgXHRpZiAodGhpcy5wcm9wcy51c2VybmFtZSA9PSB1bmRlZmluZWQpXHJcbiAgXHR7XHJcblx0ICBcdGxvZ2luX2luZm8gPSA8ZGl2PlxyXG5cclxuXHRcdFx0ICAgICAgICA8YSBzdHlsZSA9IHt7bWFyZ2luUmlnaHQ6ICcxMHB4J319aHJlZj1cIi9yZWdpc3RlclwiID5SZWdpc3RlcjwvYT5cclxuXHRcdFx0ICAgICAgICA8YSBocmVmPVwiL2xvZ2luXCI+TG9naW48L2E+XHJcblx0XHRcdDwvZGl2PlxyXG4gIFx0fVxyXG4gICAgcmV0dXJuIChcclxuXHJcbjxkaXY+XHJcbjxodG1sIGxhbmc9J2VuJy8+XHJcblx0PGhlYWQ+XHJcblx0XHQ8dGl0bGU+TXkgTm9kZSBTaXRlPC90aXRsZT5cclxuXHRcdDxsaW5rIHJlbD1cInN0eWxlc2hlZXRcIiBocmVmPVwiaHR0cHM6Ly9tYXhjZG4uYm9vdHN0cmFwY2RuLmNvbS9ib290c3RyYXAvNC4wLjAvY3NzL2Jvb3RzdHJhcC5taW4uY3NzXCIvPlxyXG5cclxuXHQ8L2hlYWQ+XHJcblx0PGhlYWRlcj5cclxuXHRcdDxkaXYgaWQgPSBcInJlYWN0dGVzdFwiIHN0eWxlID0ge3twb3NpdGlvbjonZml4ZWQnLCBoZWlnaHQ6JzYwcHgnLCBiYWNrZ3JvdW5kQ29sb3I6ICcjMTc4Mjc1Jywgd2lkdGg6JzEwMCUnLCB6SW5kZXg6JzEwJ319PlxyXG5cdFx0XHQ8ZGl2IHN0eWxlID0ge3twb3NpdGlvbjonYWJzb2x1dGUnLHRvcDonMTVweCcsIGxlZnQ6JzEwcHgnfX0+PGEgaHJlZj1cIi9cIiA+SG9tZTwvYT48L2Rpdj5cclxuXHRcdCAgICA8ZGl2IHN0eWxlID0ge3twb3NpdGlvbjonYWJzb2x1dGUnLHRvcDonMTVweCcsIGxlZnQ6JzIxMHB4J319PlxyXG5cdFx0ICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInNlYXJjaF9saXN0XCIgc3R5bGUgPSB7e292ZXJmbG93OiAnYXV0byd9fT5cclxuXHRcdCAgICAgICAgPFNlYXJjaExpc3QgLz5cclxuXHRcdCAgICAgICAgPC9kaXY+XHJcblx0XHQgICAgPC9kaXY+XHJcblx0XHQgICAgPGRpdj5cclxuXHRcdFx0ICAgIDxkaXYgc3R5bGUgPSB7e3Bvc2l0aW9uOidhYnNvbHV0ZScsdG9wOicxNXB4JywgcmlnaHQ6JzEzMHB4J319PlxyXG5cdFx0XHQgICAgXHR7bG9naW5faW5mb31cclxuXHRcdFx0ICAgIDwvZGl2PlxyXG5cdFx0XHQgICAgPGRpdiBzdHlsZSA9IHt7cG9zaXRpb246J2Fic29sdXRlJyx0b3A6JzE1cHgnLCByaWdodDonMTBweCd9fT5cclxuXHRcdFx0XHRcdDxhIHN0eWxlID17e21hcmdpblJpZ2h0OiAnMTBweCd9fWhyZWY9XCIvYWJvdXRcIj5BYm91dDwvYT5cclxuXHRcdFx0XHRcdDxhIGhyZWY9XCIvY29udGFjdFwiPkNvbnRhY3Q8L2E+XHJcblx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdDwvZGl2PlxyXG5cdFx0PC9kaXY+XHJcblxyXG5cdDwvaGVhZGVyPlxyXG48L2Rpdj5cclxuXHJcblx0KTtcclxufVxyXG59XHJcblxyXG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgdXRpbHMgZnJvbSAnLi91dGlscy5qcydcclxuXHJcbmNsYXNzIFBvc3QgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQgXHJcbntcclxuXHRjb25zdHJ1Y3Rvcihwcm9wcykgXHJcblx0e1xyXG5cdFx0c3VwZXIocHJvcHMpO1xyXG5cdFx0dGhpcy5saWtlc19zY29yZSA9IHRoaXMucHJvcHMuc29uZy5saWtlcyAtIHByb3BzLnNvbmcuZGlzbGlrZXM7XHJcblx0XHQvL3RoaXMubGlrZVJlZiA9IFJlYWN0LmNyZWF0ZVJlZigpO1xyXG5cdFx0Ly90aGlzLmRpc2xpa2VSZWYgPSBSZWFjdC5jcmVhdGVSZWYoKTtcclxuXHRcdHRoaXMudXBfaW1hZ2UgPSBcIi9zbWFsbF91cC5wbmdcIlxyXG5cdFx0dGhpcy5kb3duX2ltYWdlID0gXCIvc21hbGxfZG93bi5wbmdcIlxyXG5cdH1cclxuXHJcblx0cmVuZGVyaWZyYW1lKGlmcmFtZSkge1xyXG5cdFx0cmV0dXJuIHtcclxuXHRcdFx0X19odG1sOiBpZnJhbWVcclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdGxpa2VDbGlja2VkKClcclxuXHR7XHJcblx0XHRcclxuXHRcdGlmICghdXRpbHMuY2hlY2tMb2dnZWRJbigpKVxyXG5cdFx0e1xyXG5cdFx0XHRhbGVydChcIk1VU1QgQkUgTE9HR0VEIElOXCIpXHJcblx0XHRcdHJldHVybjtcclxuXHRcdH1cclxuXHJcblx0XHR2YXIgdGhhdCA9IHRoaXM7XHJcblx0XHR2YXIgaWQgPSB0aGF0LnByb3BzLnNvbmcucG9zdF9pZDtcclxuXHRcdGlmIChpZCA9PSB1bmRlZmluZWQpXHJcblx0XHR7XHJcblx0XHRcdGlkID0gdGhhdC5wcm9wcy5zb25nLmlkO1xyXG5cdFx0fVxyXG5cclxuXHRcdHZhciBwb3N0X3VybCA9IFwiL2xpa2VcIlxyXG5cdFx0aWYgKHRoYXQucHJvcHMuc29uZy51c2VybmFtZSA9PSB1bmRlZmluZWQpXHJcblx0XHR7XHJcblx0XHRcdHBvc3RfdXJsID0gXCIvZ2xvYmFsX2xpa2VcIlxyXG5cdFx0fVxyXG5cclxuXHQgICAgZmV0Y2gocG9zdF91cmwsIHtcclxuXHQgICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcblx0ICAgICAgICBoZWFkZXJzOiB7XHJcblx0ICAgICAgICBcdEFjY2VwdDogJ2FwcGxpY2F0aW9uL2pzb24nLFxyXG5cdCAgICAgICAgXHQnQXV0aG9yaXphdGlvbic6ICdCYXNpYycsXHJcblx0ICAgICAgICBcdCdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXHJcblx0ICAgICAgICB9LFxyXG5cdCAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe3VzZXI6IHRoYXQucHJvcHMuc29uZy51c2VybmFtZSwgaWQ6IGlkLH0pfSlcclxuXHQgICAgLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHsgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTt9KVxyXG5cdCAgICAudGhlbihmdW5jdGlvbiAoZGF0YSkgeyAgICBcdFxyXG5cdCAgICBcdC8vIHRoYXQubGlrZXNfc2NvcmUgPSBkYXRhLmxpa2VzX3Njb3JlO1xyXG5cdCAgICBcdC8vIHRoYXQubGlrZV9zdGF0ZSA9IGRhdGEubGlrZV9zdGF0ZTtcclxuXHQgICAgXHQvLyBpZiAodGhhdC5saWtlX3N0YXRlID09IDEpXHJcblx0ICAgIFx0Ly8ge1xyXG5cdCAgICBcdC8vIFx0Y29uc29sZS5sb2coXCJiYWNrIDFcIilcclxuXHQgICAgXHQvLyBcdHRoYXQubGlrZVJlZi5jdXJyZW50LnN0eWxlLmNvbG9yID0gJ2JsdWUnXHJcblx0ICAgIFx0Ly8gXHR0aGF0LmRpc2xpa2VSZWYuY3VycmVudC5zdHlsZS5jb2xvciA9ICdibGFjaydcclxuXHQgICAgXHQvLyB9XHJcblx0ICAgIFx0Ly8gZWxzZSBpZiAodGhhdC5saWtlX3N0YXRlID09IDApXHJcblx0ICAgIFx0Ly8ge1xyXG5cdCAgICBcdC8vIFx0Y29uc29sZS5sb2coXCJiYWNrIDJcIilcclxuXHQgICAgXHQvLyBcdHRoYXQubGlrZVJlZi5jdXJyZW50LnN0eWxlID0gJ2JsYWNrJ1xyXG5cdCAgICBcdC8vIFx0dGhhdC5kaXNsaWtlUmVmLmN1cnJlbnQuc3R5bGUuY29sb3IgPSAncmVkJ1xyXG5cdCAgICBcdC8vIH1cclxuXHQgICAgXHQvLyBlbHNlXHJcblx0ICAgIFx0Ly8ge1xyXG5cdCAgICBcdC8vIFx0Y29uc29sZS5sb2coXCJiYWNrIDNcIilcclxuXHQgICAgXHQvLyBcdHRoYXQubGlrZVJlZi5jdXJyZW50LnN0eWxlID0gJ2JsYWNrJ1xyXG5cdCAgICBcdC8vIFx0dGhhdC5kaXNsaWtlUmVmLmN1cnJlbnQuc3R5bGUuY29sb3IgPSAnYmxhY2snXHQgICAgXHRcdFxyXG5cdCAgICBcdC8vIH1cclxuXHQgXHR9KVx0XHJcblxyXG4gICAgXHRpZiAodGhpcy5wcm9wcy5saWtlX3N0YXRlID09IDEpXHJcbiAgICBcdHtcclxuICAgICAgIFx0XHR0aGlzLmxpa2VzX3Njb3JlIC09IDE7XHJcbiAgICBcdFx0Ly90aGlzLmxpa2VSZWYuY3VycmVudC5zdHlsZSA9ICdibGFjaydcclxuICAgIFx0XHQvL3RoaXMuZGlzbGlrZVJlZi5jdXJyZW50LnN0eWxlLmNvbG9yID0gJ2JsYWNrJ1xyXG4gICAgXHRcdHRoaXMudXBfaW1hZ2UgPSBcIi9zbWFsbF91cC5wbmdcIlxyXG4gICAgXHRcdHRoaXMucHJvcHMubGlrZV9zdGF0ZSA9IC0xO1xyXG4gICAgXHR9XHJcbiAgICBcdGVsc2VcclxuICAgIFx0e1xyXG4gICAgXHRcdGlmICh0aGlzLnByb3BzLmxpa2Vfc3RhdGUgPT0gLTEpXHJcbiAgICBcdFx0e1xyXG4gICAgXHRcdFx0dGhpcy5saWtlc19zY29yZSArPSAxO1xyXG4gICAgXHRcdH1cclxuICAgIFx0XHRlbHNlIFxyXG4gICAgXHRcdHtcclxuICAgIFx0XHRcdHRoaXMubGlrZXNfc2NvcmUgKz0gMjtcclxuICAgIFx0XHR9XHJcbiAgICBcdFx0Ly90aGlzLmxpa2VSZWYuY3VycmVudC5zdHlsZSA9ICdibHVlJ1xyXG4gICAgXHRcdC8vdGhpcy5kaXNsaWtlUmVmLmN1cnJlbnQuc3R5bGUuY29sb3IgPSAnYmxhY2snXHJcbiAgICBcdFx0dGhpcy51cF9pbWFnZSA9IFwiL3NtYWxsX3VwX29uLnBuZ1wiXHJcbiAgICBcdFx0dGhpcy5kb3duX2ltYWdlID0gXCIvc21hbGxfZG93bi5wbmdcIlxyXG4gICAgXHRcdHRoaXMucHJvcHMubGlrZV9zdGF0ZSA9IDE7XHJcbiAgICBcdH1cclxuXHJcbiAgICBcdHRoaXMuZm9yY2VVcGRhdGUoKTtcclxuXHR9XHJcblxyXG5cdGRpc2xpa2VDbGlja2VkKClcclxuXHR7XHJcblx0XHRpZiAoIXV0aWxzLmNoZWNrTG9nZ2VkSW4oKSlcclxuXHRcdHtcclxuXHRcdFx0YWxlcnQoXCJNVVNUIEJFIExPR0dFRCBJTlwiKVxyXG5cdFx0XHRyZXR1cm47XHJcblx0XHR9XHJcblx0XHR2YXIgdGhhdCA9IHRoaXM7XHJcblx0XHR2YXIgaWQgPSB0aGF0LnByb3BzLnNvbmcucG9zdF9pZDtcclxuXHRcdGlmIChpZCA9PSB1bmRlZmluZWQpXHJcblx0XHR7XHJcblx0XHRcdGlkID0gdGhhdC5wcm9wcy5zb25nLmlkO1xyXG5cdFx0fVxyXG5cclxuXHRcdHZhciBwb3N0X3VybCA9IFwiL2Rpc2xpa2VcIlxyXG5cdFx0aWYgKHRoYXQucHJvcHMuc29uZy51c2VybmFtZSA9PSB1bmRlZmluZWQpXHJcblx0XHR7XHJcblx0XHRcdHBvc3RfdXJsID0gXCIvZ2xvYmFsX2Rpc2xpa2VcIlxyXG5cdFx0fVxyXG5cclxuXHJcblx0ICAgIGZldGNoKHBvc3RfdXJsLCB7XHJcblx0ICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxyXG5cdCAgICAgICAgaGVhZGVyczoge1xyXG5cdCAgICAgICAgXHRBY2NlcHQ6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuXHQgICAgICAgIFx0J0F1dGhvcml6YXRpb24nOiAnQmFzaWMnLFxyXG5cdCAgICAgICAgXHQnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxyXG5cdCAgICAgICAgfSxcclxuXHQgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHt1c2VyOiB0aGF0LnByb3BzLnNvbmcudXNlcm5hbWUsIGlkOiBpZCx9KX0pXHJcblx0ICAgIC50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7IHJldHVybiByZXNwb25zZS5qc29uKCk7fSlcclxuXHQgICAgLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsgICAgXHRcclxuXHQgICAgXHQvLyB0aGF0Lmxpa2VzX3Njb3JlID0gZGF0YS5saWtlc19zY29yZTtcclxuXHQgICAgXHQvLyB0aGF0Lmxpa2Vfc3RhdGUgPSBkYXRhLmxpa2Vfc3RhdGU7XHJcblx0ICAgIFx0Ly8gaWYgKHRoYXQubGlrZV9zdGF0ZSA9PSAxKVxyXG5cdCAgICBcdC8vIHtcclxuXHQgICAgXHQvLyBcdHRoYXQubGlrZVJlZi5jdXJyZW50LnN0eWxlLmNvbG9yID0gJ2JsdWUnXHJcblx0ICAgIFx0Ly8gXHR0aGF0LmRpc2xpa2VSZWYuY3VycmVudC5zdHlsZS5jb2xvciA9ICdibGFjaydcclxuXHQgICAgXHQvLyB9XHJcblx0ICAgIFx0Ly8gZWxzZSBpZiAodGhhdC5saWtlX3N0YXRlID09IDApXHJcblx0ICAgIFx0Ly8ge1xyXG5cdCAgICBcdC8vIFx0dGhhdC5saWtlUmVmLmN1cnJlbnQuc3R5bGUgPSAnYmxhY2snXHJcblx0ICAgIFx0Ly8gXHR0aGF0LmRpc2xpa2VSZWYuY3VycmVudC5zdHlsZS5jb2xvciA9ICdyZWQnXHJcblx0ICAgIFx0Ly8gfVxyXG5cdCAgICBcdC8vIGVsc2VcclxuXHQgICAgXHQvLyB7XHJcblx0ICAgIFx0Ly8gXHR0aGF0Lmxpa2VSZWYuY3VycmVudC5zdHlsZSA9ICdibGFjaydcclxuXHQgICAgXHQvLyBcdHRoYXQuZGlzbGlrZVJlZi5jdXJyZW50LnN0eWxlLmNvbG9yID0gJ2JsYWNrJ1x0XHRcclxuXHQgICAgXHQvLyB9XHJcblx0ICAgIFx0Ly8gdGhhdC5mb3JjZVVwZGF0ZSgpO1xyXG5cdCBcdH0pXHRcclxuXHJcbiAgICBcdGlmICh0aGlzLnByb3BzLmxpa2Vfc3RhdGUgPT0gMClcclxuICAgIFx0e1xyXG4gICAgXHRcdC8vdGhpcy5saWtlUmVmLmN1cnJlbnQuc3R5bGUgPSAnYmxhY2snXHJcbiAgICBcdFx0Ly90aGlzLmRpc2xpa2VSZWYuY3VycmVudC5zdHlsZS5jb2xvciA9ICdibGFjaydcdCBcclxuICAgIFx0XHR0aGlzLmRvd25faW1hZ2UgPSBcIi9zbWFsbF9kb3duLnBuZ1wiXHJcbiAgICBcdFx0dGhpcy5wcm9wcy5saWtlX3N0YXRlID0gLTE7XHJcbiAgICBcdFx0dGhpcy5saWtlc19zY29yZSArPSAxO1xyXG4gICAgXHR9XHJcbiAgICBcdGVsc2VcclxuICAgIFx0e1xyXG4gICAgXHRcdGlmICh0aGlzLnByb3BzLmxpa2Vfc3RhdGUgPT0gLTEpXHJcbiAgICBcdFx0e1xyXG4gICAgXHRcdFx0dGhpcy5saWtlc19zY29yZSAtPSAxO1xyXG4gICAgXHRcdH1cclxuICAgIFx0XHRlbHNlIFxyXG4gICAgXHRcdHtcclxuICAgIFx0XHRcdHRoaXMubGlrZXNfc2NvcmUgLT0gMjtcclxuICAgIFx0XHR9XHJcbiAgICBcdFx0Ly90aGlzLmxpa2VSZWYuY3VycmVudC5zdHlsZSA9ICdibGFjaydcclxuICAgIFx0XHQvL3RoaXMuZGlzbGlrZVJlZi5jdXJyZW50LnN0eWxlLmNvbG9yID0gJ3JlZCdcclxuICAgIFx0XHR0aGlzLmRvd25faW1hZ2UgPSBcIi9zbWFsbF9kb3duX29uLnBuZ1wiXHJcbiAgICBcdFx0dGhpcy51cF9pbWFnZSA9IFwiL3NtYWxsX3VwLnBuZ1wiXHJcbiAgICBcdFx0dGhpcy5wcm9wcy5saWtlX3N0YXRlID0gMDtcclxuXHJcbiAgICBcdH1cclxuICAgIFx0dGhpcy5mb3JjZVVwZGF0ZSgpO1xyXG5cdH1cclxuXHJcblx0cmVuZGVyKClcclxuXHR7XHJcblx0XHR2YXIgZGF0ZSA9IG5ldyBEYXRlKHRoaXMucHJvcHMuc29uZy50aW1lc3RhbXApXHJcblx0XHR2YXIgcG9zdF90aXRsZSA9IDxoMSBzdHlsZT0ge3twb3NpdGlvbjoncmVsYXRpdmUnfX0+PGEgaHJlZiA9IHtcIi91c2VyL1wiICsgdGhpcy5wcm9wcy5zb25nLnVzZXJuYW1lICsgXCIvXCIgKyB0aGlzLnByb3BzLnNvbmcuaWR9ID4ge3RoaXMucHJvcHMuc29uZy50aXRsZX08L2E+PC9oMT47XHJcblx0XHR2YXIgcG9zdGVyX3VzZXJuYW1lID0gJyc7Ly90aGlzLnByb3BzLnNvbmcuYXJ0aXN0O1xyXG5cdFx0dmFyIHBvc3Rlcl91c2VybmFtZV91cmwgPSAnJzsvL1wiL2FydGlzdC9cIiArIHRoaXMucHJvcHMuc29uZy5hcnRpc3Q7XHJcblxyXG5cdFx0dmFyIGFydGlzdF9uYW1lID0gdGhpcy5wcm9wcy5zb25nLmFydGlzdDtcclxuXHRcdHZhciBhcnRpc3RfdXJsID0gXCIvYXJ0aXN0L1wiICsgdGhpcy5wcm9wcy5zb25nLmFydGlzdDtcclxuXHJcblx0XHR2YXIgY29udGVudF9kaXYgPSBbXVxyXG5cdFx0dGhpcy5wcm9wcy5zb25nLmNvbnRlbnQuc3BsaXQoJ1xcbicpLm1hcCgoaXRlbSwgaSkgPT4ge1xyXG5cdFx0XHRpZiAoaXRlbSA9PSAnJylcclxuXHRcdFx0e1xyXG5cdFx0XHRcdGNvbnRlbnRfZGl2LnB1c2goPGJyLz4pXHJcblx0XHRcdH1cclxuXHRcdFx0ZWxzZVxyXG5cdFx0XHR7XHJcblx0XHRcdFx0Y29udGVudF9kaXYucHVzaCg8cCBrZXk9e2l9PntpdGVtfTwvcD4pO1xyXG5cdFx0XHR9XHJcblx0XHR9KVxyXG5cclxuXHRcdHZhciBjb250ZW50ID0gPGgyIHN0eWxlPXt7cG9zaXRpb246J3JlbGF0aXZlJ319Pntjb250ZW50X2Rpdn08L2gyPlxyXG5cclxuXHRcdHZhciBieV90ZXh0ID0gXCIgYnlcIlxyXG5cdFx0dmFyIGF0X3RleHQgPSBcIiBwb3N0ZWQgYXQgXCJcclxuXHJcblx0XHR2YXIgcG9zdF9pZCA9IHRoaXMucHJvcHMuc29uZy5wb3N0X2lkO1xyXG5cclxuXHRcdGlmICh0aGlzLnByb3BzLnNvbmcudXNlcm5hbWUgIT0gdW5kZWZpbmVkKVxyXG5cdFx0e1xyXG5cdFx0XHRwb3N0X2lkID0gdGhpcy5wcm9wcy5zb25nLmlkO1xyXG5cdFx0XHQvL3Bvc3RfdGl0bGUgPSBcIlwiO1xyXG5cdFx0XHRieV90ZXh0ID0gXCIgcG9zdGVkIGJ5IFwiIFxyXG5cdFx0XHRhdF90ZXh0ID0gXCIgYXQgXCJcclxuXHRcdFx0cG9zdGVyX3VzZXJuYW1lID0gdGhpcy5wcm9wcy5zb25nLnVzZXJuYW1lO1xyXG5cdFx0XHRwb3N0ZXJfdXNlcm5hbWVfdXJsID0gXCIvdXNlci9cIiArIHRoaXMucHJvcHMuc29uZy51c2VybmFtZTtcclxuXHRcdH1cclxuXHJcblx0XHR2YXIgbGlrZV9zdHlsZSA9IHtjb2xvcjonYmxhY2snfVxyXG5cdFx0dmFyIGRpc2xpa2Vfc3R5bGUgPSB7Y29sb3I6J2JsYWNrJ31cclxuXHRcdGlmICh0aGlzLnByb3BzLmxpa2Vfc3RhdGUgPT0gMSlcclxuXHRcdHtcclxuXHRcdFx0bGlrZV9zdHlsZS5jb2xvciA9ICdibHVlJztcclxuXHRcdFx0dGhpcy51cF9pbWFnZSA9IFwiL3NtYWxsX3VwX29uLnBuZ1wiXHJcblx0XHR9XHJcblx0XHRlbHNlIGlmICh0aGlzLnByb3BzLmxpa2Vfc3RhdGUgPT0gMClcclxuXHRcdHtcclxuXHRcdFx0ZGlzbGlrZV9zdHlsZS5jb2xvciA9ICdyZWQnO1xyXG5cdFx0XHR0aGlzLmRvd25faW1hZ2UgPSBcIi9zbWFsbF9kb3duX29uLnBuZ1wiXHJcblx0XHR9XHJcblxyXG5cdFx0dmFyIGxpa2VzX3NlY3Rpb24gPSA8ZGl2PlxyXG5cdFx0XHQ8ZGl2ICBjbGFzc05hbWU9XCJsaWtlc1wiIGlkID0ge3Bvc3RfaWR9ID5MaWtlczoge3RoaXMubGlrZXNfc2NvcmV9IDwvZGl2PlxyXG5cdFx0XHQ8YnV0dG9uIHJlZiA9IHt0aGlzLmxpa2VSZWZ9IG9uQ2xpY2sgPSB7dGhpcy5saWtlQ2xpY2tlZC5iaW5kKHRoaXMpfSB0eXBlPVwiYnV0dG9uXCIgY2xhc3NOYW1lID0gXCJsaWtlXCIgaWQgPSB7cG9zdF9pZH0gc3R5bGUgPSB7bGlrZV9zdHlsZX0+TGlrZTwvYnV0dG9uPlxyXG5cdFx0XHQ8YnV0dG9uIHJlZiA9IHt0aGlzLmRpc2xpa2VSZWZ9IG9uQ2xpY2sgPSB7dGhpcy5kaXNsaWtlQ2xpY2tlZC5iaW5kKHRoaXMpfSB0eXBlPVwiYnV0dG9uXCIgY2xhc3NOYW1lID0gXCJ1bmxpa2VcIiBpZCA9IHtwb3N0X2lkfSBzdHlsZSA9IHtkaXNsaWtlX3N0eWxlfT5IYXRlPC9idXR0b24+XHJcblx0XHRcdDwvZGl2PlxyXG5cdFx0dmFyIGNvbW1lbnRfc2VjdGlvbiA9IDxkaXYgY2xhc3NOYW1lPSBcImNvbW1lbnRfc2VjdGlvblwiIGlkID0ge3Bvc3RfaWR9IC8+XHJcblx0XHR2YXIgY29udGVudF91cmwgPSBcIi9wb3N0L1wiICsgdGhpcy5wcm9wcy5zb25nLmFydGlzdCArIFwiL1wiICsgdGhpcy5wcm9wcy5zb25nLnNvbmc7XHJcblx0XHR2YXIgY29udGVudF9uYW1lID0gdGhpcy5wcm9wcy5zb25nLnNvbmc7XHJcblxyXG5cdFx0aWYgKHRoaXMucHJvcHMuc29uZy5zb25nID09IFwiTk9fU09OR19BTEJVTV9PTkxZXCIpXHJcblx0XHR7XHJcblx0XHRcdGNvbnRlbnRfdXJsID0gXCIvYWxidW0vXCIgKyB0aGlzLnByb3BzLnNvbmcuYXJ0aXN0ICsgXCIvXCIgKyB0aGlzLnByb3BzLnNvbmcuYWxidW07XHJcblx0XHRcdGNvbnRlbnRfbmFtZSA9IHRoaXMucHJvcHMuc29uZy5hbGJ1bTtcclxuXHRcdH1cclxuXHJcblx0XHRyZXR1cm4oXHJcblxyXG5cclxuXHRcdDxkaXYga2V5ID0ge3RoaXMucHJvcHMuc29uZy5wb3N0X2lkfSBzdHlsZSA9IHt7Ym9yZGVyOiAnMXB4IHNvbGlkICNCQUJBQkEnLCBib3JkZXJSYWRpdXM6ICc0cHgnLCB3aWR0aDonOTgwcHgnLCBiYWNrZ3JvdW5kOid3aGl0ZSd9fT5cclxuXHRcdFx0PGRpdiBzdHlsZT0gIHt7ZmxvYXQ6J2xlZnQnLCB3aWR0aDonMzAwcHgnLCBwYWRkaW5nTGVmdDonMTBweCcsIHBhZGRpbmdUb3A6JzEwcHgnfX0+XHJcblx0XHRcdFx0PGRpdiBzdHlsZSA9IHt7ZmxvYXQ6J2xlZnQnLCBmb250RmFtaWx5OidQbGF5ZmFpciBEaXNwbGF5J319PiA8YSBocmVmID17cG9zdGVyX3VzZXJuYW1lX3VybH0gPiB7cG9zdGVyX3VzZXJuYW1lfSA8L2E+PC9kaXY+XHJcblx0XHRcdFx0PGRpdiBzdHlsZSA9IHt7ZmxvYXQ6J3JpZ2h0JywgcGFkZGluZ1JpZ2h0OicxMHB4J319PnsocGFyc2VJbnQoZGF0ZS5nZXRNb250aCgpKSArIDEpICsgXCIvXCIgKyBkYXRlLmdldERhdGUoKSArIFwiL1wiICsgZGF0ZS5nZXRGdWxsWWVhcigpfTwvZGl2PlxyXG5cdFx0XHRcdDxkaXYgc3R5bGUgPSB7e2NsZWFyOidib3RoJ319PjxhIGhyZWYgPXthcnRpc3RfdXJsfSA+IHthcnRpc3RfbmFtZX0gPC9hPjwvZGl2PlxyXG5cdFx0XHRcdDxkaXY+IDxhIGhyZWYgPSB7Y29udGVudF91cmx9ID57Y29udGVudF9uYW1lfSA8L2E+PC9kaXY+XHJcblx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcdDxkaXYgc3R5bGUgPSB7e2Zsb2F0OidsZWZ0JywgcGFkZGluZ0xlZnQ6ICcxODBweCcsIHBhZGRpbmdUb3A6JzhweCd9fT57cG9zdF90aXRsZX08L2Rpdj5cclxuXHRcdFx0PGRpdiBzdHlsZSA9IHt7Y2xlYXI6J2JvdGgnfX0+XHJcblx0XHRcdFx0PGRpdiBzdHlsZSA9IHt7ZmxvYXQ6J2xlZnQnLCBwYWRkaW5nTGVmdDogJzEwcHgnLCBwYWRkaW5nVG9wOiczcHgnLCBmb250RmFtaWx5OidQbGF5ZmFpciBEaXNwbGF5J319PjxzcGFuIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MPXt0aGlzLnJlbmRlcmlmcmFtZSh0aGlzLnByb3BzLnNvbmcuZW1iZWRkZWRfY29udGVudCl9Pjwvc3Bhbj48L2Rpdj5cclxuXHRcdFx0XHRcclxuXHRcdFx0XHQ8ZGl2IHN0eWxlID0ge3tmb250U2l6ZTonMTFwdCcsIHBhZGRpbmdMZWZ0OiAnMzIwcHgnLCBwYWRkaW5nVG9wOic1cHgnLCBoZWlnaHQ6ICczMDBweCcsIHdpZHRoOic2NTBweCcsIGZvbnRTaXplOiAnMmVtJ319PiBcclxuXHRcdFx0XHRcdHtjb250ZW50X2Rpdn1cclxuXHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0XHQ8ZGl2IHN0eWxlID0ge3tjbGVhcjonYm90aCcsIGhlaWdodDonMzVweCd9fT5cclxuXHRcdFx0XHRcdDxkaXYgc3R5bGUgPSB7e2Zsb2F0OidsZWZ0Jywgd2lkdGg6JzE1cHgnLCBoZWlnaHQ6JzMwcHgnfX0+PC9kaXY+XHJcblx0XHRcdFx0XHQ8ZGl2IHN0eWxlID0ge3tmbG9hdDonbGVmdCd9fT48aW1nIG9uQ2xpY2sgPSB7dGhpcy5saWtlQ2xpY2tlZC5iaW5kKHRoaXMpfSBzcmM9e3RoaXMudXBfaW1hZ2V9IHdpZHRoPVwiMzBcIiBoZWlnaHQ9XCIzMFwiIGFsdD1cIlwiLz48L2Rpdj5cclxuXHRcdFx0XHRcdDxkaXYgc3R5bGUgPSB7e3dpZHRoOic2MHB4JywgaGVpZ2h0OiczMHB4JywgZmxvYXQ6J2xlZnQnLCB2ZXJ0aWNhbEFsaWduOiAnbWlkZGxlJywgdGV4dEFsaWduOiAnY2VudGVyJywgd2lkdGg6JzYwcHgnLCBwb3NpdGlvbjogJ3JlbGF0aXZlJywgdG9wOiAnMHB4JywgZm9udFNpemU6ICcyMXB4J319Pnt0aGlzLmxpa2VzX3Njb3JlfTwvZGl2PlxyXG5cdFx0XHRcdFx0PGRpdiBzdHlsZSA9IHt7ZmxvYXQ6J2xlZnQnfX0+PGltZyBvbkNsaWNrID0ge3RoaXMuZGlzbGlrZUNsaWNrZWQuYmluZCh0aGlzKX0gc3JjPXt0aGlzLmRvd25faW1hZ2V9IHdpZHRoPVwiMzBcIiBoZWlnaHQ9XCIzMFwiIGFsdD1cIlwiLz48L2Rpdj5cclxuXHRcdFx0XHRcdDxkaXYgc3R5bGUgPSB7e2Zsb2F0OidsZWZ0Jywgd2lkdGg6JzMwcHgnLCBoZWlnaHQ6JzMwcHgnLCBib3JkZXJSaWdodDogJzFweCBzb2xpZCBibGFjayd9fT48L2Rpdj5cclxuXHRcdFx0XHRcdDxkaXYgc3R5bGUgPSB7e2Zsb2F0OidsZWZ0Jywgd2lkdGg6JzMwcHgnLCBoZWlnaHQ6JzMwcHgnfX0+PC9kaXY+XHJcblx0XHRcdFx0XHQ8ZGl2IHN0eWxlID0ge3tmbG9hdDonbGVmdCd9fT48aW1nIHNyYz1cIi9zbWFsbF9jb21tZW50LnBuZ1wiIHdpZHRoPVwiMzBcIiBoZWlnaHQ9XCIzMFwiIGFsdD1cIlwiLz48L2Rpdj5cclxuXHRcdFx0XHRcdDxkaXYgc3R5bGUgPSB7e3dpZHRoOic2MHB4JywgaGVpZ2h0OiczMHB4JywgZmxvYXQ6J2xlZnQnLCB2ZXJ0aWNhbEFsaWduOiAnbWlkZGxlJywgdGV4dEFsaWduOiAnY2VudGVyJywgd2lkdGg6JzgwcHgnLCBwb3NpdGlvbjogJ3JlbGF0aXZlJywgdG9wOiAnMHB4JywgZm9udFNpemU6ICcyMXB4J319Pnt0aGlzLnByb3BzLm51bV9jb21tZW50c308L2Rpdj5cclxuXHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0PC9kaXY+XHJcblx0XHQ8L2Rpdj5cclxuXHJcbiBcdFx0Ly8gPGRpdiBrZXkgPSB7dGhpcy5wcm9wcy5zb25nLnBvc3RfaWR9IHN0eWxlPXt7cG9zaXRpb246J3JlbGF0aXZlJywgaGVpZ2h0Oic0ODBweCcsYm9yZGVyQm90dG9tOiAnNHB4IHNvbGlkIGdyYXknLHBhZGRpbmc6JzVweCd9fT5cclxuIFx0XHQvLyBcdDxkaXYgc3R5bGUgPSB7e2Rpc3BsYXk6ICdmbGV4JyxmbGV4RGlyZWN0aW9uOidyb3cnfX0+XHJcblx0IFx0Ly8gXHRcdDxzcGFuIHN0eWxlPXt7d2lkdGg6JzYwMHB4J319PlxyXG5cdCBcdC8vIFx0XHRcdHtwb3N0X3RpdGxlfVxyXG5cdCBcdC8vIFx0XHRcdDxkaXYgc3R5bGUgPSB7e2Rpc3BsYXk6ICdmbGV4JyxmbGV4RGlyZWN0aW9uOidyb3cnfX0+XHJcblx0IFx0XHRcdFx0XHJcblx0IFx0Ly8gXHRcdFx0PGgzPiA8YSBocmVmID0gXHJcblx0IFx0Ly8gXHRcdFx0XHRcdHtjb250ZW50X3VybH0gID4ge2NvbnRlbnRfbmFtZX0gXHJcblx0IFx0Ly8gXHRcdFx0XHQ8L2E+XHJcblx0XHQgLy8gXHRcdFx0XHQge2J5X3RleHR9XHJcblx0XHQgLy8gXHRcdFx0XHQ8YSBocmVmID17cG9zdGVyX3VzZXJuYW1lX3VybH0gPiB7cG9zdGVyX3VzZXJuYW1lfSA8L2E+IHthdF90ZXh0fVxyXG5cdFx0IC8vIFx0XHRcdFx0e1wiIFwiICsgKHBhcnNlSW50KGRhdGUuZ2V0TW9udGgoKSkgKyAxKSArIFwiL1wiICsgZGF0ZS5nZXREYXRlKCkgKyBcIi9cIiArIGRhdGUuZ2V0RnVsbFllYXIoKX0gXHJcblx0IFx0Ly8gXHRcdFx0PC9oMz5cclxuXHQgXHQvLyBcdFx0XHQ8L2Rpdj5cclxuXHQgXHQvLyBcdFx0XHRcdHtjb250ZW50fVxyXG5cdCBcdC8vIFx0XHQ8L3NwYW4+XHJcblx0IFx0Ly8gXHRcdDxzcGFuIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MPXt0aGlzLnJlbmRlcmlmcmFtZSh0aGlzLnByb3BzLnNvbmcuZW1iZWRkZWRfY29udGVudCl9PlxyXG5cdCBcdC8vIFx0XHQ8L3NwYW4+XHJcbiBcdFx0Ly8gXHQ8L2Rpdj5cclxuXHRcdFx0Ly8gPGRpdiBjbGFzc05hbWU9IFwibGlrZV9zZWN0aW9uXCI+XHJcblx0XHRcdC8vIFx0e2xpa2VzX3NlY3Rpb259XHJcblx0XHRcdC8vIDwvZGl2PlxyXG5cdFx0XHQvLyA8ZGl2IGNsYXNzTmFtZT0gXCJjb21tZW50X3NlY3Rpb25cIiBpZCA9IHt0aGlzLnByb3BzLnNvbmcuaWR9ID5cclxuXHRcdFx0Ly8gXHR7Y29tbWVudF9zZWN0aW9ufVxyXG5cdFx0XHQvLyBcdENvbW1lbnRzOiB7dGhpcy5wcm9wcy5udW1fY29tbWVudHN9XHJcblx0XHRcdC8vIDwvZGl2PlxyXG4gXHRcdC8vIDwvZGl2PlxyXG5cclxuXHRcdCk7XHJcblx0fVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3N0SW5mbyBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCBcclxue1xyXG5cdGNvbnN0cnVjdG9yKHByb3BzKSBcclxuXHR7XHJcblx0XHRzdXBlcihwcm9wcyk7XHJcblx0XHR0aGlzLnBvc3RzID0gW107XHJcblx0fVxyXG5cclxuXHRtYWtlUG9zdChzb25nKVxyXG5cdHtcclxuXHRcdHZhciBsaWtlX3N0YXRlID0gLTE7XHJcblx0XHR2YXIgY3VycmVudF9udW1fY29tbWVudHMgPSAwO1xyXG5cdFx0Zm9yICh2YXIgbGlrZSBvZiB0aGlzLnByb3BzLmxpa2VzKVxyXG5cdFx0e1xyXG5cdFx0XHR2YXIgaWQgPSBsaWtlLnBvc3RfaWRcclxuXHRcdFx0aWYgKGlkID09IHVuZGVmaW5lZClcclxuXHRcdFx0e1xyXG5cdFx0XHRcdGlkID0gbGlrZS5pZDtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0dmFyIHBvc3RfaWQgPSBzb25nLmlkO1xyXG5cdFx0XHRpZiAocG9zdF9pZCA9PSB1bmRlZmluZWQpXHJcblx0XHRcdHtcclxuXHRcdFx0XHRwb3N0X2lkID0gc29uZy5wb3N0X2lkO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHRpZiAoaWQgPT0gcG9zdF9pZClcclxuXHRcdFx0e1xyXG5cdFx0XHRcdGxpa2Vfc3RhdGUgPSBsaWtlLmxpa2Vfc3RhdGU7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHRcdGZvciAodmFyIG51bV9jb21tZW50cyBvZiB0aGlzLnByb3BzLm51bV9jb21tZW50cylcclxuXHRcdHtcclxuXHRcdFx0Y3VycmVudF9udW1fY29tbWVudHMgPSAwO1xyXG5cdFx0XHRpZiAoc29uZy5wb3N0X2lkID09IG51bV9jb21tZW50cy5wb3N0X2lkKVxyXG5cdFx0XHR7XHJcblx0XHRcdFx0Y3VycmVudF9udW1fY29tbWVudHMgPSBudW1fY29tbWVudHMuY291bnRcdFx0XHRcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdFx0dGhpcy5wb3N0cy5wdXNoKDxQb3N0IGtleT17c29uZy5wb3N0X2lkfSBzb25nPXtzb25nfSBsaWtlX3N0YXRlID0ge2xpa2Vfc3RhdGV9IG51bV9jb21tZW50cyA9IHtjdXJyZW50X251bV9jb21tZW50c30vPik7XHJcblx0fVxyXG5cclxuXHRhZGRTb25ncygpXHJcblx0e1xyXG5cdFx0Zm9yICh2YXIgc29uZyBvZiB0aGlzLnByb3BzLnNvbmdzKVxyXG5cdFx0e1xyXG5cdFx0XHR0aGlzLm1ha2VQb3N0KHNvbmcpO1xyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0YWRkUG9zdHMoc29uZ3MsIGxpa2VzLCBhbGxfbnVtX2NvbW1lbnRzKVxyXG5cdHtcclxuXHRcdGZvciAodmFyIHNvbmcgb2Ygc29uZ3MpXHJcblx0XHR7XHJcblx0XHRcdHZhciBsaWtlX3N0YXRlID0gLTE7XHJcblx0XHRcdHZhciBjdXJyZW50X251bV9jb21tZW50cyA9IDA7XHJcblxyXG5cdFx0XHRmb3IgKHZhciBsaWtlIG9mIGxpa2VzKVxyXG5cdFx0XHR7XHJcblx0XHRcdFx0dmFyIGlkID0gbGlrZS5wb3N0X2lkXHJcblx0XHRcdFx0aWYgKGlkID09IHVuZGVmaW5lZClcclxuXHRcdFx0XHR7XHJcblx0XHRcdFx0XHRpZCA9IGxpa2UuaWQ7XHJcblx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHR2YXIgcG9zdF9pZCA9IHNvbmcuaWQ7XHJcblx0XHRcdFx0aWYgKHBvc3RfaWQgPT0gdW5kZWZpbmVkKVxyXG5cdFx0XHRcdHtcclxuXHRcdFx0XHRcdHBvc3RfaWQgPSBzb25nLnBvc3RfaWQ7XHJcblx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRpZiAoaWQgPT0gcG9zdF9pZClcclxuXHRcdFx0XHR7XHJcblx0XHRcdFx0XHRsaWtlX3N0YXRlID0gbGlrZS5saWtlX3N0YXRlO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0XHRmb3IgKHZhciBudW1fY29tbWVudHMgb2YgYWxsX251bV9jb21tZW50cylcclxuXHRcdFx0e1xyXG5cdFx0XHRcdHZhciBpZCA9IG51bV9jb21tZW50cy5wb3N0X2lkXHJcblx0XHRcdFx0aWYgKGlkID09IHNvbmcucG9zdF9pZClcclxuXHRcdFx0XHR7XHJcblx0XHRcdFx0XHRjdXJyZW50X251bV9jb21tZW50cyA9IG51bV9jb21tZW50cy5jb3VudDtcclxuXHRcdFx0XHRcdGJyZWFrO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0XHR0aGlzLnBvc3RzLnB1c2goPFBvc3Qga2V5PXtzb25nLnBvc3RfaWR9IHNvbmc9e3Nvbmd9IGxpa2Vfc3RhdGUgPSB7bGlrZV9zdGF0ZX0gbnVtX2NvbW1lbnRzID0ge2N1cnJlbnRfbnVtX2NvbW1lbnRzfS8+KTtcclxuXHRcdH1cclxuXHRcdHRoaXMuZm9yY2VVcGRhdGUoKVxyXG5cdH1cclxuXHJcblx0Y29tcG9uZW50RGlkTW91bnQoKSB7XHJcblx0ICAgIHRoaXMuYWRkU29uZ3MoKTtcclxuXHQgICAgdGhpcy5mb3JjZVVwZGF0ZSgpO1xyXG5cdH1cclxuXHRcclxuXHJcblx0cmVuZGVyKClcclxuXHR7XHJcblx0XHRcclxuXHRcdHJldHVybihcclxuXHRcdFx0PGRpdiBzdHlsZT17e2xlZnQ6JzE1JScsIHRvcDonMTAwcHgnLCBwb3NpdGlvbjoncmVsYXRpdmUnLHdpZHRoOicxMDAlJ319PlxyXG5cdFx0XHRcdHt0aGlzLnBvc3RzLm1hcCgocG9zdCkgPT4ge3JldHVybiA8ZGl2PiB7cG9zdH0gPGJyLz48L2Rpdj59KX1cclxuXHRcdFx0PC9kaXY+XHJcblx0XHQpO1xyXG5cdH1cclxufSIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCBTdGFuZGFyZEhlYWRlciBmcm9tICcuL3N0YW5kYXJkX2hlYWRlci5qcydcclxuaW1wb3J0IFBvc3RJbmZvIGZyb20gJy4vcG9zdC5qcydcclxuaW1wb3J0IHV0aWxzIGZyb20gJy4vdXRpbHMuanMnXHJcblxyXG5cclxuXHJcbmNsYXNzIE5ld1Bvc3RTdWJtaXNzaW9uIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcclxuXHRjb25zdHJ1Y3Rvcihwcm9wcylcclxuXHR7XHJcblx0XHRzdXBlcihwcm9wcyk7XHJcblxyXG5cdFx0dGhpcy5lbWJlZGRlZF9jb250ZW50ID0gXCJcIjtcclxuXHJcblx0XHR0aGlzLnNvbmdFbWJlZFJlZiA9IFJlYWN0LmNyZWF0ZVJlZigpO1xyXG5cdFx0dGhpcy5jb250ZW50UmVmID0gUmVhY3QuY3JlYXRlUmVmKCk7XHJcblx0XHR0aGlzLnRpdGxlUmVmID0gUmVhY3QuY3JlYXRlUmVmKCk7XHJcblx0fVxyXG5cclxuXHRzb25nSW5wdXQoKVxyXG5cdHtcclxuXHRcdHZhciBpbnB1dCA9IGV2ZW50LnRhcmdldC52YWx1ZTtcclxuICAgIFx0Ly92YXIgc29uZ19zdHIgPSAkKFwiI3NvbmdcIikudmFsKCk7XHJcblx0XHR2YXIgY29udGVudF9zdHIgPSB0aGlzLmNvbnRlbnRSZWYuY3VycmVudC52YWx1ZTtcclxuXHQgICBcdGlmKHRoaXMuc29uZ0VtYmVkUmVmLmN1cnJlbnQudmFsdWUgIT0gXCJcIilcclxuXHQgICBcdHtcclxuXHQgICBcdFx0dGhpcy5zb25nRW1iZWRSZWYuY3VycmVudC5zdHlsZS53aWR0aCA9ICczMCUnXHJcblx0ICAgXHRcdHRoaXMuY29udGVudFJlZi5jdXJyZW50LnN0eWxlLndpZHRoID0gJzMwJSdcclxuXHQgICBcdFx0dGhpcy5jb250ZW50UmVmLmN1cnJlbnQuc3R5bGUuaGVpZ2h0ID0gJzIwMHB4J1xyXG5cdCAgIFx0XHR0aGlzLnRpdGxlUmVmLmN1cnJlbnQuc3R5bGUud2lkdGggPSAnMzAlJ1xyXG5cdCAgIFx0XHR0aGlzLmVtYmVkZGVkX2NvbnRlbnQgPSB0aGlzLnNvbmdFbWJlZFJlZi5jdXJyZW50LnZhbHVlO1xyXG5cdCAgIFx0fVxyXG5cdCAgIFx0ZWxzZSBcclxuXHQgICBcdHtcclxuXHQgICBcdFx0dGhpcy5zb25nRW1iZWRSZWYuY3VycmVudC5zdHlsZS53aWR0aCA9ICc4MCUnXHJcblx0ICAgXHRcdHRoaXMuY29udGVudFJlZi5jdXJyZW50LnN0eWxlLndpZHRoID0gJzgwJSdcclxuXHQgICBcdFx0dGhpcy5jb250ZW50UmVmLmN1cnJlbnQuc3R5bGUuaGVpZ2h0ID0gJzUwcHgnXHJcblx0ICAgXHRcdHRoaXMudGl0bGVSZWYuY3VycmVudC5zdHlsZS53aWR0aCA9ICc4MCUnXHJcblx0ICAgXHRcdHRoaXMuZW1iZWRkZWRfY29udGVudCA9IHRoaXMuc29uZ0VtYmVkUmVmLmN1cnJlbnQudmFsdWU7XHJcblx0ICAgXHR9XHJcblx0ICAgXHR0aGlzLmZvcmNlVXBkYXRlKCk7XHJcblx0fVxyXG5cclxuXHRjb250ZW50SW5wdXQoKVxyXG5cdHtcclxuXHRcdHZhciBpbnB1dCA9IGV2ZW50LnRhcmdldC52YWx1ZTtcclxuICAgIFx0Ly92YXIgc29uZ19zdHIgPSAkKFwiI3NvbmdcIikudmFsKCk7XHJcblx0XHR2YXIgY29udGVudF9zdHIgPSB0aGlzLmNvbnRlbnRSZWYuY3VycmVudC52YWx1ZTtcclxuXHQgICBcdGlmKHRoaXMuc29uZ0VtYmVkUmVmLmN1cnJlbnQudmFsdWUgIT0gXCJcIilcclxuXHQgICBcdHtcclxuXHQgICBcdFx0dGhpcy5zb25nRW1iZWRSZWYuY3VycmVudC5zdHlsZS53aWR0aCA9ICczMCUnXHJcblx0ICAgXHRcdHRoaXMuY29udGVudFJlZi5jdXJyZW50LnN0eWxlLndpZHRoID0gJzMwJSdcclxuXHQgICBcdFx0dGhpcy5jb250ZW50UmVmLmN1cnJlbnQuc3R5bGUuaGVpZ2h0ID0gJzIwMHB4J1xyXG5cdCAgIFx0XHR0aGlzLnRpdGxlUmVmLmN1cnJlbnQuc3R5bGUud2lkdGggPSAnMzAlJ1xyXG5cdCAgIFx0XHR0aGlzLmVtYmVkZGVkX2NvbnRlbnQgPSB0aGlzLnNvbmdFbWJlZFJlZi5jdXJyZW50LnZhbHVlO1xyXG5cdCAgIFx0fVxyXG5cdCAgIFx0ZWxzZSBcclxuXHQgICBcdHtcclxuXHQgICBcdFx0dGhpcy5zb25nRW1iZWRSZWYuY3VycmVudC5zdHlsZS53aWR0aCA9ICc4MCUnXHJcblx0ICAgXHRcdHRoaXMuY29udGVudFJlZi5jdXJyZW50LnN0eWxlLndpZHRoID0gJzgwJSdcclxuXHQgICBcdFx0dGhpcy5jb250ZW50UmVmLmN1cnJlbnQuc3R5bGUuaGVpZ2h0ID0gJzUwcHgnXHJcblx0ICAgXHRcdHRoaXMudGl0bGVSZWYuY3VycmVudC5zdHlsZS53aWR0aCA9ICc4MCUnXHJcblx0ICAgXHR9XHJcblxyXG4gICAgXHRpZiAoY29udGVudF9zdHIgIT0gXCJcIilcclxuICAgIFx0e1xyXG4gICAgXHRcdHRoaXMuY29udGVudFJlZi5jdXJyZW50LnN0eWxlLmhlaWdodCA9ICcyMDBweCdcclxuICAgIFx0fVxyXG4gICAgXHRlbHNlXHJcbiAgICBcdHtcclxuICAgIFx0XHR0aGlzLmNvbnRlbnRSZWYuY3VycmVudC5zdHlsZS5oZWlnaHQgPSAnNTBweCdcclxuICAgIFx0fVxyXG5cclxuXHQgICBcdHRoaXMuZm9yY2VVcGRhdGUoKTtcclxuXHJcblxyXG5cdH1cclxuXHJcblxyXG5cdHN1Ym1pdFBvc3QoKVxyXG5cdHtcclxuXHRcdGlmICghdXRpbHMuY2hlY2tMb2dnZWRJbigpKVxyXG5cdFx0e1xyXG5cdFx0XHRhbGVydChcIk1VU1QgQkUgTE9HR0VEIElOXCIpXHJcblx0XHRcdHJldHVybjtcclxuXHRcdH1cclxuXHRcdHZhciB0aGF0ID0gdGhpcztcclxuXHRcdGZldGNoKFwiL3Bvc3RcIiwge1xyXG5cdFx0XHRtZXRob2Q6IFwiUE9TVFwiLFxyXG5cdFx0XHRoZWFkZXJzOiB7XHJcblx0XHRcdFx0J0FjY2VwdCc6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuXHRcdFx0XHQnQXV0aG9yaXphdGlvbic6ICdCYXNpYycsXHJcblx0XHRcdFx0J0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuXHRcdFx0fSxcclxuXHRcdFx0Ym9keTogSlNPTi5zdHJpbmdpZnkoe3Nvbmc6IHRoaXMuc29uZ0VtYmVkUmVmLmN1cnJlbnQudmFsdWUsIFxyXG5cdFx0XHRcdFx0XHRcdFx0ICBjb250ZW50OiB0aGlzLmNvbnRlbnRSZWYuY3VycmVudC52YWx1ZSwgXHJcblx0XHRcdFx0XHRcdFx0XHQgIHRpdGxlOiB0aGlzLnRpdGxlUmVmLmN1cnJlbnQudmFsdWV9KX0pXHJcblx0XHRcdC50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7IHJldHVybiByZXNwb25zZS5qc29uKCk7fSlcclxuXHRcdFx0LnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsgXHJcblxyXG5cdFx0XHR0aGF0LnNvbmdFbWJlZFJlZi5jdXJyZW50LnZhbHVlID0gXCJcIiBcclxuXHRcdFx0dGhhdC5jb250ZW50UmVmLmN1cnJlbnQudmFsdWUgPSBcIlwiIFxyXG5cdFx0XHR0aGF0LnRpdGxlUmVmLmN1cnJlbnQudmFsdWUgPSBcIlwiXHJcblx0XHRcdGxvY2F0aW9uLnJlbG9hZCh0cnVlKTtcclxuXHRcdH0pXHJcblx0fVxyXG5cclxuXHRyZW5kZXJpZnJhbWUoaWZyYW1lKSB7XHJcblx0XHRyZXR1cm4ge1xyXG5cdFx0XHRfX2h0bWw6IGlmcmFtZVxyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0cmVuZGVyKClcclxuXHR7XHJcblx0XHRyZXR1cm4gKFxyXG5cdFx0IFx0PGRpdiBrZXkgPSBcIndoYXRcIiBpZCA9IFwicG9zdFwiIHN0eWxlID17e2xlZnQ6JzE1JScsdG9wOicxMjBweCcscG9zaXRpb246J3JlbGF0aXZlJ319IHdpZHRoPVwiMTAwJVwiIGF1dG9Db21wbGV0ZT1cIm9mZlwiPlxyXG5cdFx0XHRcdFNvbmcvUGxheWxpc3Q6IFxyXG5cdFx0XHRcdDxici8+XHJcblx0XHRcdFx0PGlucHV0IHJlZiA9IHt0aGlzLnNvbmdFbWJlZFJlZn0gb25DaGFuZ2UgPSB7dGhpcy5zb25nSW5wdXQuYmluZCh0aGlzKX0gaWQ9XCJzb25nXCIgdHlwZT1cInRleHRcIiBuYW1lPVwic29uZ1wiIHN0eWxlPXt7d2lkdGg6JzgwJSd9fS8+XHJcblx0XHRcdFx0PGJyLz5cclxuXHRcdFx0XHRcdFRpdGxlOlxyXG5cdFx0XHRcdDxici8+XHJcblx0XHRcdFx0PGlucHV0IHJlZiA9IHt0aGlzLnRpdGxlUmVmfSBpZD1cInRpdGxlXCIgdHlwZT1cInRleHRcIiBuYW1lPVwidGl0bGVcIiBzdHlsZT17e3dpZHRoOic4MCUnfX0vPiAgXHJcblx0XHRcdFx0PGJyLz5cclxuXHRcdFx0XHQ8dGV4dGFyZWEgb25DaGFuZ2UgPSB7dGhpcy5jb250ZW50SW5wdXR9IHJlZiA9IHt0aGlzLmNvbnRlbnRSZWZ9IGlkID0gXCJjb250ZW50XCIgbmFtZT1cImNvbnRlbnRcIiByb3dzPVwiMTBcIiBjb2xzPVwiOTBcIiBzdHlsZT17e3Bvc2l0aW9uOidyZWxhdGl2ZScsd2lkdGg6JzgwJScsaGVpZ2h0Oic1MHB4J319PjwvdGV4dGFyZWE+XHJcblx0XHRcdFx0PGJyLz5cclxuXHRcdFx0XHQ8YnV0dG9uIG9uQ2xpY2sgPSB7dGhpcy5zdWJtaXRQb3N0LmJpbmQodGhpcyl9IGlkID0gXCJwb3N0X2J1dHRvblwiIHR5cGU9XCJidXR0b25cIj5Qb3N0PC9idXR0b24+XHJcblx0XHRcdFx0PGJyLz5cclxuXHRcdFx0XHQ8YnIvPlxyXG5cdFx0XHRcdDxkaXYgaWQ9XCJzaG93c29uZ1wiIHN0eWxlID0ge3twb3NpdGlvbjonYWJzb2x1dGUnLHRvcDonMCcsbGVmdDonNDAlJ319IGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MPXt0aGlzLnJlbmRlcmlmcmFtZSh0aGlzLmVtYmVkZGVkX2NvbnRlbnQpfT5cclxuXHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0XHQ8bWV0YSBjbGFzc05hbWUgPSBcInBvc3RfbnVtYmVyXCIgY29udGVudCA9IFwiMFwiLz5cclxuXHRcdFx0XHQ8bWV0YSBjbGFzc05hbWUgPSBcIm5vbl9wcmlvcml0eV9wb3N0X251bWJlclwiIGNvbnRlbnQgPSBcIjBcIi8+XHJcblx0XHRcdFx0PG1ldGEgY2xhc3NOYW1lID0gXCJnbG9iYWxfcG9zdF9udW1iZXJcIiBjb250ZW50ID0gXCIwXCIvPlxyXG5cdFx0XHRcdDxtZXRhIGNsYXNzTmFtZSA9IFwibm9uX3ByaW9yaXR5X2dsb2JhbF9wb3N0X251bWJlclwiIGNvbnRlbnQgPSBcIjBcIi8+XHJcblx0XHRcdDwvZGl2PlxyXG5cdFx0KTtcclxuXHR9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEZlZWQgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnR7XHJcblx0Y29uc3RydWN0b3IocHJvcHMpXHJcblx0e1xyXG5cdFx0c3VwZXIocHJvcHMpO1xyXG5cdFx0dGhpcy5sb2FkaW5nX3Bvc3RzX3NlbWFwaG9yID0gZmFsc2U7XHJcblx0XHR0aGlzLm9mZnNldCA9IDA7XHJcblx0XHR0aGlzLm5vbl9wcmlvcml0eV9vZmZzZXQgPSAwO1xyXG5cdFx0dGhpcy5nbG9iYWxfb2Zmc2V0ID0gMDtcclxuXHRcdHRoaXMubm9uX3ByaW9yaXR5X2dsb2JhbF9vZmZzZXQgPSAwO1xyXG5cdFx0dGhpcy5wb3N0c1JlZiA9IFJlYWN0LmNyZWF0ZVJlZigpO1xyXG5cdH1cclxuXHJcblx0Y29tcG9uZW50RGlkTW91bnQoKSBcclxuXHR7XHJcblx0ICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdzY3JvbGwnLCB0aGlzLmhhbmRsZVNjcm9sbC5iaW5kKHRoaXMpKTtcclxuXHQgICAgdGhpcy51cGRhdGVPZmZzZXRzKHRoaXMucHJvcHMuZGF0YS5zb25ncylcclxuXHR9XHJcblxyXG5cdGNvbXBvbmVudFdpbGxVbm1vdW50KCkgXHJcblx0e1xyXG5cdCAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcignc2Nyb2xsJywgdGhpcy5oYW5kbGVTY3JvbGwuYmluZCh0aGlzKSk7XHJcblx0fVxyXG5cclxuXHR1cGRhdGVPZmZzZXRzKHNvbmdzKVxyXG5cdHtcclxuICAgIFx0Zm9yICh2YXIgc29uZyBvZiBzb25ncylcclxuICAgIFx0e1xyXG4gICAgXHRcdGlmIChzb25nLm9mZnNldF90eXBlID09IDApXHJcbiAgICBcdFx0e1xyXG4gICAgXHRcdFx0Kyt0aGlzLm9mZnNldDtcclxuICAgIFx0XHR9XHJcbiAgICBcdFx0ZWxzZSBpZiAgKHNvbmcub2Zmc2V0X3R5cGUgPT0gMSlcclxuICAgIFx0XHR7XHJcbiAgICBcdFx0XHQrK3RoaXMubm9uX3ByaW9yaXR5X29mZnNldDtcclxuICAgIFx0XHR9XHJcbiAgICBcdFx0ZWxzZSBpZiAoc29uZy5vZmZzZXRfdHlwZSA9PSAyKVxyXG4gICAgXHRcdHtcclxuICAgIFx0XHRcdCsrdGhpcy5nbG9iYWxfb2Zmc2V0O1xyXG4gICAgXHRcdH1cclxuICAgIFx0XHRlbHNlIFxyXG4gICAgXHRcdHtcclxuICAgIFx0XHRcdCsrdGhpcy5ub25fcHJpb3JpdHlfZ2xvYmFsX29mZnNldDtcclxuICAgIFx0XHR9XHJcbiAgICBcdH1cclxuXHR9XHJcblxyXG5cdGhhbmRsZVNjcm9sbCgpIHtcclxuXHRcdGlmICgod2luZG93LmlubmVySGVpZ2h0ICsgd2luZG93LnNjcm9sbFkpID49IGRvY3VtZW50LmJvZHkub2Zmc2V0SGVpZ2h0ICYmICF0aGlzLmxvYWRpbmdfcG9zdHNfc2VtYXBob3IpIFxyXG5cdFx0e1xyXG5cdFx0XHR2YXIgdGhhdCA9IHRoaXNcclxuXHJcblx0XHRcdHRoaXMubG9hZGluZ19wb3N0c19zZW1hcGhvciA9IHRydWVcclxuXHRcdCAgICBmZXRjaChcIi9sb2FkX2ZlZWRcIiwge1xyXG5cdFx0ICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxyXG5cdFx0ICAgICAgICBoZWFkZXJzOiB7XHJcblx0XHQgICAgICAgIFx0J0FjY2VwdCc6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuXHRcdCAgICAgICAgXHQnQXV0aG9yaXphdGlvbic6ICdCYXNpYycsXHJcblx0XHQgICAgICAgIFx0J0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuXHRcdCAgICAgICAgfSxcclxuXHRcdCAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe29mZnNldDp0aGlzLm9mZnNldCwgXHJcblx0XHQgICAgICAgIFx0XHRcdFx0XHQgIG5vbl9wcmlvcml0eV9vZmZzZXQ6IHRoaXMubm9uX3ByaW9yaXR5X29mZnNldCxcclxuXHRcdCAgICAgICAgXHRcdFx0XHRcdCAgZ2xvYmFsX29mZnNldDogdGhpcy5nbG9iYWxfb2Zmc2V0LFxyXG5cdFx0ICAgICAgICBcdFx0XHRcdFx0ICBub25fcHJpb3JpdHlfZ2xvYmFsX29mZnNldDogdGhpcy5ub25fcHJpb3JpdHlfZ2xvYmFsX29mZnNldH0pfSlcclxuXHRcdCAgICAudGhlbihmdW5jdGlvbihyZXNwb25zZSkgeyByZXR1cm4gcmVzcG9uc2UuanNvbigpO30pXHJcblx0XHQgICAgLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsgXHJcblx0XHQgICAgXHR0aGF0LnVwZGF0ZU9mZnNldHMoZGF0YS5zb25ncylcclxuXHRcdCAgICBcdHRoYXQucG9zdHNSZWYuY3VycmVudC5hZGRQb3N0cyhkYXRhLnNvbmdzLCBkYXRhLmxpa2VzLCBkYXRhLm51bV9jb21tZW50cylcclxuXHRcdCAgICBcdHRoYXQubG9hZGluZ19wb3N0c19zZW1hcGhvciA9IGZhbHNlO1xyXG5cdFx0IFx0fSlcclxuXHRcdH1cclxuXHR9XHJcblxyXG5cclxuXHRyZW5kZXIoKVxyXG5cdHtcclxuXHRcdHJldHVybiAoXHJcblx0XHRcdDxkaXY+XHJcblxyXG5cdFx0XHRcdDxOZXdQb3N0U3VibWlzc2lvbiAvPlxyXG5cdFx0XHRcdDxQb3N0SW5mbyByZWYgPSB7dGhpcy5wb3N0c1JlZn0gc29uZ3MgPSB7dGhpcy5wcm9wcy5kYXRhLnNvbmdzfSBsaWtlcyA9IHt0aGlzLnByb3BzLmRhdGEubGlrZXN9IG51bV9jb21tZW50cyA9IHt0aGlzLnByb3BzLmRhdGEubnVtX2NvbW1lbnRzfS8+XHJcblx0XHRcdDwvZGl2PlxyXG5cdFx0KTtcclxuXHR9XHJcblxyXG59IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENvbnRhY3QgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xyXG5cclxuXHRjb25zdHJ1Y3Rvcihwcm9wcylcclxuXHR7XHJcblx0XHRzdXBlcihwcm9wcyk7XHJcblx0XHRjb25zb2xlLmxvZyhcIkNvbnRhY3QgUkVOREVSRURcIik7XHJcblx0fVxyXG5cclxuXHRyZW5kZXIgKClcclxuXHR7XHJcblx0XHRyZXR1cm4gKDxkaXY+IENvbnRhY3QgUGFnZSEgPC9kaXY+KTtcclxuXHR9XHJcbn0iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgU3RhbmRhcmRIZWFkZXIgZnJvbSAnLi9zdGFuZGFyZF9oZWFkZXIuanMnXHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBBYm91dCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudHtcclxuXHRjb25zdHJ1Y3Rvcihwcm9wcyl7XHJcblx0XHRzdXBlcihwcm9wcyk7XHJcblxyXG5cclxuXHR9XHJcblxyXG5cdGNvbXBvbmVudERpZE1vdW50KClcclxuXHR7XHJcblxyXG5cdH1cclxuXHJcblxyXG5cdHJlbmRlcigpIHtcclxuXHRcdHJldHVybiAoXHJcblx0XHQ8ZGl2PlxyXG5cdFx0XHQ8c2VjdGlvbiBjbGFzc05hbWUgPSBcImhlcm9cIj5cclxuXHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZSA9ICBcImhlcm8tY29udGVudFwiPlxyXG5cdFx0XHRcdFx0PGgyPkFsbCBhYm91dCB1czwvaDI+XHJcblx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdDwvc2VjdGlvbj5cclxuXHJcblx0XHRcdDxkaXYgY2xhc3NOYW1lID0gXCJqdW1ib3Ryb24gdGV4dC1jZW50ZXJcIj5cclxuXHRcdFx0XHQ8cD4xLiBDbGljayByZWdpc3RlciwgZW50ZXIgbmFtZSwgcGFzc3dvcmQuIExvZ2luIHVzaW5nIHRoYXQgaW5mbyA8L3A+XHJcblx0XHRcdFx0PHA+Mi4gVG8gc3VibWl0IGNvbnRlbnQuIEdldCBhIHNwb3RpZnkgZW1iZWQgbGluay4gR28gdG8gYSBzb25nIG9yIGFsYnVtLCBjbGljayAuLi4tPnNoYXJlLT5jb3B5IGVtYmVkIGNvZGUuIHBhc3QgaW4gdGhlIHNvbmcvcGxheWxpc3Qgc2VjdGlvbi4gRW50ZXIgaW4gYSB0aXRsZSBhbmQgdGV4dDwvcD5cclxuXHRcdFx0XHQ8cD4zLiBZb3UgY2FuIHNlYXJjaCBmb3IgYSBzb25nLCBhbGJ1bSwgdXNlciwgb3IgYXJ0aXN0LiBUaGlzIHdpbGwgYnJpbmcgeW91IHRvIGEgZ2xvYmFsIHBvc3QgYWJvdXQgdGhlIHNvbmcgb3IgYWxidW0uIFRoaXMgc2hvdWxkIGhhdmUgYWxsIGRhdGEgZnJvbSBwb3N0cyBhYm91dCB0aGF0IHRvcGljPC9wPlxyXG5cdFx0XHRcdDxhIGhyZWY9XCIvY29udGFjdFwiIGNsYXNzTmFtZSA9XCJidG4gYnRuLWxnIGJ0bi1wcmltYXJ5XCI+RHJvcCB1cyBhIGxpbms8L2E+XHJcblx0XHRcdDwvZGl2PlxyXG5cdFx0PC9kaXY+XHJcblx0XHQpO1xyXG5cdH1cclxufVxyXG5cclxuXHJcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCBTdGFuZGFyZEhlYWRlciBmcm9tICcuL3N0YW5kYXJkX2hlYWRlci5qcydcclxuaW1wb3J0IFBvc3RJbmZvIGZyb20gJy4vcG9zdC5qcydcclxuY2xhc3MgVXNlckluZm8gZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xyXG5cclxuXHRjb25zdHJ1Y3Rvcihwcm9wcykge1xyXG5cdFx0c3VwZXIocHJvcHMpO1xyXG5cdH1cclxuXHJcblx0cmVuZGVyICgpXHJcblx0e1xyXG5cdFx0cmV0dXJuKFxyXG5cdFx0XHQ8ZGl2IGNsYXNzTmFtZSA9IFwidXNlcl9pbmZvXCIgc3R5bGU9e3twb3NpdGlvbjoncmVsYXRpdmUnLGxlZnQ6JzE1JScsIHRvcDonMTAwcHgnLCBwb3NpdGlvbjoncmVsYXRpdmUnLHdpZHRoOicxMDAlJ319PlxyXG5cdFx0XHRcdDxoMT57dGhpcy5wcm9wcy51c2VyLnVzZXJuYW1lfTwvaDE+XHJcblx0XHRcdFx0PGgyPnt0aGlzLnByb3BzLnVzZXIuZGVzY3JpcHRpb259PC9oMj5cclxuXHRcdFx0XHQ8aDI+e3RoaXMucHJvcHMudXNlci51cHZvdGVzIC0gdGhpcy5wcm9wcy51c2VyLmRvd252b3Rlc308L2gyPlxyXG5cdFx0XHQ8L2Rpdj5cclxuXHRcdCk7XHJcblx0fVxyXG59XHJcblxyXG5jbGFzcyBGb2xsb3dlckluZm8gZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xyXG5cdGNvbnN0cnVjdG9yKHByb3BzKSB7XHJcblx0XHRzdXBlcihwcm9wcylcclxuXHJcblx0fVxyXG5cclxuXHRmb2xsb3dDbGlja2VkKClcclxuXHR7XHJcblx0XHR2YXIgdGhhdCA9IHRoaXM7XHJcblx0ICAgIGZldGNoKFwiL2ZvbGxvd1wiLCB7XHJcblx0ICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxyXG5cdCAgICAgICAgaGVhZGVyczoge1xyXG5cdCAgICAgICAgXHRBY2NlcHQ6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuXHQgICAgICAgIFx0J0F1dGhvcml6YXRpb24nOiAnQmFzaWMnLFxyXG5cdCAgICAgICAgXHQnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxyXG5cdCAgICAgICAgfSxcclxuXHQgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtmb2xsb3dlZV9pZDogdGhhdC5wcm9wcy51c2VyLnVzZXJuYW1lLH0pfSlcclxuXHQgICAgLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHsgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTt9KVxyXG5cdCAgICAudGhlbihmdW5jdGlvbiAoZGF0YSkgeyAgICBcdFxyXG5cdCBcdH0pXHRcclxuXHR9XHJcblxyXG5cdHJlbmRlcigpXHJcblx0e1xyXG5cdFx0cmV0dXJuKFxyXG5cdFx0XHQ8ZGl2IGNsYXNzTmFtZSA9IFwidXNlcl9ib2R5XCIgc3R5bGU9e3tsZWZ0OicxNSUnLCB0b3A6JzEwMHB4JywgcG9zaXRpb246J3JlbGF0aXZlJyx3aWR0aDonMTAwJSd9fT5cclxuXHRcdFx0XHQ8ZGl2PlxyXG5cdFx0XHRcdFx0PHA+IDxhIGhyZWYgPSB7XCIvZm9sbG93ZXJzL1wiICsgdGhpcy5wcm9wcy51c2VyLnVzZXJuYW1lfT4gRm9sbG93ZXJzIDwvYT46IHt0aGlzLnByb3BzLmZvbGxvd3N9IDwvcD5cclxuXHRcdFx0XHRcdDxwPiA8YSBocmVmID0ge1wiL2ZvbGxvd2luZy9cIiArIHRoaXMucHJvcHMudXNlci51c2VybmFtZX0+IEZvbGxvd2luZyA8L2E+OiB7dGhpcy5wcm9wcy5mb2xsb3dlZXN9IDwvcD5cclxuXHRcdFx0XHQ8L2Rpdj5cclxuXHJcblx0XHRcdFx0PGJ1dHRvbiBjbGFzc05hbWUgPSAnZm9sbG93X2J1dHRvbicgaWQgPSBcImZvbGxvd19idXR0b25cIiB0eXBlPVwiYnV0dG9uXCIgb25DbGljayA9IHt0aGlzLmZvbGxvd0NsaWNrZWQuYmluZCh0aGlzKX0+Rm9sbG93PC9idXR0b24+XHJcblx0XHRcdFx0PGRpdiBjbGFzc05hbWU9XCJmb2xsb3dfaWNvblwiPlxyXG5cdFx0XHRcdFx0Tm90IEZvbGxvd2luZ1xyXG5cdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHQ8L2Rpdj5cclxuXHRcdCk7XHJcblx0fVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBVc2VyUGFnZSBleHRlbmRzIFJlYWN0LkNvbXBvbmVudHtcclxuXHJcblx0Y29uc3RydWN0b3IocHJvcHMpIHtcclxuXHRcdHN1cGVyKHByb3BzKTtcclxuXHRcdHRoaXMub2Zmc2V0ID0gdGhpcy5wcm9wcy5kYXRhLnNvbmdzLmxlbmd0aDtcclxuXHRcdHRoaXMucG9zdHNSZWYgPSBSZWFjdC5jcmVhdGVSZWYoKTtcclxuXHRcdHRoaXMubG9hZGluZ19wb3N0c19zZW1hcGhvciA9IGZhbHNlO1xyXG5cdH1cclxuXHJcblx0Y29tcG9uZW50RGlkTW91bnQoKSBcclxuXHR7XHJcblx0ICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdzY3JvbGwnLCB0aGlzLmhhbmRsZVNjcm9sbC5iaW5kKHRoaXMpKTtcclxuXHQgICAgLy90aGlzLnVwZGF0ZU9mZnNldHModGhpcy5wcm9wcy5kYXRhLnNvbmdzKVxyXG5cdH1cclxuXHJcblx0Y29tcG9uZW50V2lsbFVubW91bnQoKSBcclxuXHR7XHJcblx0ICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdzY3JvbGwnLCB0aGlzLmhhbmRsZVNjcm9sbC5iaW5kKHRoaXMpKTtcclxuXHR9XHJcblxyXG5cdGhhbmRsZVNjcm9sbCgpIHtcclxuXHRcdGNvbnNvbGUubG9nKHRoaXMucHJvcHMuZGF0YS51c2VybmFtZSlcclxuXHRcdGlmICgod2luZG93LmlubmVySGVpZ2h0ICsgd2luZG93LnNjcm9sbFkpID49IGRvY3VtZW50LmJvZHkub2Zmc2V0SGVpZ2h0ICYmICF0aGlzLmxvYWRpbmdfcG9zdHNfc2VtYXBob3IpIFxyXG5cdFx0e1xyXG5cdFx0XHR2YXIgdGhhdCA9IHRoaXNcclxuXHRcdFx0Y29uc29sZS5sb2coXCJMT0FESU5HIE5FVyBQT1NUU1wiKVxyXG5cdFx0XHR0aGlzLmxvYWRpbmdfcG9zdHNfc2VtYXBob3IgPSB0cnVlXHJcblx0XHQgICAgZmV0Y2goXCIvbG9hZF9wb3N0X2RhdGFcIiwge1xyXG5cdFx0ICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxyXG5cdFx0ICAgICAgICBoZWFkZXJzOiB7XHJcblx0XHQgICAgICAgIFx0J0FjY2VwdCc6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuXHRcdCAgICAgICAgXHQnQXV0aG9yaXphdGlvbic6ICdCYXNpYycsXHJcblx0XHQgICAgICAgIFx0J0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuXHRcdCAgICAgICAgfSxcclxuXHRcdCAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe29mZnNldDp0aGF0Lm9mZnNldCxcclxuXHRcdCAgICAgICAgXHRcdFx0XHRcdCAgdXNlcjogdGhhdC5wcm9wcy5kYXRhLnVzZXJuYW1lfSl9KVxyXG5cdFx0ICAgIC50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7IHJldHVybiByZXNwb25zZS5qc29uKCk7fSlcclxuXHRcdCAgICAudGhlbihmdW5jdGlvbiAoZGF0YSkgeyBcclxuXHRcdCAgICBcdHRoYXQub2Zmc2V0ICs9IGRhdGEuc29uZ3MubGVuZ3RoO1xyXG5cdFx0ICAgIFx0dGhhdC5wb3N0c1JlZi5jdXJyZW50LmFkZFBvc3RzKGRhdGEuc29uZ3MsIGRhdGEubGlrZXMsIGRhdGEubnVtX2NvbW1lbnRzKVxyXG5cdFx0ICAgIFx0dGhhdC5sb2FkaW5nX3Bvc3RzX3NlbWFwaG9yID0gZmFsc2U7XHJcblx0XHQgXHR9KVxyXG5cdFx0fVxyXG5cdH1cclxuXHJcbiAgcmVuZGVyKCkge1xyXG5cdHJldHVybiAoXHJcblx0PGRpdj5cclxuXHRcdDxVc2VySW5mbyB1c2VyID0ge3RoaXMucHJvcHMuZGF0YS51c2VyfS8+XHJcblx0XHQ8Rm9sbG93ZXJJbmZvIHVzZXIgPSB7dGhpcy5wcm9wcy5kYXRhLnVzZXJ9IGZvbGxvd3M9e3RoaXMucHJvcHMuZGF0YS5mb2xsb3dzfSBmb2xsb3dlZXM9e3RoaXMucHJvcHMuZGF0YS5mb2xsb3dlZXN9Lz5cclxuXHRcdDxQb3N0SW5mbyByZWYgPSB7dGhpcy5wb3N0c1JlZn0gc29uZ3MgPSB7dGhpcy5wcm9wcy5kYXRhLnNvbmdzfSBsaWtlcyA9IHt0aGlzLnByb3BzLmRhdGEubGlrZXN9IG51bV9jb21tZW50cyA9IHt0aGlzLnByb3BzLmRhdGEubnVtX2NvbW1lbnRzfS8+XHJcblxyXG5cdFx0PGRpdiBjbGFzc05hbWUgPSBcInVzZXJfYm9keVwiIHN0eWxlPXt7bGVmdDonMTUlJywgdG9wOicxMDBweCcsIHBvc2l0aW9uOidyZWxhdGl2ZScsIHdpZHRoOicxMDAlJ319PlxyXG5cclxuXHRcdDwvZGl2PlxyXG5cclxuXHJcblx0PC9kaXY+XHJcblx0KX07XHJcbn1cclxuXHJcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB1dGlscyBmcm9tICcuL3V0aWxzLmpzJ1xyXG5cclxuZnVuY3Rpb24gZ2VuZXJhdGVDb21tZW50cyhjb21tZW50cywgY29tbWVudF92b3RlcywgaWQsIHN0YXJ0aW5nX2NvbW1lbnRfbGV2ZWwpXHJcbntcclxuXHR2YXIgbGV2ZWxzID0gW107XHJcblx0dmFyIGxldmVsX3plcm9fY29tbWVudHMgPSAwO1xyXG5cdGZvciAodmFyIGNvbW1lbnQgb2YgY29tbWVudHMpXHJcblx0e1xyXG5cdFx0aWYoY29tbWVudC5jb21tZW50X2xldmVsID09IDApXHJcblx0XHR7XHJcblx0XHRcdCsrbGV2ZWxfemVyb19jb21tZW50cztcclxuXHRcdH1cclxuXHRcdGlmIChjb21tZW50LmNvbW1lbnRfbGV2ZWwrMSA+IGxldmVscy5sZW5ndGgpXHJcblx0XHR7XHJcblx0XHRcdHZhciBjdXJyZW50X2xldmVsc19sZW5ndGggPSBsZXZlbHMubGVuZ3RoO1xyXG5cdFx0XHRmb3IgKHZhciBpID0gMDtpIDwgY29tbWVudC5jb21tZW50X2xldmVsICsgMSAtY3VycmVudF9sZXZlbHNfbGVuZ3RoO2krKylcclxuXHRcdFx0e1xyXG5cdFx0XHRcdGxldmVscy5wdXNoKFtdKTtcclxuXHRcdFx0fVxyXG5cdFx0XHRsZXZlbHNbY29tbWVudC5jb21tZW50X2xldmVsXS5wdXNoKGNvbW1lbnQpO1xyXG5cdFx0fVxyXG5cdFx0ZWxzZVxyXG5cdFx0e1xyXG5cdFx0XHRsZXZlbHNbY29tbWVudC5jb21tZW50X2xldmVsXS5wdXNoKGNvbW1lbnQpO1xyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0dmFyIGNvbW1lbnRfbWFwID0ge307XHJcblx0dmFyIGN1cnJlbnRfY29tbWVudHMgPSBbXTtcclxuXHJcblx0Zm9yICh2YXIgbGV2ZWwgPSBsZXZlbHMubGVuZ3RoIC0gMTsgbGV2ZWwgPj0gMDsgbGV2ZWwtLSlcclxuXHR7XHJcblx0XHRmb3IgKHZhciBjb21tZW50IG9mIGxldmVsc1tsZXZlbF0pXHJcblx0XHR7XHJcblx0XHRcdGlmIChjb21tZW50X21hcFtjb21tZW50LmNvbW1lbnRfaWRdICE9IHVuZGVmaW5lZClcclxuXHRcdFx0e1xyXG5cdFx0XHRcdGZvciAodmFyIGNoaWxkIG9mIGNvbW1lbnRfbWFwW2NvbW1lbnQuY29tbWVudF9pZF0pXHJcblx0XHRcdFx0e1xyXG5cdFx0XHRcdFx0Y29tbWVudC5yZXBsaWVzID0gY29tbWVudC5yZXBsaWVzIC0gY2hpbGQucHJvcHMuZGF0YS5yZXBsaWVzIC0gMTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdHZhciBjb21tZW50X3ZvdGU7XHJcblx0XHRcdGZvciAodmFyIHZvdGUgb2YgY29tbWVudF92b3RlcylcclxuXHRcdFx0e1xyXG5cdFx0XHRcdGlmICh2b3RlLmNvbW1lbnRfaWQgPT0gY29tbWVudC5jb21tZW50X2lkKVxyXG5cdFx0XHRcdHtcclxuXHRcdFx0XHRcdGNvbW1lbnRfdm90ZSA9IHZvdGU7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHRcdGN1cnJlbnRfY29tbWVudHMucHVzaCg8Q29tbWVudCBrZXkgPSB7Y29tbWVudC5jb21tZW50X2lkfSBkYXRhID0ge2NvbW1lbnR9IGNoaWxkX2NvbW1lbnRzID0ge2NvbW1lbnRfbWFwW2NvbW1lbnQuY29tbWVudF9pZF19IHZvdGVfc3RhdGUgPSB7Y29tbWVudF92b3RlfSBwb3N0X2lkID0ge2lkfS8+KVxyXG5cdFx0XHQvL2N1cnJlbnRfY29tbWVudHMucHVzaCg8ZGl2PlBMRUFTRTwvZGl2PilcclxuXHRcdH1cclxuXHRcdGlmIChsZXZlbCA9PSBzdGFydGluZ19jb21tZW50X2xldmVsKVxyXG5cdFx0e1xyXG5cdFx0XHRicmVhaztcclxuXHRcdH1cclxuXHRcdC8vY29tbWVudCBoZXJlIGlzIGRpZmZlcmVudCBmcm9tIGFib3ZlLCBpdHMgYSBDb21tZW50IGNvbXBvbmVudCByYXRoZXIgdGhhbiBkYXRhXHJcblxyXG5cdFx0Zm9yICh2YXIgY29tbWVudCBvZiBjdXJyZW50X2NvbW1lbnRzKVxyXG5cdFx0e1xyXG5cdFx0XHR2YXIgcGFyZW50X2lkID0gY29tbWVudC5wcm9wcy5kYXRhLnBhcmVudF9jb21tZW50X2lkO1xyXG5cdFx0XHRpZiAoY29tbWVudF9tYXBbcGFyZW50X2lkXSA9PSB1bmRlZmluZWQpXHJcblx0XHRcdHtcclxuXHRcdFx0XHRjb21tZW50X21hcFtwYXJlbnRfaWRdID0gW2NvbW1lbnRdO1xyXG5cdFx0XHR9XHJcblx0XHRcdGVsc2VcclxuXHRcdFx0e1xyXG5cdFx0XHRcdGNvbW1lbnRfbWFwW3BhcmVudF9pZF0ucHVzaChjb21tZW50KTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdFx0Y3VycmVudF9jb21tZW50cyA9IFtdO1xyXG5cdH1cdFxyXG5cclxuXHRyZXR1cm4gW2N1cnJlbnRfY29tbWVudHMsIGxldmVsX3plcm9fY29tbWVudHNdO1xyXG5cclxufVxyXG5cclxuLy8gY2xhc3MgTmV3Q29tbWVudCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudFxyXG4vLyB7XHJcbi8vIFx0Y29uc3RydWN0b3IocHJvcHMpXHJcbi8vIFx0e1xyXG4vLyBcdFx0c3VwZXIocHJvcHMpXHJcbi8vIFx0XHR0aGlzLm5ld0NvbW1lbnRUZXh0UmVmID0gUmVhY3QuY3JlYXRlUmVmKCk7XHJcbi8vIFx0fVxyXG5cclxuLy8gXHRjbG9zZU5ld0NvbW1lbnQoKVxyXG4vLyBcdHtcclxuLy8gXHRcdGNvbnNvbGUubG9nKFwiQ0xPU0UgQ09NTUVOVFwiKVxyXG4vLyBcdFx0dGhpcy5uZXdfY29tbWVudCA9IHVuZGVmaW5lZFxyXG4vLyBcdFx0dGhpcy5mb3JjZVVwZGF0ZSgpO1x0XHRcclxuLy8gXHR9XHJcblxyXG4vLyBcdHN1Ym1pdE5ld0NvbW1lbnQoKVxyXG4vLyBcdHtcclxuLy8gXHQgICAgZmV0Y2goXCIvY29tbWVudFwiLCB7XHJcbi8vIFx0ICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxyXG4vLyBcdCAgICAgICAgaGVhZGVyczoge1xyXG4vLyBcdCAgICAgICAgXHRBY2NlcHQ6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuLy8gXHQgICAgICAgIFx0J0F1dGhvcml6YXRpb24nOiAnQmFzaWMnLFxyXG4vLyBcdCAgICAgICAgXHQnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxyXG4vLyBcdCAgICAgICAgfSxcclxuXHJcbi8vIFx0ICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7aWQ6IHRoaXMucHJvcHMucG9zdF9pZCwgXHJcbi8vIFx0ICAgICAgICBcdFx0XHRcdFx0ICB0ZXh0OiB0aGlzLm5ld0NvbW1lbnRUZXh0UmVmLmN1cnJlbnQudmFsdWUsIFxyXG4vLyBcdCAgICAgICAgXHRcdFx0XHRcdCAgY29tbWVudF9sZXZlbDogdGhpcy5wcm9wcy5jb21tZW50X2xldmVsICsgMSwgXHJcbi8vIFx0ICAgICAgICBcdFx0XHRcdFx0ICBwYXJlbnRfY29tbWVudF9pZDogdGhpcy5wcm9wcy5jb21tZW50X2lkfSksfSlcclxuLy8gXHQgICAgdGhpcy5jbG9zZU5ld0NvbW1lbnQoKTtcclxuLy8gXHR9XHJcblxyXG4vLyBcdHJlbmRlcigpXHJcbi8vIFx0e1xyXG4vLyBcdFx0cmV0dXJuIChcclxuLy8gXHRcdFx0PGRpdj5cclxuLy8gXHRcdFx0XHQ8dGV4dGFyZWEgcmVmID0ge3RoaXMubmV3Q29tbWVudFRleHRSZWZ9IGNsYXNzID0gJ2NvbW1lbnRfdGV4dCcgaWQgPSB7dGhpcy5wcm9wcy5jb21tZW50X2lkfSBuYW1lPSdjb250ZW50JyByb3dzPScxMCcgY29scz0nOTAnIHN0eWxlPXt7d2lkdGg6JzgwJScsaGVpZ2h0Oic1MHB4Jyx6SW5kZXg6JzEwMCd9fT48L3RleHRhcmVhPlxyXG4vLyBcdFx0XHRcdDxidXR0b24gb25DbGljayA9IHt0aGlzLnN1Ym1pdE5ld0NvbW1lbnQuYmluZCh0aGlzKX0gc3R5bGU9e3toZWlnaHQ6JzMwcHgnLGJvdHRvbTonMzBweCcscG9zaXRpb246J3JlbGF0aXZlJ319IHR5cGU9J2J1dHRvbicgY2xhc3M9J3N1Ym1pdF9uZXdfY29tbWVudCcgaWQgPSB7dGhpcy5wcm9wcy5jb21tZW50X2lkfT5zdWJtaXQ8L2J1dHRvbj5cclxuLy8gXHRcdFx0XHQ8YnV0dG9uIG9uQ2xpY2sgPSB7dGhpcy5jbG9zZU5ld0NvbW1lbnQuYmluZCh0aGlzKX0gc3R5bGU9e3tib3R0b206JzBweCcscG9zaXRpb246J3JlbGF0aXZlJyxoZWlnaHQ6JzMwcHgnfX0gdHlwZT0nYnV0dG9uJyBjbGFzcz0nY2xvc2VfbmV3X2NvbW1lbnQnIGlkID0ge3RoaXMucHJvcHMuY29tbWVudF9pZH0+eDwvYnV0dG9uPlxyXG4vLyBcdFx0XHQ8L2Rpdj5cclxuLy8gXHRcdClcclxuLy8gXHR9XHJcblxyXG4vLyB9XHJcblxyXG5jbGFzcyBDb21tZW50IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50XHJcbntcclxuXHRjb25zdHJ1Y3Rvcihwcm9wcylcclxuXHR7XHJcblx0XHRzdXBlcihwcm9wcyk7XHJcblx0XHQvL3RoaXMuY2hpbGRfY29tbWVudHMgPSBbPENvbW1lbnQgZGF0YSA9IHtwcm9wcy5kYXRhfSBjaGlsZF9jb21tZW50cyA9IHt1bmRlZmluZWR9IHZvdGVfc3RhdGUgPSB7dW5kZWZpbmVkfSBwb3N0X2lkID0ge3Byb3BzLnBvc3RfaWR9Lz5dO1xyXG5cdFx0dGhpcy5pZCA9IHRoaXMucHJvcHMuZGF0YS5jb21tZW50X2lkO1xyXG5cdFx0dGhpcy5yZXBsaWVzX2J1dHRvbiA9IHVuZGVmaW5lZDtcclxuXHRcdHRoaXMuY2hpbGRfY29tbWVudHMgPSBbXVxyXG5cclxuXHRcdGlmIChwcm9wcy5jaGlsZF9jb21tZW50cyAhPSB1bmRlZmluZWQpXHJcblx0XHR7XHJcblx0XHRcdGZvciAodmFyIGNvbW1lbnQgb2YgcHJvcHMuY2hpbGRfY29tbWVudHMpXHJcblx0XHRcdHtcclxuXHRcdFx0XHR0aGlzLmNoaWxkX2NvbW1lbnRzLnB1c2goY29tbWVudClcclxuXHRcdFx0XHQvL3RoaXMuY2hpbGRfY29tbWVudHMucHVzaCg8ZGl2PkhFWTwvZGl2PilcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdFx0aWYgKHByb3BzLmRhdGEucmVwbGllcyA+IDApXHJcblx0XHR7XHJcblx0XHRcdHZhciBsZWZ0X29mZnNldCA9IFN0cmluZygocHJvcHMuZGF0YS5jb21tZW50X2xldmVsICsgMSkgKiA1KSArICclJ1xyXG5cdFx0XHR0aGlzLnJlcGxpZXNfYnV0dG9uID0gPGJ1dHRvbiBvbkNsaWNrID0ge3RoaXMuc2hvd1JlcGxpZXMuYmluZCh0aGlzKX0gY2xhc3NOYW1lID0gJ3Nob3dfcmVwbGllcycgc3R5bGUgPSB7e3Bvc2l0aW9uOidyZWxhdGl2ZScsIGxlZnQ6bGVmdF9vZmZzZXR9fSBpZCA9IHtwcm9wcy5kYXRhLmNvbW1lbnRfaWR9ID4gc2hvdyB7cHJvcHMuZGF0YS5yZXBsaWVzfSByZXBsaWVzIDwvYnV0dG9uPjtcclxuICAgICAgXHR9XHJcblxyXG4gICAgICBcdHRoaXMudXB2b3RlUmVmID0gUmVhY3QuY3JlYXRlUmVmKCk7XHJcbiAgICAgIFx0dGhpcy5kb3dudm90ZVJlZiA9IFJlYWN0LmNyZWF0ZVJlZigpO1xyXG4gICAgICBcdHRoaXMuc2NvcmVSZWYgPSBSZWFjdC5jcmVhdGVSZWYoKTtcclxuXHRcdFxyXG5cdFx0dGhpcy52b3Rlc19zY29yZSA9IHRoaXMucHJvcHMuZGF0YS51cHZvdGVzIC0gdGhpcy5wcm9wcy5kYXRhLmRvd252b3RlcztcclxuXHJcblx0XHR0aGlzLnZvdGVfc3RhdGUgPSAtMTtcclxuXHRcdGlmICh0aGlzLnByb3BzLnZvdGVfc3RhdGUgIT0gdW5kZWZpbmVkKVxyXG5cdFx0e1xyXG5cdFx0XHR0aGlzLnZvdGVfc3RhdGUgPSB0aGlzLnByb3BzLnZvdGVfc3RhdGUudm90ZV9zdGF0ZVxyXG5cdFx0fVxyXG5cclxuXHRcdHRoaXMubmV3X2NvbW1lbnQgPSB1bmRlZmluZWQ7XHJcblx0XHR0aGlzLm5ld0NvbW1lbnRUZXh0UmVmID0gUmVhY3QuY3JlYXRlUmVmKCk7XHJcblx0fVxyXG5cclxuXHRhZGRDaGlsZChjb21tZW50KVxyXG5cdHtcclxuXHRcdHRoaXMuY2hpbGRfY29tbWVudHMucHVzaCg8Q29tbWVudCBrZXk9e2NvbW1lbnQuZGF0YS5jb21tZW50X2lkfSBkYXRhID0ge2NvbW1lbnQuZGF0YX0vPilcclxuXHR9XHJcblxyXG5cdHVwdm90ZUNsaWNrZWQoKVxyXG5cdHtcclxuXHRcdGlmICghdXRpbHMuY2hlY2tMb2dnZWRJbigpKVxyXG5cdFx0e1xyXG5cdFx0XHRhbGVydChcIk1VU1QgQkUgTE9HR0VEIElOXCIpXHJcblx0XHRcdHJldHVybjtcclxuXHRcdH1cclxuICAgIFx0aWYgKHRoaXMudm90ZV9zdGF0ZSA9PSAwIHx8IHRoaXMudm90ZV9zdGF0ZSA9PSAtMSlcclxuICAgIFx0e1xyXG4gICAgXHRcdHRoaXMudXB2b3RlUmVmLmN1cnJlbnQuc3R5bGUuY29sb3IgPSAnYmx1ZSdcclxuICAgIFx0XHR0aGlzLmRvd252b3RlUmVmLmN1cnJlbnQuc3R5bGUuY29sb3IgPSAnYmxhY2snXHJcbiAgICBcdFx0XHJcbiAgICAgICBcdFx0aWYgKHRoaXMudm90ZV9zdGF0ZSA9PSAwKVxyXG4gICAgXHRcdHtcclxuICAgIFx0XHRcdHRoaXMudm90ZXNfc2NvcmUgPSB0aGlzLnZvdGVzX3Njb3JlICsgMjtcclxuICAgIFx0XHR9XHJcbiAgICBcdFx0ZWxzZVxyXG4gICAgXHRcdHtcclxuICAgIFx0XHRcdHRoaXMudm90ZXNfc2NvcmUgPSB0aGlzLnZvdGVzX3Njb3JlICsgMTtcclxuICAgIFx0XHR9XHJcbiAgICBcdFx0dGhpcy52b3RlX3N0YXRlID0gMTtcclxuICAgIFx0fVxyXG4gICAgXHRlbHNlIGlmICh0aGlzLnZvdGVfc3RhdGUgPT0gMSlcclxuICAgIFx0e1xyXG4gICAgXHRcdHRoaXMudXB2b3RlUmVmLmN1cnJlbnQuc3R5bGUuY29sb3IgPSAnYmxhY2snXHJcbiAgICBcdFx0dGhpcy5kb3dudm90ZVJlZi5jdXJyZW50LnN0eWxlLmNvbG9yID0gJ2JsYWNrJ1xyXG4gICAgXHRcdHRoaXMudm90ZV9zdGF0ZSA9IC0xXHJcbiAgICBcdFx0dGhpcy52b3Rlc19zY29yZSA9IHRoaXMudm90ZXNfc2NvcmUgLSAxO1xyXG4gICAgXHR9XHJcbiAgICBcdHRoaXMuZm9yY2VVcGRhdGUoKTtcclxuICAgIFx0XHJcblxyXG5cdCAgICBmZXRjaChcIi91cHZvdGVcIiwge1xyXG5cdCAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcclxuXHQgICAgICAgIGhlYWRlcnM6IHtcclxuXHQgICAgICAgIFx0QWNjZXB0OiAnYXBwbGljYXRpb24vanNvbicsXHJcblx0ICAgICAgICBcdCdBdXRob3JpemF0aW9uJzogJ0Jhc2ljJyxcclxuXHQgICAgICAgIFx0J0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuXHQgICAgICAgIH0sXHJcblx0ICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7aWQ6IHRoaXMucHJvcHMuZGF0YS5jb21tZW50X2lkLH0pfSlcclxuXHQgICAgLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHsgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTt9KVxyXG5cdCAgICAudGhlbihmdW5jdGlvbiAoZGF0YSkgeyAgICBcdFxyXG5cdCAgICBcdGxvY2F0aW9uLnJlbG9hZCh0cnVlKTtcclxuXHQgXHR9KVx0XHJcblx0fVxyXG5cclxuXHRkb3dudm90ZUNsaWNrZWQoKVxyXG5cdHtcclxuXHRcdGlmICghdXRpbHMuY2hlY2tMb2dnZWRJbigpKVxyXG5cdFx0e1xyXG5cdFx0XHRhbGVydChcIk1VU1QgQkUgTE9HR0VEIElOXCIpXHJcblx0XHRcdHJldHVybjtcclxuXHRcdH1cclxuICAgIFx0aWYgKHRoaXMudm90ZV9zdGF0ZSA9PSAxIHx8IHRoaXMudm90ZV9zdGF0ZSA9PSAtMSlcclxuICAgIFx0e1xyXG4gICAgXHRcdHRoaXMudXB2b3RlUmVmLmN1cnJlbnQuc3R5bGUuY29sb3IgPSAnYmxhY2snXHJcbiAgICBcdFx0dGhpcy5kb3dudm90ZVJlZi5jdXJyZW50LnN0eWxlLmNvbG9yID0gJ3JlZCdcclxuICAgIFx0XHRcclxuICAgIFx0XHRpZiAodGhpcy52b3RlX3N0YXRlID09IDEpXHJcbiAgICBcdFx0e1xyXG4gICAgXHRcdFx0dGhpcy52b3Rlc19zY29yZSA9IHRoaXMudm90ZXNfc2NvcmUgLSAyO1xyXG4gICAgXHRcdH1cclxuICAgIFx0XHRlbHNlXHJcbiAgICBcdFx0e1xyXG4gICAgXHRcdFx0dGhpcy52b3Rlc19zY29yZSA9IHRoaXMudm90ZXNfc2NvcmUgLSAxO1xyXG4gICAgXHRcdH1cclxuICAgIFx0XHR0aGlzLnZvdGVfc3RhdGUgPSAwO1xyXG4gICAgXHR9XHJcbiAgICBcdGVsc2UgaWYgKHRoaXMudm90ZV9zdGF0ZSA9PSAwKVxyXG4gICAgXHR7XHJcbiAgICBcdFx0dGhpcy51cHZvdGVSZWYuY3VycmVudC5zdHlsZS5jb2xvciA9ICdibGFjaydcclxuICAgIFx0XHR0aGlzLmRvd252b3RlUmVmLmN1cnJlbnQuc3R5bGUuY29sb3IgPSAnYmxhY2snXHJcbiAgICBcdFx0dGhpcy52b3RlX3N0YXRlID0gLTFcclxuICAgIFx0XHR0aGlzLnZvdGVzX3Njb3JlID0gdGhpcy52b3Rlc19zY29yZSArIDE7XHJcbiAgICBcdH1cclxuXHJcbiAgICBcdHRoaXMuZm9yY2VVcGRhdGUoKTtcclxuXHJcblx0ICAgIGZldGNoKFwiL2Rvd252b3RlXCIsIHtcclxuXHQgICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcblx0ICAgICAgICBoZWFkZXJzOiB7XHJcblx0ICAgICAgICBcdEFjY2VwdDogJ2FwcGxpY2F0aW9uL2pzb24nLFxyXG5cdCAgICAgICAgXHQnQXV0aG9yaXphdGlvbic6ICdCYXNpYycsXHJcblx0ICAgICAgICBcdCdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXHJcblx0ICAgICAgICB9LFxyXG5cdCAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe2lkOiB0aGlzLnByb3BzLmRhdGEuY29tbWVudF9pZCx9KX0pXHJcblx0ICAgIC50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7IHJldHVybiByZXNwb25zZS5qc29uKCk7fSlcclxuXHQgICAgLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsgICAgXHRcclxuXHQgXHR9KVx0XHJcblx0fVxyXG5cclxuXHRvcGVuTmV3Q29tbWVudCgpXHJcblx0e1xyXG5cdFx0aWYgKCF1dGlscy5jaGVja0xvZ2dlZEluKCkpXHJcblx0XHR7XHJcblx0XHRcdGFsZXJ0KFwiTVVTVCBCRSBMT0dHRUQgSU5cIilcclxuXHRcdFx0cmV0dXJuO1xyXG5cdFx0fVxyXG5cdFx0dGhpcy5uZXdfY29tbWVudCA9IDxkaXY+XHJcblx0XHRcdFx0PHRleHRhcmVhIHJlZiA9IHt0aGlzLm5ld0NvbW1lbnRUZXh0UmVmfSBjbGFzcyA9ICdjb21tZW50X3RleHQnIGlkID0ge3RoaXMucHJvcHMuZGF0YS5jb21tZW50X2lkfSBuYW1lPSdjb250ZW50JyByb3dzPScxMCcgY29scz0nOTAnIHN0eWxlPXt7d2lkdGg6JzgwJScsaGVpZ2h0Oic1MHB4Jyx6SW5kZXg6JzEwMCd9fT48L3RleHRhcmVhPlxyXG5cdFx0XHRcdDxidXR0b24gb25DbGljayA9IHt0aGlzLnN1Ym1pdE5ld0NvbW1lbnQuYmluZCh0aGlzKX0gc3R5bGU9e3toZWlnaHQ6JzMwcHgnLGJvdHRvbTonMzBweCcscG9zaXRpb246J3JlbGF0aXZlJ319IHR5cGU9J2J1dHRvbicgY2xhc3M9J3N1Ym1pdF9uZXdfY29tbWVudCcgaWQgPSB7dGhpcy5wcm9wcy5kYXRhLmNvbW1lbnRfaWR9PnN1Ym1pdDwvYnV0dG9uPlxyXG5cdFx0XHRcdDxidXR0b24gb25DbGljayA9IHt0aGlzLmNsb3NlTmV3Q29tbWVudC5iaW5kKHRoaXMpfSBzdHlsZT17e2JvdHRvbTonMHB4Jyxwb3NpdGlvbjoncmVsYXRpdmUnLGhlaWdodDonMzBweCd9fSB0eXBlPSdidXR0b24nIGNsYXNzPSdjbG9zZV9uZXdfY29tbWVudCcgaWQgPSB7dGhpcy5wcm9wcy5kYXRhLmNvbW1lbnRfaWR9Png8L2J1dHRvbj5cclxuXHRcdFx0PC9kaXY+XHJcblx0XHR0aGlzLmZvcmNlVXBkYXRlKCk7XHJcblx0fVxyXG5cclxuXHRjbG9zZU5ld0NvbW1lbnQoKVxyXG5cdHtcclxuXHRcdHRoaXMubmV3X2NvbW1lbnQgPSB1bmRlZmluZWRcclxuXHRcdHRoaXMuZm9yY2VVcGRhdGUoKTtcdFx0XHJcblx0fVxyXG5cclxuXHRzdWJtaXROZXdDb21tZW50KClcclxuXHR7XHJcblx0ICAgIGZldGNoKFwiL2NvbW1lbnRcIiwge1xyXG5cdCAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcclxuXHQgICAgICAgIGhlYWRlcnM6IHtcclxuXHQgICAgICAgIFx0QWNjZXB0OiAnYXBwbGljYXRpb24vanNvbicsXHJcblx0ICAgICAgICBcdCdBdXRob3JpemF0aW9uJzogJ0Jhc2ljJyxcclxuXHQgICAgICAgIFx0J0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuXHQgICAgICAgIH0sXHJcblxyXG5cdCAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe2lkOiB0aGlzLnByb3BzLnBvc3RfaWQsIFxyXG5cdCAgICAgICAgXHRcdFx0XHRcdCAgdGV4dDogdGhpcy5uZXdDb21tZW50VGV4dFJlZi5jdXJyZW50LnZhbHVlLCBcclxuXHQgICAgICAgIFx0XHRcdFx0XHQgIGNvbW1lbnRfbGV2ZWw6IHRoaXMucHJvcHMuZGF0YS5jb21tZW50X2xldmVsICsgMSwgXHJcblx0ICAgICAgICBcdFx0XHRcdFx0ICBwYXJlbnRfY29tbWVudF9pZDogdGhpcy5wcm9wcy5kYXRhLmNvbW1lbnRfaWR9KSx9KVxyXG5cdCAgICAudGhlbihmdW5jdGlvbihyZXNwb25zZSkgeyByZXR1cm4gcmVzcG9uc2UuanNvbigpO30pXHJcblx0ICAgIC50aGVuKGZ1bmN0aW9uIChkYXRhKSB7ICAgIFx0XHJcblx0ICAgIFx0Ly9sb2NhdGlvbi5yZWxvYWQodHJ1ZSk7XHJcblx0ICAgIH0pXHQgICAgXHJcblx0ICAgIHRoaXMuY2xvc2VOZXdDb21tZW50KCk7XHJcblx0fVxyXG5cclxuXHRzaG93UmVwbGllcygpXHJcblx0e1xyXG5cdFx0dmFyIHRoYXQ9IHRoaXM7XHJcblx0XHR0aGlzLnJlcGxpZXNfYnV0dG9uID0gdW5kZWZpbmVkO1xyXG5cdFx0dGhpcy5mb3JjZVVwZGF0ZSgpXHJcblx0ICAgIGZldGNoKFwiL3Nob3dfcmVwbGllc1wiLCB7XHJcblx0ICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxyXG5cdCAgICAgICAgaGVhZGVyczoge1xyXG5cdCAgICAgICAgXHQnQWNjZXB0JzogJ2FwcGxpY2F0aW9uL2pzb24nLFxyXG5cdCAgICAgICAgXHQnQXV0aG9yaXphdGlvbic6ICdCYXNpYycsXHJcblx0ICAgICAgICBcdCdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXHJcblx0ICAgICAgICB9LFxyXG5cdCAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe2lkOiB0aGlzLnByb3BzLmRhdGEuY29tbWVudF9pZCwgb2Zmc2V0OiB0aGlzLmNoaWxkX2NvbW1lbnRzLmxlbmd0aH0pfSlcclxuXHQgICAgLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHsgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTt9KVxyXG5cdCAgICAudGhlbihmdW5jdGlvbiAoZGF0YSkgeyAgICBcdFxyXG5cclxuXHQgICAgXHR2YXIgY2hpbGRfY29tbWVudHMgPSBnZW5lcmF0ZUNvbW1lbnRzKGRhdGEuY29tbWVudHMsIGRhdGEuY29tbWVudF92b3RlcywgdGhhdC5wcm9wcy5wb3N0X2lkLCB0aGF0LnByb3BzLmRhdGEuY29tbWVudF9sZXZlbCArIDEpWzBdXHJcblx0ICAgIFx0Ly9kb24ndCBrbm93IHdoeSB0aGlzIGRvZXNuJ3Qgd29ya1xyXG5cdCAgICBcdGZvciAodmFyIGNvbW1lbnQgb2YgY2hpbGRfY29tbWVudHMpXHJcblx0ICAgIFx0e1xyXG5cdCAgICBcdFx0dGhhdC5jaGlsZF9jb21tZW50cy5wdXNoKGNvbW1lbnQpO1xyXG5cdCAgICBcdH1cclxuXHQgICAgXHQvL3RoYXQubmV3X2NoaWxkX2NvbW1lbnRzID0gY2hpbGRfY29tbWVudHNcclxuXHQgICAgXHR0aGF0LmZvcmNlVXBkYXRlKClcclxuXHQgXHR9KVxyXG5cclxuXHJcbiAgICB9XHJcbiAgICBhZGRDb21tZW50Q2hpbGQoY29tbWVudClcclxuICAgIHtcclxuICAgIFx0dGhpcy5jaGlsZF9jb21tZW50cy5wdXNoKGNvbW1lbnQpO1xyXG4gICAgXHR0aGlzLmZvcmNlVXBkYXRlKClcclxuICAgIH1cclxuXHRyZW5kZXIoKVxyXG5cdHtcclxuXHRcdHZhciBjb21tZW50X2xldmVsID0gXCJjb21tZW50X2xldmVsX1wiICsgU3RyaW5nKHRoaXMucHJvcHMuZGF0YS5jb21tZW50X2xldmVsKTtcclxuXHRcdHZhciBjb21tZW50X2lkID0gU3RyaW5nKHRoaXMucHJvcHMuZGF0YS5jb21tZW50X2lkKTtcclxuXHRcdHZhciByZXBsaWVzID0gMDtcclxuXHRcdHZhciBsZWZ0X29mZnNldCA9IFN0cmluZyh0aGlzLnByb3BzLmRhdGEuY29tbWVudF9sZXZlbCAqIDUpICsgJyUnXHJcblx0XHR2YXIgdXNlcl9pZCA9IHRoaXMucHJvcHMuZGF0YS51c2VyX2lkO1xyXG5cclxuXHRcdHZhciBkYXRlID0gbmV3IERhdGUodGhpcy5wcm9wcy5kYXRhLnRpbWVzdGFtcCk7XHJcblx0XHR2YXIgbWludXRlcyA9IGRhdGUuZ2V0TWludXRlcygpO1xyXG5cclxuXHRcdGlmIChTdHJpbmcobWludXRlcykubGVuZ3RoID09IDEpXHJcblx0XHR7XHJcblx0XHRcdG1pbnV0ZXMgPSBcIjBcIiArIFN0cmluZyhtaW51dGVzKTtcclxuXHRcdH1cclxuXHRcdHZhciBkYXRlX3RleHQgPSBkYXRlLmdldE1vbnRoKCkgKyBcIi9cIiArIGRhdGUuZ2V0RGF0ZSgpICsgXCIvXCIgKyBkYXRlLmdldEZ1bGxZZWFyKCkgKyBcIiBhdCBcIiArIGRhdGUuZ2V0SG91cnMoKSArIFwiOlwiICsgbWludXRlcztcclxuXHRcdHZhciBjb21tZW50X3RleHQgPSB0aGlzLnByb3BzLmRhdGEudGV4dDtcclxuXHJcblx0XHR2YXIgdXB2b3RlX2NvbG9yID0gJ2JsYWNrJ1xyXG5cdFx0dmFyIGRvd252b3RlX2NvbG9yID0gJ2JsYWNrJ1xyXG5cclxuXHRcdGlmICh0aGlzLnZvdGVfc3RhdGUgPT0gMSlcclxuXHRcdHtcclxuXHRcdFx0dXB2b3RlX2NvbG9yID0gJ2JsdWUnXHJcblx0XHR9XHJcblx0XHRlbHNlIGlmICh0aGlzLnZvdGVfc3RhdGUgPT0gMClcclxuXHRcdHtcclxuXHRcdFx0ZG93bnZvdGVfY29sb3IgPSAncmVkJ1xyXG5cdFx0fVxyXG5cclxuXHRcdHJldHVybiAoXHJcblx0ICAgICAgXHQ8ZGl2PlxyXG5cdFx0ICAgICAgXHQ8ZGl2IGNsYXNzTmFtZT0ge2NvbW1lbnRfbGV2ZWx9IGlkPSB7Y29tbWVudF9pZH0gcmVwbGllcz0ge3JlcGxpZXN9IHN0eWxlPXt7cG9zaXRpb246J3JlbGF0aXZlJywgbGVmdDpsZWZ0X29mZnNldH19PlxyXG5cdFx0XHQgICAgICBcdDxkaXYgc3R5bGU9e3twb3NpdGlvbjoncmVsYXRpdmUnLCBmbG9hdDonbGVmdCcsIGhlaWdodDonNjBweCcsIHdpZHRoOic1JSd9fT5cclxuXHRcdFx0XHQgICAgICBcdDxidXR0b24gcmVmID0ge3RoaXMudXB2b3RlUmVmfSBvbkNsaWNrID0ge3RoaXMudXB2b3RlQ2xpY2tlZC5iaW5kKHRoaXMpfSBzdHlsZT17e3RvcDonMHB4Jyxwb3NpdGlvbjonYWJzb2x1dGUnLGhlaWdodDonMzBweCcsIGNvbG9yOnVwdm90ZV9jb2xvcn19IHR5cGU9J2J1dHRvbicgY2xhc3NOYW1lID0gJ3Vwdm90ZScgaWQgPSB7Y29tbWVudF9pZH0+XjwvYnV0dG9uPlxyXG5cdFx0XHRcdCAgICAgIFx0PGJ1dHRvbiByZWYgPSB7dGhpcy5kb3dudm90ZVJlZn0gIG9uQ2xpY2sgPSB7dGhpcy5kb3dudm90ZUNsaWNrZWQuYmluZCh0aGlzKX0gc3R5bGU9e3tib3R0b206JzBweCcscG9zaXRpb246J2Fic29sdXRlJyxoZWlnaHQ6JzMwcHgnLCBjb2xvcjpkb3dudm90ZV9jb2xvcn19IHR5cGU9J2J1dHRvbicgY2xhc3NOYW1lID0gJ2Rvd252b3RlJyBpZCA9IHtjb21tZW50X2lkfT52PC9idXR0b24+XHJcblx0XHRcdCAgICAgIFx0PC9kaXY+XHJcblx0XHRcdCAgICAgIFx0PGRpdiBzdHlsZT17e2xlZnQ6JzUlJyxwb3NpdGlvbjoncmVsYXRpdmUnfX0+XHJcblx0XHRcdCAgICAgIFx0XHQ8ZGl2IHJlZiA9IHt0aGlzLnNjb3JlUmVmfSBzdHlsZT17e2JvcmRlclN0eWxlOidzb2xpZCcsIGJvcmRlckJvdHRvbVN0eWxlOiAnbm9uZScsd2lkdGg6Jzc1JScsaGVpZ2h0OiczNXB4J319IGNsYXNzTmFtZT0nY29tbWVudF9oZWFkZXInIGlkID0ge2NvbW1lbnRfaWR9PiBcclxuXHRcdFx0ICAgICAgXHRcdFx0e3VzZXJfaWQgKyBcIiBcIisgZGF0ZV90ZXh0ICtcIiBcIisgdGhpcy52b3Rlc19zY29yZX1cclxuXHRcdFx0ICAgICAgXHRcdFx0PGJ1dHRvbiBvbkNsaWNrID0ge3RoaXMub3Blbk5ld0NvbW1lbnQuYmluZCh0aGlzKX0gdHlwZT0nYnV0dG9uJyBjbGFzc05hbWUgPSAnYmVnaW5fY29tbWVudCcgaWQgPSB7Y29tbWVudF9pZH0+Q29tbWVudDwvYnV0dG9uPiBcclxuXHRcdFx0ICAgICAgXHRcdDwvZGl2PlxyXG5cdFx0XHQgICAgICBcdFx0PGRpdiBzdHlsZT17e2JvcmRlclN0eWxlOidzb2xpZCcsIGJvcmRlclRvcFN0eWxlOiAnbm9uZScsIHdpZHRoOic3NSUnfX0gY2xhc3NOYW1lID0nY29tbWVudF9ib2R5JyBpZCA9IHtjb21tZW50X2lkfT4ge2NvbW1lbnRfdGV4dH0gPC9kaXY+IFxyXG5cdFx0XHQgICAgICBcdDwvZGl2PlxyXG5cdFx0ICAgIFx0PC9kaXY+XHJcblx0ICAgIFx0XHR7dGhpcy5jaGlsZF9jb21tZW50cy5tYXAoKGNoaWxkKSA9PiB7cmV0dXJuIGNoaWxkfSl9XHJcblx0ICAgIFx0XHR7dGhpcy5yZXBsaWVzX2J1dHRvbn1cclxuXHQgICAgXHRcdHt0aGlzLm5ld19jb21tZW50fVxyXG5cdCAgICBcdFx0e3RoaXMudGVzdF90ZXh0fVxyXG5cdCAgICBcdDwvZGl2PlxyXG5cdFx0KTtcclxuXHR9XHJcbn1cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ29tbWVudFNlY3Rpb24gZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQgXHJcbntcclxuXHRjb25zdHJ1Y3Rvcihwcm9wcylcclxuXHR7XHJcblx0XHRzdXBlcigwKTtcclxuXHRcdHRoaXMuY29tbWVudHMgPSBbXTtcclxuXHRcdHRoaXMub2Zmc2V0ID0gMDtcclxuXHJcblx0XHR0aGlzLmxvYWRpbmdfY29tbWVudHNfc2VtYXBob3IgPSBmYWxzZTtcclxuXHJcblx0XHR0aGlzLm5ld19jb21tZW50ID0gdW5kZWZpbmVkO1xyXG5cdFx0dGhpcy5uZXdDb21tZW50VGV4dFJlZiA9IFJlYWN0LmNyZWF0ZVJlZigpO1xyXG5cdH1cclxuXHJcblx0Z2V0Q29tbWVudHMoY29tbWVudHMsIGNvbW1lbnRfdm90ZXMsIGlkKVxyXG5cdHtcclxuXHRcdHZhciBjb21tZW50X3Jlc3VsdCA9IGdlbmVyYXRlQ29tbWVudHMoY29tbWVudHMsIGNvbW1lbnRfdm90ZXMsIGlkLCAwKTtcdFx0XHJcblx0XHR0aGlzLmNvbW1lbnRzID0gY29tbWVudF9yZXN1bHRbMF07XHJcblx0XHR0aGlzLm9mZnNldCArPSBjb21tZW50X3Jlc3VsdFsxXVxyXG5cdH1cclxuXHJcblx0Y29tcG9uZW50RGlkTW91bnQoKSB7XHJcblx0ICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdzY3JvbGwnLCB0aGlzLmhhbmRsZVNjcm9sbC5iaW5kKHRoaXMpKTtcclxuXHQgICAgdGhpcy5nZXRDb21tZW50cyh0aGlzLnByb3BzLmNvbW1lbnRzLCB0aGlzLnByb3BzLmNvbW1lbnRfdm90ZXMsIHRoaXMucHJvcHMucG9zdF9pZClcclxuXHQgICAgdGhpcy5mb3JjZVVwZGF0ZSgpO1xyXG5cdH1cclxuXHJcblx0Y29tcG9uZW50V2lsbFVubW91bnQoKSB7XHJcblx0ICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdzY3JvbGwnLCB0aGlzLmhhbmRsZVNjcm9sbC5iaW5kKHRoaXMpKTtcclxuXHR9XHJcblxyXG5cdGhhbmRsZVNjcm9sbCgpIHtcclxuXHRcdHZhciB0aGF0ID0gdGhpcztcclxuXHQgICAgaWYgKCh3aW5kb3cuaW5uZXJIZWlnaHQgKyB3aW5kb3cuc2Nyb2xsWSkgPj0gZG9jdW1lbnQuYm9keS5vZmZzZXRIZWlnaHQgJiYgIXRoaXMubG9hZGluZ19jb21tZW50c19zZW1hcGhvcikge1xyXG5cdCAgICAgIFx0dGhpcy5sb2FkaW5nX2NvbW1lbnRzX3NlbWFwaG9yID0gdHJ1ZTtcclxuXHRcdCAgICBmZXRjaChcIi9sb2FkX2NvbW1lbnRzXCIsIHtcclxuXHRcdCAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcclxuXHRcdCAgICAgICAgaGVhZGVyczoge1xyXG5cdFx0ICAgICAgICBcdCdBY2NlcHQnOiAnYXBwbGljYXRpb24vanNvbicsXHJcblx0XHQgICAgICAgIFx0J0F1dGhvcml6YXRpb24nOiAnQmFzaWMnLFxyXG5cdFx0ICAgICAgICBcdCdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXHJcblx0XHQgICAgICAgIH0sXHJcblx0XHQgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtpZDogdGhhdC5wcm9wcy5wb3N0X2lkLCBvZmZzZXQ6dGhpcy5vZmZzZXR9KX0pXHJcblx0XHQgICAgLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHsgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTt9KVxyXG5cdFx0ICAgIC50aGVuKGZ1bmN0aW9uIChkYXRhKSB7IFxyXG5cdFx0ICAgIFx0dmFyIGNvbW1lbnRfcmVzdWx0ID0gZ2VuZXJhdGVDb21tZW50cyhkYXRhLmNvbW1lbnRzLCBkYXRhLmNvbW1lbnRfdm90ZXMsIHRoYXQucHJvcHMucG9zdF9pZCwgMClcclxuXHRcdCAgICBcdHZhciBjaGlsZF9jb21tZW50cyA9IGNvbW1lbnRfcmVzdWx0WzBdO1xyXG5cdFx0ICAgIFx0dGhhdC5vZmZzZXQgKz0gY29tbWVudF9yZXN1bHRbMV1cclxuXHRcdCAgICBcdGZvciAodmFyIGNvbW1lbnQgb2YgY2hpbGRfY29tbWVudHMpXHJcblx0XHQgICAgXHR7XHJcblx0XHQgICAgXHRcdHRoYXQuY29tbWVudHMucHVzaChjb21tZW50KVxyXG5cdFx0ICAgIFx0fVxyXG5cdFx0ICAgIFx0dGhhdC5mb3JjZVVwZGF0ZSgpXHJcblx0XHQgICAgXHR0aGF0LmxvYWRpbmdfY29tbWVudHNfc2VtYXBob3IgPSBmYWxzZTtcclxuXHRcdCBcdH0pXHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHRvcGVuTmV3Q29tbWVudCgpXHJcblx0e1xyXG5cdFx0aWYgKCF1dGlscy5jaGVja0xvZ2dlZEluKCkpXHJcblx0XHR7XHJcblx0XHRcdGFsZXJ0KFwiTVVTVCBCRSBMT0dHRUQgSU5cIilcclxuXHRcdFx0cmV0dXJuO1xyXG5cdFx0fVxyXG5cdFx0dGhpcy5uZXdfY29tbWVudCA9IDxkaXY+XHJcblx0XHRcdFx0PHRleHRhcmVhIHJlZiA9IHt0aGlzLm5ld0NvbW1lbnRUZXh0UmVmfSBjbGFzcyA9ICdjb21tZW50X3RleHQnIGlkID0ge3RoaXMucHJvcHMuY29tbWVudF9pZH0gbmFtZT0nY29udGVudCcgcm93cz0nMTAnIGNvbHM9JzkwJyBzdHlsZT17e3dpZHRoOic4MCUnLGhlaWdodDonNTBweCcsekluZGV4OicxMDAnfX0+PC90ZXh0YXJlYT5cclxuXHRcdFx0XHQ8YnV0dG9uIG9uQ2xpY2sgPSB7dGhpcy5zdWJtaXROZXdDb21tZW50LmJpbmQodGhpcyl9IHN0eWxlPXt7aGVpZ2h0OiczMHB4Jyxib3R0b206JzMwcHgnLHBvc2l0aW9uOidyZWxhdGl2ZSd9fSB0eXBlPSdidXR0b24nIGNsYXNzPSdzdWJtaXRfbmV3X2NvbW1lbnQnIGlkID0ge3RoaXMucHJvcHMuY29tbWVudF9pZH0+c3VibWl0PC9idXR0b24+XHJcblx0XHRcdFx0PGJ1dHRvbiBvbkNsaWNrID0ge3RoaXMuY2xvc2VOZXdDb21tZW50LmJpbmQodGhpcyl9IHN0eWxlPXt7Ym90dG9tOicwcHgnLHBvc2l0aW9uOidyZWxhdGl2ZScsaGVpZ2h0OiczMHB4J319IHR5cGU9J2J1dHRvbicgY2xhc3M9J2Nsb3NlX25ld19jb21tZW50JyBpZCA9IHt0aGlzLnByb3BzLmNvbW1lbnRfaWR9Png8L2J1dHRvbj5cclxuXHRcdFx0PC9kaXY+XHJcblx0XHR0aGlzLmZvcmNlVXBkYXRlKCk7XHJcblx0fVxyXG5cclxuXHRjbG9zZU5ld0NvbW1lbnQoKVxyXG5cdHtcclxuXHRcdHRoaXMubmV3X2NvbW1lbnQgPSB1bmRlZmluZWRcclxuXHRcdHRoaXMuZm9yY2VVcGRhdGUoKTtcdFx0XHJcblx0fVxyXG5cclxuXHRzdWJtaXROZXdDb21tZW50KClcclxuXHR7XHJcblx0ICAgIGZldGNoKFwiL2NvbW1lbnRcIiwge1xyXG5cdCAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcclxuXHQgICAgICAgIGhlYWRlcnM6IHtcclxuXHQgICAgICAgIFx0QWNjZXB0OiAnYXBwbGljYXRpb24vanNvbicsXHJcblx0ICAgICAgICBcdCdBdXRob3JpemF0aW9uJzogJ0Jhc2ljJyxcclxuXHQgICAgICAgIFx0J0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuXHQgICAgICAgIH0sXHJcblxyXG5cdCAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe2lkOiB0aGlzLnByb3BzLnBvc3RfaWQsIFxyXG5cdCAgICAgICAgXHRcdFx0XHRcdCAgdGV4dDogdGhpcy5uZXdDb21tZW50VGV4dFJlZi5jdXJyZW50LnZhbHVlLCBcclxuXHQgICAgICAgIFx0XHRcdFx0XHQgIGNvbW1lbnRfbGV2ZWw6IDAsIFxyXG5cdCAgICAgICAgXHRcdFx0XHRcdCAgcGFyZW50X2NvbW1lbnRfaWQ6IC0xLH0pfSlcclxuXHQgICAgLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHsgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTt9KVxyXG5cdCAgICAudGhlbihmdW5jdGlvbiAoZGF0YSkgeyBcclxuXHQgICAgXHRsb2NhdGlvbi5yZWxvYWQodHJ1ZSk7XHJcblx0ICAgIH0pXHJcblx0ICAgIHRoaXMuY2xvc2VOZXdDb21tZW50KCk7XHJcblx0fVxyXG5cclxuXHRyZW5kZXIoKVxyXG5cdHtcclxuXHRcdHJldHVybiAoXHJcblx0XHRcdDxkaXY+XHJcblx0XHRcdFx0PGJ1dHRvbiBvbkNsaWNrID0ge3RoaXMub3Blbk5ld0NvbW1lbnQuYmluZCh0aGlzKX0gdHlwZT0nYnV0dG9uJyBjbGFzc05hbWUgPSAnYmVnaW5fY29tbWVudCc+Q29tbWVudDwvYnV0dG9uPiBcclxuXHRcdFx0XHR7dGhpcy5uZXdfY29tbWVudH1cclxuXHRcdFx0XHR7dGhpcy5jb21tZW50cy5tYXAoKGNvbW1lbnQpID0+IHtyZXR1cm4gY29tbWVudH0pfVxyXG5cdFx0XHQ8L2Rpdj5cclxuXHRcdCk7XHJcblx0fVxyXG59IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IFN0YW5kYXJkSGVhZGVyIGZyb20gJy4vc3RhbmRhcmRfaGVhZGVyLmpzJ1xyXG5pbXBvcnQgQ29tbWVudFNlY3Rpb24gZnJvbSAnLi9jb21tZW50cy5qcydcclxuaW1wb3J0IHV0aWxzIGZyb20gJy4vdXRpbHMuanMnXHJcblxyXG5jbGFzcyBVc2VyUG9zdENvbnRlbnQgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQgXHJcbntcclxuXHRjb25zdHJ1Y3Rvcihwcm9wcylcclxuXHR7XHJcblx0XHRzdXBlcihwcm9wcyk7XHJcblx0XHR0aGlzLmxpa2VzX3Njb3JlID0gdGhpcy5wcm9wcy5kYXRhLmxpa2VzIC0gcHJvcHMuZGF0YS5kaXNsaWtlcztcclxuXHRcdHRoaXMubGlrZVJlZiA9IFJlYWN0LmNyZWF0ZVJlZigpO1xyXG5cdFx0dGhpcy5kaXNsaWtlUmVmID0gUmVhY3QuY3JlYXRlUmVmKCk7XHJcblx0XHR0aGlzLmxpa2Vfc3RhdGUgPSAtMVxyXG5cdH1cclxuXHJcblx0cmVuZGVyaWZyYW1lKGlmcmFtZSkge1xyXG5cdFx0cmV0dXJuIHtcclxuXHRcdFx0X19odG1sOiBpZnJhbWVcclxuXHRcdH07XHJcblx0fVxyXG5cdGxpa2VDbGlja2VkKClcclxuXHR7XHJcblx0XHRpZiAoIXV0aWxzLmNoZWNrTG9nZ2VkSW4oKSlcclxuXHRcdHtcclxuXHRcdFx0YWxlcnQoXCJNVVNUIEJFIExPR0dFRCBJTlwiKVxyXG5cdFx0XHRyZXR1cm47XHJcblx0XHR9XHJcblx0XHR2YXIgdGhhdCA9IHRoaXM7XHJcblxyXG5cdCAgICBmZXRjaChcIi9saWtlXCIsIHtcclxuXHQgICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcblx0ICAgICAgICBoZWFkZXJzOiB7XHJcblx0ICAgICAgICBcdEFjY2VwdDogJ2FwcGxpY2F0aW9uL2pzb24nLFxyXG5cdCAgICAgICAgXHQnQXV0aG9yaXphdGlvbic6ICdCYXNpYycsXHJcblx0ICAgICAgICBcdCdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXHJcblx0ICAgICAgICB9LFxyXG5cdCAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe3VzZXI6IHRoYXQucHJvcHMuZGF0YS51c2VybmFtZSwgaWQ6IHRoaXMucHJvcHMuZGF0YS5pZCx9KX0pXHJcblx0ICAgIC50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7IHJldHVybiByZXNwb25zZS5qc29uKCk7fSlcclxuXHQgICAgLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsgICAgXHRcclxuXHQgICAgXHQvLyB0aGF0Lmxpa2VzX3Njb3JlID0gZGF0YS5saWtlc19zY29yZTtcclxuXHQgICAgXHQvLyB0aGF0Lmxpa2Vfc3RhdGUgPSBkYXRhLmxpa2Vfc3RhdGU7XHJcblx0ICAgIFx0Ly8gaWYgKHRoYXQubGlrZV9zdGF0ZSA9PSAxKVxyXG5cdCAgICBcdC8vIHtcclxuXHQgICAgXHQvLyBcdHRoYXQubGlrZVJlZi5jdXJyZW50LnN0eWxlLmNvbG9yID0gJ2JsdWUnXHJcblx0ICAgIFx0Ly8gXHR0aGF0LmRpc2xpa2VSZWYuY3VycmVudC5zdHlsZS5jb2xvciA9ICdibGFjaydcclxuXHQgICAgXHQvLyB9XHJcblx0ICAgIFx0Ly8gZWxzZSBpZiAodGhhdC5saWtlX3N0YXRlID09IDApXHJcblx0ICAgIFx0Ly8ge1xyXG5cdCAgICBcdC8vIFx0dGhhdC5saWtlUmVmLmN1cnJlbnQuc3R5bGUgPSAnYmxhY2snXHJcblx0ICAgIFx0Ly8gXHR0aGF0LmRpc2xpa2VSZWYuY3VycmVudC5zdHlsZS5jb2xvciA9ICdyZWQnXHJcblx0ICAgIFx0Ly8gfVxyXG5cdCAgICBcdC8vIGVsc2VcclxuXHQgICAgXHQvLyB7XHJcblx0ICAgIFx0Ly8gXHR0aGF0Lmxpa2VSZWYuY3VycmVudC5zdHlsZSA9ICdibGFjaydcclxuXHQgICAgXHQvLyBcdHRoYXQuZGlzbGlrZVJlZi5jdXJyZW50LnN0eWxlLmNvbG9yID0gJ2JsYWNrJ1x0ICAgIFx0XHRcclxuXHQgICAgXHQvLyB9XHJcblx0ICAgIFx0Ly8gdGhhdC5mb3JjZVVwZGF0ZSgpO1xyXG5cdCBcdH0pXHRcclxuXHJcbiAgICBcdGlmICh0aGlzLnByb3BzLmxpa2Vfc3RhdGUgPT0gMSlcclxuICAgIFx0e1xyXG4gICAgICAgXHRcdHRoaXMubGlrZXNfc2NvcmUgLT0gMTtcclxuICAgIFx0XHR0aGlzLmxpa2VSZWYuY3VycmVudC5zdHlsZSA9ICdibGFjaydcclxuICAgIFx0XHR0aGlzLmRpc2xpa2VSZWYuY3VycmVudC5zdHlsZS5jb2xvciA9ICdibGFjaydcclxuICAgIFx0XHR0aGlzLnByb3BzLmxpa2Vfc3RhdGUgPSAtMTtcclxuICAgIFx0fVxyXG4gICAgXHRlbHNlXHJcbiAgICBcdHtcclxuICAgIFx0XHRpZiAodGhpcy5wcm9wcy5saWtlX3N0YXRlID09IC0xKVxyXG4gICAgXHRcdHtcclxuICAgIFx0XHRcdHRoaXMubGlrZXNfc2NvcmUgKz0gMTtcclxuICAgIFx0XHR9XHJcbiAgICBcdFx0ZWxzZSBcclxuICAgIFx0XHR7XHJcbiAgICBcdFx0XHR0aGlzLmxpa2VzX3Njb3JlICs9IDI7XHJcbiAgICBcdFx0fVxyXG4gICAgXHRcdHRoaXMubGlrZVJlZi5jdXJyZW50LnN0eWxlID0gJ2JsdWUnXHJcbiAgICBcdFx0dGhpcy5kaXNsaWtlUmVmLmN1cnJlbnQuc3R5bGUuY29sb3IgPSAnYmxhY2snXHJcbiAgICBcdFx0dGhpcy5wcm9wcy5saWtlX3N0YXRlID0gMTtcclxuICAgIFx0fVxyXG5cclxuICAgIFx0dGhpcy5mb3JjZVVwZGF0ZSgpO1xyXG5cdH1cclxuXHJcblx0ZGlzbGlrZUNsaWNrZWQoKVxyXG5cdHtcclxuXHRcdGlmICghdXRpbHMuY2hlY2tMb2dnZWRJbigpKVxyXG5cdFx0e1xyXG5cdFx0XHRhbGVydChcIk1VU1QgQkUgTE9HR0VEIElOXCIpXHJcblx0XHRcdHJldHVybjtcclxuXHRcdH1cclxuXHRcdHZhciB0aGF0ID0gdGhpcztcclxuXHQgICAgZmV0Y2goXCIvZGlzbGlrZVwiLCB7XHJcblx0ICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxyXG5cdCAgICAgICAgaGVhZGVyczoge1xyXG5cdCAgICAgICAgXHRBY2NlcHQ6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuXHQgICAgICAgIFx0J0F1dGhvcml6YXRpb24nOiAnQmFzaWMnLFxyXG5cdCAgICAgICAgXHQnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxyXG5cdCAgICAgICAgfSxcclxuXHQgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHt1c2VyOiB0aGF0LnByb3BzLmRhdGEudXNlcm5hbWUsIGlkOiB0aGlzLnByb3BzLmRhdGEuaWQsfSl9KVxyXG5cdCAgICAudGhlbihmdW5jdGlvbihyZXNwb25zZSkgeyByZXR1cm4gcmVzcG9uc2UuanNvbigpO30pXHJcblx0ICAgIC50aGVuKGZ1bmN0aW9uIChkYXRhKSB7ICAgIFx0XHJcblx0ICAgIFx0Ly8gdGhhdC5saWtlc19zY29yZSA9IGRhdGEubGlrZXNfc2NvcmU7XHJcblx0ICAgIFx0Ly8gdGhhdC5saWtlX3N0YXRlID0gZGF0YS5saWtlX3N0YXRlO1xyXG5cdCAgICBcdC8vIGlmICh0aGF0Lmxpa2Vfc3RhdGUgPT0gMSlcclxuXHQgICAgXHQvLyB7XHJcblx0ICAgIFx0Ly8gXHR0aGF0Lmxpa2VSZWYuY3VycmVudC5zdHlsZS5jb2xvciA9ICdibHVlJ1xyXG5cdCAgICBcdC8vIFx0dGhhdC5kaXNsaWtlUmVmLmN1cnJlbnQuc3R5bGUuY29sb3IgPSAnYmxhY2snXHJcblx0ICAgIFx0Ly8gfVxyXG5cdCAgICBcdC8vIGVsc2UgaWYgKHRoYXQubGlrZV9zdGF0ZSA9PSAwKVxyXG5cdCAgICBcdC8vIHtcclxuXHQgICAgXHQvLyBcdHRoYXQubGlrZVJlZi5jdXJyZW50LnN0eWxlID0gJ2JsYWNrJ1xyXG5cdCAgICBcdC8vIFx0dGhhdC5kaXNsaWtlUmVmLmN1cnJlbnQuc3R5bGUuY29sb3IgPSAncmVkJ1xyXG5cdCAgICBcdC8vIH1cclxuXHQgICAgXHQvLyBlbHNlXHJcblx0ICAgIFx0Ly8ge1xyXG5cdCAgICBcdC8vIFx0dGhhdC5saWtlUmVmLmN1cnJlbnQuc3R5bGUgPSAnYmxhY2snXHJcblx0ICAgIFx0Ly8gXHR0aGF0LmRpc2xpa2VSZWYuY3VycmVudC5zdHlsZS5jb2xvciA9ICdibGFjaydcdFx0XHJcblx0ICAgIFx0Ly8gfVxyXG5cdCAgICBcdC8vIHRoYXQuZm9yY2VVcGRhdGUoKTtcclxuXHQgXHR9KVx0XHJcbiAgICBcdGlmICh0aGlzLnByb3BzLmxpa2Vfc3RhdGUgPT0gMClcclxuICAgIFx0e1xyXG4gICAgXHRcdHRoaXMubGlrZVJlZi5jdXJyZW50LnN0eWxlID0gJ2JsYWNrJ1xyXG4gICAgXHRcdHRoaXMuZGlzbGlrZVJlZi5jdXJyZW50LnN0eWxlLmNvbG9yID0gJ2JsYWNrJ1x0IFxyXG4gICAgXHRcdHRoaXMucHJvcHMubGlrZV9zdGF0ZSA9IC0xO1xyXG4gICAgXHRcdHRoaXMubGlrZXNfc2NvcmUgKz0gMTtcclxuICAgIFx0fVxyXG4gICAgXHRlbHNlXHJcbiAgICBcdHtcclxuICAgIFx0XHRpZiAodGhpcy5wcm9wcy5saWtlX3N0YXRlID09IC0xKVxyXG4gICAgXHRcdHtcclxuICAgIFx0XHRcdHRoaXMubGlrZXNfc2NvcmUgLT0gMTtcclxuICAgIFx0XHR9XHJcbiAgICBcdFx0ZWxzZSBcclxuICAgIFx0XHR7XHJcbiAgICBcdFx0XHR0aGlzLmxpa2VzX3Njb3JlIC09IDI7XHJcbiAgICBcdFx0fVxyXG4gICAgXHRcdHRoaXMubGlrZVJlZi5jdXJyZW50LnN0eWxlID0gJ2JsYWNrJ1xyXG4gICAgXHRcdHRoaXMuZGlzbGlrZVJlZi5jdXJyZW50LnN0eWxlLmNvbG9yID0gJ3JlZCdcclxuICAgIFx0XHR0aGlzLnByb3BzLmxpa2Vfc3RhdGUgPSAwO1xyXG5cclxuICAgIFx0fVxyXG4gICAgXHR0aGlzLmZvcmNlVXBkYXRlKCk7XHJcblxyXG5cdH1cclxuXHJcblx0cmVuZGVyKClcclxuXHR7XHJcblx0XHR2YXIgbGlrZV9zdHlsZSA9IHtjb2xvcjonYmxhY2snfVxyXG5cdFx0dmFyIGRpc2xpa2Vfc3R5bGUgPSB7Y29sb3I6J2JsYWNrJ31cclxuXHRcdGlmICh0aGlzLnByb3BzLmxpa2Vfc3RhdGUgPT0gMSlcclxuXHRcdHtcclxuXHRcdFx0bGlrZV9zdHlsZS5jb2xvciA9ICdibHVlJ1xyXG5cdFx0XHRkaXNsaWtlX3N0eWxlLmNvbG9yID0gJ2JsYWNrJ1xyXG5cdFx0fVxyXG5cdFx0ZWxzZSBpZiAodGhpcy5wcm9wcy5saWtlX3N0YXRlID09IDApXHJcblx0XHR7XHRcclxuXHRcdFx0bGlrZV9zdHlsZS5jb2xvciA9ICdibGFjaydcclxuXHRcdFx0ZGlzbGlrZV9zdHlsZS5jb2xvciA9ICdyZWQnXHJcblx0XHR9XHJcblxyXG5cdFx0dmFyIGNvbnRlbnRfZGl2ID0gW11cclxuXHRcdHRoaXMucHJvcHMuZGF0YS5jb250ZW50LnNwbGl0KCdcXG4nKS5tYXAoKGl0ZW0sIGkpID0+IHtcclxuXHRcdFx0aWYgKGl0ZW0gPT0gJycpXHJcblx0XHRcdHtcclxuXHRcdFx0XHRjb250ZW50X2Rpdi5wdXNoKDxici8+KVxyXG5cdFx0XHR9XHJcblx0XHRcdGVsc2VcclxuXHRcdFx0e1xyXG5cdFx0XHRcdGNvbnRlbnRfZGl2LnB1c2goPHAga2V5PXtpfT57aXRlbX08L3A+KTtcclxuXHRcdFx0fVxyXG5cdFx0fSlcclxuXHJcblx0XHRyZXR1cm4gKFxyXG5cdFx0XHQ8ZGl2PlxyXG5cdFx0XHRcdDxkaXYgc3R5bGU9e3twb3NpdGlvbjoncmVsYXRpdmUnLCB0b3A6JzEwMHB4JywgcGFkZGluZ0JvdHRvbTonMTAwcHgnLCBoZWlnaHQ6ICdhdXRvJywgbWluSGVpZ2h0OiAnNTUwcHgnfX0+XHJcblx0XHRcdFx0XHQ8ZGl2IHN0eWxlPXt7cG9zaXRpb246J3JlbGF0aXZlJyxmbG9hdDonbGVmdCcsIHRvcDonMHB4JywgcGFkZGluZ1JpZ2h0OicyMHB4J319IGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MPXt0aGlzLnJlbmRlcmlmcmFtZSh0aGlzLnByb3BzLmRhdGEuZW1iZWRkZWRfY29udGVudCl9PlxyXG5cdFx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0XHQ8ZGl2IHN0eWxlPXt7bGVmdDonMTAlJywgdG9wOicyMCUnfX0+XHJcblx0XHRcdFx0XHQgIFx0e2NvbnRlbnRfZGl2fVxyXG5cdFx0XHRcdFx0PC9kaXY+XHJcblxyXG5cdFx0XHRcdDwvZGl2PlxyXG5cclxuXHRcdFx0XHQ8YnIvPlxyXG5cdFx0XHRcdDxici8+XHJcblx0XHRcdFx0PGJyLz5cclxuXHRcdFx0XHQ8YnIvPlxyXG5cdFx0XHRcdDxkaXY+XHJcblx0XHRcdFx0XHQ8ZGl2ICBjbGFzc05hbWU9XCJsaWtlc1wiIGlkID0ge3RoaXMucHJvcHMuZGF0YS5pZH0gPkxpa2VzOiB7dGhpcy5saWtlc19zY29yZX0gPC9kaXY+XHJcblx0XHRcdFx0XHQ8YnV0dG9uIHJlZiA9IHt0aGlzLmxpa2VSZWZ9IG9uQ2xpY2sgPSB7dGhpcy5saWtlQ2xpY2tlZC5iaW5kKHRoaXMpfSB0eXBlPVwiYnV0dG9uXCIgY2xhc3NOYW1lID0gXCJsaWtlXCIgaWQgPSB7dGhpcy5wcm9wcy5kYXRhLmlkfSBzdHlsZSA9IHtsaWtlX3N0eWxlfT5MaWtlPC9idXR0b24+XHJcblx0XHRcdFx0XHQ8YnV0dG9uIHJlZiA9IHt0aGlzLmRpc2xpa2VSZWZ9IG9uQ2xpY2sgPSB7dGhpcy5kaXNsaWtlQ2xpY2tlZC5iaW5kKHRoaXMpfSB0eXBlPVwiYnV0dG9uXCIgY2xhc3NOYW1lID0gXCJ1bmxpa2VcIiBpZCA9IHt0aGlzLnByb3BzLmRhdGEuaWR9IHN0eWxlID0ge2Rpc2xpa2Vfc3R5bGV9PkhhdGU8L2J1dHRvbj5cclxuXHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0XHQ8bWV0YSBjbGFzc05hbWUgPSBcImNvbW1lbnRfb2Zmc2V0XCIgY29udGVudCA9IFwiMFwiIC8+XHJcblx0XHRcdDwvZGl2PlxyXG5cdFx0KTtcclxuXHR9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFVzZXJQb3N0IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50XHJcbntcclxuXHRjb25zdHJ1Y3Rvcihwcm9wcylcclxuXHR7XHJcblx0XHRjb25zb2xlLmxvZyhwcm9wcylcclxuXHRcdHN1cGVyKHByb3BzKTtcclxuXHR9XHJcblxyXG5cdHJlbmRlcigpXHJcblx0e1xyXG5cdFx0cmV0dXJuIChcclxuXHRcdFx0PGRpdj5cclxuXHRcdFx0XHQ8VXNlclBvc3RDb250ZW50IGRhdGEgPSB7dGhpcy5wcm9wcy5kYXRhLnVzZXJfcG9zdH0gbGlrZV9zdGF0ZSA9IHt0aGlzLnByb3BzLmRhdGEubGlrZV9zdGF0ZX0vPlxyXG5cdFx0XHRcdDxDb21tZW50U2VjdGlvbiBjb21tZW50cyA9IHt0aGlzLnByb3BzLmRhdGEuY29tbWVudHN9IGNvbW1lbnRfdm90ZXMgPSB7dGhpcy5wcm9wcy5kYXRhLmNvbW1lbnRfdm90ZXN9IHBvc3RfaWQgPSB7dGhpcy5wcm9wcy5kYXRhLnVzZXJfcG9zdC5pZH0vPlxyXG5cdFx0XHQ8L2Rpdj5cclxuXHRcdCk7XHJcblx0fVxyXG59IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IFN0YW5kYXJkSGVhZGVyIGZyb20gJy4vc3RhbmRhcmRfaGVhZGVyLmpzJ1xyXG5pbXBvcnQgQ29tbWVudFNlY3Rpb24gZnJvbSAnLi9jb21tZW50cy5qcydcclxuaW1wb3J0IHV0aWxzIGZyb20gJy4vdXRpbHMuanMnXHJcblxyXG5jbGFzcyBHbG9iYWxQb3N0Q29udGVudCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCBcclxue1xyXG5cdGNvbnN0cnVjdG9yKHByb3BzKVxyXG5cdHtcclxuXHRcdHN1cGVyKHByb3BzKTtcclxuXHRcdHRoaXMuYWxidW1fc29uZ3MgPSBbXVxyXG5cdFx0dGhpcy5saWtlc19zY29yZSA9IHRoaXMucHJvcHMuZGF0YS5saWtlcyAtIHByb3BzLmRhdGEuZGlzbGlrZXM7XHJcblx0XHR0aGlzLmxpa2VSZWYgPSBSZWFjdC5jcmVhdGVSZWYoKTtcclxuXHRcdHRoaXMuZGlzbGlrZVJlZiA9IFJlYWN0LmNyZWF0ZVJlZigpO1xyXG5cdFx0Ly90aGlzLmxpa2Vfc3RhdGUgPSAtMVxyXG5cdH1cclxuXHJcblx0cmVuZGVyaWZyYW1lKGlmcmFtZSkge1xyXG5cdFx0cmV0dXJuIHtcclxuXHRcdFx0X19odG1sOiBpZnJhbWVcclxuXHRcdH07XHJcblx0fVxyXG5cclxuXHRnZW5lcmF0ZUFsYnVtU29uZ3MoKVxyXG5cdHtcclxuXHRcdC8vZm9yIChrZXkgb2YgT2JqZWN0LmtleXMoSlNPTi5wYXJzZShkYXRhWzBdLmRhdGEpKSlcclxuXHRcdGZvciAodmFyIHNvbmcgb2YgT2JqZWN0LmtleXMoSlNPTi5wYXJzZSh0aGlzLnByb3BzLmRhdGEuZGF0YSkpKVxyXG5cdFx0e1xyXG5cdFx0XHR0aGlzLmFsYnVtX3NvbmdzLnB1c2goPGRpdiBzdHlsZSA9IHt7cGFkZGluZzonMHB4J319PiB7c29uZyArIFwiLlwifSA8YSBocmVmID0ge1wiL3Bvc3QvXCIgKyB0aGlzLnByb3BzLmRhdGEuYXJ0aXN0ICsgXCIvXCIgKyBKU09OLnBhcnNlKHRoaXMucHJvcHMuZGF0YS5kYXRhKVtzb25nXX0+IHtKU09OLnBhcnNlKHRoaXMucHJvcHMuZGF0YS5kYXRhKVtzb25nXX0gPC9hPjwvZGl2PilcclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdGxpa2VDbGlja2VkKClcclxuXHR7XHJcblx0XHRpZiAoIXV0aWxzLmNoZWNrTG9nZ2VkSW4oKSlcclxuXHRcdHtcclxuXHRcdFx0YWxlcnQoXCJNVVNUIEJFIExPR0dFRCBJTlwiKVxyXG5cdFx0XHRyZXR1cm47XHJcblx0XHR9XHJcblx0XHR2YXIgdGhhdCA9IHRoaXM7XHJcblx0ICAgIGZldGNoKFwiL2dsb2JhbF9saWtlXCIsIHtcclxuXHQgICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcblx0ICAgICAgICBoZWFkZXJzOiB7XHJcblx0ICAgICAgICBcdEFjY2VwdDogJ2FwcGxpY2F0aW9uL2pzb24nLFxyXG5cdCAgICAgICAgXHQnQXV0aG9yaXphdGlvbic6ICdCYXNpYycsXHJcblx0ICAgICAgICBcdCdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXHJcblx0ICAgICAgICB9LFxyXG5cdCAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe2lkOiB0aGlzLnByb3BzLmRhdGEucG9zdF9pZCx9KX0pXHJcblx0ICAgIC50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7IHJldHVybiByZXNwb25zZS5qc29uKCk7fSlcclxuXHQgICAgLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsgICAgXHRcclxuXHQgICAgXHR0aGF0Lmxpa2VzX3Njb3JlID0gZGF0YS5saWtlc19zY29yZTtcclxuXHQgICAgXHR0aGF0Lmxpa2Vfc3RhdGUgPSBkYXRhLmxpa2Vfc3RhdGU7XHJcblx0ICAgIFx0aWYgKHRoYXQubGlrZV9zdGF0ZSA9PSAxKVxyXG5cdCAgICBcdHtcclxuXHQgICAgXHRcdHRoYXQubGlrZVJlZi5jdXJyZW50LnN0eWxlLmNvbG9yID0gJ2JsdWUnXHJcblx0ICAgIFx0XHR0aGF0LmRpc2xpa2VSZWYuY3VycmVudC5zdHlsZS5jb2xvciA9ICdibGFjaydcclxuXHQgICAgXHR9XHJcblx0ICAgIFx0ZWxzZSBpZiAodGhhdC5saWtlX3N0YXRlID09IDApXHJcblx0ICAgIFx0e1xyXG5cdCAgICBcdFx0dGhhdC5saWtlUmVmLmN1cnJlbnQuc3R5bGUgPSAnYmxhY2snXHJcblx0ICAgIFx0XHR0aGF0LmRpc2xpa2VSZWYuY3VycmVudC5zdHlsZS5jb2xvciA9ICdyZWQnXHJcblx0ICAgIFx0fVxyXG5cdCAgICBcdGVsc2VcclxuXHQgICAgXHR7XHJcblx0ICAgIFx0XHR0aGF0Lmxpa2VSZWYuY3VycmVudC5zdHlsZSA9ICdibGFjaydcclxuXHQgICAgXHRcdHRoYXQuZGlzbGlrZVJlZi5jdXJyZW50LnN0eWxlLmNvbG9yID0gJ2JsYWNrJ1x0ICAgIFx0XHRcclxuXHQgICAgXHR9XHJcblx0ICAgIFx0dGhhdC5mb3JjZVVwZGF0ZSgpO1xyXG5cdCBcdH0pXHRcclxuXHR9XHJcblxyXG5cdGRpc2xpa2VDbGlja2VkKClcclxuXHR7XHJcblx0XHRpZiAoIXV0aWxzLmNoZWNrTG9nZ2VkSW4oKSlcclxuXHRcdHtcclxuXHRcdFx0YWxlcnQoXCJNVVNUIEJFIExPR0dFRCBJTlwiKVxyXG5cdFx0XHRyZXR1cm47XHJcblx0XHR9XHJcblx0XHR2YXIgdGhhdCA9IHRoaXM7XHJcblx0ICAgIGZldGNoKFwiL2dsb2JhbF9kaXNsaWtlXCIsIHtcclxuXHQgICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcblx0ICAgICAgICBoZWFkZXJzOiB7XHJcblx0ICAgICAgICBcdEFjY2VwdDogJ2FwcGxpY2F0aW9uL2pzb24nLFxyXG5cdCAgICAgICAgXHQnQXV0aG9yaXphdGlvbic6ICdCYXNpYycsXHJcblx0ICAgICAgICBcdCdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXHJcblx0ICAgICAgICB9LFxyXG5cdCAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe2lkOiB0aGlzLnByb3BzLmRhdGEucG9zdF9pZCx9KX0pXHJcblx0ICAgIC50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7IHJldHVybiByZXNwb25zZS5qc29uKCk7fSlcclxuXHQgICAgLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsgICAgXHRcclxuXHQgICAgXHR0aGF0Lmxpa2VzX3Njb3JlID0gZGF0YS5saWtlc19zY29yZTtcclxuXHQgICAgXHR0aGF0Lmxpa2Vfc3RhdGUgPSBkYXRhLmxpa2Vfc3RhdGU7XHJcblx0ICAgIFx0aWYgKHRoYXQubGlrZV9zdGF0ZSA9PSAxKVxyXG5cdCAgICBcdHtcclxuXHQgICAgXHRcdHRoYXQubGlrZVJlZi5jdXJyZW50LnN0eWxlLmNvbG9yID0gJ2JsdWUnXHJcblx0ICAgIFx0XHR0aGF0LmRpc2xpa2VSZWYuY3VycmVudC5zdHlsZS5jb2xvciA9ICdibGFjaydcclxuXHQgICAgXHR9XHJcblx0ICAgIFx0ZWxzZSBpZiAodGhhdC5saWtlX3N0YXRlID09IDApXHJcblx0ICAgIFx0e1xyXG5cdCAgICBcdFx0dGhhdC5saWtlUmVmLmN1cnJlbnQuc3R5bGUgPSAnYmxhY2snXHJcblx0ICAgIFx0XHR0aGF0LmRpc2xpa2VSZWYuY3VycmVudC5zdHlsZS5jb2xvciA9ICdyZWQnXHJcblx0ICAgIFx0fVxyXG5cdCAgICBcdGVsc2VcclxuXHQgICAgXHR7XHJcblx0ICAgIFx0XHR0aGF0Lmxpa2VSZWYuY3VycmVudC5zdHlsZSA9ICdibGFjaydcclxuXHQgICAgXHRcdHRoYXQuZGlzbGlrZVJlZi5jdXJyZW50LnN0eWxlLmNvbG9yID0gJ2JsYWNrJ1x0XHRcclxuXHQgICAgXHR9XHJcblx0ICAgIFx0dGhhdC5mb3JjZVVwZGF0ZSgpO1xyXG5cdCBcdH0pXHRcclxuXHR9XHJcblxyXG5cclxuXHRyZW5kZXIoKVxyXG5cdHtcclxuXHRcdHZhciBzb25nID0gPGRpdj4ge3RoaXMucHJvcHMuZGF0YS5zb25nICsgXCIgYnkgXCJ9IDxhIGhyZWYgPSB7XCIvYXJ0aXN0L1wiICsgdGhpcy5wcm9wcy5kYXRhLmFydGlzdH0+IHt0aGlzLnByb3BzLmRhdGEuYXJ0aXN0fSA8L2E+IDwvZGl2PlxyXG5cdFx0aWYgKHRoaXMucHJvcHMuZGF0YS50eXBlID09IDEpXHJcblx0XHR7XHJcblx0XHRcdHNvbmcgPSBcIlwiXHJcblx0XHRcdHRoaXMuZ2VuZXJhdGVBbGJ1bVNvbmdzKCk7XHJcblx0XHR9XHJcblxyXG5cclxuXHJcblx0XHR2YXIgbGlrZV9zdHlsZSA9IHtjb2xvcjonYmxhY2snfVxyXG5cdFx0dmFyIGRpc2xpa2Vfc3R5bGUgPSB7Y29sb3I6J2JsYWNrJ31cclxuXHRcdGlmICh0aGlzLnByb3BzLmxpa2Vfc3RhdGUgPT0gMSlcclxuXHRcdHtcclxuXHRcdFx0bGlrZV9zdHlsZS5jb2xvciA9ICdibHVlJ1xyXG5cdFx0XHRkaXNsaWtlX3N0eWxlLmNvbG9yID0gJ2JsYWNrJ1xyXG5cdFx0fVxyXG5cdFx0ZWxzZSBpZiAodGhpcy5wcm9wcy5saWtlX3N0YXRlID09IDApXHJcblx0XHR7XHJcblx0XHRcdGxpa2Vfc3R5bGUuY29sb3IgPSAnYmxhY2snXHJcblx0XHRcdGRpc2xpa2Vfc3R5bGUuY29sb3IgPSAncmVkJ1xyXG5cdFx0fVxyXG5cdFx0cmV0dXJuIChcclxuXHRcdFx0PGRpdj5cclxuXHRcdFx0XHQ8ZGl2IHN0eWxlPXt7cG9zaXRpb246J3JlbGF0aXZlJywgdG9wOicxMDBweCcsIHBhZGRpbmdCb3R0b206JzEwMHB4JywgaGVpZ2h0OiAnYXV0bycsIG1pbkhlaWdodDogJzU1MHB4J319PlxyXG5cdFx0XHRcdFx0PGRpdiBzdHlsZT17e3Bvc2l0aW9uOidyZWxhdGl2ZScsZmxvYXQ6J2xlZnQnLCB0b3A6JzBweCcsIHBhZGRpbmdSaWdodDonMjBweCd9fSBkYW5nZXJvdXNseVNldElubmVySFRNTD17dGhpcy5yZW5kZXJpZnJhbWUodGhpcy5wcm9wcy5kYXRhLmVtYmVkZGVkX2NvbnRlbnQpfT5cclxuXHRcdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcdFx0PGRpdiBzdHlsZT17e2xlZnQ6JzEwJScsIHRvcDonMjAlJ319PlxyXG5cclxuXHRcdFx0XHRcdFx0PGRpdj5cclxuXHRcdFx0XHRcdFx0XHR7c29uZ31cclxuXHRcdFx0XHRcdFx0XHQ8ZGl2PiBBbGJ1bToge3RoaXMucHJvcHMuZGF0YS5hbGJ1bX0gPC9kaXY+XHJcblx0XHRcdFx0XHRcdFx0PGRpdj4gUmVsZWFzZWQgb246IHt0aGlzLnByb3BzLmRhdGEucmVsZWFzZV9kYXRlfSA8L2Rpdj5cclxuXHRcdFx0XHRcdFx0XHR7dGhpcy5hbGJ1bV9zb25nc31cclxuXHRcdFx0XHRcdFx0PC9kaXY+XHJcblxyXG5cdFx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0PGJyLz5cclxuXHRcdFx0XHQ8YnIvPlxyXG5cdFx0XHRcdDxici8+XHJcblx0XHRcdFx0PGJyLz5cclxuXHRcdFx0XHQ8ZGl2PlxyXG5cdFx0XHRcdFx0PGRpdiAgY2xhc3NOYW1lPVwibGlrZXNcIiBpZCA9IHt0aGlzLnByb3BzLmRhdGEuaWR9ID5MaWtlczoge3RoaXMubGlrZXNfc2NvcmV9IDwvZGl2PlxyXG5cdFx0XHRcdFx0PGJ1dHRvbiByZWYgPSB7dGhpcy5saWtlUmVmfSBvbkNsaWNrID0ge3RoaXMubGlrZUNsaWNrZWQuYmluZCh0aGlzKX0gdHlwZT1cImJ1dHRvblwiIGNsYXNzTmFtZSA9IFwibGlrZVwiIGlkID0ge3RoaXMucHJvcHMuZGF0YS5pZH0gc3R5bGUgPSB7bGlrZV9zdHlsZX0+TGlrZTwvYnV0dG9uPlxyXG5cdFx0XHRcdFx0PGJ1dHRvbiByZWYgPSB7dGhpcy5kaXNsaWtlUmVmfSBvbkNsaWNrID0ge3RoaXMuZGlzbGlrZUNsaWNrZWQuYmluZCh0aGlzKX0gdHlwZT1cImJ1dHRvblwiIGNsYXNzTmFtZSA9IFwidW5saWtlXCIgaWQgPSB7dGhpcy5wcm9wcy5kYXRhLmlkfSBzdHlsZSA9IHtkaXNsaWtlX3N0eWxlfT5IYXRlPC9idXR0b24+XHJcblx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0PG1ldGEgY2xhc3NOYW1lID0gXCJjb21tZW50X29mZnNldFwiIGNvbnRlbnQgPSBcIjBcIiAvPlxyXG5cdFx0XHQ8L2Rpdj5cclxuXHRcdCk7XHJcblx0fVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBHbG9iYWxQb3N0IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50XHJcbntcclxuXHRjb25zdHJ1Y3Rvcihwcm9wcylcclxuXHR7XHJcblx0XHRzdXBlcihwcm9wcyk7XHJcblx0fVxyXG5cclxuXHRyZW5kZXIoKVxyXG5cdHtcclxuXHRcdHJldHVybiAoXHJcblx0XHRcdDxkaXY+XHJcblx0XHRcdFx0PEdsb2JhbFBvc3RDb250ZW50IGRhdGEgPSB7dGhpcy5wcm9wcy5kYXRhLmdsb2JhbF9wb3N0fSBsaWtlX3N0YXRlID0ge3RoaXMucHJvcHMuZGF0YS5saWtlX3N0YXRlfS8+XHJcblx0XHRcdFx0PENvbW1lbnRTZWN0aW9uIGNvbW1lbnRzID0ge3RoaXMucHJvcHMuZGF0YS5jb21tZW50c30gY29tbWVudF92b3RlcyA9IHt0aGlzLnByb3BzLmRhdGEuY29tbWVudF92b3Rlc30gcG9zdF9pZCA9IHt0aGlzLnByb3BzLmRhdGEuZ2xvYmFsX3Bvc3QucG9zdF9pZH0gLz5cclxuXHRcdFx0PC9kaXY+XHJcblx0XHQpO1xyXG5cdH1cclxufSIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCBTdGFuZGFyZEhlYWRlciBmcm9tICcuL3N0YW5kYXJkX2hlYWRlci5qcydcclxuXHJcbmNsYXNzIEZvbGxvd2luZ0luZm8gZXh0ZW5kcyBSZWFjdC5Db21wb25lbnRcclxue1xyXG5cdGNvbnN0cnVjdG9yKHByb3BzKVxyXG5cdHtcclxuXHRcdHN1cGVyKHByb3BzKVxyXG5cdH1cclxuXHJcblx0cmVuZGVyKClcclxuXHR7XHJcblx0XHRyZXR1cm4gKFxyXG5cdFx0XHQ8ZGl2PlxyXG5cdFx0XHRcdHggXHJcblx0XHRcdFx0PGJ1dHRvbiBjbGFzc05hbWUgPSAnZm9sbG93X2J1dHRvbicgaWQgPSBcImZvbGxvd19idXR0b25cIiB0eXBlPVwiYnV0dG9uXCI+Rm9sbG93PC9idXR0b24+XHJcblx0XHRcdFx0PGRpdiBjbGFzc05hbWUgPVwiZm9sbG93X2ljb25cIj5cclxuXHRcdFx0XHRcdE5vdCBGb2xsb3dpbmdcclxuXHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0PC9kaXY+XHRcdFx0XHJcblx0XHQpO1xyXG5cdH1cclxufVxyXG5cclxuY2xhc3MgQWxidW1EaXNwbGF5IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50XHJcbntcclxuXHRjb25zdHJ1Y3Rvcihwcm9wcylcclxuXHR7XHJcblx0XHRzdXBlcihwcm9wcylcclxuXHRcdHRoaXMuYWxidW1zID0gW107XHJcblx0fVxyXG5cclxuXHRyZW5kZXJpZnJhbWUoaWZyYW1lKSB7XHJcblx0XHRyZXR1cm4ge1xyXG5cdFx0XHRfX2h0bWw6IGlmcmFtZVxyXG5cdFx0fTtcclxuXHR9XHJcblxyXG5cdGdlbmVyYXRlQWxidW1zKClcclxuXHR7XHJcblx0XHRmb3IgKHZhciBhbGJ1bSBvZiB0aGlzLnByb3BzLmRhdGEpIFxyXG5cdFx0e1xyXG5cdFx0XHR0aGlzLmFsYnVtcy5wdXNoKFxyXG5cdFx0XHQ8ZGl2IGtleSA9IHthbGJ1bS5wb3N0X2lkfSBzdHlsZSA9IHt7ZGlzcGxheTogJ2ZsZXgnLCBmbGV4RGlyZWN0aW9uOidjb2x1bW4nLCBwYWRkaW5nOicxMHB4J319PlxyXG5cdFx0XHRcdHthbGJ1bS5hbGJ1bX1cclxuXHRcdFx0XHQ8ZGl2IGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MPXt0aGlzLnJlbmRlcmlmcmFtZShhbGJ1bS5lbWJlZGRlZF9jb250ZW50KX0+PC9kaXY+XHJcblx0XHRcdDwvZGl2PilcclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdHJlbmRlcigpXHJcblx0e1xyXG5cdFx0dGhpcy5nZW5lcmF0ZUFsYnVtcygpO1xyXG5cdFx0cmV0dXJuIChcclxuXHRcdFx0XHQ8ZGl2PlxyXG5cdFx0XHRcdFx0PGgxPiA8YSBocmVmPSB7XCIvYXJ0aXN0L1wiICsgdGhpcy5wcm9wcy5hcnRpc3QgKyBcIi9hbGJ1bXNcIn0+IEFsYnVtcyA8L2E+IDwvaDE+IFxyXG5cdFx0XHRcdFx0PGRpdiBjbGFzc05hbWUgPSBcImFsYnVtX2Rpc3BsYXlcIiBzdHlsZSA9IHt7ZGlzcGxheTogJ2ZsZXgnLGZsZXhEaXJlY3Rpb246J3Jvdyd9fSA+XHJcblx0XHRcdFx0XHRcdHt0aGlzLmFsYnVtc31cclxuXHRcdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcclxuXHRcdCk7XHJcblx0fVxyXG59XHJcblxyXG5jbGFzcyBTb25nRGlzcGxheSBleHRlbmRzIFJlYWN0LkNvbXBvbmVudFxyXG57XHJcblx0Y29uc3RydWN0b3IocHJvcHMpXHJcblx0e1xyXG5cdFx0c3VwZXIocHJvcHMpXHJcblx0XHR0aGlzLnNvbmdzID0gW107XHJcblx0fVxyXG5cclxuXHRyZW5kZXJpZnJhbWUoaWZyYW1lKSB7XHJcblx0XHRyZXR1cm4ge1xyXG5cdFx0XHRfX2h0bWw6IGlmcmFtZVxyXG5cdFx0fTtcclxuXHR9XHJcblxyXG5cdGdlbmVyYXRlU29uZ3MoKVxyXG5cdHtcclxuXHRcdGZvciAodmFyIHNvbmcgb2YgdGhpcy5wcm9wcy5kYXRhKSBcclxuXHRcdHtcclxuXHRcdFx0dGhpcy5zb25ncy5wdXNoKFxyXG5cdFx0XHQ8ZGl2IGtleSA9IHtzb25nLnBvc3RfaWR9IHN0eWxlID0ge3tkaXNwbGF5OiAnZmxleCcsIGZsZXhEaXJlY3Rpb246J2NvbHVtbicsIHBhZGRpbmc6JzEwcHgnfX0+XHJcblx0XHRcdFx0e3Nvbmcuc29uZ31cclxuXHRcdFx0XHQ8ZGl2IGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MPXt0aGlzLnJlbmRlcmlmcmFtZShzb25nLmVtYmVkZGVkX2NvbnRlbnQpfT48L2Rpdj5cclxuXHRcdFx0PC9kaXY+KVxyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0cmVuZGVyKClcclxuXHR7XHJcblx0XHR0aGlzLmdlbmVyYXRlU29uZ3MoKTtcclxuXHRcdHJldHVybiAoXHJcblx0XHRcdFx0PGRpdj5cclxuXHRcdFx0XHRcdDxoMT4gPGEgaHJlZj0ge1wiL2FydGlzdC9cIiArIHRoaXMucHJvcHMuYXJ0aXN0ICsgXCIvc29uZ3NcIn0+IFNvbmdzIDwvYT4gPC9oMT4gXHJcblx0XHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZSA9IFwic29uZ19kaXNwbGF5XCIgc3R5bGUgPSB7e2Rpc3BsYXk6ICdmbGV4JyxmbGV4RGlyZWN0aW9uOidyb3cnfX0gPlxyXG5cdFx0XHRcdFx0XHR7dGhpcy5zb25nc31cclxuXHRcdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcclxuXHRcdCk7XHJcblx0fVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBBcnRpc3RQb3N0IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50XHJcbntcclxuXHRjb25zdHJ1Y3Rvcihwcm9wcylcclxuXHR7XHJcblx0XHRzdXBlcihwcm9wcyk7XHJcblx0fVxyXG5cclxuXHRyZW5kZXIoKVxyXG5cdHtcclxuXHRcdHJldHVybiAoXHJcblx0XHRcdDxkaXY+XHJcblx0XHRcdFx0PGRpdiBjbGFzc05hbWUgPSBcImluZm9fY29udGFpbmVyXCIgc3R5bGU9e3tsZWZ0OicxNSUnLCB0b3A6JzIwMHB4JywgcG9zaXRpb246J3JlbGF0aXZlJyx3aWR0aDonMTAwJSd9fT5cclxuXHRcdFx0XHRcdDxGb2xsb3dpbmdJbmZvIC8+XHJcblx0XHRcdFx0XHQ8QWxidW1EaXNwbGF5IGRhdGEgPSB7dGhpcy5wcm9wcy5kYXRhLmFsYnVtX2RhdGF9IGFydGlzdCA9IHt0aGlzLnByb3BzLmRhdGEuYXJ0aXN0fS8+XHJcblx0XHRcdFx0XHQ8U29uZ0Rpc3BsYXkgZGF0YSA9IHt0aGlzLnByb3BzLmRhdGEuc29uZ19kYXRhfSBhcnRpc3QgPSB7dGhpcy5wcm9wcy5kYXRhLmFydGlzdH0vPlxyXG5cdFx0XHRcdDwvZGl2PlxyXG5cclxuXHRcdFx0PC9kaXY+XHJcblx0XHQpO1xyXG5cdH1cclxufSIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCBTdGFuZGFyZEhlYWRlciBmcm9tICcuL3N0YW5kYXJkX2hlYWRlci5qcydcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEFydGlzdFNvbmdzUGFnZSBleHRlbmRzIFJlYWN0LkNvbXBvbmVudFxyXG57XHJcblx0Y29uc3RydWN0b3IocHJvcHMpXHJcblx0e1xyXG5cdFx0c3VwZXIocHJvcHMpXHJcblx0XHR0aGlzLnNvbmdzID0gW107XHJcblx0fVxyXG5cclxuXHRnZW5lcmF0ZVNvbmdzKClcclxuXHR7XHJcblx0XHRmb3IgKHZhciBzb25nIG9mIHRoaXMucHJvcHMuZGF0YS5zb25nX2RhdGEpIFxyXG5cdFx0e1xyXG5cdFx0XHR0aGlzLnNvbmdzLnB1c2goXHJcblx0XHRcdDxkaXYgc3R5bGUgPSB7e2Rpc3BsYXk6ICdmbGV4JyxmbGV4RGlyZWN0aW9uOidjb2x1bW4nfX0+XHJcblx0XHRcdFx0PGgyPiAgPGEgaHJlZiA9IHtcIi9wb3N0L1wiICsgc29uZy5hcnRpc3QgKyBcIi9cIiArIHNvbmcuc29uZ30+e3Nvbmcuc29uZ30gPC9hPjwvaDI+XHJcblx0XHRcdDwvZGl2PilcclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdHJlbmRlcigpXHJcblx0e1xyXG5cdFx0dGhpcy5nZW5lcmF0ZVNvbmdzKCk7XHJcblx0XHRyZXR1cm4gKFxyXG5cdFx0XHQ8ZGl2PlxyXG5cdFx0XHRcdDxkaXYgY2xhc3NOYW1lID0gXCJzb25nc19kaXNwbGF5XCIgc3R5bGUgPSB7e2xlZnQ6JzE1JScsIHRvcDonMTAwcHgnLCBwb3NpdGlvbjoncmVsYXRpdmUnfX0+XHJcblx0XHRcdFx0PGgxPiBTb25ncyA8L2gxPlxyXG5cdFx0XHRcdFx0e3RoaXMuc29uZ3N9XHJcblx0XHRcdFx0PC9kaXY+XHRcclxuXHRcdFx0PC9kaXY+XHJcblx0XHQpO1xyXG5cdH1cclxufSIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCBTdGFuZGFyZEhlYWRlciBmcm9tICcuL3N0YW5kYXJkX2hlYWRlci5qcydcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEFydGlzdEFsYnVtc1BhZ2UgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnRcclxue1xyXG5cdGNvbnN0cnVjdG9yKHByb3BzKVxyXG5cdHtcclxuXHRcdHN1cGVyKHByb3BzKVxyXG5cdFx0dGhpcy5hbGJ1bXMgPSBbXTtcclxuXHR9XHJcblxyXG5cdGdlbmVyYXRlQWxidW1zKClcclxuXHR7XHJcblx0XHRmb3IgKHZhciBhbGJ1bSBvZiB0aGlzLnByb3BzLmRhdGEuYWxidW1fZGF0YSkgXHJcblx0XHR7XHJcblx0XHRcdHRoaXMuYWxidW1zLnB1c2goXHJcblx0XHRcdDxkaXYgc3R5bGUgPSB7e2Rpc3BsYXk6ICdmbGV4JyxmbGV4RGlyZWN0aW9uOidjb2x1bW4nfX0+XHJcblx0XHRcdFx0PGgyPiAgPGEgaHJlZiA9IHtcIi9hbGJ1bS9cIiArIGFsYnVtLmFydGlzdCArIFwiL1wiICsgYWxidW0uYWxidW19PnthbGJ1bS5hbGJ1bX0gPC9hPjwvaDI+XHJcblx0XHRcdDwvZGl2Pik7XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHRyZW5kZXIoKVxyXG5cdHtcclxuXHRcdHRoaXMuZ2VuZXJhdGVBbGJ1bXMoKTtcclxuXHRcdHJldHVybiAoXHJcblx0XHRcdDxkaXY+XHJcblx0XHRcdFx0PGRpdiBjbGFzc05hbWUgPSBcImFsYnVtc19kaXNwbGF5XCIgc3R5bGUgPSB7e2xlZnQ6JzE1JScsIHRvcDonMTAwcHgnLCBwb3NpdGlvbjoncmVsYXRpdmUnfX0+XHJcblx0XHRcdFx0PGgxPiBBbGJ1bXMgPC9oMT5cclxuXHRcdFx0XHRcdHt0aGlzLmFsYnVtc31cclxuXHRcdFx0XHQ8L2Rpdj5cdFxyXG5cdFx0XHQ8L2Rpdj5cclxuXHRcdCk7XHJcblx0fVxyXG59IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IFN0YW5kYXJkSGVhZGVyIGZyb20gJy4vc3RhbmRhcmRfaGVhZGVyLmpzJ1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTG9naW5QYWdlIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50XHJcbntcclxuXHRjb25zdHJ1Y3Rvcihwcm9wcylcclxuXHR7XHJcblx0XHRzdXBlcihwcm9wcylcclxuXHRcdHRoaXMudXNlcm5hbWVSZWYgPSBSZWFjdC5jcmVhdGVSZWYoKTtcclxuXHRcdHRoaXMucGFzc3dvcmRSZWYgPSBSZWFjdC5jcmVhdGVSZWYoKTtcclxuXHRcdHRoaXMubG9naW5fbWVzc2FnZSA9IFwiXCI7XHJcblxyXG5cdH1cclxuXHJcblx0c3VibWl0TG9naW4oKVxyXG5cdHtcclxuXHRcdHZhciB0aGF0ID0gdGhpcztcclxuXHQgICAgZmV0Y2goXCIvbG9naW5cIiwge1xyXG5cdCAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcclxuXHQgICAgICAgIGhlYWRlcnM6IHtcclxuXHQgICAgICAgIFx0QWNjZXB0OiAnYXBwbGljYXRpb24vanNvbicsXHJcblx0ICAgICAgICBcdCdBdXRob3JpemF0aW9uJzogJ0Jhc2ljJyxcclxuXHQgICAgICAgIFx0J0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuXHQgICAgICAgIH0sXHJcblx0ICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7dXNlcm5hbWU6IHRoaXMudXNlcm5hbWVSZWYuY3VycmVudC52YWx1ZSwgXHJcblx0ICAgICAgICBcdCAgIHBhc3N3b3JkOiB0aGlzLnBhc3N3b3JkUmVmLmN1cnJlbnQudmFsdWV9KSxcclxuXHQgICAgfSkudGhlbihmdW5jdGlvbihyZXNwb25zZSkgeyByZXR1cm4gcmVzcG9uc2UuanNvbigpO30pXHJcblx0ICAgIC50aGVuKGZ1bmN0aW9uIChkYXRhKSB7ICAgIFx0XHJcblx0ICAgIFx0dGhhdC5sb2dpbl9tZXNzYWdlID0gZGF0YS5sb2dpbl9tZXNzYWdlXHJcblx0ICAgIFx0aWYgKGRhdGEubG9naW5fbWVzc2FnZSA9PSBcIkxvZ2luIFN1Y2Nlc3NmdWxcIilcclxuXHQgICAgXHR7XHJcblx0ICAgIFx0XHR3aW5kb3cubG9jYXRpb24uaHJlZiA9IFwiL1wiXHJcblx0ICAgIFx0fVxyXG5cdCAgICBcdGVsc2VcclxuXHQgICAgXHR7XHJcblx0ICAgIFx0XHR0aGF0LmZvcmNlVXBkYXRlKCk7XHJcblx0ICAgIFx0fVxyXG5cdCBcdH0pXHRcclxuXHR9XHJcblxyXG5cdHJlbmRlcigpXHJcblx0e1xyXG5cdFx0cmV0dXJuKFxyXG5cdFx0XHQ8ZGl2PlxyXG5cdFx0XHRcdDxzZWN0aW9uIGNsYXNzTmFtZSA9IFwiaGVyb1wiIHN0eWxlID0ge3twb3NpdGlvbjonYWJzb2x1dGUnLCBsZWZ0OicxMCUnLCB0b3A6JzIwJSd9fT5cclxuXHRcdFx0XHRcdDxkaXYgY2xhc3NOYW1lID0gIFwiaGVyby1jb250ZW50XCIgPlxyXG5cdFx0XHRcdFx0XHQ8aDI+TG9naW48L2gyPlxyXG5cdFx0XHRcdFx0XHQgIDxsYWJlbCBzdHlsZT17e2NvbG9yOidibGFjayd9fT5Vc2VybmFtZTo8L2xhYmVsPlxyXG5cdFx0XHRcdFx0XHQgIDxpbnB1dCByZWYgPSB7dGhpcy51c2VybmFtZVJlZn0gdHlwZT1cInRleHRcIiBuYW1lPVwidXNlcm5hbWVcIi8+PGJyLz5cclxuXHRcdFx0XHRcdFx0ICA8bGFiZWwgc3R5bGU9e3tjb2xvcjonYmxhY2snfX0+UGFzc3dvcmQ6PC9sYWJlbD5cclxuXHRcdFx0XHRcdFx0ICA8aW5wdXQgcmVmID0ge3RoaXMucGFzc3dvcmRSZWZ9IHR5cGU9XCJ0ZXh0XCIgbmFtZT1cInBhc3N3b3JkXCIvPlxyXG5cdFx0XHRcdFx0XHRcdDxwPlxyXG5cdFx0XHRcdFx0XHRcdCAgPGJ1dHRvbiBvbkNsaWNrPSB7dGhpcy5zdWJtaXRMb2dpbi5iaW5kKHRoaXMpfSB0eXBlPVwic3VibWl0XCIgaWQ9XCJzdWJtaXRCdXR0b25cIiBjbGFzc05hbWU9XCJidG4gYnRuLWxnIGJ0bi1wcmltYXJ5XCIgPkxvZ2luPC9idXR0b24+XHJcblx0XHRcdFx0XHRcdFx0ICA8YSBocmVmID0gXCIvcmVnaXN0ZXJcIiBpZD1cInN1Ym1pdEJ1dHRvblwiIGNsYXNzTmFtZT1cImJ0biBidG4tbGcgYnRuLXByaW1hcnlcIiA+UmVnaXN0ZXI8L2E+XHJcblx0XHRcdFx0XHRcdFx0PC9wPlxyXG5cdFx0XHRcdFx0XHRcdDxwPlxyXG5cdFx0XHRcdFx0XHRcdFx0e3RoaXMubG9naW5fbWVzc2FnZX1cclxuXHRcdFx0XHRcdFx0XHQ8L3A+XHJcblx0XHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0XHQ8L3NlY3Rpb24+XHJcblxyXG5cdFx0XHQ8L2Rpdj5cclxuXHRcdCk7XHJcblx0fVxyXG59IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IFN0YW5kYXJkSGVhZGVyIGZyb20gJy4vc3RhbmRhcmRfaGVhZGVyLmpzJ1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUmVnaXN0ZXJQYWdlIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50XHJcbntcclxuXHRjb25zdHJ1Y3Rvcihwcm9wcylcclxuXHR7XHJcblx0XHRzdXBlcihwcm9wcylcclxuXHRcdHRoaXMudXNlcm5hbWVSZWYgPSBSZWFjdC5jcmVhdGVSZWYoKTtcclxuXHRcdHRoaXMucGFzc3dvcmRSZWYgPSBSZWFjdC5jcmVhdGVSZWYoKTtcclxuXHRcdHRoaXMuY29uZmlybVJlZiA9IFJlYWN0LmNyZWF0ZVJlZigpO1xyXG5cdFx0dmFyIHRoYXQgPSB0aGlzO1xyXG5cdH1cclxuXHRcclxuXHRzdWJtaXRSZWdpc3RyYXRpb24oZSlcclxuXHR7XHJcblx0ICAgIGZldGNoKFwiL3JlZ2lzdGVyXCIsIHtcclxuXHQgICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcblx0ICAgICAgICBoZWFkZXJzOiB7XHJcblx0ICAgICAgICBcdEFjY2VwdDogJ2FwcGxpY2F0aW9uL2pzb24nLFxyXG5cdCAgICAgICAgXHQnQXV0aG9yaXphdGlvbic6ICdCYXNpYycsXHJcblx0ICAgICAgICBcdCdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXHJcblx0ICAgICAgICB9LFxyXG5cdCAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe3VzZXJuYW1lOiB0aGlzLnVzZXJuYW1lUmVmLmN1cnJlbnQudmFsdWUsIFxyXG5cdCAgICAgICAgXHQgICBwYXNzd29yZDogdGhpcy5wYXNzd29yZFJlZi5jdXJyZW50LnZhbHVlLFxyXG5cdCAgICAgICAgXHQgICBwYXNzd29yZF9jb25maXJtOiB0aGlzLmNvbmZpcm1SZWYuY3VycmVudC52YWx1ZX0pLFxyXG5cdCAgICB9KS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7IHJldHVybiByZXNwb25zZS5qc29uKCk7fSlcclxuXHQgICAgLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsgICAgXHRcclxuXHJcblx0IFx0fSlcdFx0XHRcclxuXHJcblx0fVxyXG5cclxuXHRyZW5kZXIoKVxyXG5cdHtcclxuXHRcdHJldHVybiAoXHJcblx0XHRcdDxkaXY+XHJcblx0XHRcdFx0PHNlY3Rpb24gY2xhc3NOYW1lID0gXCJoZXJvXCIgc3R5bGUgPSB7e3Bvc2l0aW9uOidhYnNvbHV0ZScsIGxlZnQ6JzEwJScsIHRvcDonMjAlJ319PlxyXG5cdFx0XHRcdDxkaXYgY2xhc3NOYW1lPSAgXCJoZXJvLWNvbnRlbnRcIiA+XHJcblx0XHRcdFx0XHQ8aDI+UmVnaXN0ZXI8L2gyPlxyXG5cclxuXHRcdFx0XHQgIDxsYWJlbCBzdHlsZT17e2NvbG9yOidibGFjayd9fSA+RW50ZXIgVXNlcm5hbWU6PC9sYWJlbD5cclxuXHRcdFx0XHQgIDxpbnB1dCByZWYgPSB7dGhpcy51c2VybmFtZVJlZn0gdHlwZT1cInRleHRcIiBuYW1lPVwidXNlcm5hbWVcIi8+PGJyLz5cclxuXHRcdFx0XHQgIDxsYWJlbCBzdHlsZT17e2NvbG9yOidibGFjayd9fSA+RW50ZXIgUGFzc3dvcmQ6PC9sYWJlbD5cclxuXHRcdFx0XHQgIDxpbnB1dCByZWYgPSB7dGhpcy5wYXNzd29yZFJlZn0gdHlwZT1cInRleHRcIiBuYW1lPVwicGFzc3dvcmRcIiAvPjxici8+XHJcblx0XHRcdFx0ICAgIDxsYWJlbCBzdHlsZT17e2NvbG9yOidibGFjayd9fT5Db25maXJtIFBhc3N3b3JkOjwvbGFiZWw+XHJcblx0XHRcdFx0ICA8aW5wdXQgcmVmID0ge3RoaXMuY29uZmlybVJlZn0gdHlwZT1cInRleHRcIiBuYW1lPVwicGFzc3dvcmRfY29uZmlybVwiLz5cclxuXHRcdFx0XHQgIDxwPlxyXG5cdFx0XHRcdCAgPGJ1dHRvbiBocmVmID0gXCIvXCIgdHlwZT1cInN1Ym1pdFwiIGlkPVwic3VibWl0QnV0dG9uXCIgY2xhc3NOYW1lPVwiYnRuIGJ0bi1sZyBidG4tcHJpbWFyeVwiIG9uQ2xpY2s9e3RoaXMuc3VibWl0UmVnaXN0cmF0aW9uLmJpbmQodGhpcyl9PlJlZ2lzdGVyPC9idXR0b24+XHJcblx0XHRcdFx0ICA8L3A+XHJcblxyXG5cdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcdDwvc2VjdGlvbj5cclxuXHJcblx0XHRcdDwvZGl2PlxyXG5cdFx0KTtcclxuXHR9XHJcbn0iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgU3RhbmRhcmRIZWFkZXIgZnJvbSAnLi9zdGFuZGFyZF9oZWFkZXIuanMnXHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBGb2xsb3dlcnNQYWdlIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50XHJcbntcclxuXHRjb25zdHJ1Y3Rvcihwcm9wcylcclxuXHR7XHJcblx0XHRzdXBlcihwcm9wcylcclxuXHRcdHRoaXMuZm9sbG93ZXJzID0gW11cclxuXHR9XHJcblxyXG5cdGdlbmVyYXRlRm9sbG93ZXJzKClcclxuXHR7XHJcblx0XHRmb3IgKHZhciBmb2xsb3dlciBvZiB0aGlzLnByb3BzLmRhdGEuZm9sbG93ZXJzKSBcclxuXHRcdHtcclxuXHRcdFx0dGhpcy5mb2xsb3dlcnMucHVzaCg8ZGl2IGtleSA9IHtmb2xsb3dlci51c2VyX2lkfT48YSBocmVmID0ge1wiL3VzZXIvXCIgKyBmb2xsb3dlci51c2VyX2lkfT57Zm9sbG93ZXIudXNlcl9pZH08L2E+PC9kaXY+KVxyXG5cdFx0fVxyXG5cdH1cdFxyXG5cclxuXHRyZW5kZXIoKVxyXG5cdHtcclxuXHRcdHRoaXMuZ2VuZXJhdGVGb2xsb3dlcnMoKTtcclxuXHRcdHJldHVybiAoXHJcblx0XHRcdDxkaXY+XHJcblx0XHRcdFx0PGRpdiBjbGFzc05hbWUgPSBcImZvbGxvd2Vyc19kaXZcIiBzdHlsZSA9IHt7bGVmdDonMTUlJywgdG9wOicxMDBweCcsIHBvc2l0aW9uOidyZWxhdGl2ZSd9fT5cclxuXHRcdFx0XHRcdDxoMT4gRm9sbG93ZXJzIDwvaDE+XHJcblx0XHRcdFx0XHRcdHt0aGlzLmZvbGxvd2Vyc31cclxuXHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0PC9kaXY+XHJcblx0XHQpO1xyXG5cdH1cclxufSIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCBTdGFuZGFyZEhlYWRlciBmcm9tICcuL3N0YW5kYXJkX2hlYWRlci5qcydcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEZvbGxvd2luZ1BhZ2UgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnRcclxue1xyXG5cdGNvbnN0cnVjdG9yKHByb3BzKVxyXG5cdHtcclxuXHRcdHN1cGVyKHByb3BzKVxyXG5cdFx0dGhpcy5mb2xsb3dzID0gW11cclxuXHR9XHJcblxyXG5cdGdlbmVyYXRlRm9sbG93cygpXHJcblx0e1xyXG5cdFx0Zm9yICh2YXIgZm9sbG93IG9mIHRoaXMucHJvcHMuZGF0YS5mb2xsb3dpbmcpIFxyXG5cdFx0e1xyXG5cdFx0XHR0aGlzLmZvbGxvd3MucHVzaCg8ZGl2IGtleSA9IHtmb2xsb3cudXNlcl9pZH0+PGEgaHJlZiA9IHtcIi91c2VyL1wiICsgZm9sbG93LnVzZXJfaWR9Pntmb2xsb3cudXNlcl9pZH08L2E+PC9kaXY+KVxyXG5cdFx0fVxyXG5cdH1cdFxyXG5cclxuXHRyZW5kZXIoKVxyXG5cdHtcclxuXHRcdHRoaXMuZ2VuZXJhdGVGb2xsb3dzKCk7XHJcblx0XHRyZXR1cm4gKFxyXG5cdFx0XHQ8ZGl2PlxyXG5cdFx0XHRcdDxkaXYgY2xhc3NOYW1lID0gXCJmb2xsb3dzX2RpdlwiIHN0eWxlID0ge3tsZWZ0OicxNSUnLCB0b3A6JzEwMHB4JywgcG9zaXRpb246J3JlbGF0aXZlJ319PlxyXG5cdFx0XHRcdFx0PGgxPiBGb2xsb3dzIDwvaDE+XHJcblx0XHRcdFx0XHRcdHt0aGlzLmZvbGxvd3N9XHJcblx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdDwvZGl2PlxyXG5cdFx0KTtcclxuXHR9XHJcbn0iLCJcclxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHtcclxuXHRCcm93c2VyUm91dGVyIGFzIFJvdXRlcixcclxuXHRSZWRpcmVjdCwgXHJcblx0Um91dGUsXHJcblx0U3dpdGNoXHJcbn0gZnJvbSAncmVhY3Qtcm91dGVyLWRvbSc7XHJcblxyXG5cclxuLy9pbXBvcnQgTGlzdCBmcm9tICcuL0xpc3QnO1xyXG5pbXBvcnQgSG9tZSBmcm9tICcuL0hvbWUnO1xyXG5pbXBvcnQgRmVlZCBmcm9tICcuL2ZlZWQuanMnXHJcbmltcG9ydCBDb250YWN0IGZyb20gJy4vQ29udGFjdC5qcyc7XHJcbmltcG9ydCBBYm91dCBmcm9tICcuL2Fib3V0LmpzJztcclxuaW1wb3J0IFVzZXIgZnJvbSAnLi91c2VyLmpzJztcclxuaW1wb3J0IFVzZXJQb3N0IGZyb20gJy4vdXNlcl9wb3N0LmpzJ1xyXG5pbXBvcnQgR2xvYmFsUG9zdCBmcm9tICcuL2dsb2JhbF9wb3N0LmpzJ1xyXG5pbXBvcnQgQXJ0aXN0UG9zdCBmcm9tICcuL2FydGlzdC5qcydcclxuaW1wb3J0IEFydGlzdFNvbmdzUG9zdCBmcm9tICcuL2FydGlzdF9zb25ncy5qcydcclxuaW1wb3J0IEFydGlzdEFsYnVtc1Bvc3QgZnJvbSAnLi9hcnRpc3RfYWxidW1zLmpzJ1xyXG5pbXBvcnQgTG9naW4gZnJvbSAnLi9sb2dpbi5qcydcclxuaW1wb3J0IFJlZ2lzdGVyIGZyb20gJy4vcmVnaXN0ZXIuanMnXHJcbmltcG9ydCBGb2xsb3dlcnMgZnJvbSAnLi9mb2xsb3dlcnMuanMnXHJcbmltcG9ydCBGb2xsb3dpbmcgZnJvbSAnLi9mb2xsb3dpbmcuanMnXHJcbmltcG9ydCBTdGFuZGFyZEhlYWRlciBmcm9tICcuL3N0YW5kYXJkX2hlYWRlci5qcydcclxuLy9cdDxSb3V0ZSBwYXRoID0gXCIvdXNlci86dXNlclwiIGV4YWN0IGNvbXBvbmVudD17VXNlcn0gLz5cclxuLy8gPFJvdXRlIHBhdGggPSBcIi91c2VyXCIgZXhhY3QgcmVuZGVyPXsoKSA9PiAoPEhvbWUgZGF0YT17e2htbTpcIndoYXRcIn19Lz4pfSAgLz5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQXBwIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50e1xyXG5cclxuXHRjb25zdHJ1Y3Rvcihwcm9wcylcclxuXHR7XHJcblx0XHRzdXBlcihwcm9wcylcclxuXHR9XHJcblxyXG5cdGhhbmRsZUNsaWNrKGUpXHJcblx0e1xyXG5cdFx0Y29uc29sZS5sb2coXCJDTElDS0VEXCIpO1xyXG5cdH1cclxuXHJcblx0cmVuZGVyKClcclxuXHR7XHJcblx0XHRyZXR1cm4gKFxyXG5cdFx0XHQ8ZGl2IGlkPSdyb290JyBzdHlsZSA9IHt7YmFja2dyb3VuZDonI0ZBRkFGQSd9fT5cclxuXHRcdFx0XHQ8U3RhbmRhcmRIZWFkZXIgdXNlcm5hbWUgPSB7dGhpcy5wcm9wcy5kYXRhLnVzZXJuYW1lfS8+XHJcblx0XHRcdFx0PGxpbmsgcmVsPVwic3R5bGVzaGVldFwiIGhyZWY9XCIvc3R5bGVzLmNzc1wiLz5cclxuXHRcdFx0XHQ8U3dpdGNoPlxyXG5cdFx0XHRcdFx0PFJvdXRlIGV4YWN0IHBhdGggPSBcIi9cIiByZW5kZXI9eygpID0+ICg8RmVlZCBkYXRhPXt0aGlzLnByb3BzLmRhdGF9Lz4pfSAvPlxyXG5cdFx0XHRcdFx0PFJvdXRlIGV4YWN0IHBhdGggPSBcIi91c2VyLzp1c2VyLzpwb3N0X2lkXCIgcmVuZGVyPXsoKSA9PiAoPFVzZXJQb3N0IGRhdGE9e3RoaXMucHJvcHMuZGF0YX0vPil9Lz5cclxuXHRcdFx0XHRcdDxSb3V0ZSBleGFjdCBwYXRoID0gXCIvdXNlci86dXNlclwiICByZW5kZXI9eygpID0+ICg8VXNlciBkYXRhPXt0aGlzLnByb3BzLmRhdGF9Lz4pfSAvPlxyXG5cdFx0XHRcdFx0PFJvdXRlIGV4YWN0IHBhdGggPSBcIi9mb2xsb3dlcnMvOnVzZXJcIiAgcmVuZGVyPXsoKSA9PiAoPEZvbGxvd2VycyBkYXRhPXt0aGlzLnByb3BzLmRhdGF9Lz4pfSAvPlxyXG5cdFx0XHRcdFx0PFJvdXRlIGV4YWN0IHBhdGggPSBcIi9mb2xsb3dpbmcvOnVzZXJcIiAgcmVuZGVyPXsoKSA9PiAoPEZvbGxvd2luZyBkYXRhPXt0aGlzLnByb3BzLmRhdGF9Lz4pfSAvPlxyXG5cdFx0XHRcdFx0PFJvdXRlIGV4YWN0IHBhdGggPSBcIi9sb2dpblwiIHJlbmRlciA9IHsoKSA9PiAoPExvZ2luIGRhdGE9e3RoaXMucHJvcHMuZGF0YX0vPil9IC8+XHJcblx0XHRcdFx0XHQ8Um91dGUgZXhhY3QgcGF0aCA9IFwiL3JlZ2lzdGVyXCIgcmVuZGVyID0geygpID0+ICg8UmVnaXN0ZXIgZGF0YT17dGhpcy5wcm9wcy5kYXRhfS8+KX0gLz5cclxuXHRcdFx0XHRcdDxSb3V0ZSBleGFjdCBwYXRoID0gXCIvcG9zdC86YXJ0aXN0Lzpzb25nXCIgcmVuZGVyID0geygpID0+ICg8R2xvYmFsUG9zdCBkYXRhPXt0aGlzLnByb3BzLmRhdGF9IC8+KX0gLz5cclxuXHRcdFx0XHRcdDxSb3V0ZSBleGFjdCBwYXRoID0gXCIvYWxidW0vOmFydGlzdC86YWxidW1cIiByZW5kZXIgPSB7KCkgPT4gKDxHbG9iYWxQb3N0IGRhdGE9e3RoaXMucHJvcHMuZGF0YX0gLz4pfSAvPlxyXG5cdFx0XHRcdFx0PFJvdXRlIGV4YWN0IHBhdGggPSBcIi9hcnRpc3QvOmFydGlzdFwiIHJlbmRlcj17KCkgPT4gKDxBcnRpc3RQb3N0IGRhdGEgPSB7dGhpcy5wcm9wcy5kYXRhfS8+KX0gLz5cclxuXHRcdFx0XHRcdDxSb3V0ZSBleGFjdCBwYXRoID0gXCIvYXJ0aXN0LzphcnRpc3Qvc29uZ3NcIiByZW5kZXI9eygpID0+ICg8QXJ0aXN0U29uZ3NQb3N0IGRhdGEgPSB7dGhpcy5wcm9wcy5kYXRhfS8+KX0gLz5cclxuXHRcdFx0XHRcdDxSb3V0ZSBleGFjdCBwYXRoID0gXCIvYXJ0aXN0LzphcnRpc3QvYWxidW1zXCIgcmVuZGVyPXsoKSA9PiAoPEFydGlzdEFsYnVtc1Bvc3QgZGF0YSA9IHt0aGlzLnByb3BzLmRhdGF9Lz4pfSAvPlxyXG5cdFx0XHRcdFx0PFJvdXRlIGV4YWN0IHBhdGggPSBcIi9jb250YWN0XCIgIGNvbXBvbmVudD17Q29udGFjdH0gLz5cclxuXHRcdFx0XHRcdDxSb3V0ZSBleGFjdCBwYXRoID0gXCIvYWJvdXRcIiAgY29tcG9uZW50PXtBYm91dH0gLz5cclxuXHRcdFx0XHQ8L1N3aXRjaD5cdFxyXG5cdFx0XHRcdDxzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiIHNyYz1cIi9wdWJsaWMvYnVuZGxlLmpzXCI+IDwvc2NyaXB0PlxyXG5cdFx0XHQ8L2Rpdj5cclxuXHRcdCk7XHJcblx0fVxyXG59XHJcbiIsIi8vIGltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbi8vIGltcG9ydCB7cmVuZGVyfSBmcm9tICdyZWFjdC1kb20nO1xyXG5cclxuLy8gaW1wb3J0ICB7QnJvd3NlclJvdXRlciBhcyBSb3V0ZXJ9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nXHJcbi8vIGltcG9ydCBBcHAgZnJvbSAnLi9jb21wb25lbnRzL0FwcCc7XHJcbi8vIHJlcXVpcmUoJ0BiYWJlbC9yZWdpc3RlcicpKHtcclxuLy8gICAgIHByZXNldHM6IFsnQGJhYmVsL3ByZXNldC1yZWFjdCddXHJcbi8vIH0pO1xyXG5cclxuLy8gdmFyIFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcclxuLy8gdmFyIFJlYWN0RE9NU2VydmVyID0gcmVxdWlyZSgncmVhY3QtZG9tL3NlcnZlcicpO1xyXG4vLyB2YXIgUm91dGVyID0gcmVxdWlyZSgncmVhY3Qtcm91dGVyLWRvbScpLkJyb3dzZXJSb3V0ZXJcclxuLy8gdmFyIFJlYWN0RE9NID0gcmVxdWlyZSgncmVhY3QtZG9tJyk7XHJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7cmVuZGVyfSBmcm9tICdyZWFjdC1kb20nO1xyXG5pbXBvcnQge2h5ZHJhdGV9IGZyb20gJ3JlYWN0LWRvbSc7XHJcbmltcG9ydCAge0Jyb3dzZXJSb3V0ZXIgYXMgUm91dGVyfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJ1xyXG5pbXBvcnQgQXBwIGZyb20gJy4vY29tcG9uZW50cy9BcHAnO1xyXG5yZW5kZXIoXHJcblx0PFJvdXRlcj5cclxuXHRcdDxBcHAgZGF0YSA9IHt3aW5kb3cuX19EQVRBX199Lz5cclxuXHQ8L1JvdXRlcj4sXHJcblx0ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Jvb3QnKVxyXG4pO1xyXG5cclxuIl0sInNvdXJjZVJvb3QiOiIifQ==