!function(t){var e={};function n(o){if(e[o])return e[o].exports;var r=e[o]={i:o,l:!1,exports:{}};return t[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=t,n.c=e,n.d=function(t,e,o){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:o})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)n.d(o,r,function(e){return t[e]}.bind(null,r));return o},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=19)}([function(t,e,n){"use strict";t.exports=n(11)},function(t,e){t.exports={checkLoggedIn:function(){return-1!=document.cookie.indexOf("username=")},replaceAll:function(t,e,n){var o=t,r="",i=o.indexOf(e);if(-1==i)return t;for(;-1!=i;)r=r+o.substring(0,i)+n,i=(o=o.substring(i+e.length)).indexOf(e);return r+=o},insertTag:function(t,e){for(var n=[],o=0;o<t.length;++o)e[1]!=t[o][1]&&n.push(t[o]);return n.push(e),n},replaceTag:function(t,e){for(var n=0;n<t.length;++n)if(e[1]==t[n][1]){t[n]=e;break}return t},monthNames:["January","February","March","April","May","June","July","August","September","October","November","December"],renderiframe:function(t){return{__html:t}},SetSpotifySize:function(t,e,n){return t.substring(0,t.indexOf("width")+7)+e+t.substring(t.indexOf("height")-2,t.indexOf("height")+7)+n+t.substring(t.indexOf("frameborder")-2,t.length)}}},function(t,e,n){t.exports=n(16)()},function(t,e,n){"use strict";t.exports=function(){}},function(t,e,n){var o=n(1),r=n(0);t.exports={getTags:function(t){t.tagged=!1;for(var e=[],n=0;n<t.potential_tags.length;++n){if(t.contentRef.current.selectionEnd!=t.potential_tags[n][2]+1||" "!=t.contentRef.current.value[t.contentRef.current.selectionEnd]&&t.contentRef.current.value.length!=t.contentRef.current.selectionEnd&&"\n"!=t.contentRef.current.value[t.contentRef.current.selectionEnd]&&"\t"!=t.contentRef.current.value[t.contentRef.current.selectionEnd])if(t.contentRef.current.selectionEnd!=t.potential_tags[n][2]+2||" "!=t.contentRef.current.value[t.contentRef.current.selectionEnd-1]&&"\n"!=t.contentRef.current.value[t.contentRef.current.selectionEnd]&&"\t"!=t.contentRef.current.value[t.contentRef.current.selectionEnd]){if(t.contentRef.current.selectionEnd>t.potential_tags[n][1]-(t.lastContentSize-t.contentRef.current.value.length)&&t.contentRef.current.selectionEnd<=t.potential_tags[n][2]+2)continue;t.contentRef.current.selectionEnd<=t.potential_tags[n][1]+1&&(t.potential_tags[n][1]-=t.lastContentSize-t.contentRef.current.value.length,t.potential_tags[n][2]-=t.lastContentSize-t.contentRef.current.value.length)}else;else;e.push(t.potential_tags[n])}t.potential_tags=e;var i=t.contentRef.current.selectionEnd-1,a=-1;if(t.currentTag="",t.artistSearch=!1,t.artistFlag=!1,t.tagFlag=!1," "!=t.contentRef.current.value[i]){for(;i<t.contentRef.current.value.length&&" "!=t.contentRef.current.value[i]&&"\n"!=t.contentRef.current.value[i]&&"\t"!=t.contentRef.current.value[i]&&"@"!=t.contentRef.current.value[i]&&"#"!=t.contentRef.current.value[i];)++i;--i}else i=t.contentRef.current.selectionEnd-2;for(var l=i;i>=0;){if(" "==t.contentRef.current.value[i]||"\n"==t.contentRef.current.value[i]||"\t"==t.contentRef.current.value[i]){t.tagList=[],t.currentTag="";break}if("#"==t.contentRef.current.value[i]){-1!=a?t.artistSearch=!0:t.artistFlag=!0,t.tagFlag=!0;break}if("@"==t.contentRef.current.value[i]){t.tagFlag=!0;break}"-"==t.contentRef.current.value[i]&&(a=i),t.currentTag=t.contentRef.current.value[i]+t.currentTag,i--}if(t.artistSearch){var s=t.currentTag.substring(t.currentTag.indexOf("-")+1,t.currentTag.length);if(t.songs_and_albums.length>0&&"NO_SONG_ALBUM_ONLY"!=t.songs_and_albums[0].song){var u=o.replaceAll(t.songs_and_albums[0].song," ","_");t.songs_and_albums.length>0&&(t.songs_and_albums[0].song.toLowerCase()==s.toLowerCase()||u.toLowerCase()==s.toLowerCase())&&(t.potential_tags=o.insertTag(t.potential_tags,[t.songs_and_albums[0],i,t.contentRef.current.value.selectionEnd-1,2]),t.tagged=!1)}else{var c=t.currentTag.substring(t.currentTag.indexOf("-")+1,t.currentTag.length),p=t.current_album;t.songs_and_albums.length>0&&(p=o.replaceAll(c," ","_")),t.songs_and_albums.length>0&&(t.songs_and_albums[0].album.toLowerCase()==c.toLowerCase()||p.toLowerCase()==c.toLowerCase())&&(t.potential_tags=o.insertTag(t.potential_tags,[t.songs_and_albums[0],i,t.contentRef.current.value.selectionEnd-1,3]),t.tagged=!1)}}else if(t.artistFlag){var f=t.currentTag;null!=t.artists[0]&&(f=o.replaceAll(t.artists[0].artist," ","_")),t.artists.length>0&&(t.artists[0].artist.toLowerCase()==t.currentTag.toLowerCase()||f.toLowerCase()==t.currentTag.toLowerCase())&&(t.potential_tags=o.insertTag(t.potential_tags,[t.artists[0],i,i+t.currentTag.length,1]),t.tagged=!1)}else t.users.length>0&&t.users[0].username.toLowerCase()==t.currentTag.toLowerCase()&&(t.potential_tags=o.insertTag(t.potential_tags,[t.users[0],i,i+t.currentTag.length,0]),t.tagged=!1);if(!t.tagged&&t.tagFlag){var d=!1;for(n=0;n<t.potential_tags.length;++n)if(t.potential_tags[n][1]==i){d=!0;break}if(!d&&t.tagFlag){var h=0;t.artistSearch?h=2:t.artistFlag&&(h=1),t.potential_tags.push([t.currentTag,i,l,h])}}if(t.artistSearch){var y=t.contentRef.current.value.substring(i+1,a),m=t.contentRef.current.value.substring(a+1,l+1),v=t;fetch("/post_tag_artist_search",{method:"POST",headers:{Accept:"application/json",Authorization:"Basic","Content-Type":"application/json"},body:JSON.stringify({artist:y,tag:m})}).then(function(t){return t.json()}).then(function(t){v.tagList=[],v.songs_and_albums=t.songs.concat(t.albums),v.songs_and_albums.sort(function(t,e){return"NO_SONG_ALBUM_ONLY"!=t.song&&"NO_SONG_ALBUM_ONLY"!=e.song?t.song>e.song?1:-1:"NO_SONG_ALBUM_ONLY"!=t.song&&"NO_SONG_ALBUM_ONLY"==e.song?t.song>e.album?1:-1:"NO_SONG_ALBUM_ONLY"==t.song&&"NO_SONG_ALBUM_ONLY"!=e.song?t.album>e.song?1:-1:t.album>e.album?1:-1});var e=!0,n=!1,o=void 0;try{for(var i,a=v.songs_and_albums[Symbol.iterator]();!(e=(i=a.next()).done);e=!0){var l=i.value;"NO_SONG_ALBUM_ONLY"==l.song?v.tagList.push(r.createElement("div",{id:v.tagList.length,className:"album",style:{color:"purple"},onClick:v.selectTag.bind(v)}," ",l.album," ")):v.tagList.push(r.createElement("div",{id:v.tagList.length,className:"song",style:{color:"blue"},onClick:v.selectTag.bind(v)}," ",l.song," "))}}catch(t){n=!0,o=t}finally{try{e||null==a.return||a.return()}finally{if(n)throw o}}v.forceUpdate()})}else if(t.artistFlag){v=t;fetch("/post_tag_artist",{method:"POST",headers:{Accept:"application/json",Authorization:"Basic","Content-Type":"application/json"},body:JSON.stringify({tag:t.currentTag})}).then(function(t){return t.json()}).then(function(t){v.tagList=[],v.artists=t.artists,v.artists.sort(function(t,e){return t.artist>e.artist?1:-1});var e=!0,n=!1,o=void 0;try{for(var i,a=v.artists[Symbol.iterator]();!(e=(i=a.next()).done);e=!0){var l=i.value;v.tagList.push(r.createElement("div",{id:v.tagList.length,className:"artist",style:{color:"purple"},onClick:v.selectTag.bind(v)}," ",l.artist," "))}}catch(t){n=!0,o=t}finally{try{e||null==a.return||a.return()}finally{if(n)throw o}}v.forceUpdate()})}else if(t.tagFlag){v=t;fetch("/post_tag_user",{method:"POST",headers:{Accept:"application/json",Authorization:"Basic","Content-Type":"application/json"},body:JSON.stringify({tag:t.currentTag})}).then(function(t){return t.json()}).then(function(t){v.tagList=[],v.users=t.users,v.users.sort(function(t,e){return t.username>e.username?1:-1});var e=!0,n=!1,o=void 0;try{for(var i,a=v.users[Symbol.iterator]();!(e=(i=a.next()).done);e=!0){var l=i.value;v.tagList.push(r.createElement("div",{id:v.tagList.length,className:"user",style:{color:"purple"},onClick:v.selectTag.bind(v)}," ",l.username," "))}}catch(t){n=!0,o=t}finally{try{e||null==a.return||a.return()}finally{if(n)throw o}}v.forceUpdate()})}for(d=!1,n=0;n<t.potential_tags.length;++n)if(t.potential_tags[n][1]==i){d=!0;break}if(!d&&t.tagFlag){h=0;t.artistSearch?h=2:t.artistFlag&&(h=1),t.potential_tags.push([t.currentTag,i,t.contentRef.current.selectionEnd-1,h])}},tagClicked:function(t,e){for(var n=t.contentRef.current.selectionEnd-1;n<t.contentRef.current.value.length;){if(" "==t.contentRef.current.value[n]||"\t"==t.contentRef.current.value[n]||"\n"==t.contentRef.current.value[n]){--n;break}++n}for(var r=n;n>=0;){if("@"==t.contentRef.current.value[n]){n--;break}if("#"==t.contentRef.current.value[n]){n--;break}if(t.artistSearch&&"-"==t.contentRef.current.value[n]){n--;break}n--}if(t.artistSearch){for(var i=n;i>=0&&"#"!=t.contentRef.current.value[i];)i--;var a=o.replaceAll(e.target.textContent.substring(1,e.target.textContent.length-1)," ","_");t.contentRef.current.value=t.contentRef.current.value.substring(0,n+1)+"-"+a+t.contentRef.current.value.substring(r+1,t.contentRef.current.value.length);var l=2;"NO_SONG_ALBUM_ONLY"==t.songs_and_albums[parseInt(e.target.id)].song&&(l=3),t.potential_tag=o.replaceTag(t.potential_tags,[t.songs_and_albums[parseInt(e.target.id)],i,n+a.length+1,l])}else if(t.artistFlag){a=o.replaceAll(e.target.textContent.substring(1,e.target.textContent.length-1)," ","_");t.contentRef.current.value=t.contentRef.current.value.substring(0,n+1)+"#"+a+t.contentRef.current.value.substring(r+1,t.contentRef.current.value.length),t.potential_tags=o.replaceTag(t.potential_tags,[t.artists[parseInt(e.target.id)],n+1,n+a.length+1,1])}else{a=o.replaceAll(e.target.textContent.substring(1,e.target.textContent.length-1)," ","_");t.contentRef.current.value=t.contentRef.current.value.substring(0,n+1)+"@"+a+t.contentRef.current.value.substring(r+1,t.contentRef.current.value.length),t.potential_tags=o.replaceTag(t.potential_tags,[t.users[parseInt(e.target.id)],n+1,n+a.length+1,0])}t.contentRef.current.selectionStart=n+e.target.textContent.length,t.contentRef.current.selectionEnd=n+e.target.textContent.length,t.lastContentSize=t.contentRef.current.value.length,t.contentRef.current.focus(),t.forceUpdate()},formatContent:function(t,e){var n,o=[],i=[];if(null!=e&&null!=e){n=JSON.parse(e),i=Object.keys(n);var a=[],l=!0,s=!1,u=void 0;try{for(var c,p=i[Symbol.iterator]();!(l=(c=p.next()).done);l=!0){var f=c.value;n[f].length<5||a.push(f)}}catch(t){s=!0,u=t}finally{try{l||null==p.return||p.return()}finally{if(s)throw u}}(i=a).sort(function(t,e){return parseInt(t)>parseInt(e)?1:-1})}var d=0;return t.split("\n").map(function(t,e){for(var a=[],l=0;i[0]<d+t.length;){for(var s=t.substring(l,i[0]-d),u=i[0]-d,c="";u<t.length&&" "!=t[u]&&"\t"!=t[u]&&"\n"!=t[u];)c+=t[u],++u;"",l=u,a.push(s),a.push(r.createElement("a",{key:u,href:n[i[0]][4]},c)),i.splice(0,1)}d+=t.length+1,a.push(t.substring(l,t.length)),o.push(a),o.push(r.createElement("br",{key:e}))}),o}}},function(t,e,n){"use strict";var o=function(){};t.exports=o},function(t,e,n){"use strict";t.exports=function(t,e,n,o,r,i,a,l){if(!t){var s;if(void 0===e)s=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var u=[n,o,r,i,a,l],c=0;(s=new Error(e.replace(/%s/g,function(){return u[c++]}))).name="Invariant Violation"}throw s.framesToPop=1,s}}},function(t,e,n){"use strict";!function t(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(t)}catch(t){console.error(t)}}(),t.exports=n(12)},function(t,e,n){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var o=Object.getOwnPropertySymbols,r=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable;t.exports=function(){try{if(!Object.assign)return!1;var t=new String("abc");if(t[5]="de","5"===Object.getOwnPropertyNames(t)[0])return!1;for(var e={},n=0;n<10;n++)e["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(e).map(function(t){return e[t]}).join(""))return!1;var o={};return"abcdefghijklmnopqrst".split("").forEach(function(t){o[t]=t}),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},o)).join("")}catch(t){return!1}}()?Object.assign:function(t,e){for(var n,a,l=function(t){if(null==t)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(t)}(t),s=1;s<arguments.length;s++){for(var u in n=Object(arguments[s]))r.call(n,u)&&(l[u]=n[u]);if(o){a=o(n);for(var c=0;c<a.length;c++)i.call(n,a[c])&&(l[a[c]]=n[a[c]])}}return l}},function(t,e,n){var o=n(18);t.exports=d,t.exports.parse=i,t.exports.compile=function(t,e){return l(i(t,e))},t.exports.tokensToFunction=l,t.exports.tokensToRegExp=f;var r=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function i(t,e){for(var n,o=[],i=0,a=0,l="",c=e&&e.delimiter||"/";null!=(n=r.exec(t));){var p=n[0],f=n[1],d=n.index;if(l+=t.slice(a,d),a=d+p.length,f)l+=f[1];else{var h=t[a],y=n[2],m=n[3],v=n[4],g=n[5],w=n[6],_=n[7];l&&(o.push(l),l="");var x=null!=y&&null!=h&&h!==y,E="+"===w||"*"===w,b="?"===w||"*"===w,S=n[2]||c,T=v||g;o.push({name:m||i++,prefix:y||"",delimiter:S,optional:b,repeat:E,partial:x,asterisk:!!_,pattern:T?u(T):_?".*":"[^"+s(S)+"]+?"})}}return a<t.length&&(l+=t.substr(a)),l&&o.push(l),o}function a(t){return encodeURI(t).replace(/[\/?#]/g,function(t){return"%"+t.charCodeAt(0).toString(16).toUpperCase()})}function l(t){for(var e=new Array(t.length),n=0;n<t.length;n++)"object"==typeof t[n]&&(e[n]=new RegExp("^(?:"+t[n].pattern+")$"));return function(n,r){for(var i="",l=n||{},s=(r||{}).pretty?a:encodeURIComponent,u=0;u<t.length;u++){var c=t[u];if("string"!=typeof c){var p,f=l[c.name];if(null==f){if(c.optional){c.partial&&(i+=c.prefix);continue}throw new TypeError('Expected "'+c.name+'" to be defined')}if(o(f)){if(!c.repeat)throw new TypeError('Expected "'+c.name+'" to not repeat, but received `'+JSON.stringify(f)+"`");if(0===f.length){if(c.optional)continue;throw new TypeError('Expected "'+c.name+'" to not be empty')}for(var d=0;d<f.length;d++){if(p=s(f[d]),!e[u].test(p))throw new TypeError('Expected all "'+c.name+'" to match "'+c.pattern+'", but received `'+JSON.stringify(p)+"`");i+=(0===d?c.prefix:c.delimiter)+p}}else{if(p=c.asterisk?encodeURI(f).replace(/[?#]/g,function(t){return"%"+t.charCodeAt(0).toString(16).toUpperCase()}):s(f),!e[u].test(p))throw new TypeError('Expected "'+c.name+'" to match "'+c.pattern+'", but received "'+p+'"');i+=c.prefix+p}}else i+=c}return i}}function s(t){return t.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function u(t){return t.replace(/([=!:$\/()])/g,"\\$1")}function c(t,e){return t.keys=e,t}function p(t){return t.sensitive?"":"i"}function f(t,e,n){o(e)||(n=e||n,e=[]);for(var r=(n=n||{}).strict,i=!1!==n.end,a="",l=0;l<t.length;l++){var u=t[l];if("string"==typeof u)a+=s(u);else{var f=s(u.prefix),d="(?:"+u.pattern+")";e.push(u),u.repeat&&(d+="(?:"+f+d+")*"),a+=d=u.optional?u.partial?f+"("+d+")?":"(?:"+f+"("+d+"))?":f+"("+d+")"}}var h=s(n.delimiter||"/"),y=a.slice(-h.length)===h;return r||(a=(y?a.slice(0,-h.length):a)+"(?:"+h+"(?=$))?"),a+=i?"$":r&&y?"":"(?="+h+"|$)",c(new RegExp("^"+a,p(n)),e)}function d(t,e,n){return o(e)||(n=e||n,e=[]),n=n||{},t instanceof RegExp?function(t,e){var n=t.source.match(/\((?!\?)/g);if(n)for(var o=0;o<n.length;o++)e.push({name:o,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return c(t,e)}(t,e):o(t)?function(t,e,n){for(var o=[],r=0;r<t.length;r++)o.push(d(t[r],e,n).source);return c(new RegExp("(?:"+o.join("|")+")",p(n)),e)}(t,e,n):function(t,e,n){return f(i(t,n),e,n)}(t,e,n)}},,function(t,e,n){"use strict";
/** @license React v16.7.0
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var o=n(8),r="function"==typeof Symbol&&Symbol.for,i=r?Symbol.for("react.element"):60103,a=r?Symbol.for("react.portal"):60106,l=r?Symbol.for("react.fragment"):60107,s=r?Symbol.for("react.strict_mode"):60108,u=r?Symbol.for("react.profiler"):60114,c=r?Symbol.for("react.provider"):60109,p=r?Symbol.for("react.context"):60110,f=r?Symbol.for("react.concurrent_mode"):60111,d=r?Symbol.for("react.forward_ref"):60112,h=r?Symbol.for("react.suspense"):60113,y=r?Symbol.for("react.memo"):60115,m=r?Symbol.for("react.lazy"):60116,v="function"==typeof Symbol&&Symbol.iterator;function g(t){for(var e=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+t,o=0;o<e;o++)n+="&args[]="+encodeURIComponent(arguments[o+1]);!function(t,e,n,o,r,i,a,l){if(!t){if(t=void 0,void 0===e)t=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var s=[n,o,r,i,a,l],u=0;(t=Error(e.replace(/%s/g,function(){return s[u++]}))).name="Invariant Violation"}throw t.framesToPop=1,t}}(!1,"Minified React error #"+t+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}var w={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},_={};function x(t,e,n){this.props=t,this.context=e,this.refs=_,this.updater=n||w}function E(){}function b(t,e,n){this.props=t,this.context=e,this.refs=_,this.updater=n||w}x.prototype.isReactComponent={},x.prototype.setState=function(t,e){"object"!=typeof t&&"function"!=typeof t&&null!=t&&g("85"),this.updater.enqueueSetState(this,t,e,"setState")},x.prototype.forceUpdate=function(t){this.updater.enqueueForceUpdate(this,t,"forceUpdate")},E.prototype=x.prototype;var S=b.prototype=new E;S.constructor=b,o(S,x.prototype),S.isPureReactComponent=!0;var T={current:null,currentDispatcher:null},C=Object.prototype.hasOwnProperty,O={key:!0,ref:!0,__self:!0,__source:!0};function P(t,e,n){var o=void 0,r={},a=null,l=null;if(null!=e)for(o in void 0!==e.ref&&(l=e.ref),void 0!==e.key&&(a=""+e.key),e)C.call(e,o)&&!O.hasOwnProperty(o)&&(r[o]=e[o]);var s=arguments.length-2;if(1===s)r.children=n;else if(1<s){for(var u=Array(s),c=0;c<s;c++)u[c]=arguments[c+2];r.children=u}if(t&&t.defaultProps)for(o in s=t.defaultProps)void 0===r[o]&&(r[o]=s[o]);return{$$typeof:i,type:t,key:a,ref:l,props:r,_owner:T.current}}function k(t){return"object"==typeof t&&null!==t&&t.$$typeof===i}var N=/\/+/g,L=[];function R(t,e,n,o){if(L.length){var r=L.pop();return r.result=t,r.keyPrefix=e,r.func=n,r.context=o,r.count=0,r}return{result:t,keyPrefix:e,func:n,context:o,count:0}}function F(t){t.result=null,t.keyPrefix=null,t.func=null,t.context=null,t.count=0,10>L.length&&L.push(t)}function D(t,e,n){return null==t?0:function t(e,n,o,r){var l=typeof e;"undefined"!==l&&"boolean"!==l||(e=null);var s=!1;if(null===e)s=!0;else switch(l){case"string":case"number":s=!0;break;case"object":switch(e.$$typeof){case i:case a:s=!0}}if(s)return o(r,e,""===n?"."+A(e,0):n),1;if(s=0,n=""===n?".":n+":",Array.isArray(e))for(var u=0;u<e.length;u++){var c=n+A(l=e[u],u);s+=t(l,c,o,r)}else if(c=null===e||"object"!=typeof e?null:"function"==typeof(c=v&&e[v]||e["@@iterator"])?c:null,"function"==typeof c)for(e=c.call(e),u=0;!(l=e.next()).done;)s+=t(l=l.value,c=n+A(l,u++),o,r);else"object"===l&&g("31","[object Object]"==(o=""+e)?"object with keys {"+Object.keys(e).join(", ")+"}":o,"");return s}(t,"",e,n)}function A(t,e){return"object"==typeof t&&null!==t&&null!=t.key?function(t){var e={"=":"=0",":":"=2"};return"$"+(""+t).replace(/[=:]/g,function(t){return e[t]})}(t.key):e.toString(36)}function z(t,e){t.func.call(t.context,e,t.count++)}function U(t,e,n){var o=t.result,r=t.keyPrefix;t=t.func.call(t.context,e,t.count++),Array.isArray(t)?M(t,o,n,function(t){return t}):null!=t&&(k(t)&&(t=function(t,e){return{$$typeof:i,type:t.type,key:e,ref:t.ref,props:t.props,_owner:t._owner}}(t,r+(!t.key||e&&e.key===t.key?"":(""+t.key).replace(N,"$&/")+"/")+n)),o.push(t))}function M(t,e,n,o,r){var i="";null!=n&&(i=(""+n).replace(N,"$&/")+"/"),D(t,U,e=R(e,i,o,r)),F(e)}var I={Children:{map:function(t,e,n){if(null==t)return t;var o=[];return M(t,o,null,e,n),o},forEach:function(t,e,n){if(null==t)return t;D(t,z,e=R(null,null,e,n)),F(e)},count:function(t){return D(t,function(){return null},null)},toArray:function(t){var e=[];return M(t,e,null,function(t){return t}),e},only:function(t){return k(t)||g("143"),t}},createRef:function(){return{current:null}},Component:x,PureComponent:b,createContext:function(t,e){return void 0===e&&(e=null),(t={$$typeof:p,_calculateChangedBits:e,_currentValue:t,_currentValue2:t,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:c,_context:t},t.Consumer=t},forwardRef:function(t){return{$$typeof:d,render:t}},lazy:function(t){return{$$typeof:m,_ctor:t,_status:-1,_result:null}},memo:function(t,e){return{$$typeof:y,type:t,compare:void 0===e?null:e}},Fragment:l,StrictMode:s,Suspense:h,createElement:P,cloneElement:function(t,e,n){null==t&&g("267",t);var r=void 0,a=o({},t.props),l=t.key,s=t.ref,u=t._owner;if(null!=e){void 0!==e.ref&&(s=e.ref,u=T.current),void 0!==e.key&&(l=""+e.key);var c=void 0;for(r in t.type&&t.type.defaultProps&&(c=t.type.defaultProps),e)C.call(e,r)&&!O.hasOwnProperty(r)&&(a[r]=void 0===e[r]&&void 0!==c?c[r]:e[r])}if(1===(r=arguments.length-2))a.children=n;else if(1<r){c=Array(r);for(var p=0;p<r;p++)c[p]=arguments[p+2];a.children=c}return{$$typeof:i,type:t.type,key:l,ref:s,props:a,_owner:u}},createFactory:function(t){var e=P.bind(null,t);return e.type=t,e},isValidElement:k,version:"16.7.0",unstable_ConcurrentMode:f,unstable_Profiler:u,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:T,assign:o}},W={default:I},Y=W&&I||W;t.exports=Y.default||Y},function(t,e,n){"use strict";
/** @license React v16.7.0
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var o=n(0),r=n(8),i=n(13);function a(t){for(var e=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+t,o=0;o<e;o++)n+="&args[]="+encodeURIComponent(arguments[o+1]);!function(t,e,n,o,r,i,a,l){if(!t){if(t=void 0,void 0===e)t=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var s=[n,o,r,i,a,l],u=0;(t=Error(e.replace(/%s/g,function(){return s[u++]}))).name="Invariant Violation"}throw t.framesToPop=1,t}}(!1,"Minified React error #"+t+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}o||a("227");var l=!1,s=null,u=!1,c=null,p={onError:function(t){l=!0,s=t}};function f(t,e,n,o,r,i,a,u,c){l=!1,s=null,function(t,e,n,o,r,i,a,l,s){var u=Array.prototype.slice.call(arguments,3);try{e.apply(n,u)}catch(t){this.onError(t)}}.apply(p,arguments)}var d=null,h={};function y(){if(d)for(var t in h){var e=h[t],n=d.indexOf(t);if(-1<n||a("96",t),!v[n])for(var o in e.extractEvents||a("97",t),v[n]=e,n=e.eventTypes){var r=void 0,i=n[o],l=e,s=o;g.hasOwnProperty(s)&&a("99",s),g[s]=i;var u=i.phasedRegistrationNames;if(u){for(r in u)u.hasOwnProperty(r)&&m(u[r],l,s);r=!0}else i.registrationName?(m(i.registrationName,l,s),r=!0):r=!1;r||a("98",o,t)}}}function m(t,e,n){w[t]&&a("100",t),w[t]=e,_[t]=e.eventTypes[n].dependencies}var v=[],g={},w={},_={},x=null,E=null,b=null;function S(t,e,n){var o=t.type||"unknown-event";t.currentTarget=b(n),function(t,e,n,o,r,i,p,d,h){if(f.apply(this,arguments),l){if(l){var y=s;l=!1,s=null}else a("198"),y=void 0;u||(u=!0,c=y)}}(o,e,void 0,t),t.currentTarget=null}function T(t,e){return null==e&&a("30"),null==t?e:Array.isArray(t)?Array.isArray(e)?(t.push.apply(t,e),t):(t.push(e),t):Array.isArray(e)?[t].concat(e):[t,e]}function C(t,e,n){Array.isArray(t)?t.forEach(e,n):t&&e.call(n,t)}var O=null;function P(t){if(t){var e=t._dispatchListeners,n=t._dispatchInstances;if(Array.isArray(e))for(var o=0;o<e.length&&!t.isPropagationStopped();o++)S(t,e[o],n[o]);else e&&S(t,e,n);t._dispatchListeners=null,t._dispatchInstances=null,t.isPersistent()||t.constructor.release(t)}}var k={injectEventPluginOrder:function(t){d&&a("101"),d=Array.prototype.slice.call(t),y()},injectEventPluginsByName:function(t){var e,n=!1;for(e in t)if(t.hasOwnProperty(e)){var o=t[e];h.hasOwnProperty(e)&&h[e]===o||(h[e]&&a("102",e),h[e]=o,n=!0)}n&&y()}};function N(t,e){var n=t.stateNode;if(!n)return null;var o=x(n);if(!o)return null;n=o[e];t:switch(e){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":(o=!o.disabled)||(o=!("button"===(t=t.type)||"input"===t||"select"===t||"textarea"===t)),t=!o;break t;default:t=!1}return t?null:(n&&"function"!=typeof n&&a("231",e,typeof n),n)}function L(t){if(null!==t&&(O=T(O,t)),t=O,O=null,t&&(C(t,P),O&&a("95"),u))throw t=c,u=!1,c=null,t}var R=Math.random().toString(36).slice(2),F="__reactInternalInstance$"+R,D="__reactEventHandlers$"+R;function A(t){if(t[F])return t[F];for(;!t[F];){if(!t.parentNode)return null;t=t.parentNode}return 5===(t=t[F]).tag||6===t.tag?t:null}function z(t){return!(t=t[F])||5!==t.tag&&6!==t.tag?null:t}function U(t){if(5===t.tag||6===t.tag)return t.stateNode;a("33")}function M(t){return t[D]||null}function I(t){do{t=t.return}while(t&&5!==t.tag);return t||null}function W(t,e,n){(e=N(t,n.dispatchConfig.phasedRegistrationNames[e]))&&(n._dispatchListeners=T(n._dispatchListeners,e),n._dispatchInstances=T(n._dispatchInstances,t))}function Y(t){if(t&&t.dispatchConfig.phasedRegistrationNames){for(var e=t._targetInst,n=[];e;)n.push(e),e=I(e);for(e=n.length;0<e--;)W(n[e],"captured",t);for(e=0;e<n.length;e++)W(n[e],"bubbled",t)}}function $(t,e,n){t&&n&&n.dispatchConfig.registrationName&&(e=N(t,n.dispatchConfig.registrationName))&&(n._dispatchListeners=T(n._dispatchListeners,e),n._dispatchInstances=T(n._dispatchInstances,t))}function J(t){t&&t.dispatchConfig.registrationName&&$(t._targetInst,null,t)}function Q(t){C(t,Y)}var Z=!("undefined"==typeof window||!window.document||!window.document.createElement);function X(t,e){var n={};return n[t.toLowerCase()]=e.toLowerCase(),n["Webkit"+t]="webkit"+e,n["Moz"+t]="moz"+e,n}var K={animationend:X("Animation","AnimationEnd"),animationiteration:X("Animation","AnimationIteration"),animationstart:X("Animation","AnimationStart"),transitionend:X("Transition","TransitionEnd")},j={},V={};function G(t){if(j[t])return j[t];if(!K[t])return t;var e,n=K[t];for(e in n)if(n.hasOwnProperty(e)&&e in V)return j[t]=n[e];return t}Z&&(V=document.createElement("div").style,"AnimationEvent"in window||(delete K.animationend.animation,delete K.animationiteration.animation,delete K.animationstart.animation),"TransitionEvent"in window||delete K.transitionend.transition);var B=G("animationend"),q=G("animationiteration"),H=G("animationstart"),tt=G("transitionend"),et="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),nt=null,ot=null,rt=null;function it(){if(rt)return rt;var t,e,n=ot,o=n.length,r="value"in nt?nt.value:nt.textContent,i=r.length;for(t=0;t<o&&n[t]===r[t];t++);var a=o-t;for(e=1;e<=a&&n[o-e]===r[i-e];e++);return rt=r.slice(t,1<e?1-e:void 0)}function at(){return!0}function lt(){return!1}function st(t,e,n,o){for(var r in this.dispatchConfig=t,this._targetInst=e,this.nativeEvent=n,t=this.constructor.Interface)t.hasOwnProperty(r)&&((e=t[r])?this[r]=e(n):"target"===r?this.target=o:this[r]=n[r]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?at:lt,this.isPropagationStopped=lt,this}function ut(t,e,n,o){if(this.eventPool.length){var r=this.eventPool.pop();return this.call(r,t,e,n,o),r}return new this(t,e,n,o)}function ct(t){t instanceof this||a("279"),t.destructor(),10>this.eventPool.length&&this.eventPool.push(t)}function pt(t){t.eventPool=[],t.getPooled=ut,t.release=ct}r(st.prototype,{preventDefault:function(){this.defaultPrevented=!0;var t=this.nativeEvent;t&&(t.preventDefault?t.preventDefault():"unknown"!=typeof t.returnValue&&(t.returnValue=!1),this.isDefaultPrevented=at)},stopPropagation:function(){var t=this.nativeEvent;t&&(t.stopPropagation?t.stopPropagation():"unknown"!=typeof t.cancelBubble&&(t.cancelBubble=!0),this.isPropagationStopped=at)},persist:function(){this.isPersistent=at},isPersistent:lt,destructor:function(){var t,e=this.constructor.Interface;for(t in e)this[t]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=lt,this._dispatchInstances=this._dispatchListeners=null}}),st.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(t){return t.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},st.extend=function(t){function e(){}function n(){return o.apply(this,arguments)}var o=this;e.prototype=o.prototype;var i=new e;return r(i,n.prototype),n.prototype=i,n.prototype.constructor=n,n.Interface=r({},o.Interface,t),n.extend=o.extend,pt(n),n},pt(st);var ft=st.extend({data:null}),dt=st.extend({data:null}),ht=[9,13,27,32],yt=Z&&"CompositionEvent"in window,mt=null;Z&&"documentMode"in document&&(mt=document.documentMode);var vt=Z&&"TextEvent"in window&&!mt,gt=Z&&(!yt||mt&&8<mt&&11>=mt),wt=String.fromCharCode(32),_t={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},xt=!1;function Et(t,e){switch(t){case"keyup":return-1!==ht.indexOf(e.keyCode);case"keydown":return 229!==e.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function bt(t){return"object"==typeof(t=t.detail)&&"data"in t?t.data:null}var St=!1;var Tt={eventTypes:_t,extractEvents:function(t,e,n,o){var r=void 0,i=void 0;if(yt)t:{switch(t){case"compositionstart":r=_t.compositionStart;break t;case"compositionend":r=_t.compositionEnd;break t;case"compositionupdate":r=_t.compositionUpdate;break t}r=void 0}else St?Et(t,n)&&(r=_t.compositionEnd):"keydown"===t&&229===n.keyCode&&(r=_t.compositionStart);return r?(gt&&"ko"!==n.locale&&(St||r!==_t.compositionStart?r===_t.compositionEnd&&St&&(i=it()):(ot="value"in(nt=o)?nt.value:nt.textContent,St=!0)),r=ft.getPooled(r,e,n,o),i?r.data=i:null!==(i=bt(n))&&(r.data=i),Q(r),i=r):i=null,(t=vt?function(t,e){switch(t){case"compositionend":return bt(e);case"keypress":return 32!==e.which?null:(xt=!0,wt);case"textInput":return(t=e.data)===wt&&xt?null:t;default:return null}}(t,n):function(t,e){if(St)return"compositionend"===t||!yt&&Et(t,e)?(t=it(),rt=ot=nt=null,St=!1,t):null;switch(t){case"paste":return null;case"keypress":if(!(e.ctrlKey||e.altKey||e.metaKey)||e.ctrlKey&&e.altKey){if(e.char&&1<e.char.length)return e.char;if(e.which)return String.fromCharCode(e.which)}return null;case"compositionend":return gt&&"ko"!==e.locale?null:e.data;default:return null}}(t,n))?((e=dt.getPooled(_t.beforeInput,e,n,o)).data=t,Q(e)):e=null,null===i?e:null===e?i:[i,e]}},Ct=null,Ot=null,Pt=null;function kt(t){if(t=E(t)){"function"!=typeof Ct&&a("280");var e=x(t.stateNode);Ct(t.stateNode,t.type,e)}}function Nt(t){Ot?Pt?Pt.push(t):Pt=[t]:Ot=t}function Lt(){if(Ot){var t=Ot,e=Pt;if(Pt=Ot=null,kt(t),e)for(t=0;t<e.length;t++)kt(e[t])}}function Rt(t,e){return t(e)}function Ft(t,e,n){return t(e,n)}function Dt(){}var At=!1;function zt(t,e){if(At)return t(e);At=!0;try{return Rt(t,e)}finally{At=!1,(null!==Ot||null!==Pt)&&(Dt(),Lt())}}var Ut={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Mt(t){var e=t&&t.nodeName&&t.nodeName.toLowerCase();return"input"===e?!!Ut[t.type]:"textarea"===e}function It(t){return(t=t.target||t.srcElement||window).correspondingUseElement&&(t=t.correspondingUseElement),3===t.nodeType?t.parentNode:t}function Wt(t){if(!Z)return!1;var e=(t="on"+t)in document;return e||((e=document.createElement("div")).setAttribute(t,"return;"),e="function"==typeof e[t]),e}function Yt(t){var e=t.type;return(t=t.nodeName)&&"input"===t.toLowerCase()&&("checkbox"===e||"radio"===e)}function $t(t){t._valueTracker||(t._valueTracker=function(t){var e=Yt(t)?"checked":"value",n=Object.getOwnPropertyDescriptor(t.constructor.prototype,e),o=""+t[e];if(!t.hasOwnProperty(e)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var r=n.get,i=n.set;return Object.defineProperty(t,e,{configurable:!0,get:function(){return r.call(this)},set:function(t){o=""+t,i.call(this,t)}}),Object.defineProperty(t,e,{enumerable:n.enumerable}),{getValue:function(){return o},setValue:function(t){o=""+t},stopTracking:function(){t._valueTracker=null,delete t[e]}}}}(t))}function Jt(t){if(!t)return!1;var e=t._valueTracker;if(!e)return!0;var n=e.getValue(),o="";return t&&(o=Yt(t)?t.checked?"true":"false":t.value),(t=o)!==n&&(e.setValue(t),!0)}var Qt=o.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,Zt=/^(.*)[\\\/]/,Xt="function"==typeof Symbol&&Symbol.for,Kt=Xt?Symbol.for("react.element"):60103,jt=Xt?Symbol.for("react.portal"):60106,Vt=Xt?Symbol.for("react.fragment"):60107,Gt=Xt?Symbol.for("react.strict_mode"):60108,Bt=Xt?Symbol.for("react.profiler"):60114,qt=Xt?Symbol.for("react.provider"):60109,Ht=Xt?Symbol.for("react.context"):60110,te=Xt?Symbol.for("react.concurrent_mode"):60111,ee=Xt?Symbol.for("react.forward_ref"):60112,ne=Xt?Symbol.for("react.suspense"):60113,oe=Xt?Symbol.for("react.memo"):60115,re=Xt?Symbol.for("react.lazy"):60116,ie="function"==typeof Symbol&&Symbol.iterator;function ae(t){return null===t||"object"!=typeof t?null:"function"==typeof(t=ie&&t[ie]||t["@@iterator"])?t:null}function le(t){if(null==t)return null;if("function"==typeof t)return t.displayName||t.name||null;if("string"==typeof t)return t;switch(t){case te:return"ConcurrentMode";case Vt:return"Fragment";case jt:return"Portal";case Bt:return"Profiler";case Gt:return"StrictMode";case ne:return"Suspense"}if("object"==typeof t)switch(t.$$typeof){case Ht:return"Context.Consumer";case qt:return"Context.Provider";case ee:var e=t.render;return e=e.displayName||e.name||"",t.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case oe:return le(t.type);case re:if(t=1===t._status?t._result:null)return le(t)}return null}function se(t){var e="";do{t:switch(t.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n="";break t;default:var o=t._debugOwner,r=t._debugSource,i=le(t.type);n=null,o&&(n=le(o.type)),o=i,i="",r?i=" (at "+r.fileName.replace(Zt,"")+":"+r.lineNumber+")":n&&(i=" (created by "+n+")"),n="\n    in "+(o||"Unknown")+i}e+=n,t=t.return}while(t);return e}var ue=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,ce=Object.prototype.hasOwnProperty,pe={},fe={};function de(t,e,n,o,r){this.acceptsBooleans=2===e||3===e||4===e,this.attributeName=o,this.attributeNamespace=r,this.mustUseProperty=n,this.propertyName=t,this.type=e}var he={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(t){he[t]=new de(t,0,!1,t,null)}),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(t){var e=t[0];he[e]=new de(e,1,!1,t[1],null)}),["contentEditable","draggable","spellCheck","value"].forEach(function(t){he[t]=new de(t,2,!1,t.toLowerCase(),null)}),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(t){he[t]=new de(t,2,!1,t,null)}),"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(t){he[t]=new de(t,3,!1,t.toLowerCase(),null)}),["checked","multiple","muted","selected"].forEach(function(t){he[t]=new de(t,3,!0,t,null)}),["capture","download"].forEach(function(t){he[t]=new de(t,4,!1,t,null)}),["cols","rows","size","span"].forEach(function(t){he[t]=new de(t,6,!1,t,null)}),["rowSpan","start"].forEach(function(t){he[t]=new de(t,5,!1,t.toLowerCase(),null)});var ye=/[\-:]([a-z])/g;function me(t){return t[1].toUpperCase()}function ve(t,e,n,o){var r=he.hasOwnProperty(e)?he[e]:null;(null!==r?0===r.type:!o&&(2<e.length&&("o"===e[0]||"O"===e[0])&&("n"===e[1]||"N"===e[1])))||(function(t,e,n,o){if(null==e||function(t,e,n,o){if(null!==n&&0===n.type)return!1;switch(typeof e){case"function":case"symbol":return!0;case"boolean":return!o&&(null!==n?!n.acceptsBooleans:"data-"!==(t=t.toLowerCase().slice(0,5))&&"aria-"!==t);default:return!1}}(t,e,n,o))return!0;if(o)return!1;if(null!==n)switch(n.type){case 3:return!e;case 4:return!1===e;case 5:return isNaN(e);case 6:return isNaN(e)||1>e}return!1}(e,n,r,o)&&(n=null),o||null===r?function(t){return!!ce.call(fe,t)||!ce.call(pe,t)&&(ue.test(t)?fe[t]=!0:(pe[t]=!0,!1))}(e)&&(null===n?t.removeAttribute(e):t.setAttribute(e,""+n)):r.mustUseProperty?t[r.propertyName]=null===n?3!==r.type&&"":n:(e=r.attributeName,o=r.attributeNamespace,null===n?t.removeAttribute(e):(n=3===(r=r.type)||4===r&&!0===n?"":""+n,o?t.setAttributeNS(o,e,n):t.setAttribute(e,n))))}function ge(t){switch(typeof t){case"boolean":case"number":case"object":case"string":case"undefined":return t;default:return""}}function we(t,e){var n=e.checked;return r({},e,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:t._wrapperState.initialChecked})}function _e(t,e){var n=null==e.defaultValue?"":e.defaultValue,o=null!=e.checked?e.checked:e.defaultChecked;n=ge(null!=e.value?e.value:n),t._wrapperState={initialChecked:o,initialValue:n,controlled:"checkbox"===e.type||"radio"===e.type?null!=e.checked:null!=e.value}}function xe(t,e){null!=(e=e.checked)&&ve(t,"checked",e,!1)}function Ee(t,e){xe(t,e);var n=ge(e.value),o=e.type;if(null!=n)"number"===o?(0===n&&""===t.value||t.value!=n)&&(t.value=""+n):t.value!==""+n&&(t.value=""+n);else if("submit"===o||"reset"===o)return void t.removeAttribute("value");e.hasOwnProperty("value")?Se(t,e.type,n):e.hasOwnProperty("defaultValue")&&Se(t,e.type,ge(e.defaultValue)),null==e.checked&&null!=e.defaultChecked&&(t.defaultChecked=!!e.defaultChecked)}function be(t,e,n){if(e.hasOwnProperty("value")||e.hasOwnProperty("defaultValue")){var o=e.type;if(!("submit"!==o&&"reset"!==o||void 0!==e.value&&null!==e.value))return;e=""+t._wrapperState.initialValue,n||e===t.value||(t.value=e),t.defaultValue=e}""!==(n=t.name)&&(t.name=""),t.defaultChecked=!t.defaultChecked,t.defaultChecked=!!t._wrapperState.initialChecked,""!==n&&(t.name=n)}function Se(t,e,n){"number"===e&&t.ownerDocument.activeElement===t||(null==n?t.defaultValue=""+t._wrapperState.initialValue:t.defaultValue!==""+n&&(t.defaultValue=""+n))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(t){var e=t.replace(ye,me);he[e]=new de(e,1,!1,t,null)}),"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(t){var e=t.replace(ye,me);he[e]=new de(e,1,!1,t,"http://www.w3.org/1999/xlink")}),["xml:base","xml:lang","xml:space"].forEach(function(t){var e=t.replace(ye,me);he[e]=new de(e,1,!1,t,"http://www.w3.org/XML/1998/namespace")}),he.tabIndex=new de("tabIndex",1,!1,"tabindex",null);var Te={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function Ce(t,e,n){return(t=st.getPooled(Te.change,t,e,n)).type="change",Nt(n),Q(t),t}var Oe=null,Pe=null;function ke(t){L(t)}function Ne(t){if(Jt(U(t)))return t}function Le(t,e){if("change"===t)return e}var Re=!1;function Fe(){Oe&&(Oe.detachEvent("onpropertychange",De),Pe=Oe=null)}function De(t){"value"===t.propertyName&&Ne(Pe)&&zt(ke,t=Ce(Pe,t,It(t)))}function Ae(t,e,n){"focus"===t?(Fe(),Pe=n,(Oe=e).attachEvent("onpropertychange",De)):"blur"===t&&Fe()}function ze(t){if("selectionchange"===t||"keyup"===t||"keydown"===t)return Ne(Pe)}function Ue(t,e){if("click"===t)return Ne(e)}function Me(t,e){if("input"===t||"change"===t)return Ne(e)}Z&&(Re=Wt("input")&&(!document.documentMode||9<document.documentMode));var Ie={eventTypes:Te,_isInputEventSupported:Re,extractEvents:function(t,e,n,o){var r=e?U(e):window,i=void 0,a=void 0,l=r.nodeName&&r.nodeName.toLowerCase();if("select"===l||"input"===l&&"file"===r.type?i=Le:Mt(r)?Re?i=Me:(i=ze,a=Ae):(l=r.nodeName)&&"input"===l.toLowerCase()&&("checkbox"===r.type||"radio"===r.type)&&(i=Ue),i&&(i=i(t,e)))return Ce(i,n,o);a&&a(t,r,e),"blur"===t&&(t=r._wrapperState)&&t.controlled&&"number"===r.type&&Se(r,"number",r.value)}},We=st.extend({view:null,detail:null}),Ye={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function $e(t){var e=this.nativeEvent;return e.getModifierState?e.getModifierState(t):!!(t=Ye[t])&&!!e[t]}function Je(){return $e}var Qe=0,Ze=0,Xe=!1,Ke=!1,je=We.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Je,button:null,buttons:null,relatedTarget:function(t){return t.relatedTarget||(t.fromElement===t.srcElement?t.toElement:t.fromElement)},movementX:function(t){if("movementX"in t)return t.movementX;var e=Qe;return Qe=t.screenX,Xe?"mousemove"===t.type?t.screenX-e:0:(Xe=!0,0)},movementY:function(t){if("movementY"in t)return t.movementY;var e=Ze;return Ze=t.screenY,Ke?"mousemove"===t.type?t.screenY-e:0:(Ke=!0,0)}}),Ve=je.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Ge={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},Be={eventTypes:Ge,extractEvents:function(t,e,n,o){var r="mouseover"===t||"pointerover"===t,i="mouseout"===t||"pointerout"===t;if(r&&(n.relatedTarget||n.fromElement)||!i&&!r)return null;if(r=o.window===o?o:(r=o.ownerDocument)?r.defaultView||r.parentWindow:window,i?(i=e,e=(e=n.relatedTarget||n.toElement)?A(e):null):i=null,i===e)return null;var a=void 0,l=void 0,s=void 0,u=void 0;"mouseout"===t||"mouseover"===t?(a=je,l=Ge.mouseLeave,s=Ge.mouseEnter,u="mouse"):"pointerout"!==t&&"pointerover"!==t||(a=Ve,l=Ge.pointerLeave,s=Ge.pointerEnter,u="pointer");var c=null==i?r:U(i);if(r=null==e?r:U(e),(t=a.getPooled(l,i,n,o)).type=u+"leave",t.target=c,t.relatedTarget=r,(n=a.getPooled(s,e,n,o)).type=u+"enter",n.target=r,n.relatedTarget=c,o=e,i&&o)t:{for(r=o,u=0,a=e=i;a;a=I(a))u++;for(a=0,s=r;s;s=I(s))a++;for(;0<u-a;)e=I(e),u--;for(;0<a-u;)r=I(r),a--;for(;u--;){if(e===r||e===r.alternate)break t;e=I(e),r=I(r)}e=null}else e=null;for(r=e,e=[];i&&i!==r&&(null===(u=i.alternate)||u!==r);)e.push(i),i=I(i);for(i=[];o&&o!==r&&(null===(u=o.alternate)||u!==r);)i.push(o),o=I(o);for(o=0;o<e.length;o++)$(e[o],"bubbled",t);for(o=i.length;0<o--;)$(i[o],"captured",n);return[t,n]}},qe=Object.prototype.hasOwnProperty;function He(t,e){return t===e?0!==t||0!==e||1/t==1/e:t!=t&&e!=e}function tn(t,e){if(He(t,e))return!0;if("object"!=typeof t||null===t||"object"!=typeof e||null===e)return!1;var n=Object.keys(t),o=Object.keys(e);if(n.length!==o.length)return!1;for(o=0;o<n.length;o++)if(!qe.call(e,n[o])||!He(t[n[o]],e[n[o]]))return!1;return!0}function en(t){var e=t;if(t.alternate)for(;e.return;)e=e.return;else{if(0!=(2&e.effectTag))return 1;for(;e.return;)if(0!=(2&(e=e.return).effectTag))return 1}return 3===e.tag?2:3}function nn(t){2!==en(t)&&a("188")}function on(t){if(!(t=function(t){var e=t.alternate;if(!e)return 3===(e=en(t))&&a("188"),1===e?null:t;for(var n=t,o=e;;){var r=n.return,i=r?r.alternate:null;if(!r||!i)break;if(r.child===i.child){for(var l=r.child;l;){if(l===n)return nn(r),t;if(l===o)return nn(r),e;l=l.sibling}a("188")}if(n.return!==o.return)n=r,o=i;else{l=!1;for(var s=r.child;s;){if(s===n){l=!0,n=r,o=i;break}if(s===o){l=!0,o=r,n=i;break}s=s.sibling}if(!l){for(s=i.child;s;){if(s===n){l=!0,n=i,o=r;break}if(s===o){l=!0,o=i,n=r;break}s=s.sibling}l||a("189")}}n.alternate!==o&&a("190")}return 3!==n.tag&&a("188"),n.stateNode.current===n?t:e}(t)))return null;for(var e=t;;){if(5===e.tag||6===e.tag)return e;if(e.child)e.child.return=e,e=e.child;else{if(e===t)break;for(;!e.sibling;){if(!e.return||e.return===t)return null;e=e.return}e.sibling.return=e.return,e=e.sibling}}return null}var rn=st.extend({animationName:null,elapsedTime:null,pseudoElement:null}),an=st.extend({clipboardData:function(t){return"clipboardData"in t?t.clipboardData:window.clipboardData}}),ln=We.extend({relatedTarget:null});function sn(t){var e=t.keyCode;return"charCode"in t?0===(t=t.charCode)&&13===e&&(t=13):t=e,10===t&&(t=13),32<=t||13===t?t:0}var un={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},cn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},pn=We.extend({key:function(t){if(t.key){var e=un[t.key]||t.key;if("Unidentified"!==e)return e}return"keypress"===t.type?13===(t=sn(t))?"Enter":String.fromCharCode(t):"keydown"===t.type||"keyup"===t.type?cn[t.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Je,charCode:function(t){return"keypress"===t.type?sn(t):0},keyCode:function(t){return"keydown"===t.type||"keyup"===t.type?t.keyCode:0},which:function(t){return"keypress"===t.type?sn(t):"keydown"===t.type||"keyup"===t.type?t.keyCode:0}}),fn=je.extend({dataTransfer:null}),dn=We.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Je}),hn=st.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),yn=je.extend({deltaX:function(t){return"deltaX"in t?t.deltaX:"wheelDeltaX"in t?-t.wheelDeltaX:0},deltaY:function(t){return"deltaY"in t?t.deltaY:"wheelDeltaY"in t?-t.wheelDeltaY:"wheelDelta"in t?-t.wheelDelta:0},deltaZ:null,deltaMode:null}),mn=[["abort","abort"],[B,"animationEnd"],[q,"animationIteration"],[H,"animationStart"],["canplay","canPlay"],["canplaythrough","canPlayThrough"],["drag","drag"],["dragenter","dragEnter"],["dragexit","dragExit"],["dragleave","dragLeave"],["dragover","dragOver"],["durationchange","durationChange"],["emptied","emptied"],["encrypted","encrypted"],["ended","ended"],["error","error"],["gotpointercapture","gotPointerCapture"],["load","load"],["loadeddata","loadedData"],["loadedmetadata","loadedMetadata"],["loadstart","loadStart"],["lostpointercapture","lostPointerCapture"],["mousemove","mouseMove"],["mouseout","mouseOut"],["mouseover","mouseOver"],["playing","playing"],["pointermove","pointerMove"],["pointerout","pointerOut"],["pointerover","pointerOver"],["progress","progress"],["scroll","scroll"],["seeking","seeking"],["stalled","stalled"],["suspend","suspend"],["timeupdate","timeUpdate"],["toggle","toggle"],["touchmove","touchMove"],[tt,"transitionEnd"],["waiting","waiting"],["wheel","wheel"]],vn={},gn={};function wn(t,e){var n=t[0],o="on"+((t=t[1])[0].toUpperCase()+t.slice(1));e={phasedRegistrationNames:{bubbled:o,captured:o+"Capture"},dependencies:[n],isInteractive:e},vn[t]=e,gn[n]=e}[["blur","blur"],["cancel","cancel"],["click","click"],["close","close"],["contextmenu","contextMenu"],["copy","copy"],["cut","cut"],["auxclick","auxClick"],["dblclick","doubleClick"],["dragend","dragEnd"],["dragstart","dragStart"],["drop","drop"],["focus","focus"],["input","input"],["invalid","invalid"],["keydown","keyDown"],["keypress","keyPress"],["keyup","keyUp"],["mousedown","mouseDown"],["mouseup","mouseUp"],["paste","paste"],["pause","pause"],["play","play"],["pointercancel","pointerCancel"],["pointerdown","pointerDown"],["pointerup","pointerUp"],["ratechange","rateChange"],["reset","reset"],["seeked","seeked"],["submit","submit"],["touchcancel","touchCancel"],["touchend","touchEnd"],["touchstart","touchStart"],["volumechange","volumeChange"]].forEach(function(t){wn(t,!0)}),mn.forEach(function(t){wn(t,!1)});var _n={eventTypes:vn,isInteractiveTopLevelEventType:function(t){return void 0!==(t=gn[t])&&!0===t.isInteractive},extractEvents:function(t,e,n,o){var r=gn[t];if(!r)return null;switch(t){case"keypress":if(0===sn(n))return null;case"keydown":case"keyup":t=pn;break;case"blur":case"focus":t=ln;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":t=je;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":t=fn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":t=dn;break;case B:case q:case H:t=rn;break;case tt:t=hn;break;case"scroll":t=We;break;case"wheel":t=yn;break;case"copy":case"cut":case"paste":t=an;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":t=Ve;break;default:t=st}return Q(e=t.getPooled(r,e,n,o)),e}},xn=_n.isInteractiveTopLevelEventType,En=[];function bn(t){var e=t.targetInst,n=e;do{if(!n){t.ancestors.push(n);break}var o;for(o=n;o.return;)o=o.return;if(!(o=3!==o.tag?null:o.stateNode.containerInfo))break;t.ancestors.push(n),n=A(o)}while(n);for(n=0;n<t.ancestors.length;n++){e=t.ancestors[n];var r=It(t.nativeEvent);o=t.topLevelType;for(var i=t.nativeEvent,a=null,l=0;l<v.length;l++){var s=v[l];s&&(s=s.extractEvents(o,e,i,r))&&(a=T(a,s))}L(a)}}var Sn=!0;function Tn(t,e){if(!e)return null;var n=(xn(t)?On:Pn).bind(null,t);e.addEventListener(t,n,!1)}function Cn(t,e){if(!e)return null;var n=(xn(t)?On:Pn).bind(null,t);e.addEventListener(t,n,!0)}function On(t,e){Ft(Pn,t,e)}function Pn(t,e){if(Sn){var n=It(e);if(null===(n=A(n))||"number"!=typeof n.tag||2===en(n)||(n=null),En.length){var o=En.pop();o.topLevelType=t,o.nativeEvent=e,o.targetInst=n,t=o}else t={topLevelType:t,nativeEvent:e,targetInst:n,ancestors:[]};try{zt(bn,t)}finally{t.topLevelType=null,t.nativeEvent=null,t.targetInst=null,t.ancestors.length=0,10>En.length&&En.push(t)}}}var kn={},Nn=0,Ln="_reactListenersID"+(""+Math.random()).slice(2);function Rn(t){return Object.prototype.hasOwnProperty.call(t,Ln)||(t[Ln]=Nn++,kn[t[Ln]]={}),kn[t[Ln]]}function Fn(t){if(void 0===(t=t||("undefined"!=typeof document?document:void 0)))return null;try{return t.activeElement||t.body}catch(e){return t.body}}function Dn(t){for(;t&&t.firstChild;)t=t.firstChild;return t}function An(t,e){var n,o=Dn(t);for(t=0;o;){if(3===o.nodeType){if(n=t+o.textContent.length,t<=e&&n>=e)return{node:o,offset:e-t};t=n}t:{for(;o;){if(o.nextSibling){o=o.nextSibling;break t}o=o.parentNode}o=void 0}o=Dn(o)}}function zn(){for(var t=window,e=Fn();e instanceof t.HTMLIFrameElement;){try{t=e.contentDocument.defaultView}catch(t){break}e=Fn(t.document)}return e}function Un(t){var e=t&&t.nodeName&&t.nodeName.toLowerCase();return e&&("input"===e&&("text"===t.type||"search"===t.type||"tel"===t.type||"url"===t.type||"password"===t.type)||"textarea"===e||"true"===t.contentEditable)}var Mn=Z&&"documentMode"in document&&11>=document.documentMode,In={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},Wn=null,Yn=null,$n=null,Jn=!1;function Qn(t,e){var n=e.window===e?e.document:9===e.nodeType?e:e.ownerDocument;return Jn||null==Wn||Wn!==Fn(n)?null:("selectionStart"in(n=Wn)&&Un(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},$n&&tn($n,n)?null:($n=n,(t=st.getPooled(In.select,Yn,t,e)).type="select",t.target=Wn,Q(t),t))}var Zn={eventTypes:In,extractEvents:function(t,e,n,o){var r,i=o.window===o?o.document:9===o.nodeType?o:o.ownerDocument;if(!(r=!i)){t:{i=Rn(i),r=_.onSelect;for(var a=0;a<r.length;a++){var l=r[a];if(!i.hasOwnProperty(l)||!i[l]){i=!1;break t}}i=!0}r=!i}if(r)return null;switch(i=e?U(e):window,t){case"focus":(Mt(i)||"true"===i.contentEditable)&&(Wn=i,Yn=e,$n=null);break;case"blur":$n=Yn=Wn=null;break;case"mousedown":Jn=!0;break;case"contextmenu":case"mouseup":case"dragend":return Jn=!1,Qn(n,o);case"selectionchange":if(Mn)break;case"keydown":case"keyup":return Qn(n,o)}return null}};function Xn(t,e){return t=r({children:void 0},e),(e=function(t){var e="";return o.Children.forEach(t,function(t){null!=t&&(e+=t)}),e}(e.children))&&(t.children=e),t}function Kn(t,e,n,o){if(t=t.options,e){e={};for(var r=0;r<n.length;r++)e["$"+n[r]]=!0;for(n=0;n<t.length;n++)r=e.hasOwnProperty("$"+t[n].value),t[n].selected!==r&&(t[n].selected=r),r&&o&&(t[n].defaultSelected=!0)}else{for(n=""+ge(n),e=null,r=0;r<t.length;r++){if(t[r].value===n)return t[r].selected=!0,void(o&&(t[r].defaultSelected=!0));null!==e||t[r].disabled||(e=t[r])}null!==e&&(e.selected=!0)}}function jn(t,e){return null!=e.dangerouslySetInnerHTML&&a("91"),r({},e,{value:void 0,defaultValue:void 0,children:""+t._wrapperState.initialValue})}function Vn(t,e){var n=e.value;null==n&&(n=e.defaultValue,null!=(e=e.children)&&(null!=n&&a("92"),Array.isArray(e)&&(1>=e.length||a("93"),e=e[0]),n=e),null==n&&(n="")),t._wrapperState={initialValue:ge(n)}}function Gn(t,e){var n=ge(e.value),o=ge(e.defaultValue);null!=n&&((n=""+n)!==t.value&&(t.value=n),null==e.defaultValue&&t.defaultValue!==n&&(t.defaultValue=n)),null!=o&&(t.defaultValue=""+o)}function Bn(t){var e=t.textContent;e===t._wrapperState.initialValue&&(t.value=e)}k.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),x=M,E=z,b=U,k.injectEventPluginsByName({SimpleEventPlugin:_n,EnterLeaveEventPlugin:Be,ChangeEventPlugin:Ie,SelectEventPlugin:Zn,BeforeInputEventPlugin:Tt});var qn={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};function Hn(t){switch(t){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function to(t,e){return null==t||"http://www.w3.org/1999/xhtml"===t?Hn(e):"http://www.w3.org/2000/svg"===t&&"foreignObject"===e?"http://www.w3.org/1999/xhtml":t}var eo,no=void 0,oo=(eo=function(t,e){if(t.namespaceURI!==qn.svg||"innerHTML"in t)t.innerHTML=e;else{for((no=no||document.createElement("div")).innerHTML="<svg>"+e+"</svg>",e=no.firstChild;t.firstChild;)t.removeChild(t.firstChild);for(;e.firstChild;)t.appendChild(e.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(t,e,n,o){MSApp.execUnsafeLocalFunction(function(){return eo(t,e)})}:eo);function ro(t,e){if(e){var n=t.firstChild;if(n&&n===t.lastChild&&3===n.nodeType)return void(n.nodeValue=e)}t.textContent=e}var io={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},ao=["Webkit","ms","Moz","O"];function lo(t,e,n){return null==e||"boolean"==typeof e||""===e?"":n||"number"!=typeof e||0===e||io.hasOwnProperty(t)&&io[t]?(""+e).trim():e+"px"}function so(t,e){for(var n in t=t.style,e)if(e.hasOwnProperty(n)){var o=0===n.indexOf("--"),r=lo(n,e[n],o);"float"===n&&(n="cssFloat"),o?t.setProperty(n,r):t[n]=r}}Object.keys(io).forEach(function(t){ao.forEach(function(e){e=e+t.charAt(0).toUpperCase()+t.substring(1),io[e]=io[t]})});var uo=r({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function co(t,e){e&&(uo[t]&&(null!=e.children||null!=e.dangerouslySetInnerHTML)&&a("137",t,""),null!=e.dangerouslySetInnerHTML&&(null!=e.children&&a("60"),"object"==typeof e.dangerouslySetInnerHTML&&"__html"in e.dangerouslySetInnerHTML||a("61")),null!=e.style&&"object"!=typeof e.style&&a("62",""))}function po(t,e){if(-1===t.indexOf("-"))return"string"==typeof e.is;switch(t){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function fo(t,e){var n=Rn(t=9===t.nodeType||11===t.nodeType?t:t.ownerDocument);e=_[e];for(var o=0;o<e.length;o++){var r=e[o];if(!n.hasOwnProperty(r)||!n[r]){switch(r){case"scroll":Cn("scroll",t);break;case"focus":case"blur":Cn("focus",t),Cn("blur",t),n.blur=!0,n.focus=!0;break;case"cancel":case"close":Wt(r)&&Cn(r,t);break;case"invalid":case"submit":case"reset":break;default:-1===et.indexOf(r)&&Tn(r,t)}n[r]=!0}}}function ho(){}var yo=null,mo=null;function vo(t,e){switch(t){case"button":case"input":case"select":case"textarea":return!!e.autoFocus}return!1}function go(t,e){return"textarea"===t||"option"===t||"noscript"===t||"string"==typeof e.children||"number"==typeof e.children||"object"==typeof e.dangerouslySetInnerHTML&&null!==e.dangerouslySetInnerHTML&&null!=e.dangerouslySetInnerHTML.__html}var wo="function"==typeof setTimeout?setTimeout:void 0,_o="function"==typeof clearTimeout?clearTimeout:void 0;function xo(t){for(t=t.nextSibling;t&&1!==t.nodeType&&3!==t.nodeType;)t=t.nextSibling;return t}function Eo(t){for(t=t.firstChild;t&&1!==t.nodeType&&3!==t.nodeType;)t=t.nextSibling;return t}new Set;var bo=[],So=-1;function To(t){0>So||(t.current=bo[So],bo[So]=null,So--)}function Co(t,e){bo[++So]=t.current,t.current=e}var Oo={},Po={current:Oo},ko={current:!1},No=Oo;function Lo(t,e){var n=t.type.contextTypes;if(!n)return Oo;var o=t.stateNode;if(o&&o.__reactInternalMemoizedUnmaskedChildContext===e)return o.__reactInternalMemoizedMaskedChildContext;var r,i={};for(r in n)i[r]=e[r];return o&&((t=t.stateNode).__reactInternalMemoizedUnmaskedChildContext=e,t.__reactInternalMemoizedMaskedChildContext=i),i}function Ro(t){return null!=(t=t.childContextTypes)}function Fo(t){To(ko),To(Po)}function Do(t){To(ko),To(Po)}function Ao(t,e,n){Po.current!==Oo&&a("168"),Co(Po,e),Co(ko,n)}function zo(t,e,n){var o=t.stateNode;if(t=e.childContextTypes,"function"!=typeof o.getChildContext)return n;for(var i in o=o.getChildContext())i in t||a("108",le(e)||"Unknown",i);return r({},n,o)}function Uo(t){var e=t.stateNode;return e=e&&e.__reactInternalMemoizedMergedChildContext||Oo,No=Po.current,Co(Po,e),Co(ko,ko.current),!0}function Mo(t,e,n){var o=t.stateNode;o||a("169"),n?(e=zo(t,e,No),o.__reactInternalMemoizedMergedChildContext=e,To(ko),To(Po),Co(Po,e)):To(ko),Co(ko,n)}var Io=null,Wo=null;function Yo(t){return function(e){try{return t(e)}catch(t){}}}function $o(t,e,n,o){this.tag=t,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=e,this.firstContextDependency=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=o,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function Jo(t,e,n,o){return new $o(t,e,n,o)}function Qo(t){return!(!(t=t.prototype)||!t.isReactComponent)}function Zo(t,e){var n=t.alternate;return null===n?((n=Jo(t.tag,e,t.key,t.mode)).elementType=t.elementType,n.type=t.type,n.stateNode=t.stateNode,n.alternate=t,t.alternate=n):(n.pendingProps=e,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=t.childExpirationTime,n.expirationTime=t.expirationTime,n.child=t.child,n.memoizedProps=t.memoizedProps,n.memoizedState=t.memoizedState,n.updateQueue=t.updateQueue,n.firstContextDependency=t.firstContextDependency,n.sibling=t.sibling,n.index=t.index,n.ref=t.ref,n}function Xo(t,e,n,o,r,i){var l=2;if(o=t,"function"==typeof t)Qo(t)&&(l=1);else if("string"==typeof t)l=5;else t:switch(t){case Vt:return Ko(n.children,r,i,e);case te:return jo(n,3|r,i,e);case Gt:return jo(n,2|r,i,e);case Bt:return(t=Jo(12,n,e,4|r)).elementType=Bt,t.type=Bt,t.expirationTime=i,t;case ne:return(t=Jo(13,n,e,r)).elementType=ne,t.type=ne,t.expirationTime=i,t;default:if("object"==typeof t&&null!==t)switch(t.$$typeof){case qt:l=10;break t;case Ht:l=9;break t;case ee:l=11;break t;case oe:l=14;break t;case re:l=16,o=null;break t}a("130",null==t?t:typeof t,"")}return(e=Jo(l,n,e,r)).elementType=t,e.type=o,e.expirationTime=i,e}function Ko(t,e,n,o){return(t=Jo(7,t,o,e)).expirationTime=n,t}function jo(t,e,n,o){return t=Jo(8,t,o,e),e=0==(1&e)?Gt:te,t.elementType=e,t.type=e,t.expirationTime=n,t}function Vo(t,e,n){return(t=Jo(6,t,null,e)).expirationTime=n,t}function Go(t,e,n){return(e=Jo(4,null!==t.children?t.children:[],t.key,e)).expirationTime=n,e.stateNode={containerInfo:t.containerInfo,pendingChildren:null,implementation:t.implementation},e}function Bo(t,e){t.didError=!1;var n=t.earliestPendingTime;0===n?t.earliestPendingTime=t.latestPendingTime=e:n<e?t.earliestPendingTime=e:t.latestPendingTime>e&&(t.latestPendingTime=e),tr(e,t)}function qo(t,e){t.didError=!1,t.latestPingedTime>=e&&(t.latestPingedTime=0);var n=t.earliestPendingTime,o=t.latestPendingTime;n===e?t.earliestPendingTime=o===e?t.latestPendingTime=0:o:o===e&&(t.latestPendingTime=n),n=t.earliestSuspendedTime,o=t.latestSuspendedTime,0===n?t.earliestSuspendedTime=t.latestSuspendedTime=e:n<e?t.earliestSuspendedTime=e:o>e&&(t.latestSuspendedTime=e),tr(e,t)}function Ho(t,e){var n=t.earliestPendingTime;return n>e&&(e=n),(t=t.earliestSuspendedTime)>e&&(e=t),e}function tr(t,e){var n=e.earliestSuspendedTime,o=e.latestSuspendedTime,r=e.earliestPendingTime,i=e.latestPingedTime;0===(r=0!==r?r:i)&&(0===t||o<t)&&(r=o),0!==(t=r)&&n>t&&(t=n),e.nextExpirationTimeToWorkOn=r,e.expirationTime=t}var er=!1;function nr(t){return{baseState:t,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function or(t){return{baseState:t.baseState,firstUpdate:t.firstUpdate,lastUpdate:t.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function rr(t){return{expirationTime:t,tag:0,payload:null,callback:null,next:null,nextEffect:null}}function ir(t,e){null===t.lastUpdate?t.firstUpdate=t.lastUpdate=e:(t.lastUpdate.next=e,t.lastUpdate=e)}function ar(t,e){var n=t.alternate;if(null===n){var o=t.updateQueue,r=null;null===o&&(o=t.updateQueue=nr(t.memoizedState))}else o=t.updateQueue,r=n.updateQueue,null===o?null===r?(o=t.updateQueue=nr(t.memoizedState),r=n.updateQueue=nr(n.memoizedState)):o=t.updateQueue=or(r):null===r&&(r=n.updateQueue=or(o));null===r||o===r?ir(o,e):null===o.lastUpdate||null===r.lastUpdate?(ir(o,e),ir(r,e)):(ir(o,e),r.lastUpdate=e)}function lr(t,e){var n=t.updateQueue;null===(n=null===n?t.updateQueue=nr(t.memoizedState):sr(t,n)).lastCapturedUpdate?n.firstCapturedUpdate=n.lastCapturedUpdate=e:(n.lastCapturedUpdate.next=e,n.lastCapturedUpdate=e)}function sr(t,e){var n=t.alternate;return null!==n&&e===n.updateQueue&&(e=t.updateQueue=or(e)),e}function ur(t,e,n,o,i,a){switch(n.tag){case 1:return"function"==typeof(t=n.payload)?t.call(a,o,i):t;case 3:t.effectTag=-2049&t.effectTag|64;case 0:if(null==(i="function"==typeof(t=n.payload)?t.call(a,o,i):t))break;return r({},o,i);case 2:er=!0}return o}function cr(t,e,n,o,r){er=!1;for(var i=(e=sr(t,e)).baseState,a=null,l=0,s=e.firstUpdate,u=i;null!==s;){var c=s.expirationTime;c<r?(null===a&&(a=s,i=u),l<c&&(l=c)):(u=ur(t,0,s,u,n,o),null!==s.callback&&(t.effectTag|=32,s.nextEffect=null,null===e.lastEffect?e.firstEffect=e.lastEffect=s:(e.lastEffect.nextEffect=s,e.lastEffect=s))),s=s.next}for(c=null,s=e.firstCapturedUpdate;null!==s;){var p=s.expirationTime;p<r?(null===c&&(c=s,null===a&&(i=u)),l<p&&(l=p)):(u=ur(t,0,s,u,n,o),null!==s.callback&&(t.effectTag|=32,s.nextEffect=null,null===e.lastCapturedEffect?e.firstCapturedEffect=e.lastCapturedEffect=s:(e.lastCapturedEffect.nextEffect=s,e.lastCapturedEffect=s))),s=s.next}null===a&&(e.lastUpdate=null),null===c?e.lastCapturedUpdate=null:t.effectTag|=32,null===a&&null===c&&(i=u),e.baseState=i,e.firstUpdate=a,e.firstCapturedUpdate=c,t.expirationTime=l,t.memoizedState=u}function pr(t,e,n){null!==e.firstCapturedUpdate&&(null!==e.lastUpdate&&(e.lastUpdate.next=e.firstCapturedUpdate,e.lastUpdate=e.lastCapturedUpdate),e.firstCapturedUpdate=e.lastCapturedUpdate=null),fr(e.firstEffect,n),e.firstEffect=e.lastEffect=null,fr(e.firstCapturedEffect,n),e.firstCapturedEffect=e.lastCapturedEffect=null}function fr(t,e){for(;null!==t;){var n=t.callback;if(null!==n){t.callback=null;var o=e;"function"!=typeof n&&a("191",n),n.call(o)}t=t.nextEffect}}function dr(t,e){return{value:t,source:e,stack:se(e)}}var hr={current:null},yr=null,mr=null,vr=null;function gr(t,e){var n=t.type._context;Co(hr,n._currentValue),n._currentValue=e}function wr(t){var e=hr.current;To(hr),t.type._context._currentValue=e}function _r(t){yr=t,vr=mr=null,t.firstContextDependency=null}function xr(t,e){return vr!==t&&!1!==e&&0!==e&&("number"==typeof e&&1073741823!==e||(vr=t,e=1073741823),e={context:t,observedBits:e,next:null},null===mr?(null===yr&&a("293"),yr.firstContextDependency=mr=e):mr=mr.next=e),t._currentValue}var Er={},br={current:Er},Sr={current:Er},Tr={current:Er};function Cr(t){return t===Er&&a("174"),t}function Or(t,e){Co(Tr,e),Co(Sr,t),Co(br,Er);var n=e.nodeType;switch(n){case 9:case 11:e=(e=e.documentElement)?e.namespaceURI:to(null,"");break;default:e=to(e=(n=8===n?e.parentNode:e).namespaceURI||null,n=n.tagName)}To(br),Co(br,e)}function Pr(t){To(br),To(Sr),To(Tr)}function kr(t){Cr(Tr.current);var e=Cr(br.current),n=to(e,t.type);e!==n&&(Co(Sr,t),Co(br,n))}function Nr(t){Sr.current===t&&(To(br),To(Sr))}function Lr(t,e){if(t&&t.defaultProps)for(var n in e=r({},e),t=t.defaultProps)void 0===e[n]&&(e[n]=t[n]);return e}var Rr=Qt.ReactCurrentOwner,Fr=(new o.Component).refs;function Dr(t,e,n,o){n=null==(n=n(o,e=t.memoizedState))?e:r({},e,n),t.memoizedState=n,null!==(o=t.updateQueue)&&0===t.expirationTime&&(o.baseState=n)}var Ar={isMounted:function(t){return!!(t=t._reactInternalFiber)&&2===en(t)},enqueueSetState:function(t,e,n){t=t._reactInternalFiber;var o=Ca(),r=rr(o=qi(o,t));r.payload=e,null!=n&&(r.callback=n),Ki(),ar(t,r),ea(t,o)},enqueueReplaceState:function(t,e,n){t=t._reactInternalFiber;var o=Ca(),r=rr(o=qi(o,t));r.tag=1,r.payload=e,null!=n&&(r.callback=n),Ki(),ar(t,r),ea(t,o)},enqueueForceUpdate:function(t,e){t=t._reactInternalFiber;var n=Ca(),o=rr(n=qi(n,t));o.tag=2,null!=e&&(o.callback=e),Ki(),ar(t,o),ea(t,n)}};function zr(t,e,n,o,r,i,a){return"function"==typeof(t=t.stateNode).shouldComponentUpdate?t.shouldComponentUpdate(o,i,a):!e.prototype||!e.prototype.isPureReactComponent||(!tn(n,o)||!tn(r,i))}function Ur(t,e,n){var o=!1,r=Oo,i=e.contextType;return"object"==typeof i&&null!==i?i=Rr.currentDispatcher.readContext(i):(r=Ro(e)?No:Po.current,i=(o=null!=(o=e.contextTypes))?Lo(t,r):Oo),e=new e(n,i),t.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,e.updater=Ar,t.stateNode=e,e._reactInternalFiber=t,o&&((t=t.stateNode).__reactInternalMemoizedUnmaskedChildContext=r,t.__reactInternalMemoizedMaskedChildContext=i),e}function Mr(t,e,n,o){t=e.state,"function"==typeof e.componentWillReceiveProps&&e.componentWillReceiveProps(n,o),"function"==typeof e.UNSAFE_componentWillReceiveProps&&e.UNSAFE_componentWillReceiveProps(n,o),e.state!==t&&Ar.enqueueReplaceState(e,e.state,null)}function Ir(t,e,n,o){var r=t.stateNode;r.props=n,r.state=t.memoizedState,r.refs=Fr;var i=e.contextType;"object"==typeof i&&null!==i?r.context=Rr.currentDispatcher.readContext(i):(i=Ro(e)?No:Po.current,r.context=Lo(t,i)),null!==(i=t.updateQueue)&&(cr(t,i,n,r,o),r.state=t.memoizedState),"function"==typeof(i=e.getDerivedStateFromProps)&&(Dr(t,e,i,n),r.state=t.memoizedState),"function"==typeof e.getDerivedStateFromProps||"function"==typeof r.getSnapshotBeforeUpdate||"function"!=typeof r.UNSAFE_componentWillMount&&"function"!=typeof r.componentWillMount||(e=r.state,"function"==typeof r.componentWillMount&&r.componentWillMount(),"function"==typeof r.UNSAFE_componentWillMount&&r.UNSAFE_componentWillMount(),e!==r.state&&Ar.enqueueReplaceState(r,r.state,null),null!==(i=t.updateQueue)&&(cr(t,i,n,r,o),r.state=t.memoizedState)),"function"==typeof r.componentDidMount&&(t.effectTag|=4)}var Wr=Array.isArray;function Yr(t,e,n){if(null!==(t=n.ref)&&"function"!=typeof t&&"object"!=typeof t){if(n._owner){n=n._owner;var o=void 0;n&&(1!==n.tag&&a("289"),o=n.stateNode),o||a("147",t);var r=""+t;return null!==e&&null!==e.ref&&"function"==typeof e.ref&&e.ref._stringRef===r?e.ref:((e=function(t){var e=o.refs;e===Fr&&(e=o.refs={}),null===t?delete e[r]:e[r]=t})._stringRef=r,e)}"string"!=typeof t&&a("284"),n._owner||a("290",t)}return t}function $r(t,e){"textarea"!==t.type&&a("31","[object Object]"===Object.prototype.toString.call(e)?"object with keys {"+Object.keys(e).join(", ")+"}":e,"")}function Jr(t){function e(e,n){if(t){var o=e.lastEffect;null!==o?(o.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,o){if(!t)return null;for(;null!==o;)e(n,o),o=o.sibling;return null}function o(t,e){for(t=new Map;null!==e;)null!==e.key?t.set(e.key,e):t.set(e.index,e),e=e.sibling;return t}function r(t,e,n){return(t=Zo(t,e)).index=0,t.sibling=null,t}function i(e,n,o){return e.index=o,t?null!==(o=e.alternate)?(o=o.index)<n?(e.effectTag=2,n):o:(e.effectTag=2,n):n}function l(e){return t&&null===e.alternate&&(e.effectTag=2),e}function s(t,e,n,o){return null===e||6!==e.tag?((e=Vo(n,t.mode,o)).return=t,e):((e=r(e,n)).return=t,e)}function u(t,e,n,o){return null!==e&&e.elementType===n.type?((o=r(e,n.props)).ref=Yr(t,e,n),o.return=t,o):((o=Xo(n.type,n.key,n.props,null,t.mode,o)).ref=Yr(t,e,n),o.return=t,o)}function c(t,e,n,o){return null===e||4!==e.tag||e.stateNode.containerInfo!==n.containerInfo||e.stateNode.implementation!==n.implementation?((e=Go(n,t.mode,o)).return=t,e):((e=r(e,n.children||[])).return=t,e)}function p(t,e,n,o,i){return null===e||7!==e.tag?((e=Ko(n,t.mode,o,i)).return=t,e):((e=r(e,n)).return=t,e)}function f(t,e,n){if("string"==typeof e||"number"==typeof e)return(e=Vo(""+e,t.mode,n)).return=t,e;if("object"==typeof e&&null!==e){switch(e.$$typeof){case Kt:return(n=Xo(e.type,e.key,e.props,null,t.mode,n)).ref=Yr(t,null,e),n.return=t,n;case jt:return(e=Go(e,t.mode,n)).return=t,e}if(Wr(e)||ae(e))return(e=Ko(e,t.mode,n,null)).return=t,e;$r(t,e)}return null}function d(t,e,n,o){var r=null!==e?e.key:null;if("string"==typeof n||"number"==typeof n)return null!==r?null:s(t,e,""+n,o);if("object"==typeof n&&null!==n){switch(n.$$typeof){case Kt:return n.key===r?n.type===Vt?p(t,e,n.props.children,o,r):u(t,e,n,o):null;case jt:return n.key===r?c(t,e,n,o):null}if(Wr(n)||ae(n))return null!==r?null:p(t,e,n,o,null);$r(t,n)}return null}function h(t,e,n,o,r){if("string"==typeof o||"number"==typeof o)return s(e,t=t.get(n)||null,""+o,r);if("object"==typeof o&&null!==o){switch(o.$$typeof){case Kt:return t=t.get(null===o.key?n:o.key)||null,o.type===Vt?p(e,t,o.props.children,r,o.key):u(e,t,o,r);case jt:return c(e,t=t.get(null===o.key?n:o.key)||null,o,r)}if(Wr(o)||ae(o))return p(e,t=t.get(n)||null,o,r,null);$r(e,o)}return null}function y(r,a,l,s){for(var u=null,c=null,p=a,y=a=0,m=null;null!==p&&y<l.length;y++){p.index>y?(m=p,p=null):m=p.sibling;var v=d(r,p,l[y],s);if(null===v){null===p&&(p=m);break}t&&p&&null===v.alternate&&e(r,p),a=i(v,a,y),null===c?u=v:c.sibling=v,c=v,p=m}if(y===l.length)return n(r,p),u;if(null===p){for(;y<l.length;y++)(p=f(r,l[y],s))&&(a=i(p,a,y),null===c?u=p:c.sibling=p,c=p);return u}for(p=o(r,p);y<l.length;y++)(m=h(p,r,y,l[y],s))&&(t&&null!==m.alternate&&p.delete(null===m.key?y:m.key),a=i(m,a,y),null===c?u=m:c.sibling=m,c=m);return t&&p.forEach(function(t){return e(r,t)}),u}function m(r,l,s,u){var c=ae(s);"function"!=typeof c&&a("150"),null==(s=c.call(s))&&a("151");for(var p=c=null,y=l,m=l=0,v=null,g=s.next();null!==y&&!g.done;m++,g=s.next()){y.index>m?(v=y,y=null):v=y.sibling;var w=d(r,y,g.value,u);if(null===w){y||(y=v);break}t&&y&&null===w.alternate&&e(r,y),l=i(w,l,m),null===p?c=w:p.sibling=w,p=w,y=v}if(g.done)return n(r,y),c;if(null===y){for(;!g.done;m++,g=s.next())null!==(g=f(r,g.value,u))&&(l=i(g,l,m),null===p?c=g:p.sibling=g,p=g);return c}for(y=o(r,y);!g.done;m++,g=s.next())null!==(g=h(y,r,m,g.value,u))&&(t&&null!==g.alternate&&y.delete(null===g.key?m:g.key),l=i(g,l,m),null===p?c=g:p.sibling=g,p=g);return t&&y.forEach(function(t){return e(r,t)}),c}return function(t,o,i,s){var u="object"==typeof i&&null!==i&&i.type===Vt&&null===i.key;u&&(i=i.props.children);var c="object"==typeof i&&null!==i;if(c)switch(i.$$typeof){case Kt:t:{for(c=i.key,u=o;null!==u;){if(u.key===c){if(7===u.tag?i.type===Vt:u.elementType===i.type){n(t,u.sibling),(o=r(u,i.type===Vt?i.props.children:i.props)).ref=Yr(t,u,i),o.return=t,t=o;break t}n(t,u);break}e(t,u),u=u.sibling}i.type===Vt?((o=Ko(i.props.children,t.mode,s,i.key)).return=t,t=o):((s=Xo(i.type,i.key,i.props,null,t.mode,s)).ref=Yr(t,o,i),s.return=t,t=s)}return l(t);case jt:t:{for(u=i.key;null!==o;){if(o.key===u){if(4===o.tag&&o.stateNode.containerInfo===i.containerInfo&&o.stateNode.implementation===i.implementation){n(t,o.sibling),(o=r(o,i.children||[])).return=t,t=o;break t}n(t,o);break}e(t,o),o=o.sibling}(o=Go(i,t.mode,s)).return=t,t=o}return l(t)}if("string"==typeof i||"number"==typeof i)return i=""+i,null!==o&&6===o.tag?(n(t,o.sibling),(o=r(o,i)).return=t,t=o):(n(t,o),(o=Vo(i,t.mode,s)).return=t,t=o),l(t);if(Wr(i))return y(t,o,i,s);if(ae(i))return m(t,o,i,s);if(c&&$r(t,i),void 0===i&&!u)switch(t.tag){case 1:case 0:a("152",(s=t.type).displayName||s.name||"Component")}return n(t,o)}}var Qr=Jr(!0),Zr=Jr(!1),Xr=null,Kr=null,jr=!1;function Vr(t,e){var n=Jo(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=e,n.return=t,n.effectTag=8,null!==t.lastEffect?(t.lastEffect.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n}function Gr(t,e){switch(t.tag){case 5:var n=t.type;return null!==(e=1!==e.nodeType||n.toLowerCase()!==e.nodeName.toLowerCase()?null:e)&&(t.stateNode=e,!0);case 6:return null!==(e=""===t.pendingProps||3!==e.nodeType?null:e)&&(t.stateNode=e,!0);default:return!1}}function Br(t){if(jr){var e=Kr;if(e){var n=e;if(!Gr(t,e)){if(!(e=xo(n))||!Gr(t,e))return t.effectTag|=2,jr=!1,void(Xr=t);Vr(Xr,n)}Xr=t,Kr=Eo(e)}else t.effectTag|=2,jr=!1,Xr=t}}function qr(t){for(t=t.return;null!==t&&5!==t.tag&&3!==t.tag;)t=t.return;Xr=t}function Hr(t){if(t!==Xr)return!1;if(!jr)return qr(t),jr=!0,!1;var e=t.type;if(5!==t.tag||"head"!==e&&"body"!==e&&!go(e,t.memoizedProps))for(e=Kr;e;)Vr(t,e),e=xo(e);return qr(t),Kr=Xr?xo(t.stateNode):null,!0}function ti(){Kr=Xr=null,jr=!1}var ei=Qt.ReactCurrentOwner;function ni(t,e,n,o){e.child=null===t?Zr(e,null,n,o):Qr(e,t.child,n,o)}function oi(t,e,n,o,r){n=n.render;var i=e.ref;return _r(e),o=n(o,i),e.effectTag|=1,ni(t,e,o,r),e.child}function ri(t,e,n,o,r,i){if(null===t){var a=n.type;return"function"!=typeof a||Qo(a)||void 0!==a.defaultProps||null!==n.compare||void 0!==n.defaultProps?((t=Xo(n.type,null,o,null,e.mode,i)).ref=e.ref,t.return=e,e.child=t):(e.tag=15,e.type=a,ii(t,e,a,o,r,i))}return a=t.child,r<i&&(r=a.memoizedProps,(n=null!==(n=n.compare)?n:tn)(r,o)&&t.ref===e.ref)?fi(t,e,i):(e.effectTag|=1,(t=Zo(a,o)).ref=e.ref,t.return=e,e.child=t)}function ii(t,e,n,o,r,i){return null!==t&&r<i&&tn(t.memoizedProps,o)&&t.ref===e.ref?fi(t,e,i):li(t,e,n,o,i)}function ai(t,e){var n=e.ref;(null===t&&null!==n||null!==t&&t.ref!==n)&&(e.effectTag|=128)}function li(t,e,n,o,r){var i=Ro(n)?No:Po.current;return i=Lo(e,i),_r(e),n=n(o,i),e.effectTag|=1,ni(t,e,n,r),e.child}function si(t,e,n,o,r){if(Ro(n)){var i=!0;Uo(e)}else i=!1;if(_r(e),null===e.stateNode)null!==t&&(t.alternate=null,e.alternate=null,e.effectTag|=2),Ur(e,n,o),Ir(e,n,o,r),o=!0;else if(null===t){var a=e.stateNode,l=e.memoizedProps;a.props=l;var s=a.context,u=n.contextType;"object"==typeof u&&null!==u?u=Rr.currentDispatcher.readContext(u):u=Lo(e,u=Ro(n)?No:Po.current);var c=n.getDerivedStateFromProps,p="function"==typeof c||"function"==typeof a.getSnapshotBeforeUpdate;p||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(l!==o||s!==u)&&Mr(e,a,o,u),er=!1;var f=e.memoizedState;s=a.state=f;var d=e.updateQueue;null!==d&&(cr(e,d,o,a,r),s=e.memoizedState),l!==o||f!==s||ko.current||er?("function"==typeof c&&(Dr(e,n,c,o),s=e.memoizedState),(l=er||zr(e,n,l,o,f,s,u))?(p||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||("function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount()),"function"==typeof a.componentDidMount&&(e.effectTag|=4)):("function"==typeof a.componentDidMount&&(e.effectTag|=4),e.memoizedProps=o,e.memoizedState=s),a.props=o,a.state=s,a.context=u,o=l):("function"==typeof a.componentDidMount&&(e.effectTag|=4),o=!1)}else a=e.stateNode,l=e.memoizedProps,a.props=e.type===e.elementType?l:Lr(e.type,l),s=a.context,"object"==typeof(u=n.contextType)&&null!==u?u=Rr.currentDispatcher.readContext(u):u=Lo(e,u=Ro(n)?No:Po.current),(p="function"==typeof(c=n.getDerivedStateFromProps)||"function"==typeof a.getSnapshotBeforeUpdate)||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(l!==o||s!==u)&&Mr(e,a,o,u),er=!1,s=e.memoizedState,f=a.state=s,null!==(d=e.updateQueue)&&(cr(e,d,o,a,r),f=e.memoizedState),l!==o||s!==f||ko.current||er?("function"==typeof c&&(Dr(e,n,c,o),f=e.memoizedState),(c=er||zr(e,n,l,o,s,f,u))?(p||"function"!=typeof a.UNSAFE_componentWillUpdate&&"function"!=typeof a.componentWillUpdate||("function"==typeof a.componentWillUpdate&&a.componentWillUpdate(o,f,u),"function"==typeof a.UNSAFE_componentWillUpdate&&a.UNSAFE_componentWillUpdate(o,f,u)),"function"==typeof a.componentDidUpdate&&(e.effectTag|=4),"function"==typeof a.getSnapshotBeforeUpdate&&(e.effectTag|=256)):("function"!=typeof a.componentDidUpdate||l===t.memoizedProps&&s===t.memoizedState||(e.effectTag|=4),"function"!=typeof a.getSnapshotBeforeUpdate||l===t.memoizedProps&&s===t.memoizedState||(e.effectTag|=256),e.memoizedProps=o,e.memoizedState=f),a.props=o,a.state=f,a.context=u,o=c):("function"!=typeof a.componentDidUpdate||l===t.memoizedProps&&s===t.memoizedState||(e.effectTag|=4),"function"!=typeof a.getSnapshotBeforeUpdate||l===t.memoizedProps&&s===t.memoizedState||(e.effectTag|=256),o=!1);return ui(t,e,n,o,i,r)}function ui(t,e,n,o,r,i){ai(t,e);var a=0!=(64&e.effectTag);if(!o&&!a)return r&&Mo(e,n,!1),fi(t,e,i);o=e.stateNode,ei.current=e;var l=a&&"function"!=typeof n.getDerivedStateFromError?null:o.render();return e.effectTag|=1,null!==t&&a?(e.child=Qr(e,t.child,null,i),e.child=Qr(e,null,l,i)):ni(t,e,l,i),e.memoizedState=o.state,r&&Mo(e,n,!0),e.child}function ci(t){var e=t.stateNode;e.pendingContext?Ao(0,e.pendingContext,e.pendingContext!==e.context):e.context&&Ao(0,e.context,!1),Or(t,e.containerInfo)}function pi(t,e,n){var o=e.mode,r=e.pendingProps,i=e.memoizedState;if(0==(64&e.effectTag)){i=null;var a=!1}else i={timedOutAt:null!==i?i.timedOutAt:0},a=!0,e.effectTag&=-65;if(null===t)if(a){var l=r.fallback;t=Ko(null,o,0,null),0==(1&e.mode)&&(t.child=null!==e.memoizedState?e.child.child:e.child),o=Ko(l,o,n,null),t.sibling=o,(n=t).return=o.return=e}else n=o=Zr(e,null,r.children,n);else null!==t.memoizedState?(l=(o=t.child).sibling,a?(n=r.fallback,r=Zo(o,o.pendingProps),0==(1&e.mode)&&((a=null!==e.memoizedState?e.child.child:e.child)!==o.child&&(r.child=a)),o=r.sibling=Zo(l,n,l.expirationTime),n=r,r.childExpirationTime=0,n.return=o.return=e):n=o=Qr(e,o.child,r.children,n)):(l=t.child,a?(a=r.fallback,(r=Ko(null,o,0,null)).child=l,0==(1&e.mode)&&(r.child=null!==e.memoizedState?e.child.child:e.child),(o=r.sibling=Ko(a,o,n,null)).effectTag|=2,n=r,r.childExpirationTime=0,n.return=o.return=e):o=n=Qr(e,l,r.children,n)),e.stateNode=t.stateNode;return e.memoizedState=i,e.child=n,o}function fi(t,e,n){if(null!==t&&(e.firstContextDependency=t.firstContextDependency),e.childExpirationTime<n)return null;if(null!==t&&e.child!==t.child&&a("153"),null!==e.child){for(n=Zo(t=e.child,t.pendingProps,t.expirationTime),e.child=n,n.return=e;null!==t.sibling;)t=t.sibling,(n=n.sibling=Zo(t,t.pendingProps,t.expirationTime)).return=e;n.sibling=null}return e.child}function di(t,e,n){var o=e.expirationTime;if(null!==t&&t.memoizedProps===e.pendingProps&&!ko.current&&o<n){switch(e.tag){case 3:ci(e),ti();break;case 5:kr(e);break;case 1:Ro(e.type)&&Uo(e);break;case 4:Or(e,e.stateNode.containerInfo);break;case 10:gr(e,e.memoizedProps.value);break;case 13:if(null!==e.memoizedState)return 0!==(o=e.child.childExpirationTime)&&o>=n?pi(t,e,n):null!==(e=fi(t,e,n))?e.sibling:null}return fi(t,e,n)}switch(e.expirationTime=0,e.tag){case 2:o=e.elementType,null!==t&&(t.alternate=null,e.alternate=null,e.effectTag|=2),t=e.pendingProps;var r=Lo(e,Po.current);if(_r(e),r=o(t,r),e.effectTag|=1,"object"==typeof r&&null!==r&&"function"==typeof r.render&&void 0===r.$$typeof){if(e.tag=1,Ro(o)){var i=!0;Uo(e)}else i=!1;e.memoizedState=null!==r.state&&void 0!==r.state?r.state:null;var l=o.getDerivedStateFromProps;"function"==typeof l&&Dr(e,o,l,t),r.updater=Ar,e.stateNode=r,r._reactInternalFiber=e,Ir(e,o,t,n),e=ui(null,e,o,!0,i,n)}else e.tag=0,ni(null,e,r,n),e=e.child;return e;case 16:switch(r=e.elementType,null!==t&&(t.alternate=null,e.alternate=null,e.effectTag|=2),i=e.pendingProps,t=function(t){var e=t._result;switch(t._status){case 1:return e;case 2:case 0:throw e;default:throw t._status=0,(e=(e=t._ctor)()).then(function(e){0===t._status&&(e=e.default,t._status=1,t._result=e)},function(e){0===t._status&&(t._status=2,t._result=e)}),t._result=e,e}}(r),e.type=t,r=e.tag=function(t){if("function"==typeof t)return Qo(t)?1:0;if(null!=t){if((t=t.$$typeof)===ee)return 11;if(t===oe)return 14}return 2}(t),i=Lr(t,i),l=void 0,r){case 0:l=li(null,e,t,i,n);break;case 1:l=si(null,e,t,i,n);break;case 11:l=oi(null,e,t,i,n);break;case 14:l=ri(null,e,t,Lr(t.type,i),o,n);break;default:a("306",t,"")}return l;case 0:return o=e.type,r=e.pendingProps,li(t,e,o,r=e.elementType===o?r:Lr(o,r),n);case 1:return o=e.type,r=e.pendingProps,si(t,e,o,r=e.elementType===o?r:Lr(o,r),n);case 3:return ci(e),null===(o=e.updateQueue)&&a("282"),r=null!==(r=e.memoizedState)?r.element:null,cr(e,o,e.pendingProps,null,n),(o=e.memoizedState.element)===r?(ti(),e=fi(t,e,n)):(r=e.stateNode,(r=(null===t||null===t.child)&&r.hydrate)&&(Kr=Eo(e.stateNode.containerInfo),Xr=e,r=jr=!0),r?(e.effectTag|=2,e.child=Zr(e,null,o,n)):(ni(t,e,o,n),ti()),e=e.child),e;case 5:return kr(e),null===t&&Br(e),o=e.type,r=e.pendingProps,i=null!==t?t.memoizedProps:null,l=r.children,go(o,r)?l=null:null!==i&&go(o,i)&&(e.effectTag|=16),ai(t,e),1!==n&&1&e.mode&&r.hidden?(e.expirationTime=1,e=null):(ni(t,e,l,n),e=e.child),e;case 6:return null===t&&Br(e),null;case 13:return pi(t,e,n);case 4:return Or(e,e.stateNode.containerInfo),o=e.pendingProps,null===t?e.child=Qr(e,null,o,n):ni(t,e,o,n),e.child;case 11:return o=e.type,r=e.pendingProps,oi(t,e,o,r=e.elementType===o?r:Lr(o,r),n);case 7:return ni(t,e,e.pendingProps,n),e.child;case 8:case 12:return ni(t,e,e.pendingProps.children,n),e.child;case 10:t:{if(o=e.type._context,r=e.pendingProps,l=e.memoizedProps,gr(e,i=r.value),null!==l){var s=l.value;if(0===(i=s===i&&(0!==s||1/s==1/i)||s!=s&&i!=i?0:0|("function"==typeof o._calculateChangedBits?o._calculateChangedBits(s,i):1073741823))){if(l.children===r.children&&!ko.current){e=fi(t,e,n);break t}}else for(null!==(l=e.child)&&(l.return=e);null!==l;){if(null!==(s=l.firstContextDependency))do{if(s.context===o&&0!=(s.observedBits&i)){if(1===l.tag){var u=rr(n);u.tag=2,ar(l,u)}l.expirationTime<n&&(l.expirationTime=n),null!==(u=l.alternate)&&u.expirationTime<n&&(u.expirationTime=n);for(var c=l.return;null!==c;){if(u=c.alternate,c.childExpirationTime<n)c.childExpirationTime=n,null!==u&&u.childExpirationTime<n&&(u.childExpirationTime=n);else{if(!(null!==u&&u.childExpirationTime<n))break;u.childExpirationTime=n}c=c.return}}u=l.child,s=s.next}while(null!==s);else u=10===l.tag&&l.type===e.type?null:l.child;if(null!==u)u.return=l;else for(u=l;null!==u;){if(u===e){u=null;break}if(null!==(l=u.sibling)){l.return=u.return,u=l;break}u=u.return}l=u}}ni(t,e,r.children,n),e=e.child}return e;case 9:return r=e.type,o=(i=e.pendingProps).children,_r(e),o=o(r=xr(r,i.unstable_observedBits)),e.effectTag|=1,ni(t,e,o,n),e.child;case 14:return i=Lr(r=e.type,e.pendingProps),ri(t,e,r,i=Lr(r.type,i),o,n);case 15:return ii(t,e,e.type,e.pendingProps,o,n);case 17:return o=e.type,r=e.pendingProps,r=e.elementType===o?r:Lr(o,r),null!==t&&(t.alternate=null,e.alternate=null,e.effectTag|=2),e.tag=1,Ro(o)?(t=!0,Uo(e)):t=!1,_r(e),Ur(e,o,r),Ir(e,o,r,n),ui(null,e,o,!0,t,n);default:a("156")}}function hi(t){t.effectTag|=4}var yi=void 0,mi=void 0,vi=void 0,gi=void 0;yi=function(t,e){for(var n=e.child;null!==n;){if(5===n.tag||6===n.tag)t.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},mi=function(){},vi=function(t,e,n,o,i){var a=t.memoizedProps;if(a!==o){var l=e.stateNode;switch(Cr(br.current),t=null,n){case"input":a=we(l,a),o=we(l,o),t=[];break;case"option":a=Xn(l,a),o=Xn(l,o),t=[];break;case"select":a=r({},a,{value:void 0}),o=r({},o,{value:void 0}),t=[];break;case"textarea":a=jn(l,a),o=jn(l,o),t=[];break;default:"function"!=typeof a.onClick&&"function"==typeof o.onClick&&(l.onclick=ho)}co(n,o),l=n=void 0;var s=null;for(n in a)if(!o.hasOwnProperty(n)&&a.hasOwnProperty(n)&&null!=a[n])if("style"===n){var u=a[n];for(l in u)u.hasOwnProperty(l)&&(s||(s={}),s[l]="")}else"dangerouslySetInnerHTML"!==n&&"children"!==n&&"suppressContentEditableWarning"!==n&&"suppressHydrationWarning"!==n&&"autoFocus"!==n&&(w.hasOwnProperty(n)?t||(t=[]):(t=t||[]).push(n,null));for(n in o){var c=o[n];if(u=null!=a?a[n]:void 0,o.hasOwnProperty(n)&&c!==u&&(null!=c||null!=u))if("style"===n)if(u){for(l in u)!u.hasOwnProperty(l)||c&&c.hasOwnProperty(l)||(s||(s={}),s[l]="");for(l in c)c.hasOwnProperty(l)&&u[l]!==c[l]&&(s||(s={}),s[l]=c[l])}else s||(t||(t=[]),t.push(n,s)),s=c;else"dangerouslySetInnerHTML"===n?(c=c?c.__html:void 0,u=u?u.__html:void 0,null!=c&&u!==c&&(t=t||[]).push(n,""+c)):"children"===n?u===c||"string"!=typeof c&&"number"!=typeof c||(t=t||[]).push(n,""+c):"suppressContentEditableWarning"!==n&&"suppressHydrationWarning"!==n&&(w.hasOwnProperty(n)?(null!=c&&fo(i,n),t||u===c||(t=[])):(t=t||[]).push(n,c))}s&&(t=t||[]).push("style",s),i=t,(e.updateQueue=i)&&hi(e)}},gi=function(t,e,n,o){n!==o&&hi(e)};var wi="function"==typeof WeakSet?WeakSet:Set;function _i(t,e){var n=e.source,o=e.stack;null===o&&null!==n&&(o=se(n)),null!==n&&le(n.type),e=e.value,null!==t&&1===t.tag&&le(t.type);try{console.error(e)}catch(t){setTimeout(function(){throw t})}}function xi(t){var e=t.ref;if(null!==e)if("function"==typeof e)try{e(null)}catch(e){Bi(t,e)}else e.current=null}function Ei(t){switch("function"==typeof Wo&&Wo(t),t.tag){case 0:case 11:case 14:case 15:var e=t.updateQueue;if(null!==e&&null!==(e=e.lastEffect)){var n=e=e.next;do{var o=n.destroy;if(null!==o){var r=t;try{o()}catch(t){Bi(r,t)}}n=n.next}while(n!==e)}break;case 1:if(xi(t),"function"==typeof(e=t.stateNode).componentWillUnmount)try{e.props=t.memoizedProps,e.state=t.memoizedState,e.componentWillUnmount()}catch(e){Bi(t,e)}break;case 5:xi(t);break;case 4:Ti(t)}}function bi(t){return 5===t.tag||3===t.tag||4===t.tag}function Si(t){t:{for(var e=t.return;null!==e;){if(bi(e)){var n=e;break t}e=e.return}a("160"),n=void 0}var o=e=void 0;switch(n.tag){case 5:e=n.stateNode,o=!1;break;case 3:case 4:e=n.stateNode.containerInfo,o=!0;break;default:a("161")}16&n.effectTag&&(ro(e,""),n.effectTag&=-17);t:e:for(n=t;;){for(;null===n.sibling;){if(null===n.return||bi(n.return)){n=null;break t}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag;){if(2&n.effectTag)continue e;if(null===n.child||4===n.tag)continue e;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break t}}for(var r=t;;){if(5===r.tag||6===r.tag)if(n)if(o){var i=e,l=r.stateNode,s=n;8===i.nodeType?i.parentNode.insertBefore(l,s):i.insertBefore(l,s)}else e.insertBefore(r.stateNode,n);else o?(l=e,s=r.stateNode,8===l.nodeType?(i=l.parentNode).insertBefore(s,l):(i=l).appendChild(s),null!=(l=l._reactRootContainer)||null!==i.onclick||(i.onclick=ho)):e.appendChild(r.stateNode);else if(4!==r.tag&&null!==r.child){r.child.return=r,r=r.child;continue}if(r===t)break;for(;null===r.sibling;){if(null===r.return||r.return===t)return;r=r.return}r.sibling.return=r.return,r=r.sibling}}function Ti(t){for(var e=t,n=!1,o=void 0,r=void 0;;){if(!n){n=e.return;t:for(;;){switch(null===n&&a("160"),n.tag){case 5:o=n.stateNode,r=!1;break t;case 3:case 4:o=n.stateNode.containerInfo,r=!0;break t}n=n.return}n=!0}if(5===e.tag||6===e.tag){t:for(var i=e,l=i;;)if(Ei(l),null!==l.child&&4!==l.tag)l.child.return=l,l=l.child;else{if(l===i)break;for(;null===l.sibling;){if(null===l.return||l.return===i)break t;l=l.return}l.sibling.return=l.return,l=l.sibling}r?(i=o,l=e.stateNode,8===i.nodeType?i.parentNode.removeChild(l):i.removeChild(l)):o.removeChild(e.stateNode)}else if(4===e.tag?(o=e.stateNode.containerInfo,r=!0):Ei(e),null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break;for(;null===e.sibling;){if(null===e.return||e.return===t)return;4===(e=e.return).tag&&(n=!1)}e.sibling.return=e.return,e=e.sibling}}function Ci(t,e){switch(e.tag){case 0:case 11:case 14:case 15:case 1:break;case 5:var n=e.stateNode;if(null!=n){var o=e.memoizedProps;t=null!==t?t.memoizedProps:o;var r=e.type,i=e.updateQueue;e.updateQueue=null,null!==i&&function(t,e,n,o,r){t[D]=r,"input"===n&&"radio"===r.type&&null!=r.name&&xe(t,r),po(n,o),o=po(n,r);for(var i=0;i<e.length;i+=2){var a=e[i],l=e[i+1];"style"===a?so(t,l):"dangerouslySetInnerHTML"===a?oo(t,l):"children"===a?ro(t,l):ve(t,a,l,o)}switch(n){case"input":Ee(t,r);break;case"textarea":Gn(t,r);break;case"select":e=t._wrapperState.wasMultiple,t._wrapperState.wasMultiple=!!r.multiple,null!=(n=r.value)?Kn(t,!!r.multiple,n,!1):e!==!!r.multiple&&(null!=r.defaultValue?Kn(t,!!r.multiple,r.defaultValue,!0):Kn(t,!!r.multiple,r.multiple?[]:"",!1))}}(n,i,r,t,o)}break;case 6:null===e.stateNode&&a("162"),e.stateNode.nodeValue=e.memoizedProps;break;case 3:case 12:break;case 13:if(n=e.memoizedState,o=void 0,t=e,null===n?o=!1:(o=!0,t=e.child,0===n.timedOutAt&&(n.timedOutAt=Ca())),null!==t&&function(t,e){for(var n=t;;){if(5===n.tag){var o=n.stateNode;if(e)o.style.display="none";else{o=n.stateNode;var r=n.memoizedProps.style;r=null!=r&&r.hasOwnProperty("display")?r.display:null,o.style.display=lo("display",r)}}else if(6===n.tag)n.stateNode.nodeValue=e?"":n.memoizedProps;else{if(13===n.tag&&null!==n.memoizedState){(o=n.child.sibling).return=n,n=o;continue}if(null!==n.child){n.child.return=n,n=n.child;continue}}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}}(t,o),null!==(n=e.updateQueue)){e.updateQueue=null;var l=e.stateNode;null===l&&(l=e.stateNode=new wi),n.forEach(function(t){var n=function(t,e){var n=t.stateNode;null!==n&&n.delete(e),e=qi(e=Ca(),t),null!==(t=ta(t,e))&&(Bo(t,e),0!==(e=t.expirationTime)&&Oa(t,e))}.bind(null,e,t);l.has(t)||(l.add(t),t.then(n,n))})}break;case 17:break;default:a("163")}}var Oi="function"==typeof WeakMap?WeakMap:Map;function Pi(t,e,n){(n=rr(n)).tag=3,n.payload={element:null};var o=e.value;return n.callback=function(){za(o),_i(t,e)},n}function ki(t,e,n){(n=rr(n)).tag=3;var o=t.type.getDerivedStateFromError;if("function"==typeof o){var r=e.value;n.payload=function(){return o(r)}}var i=t.stateNode;return null!==i&&"function"==typeof i.componentDidCatch&&(n.callback=function(){"function"!=typeof o&&(null===Zi?Zi=new Set([this]):Zi.add(this));var n=e.value,r=e.stack;_i(t,e),this.componentDidCatch(n,{componentStack:null!==r?r:""})}),n}function Ni(t){switch(t.tag){case 1:Ro(t.type)&&Fo();var e=t.effectTag;return 2048&e?(t.effectTag=-2049&e|64,t):null;case 3:return Pr(),Do(),0!=(64&(e=t.effectTag))&&a("285"),t.effectTag=-2049&e|64,t;case 5:return Nr(t),null;case 13:return 2048&(e=t.effectTag)?(t.effectTag=-2049&e|64,t):null;case 4:return Pr(),null;case 10:return wr(t),null;default:return null}}var Li={readContext:xr},Ri=Qt.ReactCurrentOwner,Fi=1073741822,Di=0,Ai=!1,zi=null,Ui=null,Mi=0,Ii=-1,Wi=!1,Yi=null,$i=!1,Ji=null,Qi=null,Zi=null;function Xi(){if(null!==zi)for(var t=zi.return;null!==t;){var e=t;switch(e.tag){case 1:var n=e.type.childContextTypes;null!=n&&Fo();break;case 3:Pr(),Do();break;case 5:Nr(e);break;case 4:Pr();break;case 10:wr(e)}t=t.return}Ui=null,Mi=0,Ii=-1,Wi=!1,zi=null}function Ki(){null!==Qi&&(i.unstable_cancelCallback(Ji),Qi())}function ji(t){for(;;){var e=t.alternate,n=t.return,o=t.sibling;if(0==(1024&t.effectTag)){zi=t;t:{var i=e,l=Mi,s=(e=t).pendingProps;switch(e.tag){case 2:case 16:break;case 15:case 0:break;case 1:Ro(e.type)&&Fo();break;case 3:Pr(),Do(),(s=e.stateNode).pendingContext&&(s.context=s.pendingContext,s.pendingContext=null),null!==i&&null!==i.child||(Hr(e),e.effectTag&=-3),mi(e);break;case 5:Nr(e);var u=Cr(Tr.current);if(l=e.type,null!==i&&null!=e.stateNode)vi(i,e,l,s,u),i.ref!==e.ref&&(e.effectTag|=128);else if(s){var c=Cr(br.current);if(Hr(e)){i=(s=e).stateNode;var p=s.type,f=s.memoizedProps,d=u;switch(i[F]=s,i[D]=f,l=void 0,u=p){case"iframe":case"object":Tn("load",i);break;case"video":case"audio":for(p=0;p<et.length;p++)Tn(et[p],i);break;case"source":Tn("error",i);break;case"img":case"image":case"link":Tn("error",i),Tn("load",i);break;case"form":Tn("reset",i),Tn("submit",i);break;case"details":Tn("toggle",i);break;case"input":_e(i,f),Tn("invalid",i),fo(d,"onChange");break;case"select":i._wrapperState={wasMultiple:!!f.multiple},Tn("invalid",i),fo(d,"onChange");break;case"textarea":Vn(i,f),Tn("invalid",i),fo(d,"onChange")}for(l in co(u,f),p=null,f)f.hasOwnProperty(l)&&(c=f[l],"children"===l?"string"==typeof c?i.textContent!==c&&(p=["children",c]):"number"==typeof c&&i.textContent!==""+c&&(p=["children",""+c]):w.hasOwnProperty(l)&&null!=c&&fo(d,l));switch(u){case"input":$t(i),be(i,f,!0);break;case"textarea":$t(i),Bn(i);break;case"select":case"option":break;default:"function"==typeof f.onClick&&(i.onclick=ho)}l=p,s.updateQueue=l,(s=null!==l)&&hi(e)}else{f=e,i=l,d=s,p=9===u.nodeType?u:u.ownerDocument,c===qn.html&&(c=Hn(i)),c===qn.html?"script"===i?((i=p.createElement("div")).innerHTML="<script><\/script>",p=i.removeChild(i.firstChild)):"string"==typeof d.is?p=p.createElement(i,{is:d.is}):(p=p.createElement(i),"select"===i&&d.multiple&&(p.multiple=!0)):p=p.createElementNS(c,i),(i=p)[F]=f,i[D]=s,yi(i,e,!1,!1),d=i;var h=u,y=po(p=l,f=s);switch(p){case"iframe":case"object":Tn("load",d),u=f;break;case"video":case"audio":for(u=0;u<et.length;u++)Tn(et[u],d);u=f;break;case"source":Tn("error",d),u=f;break;case"img":case"image":case"link":Tn("error",d),Tn("load",d),u=f;break;case"form":Tn("reset",d),Tn("submit",d),u=f;break;case"details":Tn("toggle",d),u=f;break;case"input":_e(d,f),u=we(d,f),Tn("invalid",d),fo(h,"onChange");break;case"option":u=Xn(d,f);break;case"select":d._wrapperState={wasMultiple:!!f.multiple},u=r({},f,{value:void 0}),Tn("invalid",d),fo(h,"onChange");break;case"textarea":Vn(d,f),u=jn(d,f),Tn("invalid",d),fo(h,"onChange");break;default:u=f}co(p,u),c=void 0;var m=p,v=d,g=u;for(c in g)if(g.hasOwnProperty(c)){var _=g[c];"style"===c?so(v,_):"dangerouslySetInnerHTML"===c?null!=(_=_?_.__html:void 0)&&oo(v,_):"children"===c?"string"==typeof _?("textarea"!==m||""!==_)&&ro(v,_):"number"==typeof _&&ro(v,""+_):"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&"autoFocus"!==c&&(w.hasOwnProperty(c)?null!=_&&fo(h,c):null!=_&&ve(v,c,_,y))}switch(p){case"input":$t(d),be(d,f,!1);break;case"textarea":$t(d),Bn(d);break;case"option":null!=f.value&&d.setAttribute("value",""+ge(f.value));break;case"select":(u=d).multiple=!!f.multiple,null!=(d=f.value)?Kn(u,!!f.multiple,d,!1):null!=f.defaultValue&&Kn(u,!!f.multiple,f.defaultValue,!0);break;default:"function"==typeof u.onClick&&(d.onclick=ho)}(s=vo(l,s))&&hi(e),e.stateNode=i}null!==e.ref&&(e.effectTag|=128)}else null===e.stateNode&&a("166");break;case 6:i&&null!=e.stateNode?gi(i,e,i.memoizedProps,s):("string"!=typeof s&&(null===e.stateNode&&a("166")),i=Cr(Tr.current),Cr(br.current),Hr(e)?(l=(s=e).stateNode,i=s.memoizedProps,l[F]=s,(s=l.nodeValue!==i)&&hi(e)):(l=e,(s=(9===i.nodeType?i:i.ownerDocument).createTextNode(s))[F]=e,l.stateNode=s));break;case 11:break;case 13:if(s=e.memoizedState,0!=(64&e.effectTag)){e.expirationTime=l,zi=e;break t}s=null!==s,l=null!==i&&null!==i.memoizedState,null!==i&&!s&&l&&(null!==(i=i.child.sibling)&&(null!==(u=e.firstEffect)?(e.firstEffect=i,i.nextEffect=u):(e.firstEffect=e.lastEffect=i,i.nextEffect=null),i.effectTag=8)),(s!==l||0==(1&e.effectTag)&&s)&&(e.effectTag|=4);break;case 7:case 8:case 12:break;case 4:Pr(),mi(e);break;case 10:wr(e);break;case 9:case 14:break;case 17:Ro(e.type)&&Fo();break;default:a("156")}zi=null}if(e=t,1===Mi||1!==e.childExpirationTime){for(s=0,l=e.child;null!==l;)(i=l.expirationTime)>s&&(s=i),(u=l.childExpirationTime)>s&&(s=u),l=l.sibling;e.childExpirationTime=s}if(null!==zi)return zi;null!==n&&0==(1024&n.effectTag)&&(null===n.firstEffect&&(n.firstEffect=t.firstEffect),null!==t.lastEffect&&(null!==n.lastEffect&&(n.lastEffect.nextEffect=t.firstEffect),n.lastEffect=t.lastEffect),1<t.effectTag&&(null!==n.lastEffect?n.lastEffect.nextEffect=t:n.firstEffect=t,n.lastEffect=t))}else{if(null!==(t=Ni(t)))return t.effectTag&=1023,t;null!==n&&(n.firstEffect=n.lastEffect=null,n.effectTag|=1024)}if(null!==o)return o;if(null===n)break;t=n}return null}function Vi(t){var e=di(t.alternate,t,Mi);return t.memoizedProps=t.pendingProps,null===e&&(e=ji(t)),Ri.current=null,e}function Gi(t,e){Ai&&a("243"),Ki(),Ai=!0,Ri.currentDispatcher=Li;var n=t.nextExpirationTimeToWorkOn;n===Mi&&t===Ui&&null!==zi||(Xi(),Mi=n,zi=Zo((Ui=t).current,null),t.pendingCommitExpirationTime=0);for(var o=!1;;){try{if(e)for(;null!==zi&&!Na();)zi=Vi(zi);else for(;null!==zi;)zi=Vi(zi)}catch(e){if(vr=mr=yr=null,null===zi)o=!0,za(e);else{null===zi&&a("271");var r=zi,i=r.return;if(null!==i){t:{var l=t,s=i,u=r,c=e;if(i=Mi,u.effectTag|=1024,u.firstEffect=u.lastEffect=null,null!==c&&"object"==typeof c&&"function"==typeof c.then){var p=c;c=s;var f=-1,d=-1;do{if(13===c.tag){var h=c.alternate;if(null!==h&&null!==(h=h.memoizedState)){d=10*(1073741822-h.timedOutAt);break}"number"==typeof(h=c.pendingProps.maxDuration)&&(0>=h?f=0:(-1===f||h<f)&&(f=h))}c=c.return}while(null!==c);c=s;do{if((h=13===c.tag)&&(h=void 0!==c.memoizedProps.fallback&&null===c.memoizedState),h){if(null===(s=c.updateQueue)?c.updateQueue=new Set([p]):s.add(p),0==(1&c.mode)){c.effectTag|=64,u.effectTag&=-1957,1===u.tag&&(null===u.alternate?u.tag=17:((i=rr(1073741823)).tag=2,ar(u,i))),u.expirationTime=1073741823;break t}null===(u=l.pingCache)?(u=l.pingCache=new Oi,s=new Set,u.set(p,s)):void 0===(s=u.get(p))&&(s=new Set,u.set(p,s)),s.has(i)||(s.add(i),u=Hi.bind(null,l,p,i),p.then(u,u)),-1===f?l=1073741823:(-1===d&&(d=10*(1073741822-Ho(l,i))-5e3),l=d+f),0<=l&&Ii<l&&(Ii=l),c.effectTag|=2048,c.expirationTime=i;break t}c=c.return}while(null!==c);c=Error((le(u.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+se(u))}Wi=!0,c=dr(c,u),l=s;do{switch(l.tag){case 3:l.effectTag|=2048,l.expirationTime=i,lr(l,i=Pi(l,c,i));break t;case 1:if(p=c,f=l.type,d=l.stateNode,0==(64&l.effectTag)&&("function"==typeof f.getDerivedStateFromError||null!==d&&"function"==typeof d.componentDidCatch&&(null===Zi||!Zi.has(d)))){l.effectTag|=2048,l.expirationTime=i,lr(l,i=ki(l,p,i));break t}}l=l.return}while(null!==l)}zi=ji(r);continue}o=!0,za(e)}}break}if(Ai=!1,vr=mr=yr=Ri.currentDispatcher=null,o)Ui=null,t.finishedWork=null;else if(null!==zi)t.finishedWork=null;else{if(null===(o=t.current.alternate)&&a("281"),Ui=null,Wi){if(r=t.latestPendingTime,i=t.latestSuspendedTime,l=t.latestPingedTime,0!==r&&r<n||0!==i&&i<n||0!==l&&l<n)return qo(t,n),void Ta(t,o,n,t.expirationTime,-1);if(!t.didError&&e)return t.didError=!0,n=t.nextExpirationTimeToWorkOn=n,e=t.expirationTime=1073741823,void Ta(t,o,n,e,-1)}e&&-1!==Ii?(qo(t,n),(e=10*(1073741822-Ho(t,n)))<Ii&&(Ii=e),e=10*(1073741822-Ca()),e=Ii-e,Ta(t,o,n,t.expirationTime,0>e?0:e)):(t.pendingCommitExpirationTime=n,t.finishedWork=o)}}function Bi(t,e){for(var n=t.return;null!==n;){switch(n.tag){case 1:var o=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof o.componentDidCatch&&(null===Zi||!Zi.has(o)))return ar(n,t=ki(n,t=dr(e,t),1073741823)),void ea(n,1073741823);break;case 3:return ar(n,t=Pi(n,t=dr(e,t),1073741823)),void ea(n,1073741823)}n=n.return}3===t.tag&&(ar(t,n=Pi(t,n=dr(e,t),1073741823)),ea(t,1073741823))}function qi(t,e){return 0!==Di?t=Di:Ai?t=$i?1073741823:Mi:1&e.mode?(t=ya?1073741822-10*(1+((1073741822-t+15)/10|0)):1073741822-25*(1+((1073741822-t+500)/25|0)),null!==Ui&&t===Mi&&--t):t=1073741823,ya&&(0===ca||t<ca)&&(ca=t),t}function Hi(t,e,n){var o=t.pingCache;null!==o&&o.delete(e),null!==Ui&&Mi===n?Ui=null:(e=t.earliestSuspendedTime,o=t.latestSuspendedTime,0!==e&&n<=e&&n>=o&&(t.didError=!1,(0===(e=t.latestPingedTime)||e>n)&&(t.latestPingedTime=n),tr(n,t),0!==(n=t.expirationTime)&&Oa(t,n)))}function ta(t,e){t.expirationTime<e&&(t.expirationTime=e);var n=t.alternate;null!==n&&n.expirationTime<e&&(n.expirationTime=e);var o=t.return,r=null;if(null===o&&3===t.tag)r=t.stateNode;else for(;null!==o;){if(n=o.alternate,o.childExpirationTime<e&&(o.childExpirationTime=e),null!==n&&n.childExpirationTime<e&&(n.childExpirationTime=e),null===o.return&&3===o.tag){r=o.stateNode;break}o=o.return}return r}function ea(t,e){null!==(t=ta(t,e))&&(!Ai&&0!==Mi&&e>Mi&&Xi(),Bo(t,e),Ai&&!$i&&Ui===t||Oa(t,t.expirationTime),xa>_a&&(xa=0,a("185")))}function na(t,e,n,o,r){var i=Di;Di=1073741823;try{return t(e,n,o,r)}finally{Di=i}}var oa=null,ra=null,ia=0,aa=void 0,la=!1,sa=null,ua=0,ca=0,pa=!1,fa=null,da=!1,ha=!1,ya=!1,ma=null,va=i.unstable_now(),ga=1073741822-(va/10|0),wa=ga,_a=50,xa=0,Ea=null;function ba(){ga=1073741822-((i.unstable_now()-va)/10|0)}function Sa(t,e){if(0!==ia){if(e<ia)return;null!==aa&&i.unstable_cancelCallback(aa)}ia=e,t=i.unstable_now()-va,aa=i.unstable_scheduleCallback(La,{timeout:10*(1073741822-e)-t})}function Ta(t,e,n,o,r){t.expirationTime=o,0!==r||Na()?0<r&&(t.timeoutHandle=wo(function(t,e,n){t.pendingCommitExpirationTime=n,t.finishedWork=e,ba(),wa=ga,Fa(t,n)}.bind(null,t,e,n),r)):(t.pendingCommitExpirationTime=n,t.finishedWork=e)}function Ca(){return la?wa:(Pa(),0!==ua&&1!==ua||(ba(),wa=ga),wa)}function Oa(t,e){null===t.nextScheduledRoot?(t.expirationTime=e,null===ra?(oa=ra=t,t.nextScheduledRoot=t):(ra=ra.nextScheduledRoot=t).nextScheduledRoot=oa):e>t.expirationTime&&(t.expirationTime=e),la||(da?ha&&(sa=t,ua=1073741823,Da(t,1073741823,!1)):1073741823===e?Ra(1073741823,!1):Sa(t,e))}function Pa(){var t=0,e=null;if(null!==ra)for(var n=ra,o=oa;null!==o;){var r=o.expirationTime;if(0===r){if((null===n||null===ra)&&a("244"),o===o.nextScheduledRoot){oa=ra=o.nextScheduledRoot=null;break}if(o===oa)oa=r=o.nextScheduledRoot,ra.nextScheduledRoot=r,o.nextScheduledRoot=null;else{if(o===ra){(ra=n).nextScheduledRoot=oa,o.nextScheduledRoot=null;break}n.nextScheduledRoot=o.nextScheduledRoot,o.nextScheduledRoot=null}o=n.nextScheduledRoot}else{if(r>t&&(t=r,e=o),o===ra)break;if(1073741823===t)break;n=o,o=o.nextScheduledRoot}}sa=e,ua=t}var ka=!1;function Na(){return!!ka||!!i.unstable_shouldYield()&&(ka=!0)}function La(){try{if(!Na()&&null!==oa){ba();var t=oa;do{var e=t.expirationTime;0!==e&&ga<=e&&(t.nextExpirationTimeToWorkOn=ga),t=t.nextScheduledRoot}while(t!==oa)}Ra(0,!0)}finally{ka=!1}}function Ra(t,e){if(Pa(),e)for(ba(),wa=ga;null!==sa&&0!==ua&&t<=ua&&!(ka&&ga>ua);)Da(sa,ua,ga>ua),Pa(),ba(),wa=ga;else for(;null!==sa&&0!==ua&&t<=ua;)Da(sa,ua,!1),Pa();if(e&&(ia=0,aa=null),0!==ua&&Sa(sa,ua),xa=0,Ea=null,null!==ma)for(t=ma,ma=null,e=0;e<t.length;e++){var n=t[e];try{n._onComplete()}catch(t){pa||(pa=!0,fa=t)}}if(pa)throw t=fa,fa=null,pa=!1,t}function Fa(t,e){la&&a("253"),sa=t,ua=e,Da(t,e,!1),Ra(1073741823,!1)}function Da(t,e,n){if(la&&a("245"),la=!0,n){var o=t.finishedWork;null!==o?Aa(t,o,e):(t.finishedWork=null,-1!==(o=t.timeoutHandle)&&(t.timeoutHandle=-1,_o(o)),Gi(t,n),null!==(o=t.finishedWork)&&(Na()?t.finishedWork=o:Aa(t,o,e)))}else null!==(o=t.finishedWork)?Aa(t,o,e):(t.finishedWork=null,-1!==(o=t.timeoutHandle)&&(t.timeoutHandle=-1,_o(o)),Gi(t,n),null!==(o=t.finishedWork)&&Aa(t,o,e));la=!1}function Aa(t,e,n){var o=t.firstBatch;if(null!==o&&o._expirationTime>=n&&(null===ma?ma=[o]:ma.push(o),o._defer))return t.finishedWork=e,void(t.expirationTime=0);t.finishedWork=null,t===Ea?xa++:(Ea=t,xa=0),$i=Ai=!0,t.current===e&&a("177"),0===(n=t.pendingCommitExpirationTime)&&a("261"),t.pendingCommitExpirationTime=0,o=e.expirationTime;var r=e.childExpirationTime;if(o=r>o?r:o,t.didError=!1,0===o?(t.earliestPendingTime=0,t.latestPendingTime=0,t.earliestSuspendedTime=0,t.latestSuspendedTime=0,t.latestPingedTime=0):(o<t.latestPingedTime&&(t.latestPingedTime=0),0!==(r=t.latestPendingTime)&&(r>o?t.earliestPendingTime=t.latestPendingTime=0:t.earliestPendingTime>o&&(t.earliestPendingTime=t.latestPendingTime)),0===(r=t.earliestSuspendedTime)?Bo(t,o):o<t.latestSuspendedTime?(t.earliestSuspendedTime=0,t.latestSuspendedTime=0,t.latestPingedTime=0,Bo(t,o)):o>r&&Bo(t,o)),tr(0,t),Ri.current=null,1<e.effectTag?null!==e.lastEffect?(e.lastEffect.nextEffect=e,o=e.firstEffect):o=e:o=e.firstEffect,yo=Sn,Un(r=zn())){if("selectionStart"in r)var i={start:r.selectionStart,end:r.selectionEnd};else t:{var l=(i=(i=r.ownerDocument)&&i.defaultView||window).getSelection&&i.getSelection();if(l&&0!==l.rangeCount){i=l.anchorNode;var s=l.anchorOffset,u=l.focusNode;l=l.focusOffset;try{i.nodeType,u.nodeType}catch(t){i=null;break t}var c=0,p=-1,f=-1,d=0,h=0,y=r,m=null;e:for(;;){for(var v;y!==i||0!==s&&3!==y.nodeType||(p=c+s),y!==u||0!==l&&3!==y.nodeType||(f=c+l),3===y.nodeType&&(c+=y.nodeValue.length),null!==(v=y.firstChild);)m=y,y=v;for(;;){if(y===r)break e;if(m===i&&++d===s&&(p=c),m===u&&++h===l&&(f=c),null!==(v=y.nextSibling))break;m=(y=m).parentNode}y=v}i=-1===p||-1===f?null:{start:p,end:f}}else i=null}i=i||{start:0,end:0}}else i=null;for(mo={focusedElem:r,selectionRange:i},Sn=!1,Yi=o;null!==Yi;){r=!1,i=void 0;try{for(;null!==Yi;){if(256&Yi.effectTag)t:{var g=Yi.alternate;switch((s=Yi).tag){case 0:case 11:case 15:break t;case 1:if(256&s.effectTag&&null!==g){var w=g.memoizedProps,_=g.memoizedState,x=s.stateNode,E=x.getSnapshotBeforeUpdate(s.elementType===s.type?w:Lr(s.type,w),_);x.__reactInternalSnapshotBeforeUpdate=E}break t;case 3:case 5:case 6:case 4:case 17:break t;default:a("163")}}Yi=Yi.nextEffect}}catch(t){r=!0,i=t}r&&(null===Yi&&a("178"),Bi(Yi,i),null!==Yi&&(Yi=Yi.nextEffect))}for(Yi=o;null!==Yi;){g=!1,w=void 0;try{for(;null!==Yi;){var b=Yi.effectTag;if(16&b&&ro(Yi.stateNode,""),128&b){var S=Yi.alternate;if(null!==S){var T=S.ref;null!==T&&("function"==typeof T?T(null):T.current=null)}}switch(14&b){case 2:Si(Yi),Yi.effectTag&=-3;break;case 6:Si(Yi),Yi.effectTag&=-3,Ci(Yi.alternate,Yi);break;case 4:Ci(Yi.alternate,Yi);break;case 8:Ti(_=Yi),_.return=null,_.child=null,_.memoizedState=null,_.updateQueue=null;var C=_.alternate;null!==C&&(C.return=null,C.child=null,C.memoizedState=null,C.updateQueue=null)}Yi=Yi.nextEffect}}catch(t){g=!0,w=t}g&&(null===Yi&&a("178"),Bi(Yi,w),null!==Yi&&(Yi=Yi.nextEffect))}if(T=mo,S=zn(),b=T.focusedElem,g=T.selectionRange,S!==b&&b&&b.ownerDocument&&function t(e,n){return!(!e||!n)&&(e===n||(!e||3!==e.nodeType)&&(n&&3===n.nodeType?t(e,n.parentNode):"contains"in e?e.contains(n):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(n))))}(b.ownerDocument.documentElement,b)){null!==g&&Un(b)&&(S=g.start,void 0===(T=g.end)&&(T=S),"selectionStart"in b?(b.selectionStart=S,b.selectionEnd=Math.min(T,b.value.length)):(T=(S=b.ownerDocument||document)&&S.defaultView||window).getSelection&&(T=T.getSelection(),w=b.textContent.length,C=Math.min(g.start,w),g=void 0===g.end?C:Math.min(g.end,w),!T.extend&&C>g&&(w=g,g=C,C=w),w=An(b,C),_=An(b,g),w&&_&&(1!==T.rangeCount||T.anchorNode!==w.node||T.anchorOffset!==w.offset||T.focusNode!==_.node||T.focusOffset!==_.offset)&&((S=S.createRange()).setStart(w.node,w.offset),T.removeAllRanges(),C>g?(T.addRange(S),T.extend(_.node,_.offset)):(S.setEnd(_.node,_.offset),T.addRange(S))))),S=[];for(T=b;T=T.parentNode;)1===T.nodeType&&S.push({element:T,left:T.scrollLeft,top:T.scrollTop});for("function"==typeof b.focus&&b.focus(),b=0;b<S.length;b++)(T=S[b]).element.scrollLeft=T.left,T.element.scrollTop=T.top}for(mo=null,Sn=!!yo,yo=null,t.current=e,Yi=o;null!==Yi;){o=!1,b=void 0;try{for(S=n;null!==Yi;){var O=Yi.effectTag;if(36&O){var P=Yi.alternate;switch(C=S,(T=Yi).tag){case 0:case 11:case 15:break;case 1:var k=T.stateNode;if(4&T.effectTag)if(null===P)k.componentDidMount();else{var N=T.elementType===T.type?P.memoizedProps:Lr(T.type,P.memoizedProps);k.componentDidUpdate(N,P.memoizedState,k.__reactInternalSnapshotBeforeUpdate)}var L=T.updateQueue;null!==L&&pr(0,L,k);break;case 3:var R=T.updateQueue;if(null!==R){if(g=null,null!==T.child)switch(T.child.tag){case 5:g=T.child.stateNode;break;case 1:g=T.child.stateNode}pr(0,R,g)}break;case 5:var F=T.stateNode;null===P&&4&T.effectTag&&vo(T.type,T.memoizedProps)&&F.focus();break;case 6:case 4:case 12:case 13:case 17:break;default:a("163")}}if(128&O){var D=Yi.ref;if(null!==D){var A=Yi.stateNode;switch(Yi.tag){case 5:var z=A;break;default:z=A}"function"==typeof D?D(z):D.current=z}}Yi=Yi.nextEffect}}catch(t){o=!0,b=t}o&&(null===Yi&&a("178"),Bi(Yi,b),null!==Yi&&(Yi=Yi.nextEffect))}Ai=$i=!1,"function"==typeof Io&&Io(e.stateNode),O=e.expirationTime,0===(e=(e=e.childExpirationTime)>O?e:O)&&(Zi=null),t.expirationTime=e,t.finishedWork=null}function za(t){null===sa&&a("246"),sa.expirationTime=0,pa||(pa=!0,fa=t)}function Ua(t,e){var n=da;da=!0;try{return t(e)}finally{(da=n)||la||Ra(1073741823,!1)}}function Ma(t,e){if(da&&!ha){ha=!0;try{return t(e)}finally{ha=!1}}return t(e)}function Ia(t,e,n){if(ya)return t(e,n);da||la||0===ca||(Ra(ca,!1),ca=0);var o=ya,r=da;da=ya=!0;try{return t(e,n)}finally{ya=o,(da=r)||la||Ra(1073741823,!1)}}function Wa(t,e,n,o,r){var i=e.current;t:if(n){e:{2===en(n=n._reactInternalFiber)&&1===n.tag||a("170");var l=n;do{switch(l.tag){case 3:l=l.stateNode.context;break e;case 1:if(Ro(l.type)){l=l.stateNode.__reactInternalMemoizedMergedChildContext;break e}}l=l.return}while(null!==l);a("171"),l=void 0}if(1===n.tag){var s=n.type;if(Ro(s)){n=zo(n,s,l);break t}}n=l}else n=Oo;return null===e.context?e.context=n:e.pendingContext=n,e=r,(r=rr(o)).payload={element:t},null!==(e=void 0===e?null:e)&&(r.callback=e),Ki(),ar(i,r),ea(i,o),o}function Ya(t,e,n,o){var r=e.current;return Wa(t,e,n,r=qi(Ca(),r),o)}function $a(t){if(!(t=t.current).child)return null;switch(t.child.tag){case 5:default:return t.child.stateNode}}function Ja(t){var e=1073741822-25*(1+((1073741822-Ca()+500)/25|0));e>=Fi&&(e=Fi-1),this._expirationTime=Fi=e,this._root=t,this._callbacks=this._next=null,this._hasChildren=this._didComplete=!1,this._children=null,this._defer=!0}function Qa(){this._callbacks=null,this._didCommit=!1,this._onCommit=this._onCommit.bind(this)}function Za(t,e,n){t={current:e=Jo(3,null,null,e?3:0),containerInfo:t,pendingChildren:null,pingCache:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,didError:!1,pendingCommitExpirationTime:0,finishedWork:null,timeoutHandle:-1,context:null,pendingContext:null,hydrate:n,nextExpirationTimeToWorkOn:0,expirationTime:0,firstBatch:null,nextScheduledRoot:null},this._internalRoot=e.stateNode=t}function Xa(t){return!(!t||1!==t.nodeType&&9!==t.nodeType&&11!==t.nodeType&&(8!==t.nodeType||" react-mount-point-unstable "!==t.nodeValue))}function Ka(t,e,n,o,r){Xa(n)||a("200");var i=n._reactRootContainer;if(i){if("function"==typeof r){var l=r;r=function(){var t=$a(i._internalRoot);l.call(t)}}null!=t?i.legacy_renderSubtreeIntoContainer(t,e,r):i.render(e,r)}else{if(i=n._reactRootContainer=function(t,e){if(e||(e=!(!(e=t?9===t.nodeType?t.documentElement:t.firstChild:null)||1!==e.nodeType||!e.hasAttribute("data-reactroot"))),!e)for(var n;n=t.lastChild;)t.removeChild(n);return new Za(t,!1,e)}(n,o),"function"==typeof r){var s=r;r=function(){var t=$a(i._internalRoot);s.call(t)}}Ma(function(){null!=t?i.legacy_renderSubtreeIntoContainer(t,e,r):i.render(e,r)})}return $a(i._internalRoot)}function ja(t,e){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;return Xa(e)||a("200"),function(t,e,n){var o=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:jt,key:null==o?null:""+o,children:t,containerInfo:e,implementation:n}}(t,e,null,n)}Ct=function(t,e,n){switch(e){case"input":if(Ee(t,n),e=n.name,"radio"===n.type&&null!=e){for(n=t;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+e)+'][type="radio"]'),e=0;e<n.length;e++){var o=n[e];if(o!==t&&o.form===t.form){var r=M(o);r||a("90"),Jt(o),Ee(o,r)}}}break;case"textarea":Gn(t,n);break;case"select":null!=(e=n.value)&&Kn(t,!!n.multiple,e,!1)}},Ja.prototype.render=function(t){this._defer||a("250"),this._hasChildren=!0,this._children=t;var e=this._root._internalRoot,n=this._expirationTime,o=new Qa;return Wa(t,e,null,n,o._onCommit),o},Ja.prototype.then=function(t){if(this._didComplete)t();else{var e=this._callbacks;null===e&&(e=this._callbacks=[]),e.push(t)}},Ja.prototype.commit=function(){var t=this._root._internalRoot,e=t.firstBatch;if(this._defer&&null!==e||a("251"),this._hasChildren){var n=this._expirationTime;if(e!==this){this._hasChildren&&(n=this._expirationTime=e._expirationTime,this.render(this._children));for(var o=null,r=e;r!==this;)o=r,r=r._next;null===o&&a("251"),o._next=r._next,this._next=e,t.firstBatch=this}this._defer=!1,Fa(t,n),e=this._next,this._next=null,null!==(e=t.firstBatch=e)&&e._hasChildren&&e.render(e._children)}else this._next=null,this._defer=!1},Ja.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var t=this._callbacks;if(null!==t)for(var e=0;e<t.length;e++)(0,t[e])()}},Qa.prototype.then=function(t){if(this._didCommit)t();else{var e=this._callbacks;null===e&&(e=this._callbacks=[]),e.push(t)}},Qa.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var t=this._callbacks;if(null!==t)for(var e=0;e<t.length;e++){var n=t[e];"function"!=typeof n&&a("191",n),n()}}},Za.prototype.render=function(t,e){var n=this._internalRoot,o=new Qa;return null!==(e=void 0===e?null:e)&&o.then(e),Ya(t,n,null,o._onCommit),o},Za.prototype.unmount=function(t){var e=this._internalRoot,n=new Qa;return null!==(t=void 0===t?null:t)&&n.then(t),Ya(null,e,null,n._onCommit),n},Za.prototype.legacy_renderSubtreeIntoContainer=function(t,e,n){var o=this._internalRoot,r=new Qa;return null!==(n=void 0===n?null:n)&&r.then(n),Ya(e,o,t,r._onCommit),r},Za.prototype.createBatch=function(){var t=new Ja(this),e=t._expirationTime,n=this._internalRoot,o=n.firstBatch;if(null===o)n.firstBatch=t,t._next=null;else{for(n=null;null!==o&&o._expirationTime>=e;)n=o,o=o._next;t._next=o,null!==n&&(n._next=t)}return t},Rt=Ua,Ft=Ia,Dt=function(){la||0===ca||(Ra(ca,!1),ca=0)};var Va={createPortal:ja,findDOMNode:function(t){if(null==t)return null;if(1===t.nodeType)return t;var e=t._reactInternalFiber;return void 0===e&&("function"==typeof t.render?a("188"):a("268",Object.keys(t))),t=null===(t=on(e))?null:t.stateNode},hydrate:function(t,e,n){return Ka(null,t,e,!0,n)},render:function(t,e,n){return Ka(null,t,e,!1,n)},unstable_renderSubtreeIntoContainer:function(t,e,n,o){return(null==t||void 0===t._reactInternalFiber)&&a("38"),Ka(t,e,n,!1,o)},unmountComponentAtNode:function(t){return Xa(t)||a("40"),!!t._reactRootContainer&&(Ma(function(){Ka(null,null,t,!1,function(){t._reactRootContainer=null})}),!0)},unstable_createPortal:function(){return ja.apply(void 0,arguments)},unstable_batchedUpdates:Ua,unstable_interactiveUpdates:Ia,flushSync:function(t,e){la&&a("187");var n=da;da=!0;try{return na(t,e)}finally{da=n,Ra(1073741823,!1)}},unstable_createRoot:function(t,e){return Xa(t)||a("299","unstable_createRoot"),new Za(t,!0,null!=e&&!0===e.hydrate)},unstable_flushControlled:function(t){var e=da;da=!0;try{na(t)}finally{(da=e)||la||Ra(1073741823,!1)}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[z,U,M,k.injectEventPluginsByName,g,Q,function(t){C(t,J)},Nt,Lt,Pn,L]}};!function(t){var e=t.findFiberByHostInstance;(function(t){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var e=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(e.isDisabled||!e.supportsFiber)return!0;try{var n=e.inject(t);Io=Yo(function(t){return e.onCommitFiberRoot(n,t)}),Wo=Yo(function(t){return e.onCommitFiberUnmount(n,t)})}catch(t){}})(r({},t,{overrideProps:null,findHostInstanceByFiber:function(t){return null===(t=on(t))?null:t.stateNode},findFiberByHostInstance:function(t){return e?e(t):null}}))}({findFiberByHostInstance:A,bundleType:0,version:"16.7.0",rendererPackageName:"react-dom"});var Ga={default:Va},Ba=Ga&&Va||Ga;t.exports=Ba.default||Ba},function(t,e,n){"use strict";t.exports=n(14)},function(t,e,n){"use strict";(function(t){
/** @license React v0.12.0
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(e,"__esModule",{value:!0});var n=null,o=!1,r=3,i=-1,a=-1,l=!1,s=!1;function u(){if(!l){var t=n.expirationTime;s?b():s=!0,E(f,t)}}function c(){var t=n,e=n.next;if(n===e)n=null;else{var o=n.previous;n=o.next=e,e.previous=o}t.next=t.previous=null,o=t.callback,e=t.expirationTime,t=t.priorityLevel;var i=r,l=a;r=t,a=e;try{var s=o()}finally{r=i,a=l}if("function"==typeof s)if(s={callback:s,priorityLevel:t,expirationTime:e,next:null,previous:null},null===n)n=s.next=s.previous=s;else{o=null,t=n;do{if(t.expirationTime>=e){o=t;break}t=t.next}while(t!==n);null===o?o=n:o===n&&(n=s,u()),(e=o.previous).next=o.previous=s,s.next=o,s.previous=e}}function p(){if(-1===i&&null!==n&&1===n.priorityLevel){l=!0;try{do{c()}while(null!==n&&1===n.priorityLevel)}finally{l=!1,null!==n?u():s=!1}}}function f(t){l=!0;var r=o;o=t;try{if(t)for(;null!==n;){var i=e.unstable_now();if(!(n.expirationTime<=i))break;do{c()}while(null!==n&&n.expirationTime<=i)}else if(null!==n)do{c()}while(null!==n&&!S())}finally{l=!1,o=r,null!==n?u():s=!1,p()}}var d,h,y=Date,m="function"==typeof setTimeout?setTimeout:void 0,v="function"==typeof clearTimeout?clearTimeout:void 0,g="function"==typeof requestAnimationFrame?requestAnimationFrame:void 0,w="function"==typeof cancelAnimationFrame?cancelAnimationFrame:void 0;function _(t){d=g(function(e){v(h),t(e)}),h=m(function(){w(d),t(e.unstable_now())},100)}if("object"==typeof performance&&"function"==typeof performance.now){var x=performance;e.unstable_now=function(){return x.now()}}else e.unstable_now=function(){return y.now()};var E,b,S,T=null;if("undefined"!=typeof window?T=window:void 0!==t&&(T=t),T&&T._schedMock){var C=T._schedMock;E=C[0],b=C[1],S=C[2],e.unstable_now=C[3]}else if("undefined"==typeof window||"function"!=typeof MessageChannel){var O=null,P=function(t){if(null!==O)try{O(t)}finally{O=null}};E=function(t){null!==O?setTimeout(E,0,t):(O=t,setTimeout(P,0,!1))},b=function(){O=null},S=function(){return!1}}else{"undefined"!=typeof console&&("function"!=typeof g&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!=typeof w&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"));var k=null,N=!1,L=-1,R=!1,F=!1,D=0,A=33,z=33;S=function(){return D<=e.unstable_now()};var U=new MessageChannel,M=U.port2;U.port1.onmessage=function(){N=!1;var t=k,n=L;k=null,L=-1;var o=e.unstable_now(),r=!1;if(0>=D-o){if(!(-1!==n&&n<=o))return R||(R=!0,_(I)),k=t,void(L=n);r=!0}if(null!==t){F=!0;try{t(r)}finally{F=!1}}};var I=function(t){if(null!==k){_(I);var e=t-D+z;e<z&&A<z?(8>e&&(e=8),z=e<A?A:e):A=e,D=t+z,N||(N=!0,M.postMessage(void 0))}else R=!1};E=function(t,e){k=t,L=e,F||0>e?M.postMessage(void 0):R||(R=!0,_(I))},b=function(){k=null,N=!1,L=-1}}e.unstable_ImmediatePriority=1,e.unstable_UserBlockingPriority=2,e.unstable_NormalPriority=3,e.unstable_IdlePriority=5,e.unstable_LowPriority=4,e.unstable_runWithPriority=function(t,n){switch(t){case 1:case 2:case 3:case 4:case 5:break;default:t=3}var o=r,a=i;r=t,i=e.unstable_now();try{return n()}finally{r=o,i=a,p()}},e.unstable_scheduleCallback=function(t,o){var a=-1!==i?i:e.unstable_now();if("object"==typeof o&&null!==o&&"number"==typeof o.timeout)o=a+o.timeout;else switch(r){case 1:o=a+-1;break;case 2:o=a+250;break;case 5:o=a+1073741823;break;case 4:o=a+1e4;break;default:o=a+5e3}if(t={callback:t,priorityLevel:r,expirationTime:o,next:null,previous:null},null===n)n=t.next=t.previous=t,u();else{a=null;var l=n;do{if(l.expirationTime>o){a=l;break}l=l.next}while(l!==n);null===a?a=n:a===n&&(n=t,u()),(o=a.previous).next=a.previous=t,t.next=a,t.previous=o}return t},e.unstable_cancelCallback=function(t){var e=t.next;if(null!==e){if(e===t)n=null;else{t===n&&(n=e);var o=t.previous;o.next=e,e.previous=o}t.next=t.previous=null}},e.unstable_wrapCallback=function(t){var n=r;return function(){var o=r,a=i;r=n,i=e.unstable_now();try{return t.apply(this,arguments)}finally{r=o,i=a,p()}}},e.unstable_getCurrentPriorityLevel=function(){return r},e.unstable_shouldYield=function(){return!o&&(null!==n&&n.expirationTime<a||S())},e.unstable_continueExecution=function(){null!==n&&u()},e.unstable_pauseExecution=function(){},e.unstable_getFirstCallbackNode=function(){return n}}).call(this,n(15))},function(t,e){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(t){"object"==typeof window&&(n=window)}t.exports=n},function(t,e,n){"use strict";var o=n(17);function r(){}t.exports=function(){function t(t,e,n,r,i,a){if(a!==o){var l=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw l.name="Invariant Violation",l}}function e(){return t}t.isRequired=t;var n={array:t,bool:t,func:t,number:t,object:t,string:t,symbol:t,any:t,arrayOf:e,element:t,instanceOf:e,node:t,objectOf:e,oneOf:e,oneOfType:e,shape:e,exact:e};return n.checkPropTypes=r,n.PropTypes=n,n}},function(t,e,n){"use strict";t.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},function(t,e){t.exports=Array.isArray||function(t){return"[object Array]"==Object.prototype.toString.call(t)}},function(t,e,n){"use strict";n.r(e);var o=n(0),r=n.n(o),i=n(7),a=n(5),l=n.n(a),s=n(2),u=n.n(s),c=n(3),p=n.n(c),f=n(6),d=n.n(f);function h(t){return"/"===t.charAt(0)}function y(t,e){for(var n=e,o=n+1,r=t.length;o<r;n+=1,o+=1)t[n]=t[o];t.pop()}var m=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=t&&t.split("/")||[],o=e&&e.split("/")||[],r=t&&h(t),i=e&&h(e),a=r||i;if(t&&h(t)?o=n:n.length&&(o.pop(),o=o.concat(n)),!o.length)return"/";var l=void 0;if(o.length){var s=o[o.length-1];l="."===s||".."===s||""===s}else l=!1;for(var u=0,c=o.length;c>=0;c--){var p=o[c];"."===p?y(o,c):".."===p?(y(o,c),u++):u&&(y(o,c),u--)}if(!a)for(;u--;u)o.unshift("..");!a||""===o[0]||o[0]&&h(o[0])||o.unshift("");var f=o.join("/");return l&&"/"!==f.substr(-1)&&(f+="/"),f};"function"==typeof Symbol&&Symbol.iterator;var v=function(t){return"/"===t.charAt(0)?t:"/"+t},g=function(t,e){return new RegExp("^"+e+"(\\/|\\?|#|$)","i").test(t)},w=function(t,e){return g(t,e)?t.substr(e.length):t},_=function(t){return"/"===t.charAt(t.length-1)?t.slice(0,-1):t},x=function(t){var e=t.pathname,n=t.search,o=t.hash,r=e||"/";return n&&"?"!==n&&(r+="?"===n.charAt(0)?n:"?"+n),o&&"#"!==o&&(r+="#"===o.charAt(0)?o:"#"+o),r},E=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(t[o]=n[o])}return t},b=function(t,e,n,o){var r=void 0;"string"==typeof t?(r=function(t){var e=t||"/",n="",o="",r=e.indexOf("#");-1!==r&&(o=e.substr(r),e=e.substr(0,r));var i=e.indexOf("?");return-1!==i&&(n=e.substr(i),e=e.substr(0,i)),{pathname:e,search:"?"===n?"":n,hash:"#"===o?"":o}}(t)).state=e:(void 0===(r=E({},t)).pathname&&(r.pathname=""),r.search?"?"!==r.search.charAt(0)&&(r.search="?"+r.search):r.search="",r.hash?"#"!==r.hash.charAt(0)&&(r.hash="#"+r.hash):r.hash="",void 0!==e&&void 0===r.state&&(r.state=e));try{r.pathname=decodeURI(r.pathname)}catch(t){throw t instanceof URIError?new URIError('Pathname "'+r.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):t}return n&&(r.key=n),o?r.pathname?"/"!==r.pathname.charAt(0)&&(r.pathname=m(r.pathname,o.pathname)):r.pathname=o.pathname:r.pathname||(r.pathname="/"),r},S=function(){var t=null,e=[];return{setPrompt:function(e){return p()(null==t,"A history supports only one prompt at a time"),t=e,function(){t===e&&(t=null)}},confirmTransitionTo:function(e,n,o,r){if(null!=t){var i="function"==typeof t?t(e,n):t;"string"==typeof i?"function"==typeof o?o(i,r):(p()(!1,"A history needs a getUserConfirmation function in order to use a prompt message"),r(!0)):r(!1!==i)}else r(!0)},appendListener:function(t){var n=!0,o=function(){n&&t.apply(void 0,arguments)};return e.push(o),function(){n=!1,e=e.filter(function(t){return t!==o})}},notifyListeners:function(){for(var t=arguments.length,n=Array(t),o=0;o<t;o++)n[o]=arguments[o];e.forEach(function(t){return t.apply(void 0,n)})}}},T=!("undefined"==typeof window||!window.document||!window.document.createElement),C=function(t,e,n){return t.addEventListener?t.addEventListener(e,n,!1):t.attachEvent("on"+e,n)},O=function(t,e,n){return t.removeEventListener?t.removeEventListener(e,n,!1):t.detachEvent("on"+e,n)},P=function(t,e){return e(window.confirm(t))},k="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},N=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(t[o]=n[o])}return t},L=function(){try{return window.history.state||{}}catch(t){return{}}},R=function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};d()(T,"Browser history needs a DOM");var e,n=window.history,o=(-1===(e=window.navigator.userAgent).indexOf("Android 2.")&&-1===e.indexOf("Android 4.0")||-1===e.indexOf("Mobile Safari")||-1!==e.indexOf("Chrome")||-1!==e.indexOf("Windows Phone"))&&window.history&&"pushState"in window.history,r=!(-1===window.navigator.userAgent.indexOf("Trident")),i=t.forceRefresh,a=void 0!==i&&i,l=t.getUserConfirmation,s=void 0===l?P:l,u=t.keyLength,c=void 0===u?6:u,f=t.basename?_(v(t.basename)):"",h=function(t){var e=t||{},n=e.key,o=e.state,r=window.location,i=r.pathname+r.search+r.hash;return p()(!f||g(i,f),'You are attempting to use a basename on a page whose URL path does not begin with the basename. Expected path "'+i+'" to begin with "'+f+'".'),f&&(i=w(i,f)),b(i,o,n)},y=function(){return Math.random().toString(36).substr(2,c)},m=S(),E=function(t){N(Q,t),Q.length=n.length,m.notifyListeners(Q.location,Q.action)},R=function(t){(function(t){return void 0===t.state&&-1===navigator.userAgent.indexOf("CriOS")})(t)||A(h(t.state))},F=function(){A(h(L()))},D=!1,A=function(t){D?(D=!1,E()):m.confirmTransitionTo(t,"POP",s,function(e){e?E({action:"POP",location:t}):z(t)})},z=function(t){var e=Q.location,n=M.indexOf(e.key);-1===n&&(n=0);var o=M.indexOf(t.key);-1===o&&(o=0);var r=n-o;r&&(D=!0,W(r))},U=h(L()),M=[U.key],I=function(t){return f+x(t)},W=function(t){n.go(t)},Y=0,$=function(t){1===(Y+=t)?(C(window,"popstate",R),r&&C(window,"hashchange",F)):0===Y&&(O(window,"popstate",R),r&&O(window,"hashchange",F))},J=!1,Q={length:n.length,action:"POP",location:U,createHref:I,push:function(t,e){p()(!("object"===(void 0===t?"undefined":k(t))&&void 0!==t.state&&void 0!==e),"You should avoid providing a 2nd state argument to push when the 1st argument is a location-like object that already has state; it is ignored");var r=b(t,e,y(),Q.location);m.confirmTransitionTo(r,"PUSH",s,function(t){if(t){var e=I(r),i=r.key,l=r.state;if(o)if(n.pushState({key:i,state:l},null,e),a)window.location.href=e;else{var s=M.indexOf(Q.location.key),u=M.slice(0,-1===s?0:s+1);u.push(r.key),M=u,E({action:"PUSH",location:r})}else p()(void 0===l,"Browser history cannot push state in browsers that do not support HTML5 history"),window.location.href=e}})},replace:function(t,e){p()(!("object"===(void 0===t?"undefined":k(t))&&void 0!==t.state&&void 0!==e),"You should avoid providing a 2nd state argument to replace when the 1st argument is a location-like object that already has state; it is ignored");var r=b(t,e,y(),Q.location);m.confirmTransitionTo(r,"REPLACE",s,function(t){if(t){var e=I(r),i=r.key,l=r.state;if(o)if(n.replaceState({key:i,state:l},null,e),a)window.location.replace(e);else{var s=M.indexOf(Q.location.key);-1!==s&&(M[s]=r.key),E({action:"REPLACE",location:r})}else p()(void 0===l,"Browser history cannot replace state in browsers that do not support HTML5 history"),window.location.replace(e)}})},go:W,goBack:function(){return W(-1)},goForward:function(){return W(1)},block:function(){var t=arguments.length>0&&void 0!==arguments[0]&&arguments[0],e=m.setPrompt(t);return J||($(1),J=!0),function(){return J&&(J=!1,$(-1)),e()}},listen:function(t){var e=m.appendListener(t);return $(1),function(){$(-1),e()}}};return Q},F=(Object.assign,"function"==typeof Symbol&&Symbol.iterator,Object.assign,Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(t[o]=n[o])}return t});function D(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}var A=function(t){function e(){var n,o;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);for(var r=arguments.length,i=Array(r),a=0;a<r;a++)i[a]=arguments[a];return n=o=D(this,t.call.apply(t,[this].concat(i))),o.state={match:o.computeMatch(o.props.history.location.pathname)},D(o,n)}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,t),e.prototype.getChildContext=function(){return{router:F({},this.context.router,{history:this.props.history,route:{location:this.props.history.location,match:this.state.match}})}},e.prototype.computeMatch=function(t){return{path:"/",url:"/",params:{},isExact:"/"===t}},e.prototype.componentWillMount=function(){var t=this,e=this.props,n=e.children,o=e.history;d()(null==n||1===r.a.Children.count(n),"A <Router> may have only one child element"),this.unlisten=o.listen(function(){t.setState({match:t.computeMatch(o.location.pathname)})})},e.prototype.componentWillReceiveProps=function(t){l()(this.props.history===t.history,"You cannot change <Router history>")},e.prototype.componentWillUnmount=function(){this.unlisten()},e.prototype.render=function(){var t=this.props.children;return t?r.a.Children.only(t):null},e}(r.a.Component);A.propTypes={history:u.a.object.isRequired,children:u.a.node},A.contextTypes={router:u.a.object},A.childContextTypes={router:u.a.object.isRequired};var z=A;function U(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}var M=function(t){function e(){var n,o;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);for(var r=arguments.length,i=Array(r),a=0;a<r;a++)i[a]=arguments[a];return n=o=U(this,t.call.apply(t,[this].concat(i))),o.history=R(o.props),U(o,n)}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,t),e.prototype.componentWillMount=function(){l()(!this.props.history,"<BrowserRouter> ignores the history prop. To use a custom history, use `import { Router }` instead of `import { BrowserRouter as Router }`.")},e.prototype.render=function(){return r.a.createElement(z,{history:this.history,children:this.props.children})},e}(r.a.Component);M.propTypes={basename:u.a.string,forceRefresh:u.a.bool,getUserConfirmation:u.a.func,keyLength:u.a.number,children:u.a.node};var I=M,W=n(9),Y=n.n(W),$={},J=0,Q=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments[2];"string"==typeof e&&(e={path:e});var o=e,r=o.path,i=o.exact,a=void 0!==i&&i,l=o.strict,s=void 0!==l&&l,u=o.sensitive;if(null==r)return n;var c=function(t,e){var n=""+e.end+e.strict+e.sensitive,o=$[n]||($[n]={});if(o[t])return o[t];var r=[],i={re:Y()(t,r,e),keys:r};return J<1e4&&(o[t]=i,J++),i}(r,{end:a,strict:s,sensitive:void 0!==u&&u}),p=c.re,f=c.keys,d=p.exec(t);if(!d)return null;var h=d[0],y=d.slice(1),m=t===h;return a&&!m?null:{path:r,url:"/"===r&&""===h?"/":h,isExact:m,params:f.reduce(function(t,e,n){return t[e.name]=y[n],t},{})}};var Z=function(t){function e(){return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,t.apply(this,arguments))}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,t),e.prototype.componentWillMount=function(){d()(this.context.router,"You should not use <Switch> outside a <Router>")},e.prototype.componentWillReceiveProps=function(t){l()(!(t.location&&!this.props.location),'<Switch> elements should not change from uncontrolled to controlled (or vice versa). You initially used no "location" prop and then provided one on a subsequent render.'),l()(!(!t.location&&this.props.location),'<Switch> elements should not change from controlled to uncontrolled (or vice versa). You provided a "location" prop initially but omitted it on a subsequent render.')},e.prototype.render=function(){var t=this.context.router.route,e=this.props.children,n=this.props.location||t.location,o=void 0,i=void 0;return r.a.Children.forEach(e,function(e){if(null==o&&r.a.isValidElement(e)){var a=e.props,l=a.path,s=a.exact,u=a.strict,c=a.sensitive,p=a.from,f=l||p;i=e,o=Q(n.pathname,{path:f,exact:s,strict:u,sensitive:c},t.match)}}),o?r.a.cloneElement(i,{location:n,computedMatch:o}):null},e}(r.a.Component);Z.contextTypes={router:u.a.shape({route:u.a.object.isRequired}).isRequired},Z.propTypes={children:u.a.node,location:u.a.object};var X=Z,K=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(t[o]=n[o])}return t};function j(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}var V=function(t){return 0===r.a.Children.count(t)},G=function(t){function e(){var n,o;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);for(var r=arguments.length,i=Array(r),a=0;a<r;a++)i[a]=arguments[a];return n=o=j(this,t.call.apply(t,[this].concat(i))),o.state={match:o.computeMatch(o.props,o.context.router)},j(o,n)}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,t),e.prototype.getChildContext=function(){return{router:K({},this.context.router,{route:{location:this.props.location||this.context.router.route.location,match:this.state.match}})}},e.prototype.computeMatch=function(t,e){var n=t.computedMatch,o=t.location,r=t.path,i=t.strict,a=t.exact,l=t.sensitive;if(n)return n;d()(e,"You should not use <Route> or withRouter() outside a <Router>");var s=e.route,u=(o||s.location).pathname;return Q(u,{path:r,strict:i,exact:a,sensitive:l},s.match)},e.prototype.componentWillMount=function(){l()(!(this.props.component&&this.props.render),"You should not use <Route component> and <Route render> in the same route; <Route render> will be ignored"),l()(!(this.props.component&&this.props.children&&!V(this.props.children)),"You should not use <Route component> and <Route children> in the same route; <Route children> will be ignored"),l()(!(this.props.render&&this.props.children&&!V(this.props.children)),"You should not use <Route render> and <Route children> in the same route; <Route children> will be ignored")},e.prototype.componentWillReceiveProps=function(t,e){l()(!(t.location&&!this.props.location),'<Route> elements should not change from uncontrolled to controlled (or vice versa). You initially used no "location" prop and then provided one on a subsequent render.'),l()(!(!t.location&&this.props.location),'<Route> elements should not change from controlled to uncontrolled (or vice versa). You provided a "location" prop initially but omitted it on a subsequent render.'),this.setState({match:this.computeMatch(t,e.router)})},e.prototype.render=function(){var t=this.state.match,e=this.props,n=e.children,o=e.component,i=e.render,a=this.context.router,l=a.history,s=a.route,u=a.staticContext,c={match:t,location:this.props.location||s.location,history:l,staticContext:u};return o?t?r.a.createElement(o,c):null:i?t?i(c):null:"function"==typeof n?n(c):n&&!V(n)?r.a.Children.only(n):null},e}(r.a.Component);G.propTypes={computedMatch:u.a.object,path:u.a.string,exact:u.a.bool,strict:u.a.bool,sensitive:u.a.bool,component:u.a.func,render:u.a.func,children:u.a.oneOfType([u.a.func,u.a.node]),location:u.a.object},G.contextTypes={router:u.a.shape({history:u.a.object.isRequired,route:u.a.object.isRequired,staticContext:u.a.object})},G.childContextTypes={router:u.a.object.isRequired};var B=G;function q(t){return(q="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function H(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function tt(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function et(t,e,n){return e&&tt(t.prototype,e),n&&tt(t,n),t}function nt(t,e){return!e||"object"!==q(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function ot(t){return(ot=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function rt(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&it(t,e)}function it(t,e){return(it=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var at=n(0);n(7);var lt=function(t){function e(t){var n;return H(this,e),(n=nt(this,ot(e).call(this,t))).item_list=[],n}return rt(e,at.Component),et(e,[{key:"clearItems",value:function(){this.item_list=[],this.forceUpdate()}},{key:"renderItem",value:function(t,e){this.item_list.push(at.createElement("div",{tabindex:!0,className:"searchItem",onClick:function(){window.location.href=e}},t)),this.forceUpdate()}},{key:"render",value:function(){return this.item_list.length>0?at.createElement("div",{className:"searchItems"},this.item_list):null}}]),e}(),st=function(t){function e(t){var n;return H(this,e),(n=nt(this,ot(e).call(this,t))).search_list=at.createRef(),n}return rt(e,at.Component),et(e,[{key:"handleChange",value:function(){var t=event.target.value,e=this;fetch("/search",{method:"POST",headers:{Accept:"application/json",Authorization:"Basic","Content-Type":"application/json"},body:JSON.stringify({type:"search",text:t})}).then(function(t){return t.json()}).then(function(t){var n=function(t,e,n,o){var r=[];for(var i in t){var a=t[i].username,l="/user/"+t[i].username;r.push([a,l])}for(var i in e){var s=e[i].artist,u="/artist/"+e[i].artist;r.push([s,u])}for(var i in n){var c=n[i].song,p="/post/"+n[i].artist+"/"+n[i].song;r.push([c,p])}for(var i in o){var f=o[i].album,d="/album/"+o[i].artist+"/"+o[i].album;r.push([f,d])}return r.sort(function(t,e){return t[0]>e[0]?1:-1}),r}(t.users,t.artists,t.songs,t.albums);for(var o in e.search_list.current.clearItems(),n)e.search_list.current.renderItem(n[o][0],n[o][1])})}},{key:"render",value:function(){return at.createElement("div",{className:"searchBarContainer"},at.createElement("input",{className:"searchBar",onChange:this.handleChange.bind(this),placeholder:"Search",type:"text"}),at.createElement(lt,{ref:this.search_list}))}}]),e}(),ut=function(t){function e(t){var n;return H(this,e),(n=nt(this,ot(e).call(this,t))).search_list=at.createRef(),n.dropdownRef=at.createRef(),n.notificationsRef=at.createRef(),n.dropdown_content=[],n.optionsRef=at.createRef(),n.notification_div="",n.dropdown_div="",n.login_div="",n}return rt(e,at.Component),et(e,[{key:"logoutClicked",value:function(){fetch("/logout",{method:"POST",headers:{Accept:"application/json",Authorization:"Basic","Content-Type":"application/json"}}).then(function(t){return t.json()}).then(function(t){location.reload(!0)})}},{key:"toggleNotifications",value:function(){"block"==this.dropdownRef.current.style.display?this.closeNotifications():this.showNotifications()}},{key:"showNotifications",value:function(){this.dropdownRef.current.style.display="block",this.forceUpdate()}},{key:"closeNotifications",value:function(){this.dropdownRef.current.style.display="none",this.forceUpdate()}},{key:"componentDidMount",value:function(){var t=this;fetch("/notifications",{method:"POST",headers:{Accept:"application/json",Authorization:"Basic","Content-Type":"application/json"}}).then(function(t){return t.json()}).then(function(e){if(t.props.notifications=e.notifications,null!=t.props.notifications&&t.props.notifications.length>0){for(var n=0;n<t.props.notifications.length;++n){var o=t.props.notifications[n].num_comments+", comments",r=t.props.notifications[n].num_likes+" likes";0==t.props.notifications[n].num_comments&&(o=""),0==t.props.notifications[n].num_likes&&(r="",0!=o.length&&(o=o.substring(0,o.indexOf(","))+o.substring(o.indexOf(",")+1,o.length)));var i="Your post "+t.props.notifications[n].name+" got "+r+o,a="/user/"+t.props.notifications[n].username+"/"+t.props.notifications[n].post_id;t.props.notifications[n].tag>0&&(i=t.props.notifications[n].tagger+" tagged you in a post",a=1==t.props.notifications[n].tag?"/user/"+t.props.notifications[n].tagger+"/"+t.props.notifications[n].post_id:"/user/"+t.props.notifications[n].name+"/"+t.props.notifications[n].post_id),t.dropdown_content.push(at.createElement("div",{key:t.props.notifications[n].post_id,id:t.props.notifications[n].post_id,className:"dropdownelement",style:{background:"white",border:"1px solid #F8F8F8",backgroundColor:"#F8F8F8"}},at.createElement("a",{className:"dropdownelement",href:a,style:{textDecoration:"none",fontFamily:"Roboto"}},i," "),at.createElement("button",{key:t.props.notifications[n].post_id,style:{right:"0px",position:"absolute",borderRadius:"0px",height:"20px"},className:"dropdownelement grayButton",onClick:t.removeNotification.bind(t,t.props.notifications[n].post_id)}," X ")))}t.notification_div=at.createElement("div",{className:"notifications",ref:t.notificationsRef,onClick:t.toggleNotifications.bind(t),style:{marginRight:"10px",fontWeight:"bold",fontSize:"12pt",color:"#178275",width:"24px",height:"24px",textAlign:"center",backgroundColor:"white",borderRadius:"50%",position:"relative",top:"6px",display:"flex",justifyContent:"center",alignItems:"center"}}," ",t.props.notifications.length)}t.forceUpdate()}),window.addEventListener("mousedown",this.handleClickOutside.bind(this))}},{key:"componentWillUnmount",value:function(){window.removeEventListener("mousedown",this.handleClickOutside.bind(this))}},{key:"handleClickOutside",value:function(t){"contextmenu"!=t.type&&"dropdown"!=t.target.className&&"notifications"!=t.target.className&&"dropdownelement"!=t.target.className&&this.closeNotifications()}},{key:"removeNotification",value:function(t){for(var e=0;e<this.dropdown_content.length;++e)if(this.dropdown_content[e].props.id==t){this.dropdown_content.splice(e,1),this.notification_div=at.createElement("div",{className:"notifications",ref:this.notificationsRef,onClick:this.toggleNotifications.bind(this),style:{marginRight:"10px",fontWeight:"bold",fontSize:"14pt",minWidth:"30px",minHeight:"30px",textAlign:"center"}}," ",this.notification_div.props.children[1]-1);break}0==this.dropdown_content.length&&(this.notification_div="",this.closeNotifications()),this.forceUpdate(),fetch("/remove_notification",{method:"POST",headers:{Accept:"application/json",Authorization:"Basic","Content-Type":"application/json"},body:JSON.stringify({})}).then(function(t){return t.json()}).then(function(t){})}},{key:"toggleOptions",value:function(){"none"==this.optionsRef.current.style.display?this.optionsRef.current.style.display="":this.optionsRef.current.style.display="none"}},{key:"closeOptions",value:function(){this.optionsRef.current.style.display="none"}},{key:"render",value:function(){var t,e,n=this;return this.dropdown_div=at.createElement("div",{className:"dropdown",ref:this.dropdownRef,style:{width:"400px",minHeight:"10px",position:"fixed",right:"124",top:"52px",background:"white",display:"none",fontWeight:"normal",fontSize:"12pt",zIndex:"8"}},this.dropdown_content),null==this.props.username?(t=at.createElement("div",{className:"headerLink",onClick:function(){window.location.href="/register"}},"Register"),e=at.createElement("div",{className:"headerLink",onClick:function(){window.location.href="/login"}},"Login")):t=at.createElement("div",{className:"headerLink",onClick:function(){window.location.href="/user/"+n.props.username}},this.props.username),at.createElement("div",null,at.createElement("head",null,at.createElement("title",null,"Unheard"),at.createElement("link",{rel:"stylesheet",href:"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css"})),at.createElement("header",null,at.createElement("div",{className:"fixedHeader"},at.createElement("div",{className:"headerLink",onClick:function(){window.location.href="/"}},"Home"),at.createElement("div",{style:{flex:"1 0 auto",padding:"0 12px"}},at.createElement(st,null)),e,t,this.notification_div,this.dropdown_div,at.createElement("div",{className:"headerLink",onClick:function(){window.location.href="/random"}},"Random"),at.createElement("div",{className:"headerMenuArrow"},at.createElement("svg",{className:"options",onClick:this.toggleOptions.bind(this),width:"18",height:"16",viewBox:"0 0 26 16",fill:"none",xmlns:"http://www.w3.org/2000/svg"},at.createElement("path",{d:"M23.0926 1.25L13 14.3606L2.90742 1.25L23.0926 1.25Z",fill:"white",stroke:"white",strokeWidth:"2"}))),at.createElement("div",{ref:this.optionsRef,style:{backgroundColor:"#178275",display:"none",position:"fixed",right:"0px",top:"40px"}},at.createElement("div",{className:"headerLink",onClick:function(){window.location.href="/about"}},"About"),at.createElement("div",{className:"headerLink",onClick:function(){window.location.href="/contact"}},"Contact"),null!=this.props.username&&at.createElement("div",{className:"headerLink",onClick:this.logoutClicked.bind(this)},"Logout")))))}}]),e}(),ct=n(1),pt=n.n(ct),ft=n(4),dt=n.n(ft);function ht(t){return(ht="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function yt(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function mt(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function vt(t,e,n){return e&&mt(t.prototype,e),n&&mt(t,n),t}function gt(t,e){return!e||"object"!==ht(e)&&"function"!=typeof e?Et(t):e}function wt(t){return(wt=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function _t(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&xt(t,e)}function xt(t,e){return(xt=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function Et(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}var bt=["January","February","March","April","May","June","July","August","September","October","November","December"],St=function(t){function e(t){var n;return yt(this,e),(n=gt(this,wt(e).call(this,t))).likes_score=n.props.song.likes-t.song.dislikes,n.up_color="#2F3846",n.down_color="#2F3846",n.contentRef=r.a.createRef(),n.ellipsis=r.a.createElement("div",null),n.bump_button=r.a.createElement("button",{style:{color:"black"},onClick:n.bumpClicked.bind(Et(Et(n)))}," Bump "),n.props.bump&&(n.bump_button=r.a.createElement("button",{style:{color:"black",backgroundColor:"gray"},onClick:n.bumpClicked.bind(Et(Et(n))),disabled:!0}," Bumped ")),n}return _t(e,r.a.Component),vt(e,[{key:"renderiframe",value:function(t){return{__html:t}}},{key:"likeClicked",value:function(){if(pt.a.checkLoggedIn()){var t=this.props.song.post_id;null==t&&(t=this.props.song.id);var e="/like";null==this.props.song.username&&(e="/global_like"),fetch(e,{method:"POST",headers:{Accept:"application/json",Authorization:"Basic","Content-Type":"application/json"},body:JSON.stringify({user:this.props.song.username,id:t,name:this.props.song.title})}).then(function(t){return t.json()}),1==this.props.like_state?(this.likes_score-=1,this.up_color="#2F3846",this.props.like_state=-1):(-1==this.props.like_state?this.likes_score+=1:this.likes_score+=2,this.up_color="#1485cc",this.down_color="#2F3846",this.props.like_state=1),this.forceUpdate()}else alert("MUST BE LOGGED IN")}},{key:"dislikeClicked",value:function(){if(pt.a.checkLoggedIn()){var t=this.props.song.post_id;null==t&&(t=this.props.song.id);var e="/dislike";null==this.props.song.username&&(e="/global_dislike"),fetch(e,{method:"POST",headers:{Accept:"application/json",Authorization:"Basic","Content-Type":"application/json"},body:JSON.stringify({user:this.props.song.username,id:t,name:this.props.song.title})}).then(function(t){return t.json()}),0==this.props.like_state?(this.down_color="#2F3846",this.props.like_state=-1,this.likes_score+=1):(-1==this.props.like_state?this.likes_score-=1:this.likes_score-=2,this.down_color="#dd3d3d",this.up_color="#2F3846",this.props.like_state=0),this.forceUpdate()}else alert("MUST BE LOGGED IN")}},{key:"componentDidMount",value:function(){if(this.contentRef.current.offsetHeight>390){var t="/user/"+this.props.song.username+"/"+this.props.song.post_id;this.ellipsis=r.a.createElement("div",{style:{}},r.a.createElement("a",{style:{color:"#178275",fontSize:"14pt",fontWeight:"bold"},href:t}," See More ")),this.forceUpdate()}}},{key:"bumpClicked",value:function(){if(pt.a.checkLoggedIn()){var t=this;fetch("/bump",{method:"POST",headers:{Accept:"application/json",Authorization:"Basic","Content-Type":"application/json"},body:JSON.stringify({post_id:this.props.song.post_id})}).then(function(t){return t.json()}).then(function(e){e.success?(t.bump_button=r.a.createElement("button",{style:{color:"black",backgroundColor:"gray"},onClick:t.bumpClicked.bind(this),disabled:!0}," Bumped "),t.forceUpdate()):alert("YOU HAVE NO BUMPS AVAILABLE")})}else alert("MUST BE LOGGED IN")}},{key:"render",value:function(){var t=new Date(this.props.song.timestamp),e=r.a.createElement("h1",{className:"post_title",style:{fontWeight:"bold",fontSize:"24px"}},r.a.createElement("a",{href:"/user/"+this.props.song.username+"/"+this.props.song.id}," ",this.props.song.title)),n="",o="",i=(this.props.song.artist,[]);this.props.song.artist.split("^").map(function(t,e){i.push(r.a.createElement("a",{key:e,href:"/artist/"+t}," ",t," ")),i.push(",")}),i=i.slice(0,i.length-1);this.props.song.artist;var a=[],l=(r.a.createElement("h2",null,a),this.props.song.post_id);null!=this.props.song.username&&(l=this.props.song.id," posted by "," at ",n=this.props.song.username,o="/user/"+this.props.song.username,a=dt.a.formatContent(this.props.song.content,this.props.song.tags));var s={color:"black"},u={color:"black"};1==this.props.like_state?(s.color="blue",this.up_color="#1485cc"):0==this.props.like_state&&(u.color="red",this.down_color="#dd3d3d");r.a.createElement("div",null,r.a.createElement("div",{className:"likes",id:l},"Likes: ",this.likes_score," "),r.a.createElement("button",{ref:this.likeRef,onClick:this.likeClicked.bind(this),type:"button",className:"like",id:l,style:s},"Like"),r.a.createElement("button",{ref:this.dislikeRef,onClick:this.dislikeClicked.bind(this),type:"button",className:"unlike",id:l,style:u},"Hate")),r.a.createElement("div",{style:{fontSize:"24px"},className:"comment_section",id:l}),this.props.song.artist,this.props.song.song,this.props.song.song;"NO_SONG_ALBUM_ONLY"==this.props.song.song&&("/album/"+this.props.song.artist+"/"+this.props.song.album,this.props.song.album);var c=r.a.createElement("div",{style:{maxHeight:"450px",paddingTop:"5px",lineHeight:"27px",width:"380px",fontSize:"20px",overflow:"hidden",textOverflow:"ellipsis"}},r.a.createElement("div",{ref:this.contentRef},a));return null==this.props.song.username&&("340px",c=r.a.createElement("div",{ref:this.contentRef}),"left"),r.a.createElement("div",{key:this.props.song.post_id,style:{border:"1px solid #F1F1F1",borderRadius:"7px",width:"735px",background:"white",minHeight:"513px",marginBottom:"12px"}},r.a.createElement("div",{style:{display:"flex",flexDirection:"row"}},r.a.createElement("div",{style:{width:"320px",paddingTop:"30px",paddingLeft:"10px",borderRight:"1px solid rgba(0, 0, 0, 0.09)",borderRadius:"7px",borderTopRightRadius:"0px",borderBottomRightRadius:"0px"}},r.a.createElement("div",{style:{display:"flex",flexDirection:"row"}},r.a.createElement("div",{style:{width:"65px",height:"65px",backgroundColor:this.props.user_profile,borderRadius:"50%"}}),r.a.createElement("div",{style:{paddingLeft:"20px"}},r.a.createElement("div",{style:{fontSize:"24px",fontWeight:"bold"}}," ",r.a.createElement("a",{href:o}," ",n," ")),r.a.createElement("div",{style:{fontSize:"17px",paddingRight:"10px"}},bt[parseInt(t.getMonth())]+" "+t.getDate()+", "+t.getFullYear()))),r.a.createElement("div",{style:{paddingTop:"30px"}},r.a.createElement("span",{dangerouslySetInnerHTML:this.renderiframe(this.props.song.embedded_content)})),r.a.createElement("div",{style:{width:"300px",height:"30px"}}),r.a.createElement("div",{style:{height:"35px",display:"flex",flexDirection:"row"}},r.a.createElement("div",{style:{width:"15px",height:"30px"}}),r.a.createElement("svg",{onClick:this.likeClicked.bind(this),width:"14",height:"24",viewBox:"0 0 16 27",fill:"none",xmlns:"http://www.w3.org/2000/svg",color:"blue"},r.a.createElement("path",{d:"M8.70711 0.987356C8.31658 0.596832 7.68342 0.596832 7.29289 0.987356L0.928931 7.35132C0.538407 7.74184 0.538407 8.37501 0.928931 8.76553C1.31946 9.15606 1.95262 9.15606 2.34315 8.76553L8 3.10868L13.6569 8.76553C14.0474 9.15606 14.6805 9.15606 15.0711 8.76553C15.4616 8.37501 15.4616 7.74184 15.0711 7.35132L8.70711 0.987356ZM9 26.3126L9 1.69446L7 1.69446L7 26.3126L9 26.3126Z",fill:this.up_color})),r.a.createElement("div",{style:{minWidth:"30px",height:"30px",verticalAlign:"middle",textAlign:"center",fontSize:"16px",fontWeight:"bold"}},r.a.createElement("a",{href:"/user/"+this.props.song.username+"/"+this.props.song.id+"/likes"},this.likes_score," ")),r.a.createElement("svg",{onClick:this.dislikeClicked.bind(this),width:"14",height:"24",viewBox:"0 0 16 27",fill:"none",xmlns:"http://www.w3.org/2000/svg"},r.a.createElement("path",{d:"M7.29289 26.0197C7.68342 26.4102 8.31658 26.4102 8.70711 26.0197L15.0711 19.6557C15.4616 19.2652 15.4616 18.632 15.0711 18.2415C14.6805 17.851 14.0474 17.851 13.6569 18.2415L8 23.8984L2.34315 18.2415C1.95262 17.851 1.31946 17.851 0.928932 18.2415C0.538408 18.632 0.538408 19.2652 0.928932 19.6557L7.29289 26.0197ZM7 0.694489L7 25.3126H9L9 0.694489L7 0.694489Z",fill:this.down_color})),r.a.createElement("div",{style:{width:"10px",height:"30px",borderRight:"1px solid rgba(0, 0, 0, 0.09)"}}),r.a.createElement("div",{style:{width:"10px",height:"30px"}}),r.a.createElement("div",{style:{}},r.a.createElement("a",{href:"/user/"+this.props.song.username+"/"+this.props.song.id},r.a.createElement("img",{src:"/speech_bubble.png",width:"30",height:"26",alt:""}))),r.a.createElement("div",{style:{width:"30px",height:"30px",verticalAlign:"middle",textAlign:"center",fontSize:"16px",fontWeight:"bold"}}," ",r.a.createElement("a",{href:"/user/"+this.props.song.username+"/"+this.props.song.id}," ",this.props.num_comments," ")))),r.a.createElement("div",{style:{paddingTop:"30px",paddingLeft:"10px",paddingRight:"20px",width:"400px",fontSize:"20px"}},e,c,this.ellipsis)))}}]),e}();function Tt(t,e,n,o,i,a){var l=-1,s=0,u=!0,c=!1,p=void 0;try{for(var f,d=e[Symbol.iterator]();!(u=(f=d.next()).done);u=!0){var h=f.value;null==(O=h.post_id)&&(O=h.id);var y=t.id;null==y&&(y=t.post_id),O==y&&(l=h.like_state)}}catch(t){c=!0,p=t}finally{try{u||null==d.return||d.return()}finally{if(c)throw p}}if(null!=t.username){var m=!0,v=!1,g=void 0;try{for(var w,_=n[Symbol.iterator]();!(m=(w=_.next()).done);m=!0){var x=w.value;if((O=x.post_id)==t.post_id){s=x.count;break}}}catch(t){v=!0,g=t}finally{try{m||null==_.return||_.return()}finally{if(v)throw g}}}else{var E=!0,b=!1,S=void 0;try{for(var T,C=o[Symbol.iterator]();!(E=(T=C.next()).done);E=!0){var O,P=T.value;if((O=P.post_id)==t.post_id){s=P.count;break}}}catch(t){b=!0,S=t}finally{try{E||null==C.return||C.return()}finally{if(b)throw S}}}var k=!1,N=!0,L=!1,R=void 0;try{for(var F,D=i[Symbol.iterator]();!(N=(F=D.next()).done);N=!0){var A=F.value;t.post_id==A.post_id&&(k=!0)}}catch(t){L=!0,R=t}finally{try{N||null==D.return||D.return()}finally{if(L)throw R}}var z=a[t.username];return r.a.createElement(St,{key:t.post_id,song:t,like_state:l,num_comments:s,user_profile:z,bump:k})}var Ct=function(t){function e(){return yt(this,e),gt(this,wt(e).apply(this,arguments))}return _t(e,r.a.Component),vt(e,[{key:"render",value:function(){return r.a.createElement("div",{style:{width:"735px"}},this.props.posts.map(function(t){return r.a.createElement("div",null," ",t," ")}))}}]),e}();function Ot(t){return(Ot="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Pt(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function kt(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function Nt(t,e,n){return e&&kt(t.prototype,e),n&&kt(t,n),t}function Lt(t,e){return!e||"object"!==Ot(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Rt(t){return(Rt=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function Ft(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Dt(t,e)}function Dt(t,e){return(Dt=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var At=function(t){function e(t){var n;return Pt(this,e),(n=Lt(this,Rt(e).call(this,t))).state={embedLink:"",title:"",content:""},n.contentRef=r.a.createRef(),n.tagFlag=!1,n.currentTag="",n.tagList=[],n.artists=[],n.songs_and_albums=[],n.users=[],n.artistSearch=!1,n.currentArtist="",n.potential_tags=[],n.artistFlag=!1,n.lastContentSize=0,n.tagged=!1,n.submissionLikeState=-1,n}return Ft(e,r.a.Component),Nt(e,[{key:"songInput",value:function(t){var e=t.target.value;this.setState({embedLink:e})}},{key:"onTitleChange",value:function(t){var e=t.target.value;this.setState({title:e})}},{key:"contentInput",value:function(){event.target.value,this.contentRef.current.value;dt.a.getTags(this),console.log("WHAT"),this.lastContentSize=this.contentRef.current.value.length,this.forceUpdate()}},{key:"selectTag",value:function(t){dt.a.tagClicked(this,t)}},{key:"submitPost",value:function(){if(pt.a.checkLoggedIn()){var t=this;fetch("/post",{method:"POST",headers:{Accept:"application/json",Authorization:"Basic","Content-Type":"application/json"},body:JSON.stringify({song:this.state.embedLink,content:this.contentRef.current.value,title:this.state.title,submissionLikeState:this.submissionLikeState,potentialTags:this.potential_tags})}).then(function(t){return t.json()}).then(function(e){t.setState({embedLink:"",title:""}),t.contentRef.current.value="",location.reload(!0)})}else alert("MUST BE LOGGED IN")}},{key:"submissionLiked",value:function(){1==this.submissionLikeState?this.submissionLikeState=-1:this.submissionLikeState=1,this.forceUpdate()}},{key:"submissionDisliked",value:function(){0==this.submissionLikeState?this.submissionLikeState=-1:this.submissionLikeState=0,this.forceUpdate()}},{key:"render",value:function(){var t="none";return this.tagFlag&&(t=""),r.a.createElement("div",{style:{display:"flex",flexDirection:"column",backgroundColor:"white",border:"1px solid #F1F1F1",borderRadius:"8px",padding:"12px 16px 16px 16px"}},r.a.createElement("div",{style:{fontFamily:"RobotoRegular",fontSize:"20px",color:"rgba(47, 56, 70, 0.58)",borderBottom:"1px solid rgba(0, 0, 0, 0.09)",paddingBottom:"8px"}},"Create Post"),r.a.createElement("div",{style:{display:"flex",flexDirection:"row",paddingTop:"16px"}},r.a.createElement("div",{style:{width:"65px",height:"65px",backgroundColor:"#178275",borderRadius:"50%",marginRight:"12px"}}),r.a.createElement("div",{style:{display:"flex",flex:"1 0 auto"}},r.a.createElement("input",{onChange:this.songInput.bind(this),value:this.state.embedLink,placeholder:"Embed link here",style:{border:"1px solid rgba(0, 0, 0, 0.09)",borderRadius:"8px",fontSize:"16px",padding:"8px",width:"100%"}}))),r.a.createElement("div",{style:{display:this.state.embedLink?"flex":"none",flexDirection:"row",paddingTop:"16px"}},r.a.createElement("div",{style:{display:"flex",flexDirection:"column",flex:"1 0 auto"}},r.a.createElement("div",{style:{display:"flex",flexDirection:"column",flex:"1 0 auto"}},r.a.createElement("input",{autoComplete:"off",onChange:this.onTitleChange.bind(this),placeholder:"Title",style:{border:"1px solid rgba(0, 0, 0, 0.09)",borderBottom:"none",borderRadius:"8px 8px 0 0",padding:"8px"},type:"text",value:this.state.title}),r.a.createElement("textarea",{autoComplete:"off",onChange:this.contentInput.bind(this),placeholder:"Your text here",ref:this.contentRef,style:{border:"1px solid rgba(0, 0, 0, 0.09)",borderRadius:"0 0 8px 8px",flex:"1 0 auto",padding:"8px",resize:"none"}})),r.a.createElement("div",{style:{paddingTop:"12px"}},r.a.createElement("button",{className:"feed_postButton",onClick:this.submitPost.bind(this)},"Post"))),r.a.createElement("div",{style:{display:this.state.embedLink?"":"none",marginLeft:"16px"}},r.a.createElement("div",{dangerouslySetInnerHTML:pt.a.renderiframe(this.state.embedLink)})),r.a.createElement("div",{style:{position:"fixed",width:"200px",height:"300px",right:"1%",top:"60px",backgroundColor:"white",display:t,zIndex:15,overflowY:"scroll",border:"1px solid #F1F1F1",borderRadius:"7px"}},this.tagList)))}}]),e}(),zt=function(t){function e(t){var n;Pt(this,e),(n=Lt(this,Rt(e).call(this,t))).global_post_index=0,n.state={global_post_index:0},n.global_posts=[],n.trending_posts=[];for(var o=0;o<n.props.data.length;++o){var i=n.props.data[o].embedded_content;n.props.data[o].embedded_content=pt.a.SetSpotifySize(i,250,330),n.global_posts.push(n.props.data[o])}return n.related_links=[],n.trending_refs=[],n.global_posts.map(function(t,e){var o=r.a.createRef();0==e?n.trending_posts.push(r.a.createElement("div",{key:t.post_id,ref:o,dangerouslySetInnerHTML:pt.a.renderiframe(t.embedded_content)})):n.trending_posts.push(r.a.createElement("div",{key:t.post_id,ref:o,style:{display:"none"},dangerouslySetInnerHTML:pt.a.renderiframe(t.embedded_content)})),n.trending_refs.push(o)}),n}return Ft(e,r.a.Component),Nt(e,[{key:"rightClick",value:function(){if(this.trending_refs[this.global_post_index].current.style.display="none",this.global_post_index++,this.global_post_index>=15)this.global_post_index=0,this.trending_refs[this.global_post_index].current.style.display="";else if(this.global_post_index>=this.trending_refs.length-2){var t=this.trending_refs.length,e=this;fetch("/updateTrending",{method:"POST",headers:{Accept:"application/json",Authorization:"Basic","Content-Type":"application/json"},body:JSON.stringify({global_offset:t})}).then(function(t){return t.json()}).then(function(t){for(var n in Object.keys(t.posts)){var o=t.posts[n];o.embedded_content=pt.a.SetSpotifySize(o.embedded_content,250,330);var i=r.a.createRef();e.trending_posts.push(r.a.createElement("div",{key:o.post_id,ref:i,style:{display:"none"},dangerouslySetInnerHTML:pt.a.renderiframe(o.embedded_content)})),e.trending_refs.push(i),e.forceUpdate()}e.trending_refs[e.global_post_index].current.style.display=""})}else this.trending_refs[this.global_post_index].current.style.display="";this.forceUpdate()}},{key:"leftClick",value:function(){this.trending_refs[this.global_post_index].current.style.display="none",this.global_post_index--,this.global_post_index<0&&(this.global_post_index=0),this.trending_refs[this.global_post_index].current.style.display="",this.forceUpdate()}},{key:"componentDidMount",value:function(){var t=this;fetch("/random_links",{method:"POST",headers:{Accept:"application/json",Authorization:"Basic","Content-Type":"application/json"},body:JSON.stringify({})}).then(function(t){return t.json()}).then(function(e){var n=!0,o=!1,i=void 0;try{for(var a,l=e.data[Symbol.iterator]();!(n=(a=l.next()).done);n=!0){var s=a.value;t.related_links.push(r.a.createElement("div",{style:{width:"300px",height:"20px",overflow:"hidden",whiteSpace:"nowrap",textOverflow:"ellipsis"}},r.a.createElement("a",{href:s.url}," ",s.text," ")," "))}}catch(t){o=!0,i=t}finally{try{n||null==l.return||l.return()}finally{if(o)throw i}}t.forceUpdate()})}},{key:"render",value:function(){return r.a.createElement("div",{style:{width:"400px",height:"680px",backgroundColor:"white",border:"1px solid #F1F1F1",borderRadius:"8px"}},r.a.createElement("div",{style:{margin:"0px auto",fontWeight:"bold",width:"110px",fontSize:"27px",paddingTop:"16px"}},"Trending"),r.a.createElement("div",{style:{margin:"0px auto",fontWeight:"bold",width:"324px",height:"10px",fontSize:"27px",paddingTop:"16px",borderBottom:"1px solid rgba(0, 0, 0, 0.09)"}}),r.a.createElement("div",{style:{display:"flex",flexDirection:"row",paddingTop:"30px",width:"290px",margin:"0px auto",justifyContent:"center",alignItems:"center"}},r.a.createElement("div",{style:{paddingRight:"10px",width:"30px",height:"50px"}},r.a.createElement("svg",{onClick:this.leftClick.bind(this),width:"20",height:"50",viewBox:"0 0 20 50",fill:"none",xmlns:"http://www.w3.org/2000/svg"},r.a.createElement("path",{d:"M19 49L2 25L19 0.999998",stroke:"#2F3846",strokeOpacity:"0.2",strokeWidth:"2"}))),this.trending_posts.map(function(t){return t}),r.a.createElement("div",{style:{paddingLeft:"10px",width:"20px",height:"50px"}},r.a.createElement("svg",{onClick:this.rightClick.bind(this),width:"20",height:"50",viewBox:"0 0 20 50",fill:"none",xmlns:"http://www.w3.org/2000/svg"},r.a.createElement("path",{d:"M1 1L18 25L1 49",stroke:"#2F3846",strokeOpacity:"0.2",strokeWidth:"2"})))),r.a.createElement("div",{style:{paddingTop:"10px",margin:"0px auto",width:"300px"}},r.a.createElement("div",{style:{margin:"0px auto",fontWeight:"bold",width:"140",fontSize:"27px",paddingTop:"16px"}},"Other Links"),r.a.createElement("div",{style:{margin:"0px auto",fontWeight:"bold",width:"300px",height:"10px",fontSize:"27px",paddingTop:"16px",borderBottom:"1px solid rgba(0, 0, 0, 0.09)"}}),r.a.createElement("div",{style:{paddingTop:"20px"}},this.related_links.map(function(t){return t}))))}}]),e}(),Ut=function(t){function e(t){var n;return Pt(this,e),(n=Lt(this,Rt(e).call(this,t))).state={posts:[]},n.loading_posts_semaphor=!1,n.offset=0,n.non_priority_offset=0,n.global_offset=0,n.non_priority_global_offset=0,n}return Ft(e,r.a.Component),Nt(e,[{key:"handleScroll",value:function(){if(window.innerHeight+window.scrollY>=document.body.offsetHeight&&!this.loading_posts_semaphor){var t=this;this.loading_posts_semaphor=!0,fetch("/load_post_data",{method:"POST",headers:{Accept:"application/json",Authorization:"Basic","Content-Type":"application/json"},body:JSON.stringify({offset:t.offset,user:t.props.data.username})}).then(function(t){return t.json()}).then(function(e){t.offset+=e.songs.length;var n=[],o=!0,r=!1,i=void 0;try{for(var a,l=e.songs[Symbol.iterator]();!(o=(a=l.next()).done);o=!0){var s=a.value;n.push(Tt(s,e.likes,e.num_comments,e.num_posts,e.bumps,e.user_profiles))}}catch(t){r=!0,i=t}finally{try{o||null==l.return||l.return()}finally{if(r)throw i}}t.setState({posts:t.state.posts.concat(n)}),t.loading_posts_semaphor=!1})}}},{key:"componentDidMount",value:function(){window.addEventListener("scroll",this.handleScroll.bind(this)),this.updateOffsets(this.props.data.songs);var t=[],e=!0,n=!1,o=void 0;try{for(var r,i=this.props.data.songs[Symbol.iterator]();!(e=(r=i.next()).done);e=!0){var a=r.value;t.push(Tt(a,this.props.data.likes,this.props.data.num_comments,this.props.data.num_posts,this.props.data.bumps,this.props.data.user_profiles))}}catch(t){n=!0,o=t}finally{try{e||null==i.return||i.return()}finally{if(n)throw o}}this.setState({posts:t})}},{key:"componentWillUnmount",value:function(){window.removeEventListener("scroll",this.handleScroll.bind(this))}},{key:"updateOffsets",value:function(t){var e=!0,n=!1,o=void 0;try{for(var r,i=t[Symbol.iterator]();!(e=(r=i.next()).done);e=!0){var a=r.value;0==a.offset_type?++this.offset:1==a.offset_type?++this.non_priority_offset:2==a.offset_type?++this.global_offset:++this.non_priority_global_offset}}catch(t){n=!0,o=t}finally{try{e||null==i.return||i.return()}finally{if(n)throw o}}}},{key:"handleScroll",value:function(){if(window.innerHeight+window.scrollY>=document.body.offsetHeight&&!this.loading_posts_semaphor){var t=this;this.loading_posts_semaphor=!0,fetch("/load_feed",{method:"POST",headers:{Accept:"application/json",Authorization:"Basic","Content-Type":"application/json"},body:JSON.stringify({offset:this.offset,non_priority_offset:this.non_priority_offset,global_offset:this.global_offset,non_priority_global_offset:this.non_priority_global_offset})}).then(function(t){return t.json()}).then(function(e){t.updateOffsets(e.songs);var n=[],o=!0,r=!1,i=void 0;try{for(var a,l=e.songs[Symbol.iterator]();!(o=(a=l.next()).done);o=!0){var s=a.value;n.push(Tt(s,e.likes,e.num_comments,e.num_posts,e.bumps,e.user_profiles))}}catch(t){r=!0,i=t}finally{try{o||null==l.return||l.return()}finally{if(r)throw i}}t.setState({posts:t.state.posts.concat(n)}),t.loading_posts_semaphor=!1})}}},{key:"render",value:function(){return r.a.createElement("div",{style:{display:"flex",justifyContent:"center",backgroundColor:"#F6F6F6"}},r.a.createElement("div",{style:{display:"flex",flexDirection:"column"}},r.a.createElement("div",{style:{marginTop:"16px"}},r.a.createElement(At,null)),r.a.createElement("div",{style:{display:"flex",flexDirection:"row",marginTop:"12px"}},r.a.createElement("div",{style:{marginRight:"12px"}},r.a.createElement(Ct,{posts:this.state.posts})),r.a.createElement("div",{className:"feed_stickySideBar"},r.a.createElement(zt,{data:this.props.data.global_songs})))))}}]),e}();function Mt(t){return(Mt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function It(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function Wt(t,e){return!e||"object"!==Mt(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Yt(t){return(Yt=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function $t(t,e){return($t=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var Jt=function(t){function e(t){return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),Wt(this,Yt(e).call(this,t))}var n,o,i;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&$t(t,e)}(e,r.a.Component),n=e,(o=[{key:"render",value:function(){return r.a.createElement("div",{style:{top:"150px",left:"5%",position:"relative"}},r.a.createElement("div",null,r.a.createElement("h1",null,r.a.createElement("a",{href:"https://forms.gle/SfT8f3hiMRHRT7mu7"}," Pre-Test Survey "))),r.a.createElement("div",null,r.a.createElement("h1",null,r.a.createElement("a",{href:"https://forms.gle/34DbWbs8GhvbDFHx7"}," Feedback "))))}}])&&It(n.prototype,o),i&&It(n,i),e}();function Qt(t){return(Qt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Zt(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function Xt(t,e){return!e||"object"!==Qt(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Kt(t){return(Kt=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function jt(t,e){return(jt=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var Vt=function(t){function e(t){return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),Xt(this,Kt(e).call(this,t))}var n,o,i;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&jt(t,e)}(e,r.a.Component),n=e,(o=[{key:"componentDidMount",value:function(){}},{key:"render",value:function(){return r.a.createElement("div",null,r.a.createElement("section",{className:"hero"},r.a.createElement("div",{className:"hero-content"},r.a.createElement("h2",null,"All about us"))),r.a.createElement("div",{className:"jumbotron text-center",style:{fontSize:"2em"}},r.a.createElement("p",null,"1. Click register, enter name, password. Login using that info "),r.a.createElement("p",null,"2. To submit content. Get a spotify embed link. Go to a song or album, click ...->share->copy embed code. past in the song/playlist section. Enter in a title and text"),r.a.createElement("p",null,r.a.createElement("div",{style:{}},r.a.createElement("img",{src:"/embedcodeinstructions.png",alt:""}))),r.a.createElement("p",null,"3. You can search for a song, album, user, or artist. This will bring you to a global post about the song or album. This should have all data from posts about that topic")))}}])&&Zt(n.prototype,o),i&&Zt(n,i),e}();function Gt(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function Bt(t){return(Bt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function qt(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function Ht(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function te(t,e,n){return e&&Ht(t.prototype,e),n&&Ht(t,n),t}function ee(t,e){return!e||"object"!==Bt(e)&&"function"!=typeof e?ne(t):e}function ne(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function oe(t){return(oe=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function re(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&ie(t,e)}function ie(t,e){return(ie=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var ae=function(t){function e(t){var n;return qt(this,e),(n=ee(this,oe(e).call(this,t))).state={colors:["#178275","#26408d","#50b520","#a5c823","#46268f","#d1aa25","#af1f63","#d19225","#d12525"]},n}return re(e,r.a.Component),te(e,[{key:"render",value:function(){if(0==this.state.colors.length||null==this.props.active||!this.props.active)return null;var t=[],e=!0,n=!1,o=void 0;try{for(var i,a=this.state.colors[Symbol.iterator]();!(e=(i=a.next()).done);e=!0){var l=i.value;t.push(r.a.createElement("div",{key:l,onClick:this.props.setcolor,style:{backgroundColor:l,width:"77px",height:"50px"}},"  "))}}catch(t){n=!0,o=t}finally{try{e||null==a.return||a.return()}finally{if(n)throw o}}return r.a.createElement("div",{style:{position:"relative",paddingLeft:"10px",margin:"0px auto",width:"735px",height:"60px",flexDirection:"row",display:"flex"}},t)}}]),e}(),le=function(t){function e(t){var n;qt(this,e),(n=ee(this,oe(e).call(this,t))).description=t.user.description,n.description_ui=void 0,n.props.username==n.props.user.username&&(n.description_ui=r.a.createElement("button",{style:{fontSize:"15px",left:"8px",position:"relative"},className:"grayButton",onClick:n.editDescription.bind(ne(ne(n)))}," Edit ")),n.description_text=r.a.createRef(),n.bumps_ui=r.a.createElement("div",null," Bumps: ",n.props.user.bumps," "),n.button_text="Follow";var o=!0,i=!1,a=void 0;try{for(var l,s=t.follows[Symbol.iterator]();!(o=(l=s.next()).done);o=!0){if(l.value.user_id==t.username){n.button_text="Unfollow",n.following_ui="Following",n.following_state=!0;break}}}catch(t){i=!0,a=t}finally{try{o||null==s.return||s.return()}finally{if(i)throw a}}return n.state={change_color:!1},n}return re(e,r.a.Component),te(e,[{key:"submitDescription",value:function(){var t=this;fetch("/submit_description",{method:"POST",headers:{Accept:"application/json",Authorization:"Basic","Content-Type":"application/json"},body:JSON.stringify({text:t.description_text.current.value,user:t.props.user.username})}).then(function(t){return t.json()}).then(function(e){t.description=t.description_text.current.value,t.description_ui=r.a.createElement("button",{onClick:t.editDescription.bind(t)}," Edit Description "),t.forceUpdate()})}},{key:"editDescription",value:function(){this.description_ui=r.a.createElement("div",null,r.a.createElement("textarea",{ref:this.description_text,style:{width:"80%",height:"50px",zIndex:"100"}},this.props.user.description),r.a.createElement("button",{onClick:this.submitDescription.bind(this),style:{height:"30px",bottom:"30px",position:"relative"},type:"button"},"submit"),r.a.createElement("button",{onClick:this.closeDescription.bind(this),style:{bottom:"0px",position:"relative",height:"30px"},type:"button"},"x")),this.forceUpdate()}},{key:"closeDescription",value:function(){this.description_ui=r.a.createElement("button",{onClick:this.editDescription.bind(this)}," Edit Description "),this.forceUpdate()}},{key:"setColor",value:function(t){this.props.user.profile_picture=t.target.style.backgroundColor;fetch("/set_color",{method:"POST",headers:{Accept:"application/json",Authorization:"Basic","Content-Type":"application/json"},body:JSON.stringify({color:t.target.style.backgroundColor,username:this.props.user.username})}).then(function(t){return t.json()}).then(function(t){}),this.setState({change_color:!1}),this.forceUpdate()}},{key:"changeColorClicked",value:function(){this.setState({change_color:!this.state.change_color})}},{key:"render",value:function(){var t="none";return this.props.username==this.props.user.username&&(t=""),r.a.createElement("div",{className:"user_info",style:{margin:"0 auto",paddingTop:"10px",paddingLeft:"10px",paddingBottom:"10px",background:"white",border:"1px solid #F1F1F1",borderRadius:"7px",maxWidth:"735px"}},r.a.createElement("div",{style:{display:"flex",flexDirection:"row"}},r.a.createElement("div",null,r.a.createElement("div",{style:{borderRadius:"50%",width:"64px",height:"64px",backgroundColor:this.props.user.profile_picture}}),r.a.createElement("div",{onClick:this.changeColorClicked.bind(this),style:{color:"#999999",fontSize:"16px",textAlign:"center",display:t}}," Change ")),r.a.createElement("div",{style:{paddingLeft:"20px"}},r.a.createElement("div",{style:{display:"flex",flexDirection:"row"}},r.a.createElement("div",{style:{fontSize:"30pt",fontWeight:"bold"}},this.props.user.username),r.a.createElement("div",{style:{flex:"1 0 auto",verticalAlign:"middle",display:"flex",flexDirection:"column",justifyContent:"center",paddingLeft:"20px"}},r.a.createElement("button",{style:{height:"30px",fontSize:"18px"},className:"grayButton",id:"follow_button",type:"button"},this.button_text))),r.a.createElement("div",{style:{display:"flex",flexDirection:"row"}},r.a.createElement("div",null," ",r.a.createElement("a",{style:{fontWeight:"bold"},href:"/following/"+this.props.user.username}," ",this.props.followees," ")," following"),r.a.createElement("div",{style:{paddingLeft:"20px"}}," ",r.a.createElement("a",{style:{fontWeight:"bold"},href:"/followers/"+this.props.user.username}," ",this.props.follows.length," ")," "," followers"),r.a.createElement("div",{style:{paddingLeft:"20px"}},"Score: ",this.props.user.upvotes-this.props.user.downvotes)))),r.a.createElement(ae,{user_color:this.props.user.profile_picture,active:this.state.change_color,setcolor:this.setColor.bind(this)}),r.a.createElement("div",{style:{}},r.a.createElement("div",{style:{fontSize:"15pt"}},this.description,this.description_ui)))}}]),e}(),se=function(t){function e(t){var n;return qt(this,e),(n=ee(this,oe(e).call(this,t))).offset=n.props.data.songs.length,n.postsRef=r.a.createRef(),n.loading_posts_semaphor=!1,n.state={posts:[]},n}return re(e,r.a.Component),te(e,[{key:"componentDidMount",value:function(){window.addEventListener("scroll",this.handleScroll.bind(this));var t=[],e=!0,n=!1,o=void 0;try{for(var r,i=this.props.data.songs[Symbol.iterator]();!(e=(r=i.next()).done);e=!0){var a=r.value;t.push(Tt(a,this.props.data.likes,this.props.data.num_comments,this.props.data.num_posts,this.props.data.bumps,this.props.data.user_profiles))}}catch(t){n=!0,o=t}finally{try{e||null==i.return||i.return()}finally{if(n)throw o}}this.setState({posts:t})}},{key:"componentWillUnmount",value:function(){window.removeEventListener("scroll",this.handleScroll.bind(this))}},{key:"handleScroll",value:function(){if(window.innerHeight+window.scrollY>=document.body.offsetHeight&&!this.loading_posts_semaphor){var t=this;this.loading_posts_semaphor=!0,fetch("/load_post_data",{method:"POST",headers:{Accept:"application/json",Authorization:"Basic","Content-Type":"application/json"},body:JSON.stringify({offset:t.offset,user:t.props.data.username})}).then(function(t){return t.json()}).then(function(e){t.offset+=e.songs.length;var n=[],o=!0,r=!1,i=void 0;try{for(var a,l=e.songs[Symbol.iterator]();!(o=(a=l.next()).done);o=!0){var s=a.value;n.push(Tt(s,e.likes,e.num_comments,e.num_posts,e.bumps,e.user_profiles))}}catch(t){r=!0,i=t}finally{try{o||null==l.return||l.return()}finally{if(r)throw i}}t.setState({posts:t.state.posts.concat(n)}),t.loading_posts_semaphor=!1})}}},{key:"render",value:function(){var t;return this.props.data.username==this.props.data.user.username&&"450px",r.a.createElement("div",{style:{paddingTop:"50px"}},r.a.createElement(le,(Gt(t={user:this.props.data.user,username:this.props.data.username,follows:this.props.data.follows,followees:this.props.data.followees},"username",this.props.data.username),Gt(t,"follow_type",0),t)),r.a.createElement("br",null),r.a.createElement("div",{style:{width:"735px",margin:"0px auto"}},r.a.createElement(Ct,{posts:this.state.posts})),r.a.createElement("div",{className:"user_body",style:{left:"5%",top:"100px",position:"relative",width:"100%"}}))}}]),e}();function ue(t){return(ue="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function ce(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function pe(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function fe(t,e,n){return e&&pe(t.prototype,e),n&&pe(t,n),t}function de(t,e){return!e||"object"!==ue(e)&&"function"!=typeof e?ve(t):e}function he(t){return(he=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function ye(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&me(t,e)}function me(t,e){return(me=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function ve(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function ge(t,e,n,o,i){var a=arguments.length>5&&void 0!==arguments[5]&&arguments[5],l=[],s=0,u=!0,c=!1,p=void 0;try{for(var f,d=t[Symbol.iterator]();!(u=(f=d.next()).done);u=!0){if(0==(I=f.value).comment_level&&++s,I.comment_level+1>l.length){for(var h=l.length,y=0;y<I.comment_level+1-h;y++)l.push([]);l[I.comment_level].push(I)}else l[I.comment_level].push(I)}}catch(t){c=!0,p=t}finally{try{u||null==d.return||d.return()}finally{if(c)throw p}}for(var m={},v=[],g=l.length-1;g>=0;g--){var w=!0,_=!1,x=void 0;try{for(var E,b=l[g][Symbol.iterator]();!(w=(E=b.next()).done);w=!0){var S=(I=E.value).replies;if(null!=m[I.comment_id]){var T=!0,C=!1,O=void 0;try{for(var P,k=m[I.comment_id][Symbol.iterator]();!(T=(P=k.next()).done);T=!0){var N=P.value;I.replies=I.replies-N.props.original_replies-1}}catch(t){C=!0,O=t}finally{try{T||null==k.return||k.return()}finally{if(C)throw O}}}var L=-1,R=!0,F=!1,D=void 0;try{for(var A,z=e[Symbol.iterator]();!(R=(A=z.next()).done);R=!0){var U=A.value;U.comment_id==I.comment_id&&(L=U)}}catch(t){F=!0,D=t}finally{try{R||null==z.return||z.return()}finally{if(F)throw D}}v.push(r.a.createElement(we,{key:I.comment_id,original_replies:S,data:I,child_comments:m[I.comment_id],vote_state:L,post_id:I.post_id,is_global:a,post_data:i}))}}catch(t){_=!0,x=t}finally{try{w||null==b.return||b.return()}finally{if(_)throw x}}if(g==o)break;for(var M=0;M<v.length;M++){var I,W=(I=v[M]).props.data.parent_comment_id;null==m[W]?m[W]=[I]:m[W].push(I)}v=[]}return[v,s]}var we=function(t){function e(t){var n;if(ce(this,e),(n=de(this,he(e).call(this,t))).id=n.props.data.comment_id,n.replies_button=void 0,n.child_comments=[],null!=t.child_comments){var o=!0,i=!1,a=void 0;try{for(var l,s=t.child_comments[Symbol.iterator]();!(o=(l=s.next()).done);o=!0){var u=l.value;n.child_comments.push(u)}}catch(t){i=!0,a=t}finally{try{o||null==s.return||s.return()}finally{if(i)throw a}}}if(t.data.replies>0){var c=String(5*t.data.comment_level-1)+"%";n.replies_button=r.a.createElement("button",{onClick:n.showReplies.bind(ve(ve(n))),className:"show_replies",style:{position:"relative",left:c,fontSize:"12px"},id:t.data.comment_id}," show ",t.data.replies," replies ")}return n.upvoteRef=r.a.createRef(),n.downvoteRef=r.a.createRef(),n.scoreRef=r.a.createRef(),n.votes_score=n.props.data.upvotes-n.props.data.downvotes,n.vote_state=-1,null!=n.props.vote_state&&(n.vote_state=n.props.vote_state.vote_state),n.new_comment=void 0,n.contentRef=r.a.createRef(),n.up_image="/small_up.png",n.down_image="/small_down.png",n.tagFlag=!1,n.currentTag="",n.tagList=[],n.artists=[],n.users=[],n.artistSearch=!1,n.currentArtist="",n.potential_tags=[],n.songs_and_albums=[],n.artistFlag=!1,n.lastContentSize=0,n.tagged=!1,n}return ye(e,r.a.Component),fe(e,[{key:"addChild",value:function(t){this.child_comments.push(r.a.createElement(e,{key:t.data.comment_id,data:t.data,post_data:this.props.post_data}))}},{key:"upvoteClicked",value:function(){pt.a.checkLoggedIn()?(1==this.vote_state?(this.up_image="/small_up.png",this.vote_state=-1,this.votes_score=this.votes_score-1):(0==this.vote_state?this.votes_score=this.votes_score+2:this.votes_score=this.votes_score+1,this.up_image="/small_up_on.png",this.down_image="/small_down.png",this.vote_state=1),this.forceUpdate(),fetch("/upvote",{method:"POST",headers:{Accept:"application/json",Authorization:"Basic","Content-Type":"application/json"},body:JSON.stringify({id:this.props.data.comment_id})}).then(function(t){return t.json()}).then(function(t){})):alert("MUST BE LOGGED IN")}},{key:"downvoteClicked",value:function(){pt.a.checkLoggedIn()?(0==this.vote_state?(this.down_image="/small_down.png",this.vote_state=-1,this.votes_score=this.votes_score+1):1!=this.vote_state&&-1!=this.vote_state||(1==this.vote_state?this.votes_score=this.votes_score-2:this.votes_score=this.votes_score-1,this.down_image="/small_down_on.png",this.up_image="/small_up.png",this.vote_state=0),this.forceUpdate(),fetch("/downvote",{method:"POST",headers:{Accept:"application/json",Authorization:"Basic","Content-Type":"application/json"},body:JSON.stringify({id:this.props.data.comment_id})}).then(function(t){return t.json()}).then(function(t){})):alert("MUST BE LOGGED IN")}},{key:"openNewComment",value:function(){if(this.props.is_global)window.location="/user/"+this.props.data.user_id+"/"+this.props.data.post_id;else{if(!pt.a.checkLoggedIn())return void alert("MUST BE LOGGED IN");this.new_comment=r.a.createElement("div",null,r.a.createElement("textarea",{onChange:this.contentInput.bind(this),ref:this.contentRef,className:"comment_text",id:this.props.data.comment_id,name:"content",rows:"10",cols:"90",style:{width:"100%",height:"50px",borderRadius:"7px"}}),r.a.createElement("br",null),r.a.createElement("button",{onClick:this.submitNewComment.bind(this),style:{position:"relative",width:"50%",height:"28px"},type:"button",className:"submit_new_comment grayButton",id:this.props.data.comment_id},"submit"),r.a.createElement("button",{onClick:this.closeNewComment.bind(this),style:{position:"relative",width:"50%",height:"28px"},type:"button",className:"close_new_comment grayButton",id:this.props.data.comment_id},"close")),this.forceUpdate()}}},{key:"closeNewComment",value:function(){this.new_comment=void 0,this.tagFlag=!1,this.forceUpdate()}},{key:"submitNewComment",value:function(){var t=this.contentRef.current.value,n=this;fetch("/comment",{method:"POST",headers:{Accept:"application/json",Authorization:"Basic","Content-Type":"application/json"},body:JSON.stringify({id:this.props.post_id,text:this.contentRef.current.value,comment_level:this.props.data.comment_level+1,parent_comment_id:this.props.data.comment_id,post_username:this.props.post_data.username,post_id:this.props.post_data.post_id,post_title:this.props.post_data.title,potentialTags:this.potential_tags,username:this.props.data.user_id})}).then(function(t){return t.json()}).then(function(o){var i={post_id:o.comment_id,user_id:o.username,text:t,timestamp:parseInt(o.timestamp),upvotes:0,downvotes:0,replies:0,comment_id:o.comment_id,parent_comment_id:n.props.data.comment_id,comment_level:n.props.data.comment_level+1};n.child_comments.splice(0,0,r.a.createElement(e,{key:o.comment_id,original_replies:0,data:i,child_comments:[],vote_state:-1,post_id:o.comment_id,is_global:null!=n.props.global_post,post_data:n.props.post_data})),n.forceUpdate()}),this.tagFlag=!1,this.closeNewComment()}},{key:"showReplies",value:function(){var t=this;this.replies_button=void 0,this.forceUpdate(),fetch("/show_replies",{method:"POST",headers:{Accept:"application/json",Authorization:"Basic","Content-Type":"application/json"},body:JSON.stringify({id:this.props.data.comment_id,offset:this.child_comments.length})}).then(function(t){return t.json()}).then(function(e){var n=ge(e.comments,e.comment_votes,t.props.post_id,t.props.data.comment_level+1,t.props.post_data,null!=t.props.global_post)[0],o=!0,r=!1,i=void 0;try{for(var a,l=n[Symbol.iterator]();!(o=(a=l.next()).done);o=!0){var s=a.value;t.child_comments.push(s)}}catch(t){r=!0,i=t}finally{try{o||null==l.return||l.return()}finally{if(r)throw i}}t.forceUpdate()})}},{key:"contentInput",value:function(){event.target.value;dt.a.getTags(this),this.lastContentSize=this.contentRef.current.value.length,this.forceUpdate()}},{key:"selectTag",value:function(t){dt.a.tagClicked(this,t)}},{key:"addCommentChild",value:function(t){this.child_comments.push(t),this.forceUpdate()}},{key:"render",value:function(){for(var t="comment_level_"+String(this.props.data.comment_level),e=String(this.props.data.comment_id),n=(String(50*this.props.data.comment_level),[]),o=0;o<this.props.data.comment_level;++o){n.push(r.a.createElement("div",{style:{borderLeft:"3px solid #C5C5C5",position:"relative",width:"44px",left:"3px"}}))}this.props.data.user_id;var i=new Date(this.props.data.timestamp),a=i.getMinutes();1==String(a).length&&(a="0"+String(a));var l,s=i.getMonth()+"/"+i.getDate()+"/"+i.getFullYear()+" at "+i.getHours()+":"+a;l=dt.a.formatContent(this.props.data.text,this.props.data.tags);var u="black",c="black";1==this.vote_state?(u="blue",this.up_image="/small_up_on.png"):0==this.vote_state&&(c="red",this.down_image="/small_down_on.png");var p="none";return this.tagFlag&&(p=""),r.a.createElement("div",{style:{background:"white",borderRadius:"4px",maxWidth:"1000px"}},r.a.createElement("div",{className:t,id:e,replies:0,style:{position:"relative",display:"flex",flexDirection:"row"}},n,r.a.createElement("div",{style:{position:"relative",minHeight:"62.66px",width:"30px",display:"flex",flexDirection:"column",top:"5px"}},r.a.createElement("svg",{onClick:this.upvoteClicked.bind(this),width:"10",height:"16",viewBox:"0 0 16 27",fill:"none",xmlns:"http://www.w3.org/2000/svg",color:"blue"},r.a.createElement("path",{d:"M8.70711 0.987356C8.31658 0.596832 7.68342 0.596832 7.29289 0.987356L0.928931 7.35132C0.538407 7.74184 0.538407 8.37501 0.928931 8.76553C1.31946 9.15606 1.95262 9.15606 2.34315 8.76553L8 3.10868L13.6569 8.76553C14.0474 9.15606 14.6805 9.15606 15.0711 8.76553C15.4616 8.37501 15.4616 7.74184 15.0711 7.35132L8.70711 0.987356ZM9 26.3126L9 1.69446L7 1.69446L7 26.3126L9 26.3126Z",fill:u})),r.a.createElement("svg",{style:{position:"relative",top:"10px"},onClick:this.downvoteClicked.bind(this),width:"10",height:"16",viewBox:"0 0 16 27",fill:"none",xmlns:"http://www.w3.org/2000/svg"},r.a.createElement("path",{d:"M7.29289 26.0197C7.68342 26.4102 8.31658 26.4102 8.70711 26.0197L15.0711 19.6557C15.4616 19.2652 15.4616 18.632 15.0711 18.2415C14.6805 17.851 14.0474 17.851 13.6569 18.2415L8 23.8984L2.34315 18.2415C1.95262 17.851 1.31946 17.851 0.928932 18.2415C0.538408 18.632 0.538408 19.2652 0.928932 19.6557L7.29289 26.0197ZM7 0.694489L7 25.3126H9L9 0.694489L7 0.694489Z",fill:c}))),r.a.createElement("div",{style:{position:"relative",maxWidth:"970px",minWidth:"300px"}},r.a.createElement("div",{ref:this.scoreRef,style:{display:"flex",flexDirection:"row",width:"95%",height:"20px",fontSize:"10pt",color:"#5b5b5b"},className:"comment_header",id:e},r.a.createElement("div",{style:{color:"#188275"}},r.a.createElement("a",{style:{color:"#188275",fontWeight:"bold"},href:"/user/"+this.props.data.user_id}," ",this.props.data.user_id," ")),r.a.createElement("div",{style:{height:"15px",width:"10px"}}),r.a.createElement("div",null,this.votes_score+" points"),r.a.createElement("div",{style:{height:"15px",width:"10px"}}),r.a.createElement("div",null,s)),r.a.createElement("div",{style:{width:"95%"},className:"comment_body",id:e}," ",l," "),r.a.createElement("div",{style:{width:"95%",height:"25px",fontSize:"10pt",color:"#188275"},onClick:this.openNewComment.bind(this),className:"begin_comment",id:e}," Reply "))),this.new_comment,this.child_comments.map(function(t){return t}),this.replies_button,this.test_text,r.a.createElement("div",{style:{position:"fixed",width:"200px",height:"300px",right:"10%",top:"200px",backgroundColor:"white",display:p,zIndex:15,overflow:"scroll"}},this.tagList))}}]),e}(),_e=function(t){function e(t){var n;return ce(this,e),(n=de(this,he(e).call(this,0))).comments=[],n.offset=0,n.global_offset=0,n.loading_comments_semaphor=!1,n.new_comment=void 0,n.contentRef=r.a.createRef(),n.user_posts=t.posts,n.tagFlag=!1,n.currentTag="",n.tagList=[],n.artists=[],n.users=[],n.artistSearch=!1,n.currentArtist="",n.songs_and_albums=[],n.artistFlag=!1,n.lastContentSize=0,n.tagged=!1,n.potential_tags=[],n}return ye(e,r.a.Component),fe(e,[{key:"makePosts",value:function(t,e){var n=this;if(null!=t){this.global_offset+=t.length;var o=[];return t.map(function(t){var i=[],a=!0,l=!1,s=void 0;try{for(var u,c=e[Symbol.iterator]();!(a=(u=c.next()).done);a=!0){var p=u.value;p.props.post_id==t.post_id&&i.push(p)}}catch(t){l=!0,s=t}finally{try{a||null==c.return||c.return()}finally{if(l)throw s}}var f=new Date(t.timestamp),d=f.getMinutes();1==String(d).length&&(d="0"+String(d));var h=f.getMonth()+"/"+f.getDate()+"/"+f.getFullYear()+" at "+f.getHours()+":"+d,y=-1;if(0!=i.length)y=i[0].props.comment_id;var m;m=dt.a.formatContent(n.props.global_post.content,n.props.global_post.tags),o.push(r.a.createElement("div",null,r.a.createElement("div",{style:{position:"relative",left:"0%",top:"20px",background:"white",paddingLeft:"5px",paddingBottom:"5px",borderBottom:"solid black 3px",maxWidth:"1000px"}},r.a.createElement("div",{style:{width:"100%",height:"35px",fontSize:"18pt",textAlign:"center",display:"flex",flexDirection:"row"},className:"comment_header",id:y},r.a.createElement("div",{style:{margin:"0"}},t.username+" | "+parseInt(t.likes-t.dislikes)),r.a.createElement("div",{style:{margin:"0 auto"}},r.a.createElement("a",{href:"/user/"+t.username+"/"+t.post_id},t.title," ")),r.a.createElement("div",{style:{marginRight:"0px"}},h)),r.a.createElement("div",{style:{width:"95%"},className:"comment_body",id:y}," ",m," ")),r.a.createElement("div",{style:{position:"relative",top:"20px"}},i),r.a.createElement("br",null),r.a.createElement("br",null)))}),o}}},{key:"getComments",value:function(t,e,n){var o=ge(t,e,n,0,this.props.post_data,null!=this.props.global_post);this.comments=o[0],this.offset+=o[1]}},{key:"componentDidMount",value:function(){null==this.props.posts?window.addEventListener("scroll",this.handleScroll.bind(this)):window.addEventListener("scroll",this.handleScrollGlobal.bind(this)),this.getComments(this.props.comments,this.props.comment_votes,this.props.post_id),null!=this.user_posts&&(this.comments=this.makePosts(this.user_posts,this.comments)),this.forceUpdate()}},{key:"componentWillUnmount",value:function(){window.removeEventListener("scroll",this.handleScroll.bind(this))}},{key:"handleScroll",value:function(){var t=this;this.user_posts=void 0,window.innerHeight+window.scrollY>=document.body.offsetHeight&&!this.loading_comments_semaphor&&(this.loading_comments_semaphor=!0,fetch("/load_comments",{method:"POST",headers:{Accept:"application/json",Authorization:"Basic","Content-Type":"application/json"},body:JSON.stringify({id:t.props.post_id,offset:t.offset})}).then(function(t){return t.json()}).then(function(e){var n=ge(e.comments,e.comment_votes,t.props.post_id,0,t.props.post_data,null!=t.props.global_post),o=n[0];t.offset+=n[1];var r=!0,i=!1,a=void 0;try{for(var l,s=o[Symbol.iterator]();!(r=(l=s.next()).done);r=!0){var u=l.value;t.comments.push(u)}}catch(t){i=!0,a=t}finally{try{r||null==s.return||s.return()}finally{if(i)throw a}}t.forceUpdate(),t.loading_comments_semaphor=!1}))}},{key:"handleScrollGlobal",value:function(){var t=this;this.user_posts=void 0,window.innerHeight+window.scrollY>=document.body.offsetHeight&&!this.loading_comments_semaphor&&(this.loading_comments_semaphor=!0,fetch("/load_global_posts",{method:"POST",headers:{Accept:"application/json",Authorization:"Basic","Content-Type":"application/json"},body:JSON.stringify({id:t.props.global_post.post_id,offset:t.global_offset,song:t.props.global_post.song,artist:t.props.global_post.artist,album:t.props.global_post.album})}).then(function(t){return t.json()}).then(function(e){var n=ge(e.comments,e.comment_votes,t.props.post_id,0,t.props.post_data,null!=t.props.global_post),o=n[0];if(t.offset+=n[1],null==e.user_posts){var r=!0,i=!1,a=void 0;try{for(var l,s=o[Symbol.iterator]();!(r=(l=s.next()).done);r=!0){var u=l.value;t.comments.push(u)}}catch(t){i=!0,a=t}finally{try{r||null==s.return||s.return()}finally{if(i)throw a}}}else{var c=[],p=!0,f=!1,d=void 0;try{for(var h,y=o[Symbol.iterator]();!(p=(h=y.next()).done);p=!0){u=h.value;c.push(u)}}catch(t){f=!0,d=t}finally{try{p||null==y.return||y.return()}finally{if(f)throw d}}var m=t.makePosts(e.user_posts,c),v=!0,g=!1,w=void 0;try{for(var _,x=m[Symbol.iterator]();!(v=(_=x.next()).done);v=!0){var E=_.value;t.comments.push(E)}}catch(t){g=!0,w=t}finally{try{v||null==x.return||x.return()}finally{if(g)throw w}}}t.forceUpdate(),t.loading_comments_semaphor=!1}))}},{key:"openNewComment",value:function(){pt.a.checkLoggedIn()?(this.new_comment=r.a.createElement("div",null,r.a.createElement("textarea",{onChange:this.contentInput.bind(this),ref:this.contentRef,class:"comment_text",id:this.props.comment_id,name:"content",rows:"10",cols:"90",style:{width:"80%",height:"50px",zIndex:"100"}}),r.a.createElement("br",null),r.a.createElement("button",{onClick:this.submitNewComment.bind(this),style:{position:"relative"},type:"button",className:"submit_new_comment",id:this.props.comment_id},"submit"),r.a.createElement("button",{onClick:this.closeNewComment.bind(this),style:{position:"relative"},type:"button",className:"close_new_comment",id:this.props.comment_id},"close")),this.forceUpdate()):alert("MUST BE LOGGED IN")}},{key:"closeNewComment",value:function(){this.new_comment=void 0,this.tagFlag=!1,this.forceUpdate()}},{key:"submitNewComment",value:function(){this.contentRef.current.value;fetch("/comment",{method:"POST",headers:{Accept:"application/json",Authorization:"Basic","Content-Type":"application/json"},body:JSON.stringify({id:this.props.post_id,text:this.contentRef.current.value,potentialTags:this.potential_tags,post_username:this.props.post_data.username,post_id:this.props.post_data.post_id,post_title:this.props.post_data.title,comment_level:0,parent_comment_id:-1})}).then(function(t){return t.json()}).then(function(t){}),this.tagFlag=!1,this.closeNewComment()}},{key:"contentInput",value:function(){event.target.value;dt.a.getTags(this),this.lastContentSize=this.contentRef.current.value.length,this.forceUpdate()}},{key:"selectTag",value:function(t){dt.a.tagClicked(this,t)}},{key:"render",value:function(){var t="none";this.tagFlag&&(t="");var e="";null!=this.props.global_post&&(e=void 0);return r.a.createElement("div",{style:{position:"relative",left:"10px",maxWidth:"1000px"}},r.a.createElement("div",{style:{width:"1000px",display:"flex",flexDirection:"row"}},r.a.createElement("div",{style:{borderRadius:"50%",backgroundColor:"#188275",position:"relative",left:"10px",width:"40px",height:"40px"}}),r.a.createElement("textarea",{ref:this.contentRef,style:{position:"relative",height:"40px",left:"40px",width:"820px",borderRadius:"7px",border:"1px solid black"},placeholder:"  Comment Here.."}),r.a.createElement("button",{onClick:this.submitNewComment.bind(this),style:{position:"relative",width:"92px",left:"40px"},type:"button",className:"submit_new_comment grayButton",id:this.props.comment_id},"submit")),e,this.new_comment,r.a.createElement("br",null),this.comments.map(function(t){return t}),r.a.createElement("div",{style:{position:"fixed",width:"200px",height:"300px",right:"10%",top:"200px",backgroundColor:"white",display:t,zIndex:15,overflow:"scroll"}},this.tagList))}}]),e}();function xe(t){return(xe="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Ee(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function be(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function Se(t,e,n){return e&&be(t.prototype,e),n&&be(t,n),t}function Te(t,e){return!e||"object"!==xe(e)&&"function"!=typeof e?ke(t):e}function Ce(t){return(Ce=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function Oe(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Pe(t,e)}function Pe(t,e){return(Pe=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function ke(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}var Ne=function(t){function e(t){var n;if(Ee(this,e),(n=Te(this,Ce(e).call(this,t))).likes_score=n.props.data.likes-t.data.dislikes,n.likeRef=r.a.createRef(),n.dislikeRef=r.a.createRef(),n.like_state=-1,n.up_color="#2F3846",n.down_color="#2F3846",n.edit_content=r.a.createElement("div",null),n.contentRef=r.a.createRef(),n.potential_tags=[],n.props.username==n.props.data.username){n.edit_content=r.a.createElement("button",{onClick:n.editContent.bind(ke(ke(n)))}," Edit Content ");var o={};null!=n.props.data.tags&&(o=JSON.parse(n.props.data.tags));for(var i=Object.keys(o),a=0;a<i.length;++a)o[i[a]].length>=5&&n.potential_tags.push(o[i[a]])}return n.tagFlag=!1,n.currentTag="",n.tagList=[],n.artists=[],n.users=[],n.artistSearch=!1,n.currentArtist="",n.songs_and_albums=[],n.artistFlag=!1,n.lastContentSize=0,n.tagged=!1,n.postRef=r.a.createRef(),n.post_height="580px",n}return Oe(e,r.a.Component),Se(e,[{key:"renderiframe",value:function(t){return{__html:t}}},{key:"editContent",value:function(){this.edit_content=r.a.createElement("div",null,r.a.createElement("textarea",{onChange:this.contentInput.bind(this),ref:this.contentRef,id:"content",name:"content",rows:"15",cols:"117"},this.props.data.content),r.a.createElement("button",{onClick:this.submitEditComment.bind(this),style:{position:"relative"},type:"button",class:"submit_new_comment",id:this.props.comment_id},"submit"),r.a.createElement("button",{onClick:this.closeEditComment.bind(this),style:{position:"relative"},type:"button",class:"close_new_comment",id:this.props.comment_id},"close")),this.lastContentSize=this.props.data.content.length,this.forceUpdate()}},{key:"contentInput",value:function(){event.target.value,this.contentRef.current.value;dt.a.getTags(this),this.lastContentSize=this.contentRef.current.value.length,this.forceUpdate()}},{key:"selectTag",value:function(t){dt.a.tagClicked(this,t)}},{key:"closeEditComment",value:function(){this.edit_content=r.a.createElement("button",{onClick:this.editContent.bind(this)}," Edit Content "),this.tagFlag=!1,this.forceUpdate()}},{key:"submitEditComment",value:function(){var t=this.contentRef.current.value;this.props.data.content=t,fetch("/edit_content",{method:"POST",headers:{Accept:"application/json",Authorization:"Basic","Content-Type":"application/json"},body:JSON.stringify({id:this.props.data.post_id,poster:this.props.data.username,title:this.props.data.title,text:this.contentRef.current.value,potentialTags:this.potential_tags})}).then(function(t){return t.json()}).then(function(t){}),this.tagFlag=!1,this.closeEditComment()}},{key:"likeClicked",value:function(){if(pt.a.checkLoggedIn()){fetch("/like",{method:"POST",headers:{Accept:"application/json",Authorization:"Basic","Content-Type":"application/json"},body:JSON.stringify({user:this.props.data.username,id:this.props.data.id,name:this.props.data.title})}).then(function(t){return t.json()}).then(function(t){}),1==this.props.like_state?(this.likes_score-=1,this.props.like_state=-1,this.up_color="#2F3846"):(-1==this.props.like_state?this.likes_score+=1:this.likes_score+=2,this.up_color="#1485cc",this.down_color="#2F3846",this.props.like_state=1),this.forceUpdate()}else alert("MUST BE LOGGED IN")}},{key:"dislikeClicked",value:function(){if(pt.a.checkLoggedIn()){fetch("/dislike",{method:"POST",headers:{Accept:"application/json",Authorization:"Basic","Content-Type":"application/json"},body:JSON.stringify({user:this.props.data.username,id:this.props.data.id,name:this.props.data.title})}).then(function(t){return t.json()}).then(function(t){}),0==this.props.like_state?(this.up_color="#2F3846",this.props.like_state=-1,this.likes_score+=1):(-1==this.props.like_state?this.likes_score-=1:this.likes_score-=2,this.down_color="#dd3d3d",this.up_color="#2F3846",this.props.like_state=0),this.forceUpdate()}else alert("MUST BE LOGGED IN")}},{key:"componentDidMount",value:function(){this.post_height=this.postRef.current.clientHeight+25,this.forceUpdate()}},{key:"render",value:function(){1==this.props.like_state?this.up_color="#1485cc":0==this.props.like_state&&(this.down_color="#dd3d3d");var t;t=dt.a.formatContent(this.props.data.content,this.props.data.tags);this.props.data.id;var e=new Date(this.props.data.timestamp),n=(this.props.data.artist,this.props.data.song,this.props.data.song);"NO_SONG_ALBUM_ONLY"==this.props.data.song&&("/album/"+this.props.data.artist+"/"+this.props.data.album,n=this.props.data.album);var o=[];this.props.data.artist.split("^").map(function(t,e){o.push(r.a.createElement("a",{key:e,href:"/artist/"+t}," ",t," ")),o.push(",")}),o=o.slice(0,o.length-1);this.tagFlag;var i="/post/"+this.props.data.artist+"/"+this.props.data.song;n=this.props.data.song;return"NO_SONG_ALBUM_ONLY"==this.props.data.song&&(i="/album/"+this.props.data.artist+"/"+this.props.data.album,n=this.props.data.album),r.a.createElement("div",{ref:this.postRef,key:this.props.data.post_id,style:{border:"1px solid #F1F1F1",borderRadius:"7px",width:"980px",background:"white",minHeight:"580px",position:"relative",top:"10px",left:"10px",margin:"0px auto"}},r.a.createElement("div",{style:{paddingTop:"30px",paddingLeft:"10px",paddingRight:"10px",width:"980px",position:"relative",minHeight:"545px"}},r.a.createElement("div",{style:{display:"flex",flexDirection:"row",float:"left",width:"330px",paddingLeft:"10px",borderRadius:"7px",borderTopRightRadius:"0px",borderBottomRightRadius:"0px"}},r.a.createElement("div",{style:{paddingRight:"10px"}},r.a.createElement("div",{style:{display:"flex",flexDirection:"row"}},r.a.createElement("div",{style:{width:"65px",height:"65px",backgroundColor:this.props.user_profile,borderRadius:"50%"}}),r.a.createElement("div",{style:{paddingLeft:"20px"}},r.a.createElement("div",{style:{fontSize:"24px",fontWeight:"bold"}}," ",r.a.createElement("a",{href:"/user/"+this.props.data.username}," ",this.props.data.username)),r.a.createElement("div",{style:{fontSize:"17px",paddingRight:"10px"}},pt.a.monthNames[parseInt(e.getMonth())]+" "+e.getDate()+", "+e.getFullYear()))),r.a.createElement("div",{style:{paddingTop:"30px"}},r.a.createElement("span",{dangerouslySetInnerHTML:this.renderiframe(this.props.data.embedded_content)})),r.a.createElement("div",{style:{width:"300px",height:"40px",display:"flex",flexDirection:"row",paddingTop:"5px",fontSize:"1.2em",color:"#2F3846",opacity:".6"}},r.a.createElement("a",{href:"/artist/"+this.props.data.artist}," ",this.props.data.artist," "),r.a.createElement("div",{style:{paddingLeft:"10px",paddingRight:"10px"}},"-"),r.a.createElement("a",{href:i}," ",n," "))),r.a.createElement("div",{style:{width:"10px",height:"500px",borderLeft:"1px solid rgba(0, 0, 0, 0.09)"}})),r.a.createElement("div",{style:{fontWeight:"bold",fontSize:"24px",margin:"0px auto",paddingBottom:"10px"}},this.props.data.title),r.a.createElement("div",{style:{minHeight:"455px",whiteSpace:"pre-wrap"}},t)),r.a.createElement("div",{style:{height:"35px",display:"flex",flexDirection:"row",zIndex:"9"}},r.a.createElement("div",{style:{width:"15px",height:"30px"}}),r.a.createElement("svg",{onClick:this.likeClicked.bind(this),width:"14",height:"24",viewBox:"0 0 16 27",fill:"none",xmlns:"http://www.w3.org/2000/svg",color:"blue"},r.a.createElement("path",{d:"M8.70711 0.987356C8.31658 0.596832 7.68342 0.596832 7.29289 0.987356L0.928931 7.35132C0.538407 7.74184 0.538407 8.37501 0.928931 8.76553C1.31946 9.15606 1.95262 9.15606 2.34315 8.76553L8 3.10868L13.6569 8.76553C14.0474 9.15606 14.6805 9.15606 15.0711 8.76553C15.4616 8.37501 15.4616 7.74184 15.0711 7.35132L8.70711 0.987356ZM9 26.3126L9 1.69446L7 1.69446L7 26.3126L9 26.3126Z",fill:this.up_color})),r.a.createElement("div",{style:{minWidth:"30px",height:"30px",verticalAlign:"middle",textAlign:"center",position:"relative",top:"0px",fontSize:"16px",fontWeight:"bold"}},r.a.createElement("a",{href:"/user/"+this.props.data.username+"/"+this.props.data.id+"/likes"},this.likes_score," ")),r.a.createElement("svg",{onClick:this.dislikeClicked.bind(this),width:"14",height:"24",viewBox:"0 0 16 27",fill:"none",xmlns:"http://www.w3.org/2000/svg"},r.a.createElement("path",{d:"M7.29289 26.0197C7.68342 26.4102 8.31658 26.4102 8.70711 26.0197L15.0711 19.6557C15.4616 19.2652 15.4616 18.632 15.0711 18.2415C14.6805 17.851 14.0474 17.851 13.6569 18.2415L8 23.8984L2.34315 18.2415C1.95262 17.851 1.31946 17.851 0.928932 18.2415C0.538408 18.632 0.538408 19.2652 0.928932 19.6557L7.29289 26.0197ZM7 0.694489L7 25.3126H9L9 0.694489L7 0.694489Z",fill:this.down_color})),r.a.createElement("div",{style:{width:"10px",height:"30px",borderRight:"1px solid rgba(0, 0, 0, 0.09)"}}),r.a.createElement("div",{style:{width:"10px",height:"30px"}}),r.a.createElement("div",{style:{}},r.a.createElement("img",{src:"/speech_bubble.png",width:"30",height:"26",alt:""})),r.a.createElement("div",{style:{width:"30px",height:"30px",verticalAlign:"middle",textAlign:"center",position:"relative",top:"0px",fontSize:"16px",fontWeight:"bold"}}," ",this.props.num_comments," "),r.a.createElement("div",{style:{width:"30px",height:"30px",verticalAlign:"middle",textAlign:"center",position:"relative",top:"0px",fontSize:"16px",fontWeight:"bold"}},this.bump_button)))}}]),e}(),Le=function(t){function e(t){var n;return Ee(this,e),(n=Te(this,Ce(e).call(this,t))).postRef=r.a.createRef(),n.post_height="600px",n}return Oe(e,r.a.Component),Se(e,[{key:"componentDidMount",value:function(){this.forceUpdate()}},{key:"render",value:function(){return r.a.createElement("div",null,r.a.createElement("div",{style:{position:"relative",margin:"0px auto",width:"1000px"}},r.a.createElement(Ne,{ref:this.postRef,data:this.props.data.user_post,like_state:this.props.data.like_state,num_comments:this.props.data.num_comments,username:this.props.data.username,user_profile:this.props.data.user_profile})),r.a.createElement("div",{style:{margin:"0px auto",width:"1000px",paddingTop:"40px"}},r.a.createElement(_e,{comments:this.props.data.comments,comment_votes:this.props.data.comment_votes,post_id:this.props.data.user_post.id,post_data:this.props.data.user_post})))}}]),e}();function Re(t){return(Re="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Fe(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function De(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function Ae(t,e,n){return e&&De(t.prototype,e),n&&De(t,n),t}function ze(t,e){return!e||"object"!==Re(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Ue(t){return(Ue=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function Me(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Ie(t,e)}function Ie(t,e){return(Ie=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var We=function(t){function e(t){var n;return Fe(this,e),null==(n=ze(this,Ue(e).call(this,t))).props.num_comments&&(n.props.num_comments=0),n}return Me(e,r.a.Component),Ae(e,[{key:"render",value:function(){var t=tag_utils.formatContent(this.props.post.content,this.props.post.tags),e=new Date(this.props.post.timestamp);return r.a.createElement("div",{style:{width:"735px",backgroundColor:"white",borderRadius:"7px",border:"1px solid #F1F1F1"}},r.a.createElement("div",{style:{display:"flex",flexDirection:"row",paddingLeft:"10px",paddingTop:"10px"}},r.a.createElement("div",{style:{display:"flex",flexDirection:"row"}},r.a.createElement("div",{style:{backgroundColor:this.props.user.profile_picture,borderRadius:"50%",height:"48px",width:"48px"}}),r.a.createElement("div",{style:{paddingLeft:"10px",borderRight:"1px solid #F1F1F1",paddingRight:"20px"}},r.a.createElement("div",{style:{fontSize:"1.1em",fontWeight:"bold"}},r.a.createElement("a",{href:"/user/"+this.props.user.username},this.props.user.username)),r.a.createElement("div",{style:{fontSize:".8em"}},pt.a.monthNames[parseInt(e.getMonth())]+" "+e.getDate()+", "+e.getFullYear())),r.a.createElement("div",{style:{paddingTop:"10px",paddingLeft:"32px",fontWeight:"bold",fontSize:"1.2em",width:"400px"}},r.a.createElement("a",{href:"/user/"+this.props.post.username+"/"+this.props.post.post_id},this.props.post.title)),r.a.createElement("div",{style:{paddingTop:"10px",display:"flex",flexDirection:"row"}},r.a.createElement("svg",{width:"14",height:"24",viewBox:"0 0 16 27",fill:"none",xmlns:"http://www.w3.org/2000/svg",color:"blue"},r.a.createElement("path",{d:"M8.70711 0.987356C8.31658 0.596832 7.68342 0.596832 7.29289 0.987356L0.928931 7.35132C0.538407 7.74184 0.538407 8.37501 0.928931 8.76553C1.31946 9.15606 1.95262 9.15606 2.34315 8.76553L8 3.10868L13.6569 8.76553C14.0474 9.15606 14.6805 9.15606 15.0711 8.76553C15.4616 8.37501 15.4616 7.74184 15.0711 7.35132L8.70711 0.987356ZM9 26.3126L9 1.69446L7 1.69446L7 26.3126L9 26.3126Z",fill:"black"})),r.a.createElement("div",{style:{minWidth:"30px",height:"30px",verticalAlign:"middle",textAlign:"center",fontSize:"16px",fontWeight:"bold"}},r.a.createElement("a",{href:"/user/"+this.props.post.username+"/"+this.props.post.post_id+"/likes"},this.props.post.likes-this.props.post.dislikes," ")),r.a.createElement("svg",{width:"14",height:"24",viewBox:"0 0 16 27",fill:"none",xmlns:"http://www.w3.org/2000/svg"},r.a.createElement("path",{d:"M7.29289 26.0197C7.68342 26.4102 8.31658 26.4102 8.70711 26.0197L15.0711 19.6557C15.4616 19.2652 15.4616 18.632 15.0711 18.2415C14.6805 17.851 14.0474 17.851 13.6569 18.2415L8 23.8984L2.34315 18.2415C1.95262 17.851 1.31946 17.851 0.928932 18.2415C0.538408 18.632 0.538408 19.2652 0.928932 19.6557L7.29289 26.0197ZM7 0.694489L7 25.3126H9L9 0.694489L7 0.694489Z",fill:"black"})),r.a.createElement("div",{style:{paddingLeft:"10px"}},r.a.createElement("img",{src:"/speech_bubble.png",width:"30",height:"26",alt:""})),r.a.createElement("div",{style:{width:"30px",height:"30px",verticalAlign:"middle",textAlign:"center",fontSize:"16px",fontWeight:"bold"}}," ",r.a.createElement("a",{href:"/user/"+this.props.post.username+"/"+this.props.post.post_id}," ",this.props.num_comments," "))))),r.a.createElement("div",{style:{paddingLeft:"16px",paddingTop:"8px"}},t))}}]),e}(),Ye=function(t){function e(t){var n;return Fe(this,e),(n=ze(this,Ue(e).call(this,t))).state={posts:[]},n.offset=0,n}return Me(e,r.a.Component),Ae(e,[{key:"componentDidMount",value:function(){window.addEventListener("scroll",this.handleScroll.bind(this));var t=this.state.posts,e=!0,n=!1,o=void 0;try{for(var i,a=this.props.posts[Symbol.iterator]();!(e=(i=a.next()).done);e=!0){var l=i.value;t.push(r.a.createElement(We,{user:this.props.user_profiles[l.username],post:l,num_comments:this.props.num_comments[l.post_id]}))}}catch(t){n=!0,o=t}finally{try{e||null==a.return||a.return()}finally{if(n)throw o}}this.offset+=t.length,this.setState({posts:t})}},{key:"addMiniPosts",value:function(t,e){}},{key:"handleScroll",value:function(){if(window.innerHeight+window.scrollY>=document.body.offsetHeight&&!this.loading_posts_semaphor){var t=this;this.loading_posts_semaphor=!0,fetch("/load_user_posts",{method:"POST",headers:{Accept:"application/json",Authorization:"Basic","Content-Type":"application/json"},body:JSON.stringify({artist:t.props.global_post.artist,album:t.props.global_post.album,song:t.props.global_post.song,offset:t.offset})}).then(function(t){return t.json()}).then(function(e){t.offset+=e.posts.length;var n=t.state.posts,o=!0,i=!1,a=void 0;try{for(var l,s=e.posts[Symbol.iterator]();!(o=(l=s.next()).done);o=!0){var u=l.value;n.push(r.a.createElement(We,{user:e.user_profiles[u.username],post:u,num_comments:e.num_comments[u.post_id]}))}}catch(t){i=!0,a=t}finally{try{o||null==s.return||s.return()}finally{if(i)throw a}}t.setState({posts:n}),t.loading_posts_semaphor=!1})}}},{key:"render",value:function(){return r.a.createElement("div",null,this.state.posts)}}]),e}(),$e=function(t){function e(t){return Fe(this,e),ze(this,Ue(e).call(this,t))}return Me(e,r.a.Component),Ae(e,[{key:"render",value:function(){if(null==this.props.data.global_post)return r.a.createElement("div",null," Content Not Yet Posted ");var t=new Date(this.props.data.global_post.timestamp),e=this.props.data.global_post.song,n=r.a.createElement("div",{style:{fontSize:"1.1em"}},"Album: ",r.a.createElement("a",{href:"/album/"+this.props.data.global_post.artist+"/"+this.props.data.global_post.album}," ",this.props.data.global_post.album," "));return 1==this.props.data.global_post.type&&(e=this.props.data.global_post.album,n=""),r.a.createElement("div",{style:{width:"735px",margin:"0px auto",paddingTop:"50px"}},r.a.createElement("div",{style:{width:"735px",height:"400px",background:"white",border:"1px solid #F1F1F1",borderRadius:"7px",display:"flex",flexDirection:"row"}},r.a.createElement("div",{style:{paddingTop:"10px",paddingLeft:"10px"},dangerouslySetInnerHTML:pt.a.renderiframe(this.props.data.global_post.embedded_content)}),r.a.createElement("div",{style:{justifyContent:"center",display:"flex",flexDirection:"column",paddingLeft:"20px"}},r.a.createElement("div",{style:{fontSize:"1.4em",fontWeight:"bold",display:"flex",flexDirection:"row"}},r.a.createElement("div",{style:{fontWeight:"bold"}},e),r.a.createElement("div",{style:{paddingLeft:"8px",paddingRight:"8px",fontWeight:"bold"}}," by "),r.a.createElement("a",{href:"/artist/"+this.props.data.global_post.artist},this.props.data.global_post.artist)),n,r.a.createElement("div",{style:{fontSize:"1.1em"}},"Release Date: "+pt.a.monthNames[parseInt(t.getMonth())]+" "+t.getDate()+", "+t.getFullYear()),r.a.createElement("div",{style:{display:"flex",flexDirection:"row"}},r.a.createElement("div",{style:{}},r.a.createElement("div",{style:{fontSize:"1.2em",fontWeight:"normal"}}," Likes"),r.a.createElement("div",{style:{fontWeight:"bold",fontSize:"1.2em"}},this.props.data.likes)),r.a.createElement("div",{style:{paddingLeft:"20px"}},r.a.createElement("div",{style:{fontSize:"1.2em",fontWeight:"normal"}}," Posts"),r.a.createElement("div",{style:{fontWeight:"bold",fontSize:"1.2em"}},this.props.data.num_posts))))),r.a.createElement("div",{style:{fontWeight:"bold",fontSize:"1.5em",paddingTop:"20px"}},"Top User Posts"),r.a.createElement("div",{style:{paddingTop:"20px",paddingBottom:"20px"}},r.a.createElement(Ye,{posts:this.props.data.user_posts,global_post:this.props.data.global_post,user_profiles:this.props.data.user_profiles,num_comments:this.props.data.num_comments})))}}]),e}();function Je(t){return(Je="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Qe(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function Ze(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function Xe(t,e,n){return e&&Ze(t.prototype,e),n&&Ze(t,n),t}function Ke(t,e){return!e||"object"!==Je(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function je(t){return(je=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function Ve(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Ge(t,e)}function Ge(t,e){return(Ge=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var Be=function(t){function e(t){var n;return Qe(this,e),(n=Ke(this,je(e).call(this,t))).albums=[],n}return Ve(e,r.a.Component),Xe(e,[{key:"renderiframe",value:function(t){return{__html:t}}},{key:"generateAlbums",value:function(){var t=0,e=!0,n=!1,o=void 0;try{for(var i,a=this.props.data[Symbol.iterator]();!(e=(i=a.next()).done);e=!0){var l=i.value;if(++t>3)break;this.albums.push(r.a.createElement("div",{key:l.post_id,style:{display:"flex",flexDirection:"column",padding:"10px"}},l.album,r.a.createElement("div",{dangerouslySetInnerHTML:this.renderiframe(pt.a.SetSpotifySize(l.embedded_content,212,292))})))}}catch(t){n=!0,o=t}finally{try{e||null==a.return||a.return()}finally{if(n)throw o}}}},{key:"componentDidMount",value:function(){this.generateAlbums()}},{key:"render",value:function(){return r.a.createElement("div",{style:{maxWidth:"800px"}},r.a.createElement("h1",null," ",r.a.createElement("a",{href:"/artist/"+this.props.artist+"/albums"}," Top Albums ")," "),r.a.createElement("div",{className:"album_display",style:{display:"flex",flexDirection:"row"}},this.albums))}}]),e}(),qe=function(t){function e(t){var n;return Qe(this,e),(n=Ke(this,je(e).call(this,t))).songs=[],n}return Ve(e,r.a.Component),Xe(e,[{key:"renderiframe",value:function(t){return{__html:t}}},{key:"generateSongs",value:function(){var t=this.songs.length,e=!0,n=!1,o=void 0;try{for(var i,a=this.props.data[Symbol.iterator]();!(e=(i=a.next()).done);e=!0){var l=i.value;if(++t>3)break;this.songs.push(r.a.createElement("div",{key:l.post_id,style:{display:"flex",flexDirection:"column",padding:"10px"}},l.song,r.a.createElement("div",{dangerouslySetInnerHTML:this.renderiframe(pt.a.SetSpotifySize(l.embedded_content,212,292))})))}}catch(t){n=!0,o=t}finally{try{e||null==a.return||a.return()}finally{if(n)throw o}}}},{key:"componentDidMount",value:function(){this.generateSongs()}},{key:"render",value:function(){return r.a.createElement("div",{style:{maxWidth:"800px"}},r.a.createElement("h1",null," ",r.a.createElement("a",{href:"/artist/"+this.props.artist+"/songs"}," Top Songs ")," "),r.a.createElement("div",{className:"song_display",style:{display:"flex",flexDirection:"row"}},this.songs))}}]),e}(),He=function(t){function e(t){var n;return Qe(this,e),(n=Ke(this,je(e).call(this,t))).state={picture:void 0},n}return Ve(e,r.a.Component),Xe(e,[{key:"componentDidMount",value:function(){var t=this;fetch("/artist_picture",{method:"POST",headers:{Accept:"application/json",Authorization:"Basic","Content-Type":"application/json"},body:JSON.stringify({artist:t.props.artist})}).then(function(t){return t.json()}).then(function(e){t.setState({picture:e.picture})})}},{key:"render",value:function(){return r.a.createElement("div",null,r.a.createElement("img",{style:{width:"260px",height:"260px"},src:this.state.picture}))}}]),e}(),tn=function(t){function e(t){return Qe(this,e),Ke(this,je(e).call(this,t))}return Ve(e,r.a.Component),Xe(e,[{key:"render",value:function(){return r.a.createElement("div",{style:{width:"735px",border:"1px solid #F1F1F1"}},r.a.createElement("div",{style:{display:"flex",flexDirection:"row",height:"300px",paddingLeft:"20px",paddingTop:"20px"}},r.a.createElement("div",{style:{width:"260px",height:"260px"}},r.a.createElement(He,{artist:this.props.data.artist})),r.a.createElement("div",{style:{paddingLeft:"20px",display:"flex",alignItems:"center",justifyContent:"center",flexDirection:"row",height:"260px"}},r.a.createElement("div",{style:{fontWeight:"bold",fontSize:"40px"}},this.props.data.artist,r.a.createElement("div",{style:{fontWeight:"regular",fontSize:"20px"}},this.props.data.num_user_posts+" User Posts")),r.a.createElement("div",{style:{position:"relative",left:"32px",paddingTop:"10px"}},r.a.createElement("button",{style:{height:"38px",width:"120px",fontSize:"18px"},className:"grayButton"}," Follow "),r.a.createElement("div",{style:{fontSize:"20px",paddingTop:"10px"}},this.props.data.follows.length+" Followers")))),r.a.createElement("div",{style:{paddingLeft:"20px"}},r.a.createElement(Be,{data:this.props.data.album_data,artist:this.props.data.artist}),r.a.createElement(qe,{data:this.props.data.song_data,artist:this.props.data.artist})))}}]),e}(),en=function(t){function e(t){var n;return Qe(this,e),(n=Ke(this,je(e).call(this,t))).state={posts:[]},n.offset=n.props.data.songs.length,n}return Ve(e,r.a.Component),Xe(e,[{key:"componentDidMount",value:function(){window.addEventListener("scroll",this.handleScroll.bind(this));var t=[],e=!0,n=!1,o=void 0;try{for(var r,i=this.props.data.songs[Symbol.iterator]();!(e=(r=i.next()).done);e=!0){var a=r.value;t.push(Tt(a,this.props.data.likes,this.props.data.num_comments,[],[],this.props.data.user_profiles))}}catch(t){n=!0,o=t}finally{try{e||null==i.return||i.return()}finally{if(n)throw o}}this.setState({posts:t})}},{key:"componentWillUnmount",value:function(){window.removeEventListener("scroll",this.handleScroll.bind(this))}},{key:"handleScroll",value:function(){if(window.innerHeight+window.scrollY>=document.body.offsetHeight&&!this.loading_posts_semaphor){var t=this;this.loading_posts_semaphor=!0,fetch("/load_artist_post_data",{method:"POST",headers:{Accept:"application/json",Authorization:"Basic","Content-Type":"application/json"},body:JSON.stringify({offset:t.offset,artist:t.props.data.artist})}).then(function(t){return t.json()}).then(function(e){t.offset+=e.songs.length;var n=[],o=!0,r=!1,i=void 0;try{for(var a,l=e.songs[Symbol.iterator]();!(o=(a=l.next()).done);o=!0){var s=a.value;n.push(Tt(s,e.likes,e.num_comments,e.num_posts,e.bumps,e.user_profiles))}}catch(t){r=!0,i=t}finally{try{o||null==l.return||l.return()}finally{if(r)throw i}}t.setState({posts:t.state.posts.concat(n)}),t.loading_posts_semaphor=!1})}}},{key:"render",value:function(){return r.a.createElement("div",{style:{margin:"0px auto",width:"735px",paddingTop:"50px"}},r.a.createElement("div",{style:{backgroundColor:"#FFFFFF",borderRadius:"7px"}},r.a.createElement(tn,{data:this.props.data})),r.a.createElement("div",{style:{paddingTop:"20px"}},r.a.createElement(Ct,{posts:this.state.posts})))}}]),e}();function nn(t){return(nn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function on(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function rn(t,e){return!e||"object"!==nn(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function an(t){return(an=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function ln(t,e){return(ln=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var sn=function(t){function e(t){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(n=rn(this,an(e).call(this,t))).songs=[],n}var n,o,i;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&ln(t,e)}(e,r.a.Component),n=e,(o=[{key:"generateSongs",value:function(){var t=!0,e=!1,n=void 0;try{for(var o,i=this.props.data.song_data[Symbol.iterator]();!(t=(o=i.next()).done);t=!0){var a=o.value;this.songs.push(r.a.createElement("div",{key:a.post_id,style:{display:"flex",flexDirection:"column"}},r.a.createElement("h2",null,"  ",r.a.createElement("a",{href:"/post/"+a.artist+"/"+a.song},a.song," "))))}}catch(t){e=!0,n=t}finally{try{t||null==i.return||i.return()}finally{if(e)throw n}}}},{key:"render",value:function(){return this.generateSongs(),r.a.createElement("div",null,r.a.createElement("div",{className:"songs_display",style:{left:"15%",top:"100px",position:"relative"}},r.a.createElement("h1",null," Songs "),this.songs))}}])&&on(n.prototype,o),i&&on(n,i),e}();function un(t){return(un="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function cn(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function pn(t,e){return!e||"object"!==un(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function fn(t){return(fn=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function dn(t,e){return(dn=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var hn=function(t){function e(t){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(n=pn(this,fn(e).call(this,t))).albums=[],n}var n,o,i;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&dn(t,e)}(e,r.a.Component),n=e,(o=[{key:"generateAlbums",value:function(){var t=!0,e=!1,n=void 0;try{for(var o,i=this.props.data.album_data[Symbol.iterator]();!(t=(o=i.next()).done);t=!0){var a=o.value;this.albums.push(r.a.createElement("div",{key:a.post_id,style:{display:"flex",flexDirection:"column"}},r.a.createElement("h2",null,"  ",r.a.createElement("a",{href:"/album/"+a.artist+"/"+a.album},a.album," "))))}}catch(t){e=!0,n=t}finally{try{t||null==i.return||i.return()}finally{if(e)throw n}}}},{key:"render",value:function(){return this.generateAlbums(),r.a.createElement("div",null,r.a.createElement("div",{className:"albums_display",style:{left:"15%",top:"100px",position:"relative"}},r.a.createElement("h1",null," Albums "),this.albums))}}])&&cn(n.prototype,o),i&&cn(n,i),e}();function yn(t){return(yn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function mn(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function vn(t,e){return!e||"object"!==yn(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function gn(t){return(gn=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function wn(t,e){return(wn=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var _n=function(t){function e(t){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(n=vn(this,gn(e).call(this,t))).usernameRef=r.a.createRef(),n.passwordRef=r.a.createRef(),n.login_message="",n}var n,o,i;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&wn(t,e)}(e,r.a.Component),n=e,(o=[{key:"submitLogin",value:function(){var t=this;fetch("/login",{method:"POST",headers:{Accept:"application/json",Authorization:"Basic","Content-Type":"application/json"},body:JSON.stringify({username:this.usernameRef.current.value,password:this.passwordRef.current.value})}).then(function(t){return t.json()}).then(function(e){t.login_message=e.login_message,"Login Successful"==e.login_message?window.location.href="/":t.forceUpdate()})}},{key:"render",value:function(){return r.a.createElement("div",null,r.a.createElement("section",{className:"hero",style:{position:"absolute",left:"10%",top:"20%"}},r.a.createElement("div",{className:"hero-content"},r.a.createElement("h2",null,"Login"),r.a.createElement("label",{style:{color:"black"}},"Username:"),r.a.createElement("input",{ref:this.usernameRef,type:"text",name:"username"}),r.a.createElement("br",null),r.a.createElement("label",{style:{color:"black"}},"Password:"),r.a.createElement("input",{ref:this.passwordRef,type:"password",name:"password"}),r.a.createElement("p",null,r.a.createElement("button",{onClick:this.submitLogin.bind(this),type:"submit",id:"submitButton",className:"btn btn-lg btn-primary"},"Login"),r.a.createElement("a",{href:"/register",id:"submitButton",className:"btn btn-lg btn-primary"},"Register")),r.a.createElement("p",null,this.login_message))))}}])&&mn(n.prototype,o),i&&mn(n,i),e}();function xn(t){return(xn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function En(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function bn(t,e){return!e||"object"!==xn(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Sn(t){return(Sn=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function Tn(t,e){return(Tn=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var Cn=function(t){function e(t){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(n=bn(this,Sn(e).call(this,t))).emailRef=r.a.createRef(),n.usernameRef=r.a.createRef(),n.passwordRef=r.a.createRef(),n.confirmRef=r.a.createRef(),n.registration_message="",n}var n,o,i;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Tn(t,e)}(e,r.a.Component),n=e,(o=[{key:"submitRegistration",value:function(t){var e=this;fetch("/register",{method:"POST",headers:{Accept:"application/json",Authorization:"Basic","Content-Type":"application/json"},body:JSON.stringify({username:this.usernameRef.current.value,password:this.passwordRef.current.value,password_confirm:this.confirmRef.current.value,email:this.emailRef.current.value})}).then(function(t){return t.json()}).then(function(t){e.registration_message=t.message,"Registration Successful"==t.message?window.location.href="/":e.forceUpdate()})}},{key:"render",value:function(){return r.a.createElement("div",null,r.a.createElement("section",{className:"hero",style:{position:"absolute",left:"10%",top:"20%"}},r.a.createElement("div",{className:"hero-content"},r.a.createElement("h2",null,"Register"),r.a.createElement("label",{style:{color:"black"}},"Enter Email:"),r.a.createElement("input",{ref:this.emailRef,type:"text",name:"email"}),r.a.createElement("br",null),r.a.createElement("label",{style:{color:"black"}},"Enter Username:"),r.a.createElement("input",{ref:this.usernameRef,type:"text",name:"username"}),r.a.createElement("br",null),r.a.createElement("label",{style:{color:"black"}},"Enter Password:"),r.a.createElement("input",{type:"password",ref:this.passwordRef,name:"password"}),r.a.createElement("br",null),r.a.createElement("label",{style:{color:"black"}},"Confirm Password:"),r.a.createElement("input",{type:"password",ref:this.confirmRef,name:"password_confirm"}),r.a.createElement("p",null,r.a.createElement("button",{href:"/",type:"submit",id:"submitButton",className:"btn btn-lg btn-primary",onClick:this.submitRegistration.bind(this)},"Register")),r.a.createElement("p",null,this.registration_message))))}}])&&En(n.prototype,o),i&&En(n,i),e}();function On(t){return(On="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Pn(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function kn(t,e){return!e||"object"!==On(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Nn(t){return(Nn=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function Ln(t,e){return(Ln=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var Rn=function(t){function e(t){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(n=kn(this,Nn(e).call(this,t))).followers=[],n}var n,o,i;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Ln(t,e)}(e,r.a.Component),n=e,(o=[{key:"generateFollowers",value:function(){var t=!0,e=!1,n=void 0;try{for(var o,i=this.props.data.followers[Symbol.iterator]();!(t=(o=i.next()).done);t=!0){var a=o.value;this.followers.push(r.a.createElement("div",{key:a.user_id},r.a.createElement("a",{href:"/user/"+a.user_id},a.user_id)))}}catch(t){e=!0,n=t}finally{try{t||null==i.return||i.return()}finally{if(e)throw n}}}},{key:"render",value:function(){return this.generateFollowers(),r.a.createElement("div",null,r.a.createElement("div",{className:"followers_div",style:{left:"15%",top:"100px",position:"relative"}},r.a.createElement("h1",null," Followers "),this.followers))}}])&&Pn(n.prototype,o),i&&Pn(n,i),e}();function Fn(t){return(Fn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Dn(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function An(t,e){return!e||"object"!==Fn(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function zn(t){return(zn=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function Un(t,e){return(Un=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var Mn=function(t){function e(t){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(n=An(this,zn(e).call(this,t))).follows=[],n}var n,o,i;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Un(t,e)}(e,r.a.Component),n=e,(o=[{key:"generateFollows",value:function(){var t=!0,e=!1,n=void 0;try{for(var o,i=this.props.data.following[Symbol.iterator]();!(t=(o=i.next()).done);t=!0){var a=o.value;this.follows.push(r.a.createElement("div",{key:a.user_id},r.a.createElement("a",{href:"/user/"+a.user_id},a.user_id)))}}catch(t){e=!0,n=t}finally{try{t||null==i.return||i.return()}finally{if(e)throw n}}}},{key:"render",value:function(){return this.generateFollows(),r.a.createElement("div",null,r.a.createElement("div",{className:"follows_div",style:{left:"15%",top:"100px",position:"relative"}},r.a.createElement("h1",null," Follows "),this.follows))}}])&&Dn(n.prototype,o),i&&Dn(n,i),e}();function In(t){return(In="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Wn(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function Yn(t,e){return!e||"object"!==In(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function $n(t){return($n=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function Jn(t,e){return(Jn=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var Qn=function(t){function e(t){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(n=Yn(this,$n(e).call(this,t))).likes=[],n.dislikes=[],n}var n,o,i;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Jn(t,e)}(e,r.a.Component),n=e,(o=[{key:"generatelikes",value:function(){var t=!0,e=!1,n=void 0;try{for(var o,i=this.props.data.likes[Symbol.iterator]();!(t=(o=i.next()).done);t=!0){var a=o.value;this.likes.push(r.a.createElement("div",{key:a.user_id},r.a.createElement("a",{href:"/user/"+a.user_id},a.user_id)))}}catch(t){e=!0,n=t}finally{try{t||null==i.return||i.return()}finally{if(e)throw n}}var l=!0,s=!1,u=void 0;try{for(var c,p=this.props.data.dislikes[Symbol.iterator]();!(l=(c=p.next()).done);l=!0){var f=c.value;this.dislikes.push(r.a.createElement("div",{key:f.user_id},r.a.createElement("a",{href:"/user/"+f.user_id},f.user_id)))}}catch(t){s=!0,u=t}finally{try{l||null==p.return||p.return()}finally{if(s)throw u}}}},{key:"render",value:function(){return this.generatelikes(),r.a.createElement("div",{style:{display:"flex",flexDirection:"row",left:"15%",top:"100px",position:"relative"}},r.a.createElement("div",{className:"likes",style:{paddingRight:"10%",borderRight:"2px solid black"}},r.a.createElement("h1",null," Likes "),this.likes),r.a.createElement("div",{className:"dislikes",style:{paddingLeft:"10%"}},r.a.createElement("h1",null," Dislikes "),this.dislikes))}}])&&Wn(n.prototype,o),i&&Wn(n,i),e}();function Zn(t){return(Zn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Xn(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function Kn(t,e){return!e||"object"!==Zn(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function jn(t){return(jn=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function Vn(t,e){return(Vn=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var Gn=function(t){function e(t){return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),Kn(this,jn(e).call(this,t))}var n,o,i;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Vn(t,e)}(e,r.a.Component),n=e,(o=[{key:"handleClick",value:function(t){console.log("CLICKED")}},{key:"componentWillMount",value:function(){"undefined"!=typeof window&&(document.body.style.backgroundColor="rgb(242, 242, 242)",document.body.style.marginTop="60px")}},{key:"render",value:function(){var t=this;return r.a.createElement("div",{className:"App",id:"root",style:{width:"100%",minWidth:"1200px"}},r.a.createElement(ut,{username:this.props.data.username,notifications:{}}),r.a.createElement("link",{rel:"stylesheet",href:"/styles.css"}),r.a.createElement(X,null,r.a.createElement(B,{exact:!0,path:"/",render:function(){return r.a.createElement(Ut,{data:t.props.data})}}),r.a.createElement(B,{exact:!0,path:"/user/:user/:post_id",render:function(){return r.a.createElement(Le,{data:t.props.data})}}),r.a.createElement(B,{exact:!0,path:"/user/:user/:post_id/likes",render:function(){return r.a.createElement(Qn,{data:t.props.data})}}),r.a.createElement(B,{exact:!0,path:"/user/:user",render:function(){return r.a.createElement(se,{data:t.props.data})}}),r.a.createElement(B,{exact:!0,path:"/followers/:user",render:function(){return r.a.createElement(Rn,{data:t.props.data})}}),r.a.createElement(B,{exact:!0,path:"/following/:user",render:function(){return r.a.createElement(Mn,{data:t.props.data})}}),r.a.createElement(B,{exact:!0,path:"/login",render:function(){return r.a.createElement(_n,{data:t.props.data})}}),r.a.createElement(B,{exact:!0,path:"/register",render:function(){return r.a.createElement(Cn,{data:t.props.data})}}),r.a.createElement(B,{exact:!0,path:"/post/:artist/:song",render:function(){return r.a.createElement($e,{data:t.props.data})}}),r.a.createElement(B,{exact:!0,path:"/album/:artist/:album",render:function(){return r.a.createElement($e,{data:t.props.data})}}),r.a.createElement(B,{exact:!0,path:"/artist/:artist",render:function(){return r.a.createElement(en,{data:t.props.data})}}),r.a.createElement(B,{exact:!0,path:"/artist/:artist/songs",render:function(){return r.a.createElement(sn,{data:t.props.data})}}),r.a.createElement(B,{exact:!0,path:"/artist/:artist/albums",render:function(){return r.a.createElement(hn,{data:t.props.data})}}),r.a.createElement(B,{exact:!0,path:"/contact",render:function(){return r.a.createElement(Jt,{data:t.props.data})}}),r.a.createElement(B,{exact:!0,path:"/about",component:Vt})),r.a.createElement("script",{type:"text/javascript",src:"/public/bundle.js"}," "))}}])&&Xn(n.prototype,o),i&&Xn(n,i),e}();Object(i.render)(r.a.createElement(I,null,r.a.createElement(Gn,{data:window.__DATA__})),document.getElementById("root"))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzIiwid2VicGFjazovLy8uL2FwcC9jb21wb25lbnRzL3V0aWxzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oaXN0b3J5L25vZGVfbW9kdWxlcy93YXJuaW5nL2Jyb3dzZXIuanMiLCJ3ZWJwYWNrOi8vLy4vYXBwL2NvbXBvbmVudHMvdGFnX3V0aWxzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy93YXJuaW5nL3dhcm5pbmcuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2ludmFyaWFudC9icm93c2VyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL29iamVjdC1hc3NpZ24vaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3BhdGgtdG8tcmVnZXhwL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9janMvcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zY2hlZHVsZXIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3NjaGVkdWxlci9janMvc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovLy8od2VicGFjaykvYnVpbGRpbi9nbG9iYWwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvZmFjdG9yeVdpdGhUaHJvd2luZ1NoaW1zLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcGF0aC10by1yZWdleHAvbm9kZV9tb2R1bGVzL2lzYXJyYXkvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Jlc29sdmUtcGF0aG5hbWUvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3ZhbHVlLWVxdWFsL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oaXN0b3J5L2VzL1BhdGhVdGlscy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaGlzdG9yeS9lcy9Mb2NhdGlvblV0aWxzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oaXN0b3J5L2VzL2NyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oaXN0b3J5L2VzL0RPTVV0aWxzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oaXN0b3J5L2VzL2NyZWF0ZUJyb3dzZXJIaXN0b3J5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXIvZXMvUm91dGVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oaXN0b3J5L2VzL2NyZWF0ZUhhc2hIaXN0b3J5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oaXN0b3J5L2VzL2NyZWF0ZU1lbW9yeUhpc3RvcnkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci1kb20vZXMvUm91dGVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXItZG9tL2VzL0Jyb3dzZXJSb3V0ZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci9lcy9tYXRjaFBhdGguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci9lcy9Td2l0Y2guanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci1kb20vZXMvU3dpdGNoLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXIvZXMvUm91dGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci1kb20vZXMvUm91dGUuanMiLCJ3ZWJwYWNrOi8vLy4vYXBwL2NvbXBvbmVudHMvc3RhbmRhcmRfaGVhZGVyLmpzIiwid2VicGFjazovLy8uL2FwcC9jb21wb25lbnRzL3Bvc3QuanMiLCJ3ZWJwYWNrOi8vLy4vYXBwL2NvbXBvbmVudHMvZmVlZC5qcyIsIndlYnBhY2s6Ly8vLi9hcHAvY29tcG9uZW50cy9Db250YWN0LmpzIiwid2VicGFjazovLy8uL2FwcC9jb21wb25lbnRzL2Fib3V0LmpzIiwid2VicGFjazovLy8uL2FwcC9jb21wb25lbnRzL3VzZXIuanMiLCJ3ZWJwYWNrOi8vLy4vYXBwL2NvbXBvbmVudHMvY29tbWVudHMuanMiLCJ3ZWJwYWNrOi8vLy4vYXBwL2NvbXBvbmVudHMvdXNlcl9wb3N0LmpzIiwid2VicGFjazovLy8uL2FwcC9jb21wb25lbnRzL2dsb2JhbF9wb3N0LmpzIiwid2VicGFjazovLy8uL2FwcC9jb21wb25lbnRzL2FydGlzdC5qcyIsIndlYnBhY2s6Ly8vLi9hcHAvY29tcG9uZW50cy9hcnRpc3Rfc29uZ3MuanMiLCJ3ZWJwYWNrOi8vLy4vYXBwL2NvbXBvbmVudHMvYXJ0aXN0X2FsYnVtcy5qcyIsIndlYnBhY2s6Ly8vLi9hcHAvY29tcG9uZW50cy9sb2dpbi5qcyIsIndlYnBhY2s6Ly8vLi9hcHAvY29tcG9uZW50cy9yZWdpc3Rlci5qcyIsIndlYnBhY2s6Ly8vLi9hcHAvY29tcG9uZW50cy9mb2xsb3dlcnMuanMiLCJ3ZWJwYWNrOi8vLy4vYXBwL2NvbXBvbmVudHMvZm9sbG93aW5nLmpzIiwid2VicGFjazovLy8uL2FwcC9jb21wb25lbnRzL3VzZXJwb3N0bGlrZXMuanMiLCJ3ZWJwYWNrOi8vLy4vYXBwL2NvbXBvbmVudHMvQXBwLmpzIiwid2VicGFjazovLy8uL2FwcC9pbmRleC5qcyJdLCJuYW1lcyI6WyJpbnN0YWxsZWRNb2R1bGVzIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiZXhwb3J0cyIsIm1vZHVsZSIsImkiLCJsIiwibW9kdWxlcyIsImNhbGwiLCJtIiwiYyIsImQiLCJuYW1lIiwiZ2V0dGVyIiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInIiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsInZhbHVlIiwidCIsIm1vZGUiLCJfX2VzTW9kdWxlIiwibnMiLCJjcmVhdGUiLCJrZXkiLCJiaW5kIiwibiIsIm9iamVjdCIsInByb3BlcnR5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJwIiwicyIsImNoZWNrTG9nZ2VkSW4iLCJkb2N1bWVudCIsImNvb2tpZSIsImluZGV4T2YiLCJyZXBsYWNlQWxsIiwic3RyaW5nIiwiZGVsaW1pdGVyIiwicmVwbGFjZSIsInJlc3Rfc3RyaW5nIiwibmV3X3N0cmluZyIsImN1cnJlbnRfaW5kZXgiLCJzdWJzdHJpbmciLCJsZW5ndGgiLCJpbnNlcnRUYWciLCJwb3RlbnRpYWxfdGFncyIsInRhZyIsInJlbWFpbmluZ190YWdzIiwicHVzaCIsInJlcGxhY2VUYWciLCJtb250aE5hbWVzIiwicmVuZGVyaWZyYW1lIiwiaWZyYW1lIiwiX19odG1sIiwiU2V0U3BvdGlmeVNpemUiLCJpZnJhbWVfc3RyaW5nIiwid2lkdGgiLCJoZWlnaHQiLCJ1dGlscyIsInJlcXVpcmUiLCJSZWFjdCIsImdldFRhZ3MiLCJvYmoiLCJ0YWdnZWQiLCJjb250ZW50UmVmIiwiY3VycmVudCIsInNlbGVjdGlvbkVuZCIsImxhc3RDb250ZW50U2l6ZSIsImxhc3RfZGFzaCIsImN1cnJlbnRUYWciLCJhcnRpc3RTZWFyY2giLCJhcnRpc3RGbGFnIiwidGFnRmxhZyIsInRhZ19lbmQiLCJ0YWdMaXN0IiwiY3VycmVudF9zb25nIiwic29uZ3NfYW5kX2FsYnVtcyIsInNvbmciLCJhbHRlcm5hdGl2ZV9zb25nIiwidG9Mb3dlckNhc2UiLCJjdXJyZW50X2FsYnVtIiwiYWx0ZXJuYXRpdmVfYWxidW0iLCJhbGJ1bSIsImFsdGVybmF0aXZlX2FydGlzdCIsInVuZGVmaW5lZCIsImFydGlzdHMiLCJhcnRpc3QiLCJ1c2VycyIsInVzZXJuYW1lIiwiYWxyZWFkeVRhZ0ZsYWciLCJ0YWdfbGFiZWwiLCJzb25nX2FsYnVtIiwidGhhdCIsImZldGNoIiwibWV0aG9kIiwiaGVhZGVycyIsIkFjY2VwdCIsIkF1dGhvcml6YXRpb24iLCJDb250ZW50LVR5cGUiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsInRoZW4iLCJyZXNwb25zZSIsImpzb24iLCJkYXRhIiwic29uZ3MiLCJjb25jYXQiLCJhbGJ1bXMiLCJzb3J0IiwiYSIsImIiLCJfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uIiwiX2RpZEl0ZXJhdG9yRXJyb3IiLCJfaXRlcmF0b3JFcnJvciIsIl9zdGVwIiwiX2l0ZXJhdG9yIiwiaXRlcmF0b3IiLCJuZXh0IiwiZG9uZSIsImNyZWF0ZUVsZW1lbnQiLCJpZCIsImNsYXNzTmFtZSIsInN0eWxlIiwiY29sb3IiLCJvbkNsaWNrIiwic2VsZWN0VGFnIiwiZXJyIiwicmV0dXJuIiwiZm9yY2VVcGRhdGUiLCJfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uMiIsIl9kaWRJdGVyYXRvckVycm9yMiIsIl9pdGVyYXRvckVycm9yMiIsIl9zdGVwMiIsIl9pdGVyYXRvcjIiLCJfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uMyIsIl9kaWRJdGVyYXRvckVycm9yMyIsIl9pdGVyYXRvckVycm9yMyIsIl9zdGVwMyIsIl9pdGVyYXRvcjMiLCJ0YWdDbGlja2VkIiwiZSIsImFydGlzdF9zdGFydCIsImFydGlzdF9yZXBsYWNlZCIsInRhcmdldCIsInRleHRDb250ZW50IiwidGFnX3R5cGUiLCJwYXJzZUludCIsInBvdGVudGlhbF90YWciLCJzZWxlY3Rpb25TdGFydCIsImZvY3VzIiwiZm9ybWF0Q29udGVudCIsImNvbnRlbnQiLCJyYXdfdGFncyIsInRhZ3MiLCJjb250ZW50X2RpdiIsInRhZ19pbmRpY2VzIiwicGFyc2UiLCJrZXlzIiwicmVtYWluaW5nX2luZGljZXMiLCJfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uNCIsIl9kaWRJdGVyYXRvckVycm9yNCIsIl9pdGVyYXRvckVycm9yNCIsIl9zdGVwNCIsIl9pdGVyYXRvcjQiLCJpbmRleCIsInRvdGFsX2luZGV4Iiwic3BsaXQiLCJtYXAiLCJpdGVtIiwiYWxsX2NvbnRlbnQiLCJiZWZvcmVfdGV4dCIsImhyZWYiLCJzcGxpY2UiLCJ3YXJuaW5nIiwiY29uZGl0aW9uIiwiZm9ybWF0IiwiZiIsImVycm9yIiwiRXJyb3IiLCJhcmdzIiwiYXJnSW5kZXgiLCJmcmFtZXNUb1BvcCIsImNoZWNrRENFIiwiX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fIiwiY29uc29sZSIsImdldE93blByb3BlcnR5U3ltYm9scyIsInByb3BJc0VudW1lcmFibGUiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsImFzc2lnbiIsInRlc3QxIiwiU3RyaW5nIiwiZ2V0T3duUHJvcGVydHlOYW1lcyIsInRlc3QyIiwiZnJvbUNoYXJDb2RlIiwiam9pbiIsInRlc3QzIiwiZm9yRWFjaCIsImxldHRlciIsInNob3VsZFVzZU5hdGl2ZSIsInNvdXJjZSIsImZyb20iLCJzeW1ib2xzIiwidG8iLCJ2YWwiLCJUeXBlRXJyb3IiLCJ0b09iamVjdCIsImFyZ3VtZW50cyIsImlzYXJyYXkiLCJwYXRoVG9SZWdleHAiLCJjb21waWxlIiwic3RyIiwib3B0aW9ucyIsInRva2Vuc1RvRnVuY3Rpb24iLCJ0b2tlbnNUb1JlZ0V4cCIsIlBBVEhfUkVHRVhQIiwiUmVnRXhwIiwicmVzIiwidG9rZW5zIiwicGF0aCIsImRlZmF1bHREZWxpbWl0ZXIiLCJleGVjIiwiZXNjYXBlZCIsIm9mZnNldCIsInNsaWNlIiwicHJlZml4IiwiY2FwdHVyZSIsImdyb3VwIiwibW9kaWZpZXIiLCJhc3RlcmlzayIsInBhcnRpYWwiLCJyZXBlYXQiLCJvcHRpb25hbCIsInBhdHRlcm4iLCJlc2NhcGVHcm91cCIsImVzY2FwZVN0cmluZyIsInN1YnN0ciIsImVuY29kZVVSSUNvbXBvbmVudFByZXR0eSIsImVuY29kZVVSSSIsImNoYXJDb2RlQXQiLCJ0b1N0cmluZyIsInRvVXBwZXJDYXNlIiwibWF0Y2hlcyIsIkFycmF5Iiwib3B0cyIsImVuY29kZSIsInByZXR0eSIsImVuY29kZVVSSUNvbXBvbmVudCIsInRva2VuIiwic2VnbWVudCIsImoiLCJ0ZXN0IiwiYXR0YWNoS2V5cyIsInJlIiwiZmxhZ3MiLCJzZW5zaXRpdmUiLCJzdHJpY3QiLCJlbmQiLCJyb3V0ZSIsImVuZHNXaXRoRGVsaW1pdGVyIiwiZ3JvdXBzIiwibWF0Y2giLCJyZWdleHBUb1JlZ2V4cCIsInBhcnRzIiwiYXJyYXlUb1JlZ2V4cCIsInN0cmluZ1RvUmVnZXhwIiwiayIsImZvciIsInEiLCJ1IiwidiIsInciLCJ4IiwieSIsInoiLCJBIiwiQiIsIkMiLCJEIiwiZyIsImgiLCJhYSIsIkUiLCJpc01vdW50ZWQiLCJlbnF1ZXVlRm9yY2VVcGRhdGUiLCJlbnF1ZXVlUmVwbGFjZVN0YXRlIiwiZW5xdWV1ZVNldFN0YXRlIiwiRiIsIkciLCJ0aGlzIiwicHJvcHMiLCJjb250ZXh0IiwicmVmcyIsInVwZGF0ZXIiLCJIIiwiSSIsImlzUmVhY3RDb21wb25lbnQiLCJzZXRTdGF0ZSIsIkoiLCJjb25zdHJ1Y3RvciIsImlzUHVyZVJlYWN0Q29tcG9uZW50IiwiSyIsImN1cnJlbnREaXNwYXRjaGVyIiwiTCIsIk0iLCJyZWYiLCJfX3NlbGYiLCJfX3NvdXJjZSIsIk4iLCJjaGlsZHJlbiIsImRlZmF1bHRQcm9wcyIsIiQkdHlwZW9mIiwidHlwZSIsIl9vd25lciIsIk8iLCJQIiwiUSIsIlIiLCJwb3AiLCJyZXN1bHQiLCJrZXlQcmVmaXgiLCJmdW5jIiwiY291bnQiLCJTIiwiViIsIlQiLCJVIiwiaXNBcnJheSIsIj0iLCI6IiwiZXNjYXBlIiwiY2EiLCJkYSIsIlciLCJiYSIsIlgiLCJDaGlsZHJlbiIsInRvQXJyYXkiLCJvbmx5IiwiY3JlYXRlUmVmIiwiQ29tcG9uZW50IiwiUHVyZUNvbXBvbmVudCIsImNyZWF0ZUNvbnRleHQiLCJfY2FsY3VsYXRlQ2hhbmdlZEJpdHMiLCJfY3VycmVudFZhbHVlIiwiX2N1cnJlbnRWYWx1ZTIiLCJfdGhyZWFkQ291bnQiLCJQcm92aWRlciIsIkNvbnN1bWVyIiwiX2NvbnRleHQiLCJmb3J3YXJkUmVmIiwicmVuZGVyIiwibGF6eSIsIl9jdG9yIiwiX3N0YXR1cyIsIl9yZXN1bHQiLCJtZW1vIiwiY29tcGFyZSIsIkZyYWdtZW50IiwiU3RyaWN0TW9kZSIsIlN1c3BlbnNlIiwiY2xvbmVFbGVtZW50IiwiY3JlYXRlRmFjdG9yeSIsImlzVmFsaWRFbGVtZW50IiwidmVyc2lvbiIsInVuc3RhYmxlX0NvbmN1cnJlbnRNb2RlIiwidW5zdGFibGVfUHJvZmlsZXIiLCJfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRCIsIlJlYWN0Q3VycmVudE93bmVyIiwiWSIsImRlZmF1bHQiLCJaIiwiZWEiLCJmYSIsImhhIiwiaWEiLCJqYSIsIm9uRXJyb3IiLCJrYSIsImFwcGx5IiwibWEiLCJuYSIsIm9hIiwicGEiLCJleHRyYWN0RXZlbnRzIiwiZXZlbnRUeXBlcyIsInFhIiwicGhhc2VkUmVnaXN0cmF0aW9uTmFtZXMiLCJyYSIsInJlZ2lzdHJhdGlvbk5hbWUiLCJzYSIsInRhIiwiZGVwZW5kZW5jaWVzIiwidWEiLCJ2YSIsIndhIiwieGEiLCJjdXJyZW50VGFyZ2V0IiwibGEiLCJ5YSIsInphIiwiQWEiLCJCYSIsIl9kaXNwYXRjaExpc3RlbmVycyIsIl9kaXNwYXRjaEluc3RhbmNlcyIsImlzUHJvcGFnYXRpb25TdG9wcGVkIiwiaXNQZXJzaXN0ZW50IiwicmVsZWFzZSIsIkNhIiwiaW5qZWN0RXZlbnRQbHVnaW5PcmRlciIsImluamVjdEV2ZW50UGx1Z2luc0J5TmFtZSIsIkRhIiwic3RhdGVOb2RlIiwiZGlzYWJsZWQiLCJFYSIsIkZhIiwiTWF0aCIsInJhbmRvbSIsIkdhIiwiSGEiLCJJYSIsInBhcmVudE5vZGUiLCJKYSIsIkthIiwiTGEiLCJNYSIsIk5hIiwiZGlzcGF0Y2hDb25maWciLCJPYSIsIl90YXJnZXRJbnN0IiwiUGEiLCJRYSIsIlJhIiwiU2EiLCJ3aW5kb3ciLCJUYSIsIlVhIiwiYW5pbWF0aW9uZW5kIiwiYW5pbWF0aW9uaXRlcmF0aW9uIiwiYW5pbWF0aW9uc3RhcnQiLCJ0cmFuc2l0aW9uZW5kIiwiVmEiLCJXYSIsIlhhIiwiYW5pbWF0aW9uIiwidHJhbnNpdGlvbiIsIllhIiwiWmEiLCIkYSIsImFiIiwiYmIiLCJjYiIsImViIiwiZmIiLCJnYiIsImhiIiwiaWIiLCJuYXRpdmVFdmVudCIsIkludGVyZmFjZSIsImlzRGVmYXVsdFByZXZlbnRlZCIsImRlZmF1bHRQcmV2ZW50ZWQiLCJyZXR1cm5WYWx1ZSIsImtiIiwiZXZlbnRQb29sIiwibGIiLCJkZXN0cnVjdG9yIiwiamIiLCJnZXRQb29sZWQiLCJwcmV2ZW50RGVmYXVsdCIsInN0b3BQcm9wYWdhdGlvbiIsImNhbmNlbEJ1YmJsZSIsInBlcnNpc3QiLCJldmVudFBoYXNlIiwiYnViYmxlcyIsImNhbmNlbGFibGUiLCJ0aW1lU3RhbXAiLCJEYXRlIiwibm93IiwiaXNUcnVzdGVkIiwiZXh0ZW5kIiwibWIiLCJuYiIsIm9iIiwicGIiLCJxYiIsImRvY3VtZW50TW9kZSIsInJiIiwic2IiLCJ0YiIsInViIiwiYmVmb3JlSW5wdXQiLCJidWJibGVkIiwiY2FwdHVyZWQiLCJjb21wb3NpdGlvbkVuZCIsImNvbXBvc2l0aW9uU3RhcnQiLCJjb21wb3NpdGlvblVwZGF0ZSIsInZiIiwid2IiLCJrZXlDb2RlIiwieGIiLCJkZXRhaWwiLCJ5YiIsIkJiIiwibG9jYWxlIiwid2hpY2giLCJ6YiIsImN0cmxLZXkiLCJhbHRLZXkiLCJtZXRhS2V5IiwiY2hhciIsIkFiIiwiQ2IiLCJEYiIsIkViIiwiSGIiLCJJYiIsIkpiIiwiS2IiLCJMYiIsIk1iIiwiTmIiLCJPYiIsIlBiIiwiZGF0ZSIsImRhdGV0aW1lIiwiZGF0ZXRpbWUtbG9jYWwiLCJlbWFpbCIsIm1vbnRoIiwibnVtYmVyIiwicGFzc3dvcmQiLCJyYW5nZSIsInNlYXJjaCIsInRlbCIsInRleHQiLCJ0aW1lIiwidXJsIiwid2VlayIsIlFiIiwibm9kZU5hbWUiLCJSYiIsInNyY0VsZW1lbnQiLCJjb3JyZXNwb25kaW5nVXNlRWxlbWVudCIsIm5vZGVUeXBlIiwiU2IiLCJzZXRBdHRyaWJ1dGUiLCJUYiIsIlZiIiwiX3ZhbHVlVHJhY2tlciIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsInNldCIsImNvbmZpZ3VyYWJsZSIsImdldFZhbHVlIiwic2V0VmFsdWUiLCJzdG9wVHJhY2tpbmciLCJVYiIsIldiIiwiY2hlY2tlZCIsIlhiIiwiWWIiLCJaYiIsIiRiIiwiYWMiLCJiYyIsImNjIiwiZGMiLCJlYyIsImZjIiwiZ2MiLCJoYyIsImljIiwiamMiLCJrYyIsImxjIiwibWMiLCJkaXNwbGF5TmFtZSIsIm5jIiwiX2RlYnVnT3duZXIiLCJfZGVidWdTb3VyY2UiLCJmaWxlTmFtZSIsImxpbmVOdW1iZXIiLCJvYyIsInBjIiwicWMiLCJyYyIsImFjY2VwdHNCb29sZWFucyIsImF0dHJpYnV0ZU5hbWUiLCJhdHRyaWJ1dGVOYW1lc3BhY2UiLCJtdXN0VXNlUHJvcGVydHkiLCJwcm9wZXJ0eU5hbWUiLCJ2YyIsIndjIiwieGMiLCJ0YyIsImlzTmFOIiwidWMiLCJzYyIsInJlbW92ZUF0dHJpYnV0ZSIsInNldEF0dHJpYnV0ZU5TIiwieWMiLCJ6YyIsImRlZmF1bHRDaGVja2VkIiwiZGVmYXVsdFZhbHVlIiwiX3dyYXBwZXJTdGF0ZSIsImluaXRpYWxDaGVja2VkIiwiQWMiLCJpbml0aWFsVmFsdWUiLCJjb250cm9sbGVkIiwiQmMiLCJDYyIsIkRjIiwiRWMiLCJvd25lckRvY3VtZW50IiwiYWN0aXZlRWxlbWVudCIsInRhYkluZGV4IiwiRmMiLCJjaGFuZ2UiLCJHYyIsIkpjIiwiS2MiLCJMYyIsIk1jIiwiTmMiLCJPYyIsIlBjIiwiZGV0YWNoRXZlbnQiLCJRYyIsIlJjIiwiYXR0YWNoRXZlbnQiLCJTYyIsIlRjIiwiVWMiLCJWYyIsIl9pc0lucHV0RXZlbnRTdXBwb3J0ZWQiLCJXYyIsInZpZXciLCJYYyIsIkFsdCIsIkNvbnRyb2wiLCJNZXRhIiwiU2hpZnQiLCJZYyIsImdldE1vZGlmaWVyU3RhdGUiLCJaYyIsIiRjIiwiYWQiLCJiZCIsImNkIiwiZGQiLCJzY3JlZW5YIiwic2NyZWVuWSIsImNsaWVudFgiLCJjbGllbnRZIiwicGFnZVgiLCJwYWdlWSIsInNoaWZ0S2V5IiwiYnV0dG9uIiwiYnV0dG9ucyIsInJlbGF0ZWRUYXJnZXQiLCJmcm9tRWxlbWVudCIsInRvRWxlbWVudCIsIm1vdmVtZW50WCIsIm1vdmVtZW50WSIsImVkIiwicG9pbnRlcklkIiwicHJlc3N1cmUiLCJ0YW5nZW50aWFsUHJlc3N1cmUiLCJ0aWx0WCIsInRpbHRZIiwidHdpc3QiLCJwb2ludGVyVHlwZSIsImlzUHJpbWFyeSIsImZkIiwibW91c2VFbnRlciIsIm1vdXNlTGVhdmUiLCJwb2ludGVyRW50ZXIiLCJwb2ludGVyTGVhdmUiLCJnZCIsImRlZmF1bHRWaWV3IiwicGFyZW50V2luZG93IiwiYWx0ZXJuYXRlIiwiaGQiLCJqZCIsImtkIiwiZWZmZWN0VGFnIiwibGQiLCJuZCIsImNoaWxkIiwic2libGluZyIsIm1kIiwib2QiLCJhbmltYXRpb25OYW1lIiwiZWxhcHNlZFRpbWUiLCJwc2V1ZG9FbGVtZW50IiwicGQiLCJjbGlwYm9hcmREYXRhIiwicWQiLCJyZCIsImNoYXJDb2RlIiwic2QiLCJFc2MiLCJTcGFjZWJhciIsIkxlZnQiLCJVcCIsIlJpZ2h0IiwiRG93biIsIkRlbCIsIldpbiIsIk1lbnUiLCJBcHBzIiwiU2Nyb2xsIiwiTW96UHJpbnRhYmxlS2V5IiwidGQiLCI4IiwiOSIsIjEyIiwiMTMiLCIxNiIsIjE3IiwiMTgiLCIxOSIsIjIwIiwiMjciLCIzMiIsIjMzIiwiMzQiLCIzNSIsIjM2IiwiMzciLCIzOCIsIjM5IiwiNDAiLCI0NSIsIjQ2IiwiMTEyIiwiMTEzIiwiMTE0IiwiMTE1IiwiMTE2IiwiMTE3IiwiMTE4IiwiMTE5IiwiMTIwIiwiMTIxIiwiMTIyIiwiMTIzIiwiMTQ0IiwiMTQ1IiwiMjI0IiwidWQiLCJsb2NhdGlvbiIsInZkIiwiZGF0YVRyYW5zZmVyIiwid2QiLCJ0b3VjaGVzIiwidGFyZ2V0VG91Y2hlcyIsImNoYW5nZWRUb3VjaGVzIiwieGQiLCJ5ZCIsImRlbHRhWCIsIndoZWVsRGVsdGFYIiwiZGVsdGFZIiwid2hlZWxEZWx0YVkiLCJ3aGVlbERlbHRhIiwiZGVsdGFaIiwiZGVsdGFNb2RlIiwiemQiLCJBZCIsIkJkIiwiQ2QiLCJpc0ludGVyYWN0aXZlIiwiRGQiLCJpc0ludGVyYWN0aXZlVG9wTGV2ZWxFdmVudFR5cGUiLCJFZCIsIkZkIiwiR2QiLCJ0YXJnZXRJbnN0IiwiYW5jZXN0b3JzIiwiY29udGFpbmVySW5mbyIsInRvcExldmVsVHlwZSIsIkhkIiwiSWQiLCJKZCIsImFkZEV2ZW50TGlzdGVuZXIiLCJLZCIsIkxkIiwiTWQiLCJOZCIsIk9kIiwiUGQiLCJRZCIsImZpcnN0Q2hpbGQiLCJSZCIsIm5vZGUiLCJuZXh0U2libGluZyIsIlRkIiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJVZCIsImNvbnRlbnRFZGl0YWJsZSIsIlZkIiwiV2QiLCJzZWxlY3QiLCJYZCIsIllkIiwiWmQiLCIkZCIsImFlIiwic3RhcnQiLCJhbmNob3JOb2RlIiwiZ2V0U2VsZWN0aW9uIiwiYW5jaG9yT2Zmc2V0IiwiZm9jdXNOb2RlIiwiZm9jdXNPZmZzZXQiLCJiZSIsIm9uU2VsZWN0IiwiZWUiLCJkZSIsImZlIiwic2VsZWN0ZWQiLCJkZWZhdWx0U2VsZWN0ZWQiLCJnZSIsImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MIiwiaGUiLCJpZSIsImplIiwiU2ltcGxlRXZlbnRQbHVnaW4iLCJFbnRlckxlYXZlRXZlbnRQbHVnaW4iLCJDaGFuZ2VFdmVudFBsdWdpbiIsIlNlbGVjdEV2ZW50UGx1Z2luIiwiQmVmb3JlSW5wdXRFdmVudFBsdWdpbiIsImtlIiwiaHRtbCIsIm1hdGhtbCIsInN2ZyIsImxlIiwibWUiLCJuZSIsIm9lIiwibmFtZXNwYWNlVVJJIiwiaW5uZXJIVE1MIiwicmVtb3ZlQ2hpbGQiLCJhcHBlbmRDaGlsZCIsIk1TQXBwIiwiZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24iLCJwZSIsImxhc3RDaGlsZCIsIm5vZGVWYWx1ZSIsInFlIiwiYW5pbWF0aW9uSXRlcmF0aW9uQ291bnQiLCJib3JkZXJJbWFnZU91dHNldCIsImJvcmRlckltYWdlU2xpY2UiLCJib3JkZXJJbWFnZVdpZHRoIiwiYm94RmxleCIsImJveEZsZXhHcm91cCIsImJveE9yZGluYWxHcm91cCIsImNvbHVtbkNvdW50IiwiY29sdW1ucyIsImZsZXgiLCJmbGV4R3JvdyIsImZsZXhQb3NpdGl2ZSIsImZsZXhTaHJpbmsiLCJmbGV4TmVnYXRpdmUiLCJmbGV4T3JkZXIiLCJncmlkQXJlYSIsImdyaWRSb3ciLCJncmlkUm93RW5kIiwiZ3JpZFJvd1NwYW4iLCJncmlkUm93U3RhcnQiLCJncmlkQ29sdW1uIiwiZ3JpZENvbHVtbkVuZCIsImdyaWRDb2x1bW5TcGFuIiwiZ3JpZENvbHVtblN0YXJ0IiwiZm9udFdlaWdodCIsImxpbmVDbGFtcCIsImxpbmVIZWlnaHQiLCJvcGFjaXR5Iiwib3JkZXIiLCJvcnBoYW5zIiwidGFiU2l6ZSIsIndpZG93cyIsInpJbmRleCIsInpvb20iLCJmaWxsT3BhY2l0eSIsImZsb29kT3BhY2l0eSIsInN0b3BPcGFjaXR5Iiwic3Ryb2tlRGFzaGFycmF5Iiwic3Ryb2tlRGFzaG9mZnNldCIsInN0cm9rZU1pdGVybGltaXQiLCJzdHJva2VPcGFjaXR5Iiwic3Ryb2tlV2lkdGgiLCJzZSIsInRyaW0iLCJ0ZSIsInNldFByb3BlcnR5IiwiY2hhckF0IiwidWUiLCJtZW51aXRlbSIsImFyZWEiLCJiYXNlIiwiYnIiLCJjb2wiLCJlbWJlZCIsImhyIiwiaW1nIiwiaW5wdXQiLCJrZXlnZW4iLCJsaW5rIiwibWV0YSIsInBhcmFtIiwidHJhY2siLCJ3YnIiLCJ2ZSIsIndlIiwiaXMiLCJ4ZSIsImJsdXIiLCJ5ZSIsInplIiwiQWUiLCJCZSIsImF1dG9Gb2N1cyIsIkNlIiwiRGUiLCJzZXRUaW1lb3V0IiwiRWUiLCJjbGVhclRpbWVvdXQiLCJHZSIsIkhlIiwiU2V0IiwiSWUiLCJKZSIsIktlIiwiTGUiLCJNZSIsImNvbnRleHRUeXBlcyIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dCIsImNoaWxkQ29udGV4dFR5cGVzIiwiTmUiLCJPZSIsIlBlIiwiUWUiLCJnZXRDaGlsZENvbnRleHQiLCJSZSIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0IiwiU2UiLCJUZSIsIlVlIiwiVmUiLCJYZSIsImVsZW1lbnRUeXBlIiwicGVuZGluZ1Byb3BzIiwiZmlyc3RDb250ZXh0RGVwZW5kZW5jeSIsIm1lbW9pemVkU3RhdGUiLCJ1cGRhdGVRdWV1ZSIsIm1lbW9pemVkUHJvcHMiLCJsYXN0RWZmZWN0IiwiZmlyc3RFZmZlY3QiLCJuZXh0RWZmZWN0IiwiY2hpbGRFeHBpcmF0aW9uVGltZSIsImV4cGlyYXRpb25UaW1lIiwiWWUiLCIkZSIsImFmIiwiYmYiLCJjZiIsImRmIiwiZWYiLCJwZW5kaW5nQ2hpbGRyZW4iLCJpbXBsZW1lbnRhdGlvbiIsImZmIiwiZGlkRXJyb3IiLCJlYXJsaWVzdFBlbmRpbmdUaW1lIiwibGF0ZXN0UGVuZGluZ1RpbWUiLCJnZiIsImhmIiwibGF0ZXN0UGluZ2VkVGltZSIsImVhcmxpZXN0U3VzcGVuZGVkVGltZSIsImxhdGVzdFN1c3BlbmRlZFRpbWUiLCJqZiIsIm5leHRFeHBpcmF0aW9uVGltZVRvV29ya09uIiwia2YiLCJsZiIsImJhc2VTdGF0ZSIsImZpcnN0VXBkYXRlIiwibGFzdFVwZGF0ZSIsImZpcnN0Q2FwdHVyZWRVcGRhdGUiLCJsYXN0Q2FwdHVyZWRVcGRhdGUiLCJmaXJzdENhcHR1cmVkRWZmZWN0IiwibGFzdENhcHR1cmVkRWZmZWN0IiwibWYiLCJuZiIsInBheWxvYWQiLCJjYWxsYmFjayIsIm9mIiwicGYiLCJxZiIsInJmIiwic2YiLCJ0ZiIsInVmIiwidmYiLCJ3ZiIsInN0YWNrIiwieGYiLCJ5ZiIsInpmIiwiQWYiLCJCZiIsIkNmIiwiRGYiLCJFZiIsIm9ic2VydmVkQml0cyIsIkZmIiwiR2YiLCJIZiIsIklmIiwiSmYiLCJkb2N1bWVudEVsZW1lbnQiLCJ0YWdOYW1lIiwiS2YiLCJMZiIsIk1mIiwiT2YiLCJQZiIsIlFmIiwiVmYiLCJfcmVhY3RJbnRlcm5hbEZpYmVyIiwiUmYiLCJTZiIsIlRmIiwiVWYiLCJXZiIsInNob3VsZENvbXBvbmVudFVwZGF0ZSIsIlhmIiwiY29udGV4dFR5cGUiLCJyZWFkQ29udGV4dCIsInN0YXRlIiwiWmYiLCJjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCIkZiIsImdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyIsImdldFNuYXBzaG90QmVmb3JlVXBkYXRlIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCIsImNvbXBvbmVudFdpbGxNb3VudCIsImNvbXBvbmVudERpZE1vdW50IiwiYWciLCJiZyIsIl9zdHJpbmdSZWYiLCJjZyIsImRnIiwiTWFwIiwiZGVsZXRlIiwiZWciLCJmZyIsImdnIiwiaGciLCJpZyIsImpnIiwia2ciLCJsZyIsIm1nIiwibmciLCJvZyIsInBnIiwicWciLCJyZyIsInNnIiwidGciLCJ1ZyIsInZnIiwid2ciLCJVTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSIsImNvbXBvbmVudFdpbGxVcGRhdGUiLCJjb21wb25lbnREaWRVcGRhdGUiLCJ4ZyIsImdldERlcml2ZWRTdGF0ZUZyb21FcnJvciIsInlnIiwicGVuZGluZ0NvbnRleHQiLCJ6ZyIsInRpbWVkT3V0QXQiLCJmYWxsYmFjayIsIkFnIiwiTmYiLCJaZSIsImVsZW1lbnQiLCJoeWRyYXRlIiwiaGlkZGVuIiwidW5zdGFibGVfb2JzZXJ2ZWRCaXRzIiwiQmciLCJDZyIsIkdnIiwiSGciLCJJZyIsIm9uY2xpY2siLCJKZyIsIldlYWtTZXQiLCJLZyIsIkxnIiwiTWciLCJPZyIsImRlc3Ryb3kiLCJjb21wb25lbnRXaWxsVW5tb3VudCIsIlBnIiwiUWciLCJSZyIsImluc2VydEJlZm9yZSIsIl9yZWFjdFJvb3RDb250YWluZXIiLCJTZyIsIndhc011bHRpcGxlIiwibXVsdGlwbGUiLCJGZSIsImRpc3BsYXkiLCJOZyIsInRoIiwic2giLCJoYXMiLCJhZGQiLCJVZyIsIldlYWtNYXAiLCJWZyIsIldnIiwiWGciLCJjb21wb25lbnREaWRDYXRjaCIsIllnIiwiY29tcG9uZW50U3RhY2siLCJaZyIsIiRnIiwiYWgiLCJiaCIsImNoIiwiZGgiLCJlaCIsImZoIiwiZ2giLCJoaCIsImloIiwiamgiLCJ1bnN0YWJsZV9jYW5jZWxDYWxsYmFjayIsImtoIiwiY3JlYXRlRWxlbWVudE5TIiwiY3JlYXRlVGV4dE5vZGUiLCJsaCIsIm1oIiwicGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lIiwibmgiLCJtYXhEdXJhdGlvbiIsInBpbmdDYWNoZSIsIm9oIiwiZmluaXNoZWRXb3JrIiwicGgiLCJxaCIsInJoIiwidWgiLCJ2aCIsIndoIiwieGgiLCJ5aCIsInpoIiwiQWgiLCJCaCIsIkNoIiwiRGgiLCJFaCIsIkZoIiwidW5zdGFibGVfbm93IiwiR2giLCJIaCIsIkloIiwiSmgiLCJLaCIsInVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2siLCJMaCIsInRpbWVvdXQiLCJ0aW1lb3V0SGFuZGxlIiwiTmgiLCJPaCIsIm5leHRTY2hlZHVsZWRSb290IiwiUGgiLCJRaCIsIlJoIiwidW5zdGFibGVfc2hvdWxkWWllbGQiLCJfb25Db21wbGV0ZSIsIlNoIiwiZmlyc3RCYXRjaCIsIl9leHBpcmF0aW9uVGltZSIsIl9kZWZlciIsInJhbmdlQ291bnQiLCJkYiIsImZvY3VzZWRFbGVtIiwic2VsZWN0aW9uUmFuZ2UiLCJZZiIsIlZoIiwiX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGUiLCJTZCIsImNvbnRhaW5zIiwiY29tcGFyZURvY3VtZW50UG9zaXRpb24iLCJtaW4iLCJjcmVhdGVSYW5nZSIsInNldFN0YXJ0IiwicmVtb3ZlQWxsUmFuZ2VzIiwiYWRkUmFuZ2UiLCJzZXRFbmQiLCJsZWZ0Iiwic2Nyb2xsTGVmdCIsInRvcCIsInNjcm9sbFRvcCIsIkZiIiwiR2IiLCJIYyIsImlpIiwiRGciLCJFZyIsImppIiwiSWMiLCJGZyIsImNlIiwiVGgiLCJVaCIsIldoIiwiWGgiLCJZaCIsIlpoIiwiYWkiLCJfcm9vdCIsIl9jYWxsYmFja3MiLCJfbmV4dCIsIl9oYXNDaGlsZHJlbiIsIl9kaWRDb21wbGV0ZSIsIl9jaGlsZHJlbiIsImJpIiwiX2RpZENvbW1pdCIsIl9vbkNvbW1pdCIsImNpIiwiX2ludGVybmFsUm9vdCIsImRpIiwiZmkiLCJsZWdhY3lfcmVuZGVyU3VidHJlZUludG9Db250YWluZXIiLCJoYXNBdHRyaWJ1dGUiLCJlaSIsImdpIiwiJGgiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZm9ybSIsImNvbW1pdCIsInVubW91bnQiLCJjcmVhdGVCYXRjaCIsImtpIiwiY3JlYXRlUG9ydGFsIiwiZmluZERPTU5vZGUiLCJ1bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lciIsInVubW91bnRDb21wb25lbnRBdE5vZGUiLCJ1bnN0YWJsZV9jcmVhdGVQb3J0YWwiLCJ1bnN0YWJsZV9iYXRjaGVkVXBkYXRlcyIsInVuc3RhYmxlX2ludGVyYWN0aXZlVXBkYXRlcyIsImZsdXNoU3luYyIsInVuc3RhYmxlX2NyZWF0ZVJvb3QiLCJ1bnN0YWJsZV9mbHVzaENvbnRyb2xsZWQiLCJFdmVudHMiLCJmaW5kRmliZXJCeUhvc3RJbnN0YW5jZSIsImlzRGlzYWJsZWQiLCJzdXBwb3J0c0ZpYmVyIiwiaW5qZWN0Iiwib25Db21taXRGaWJlclJvb3QiLCJvbkNvbW1pdEZpYmVyVW5tb3VudCIsIldlIiwib3ZlcnJpZGVQcm9wcyIsImZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyIiwiYnVuZGxlVHlwZSIsInJlbmRlcmVyUGFja2FnZU5hbWUiLCJsaSIsIm1pIiwiZ2xvYmFsIiwicHJldmlvdXMiLCJwcmlvcml0eUxldmVsIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwiY2FuY2VsQW5pbWF0aW9uRnJhbWUiLCJwZXJmb3JtYW5jZSIsIl9zY2hlZE1vY2siLCJNZXNzYWdlQ2hhbm5lbCIsInBvcnQyIiwicG9ydDEiLCJvbm1lc3NhZ2UiLCJwb3N0TWVzc2FnZSIsInVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5IiwidW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHkiLCJ1bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSIsInVuc3RhYmxlX0lkbGVQcmlvcml0eSIsInVuc3RhYmxlX0xvd1ByaW9yaXR5IiwidW5zdGFibGVfcnVuV2l0aFByaW9yaXR5IiwidW5zdGFibGVfd3JhcENhbGxiYWNrIiwidW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWwiLCJ1bnN0YWJsZV9jb250aW51ZUV4ZWN1dGlvbiIsInVuc3RhYmxlX3BhdXNlRXhlY3V0aW9uIiwidW5zdGFibGVfZ2V0Rmlyc3RDYWxsYmFja05vZGUiLCJGdW5jdGlvbiIsIlJlYWN0UHJvcFR5cGVzU2VjcmV0IiwiZW1wdHlGdW5jdGlvbiIsInNoaW0iLCJwcm9wTmFtZSIsImNvbXBvbmVudE5hbWUiLCJwcm9wRnVsbE5hbWUiLCJzZWNyZXQiLCJnZXRTaGltIiwiaXNSZXF1aXJlZCIsIlJlYWN0UHJvcFR5cGVzIiwiYXJyYXkiLCJib29sIiwic3ltYm9sIiwiYW55IiwiYXJyYXlPZiIsImluc3RhbmNlT2YiLCJvYmplY3RPZiIsIm9uZU9mIiwib25lT2ZUeXBlIiwic2hhcGUiLCJleGFjdCIsImNoZWNrUHJvcFR5cGVzIiwiUHJvcFR5cGVzIiwiYXJyIiwiaXNBYnNvbHV0ZSIsInBhdGhuYW1lIiwic3BsaWNlT25lIiwibGlzdCIsInJlc29sdmVfcGF0aG5hbWUiLCJ0b1BhcnRzIiwiZnJvbVBhcnRzIiwiaXNUb0FicyIsImlzRnJvbUFicyIsIm11c3RFbmRBYnMiLCJoYXNUcmFpbGluZ1NsYXNoIiwibGFzdCIsInVwIiwicGFydCIsInVuc2hpZnQiLCJhZGRMZWFkaW5nU2xhc2giLCJoYXNCYXNlbmFtZSIsInN0cmlwQmFzZW5hbWUiLCJzdHJpcFRyYWlsaW5nU2xhc2giLCJjcmVhdGVQYXRoIiwiaGFzaCIsIl9leHRlbmRzIiwiTG9jYXRpb25VdGlsc19jcmVhdGVMb2NhdGlvbiIsImN1cnJlbnRMb2NhdGlvbiIsImhhc2hJbmRleCIsInNlYXJjaEluZGV4IiwicGFyc2VQYXRoIiwiZGVjb2RlVVJJIiwiVVJJRXJyb3IiLCJlc19jcmVhdGVUcmFuc2l0aW9uTWFuYWdlciIsInByb21wdCIsImxpc3RlbmVycyIsInNldFByb21wdCIsIm5leHRQcm9tcHQiLCJicm93c2VyX2RlZmF1bHQiLCJjb25maXJtVHJhbnNpdGlvblRvIiwiYWN0aW9uIiwiZ2V0VXNlckNvbmZpcm1hdGlvbiIsImFwcGVuZExpc3RlbmVyIiwiZm4iLCJpc0FjdGl2ZSIsImxpc3RlbmVyIiwiZmlsdGVyIiwibm90aWZ5TGlzdGVuZXJzIiwiX2xlbiIsIl9rZXkiLCJjYW5Vc2VET00iLCJldmVudCIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJnZXRDb25maXJtYXRpb24iLCJtZXNzYWdlIiwiY29uZmlybSIsImNyZWF0ZUJyb3dzZXJIaXN0b3J5X3R5cGVvZiIsImNyZWF0ZUJyb3dzZXJIaXN0b3J5X2V4dGVuZHMiLCJnZXRIaXN0b3J5U3RhdGUiLCJoaXN0b3J5IiwiZXNfY3JlYXRlQnJvd3Nlckhpc3RvcnkiLCJpbnZhcmlhbnRfYnJvd3Nlcl9kZWZhdWx0IiwiZ2xvYmFsSGlzdG9yeSIsImNhblVzZUhpc3RvcnkiLCJuYXZpZ2F0b3IiLCJ1c2VyQWdlbnQiLCJuZWVkc0hhc2hDaGFuZ2VMaXN0ZW5lciIsIl9wcm9wcyRmb3JjZVJlZnJlc2giLCJmb3JjZVJlZnJlc2giLCJfcHJvcHMkZ2V0VXNlckNvbmZpcm0iLCJfcHJvcHMka2V5TGVuZ3RoIiwia2V5TGVuZ3RoIiwiYmFzZW5hbWUiLCJnZXRET01Mb2NhdGlvbiIsImhpc3RvcnlTdGF0ZSIsIl9yZWYiLCJfd2luZG93JGxvY2F0aW9uIiwiY3JlYXRlS2V5IiwidHJhbnNpdGlvbk1hbmFnZXIiLCJuZXh0U3RhdGUiLCJoYW5kbGVQb3BTdGF0ZSIsImlzRXh0cmFuZW91c1BvcHN0YXRlRXZlbnQiLCJoYW5kbGVQb3AiLCJoYW5kbGVIYXNoQ2hhbmdlIiwiZm9yY2VOZXh0UG9wIiwib2siLCJyZXZlcnRQb3AiLCJmcm9tTG9jYXRpb24iLCJ0b0xvY2F0aW9uIiwidG9JbmRleCIsImFsbEtleXMiLCJmcm9tSW5kZXgiLCJkZWx0YSIsImdvIiwiaW5pdGlhbExvY2F0aW9uIiwiY3JlYXRlSHJlZiIsImxpc3RlbmVyQ291bnQiLCJjaGVja0RPTUxpc3RlbmVycyIsImlzQmxvY2tlZCIsInB1c2hTdGF0ZSIsInByZXZJbmRleCIsIm5leHRLZXlzIiwicmVwbGFjZVN0YXRlIiwiZ29CYWNrIiwiZ29Gb3J3YXJkIiwiYmxvY2siLCJ1bmJsb2NrIiwibGlzdGVuIiwidW5saXN0ZW4iLCJSb3V0ZXJfZXh0ZW5kcyIsIl9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwic2VsZiIsIlJlZmVyZW5jZUVycm9yIiwiUm91dGVyX1JvdXRlciIsIl9SZWFjdCRDb21wb25lbnQiLCJSb3V0ZXIiLCJfdGVtcCIsIl90aGlzIiwiaW5zdGFuY2UiLCJDb25zdHJ1Y3RvciIsIl9jbGFzc0NhbGxDaGVjayIsImNvbXB1dGVNYXRjaCIsInN1YkNsYXNzIiwic3VwZXJDbGFzcyIsIndyaXRhYmxlIiwic2V0UHJvdG90eXBlT2YiLCJfX3Byb3RvX18iLCJfaW5oZXJpdHMiLCJyb3V0ZXIiLCJwYXJhbXMiLCJpc0V4YWN0IiwiX3RoaXMyIiwiX3Byb3BzIiwicmVhY3RfZGVmYXVsdCIsIm5leHRQcm9wcyIsIndhcm5pbmdfZGVmYXVsdCIsInByb3BUeXBlcyIsInByb3BfdHlwZXNfZGVmYXVsdCIsInJlYWN0X3JvdXRlcl9kb21fZXNfUm91dGVyIiwiQnJvd3NlclJvdXRlcl9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwiQnJvd3NlclJvdXRlcl9Ccm93c2VyUm91dGVyIiwiQnJvd3NlclJvdXRlciIsIkJyb3dzZXJSb3V0ZXJfY2xhc3NDYWxsQ2hlY2siLCJCcm93c2VyUm91dGVyX2luaGVyaXRzIiwiZXNfQnJvd3NlclJvdXRlciIsInBhdHRlcm5DYWNoZSIsImNhY2hlQ291bnQiLCJlc19tYXRjaFBhdGgiLCJwYXJlbnQiLCJfb3B0aW9ucyIsIl9vcHRpb25zJGV4YWN0IiwiX29wdGlvbnMkc3RyaWN0IiwiX29wdGlvbnMkc2Vuc2l0aXZlIiwiX2NvbXBpbGVQYXRoIiwiY2FjaGVLZXkiLCJjYWNoZSIsImNvbXBpbGVkUGF0dGVybiIsInBhdGhfdG9fcmVnZXhwX2RlZmF1bHQiLCJtYXRjaFBhdGhfY29tcGlsZVBhdGgiLCJ2YWx1ZXMiLCJyZWR1Y2UiLCJTd2l0Y2hfU3dpdGNoIiwiU3dpdGNoIiwiU3dpdGNoX2NsYXNzQ2FsbENoZWNrIiwiU3dpdGNoX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iLCJTd2l0Y2hfaW5oZXJpdHMiLCJfZWxlbWVudCRwcm9wcyIsInBhdGhQcm9wIiwiY29tcHV0ZWRNYXRjaCIsInJlYWN0X3JvdXRlcl9kb21fZXNfU3dpdGNoIiwiUm91dGVfZXh0ZW5kcyIsIlJvdXRlX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iLCJSb3V0ZV9pc0VtcHR5Q2hpbGRyZW4iLCJSb3V0ZV9Sb3V0ZSIsIlJvdXRlIiwiUm91dGVfY2xhc3NDYWxsQ2hlY2siLCJSb3V0ZV9pbmhlcml0cyIsImNvbXBvbmVudCIsIm5leHRDb250ZXh0IiwiX2NvbnRleHQkcm91dGVyIiwic3RhdGljQ29udGV4dCIsInJlYWN0X3JvdXRlcl9kb21fZXNfUm91dGUiLCJTZWFyY2hJdGVtIiwic3RhbmRhcmRfaGVhZGVyX2NsYXNzQ2FsbENoZWNrIiwic3RhbmRhcmRfaGVhZGVyX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iLCJzdGFuZGFyZF9oZWFkZXJfZ2V0UHJvdG90eXBlT2YiLCJpdGVtX2xpc3QiLCJ0YWJpbmRleCIsIlNlYXJjaExpc3QiLCJzZWFyY2hfbGlzdCIsInNlYXJjaF9yZXN1bHRzIiwidXNlcl9kaXNwbGF5IiwidXNlcl91cmwiLCJhcnRpc3RfZGlzcGxheSIsImFydGlzdF91cmwiLCJzb25nX2Rpc3BsYXkiLCJzb25nX3VybCIsImFsYnVtX2Rpc3BsYXkiLCJhbGJ1bV91cmwiLCJTb3J0U2VhcmNoIiwiY2xlYXJJdGVtcyIsInJlbmRlckl0ZW0iLCJvbkNoYW5nZSIsImhhbmRsZUNoYW5nZSIsInBsYWNlaG9sZGVyIiwiU3RhbmRhcmRIZWFkZXIiLCJfdGhpczMiLCJkcm9wZG93blJlZiIsIm5vdGlmaWNhdGlvbnNSZWYiLCJkcm9wZG93bl9jb250ZW50Iiwib3B0aW9uc1JlZiIsIm5vdGlmaWNhdGlvbl9kaXYiLCJkcm9wZG93bl9kaXYiLCJsb2dpbl9kaXYiLCJyZWxvYWQiLCJjbG9zZU5vdGlmaWNhdGlvbnMiLCJzaG93Tm90aWZpY2F0aW9ucyIsIm5vdGlmaWNhdGlvbnMiLCJjb21tZW50X3RleHQiLCJudW1fY29tbWVudHMiLCJsaWtlc190ZXh0IiwibnVtX2xpa2VzIiwibm90aWZpY2F0aW9uX3RleHQiLCJub3RpZmljYXRpb25fdXJsIiwicG9zdF9pZCIsInRhZ2dlciIsImJhY2tncm91bmQiLCJib3JkZXIiLCJiYWNrZ3JvdW5kQ29sb3IiLCJ0ZXh0RGVjb3JhdGlvbiIsImZvbnRGYW1pbHkiLCJyaWdodCIsInBvc2l0aW9uIiwiYm9yZGVyUmFkaXVzIiwicmVtb3ZlTm90aWZpY2F0aW9uIiwidG9nZ2xlTm90aWZpY2F0aW9ucyIsIm1hcmdpblJpZ2h0IiwiZm9udFNpemUiLCJ0ZXh0QWxpZ24iLCJqdXN0aWZ5Q29udGVudCIsImFsaWduSXRlbXMiLCJoYW5kbGVDbGlja091dHNpZGUiLCJtaW5XaWR0aCIsIm1pbkhlaWdodCIsInVzZXJfbG9naW4iLCJfdGhpczQiLCJyZWwiLCJwYWRkaW5nIiwidG9nZ2xlT3B0aW9ucyIsInZpZXdCb3giLCJmaWxsIiwieG1sbnMiLCJzdHJva2UiLCJsb2dvdXRDbGlja2VkIiwiUG9zdCIsInBvc3RfY2xhc3NDYWxsQ2hlY2siLCJwb3N0X3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iLCJwb3N0X2dldFByb3RvdHlwZU9mIiwibGlrZXNfc2NvcmUiLCJsaWtlcyIsImRpc2xpa2VzIiwidXBfY29sb3IiLCJkb3duX2NvbG9yIiwiZWxsaXBzaXMiLCJidW1wX2J1dHRvbiIsImJ1bXBDbGlja2VkIiwicG9zdF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQiLCJidW1wIiwicG9zdF91cmwiLCJ1c2VyIiwidGl0bGUiLCJsaWtlX3N0YXRlIiwiYWxlcnQiLCJvZmZzZXRIZWlnaHQiLCJjb250ZW50X3VybCIsInN1Y2Nlc3MiLCJ0aW1lc3RhbXAiLCJwb3N0X3RpdGxlIiwicG9zdGVyX3VzZXJuYW1lIiwicG9zdGVyX3VzZXJuYW1lX3VybCIsImFydGlzdF9uYW1lcyIsInRhZ191dGlscyIsImxpa2Vfc3R5bGUiLCJkaXNsaWtlX3N0eWxlIiwibGlrZVJlZiIsImxpa2VDbGlja2VkIiwiZGlzbGlrZVJlZiIsImRpc2xpa2VDbGlja2VkIiwiY29udGVudF9zZWN0aW9uIiwibWF4SGVpZ2h0IiwicGFkZGluZ1RvcCIsIm92ZXJmbG93IiwidGV4dE92ZXJmbG93IiwibWFyZ2luQm90dG9tIiwiZmxleERpcmVjdGlvbiIsInBhZGRpbmdMZWZ0IiwiYm9yZGVyUmlnaHQiLCJib3JkZXJUb3BSaWdodFJhZGl1cyIsImJvcmRlckJvdHRvbVJpZ2h0UmFkaXVzIiwidXNlcl9wcm9maWxlIiwicGFkZGluZ1JpZ2h0IiwiZ2V0TW9udGgiLCJnZXREYXRlIiwiZ2V0RnVsbFllYXIiLCJlbWJlZGRlZF9jb250ZW50IiwidmVydGljYWxBbGlnbiIsInNyYyIsImFsdCIsIm1ha2VQb3N0IiwiYWxsX251bV9jb21tZW50cyIsImFsbF9udW1fcG9zdHMiLCJidW1wcyIsInVzZXJfcHJvZmlsZXMiLCJjdXJyZW50X251bV9jb21tZW50cyIsImxpa2UiLCJudW1fcG9zdHMiLCJwb3N0X2J1bXBlZCIsInBvc3RfUG9zdCIsIlBvc3RJbmZvIiwicG9zdHMiLCJwb3N0IiwiTmV3UG9zdFN1Ym1pc3Npb24iLCJmZWVkX2NsYXNzQ2FsbENoZWNrIiwiZmVlZF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwiZmVlZF9nZXRQcm90b3R5cGVPZiIsImVtYmVkTGluayIsImN1cnJlbnRBcnRpc3QiLCJzdWJtaXNzaW9uTGlrZVN0YXRlIiwibG9nIiwicG90ZW50aWFsVGFncyIsInRhZ19kaXNwbGF5IiwiYm9yZGVyQm90dG9tIiwicGFkZGluZ0JvdHRvbSIsInNvbmdJbnB1dCIsImF1dG9Db21wbGV0ZSIsIm9uVGl0bGVDaGFuZ2UiLCJjb250ZW50SW5wdXQiLCJyZXNpemUiLCJzdWJtaXRQb3N0IiwibWFyZ2luTGVmdCIsIm92ZXJmbG93WSIsIlRyZW5kaW5nIiwiZ2xvYmFsX3Bvc3RfaW5kZXgiLCJnbG9iYWxfcG9zdHMiLCJ0cmVuZGluZ19wb3N0cyIsInJlbGF0ZWRfbGlua3MiLCJ0cmVuZGluZ19yZWZzIiwidHJlbmRpbmdfcmVmIiwibmV3X29mZnNldCIsImdsb2JhbF9vZmZzZXQiLCJ0cmVuZGluZ19yZWYxIiwid2hpdGVTcGFjZSIsIm1hcmdpbiIsImxlZnRDbGljayIsInJpZ2h0Q2xpY2siLCJGZWVkIiwibG9hZGluZ19wb3N0c19zZW1hcGhvciIsIm5vbl9wcmlvcml0eV9vZmZzZXQiLCJub25fcHJpb3JpdHlfZ2xvYmFsX29mZnNldCIsImlubmVySGVpZ2h0Iiwic2Nyb2xsWSIsIm5ld1Bvc3RzIiwiaGFuZGxlU2Nyb2xsIiwidXBkYXRlT2Zmc2V0cyIsInN0YXJ0aW5nUG9zdHMiLCJvZmZzZXRfdHlwZSIsIl9pdGVyYXRvck5vcm1hbENvbXBsZXRpb241IiwiX2RpZEl0ZXJhdG9yRXJyb3I1IiwiX2l0ZXJhdG9yRXJyb3I1IiwiX3N0ZXA1IiwiX2l0ZXJhdG9yNSIsIm1hcmdpblRvcCIsImZlZWRfTmV3UG9zdFN1Ym1pc3Npb24iLCJwb3N0X1Bvc3RJbmZvIiwiZmVlZF9UcmVuZGluZyIsImdsb2JhbF9zb25ncyIsIkNvbnRhY3QiLCJDb250YWN0X2NsYXNzQ2FsbENoZWNrIiwiQ29udGFjdF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwiQ29udGFjdF9nZXRQcm90b3R5cGVPZiIsIkFib3V0IiwiYWJvdXRfY2xhc3NDYWxsQ2hlY2siLCJhYm91dF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwiYWJvdXRfZ2V0UHJvdG90eXBlT2YiLCJQcm9maWxlQ29sb3IiLCJ1c2VyX2NsYXNzQ2FsbENoZWNrIiwidXNlcl9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwidXNlcl9nZXRQcm90b3R5cGVPZiIsImNvbG9ycyIsImFjdGl2ZSIsImNvbG9yX2RpdnMiLCJzZXRjb2xvciIsIlVzZXJJbmZvIiwiZGVzY3JpcHRpb24iLCJkZXNjcmlwdGlvbl91aSIsImVkaXREZXNjcmlwdGlvbiIsInVzZXJfYXNzZXJ0VGhpc0luaXRpYWxpemVkIiwiZGVzY3JpcHRpb25fdGV4dCIsImJ1bXBzX3VpIiwiYnV0dG9uX3RleHQiLCJmb2xsb3dzIiwidXNlcl9pZCIsImZvbGxvd2luZ191aSIsImZvbGxvd2luZ19zdGF0ZSIsImNoYW5nZV9jb2xvciIsInN1Ym1pdERlc2NyaXB0aW9uIiwiYm90dG9tIiwiY2xvc2VEZXNjcmlwdGlvbiIsInByb2ZpbGVfcGljdHVyZSIsImNoYW5nZV9jb2xvcl9kaXNwbGF5IiwibWF4V2lkdGgiLCJjaGFuZ2VDb2xvckNsaWNrZWQiLCJmb2xsb3dlZXMiLCJ1cHZvdGVzIiwiZG93bnZvdGVzIiwidXNlcl9Qcm9maWxlQ29sb3IiLCJ1c2VyX2NvbG9yIiwic2V0Q29sb3IiLCJVc2VyUGFnZSIsIl90aGlzNSIsInBvc3RzUmVmIiwiX1JlYWN0JGNyZWF0ZUVsZW1lbnQiLCJ1c2VyX1VzZXJJbmZvIiwidXNlcl9kZWZpbmVQcm9wZXJ0eSIsImdlbmVyYXRlQ29tbWVudHMiLCJjb21tZW50cyIsImNvbW1lbnRfdm90ZXMiLCJzdGFydGluZ19jb21tZW50X2xldmVsIiwicG9zdF9kYXRhIiwiaXNfZ2xvYmFsIiwibGV2ZWxzIiwibGV2ZWxfemVyb19jb21tZW50cyIsImNvbW1lbnQiLCJjb21tZW50X2xldmVsIiwiY3VycmVudF9sZXZlbHNfbGVuZ3RoIiwiY29tbWVudF9tYXAiLCJjdXJyZW50X2NvbW1lbnRzIiwibGV2ZWwiLCJvcmlnaW5hbF9yZXBsaWVzIiwicmVwbGllcyIsImNvbW1lbnRfaWQiLCJjb21tZW50X3ZvdGUiLCJ2b3RlIiwiY29tbWVudHNfQ29tbWVudCIsImNoaWxkX2NvbW1lbnRzIiwidm90ZV9zdGF0ZSIsIl9pIiwicGFyZW50X2lkIiwicGFyZW50X2NvbW1lbnRfaWQiLCJDb21tZW50IiwiY29tbWVudHNfY2xhc3NDYWxsQ2hlY2siLCJjb21tZW50c19wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwiY29tbWVudHNfZ2V0UHJvdG90eXBlT2YiLCJyZXBsaWVzX2J1dHRvbiIsImxlZnRfb2Zmc2V0Iiwic2hvd1JlcGxpZXMiLCJjb21tZW50c19hc3NlcnRUaGlzSW5pdGlhbGl6ZWQiLCJ1cHZvdGVSZWYiLCJkb3dudm90ZVJlZiIsInNjb3JlUmVmIiwidm90ZXNfc2NvcmUiLCJuZXdfY29tbWVudCIsInVwX2ltYWdlIiwiZG93bl9pbWFnZSIsInJvd3MiLCJjb2xzIiwic3VibWl0TmV3Q29tbWVudCIsImNsb3NlTmV3Q29tbWVudCIsInN1Ym1pdF90ZXh0IiwicG9zdF91c2VybmFtZSIsIm5ld19jb21tZW50X2RhdGEiLCJnbG9iYWxfcG9zdCIsIl9pdGVyYXRvck5vcm1hbENvbXBsZXRpb242IiwiX2RpZEl0ZXJhdG9yRXJyb3I2IiwiX2l0ZXJhdG9yRXJyb3I2IiwiX3N0ZXA2IiwiX2l0ZXJhdG9yNiIsImxlZnRfc3BhY2VzIiwiYm9yZGVyTGVmdCIsIm1pbnV0ZXMiLCJnZXRNaW51dGVzIiwiY29tbWVudF9kaXYiLCJkYXRlX3RleHQiLCJnZXRIb3VycyIsInVwdm90ZV9jb2xvciIsImRvd252b3RlX2NvbG9yIiwidXB2b3RlQ2xpY2tlZCIsImRvd252b3RlQ2xpY2tlZCIsIm9wZW5OZXdDb21tZW50IiwidGVzdF90ZXh0IiwiQ29tbWVudFNlY3Rpb24iLCJsb2FkaW5nX2NvbW1lbnRzX3NlbWFwaG9yIiwidXNlcl9wb3N0cyIsInBvc3RfYW5kX2NvbW1lbnRzIiwiX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjciLCJfZGlkSXRlcmF0b3JFcnJvcjciLCJfaXRlcmF0b3JFcnJvcjciLCJfc3RlcDciLCJfaXRlcmF0b3I3IiwiY29tbWVudF9yZXN1bHQiLCJoYW5kbGVTY3JvbGxHbG9iYWwiLCJnZXRDb21tZW50cyIsIm1ha2VQb3N0cyIsIl9pdGVyYXRvck5vcm1hbENvbXBsZXRpb244IiwiX2RpZEl0ZXJhdG9yRXJyb3I4IiwiX2l0ZXJhdG9yRXJyb3I4IiwiX3N0ZXA4IiwiX2l0ZXJhdG9yOCIsIl9pdGVyYXRvck5vcm1hbENvbXBsZXRpb245IiwiX2RpZEl0ZXJhdG9yRXJyb3I5IiwiX2l0ZXJhdG9yRXJyb3I5IiwiX3N0ZXA5IiwiX2l0ZXJhdG9yOSIsIm5ld19jb21tZW50cyIsIl9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24xMCIsIl9kaWRJdGVyYXRvckVycm9yMTAiLCJfaXRlcmF0b3JFcnJvcjEwIiwiX3N0ZXAxMCIsIl9pdGVyYXRvcjEwIiwicG9zdHNfYW5kX2NvbW1lbnRzIiwiX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjExIiwiX2RpZEl0ZXJhdG9yRXJyb3IxMSIsIl9pdGVyYXRvckVycm9yMTEiLCJfc3RlcDExIiwiX2l0ZXJhdG9yMTEiLCJjbGFzcyIsIm5ld19jb21tZW50X2J1dHRvbiIsIlVzZXJQb3N0Q29udGVudCIsInVzZXJfcG9zdF9jbGFzc0NhbGxDaGVjayIsInVzZXJfcG9zdF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwidXNlcl9wb3N0X2dldFByb3RvdHlwZU9mIiwiZWRpdF9jb250ZW50IiwiZWRpdENvbnRlbnQiLCJ1c2VyX3Bvc3RfYXNzZXJ0VGhpc0luaXRpYWxpemVkIiwidGFnc190ZW1wIiwidGFnX2tleXMiLCJwb3N0UmVmIiwicG9zdF9oZWlnaHQiLCJzdWJtaXRFZGl0Q29tbWVudCIsImNsb3NlRWRpdENvbW1lbnQiLCJwb3N0ZXIiLCJjbGllbnRIZWlnaHQiLCJjb250ZW50X25hbWUiLCJjb250ZW50X2xpbmsiLCJmbG9hdCIsIlVzZXJQb3N0IiwidXNlcl9wb3N0X1VzZXJQb3N0Q29udGVudCIsInVzZXJfcG9zdCIsImNvbW1lbnRzX0NvbW1lbnRTZWN0aW9uIiwiTWluaVBvc3QiLCJnbG9iYWxfcG9zdF9jbGFzc0NhbGxDaGVjayIsImdsb2JhbF9wb3N0X3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iLCJnbG9iYWxfcG9zdF9nZXRQcm90b3R5cGVPZiIsIkdsb2JhbEluZm8iLCJjdXJyZW50X3Bvc3RzIiwiZ2xvYmFsX3Bvc3RfTWluaVBvc3QiLCJHbG9iYWxQb3N0IiwiYWxidW1fZGl2IiwiZ2xvYmFsX3Bvc3RfR2xvYmFsSW5mbyIsIkFsYnVtRGlzcGxheSIsImFydGlzdF9jbGFzc0NhbGxDaGVjayIsImFydGlzdF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwiYXJ0aXN0X2dldFByb3RvdHlwZU9mIiwiYWxidW1fY291bnQiLCJnZW5lcmF0ZUFsYnVtcyIsIlNvbmdEaXNwbGF5Iiwic29uZ19jb3VudCIsImdlbmVyYXRlU29uZ3MiLCJBcnRpc3RQaWN0dXJlIiwicGljdHVyZSIsIkFydGlzdFBvc3QiLCJhcnRpc3RfQXJ0aXN0UGljdHVyZSIsIm51bV91c2VyX3Bvc3RzIiwiYXJ0aXN0X0FsYnVtRGlzcGxheSIsImFsYnVtX2RhdGEiLCJhcnRpc3RfU29uZ0Rpc3BsYXkiLCJzb25nX2RhdGEiLCJBcnRpc3RQYWdlIiwiYXJ0aXN0X0FydGlzdFBvc3QiLCJBcnRpc3RTb25nc1BhZ2UiLCJhcnRpc3Rfc29uZ3NfY2xhc3NDYWxsQ2hlY2siLCJhcnRpc3Rfc29uZ3NfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsImFydGlzdF9zb25nc19nZXRQcm90b3R5cGVPZiIsIkFydGlzdEFsYnVtc1BhZ2UiLCJhcnRpc3RfYWxidW1zX2NsYXNzQ2FsbENoZWNrIiwiYXJ0aXN0X2FsYnVtc19wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwiYXJ0aXN0X2FsYnVtc19nZXRQcm90b3R5cGVPZiIsIkxvZ2luUGFnZSIsImxvZ2luX2NsYXNzQ2FsbENoZWNrIiwibG9naW5fcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsImxvZ2luX2dldFByb3RvdHlwZU9mIiwidXNlcm5hbWVSZWYiLCJwYXNzd29yZFJlZiIsImxvZ2luX21lc3NhZ2UiLCJzdWJtaXRMb2dpbiIsIlJlZ2lzdGVyUGFnZSIsInJlZ2lzdGVyX2NsYXNzQ2FsbENoZWNrIiwicmVnaXN0ZXJfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsInJlZ2lzdGVyX2dldFByb3RvdHlwZU9mIiwiZW1haWxSZWYiLCJjb25maXJtUmVmIiwicmVnaXN0cmF0aW9uX21lc3NhZ2UiLCJwYXNzd29yZF9jb25maXJtIiwic3VibWl0UmVnaXN0cmF0aW9uIiwiRm9sbG93ZXJzUGFnZSIsImZvbGxvd2Vyc19jbGFzc0NhbGxDaGVjayIsImZvbGxvd2Vyc19wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwiZm9sbG93ZXJzX2dldFByb3RvdHlwZU9mIiwiZm9sbG93ZXJzIiwiZm9sbG93ZXIiLCJnZW5lcmF0ZUZvbGxvd2VycyIsIkZvbGxvd2luZ1BhZ2UiLCJmb2xsb3dpbmdfY2xhc3NDYWxsQ2hlY2siLCJmb2xsb3dpbmdfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsImZvbGxvd2luZ19nZXRQcm90b3R5cGVPZiIsImZvbGxvd2luZyIsImZvbGxvdyIsImdlbmVyYXRlRm9sbG93cyIsIlVzZXJQb3N0TGlrZXNQYWdlIiwidXNlcnBvc3RsaWtlc19jbGFzc0NhbGxDaGVjayIsInVzZXJwb3N0bGlrZXNfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsInVzZXJwb3N0bGlrZXNfZ2V0UHJvdG90eXBlT2YiLCJkaXNsaWtlIiwiZ2VuZXJhdGVsaWtlcyIsIkFwcCIsIkFwcF9jbGFzc0NhbGxDaGVjayIsIkFwcF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwiQXBwX2dldFByb3RvdHlwZU9mIiwiZmVlZF9GZWVkIiwidXNlcl9wb3N0X1VzZXJQb3N0IiwidXNlcnBvc3RsaWtlc19Vc2VyUG9zdExpa2VzUGFnZSIsInVzZXJfVXNlclBhZ2UiLCJmb2xsb3dlcnNfRm9sbG93ZXJzUGFnZSIsImZvbGxvd2luZ19Gb2xsb3dpbmdQYWdlIiwibG9naW5fTG9naW5QYWdlIiwicmVnaXN0ZXJfUmVnaXN0ZXJQYWdlIiwiZ2xvYmFsX3Bvc3RfR2xvYmFsUG9zdCIsImFydGlzdF9BcnRpc3RQYWdlIiwiYXJ0aXN0X3NvbmdzX0FydGlzdFNvbmdzUGFnZSIsImFydGlzdF9hbGJ1bXNfQXJ0aXN0QWxidW1zUGFnZSIsIkNvbnRhY3RfQ29udGFjdCIsIkFwcF9BcHAiLCJfX0RBVEFfXyIsImdldEVsZW1lbnRCeUlkIl0sIm1hcHBpbmdzIjoiYUFDQSxJQUFBQSxFQUFBLEdBR0EsU0FBQUMsRUFBQUMsR0FHQSxHQUFBRixFQUFBRSxHQUNBLE9BQUFGLEVBQUFFLEdBQUFDLFFBR0EsSUFBQUMsRUFBQUosRUFBQUUsR0FBQSxDQUNBRyxFQUFBSCxFQUNBSSxHQUFBLEVBQ0FILFFBQUEsSUFVQSxPQU5BSSxFQUFBTCxHQUFBTSxLQUFBSixFQUFBRCxRQUFBQyxJQUFBRCxRQUFBRixHQUdBRyxFQUFBRSxHQUFBLEVBR0FGLEVBQUFELFFBS0FG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a0MsS0FBTyxTQUFVMnZDLFVBQVcyTSxNQUUxQ3ZQLEVBQUE1ekMsRUFBQVUsY0FBQSxVQUFRZ00sS0FBSyxrQkFBa0IreEMsSUFBSSxxQkFBbkMsNkNDdkRKeHZDLGlCQUNDMmtDLEVBQUE1ekMsRUFBQVUsY0FBQzZ6QyxFQUFELEtBQ0NYLEVBQUE1ekMsRUFBQVUsY0FBQzh5RCxHQUFELENBQUs3ekQsS0FBUXlVLE9BQU9xL0MsWUFFckJ2NEQsU0FBU3c0RCxlQUFlIiwiZmlsZSI6ImJ1bmRsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIiBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbiBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG5cbiBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cbiBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKSB7XG4gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG4gXHRcdH1cbiBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbiBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuIFx0XHRcdGk6IG1vZHVsZUlkLFxuIFx0XHRcdGw6IGZhbHNlLFxuIFx0XHRcdGV4cG9ydHM6IHt9XG4gXHRcdH07XG5cbiBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG4gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcbiBcdFx0bW9kdWxlLmwgPSB0cnVlO1xuXG4gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbiBcdH1cblxuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcbiBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG5cbiBcdC8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb24gZm9yIGhhcm1vbnkgZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kID0gZnVuY3Rpb24oZXhwb3J0cywgbmFtZSwgZ2V0dGVyKSB7XG4gXHRcdGlmKCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywgbmFtZSkpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgbmFtZSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGdldHRlciB9KTtcbiBcdFx0fVxuIFx0fTtcblxuIFx0Ly8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yID0gZnVuY3Rpb24oZXhwb3J0cykge1xuIFx0XHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcbiBcdFx0fVxuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuIFx0fTtcblxuIFx0Ly8gY3JlYXRlIGEgZmFrZSBuYW1lc3BhY2Ugb2JqZWN0XG4gXHQvLyBtb2RlICYgMTogdmFsdWUgaXMgYSBtb2R1bGUgaWQsIHJlcXVpcmUgaXRcbiBcdC8vIG1vZGUgJiAyOiBtZXJnZSBhbGwgcHJvcGVydGllcyBvZiB2YWx1ZSBpbnRvIHRoZSBuc1xuIFx0Ly8gbW9kZSAmIDQ6IHJldHVybiB2YWx1ZSB3aGVuIGFscmVhZHkgbnMgb2JqZWN0XG4gXHQvLyBtb2RlICYgOHwxOiBiZWhhdmUgbGlrZSByZXF1aXJlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnQgPSBmdW5jdGlvbih2YWx1ZSwgbW9kZSkge1xuIFx0XHRpZihtb2RlICYgMSkgdmFsdWUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKHZhbHVlKTtcbiBcdFx0aWYobW9kZSAmIDgpIHJldHVybiB2YWx1ZTtcbiBcdFx0aWYoKG1vZGUgJiA0KSAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHZhbHVlICYmIHZhbHVlLl9fZXNNb2R1bGUpIHJldHVybiB2YWx1ZTtcbiBcdFx0dmFyIG5zID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yKG5zKTtcbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG5zLCAnZGVmYXVsdCcsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHZhbHVlIH0pO1xuIFx0XHRpZihtb2RlICYgMiAmJiB0eXBlb2YgdmFsdWUgIT0gJ3N0cmluZycpIGZvcih2YXIga2V5IGluIHZhbHVlKSBfX3dlYnBhY2tfcmVxdWlyZV9fLmQobnMsIGtleSwgZnVuY3Rpb24oa2V5KSB7IHJldHVybiB2YWx1ZVtrZXldOyB9LmJpbmQobnVsbCwga2V5KSk7XG4gXHRcdHJldHVybiBucztcbiBcdH07XG5cbiBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbiBcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbiBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4gXHRcdHJldHVybiBnZXR0ZXI7XG4gXHR9O1xuXG4gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7XG5cblxuIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyhfX3dlYnBhY2tfcmVxdWlyZV9fLnMgPSAxOSk7XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIm1vZHVsZS5leHBvcnRzID1cclxue1xyXG5cclxuXHRjaGVja0xvZ2dlZEluIDogZnVuY3Rpb24gKClcclxuXHR7XHJcblx0XHRpZiAoZG9jdW1lbnQuY29va2llLmluZGV4T2YoXCJ1c2VybmFtZT1cIikgIT0gLTEpXHJcblx0XHR7XHJcblx0XHRcdHJldHVybiB0cnVlXHJcblx0XHR9XHJcblx0XHRyZXR1cm4gZmFsc2VcclxuXHR9LFxyXG5cclxuXHRyZXBsYWNlQWxsIDogZnVuY3Rpb24oc3RyaW5nLCBkZWxpbWl0ZXIsIHJlcGxhY2UpXHJcblx0e1xyXG5cdFx0dmFyIHJlc3Rfc3RyaW5nID0gc3RyaW5nO1xyXG5cdFx0dmFyIG5ld19zdHJpbmcgPSBcIlwiXHJcblx0XHR2YXIgY3VycmVudF9pbmRleCAgPSByZXN0X3N0cmluZy5pbmRleE9mKGRlbGltaXRlcilcclxuXHRcdGlmIChjdXJyZW50X2luZGV4ID09IC0xKVxyXG5cdFx0e1xyXG5cdFx0XHRyZXR1cm4gc3RyaW5nXHJcblx0XHR9XHJcblx0XHR2YXIgc3Vic3RyaW5nO1xyXG5cdFx0d2hpbGUoY3VycmVudF9pbmRleCAhPSAtMSlcclxuXHRcdHtcclxuXHRcdFx0c3Vic3RyaW5nID0gcmVzdF9zdHJpbmcuc3Vic3RyaW5nKDAsIGN1cnJlbnRfaW5kZXgpO1xyXG5cdFx0XHRuZXdfc3RyaW5nID0gbmV3X3N0cmluZyArIHN1YnN0cmluZyArIHJlcGxhY2VcclxuXHRcdFx0cmVzdF9zdHJpbmcgPSByZXN0X3N0cmluZy5zdWJzdHJpbmcoY3VycmVudF9pbmRleCArIGRlbGltaXRlci5sZW5ndGgpXHJcblx0XHRcdGN1cnJlbnRfaW5kZXggPSByZXN0X3N0cmluZy5pbmRleE9mKGRlbGltaXRlcilcclxuXHRcdH1cclxuXHRcdG5ld19zdHJpbmcgPSBuZXdfc3RyaW5nICsgcmVzdF9zdHJpbmdcclxuXHRcdHJldHVybiBuZXdfc3RyaW5nXHJcblx0fSxcclxuXHJcblx0aW5zZXJ0VGFnIDogZnVuY3Rpb24ocG90ZW50aWFsX3RhZ3MsIHRhZylcclxuXHR7XHJcblx0XHR2YXIgcmVtYWluaW5nX3RhZ3MgPSBbXVxyXG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBwb3RlbnRpYWxfdGFncy5sZW5ndGg7ICsraSlcclxuXHRcdHtcclxuXHRcdFx0aWYgKHRhZ1sxXSA9PSBwb3RlbnRpYWxfdGFnc1tpXVsxXSlcclxuXHRcdFx0e1xyXG5cdFx0XHRcdGNvbnRpbnVlO1xyXG5cdFx0XHR9XHJcblx0XHRcdHJlbWFpbmluZ190YWdzLnB1c2gocG90ZW50aWFsX3RhZ3NbaV0pXHJcblx0XHR9XHJcblx0XHRyZW1haW5pbmdfdGFncy5wdXNoKHRhZyk7XHJcblx0XHRyZXR1cm4gcmVtYWluaW5nX3RhZ3M7XHJcblx0fSxcclxuXHJcblx0cmVwbGFjZVRhZyA6IGZ1bmN0aW9uKHBvdGVudGlhbF90YWdzLCB0YWcpXHJcblx0e1xyXG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBwb3RlbnRpYWxfdGFncy5sZW5ndGg7ICsraSlcclxuXHRcdHtcclxuXHRcdFx0aWYgKHRhZ1sxXSA9PSBwb3RlbnRpYWxfdGFnc1tpXVsxXSlcclxuXHRcdFx0e1xyXG5cdFx0XHRcdHBvdGVudGlhbF90YWdzW2ldID0gdGFnO1xyXG5cdFx0XHRcdGJyZWFrXHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHRcdHJldHVybiBwb3RlbnRpYWxfdGFnc1xyXG5cdH0sXHJcblxyXG5cdG1vbnRoTmFtZXMgOiBbXCJKYW51YXJ5XCIsIFwiRmVicnVhcnlcIiwgXCJNYXJjaFwiLCBcIkFwcmlsXCIsIFwiTWF5XCIsIFwiSnVuZVwiLFxyXG5cdCAgXCJKdWx5XCIsIFwiQXVndXN0XCIsIFwiU2VwdGVtYmVyXCIsIFwiT2N0b2JlclwiLCBcIk5vdmVtYmVyXCIsIFwiRGVjZW1iZXJcIlxyXG5cdF0sXHJcblxyXG5cdHJlbmRlcmlmcmFtZTogZnVuY3Rpb24oaWZyYW1lKSB7XHJcblx0XHRyZXR1cm4ge1xyXG5cdFx0XHRfX2h0bWw6IGlmcmFtZVxyXG5cdFx0fTtcclxuXHR9LFxyXG5cclxuXHRTZXRTcG90aWZ5U2l6ZTogZnVuY3Rpb24oaWZyYW1lX3N0cmluZywgd2lkdGgsIGhlaWdodClcclxuXHR7XHJcblx0XHRyZXR1cm4gaWZyYW1lX3N0cmluZy5zdWJzdHJpbmcoMCwgaWZyYW1lX3N0cmluZy5pbmRleE9mKFwid2lkdGhcIikgKyA3KSArIHdpZHRoICtcclxuXHRcdGlmcmFtZV9zdHJpbmcuc3Vic3RyaW5nKGlmcmFtZV9zdHJpbmcuaW5kZXhPZihcImhlaWdodFwiKSAtIDIsIGlmcmFtZV9zdHJpbmcuaW5kZXhPZihcImhlaWdodFwiKSArIDcpICtcclxuXHRcdGhlaWdodCArIGlmcmFtZV9zdHJpbmcuc3Vic3RyaW5nKGlmcmFtZV9zdHJpbmcuaW5kZXhPZihcImZyYW1lYm9yZGVyXCIpIC0gMiwgaWZyYW1lX3N0cmluZy5sZW5ndGgpXHJcblx0fSxcclxuXHJcbn1cclxuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICB2YXIgUkVBQ1RfRUxFTUVOVF9UWVBFID0gKHR5cGVvZiBTeW1ib2wgPT09ICdmdW5jdGlvbicgJiZcbiAgICBTeW1ib2wuZm9yICYmXG4gICAgU3ltYm9sLmZvcigncmVhY3QuZWxlbWVudCcpKSB8fFxuICAgIDB4ZWFjNztcblxuICB2YXIgaXNWYWxpZEVsZW1lbnQgPSBmdW5jdGlvbihvYmplY3QpIHtcbiAgICByZXR1cm4gdHlwZW9mIG9iamVjdCA9PT0gJ29iamVjdCcgJiZcbiAgICAgIG9iamVjdCAhPT0gbnVsbCAmJlxuICAgICAgb2JqZWN0LiQkdHlwZW9mID09PSBSRUFDVF9FTEVNRU5UX1RZUEU7XG4gIH07XG5cbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgZGV2ZWxvcG1lbnQgYmVoYXZpb3IuXG4gIC8vIGh0dHA6Ly9mYi5tZS9wcm9wLXR5cGVzLWluLXByb2RcbiAgdmFyIHRocm93T25EaXJlY3RBY2Nlc3MgPSB0cnVlO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMnKShpc1ZhbGlkRWxlbWVudCwgdGhyb3dPbkRpcmVjdEFjY2Vzcyk7XG59IGVsc2Uge1xuICAvLyBCeSBleHBsaWNpdGx5IHVzaW5nIGBwcm9wLXR5cGVzYCB5b3UgYXJlIG9wdGluZyBpbnRvIG5ldyBwcm9kdWN0aW9uIGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMnKSgpO1xufVxuIiwiLyoqXG4gKiBDb3B5cmlnaHQgMjAxNC0yMDE1LCBGYWNlYm9vaywgSW5jLlxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBCU0Qtc3R5bGUgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS4gQW4gYWRkaXRpb25hbCBncmFudFxuICogb2YgcGF0ZW50IHJpZ2h0cyBjYW4gYmUgZm91bmQgaW4gdGhlIFBBVEVOVFMgZmlsZSBpbiB0aGUgc2FtZSBkaXJlY3RvcnkuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIFNpbWlsYXIgdG8gaW52YXJpYW50IGJ1dCBvbmx5IGxvZ3MgYSB3YXJuaW5nIGlmIHRoZSBjb25kaXRpb24gaXMgbm90IG1ldC5cbiAqIFRoaXMgY2FuIGJlIHVzZWQgdG8gbG9nIGlzc3VlcyBpbiBkZXZlbG9wbWVudCBlbnZpcm9ubWVudHMgaW4gY3JpdGljYWxcbiAqIHBhdGhzLiBSZW1vdmluZyB0aGUgbG9nZ2luZyBjb2RlIGZvciBwcm9kdWN0aW9uIGVudmlyb25tZW50cyB3aWxsIGtlZXAgdGhlXG4gKiBzYW1lIGxvZ2ljIGFuZCBmb2xsb3cgdGhlIHNhbWUgY29kZSBwYXRocy5cbiAqL1xuXG52YXIgd2FybmluZyA9IGZ1bmN0aW9uKCkge307XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIHdhcm5pbmcgPSBmdW5jdGlvbihjb25kaXRpb24sIGZvcm1hdCwgYXJncykge1xuICAgIHZhciBsZW4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgIGFyZ3MgPSBuZXcgQXJyYXkobGVuID4gMiA/IGxlbiAtIDIgOiAwKTtcbiAgICBmb3IgKHZhciBrZXkgPSAyOyBrZXkgPCBsZW47IGtleSsrKSB7XG4gICAgICBhcmdzW2tleSAtIDJdID0gYXJndW1lbnRzW2tleV07XG4gICAgfVxuICAgIGlmIChmb3JtYXQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICAnYHdhcm5pbmcoY29uZGl0aW9uLCBmb3JtYXQsIC4uLmFyZ3MpYCByZXF1aXJlcyBhIHdhcm5pbmcgJyArXG4gICAgICAgICdtZXNzYWdlIGFyZ3VtZW50J1xuICAgICAgKTtcbiAgICB9XG5cbiAgICBpZiAoZm9ybWF0Lmxlbmd0aCA8IDEwIHx8ICgvXltzXFxXXSokLykudGVzdChmb3JtYXQpKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICdUaGUgd2FybmluZyBmb3JtYXQgc2hvdWxkIGJlIGFibGUgdG8gdW5pcXVlbHkgaWRlbnRpZnkgdGhpcyAnICtcbiAgICAgICAgJ3dhcm5pbmcuIFBsZWFzZSwgdXNlIGEgbW9yZSBkZXNjcmlwdGl2ZSBmb3JtYXQgdGhhbjogJyArIGZvcm1hdFxuICAgICAgKTtcbiAgICB9XG5cbiAgICBpZiAoIWNvbmRpdGlvbikge1xuICAgICAgdmFyIGFyZ0luZGV4ID0gMDtcbiAgICAgIHZhciBtZXNzYWdlID0gJ1dhcm5pbmc6ICcgK1xuICAgICAgICBmb3JtYXQucmVwbGFjZSgvJXMvZywgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgcmV0dXJuIGFyZ3NbYXJnSW5kZXgrK107XG4gICAgICAgIH0pO1xuICAgICAgaWYgKHR5cGVvZiBjb25zb2xlICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICBjb25zb2xlLmVycm9yKG1lc3NhZ2UpO1xuICAgICAgfVxuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gVGhpcyBlcnJvciB3YXMgdGhyb3duIGFzIGEgY29udmVuaWVuY2Ugc28gdGhhdCB5b3UgY2FuIHVzZSB0aGlzIHN0YWNrXG4gICAgICAgIC8vIHRvIGZpbmQgdGhlIGNhbGxzaXRlIHRoYXQgY2F1c2VkIHRoaXMgd2FybmluZyB0byBmaXJlLlxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IobWVzc2FnZSk7XG4gICAgICB9IGNhdGNoKHgpIHt9XG4gICAgfVxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHdhcm5pbmc7XG4iLCJ2YXIgdXRpbHMgPSByZXF1aXJlKCcuL3V0aWxzLmpzJylcclxudmFyIFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcclxubW9kdWxlLmV4cG9ydHMgPSBcclxue1xyXG5cdGdldFRhZ3MgOiBmdW5jdGlvbiAob2JqKVxyXG5cdHtcclxuXHRcdG9iai50YWdnZWQgPSBmYWxzZVxyXG5cdFx0dmFyIHJlbWFpbmluZ190YWdzID0gW11cclxuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgb2JqLnBvdGVudGlhbF90YWdzLmxlbmd0aDsgKytpKVxyXG5cdFx0e1xyXG5cdFx0XHRpZiAob2JqLmNvbnRlbnRSZWYuY3VycmVudC5zZWxlY3Rpb25FbmQgPT0gb2JqLnBvdGVudGlhbF90YWdzW2ldWzJdICsgMSAmJiAob2JqLmNvbnRlbnRSZWYuY3VycmVudC52YWx1ZVtvYmouY29udGVudFJlZi5jdXJyZW50LnNlbGVjdGlvbkVuZF0gPT0gJyAnIFxyXG5cdFx0XHRcdHx8IG9iai5jb250ZW50UmVmLmN1cnJlbnQudmFsdWUubGVuZ3RoID09IG9iai5jb250ZW50UmVmLmN1cnJlbnQuc2VsZWN0aW9uRW5kIHx8IG9iai5jb250ZW50UmVmLmN1cnJlbnQudmFsdWVbb2JqLmNvbnRlbnRSZWYuY3VycmVudC5zZWxlY3Rpb25FbmRdID09ICdcXG4nIHx8IFxyXG5cdFx0XHRcdG9iai5jb250ZW50UmVmLmN1cnJlbnQudmFsdWVbb2JqLmNvbnRlbnRSZWYuY3VycmVudC5zZWxlY3Rpb25FbmRdID09ICdcXHQnKSlcclxuXHRcdFx0e1xyXG5cdFx0XHR9XHJcblx0XHRcdGVsc2UgaWYgKG9iai5jb250ZW50UmVmLmN1cnJlbnQuc2VsZWN0aW9uRW5kID09IG9iai5wb3RlbnRpYWxfdGFnc1tpXVsyXSArIDIgJiYgKG9iai5jb250ZW50UmVmLmN1cnJlbnQudmFsdWVbb2JqLmNvbnRlbnRSZWYuY3VycmVudC5zZWxlY3Rpb25FbmQgLSAxXSA9PSAnICcgfHwgXHJcblx0XHRcdFx0XHRvYmouY29udGVudFJlZi5jdXJyZW50LnZhbHVlW29iai5jb250ZW50UmVmLmN1cnJlbnQuc2VsZWN0aW9uRW5kXSA9PSAnXFxuJyB8fCBvYmouY29udGVudFJlZi5jdXJyZW50LnZhbHVlW29iai5jb250ZW50UmVmLmN1cnJlbnQuc2VsZWN0aW9uRW5kXSA9PSAnXFx0JykpXHJcblx0XHRcdHtcclxuXHRcdFx0XHRcclxuXHRcdFx0fVxyXG5cdFx0XHRlbHNlIGlmIChvYmouY29udGVudFJlZi5jdXJyZW50LnNlbGVjdGlvbkVuZCA+IG9iai5wb3RlbnRpYWxfdGFnc1tpXVsxXSAtIChvYmoubGFzdENvbnRlbnRTaXplIC0gb2JqLmNvbnRlbnRSZWYuY3VycmVudC52YWx1ZS5sZW5ndGgpICYmIG9iai5jb250ZW50UmVmLmN1cnJlbnQuc2VsZWN0aW9uRW5kIDw9IG9iai5wb3RlbnRpYWxfdGFnc1tpXVsyXSArIDIpXHJcblx0XHRcdHtcclxuXHRcdFx0XHRjb250aW51ZTtcclxuXHRcdFx0fVx0XHRcdFx0XHRcclxuXHRcdFx0ZWxzZSBcclxuXHRcdFx0e1xyXG5cdFx0XHRcdGlmIChvYmouY29udGVudFJlZi5jdXJyZW50LnNlbGVjdGlvbkVuZCA8PSBvYmoucG90ZW50aWFsX3RhZ3NbaV1bMV0gKyAxKVxyXG5cdFx0XHRcdHtcclxuXHRcdFx0XHRcdG9iai5wb3RlbnRpYWxfdGFnc1tpXVsxXSAtPSBvYmoubGFzdENvbnRlbnRTaXplIC0gb2JqLmNvbnRlbnRSZWYuY3VycmVudC52YWx1ZS5sZW5ndGg7XHJcblx0XHRcdFx0XHRvYmoucG90ZW50aWFsX3RhZ3NbaV1bMl0gLT0gb2JqLmxhc3RDb250ZW50U2l6ZSAtIG9iai5jb250ZW50UmVmLmN1cnJlbnQudmFsdWUubGVuZ3RoO1xyXG5cdFx0XHRcdH1cdFx0XHRcdFxyXG5cdFx0XHR9XHJcblx0XHRcdHJlbWFpbmluZ190YWdzLnB1c2gob2JqLnBvdGVudGlhbF90YWdzW2ldKVxyXG5cdFx0fVxyXG5cdFx0b2JqLnBvdGVudGlhbF90YWdzID0gcmVtYWluaW5nX3RhZ3NcclxuXHJcblx0XHQvL2dvYWxzIC0gR2V0IHRhZyB1cCB0byBzZWxlY3Rpb24sIHNldCB0YWdGbGFnLCBkZXRlcm1pbmUgd2hhdCBraW5kIG9mIHRhZ1xyXG5cdFx0dmFyIGN1cnJlbnRfaW5kZXggPSBvYmouY29udGVudFJlZi5jdXJyZW50LnNlbGVjdGlvbkVuZCAtIDFcclxuXHRcdHZhciBsYXN0X2Rhc2ggPSAtMVxyXG5cdFx0b2JqLmN1cnJlbnRUYWcgPSBcIlwiXHJcblx0XHRvYmouYXJ0aXN0U2VhcmNoID0gZmFsc2VcclxuXHRcdG9iai5hcnRpc3RGbGFnID0gZmFsc2VcclxuXHRcdG9iai50YWdGbGFnID0gZmFsc2U7XHJcblx0XHRpZiAob2JqLmNvbnRlbnRSZWYuY3VycmVudC52YWx1ZVtjdXJyZW50X2luZGV4XSAhPSAnICcpXHJcblx0XHR7XHJcblx0XHRcdHdoaWxlIChjdXJyZW50X2luZGV4IDwgb2JqLmNvbnRlbnRSZWYuY3VycmVudC52YWx1ZS5sZW5ndGgpXHJcblx0XHRcdHtcclxuXHRcdFx0XHRpZiAob2JqLmNvbnRlbnRSZWYuY3VycmVudC52YWx1ZVtjdXJyZW50X2luZGV4XSA9PSAnICcgfHxcclxuXHRcdFx0XHRcdG9iai5jb250ZW50UmVmLmN1cnJlbnQudmFsdWVbY3VycmVudF9pbmRleF0gPT0gJ1xcbicgfHxcclxuXHRcdFx0XHRcdG9iai5jb250ZW50UmVmLmN1cnJlbnQudmFsdWVbY3VycmVudF9pbmRleF0gPT0gJ1xcdCcgfHxcclxuXHRcdFx0XHRcdG9iai5jb250ZW50UmVmLmN1cnJlbnQudmFsdWVbY3VycmVudF9pbmRleF0gPT0gJ0AnIHx8XHJcblx0XHRcdFx0XHRvYmouY29udGVudFJlZi5jdXJyZW50LnZhbHVlW2N1cnJlbnRfaW5kZXhdID09ICcjJylcclxuXHRcdFx0XHR7XHJcblx0XHRcdFx0XHRicmVhaztcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0KytjdXJyZW50X2luZGV4XHJcblx0XHRcdH1cclxuXHRcdFx0LS1jdXJyZW50X2luZGV4XHJcblx0XHR9XHJcblx0XHRlbHNlXHJcblx0XHR7XHJcblx0XHRcdC8vaWYgY2hhciBpcyAnICcsIGNvdWxkIGhhdmUgYSBuZXcgdGFnIHdoZW4gdHlwaW5nIGluIHRoZSBtaWRkbGUgb2YgdGV4dFxyXG5cdFx0XHRjdXJyZW50X2luZGV4ID0gb2JqLmNvbnRlbnRSZWYuY3VycmVudC5zZWxlY3Rpb25FbmQgLSAyXHJcblx0XHRcdC8vdHJ1c3QgaW5zZXJ0VGFnIHRvIG5vdCBhZGQgZHVwbGljYXRlc1xyXG5cdFx0fVxyXG5cdFx0dmFyIHRhZ19lbmQgPSBjdXJyZW50X2luZGV4XHJcblx0XHR3aGlsZSAoY3VycmVudF9pbmRleCA+PSAwKVxyXG5cdFx0e1xyXG5cdFx0XHRpZiAob2JqLmNvbnRlbnRSZWYuY3VycmVudC52YWx1ZVtjdXJyZW50X2luZGV4XSA9PSAnICcgfHxcclxuXHRcdFx0XHRvYmouY29udGVudFJlZi5jdXJyZW50LnZhbHVlW2N1cnJlbnRfaW5kZXhdID09ICdcXG4nIHx8XHJcblx0XHRcdFx0b2JqLmNvbnRlbnRSZWYuY3VycmVudC52YWx1ZVtjdXJyZW50X2luZGV4XSA9PSAnXFx0JylcclxuXHRcdFx0e1xyXG5cdFx0XHRcdG9iai50YWdMaXN0ID0gW11cclxuXHRcdFx0XHRvYmouY3VycmVudFRhZyA9IFwiXCJcclxuXHRcdFx0XHRicmVhaztcclxuXHRcdFx0fVxyXG5cdFx0XHRlbHNlIGlmIChvYmouY29udGVudFJlZi5jdXJyZW50LnZhbHVlW2N1cnJlbnRfaW5kZXhdID09ICcjJykgXHJcblx0XHRcdHtcclxuXHRcdFx0XHRpZiAobGFzdF9kYXNoICE9IC0xKVxyXG5cdFx0XHRcdHtcclxuXHRcdFx0XHRcdG9iai5hcnRpc3RTZWFyY2ggPSB0cnVlXHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdGVsc2VcclxuXHRcdFx0XHR7XHJcblx0XHRcdFx0XHRvYmouYXJ0aXN0RmxhZyA9IHRydWVcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0b2JqLnRhZ0ZsYWcgPSB0cnVlXHJcblx0XHRcdFx0YnJlYWs7XHJcblx0XHRcdH1cclxuXHRcdFx0ZWxzZSBpZiAob2JqLmNvbnRlbnRSZWYuY3VycmVudC52YWx1ZVtjdXJyZW50X2luZGV4XSA9PSAnQCcpIFxyXG5cdFx0XHR7XHJcblx0XHRcdFx0b2JqLnRhZ0ZsYWcgPSB0cnVlXHJcblx0XHRcdFx0YnJlYWs7XHJcblx0XHRcdH1cclxuXHRcdFx0ZWxzZSBpZiAob2JqLmNvbnRlbnRSZWYuY3VycmVudC52YWx1ZVtjdXJyZW50X2luZGV4XSA9PSAnLScpXHJcblx0XHRcdHtcclxuXHRcdFx0XHRsYXN0X2Rhc2ggPSBjdXJyZW50X2luZGV4XHJcblx0XHRcdH1cclxuXHRcdFx0b2JqLmN1cnJlbnRUYWcgPSBvYmouY29udGVudFJlZi5jdXJyZW50LnZhbHVlW2N1cnJlbnRfaW5kZXhdICsgb2JqLmN1cnJlbnRUYWdcclxuXHRcdFx0Y3VycmVudF9pbmRleC0tO1xyXG5cdFx0fVxyXG5cdFx0Ly9BZGQgdGFnXHJcblx0XHRpZiAob2JqLmFydGlzdFNlYXJjaClcclxuXHRcdHtcclxuXHRcdFx0dmFyIGN1cnJlbnRfc29uZyA9IG9iai5jdXJyZW50VGFnLnN1YnN0cmluZyhvYmouY3VycmVudFRhZy5pbmRleE9mKCctJykgKyAxLCBvYmouY3VycmVudFRhZy5sZW5ndGgpXHJcblx0XHRcdC8vY2hlY2sgaWYgc29uZy9hbGJ1bSBmdWxseSB0eXBlZFxyXG5cdFx0XHRpZiAob2JqLnNvbmdzX2FuZF9hbGJ1bXMubGVuZ3RoID4gMCAmJiBvYmouc29uZ3NfYW5kX2FsYnVtc1swXS5zb25nICE9IFwiTk9fU09OR19BTEJVTV9PTkxZXCIpXHJcblx0XHRcdHtcclxuXHRcdFx0XHR2YXIgYWx0ZXJuYXRpdmVfc29uZyA9IHV0aWxzLnJlcGxhY2VBbGwob2JqLnNvbmdzX2FuZF9hbGJ1bXNbMF0uc29uZywgXCIgXCIsIFwiX1wiKVxyXG5cdFx0XHRcdGlmIChvYmouc29uZ3NfYW5kX2FsYnVtcy5sZW5ndGggPiAwICYmIChvYmouc29uZ3NfYW5kX2FsYnVtc1swXS5zb25nLnRvTG93ZXJDYXNlKCkgPT0gY3VycmVudF9zb25nLnRvTG93ZXJDYXNlKCkgfHwgXHJcblx0XHRcdFx0XHRhbHRlcm5hdGl2ZV9zb25nLnRvTG93ZXJDYXNlKCkgPT0gY3VycmVudF9zb25nLnRvTG93ZXJDYXNlKCkpKVxyXG5cdFx0XHRcdHtcclxuXHRcdFx0XHRcdC8vdGhpcy5wb3RlbnRpYWxfdGFncy5wdXNoKFt0aGlzLnNvbmdzX2FuZF9hbGJ1bXNbMF0sIGN1cnJlbnRfaW5kZXgsIHRoaXMuY29udGVudFJlZi5jdXJyZW50LnZhbHVlLnNlbGVjdGlvbkVuZCAtIDFdIClcclxuXHRcdFx0XHRcdG9iai5wb3RlbnRpYWxfdGFncyA9IHV0aWxzLmluc2VydFRhZyhvYmoucG90ZW50aWFsX3RhZ3MsIFtvYmouc29uZ3NfYW5kX2FsYnVtc1swXSwgY3VycmVudF9pbmRleCwgb2JqLmNvbnRlbnRSZWYuY3VycmVudC52YWx1ZS5zZWxlY3Rpb25FbmQgLSAxLCAyXSlcclxuXHRcdFx0XHRcdG9iai50YWdnZWQgPSBmYWxzZVxyXG5cdFx0XHRcdH1cdFx0XHRcdFxyXG5cdFx0XHR9XHJcblx0XHRcdGVsc2VcclxuXHRcdFx0e1xyXG5cdFx0XHRcdHZhciBjdXJyZW50X2FsYnVtID0gb2JqLmN1cnJlbnRUYWcuc3Vic3RyaW5nKG9iai5jdXJyZW50VGFnLmluZGV4T2YoJy0nKSArIDEsIG9iai5jdXJyZW50VGFnLmxlbmd0aClcclxuXHRcdFx0XHR2YXIgYWx0ZXJuYXRpdmVfYWxidW0gPSBvYmouY3VycmVudF9hbGJ1bVxyXG5cdFx0XHRcdGlmIChvYmouc29uZ3NfYW5kX2FsYnVtcy5sZW5ndGggPiAwKVxyXG5cdFx0XHRcdHtcclxuXHRcdFx0XHRcdGFsdGVybmF0aXZlX2FsYnVtID0gdXRpbHMucmVwbGFjZUFsbChjdXJyZW50X2FsYnVtLCBcIiBcIiwgXCJfXCIpXHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdGlmIChvYmouc29uZ3NfYW5kX2FsYnVtcy5sZW5ndGggPiAwICYmIChvYmouc29uZ3NfYW5kX2FsYnVtc1swXS5hbGJ1bS50b0xvd2VyQ2FzZSgpID09IGN1cnJlbnRfYWxidW0udG9Mb3dlckNhc2UoKSB8fFxyXG5cdFx0XHRcdFx0YWx0ZXJuYXRpdmVfYWxidW0udG9Mb3dlckNhc2UoKSA9PSBjdXJyZW50X2FsYnVtLnRvTG93ZXJDYXNlKCkpKVxyXG5cdFx0XHRcdHtcclxuXHRcdFx0XHRcdG9iai5wb3RlbnRpYWxfdGFncyA9IHV0aWxzLmluc2VydFRhZyhvYmoucG90ZW50aWFsX3RhZ3MsIFtvYmouc29uZ3NfYW5kX2FsYnVtc1swXSwgY3VycmVudF9pbmRleCwgb2JqLmNvbnRlbnRSZWYuY3VycmVudC52YWx1ZS5zZWxlY3Rpb25FbmQgLSAxLCAzXSlcclxuXHRcdFx0XHRcdG9iai50YWdnZWQgPSBmYWxzZVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdFx0ZWxzZVxyXG5cdFx0e1xyXG5cdFx0XHQvL2NoZWNrIGlmIGFydGlzdC91c2VyIGZ1bGx5IHR5cGVkXHJcblx0XHRcdGlmIChvYmouYXJ0aXN0RmxhZylcclxuXHRcdFx0e1xyXG5cdFx0XHRcdHZhciBhbHRlcm5hdGl2ZV9hcnRpc3QgPSBvYmouY3VycmVudFRhZ1xyXG5cdFx0XHRcdGlmIChvYmouYXJ0aXN0c1swXSAhPSB1bmRlZmluZWQpXHJcblx0XHRcdFx0e1xyXG5cdFx0XHRcdFx0YWx0ZXJuYXRpdmVfYXJ0aXN0ID0gdXRpbHMucmVwbGFjZUFsbChvYmouYXJ0aXN0c1swXS5hcnRpc3QsIFwiIFwiLCBcIl9cIilcclxuXHRcdFx0XHR9IFxyXG5cdFx0XHRcdGlmIChvYmouYXJ0aXN0cy5sZW5ndGggPiAwICYmIChvYmouYXJ0aXN0c1swXS5hcnRpc3QudG9Mb3dlckNhc2UoKSA9PSBvYmouY3VycmVudFRhZy50b0xvd2VyQ2FzZSgpIHx8IFxyXG5cdFx0XHRcdFx0YWx0ZXJuYXRpdmVfYXJ0aXN0LnRvTG93ZXJDYXNlKCkgPT0gb2JqLmN1cnJlbnRUYWcudG9Mb3dlckNhc2UoKSkpXHJcblx0XHRcdFx0e1xyXG5cdFx0XHRcdFx0b2JqLnBvdGVudGlhbF90YWdzID0gdXRpbHMuaW5zZXJ0VGFnKG9iai5wb3RlbnRpYWxfdGFncywgW29iai5hcnRpc3RzWzBdLCBjdXJyZW50X2luZGV4LCBjdXJyZW50X2luZGV4ICsgb2JqLmN1cnJlbnRUYWcubGVuZ3RoLCAxXSlcclxuXHRcdFx0XHRcdG9iai50YWdnZWQgPSBmYWxzZVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0XHRlbHNlXHJcblx0XHRcdHtcclxuXHRcdFx0XHRpZiAob2JqLnVzZXJzLmxlbmd0aCA+IDAgJiYgb2JqLnVzZXJzWzBdLnVzZXJuYW1lLnRvTG93ZXJDYXNlKCkgPT0gb2JqLmN1cnJlbnRUYWcudG9Mb3dlckNhc2UoKSlcclxuXHRcdFx0XHR7XHJcblx0XHRcdFx0XHRvYmoucG90ZW50aWFsX3RhZ3MgPSB1dGlscy5pbnNlcnRUYWcob2JqLnBvdGVudGlhbF90YWdzLCBbb2JqLnVzZXJzWzBdLCBjdXJyZW50X2luZGV4LCBjdXJyZW50X2luZGV4ICsgb2JqLmN1cnJlbnRUYWcubGVuZ3RoLCAwXSlcclxuXHRcdFx0XHRcdC8vdGhpcy5wb3RlbnRpYWxfdGFncy5wdXNoKFt0aGlzLnVzZXJzWzBdLCBjdXJyZW50X2luZGV4LCBjdXJyZW50X2luZGV4ICsgdGhpcy5jdXJyZW50VGFnLmxlbmd0aF0pXHJcblx0XHRcdFx0XHRvYmoudGFnZ2VkID0gZmFsc2VcclxuXHRcdFx0XHR9XHRcdFxyXG5cdFx0XHR9XHRcdFx0XHRcdFxyXG5cdFx0fVxyXG5cclxuXHRcdGlmICghb2JqLnRhZ2dlZCAmJiBvYmoudGFnRmxhZylcclxuXHRcdHtcclxuXHRcdFx0Ly90aGlzLnRhZ2dlZCBub3QgcmVhbGx5IG5lY2Vzc2FyeVxyXG5cdFx0XHR2YXIgYWxyZWFkeVRhZ0ZsYWcgPSBmYWxzZVxyXG5cdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IG9iai5wb3RlbnRpYWxfdGFncy5sZW5ndGg7ICsraSlcclxuXHRcdFx0e1xyXG5cdFx0XHRcdGlmIChvYmoucG90ZW50aWFsX3RhZ3NbaV1bMV0gPT0gY3VycmVudF9pbmRleClcclxuXHRcdFx0XHR7XHJcblx0XHRcdFx0XHRhbHJlYWR5VGFnRmxhZyA9IHRydWVcclxuXHRcdFx0XHRcdGJyZWFrO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0XHRpZiAoIWFscmVhZHlUYWdGbGFnICYmIG9iai50YWdGbGFnKVxyXG5cdFx0XHR7XHJcblx0XHRcdFx0dmFyIHRhZ19sYWJlbCA9IDA7XHJcblx0XHRcdFx0aWYgKG9iai5hcnRpc3RTZWFyY2gpXHJcblx0XHRcdFx0e1xyXG5cdFx0XHRcdFx0dGFnX2xhYmVsID0gMlxyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHRlbHNlIGlmIChvYmouYXJ0aXN0RmxhZylcclxuXHRcdFx0XHR7XHJcblx0XHRcdFx0XHR0YWdfbGFiZWwgPSAxXHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdG9iai5wb3RlbnRpYWxfdGFncy5wdXNoKFtvYmouY3VycmVudFRhZywgY3VycmVudF9pbmRleCwgdGFnX2VuZCwgdGFnX2xhYmVsXSlcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cclxuXHRcdC8vYWRkaW5nIHRvIHRhZ2xpc3Qgc2VjdGlvblxyXG5cdFx0aWYgKG9iai5hcnRpc3RTZWFyY2gpXHJcblx0XHR7XHJcblx0XHRcdHZhciBhcnRpc3QgPSBvYmouY29udGVudFJlZi5jdXJyZW50LnZhbHVlLnN1YnN0cmluZyhjdXJyZW50X2luZGV4KzEsIGxhc3RfZGFzaClcclxuXHRcdFx0dmFyIHNvbmdfYWxidW0gPSBvYmouY29udGVudFJlZi5jdXJyZW50LnZhbHVlLnN1YnN0cmluZyhsYXN0X2Rhc2ggKyAxLCB0YWdfZW5kICsgMSlcclxuXHRcdFx0dmFyIHRoYXQgPSBvYmo7XHJcblx0XHRcdGZldGNoKFwiL3Bvc3RfdGFnX2FydGlzdF9zZWFyY2hcIiwge1xyXG5cdFx0XHRcdG1ldGhvZDogXCJQT1NUXCIsXHJcblx0XHRcdFx0aGVhZGVyczoge1xyXG5cdFx0XHRcdFx0J0FjY2VwdCc6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuXHRcdFx0XHRcdCdBdXRob3JpemF0aW9uJzogJ0Jhc2ljJyxcclxuXHRcdFx0XHRcdCdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXHJcblx0XHRcdFx0fSxcclxuXHRcdFx0XHRib2R5OiBKU09OLnN0cmluZ2lmeSh7YXJ0aXN0OiBhcnRpc3QsXHJcblx0XHRcdFx0XHRcdFx0XHRcdHRhZzogc29uZ19hbGJ1bSwgfSl9KVxyXG5cdFx0XHRcdC50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7IHJldHVybiByZXNwb25zZS5qc29uKCk7fSlcclxuXHRcdFx0XHQudGhlbihmdW5jdGlvbiAoZGF0YSkgeyBcclxuXHRcdFx0XHRcdHRoYXQudGFnTGlzdCA9IFtdIFxyXG5cdFx0XHRcdFx0dGhhdC5zb25nc19hbmRfYWxidW1zID0gZGF0YS5zb25ncy5jb25jYXQoZGF0YS5hbGJ1bXMpO1xyXG5cdFx0XHRcdCAgICB0aGF0LnNvbmdzX2FuZF9hbGJ1bXMuc29ydChmdW5jdGlvbihhLCBiKXtcclxuXHRcdFx0XHQgICAgXHRpZiAoYS5zb25nICE9IFwiTk9fU09OR19BTEJVTV9PTkxZXCIgJiYgYi5zb25nICE9IFwiTk9fU09OR19BTEJVTV9PTkxZXCIpXHJcblx0XHRcdFx0ICAgIFx0e1xyXG5cdFx0XHRcdFx0ICAgIFx0aWYgKGEuc29uZyA+IGIuc29uZylcclxuXHRcdFx0XHRcdCAgICAgICAge1xyXG5cdFx0XHRcdFx0ICAgICAgICBcdHJldHVybiAxO1xyXG5cdFx0XHRcdFx0ICAgICAgICB9XHJcblx0XHRcdFx0XHQgICAgICAgIHJldHVybiAtMTtcclxuXHRcdFx0XHQgICAgXHR9XHJcblx0XHRcdFx0ICAgIFx0ZWxzZSBpZiAoYS5zb25nICE9IFwiTk9fU09OR19BTEJVTV9PTkxZXCIgJiYgYi5zb25nID09IFwiTk9fU09OR19BTEJVTV9PTkxZXCIpXHJcblx0XHRcdFx0ICAgIFx0e1xyXG5cdFx0XHRcdFx0ICAgIFx0aWYgKGEuc29uZyA+IGIuYWxidW0pXHJcblx0XHRcdFx0XHQgICAgICAgIHtcclxuXHRcdFx0XHRcdCAgICAgICAgXHRyZXR1cm4gMTtcclxuXHRcdFx0XHRcdCAgICAgICAgfVxyXG5cdFx0XHRcdFx0ICAgICAgICByZXR1cm4gLTE7XHJcblx0XHRcdFx0ICAgIFx0fVxyXG5cdFx0XHRcdCAgICBcdGVsc2UgaWYgKGEuc29uZyA9PSBcIk5PX1NPTkdfQUxCVU1fT05MWVwiICYmIGIuc29uZyAhPSBcIk5PX1NPTkdfQUxCVU1fT05MWVwiKVxyXG5cdFx0XHRcdCAgICBcdHtcclxuXHRcdFx0XHRcdCAgICBcdGlmIChhLmFsYnVtID4gYi5zb25nKVxyXG5cdFx0XHRcdFx0ICAgICAgICB7XHJcblx0XHRcdFx0XHQgICAgICAgIFx0cmV0dXJuIDE7XHJcblx0XHRcdFx0XHQgICAgICAgIH1cclxuXHRcdFx0XHRcdCAgICAgICAgcmV0dXJuIC0xO1xyXG5cdFx0XHRcdCAgICBcdH1cclxuXHRcdFx0XHQgICAgXHRlbHNlXHJcblx0XHRcdFx0ICAgIFx0e1xyXG5cdFx0XHRcdFx0ICAgIFx0aWYgKGEuYWxidW0gPiBiLmFsYnVtKVxyXG5cdFx0XHRcdFx0ICAgICAgICB7XHJcblx0XHRcdFx0XHQgICAgICAgIFx0cmV0dXJuIDE7XHJcblx0XHRcdFx0XHQgICAgICAgIH1cclxuXHRcdFx0XHRcdCAgICAgICAgcmV0dXJuIC0xO1xyXG5cdFx0XHRcdCAgICBcdH1cclxuXHRcdFx0XHQgICAgfSk7XHRcdFx0XHRcclxuXHRcdFx0XHRcdGZvciAodmFyIHRhZyBvZiB0aGF0LnNvbmdzX2FuZF9hbGJ1bXMpXHJcblx0XHRcdFx0XHR7XHJcblx0XHRcdFx0XHRcdGlmICh0YWcuc29uZyA9PSBcIk5PX1NPTkdfQUxCVU1fT05MWVwiKVxyXG5cdFx0XHRcdFx0XHR7XHJcblx0XHRcdFx0XHRcdFx0dGhhdC50YWdMaXN0LnB1c2goPGRpdiBpZCA9IHt0aGF0LnRhZ0xpc3QubGVuZ3RofSBjbGFzc05hbWUgPSBcImFsYnVtXCIgc3R5bGUgPSB7e2NvbG9yOidwdXJwbGUnfX0gb25DbGljayA9IHt0aGF0LnNlbGVjdFRhZy5iaW5kKHRoYXQpfT4ge3RhZy5hbGJ1bX0gPC9kaXY+KVxyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdGVsc2VcclxuXHRcdFx0XHRcdFx0e1xyXG5cdFx0XHRcdFx0XHRcdHRoYXQudGFnTGlzdC5wdXNoKDxkaXYgaWQgPSB7dGhhdC50YWdMaXN0Lmxlbmd0aH0gY2xhc3NOYW1lID0gXCJzb25nXCIgc3R5bGUgPSB7e2NvbG9yOidibHVlJ319IG9uQ2xpY2sgPSB7dGhhdC5zZWxlY3RUYWcuYmluZCh0aGF0KX0+IHt0YWcuc29uZ30gPC9kaXY+KVxyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHR0aGF0LmZvcmNlVXBkYXRlKClcdFx0XHJcblx0XHRcdFx0fSlcclxuXHRcdH1cclxuXHRcdGVsc2UgaWYgKG9iai5hcnRpc3RGbGFnKVxyXG5cdFx0e1xyXG5cdFx0XHR2YXIgdGhhdCA9IG9iajtcclxuXHRcdFx0ZmV0Y2goXCIvcG9zdF90YWdfYXJ0aXN0XCIsIHtcclxuXHRcdFx0XHRtZXRob2Q6IFwiUE9TVFwiLFxyXG5cdFx0XHRcdGhlYWRlcnM6IHtcclxuXHRcdFx0XHRcdCdBY2NlcHQnOiAnYXBwbGljYXRpb24vanNvbicsXHJcblx0XHRcdFx0XHQnQXV0aG9yaXphdGlvbic6ICdCYXNpYycsXHJcblx0XHRcdFx0XHQnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxyXG5cdFx0XHRcdH0sXHJcblx0XHRcdFx0Ym9keTogSlNPTi5zdHJpbmdpZnkoe3RhZzogb2JqLmN1cnJlbnRUYWcsIH0pfSlcclxuXHRcdFx0XHQudGhlbihmdW5jdGlvbihyZXNwb25zZSkgeyByZXR1cm4gcmVzcG9uc2UuanNvbigpO30pXHJcblx0XHRcdFx0LnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsgXHJcblx0XHRcdFx0XHR0aGF0LnRhZ0xpc3QgPSBbXSBcclxuXHRcdFx0XHRcdHRoYXQuYXJ0aXN0cyA9IGRhdGEuYXJ0aXN0cztcclxuXHRcdFx0XHQgICAgdGhhdC5hcnRpc3RzLnNvcnQoZnVuY3Rpb24oYSwgYil7XHJcblx0XHRcdFx0ICAgIFx0aWYgKGEuYXJ0aXN0ID4gYi5hcnRpc3QpXHJcblx0XHRcdFx0ICAgICAgICB7XHJcblx0XHRcdFx0ICAgICAgICBcdHJldHVybiAxO1xyXG5cdFx0XHRcdCAgICAgICAgfVxyXG5cdFx0XHRcdCAgICAgICAgcmV0dXJuIC0xO1xyXG5cdFx0XHRcdCAgICB9KTtcdFx0XHRcdFxyXG5cdFx0XHRcdFx0Zm9yICh2YXIgdGFnIG9mIHRoYXQuYXJ0aXN0cylcclxuXHRcdFx0XHRcdHtcclxuXHRcdFx0XHRcdFx0dGhhdC50YWdMaXN0LnB1c2goPGRpdiBpZCA9IHt0aGF0LnRhZ0xpc3QubGVuZ3RofSBjbGFzc05hbWUgPSBcImFydGlzdFwiIHN0eWxlID0ge3tjb2xvcjoncHVycGxlJ319IG9uQ2xpY2sgPSB7dGhhdC5zZWxlY3RUYWcuYmluZCh0aGF0KX0+IHt0YWcuYXJ0aXN0fSA8L2Rpdj4pXHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHR0aGF0LmZvcmNlVXBkYXRlKClcdFx0XHJcblx0XHRcdH0pXHJcblx0XHR9XHJcblx0XHRlbHNlIGlmIChvYmoudGFnRmxhZylcclxuXHRcdHtcclxuXHRcdFx0dmFyIHRoYXQgPSBvYmo7XHJcblx0XHRcdGZldGNoKFwiL3Bvc3RfdGFnX3VzZXJcIiwge1xyXG5cdFx0XHRcdG1ldGhvZDogXCJQT1NUXCIsXHJcblx0XHRcdFx0aGVhZGVyczoge1xyXG5cdFx0XHRcdFx0J0FjY2VwdCc6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuXHRcdFx0XHRcdCdBdXRob3JpemF0aW9uJzogJ0Jhc2ljJyxcclxuXHRcdFx0XHRcdCdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXHJcblx0XHRcdFx0fSxcclxuXHRcdFx0XHRib2R5OiBKU09OLnN0cmluZ2lmeSh7dGFnOiBvYmouY3VycmVudFRhZywgfSl9KVxyXG5cdFx0XHRcdC50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7IHJldHVybiByZXNwb25zZS5qc29uKCk7fSlcclxuXHRcdFx0XHQudGhlbihmdW5jdGlvbiAoZGF0YSkgeyBcclxuXHRcdFx0XHRcdHRoYXQudGFnTGlzdCA9IFtdIFxyXG5cdFx0XHRcdFx0dGhhdC51c2VycyA9IGRhdGEudXNlcnM7XHJcblx0XHRcdFx0ICAgIHRoYXQudXNlcnMuc29ydChmdW5jdGlvbihhLCBiKXtcclxuXHRcdFx0XHQgICAgXHRpZiAoYS51c2VybmFtZSA+IGIudXNlcm5hbWUpXHJcblx0XHRcdFx0ICAgICAgICB7XHJcblx0XHRcdFx0ICAgICAgICBcdHJldHVybiAxO1xyXG5cdFx0XHRcdCAgICAgICAgfVxyXG5cdFx0XHRcdCAgICAgICAgcmV0dXJuIC0xO1xyXG5cdFx0XHRcdCAgICB9KTtcdFx0XHRcdFxyXG5cdFx0XHRcdFx0Zm9yICh2YXIgdGFnIG9mIHRoYXQudXNlcnMpXHJcblx0XHRcdFx0XHR7XHJcblx0XHRcdFx0XHRcdHRoYXQudGFnTGlzdC5wdXNoKDxkaXYgaWQgPSB7dGhhdC50YWdMaXN0Lmxlbmd0aH0gY2xhc3NOYW1lID0gXCJ1c2VyXCIgc3R5bGUgPSB7e2NvbG9yOidwdXJwbGUnfX0gb25DbGljayA9IHt0aGF0LnNlbGVjdFRhZy5iaW5kKHRoYXQpfT4ge3RhZy51c2VybmFtZX0gPC9kaXY+KVxyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0dGhhdC5mb3JjZVVwZGF0ZSgpXHRcdFxyXG5cdFx0XHR9KVxyXG5cdFx0fVxyXG5cdFx0dmFyIGFscmVhZHlUYWdGbGFnID0gZmFsc2VcclxuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgb2JqLnBvdGVudGlhbF90YWdzLmxlbmd0aDsgKytpKVxyXG5cdFx0e1xyXG5cdFx0XHRpZiAob2JqLnBvdGVudGlhbF90YWdzW2ldWzFdID09IGN1cnJlbnRfaW5kZXgpXHJcblx0XHRcdHtcclxuXHRcdFx0XHRhbHJlYWR5VGFnRmxhZyA9IHRydWVcclxuXHRcdFx0XHRicmVhaztcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdFx0aWYgKCFhbHJlYWR5VGFnRmxhZyAmJiBvYmoudGFnRmxhZylcclxuXHRcdHtcclxuXHRcdFx0dmFyIHRhZ19sYWJlbCA9IDA7XHJcblx0XHRcdGlmIChvYmouYXJ0aXN0U2VhcmNoKVxyXG5cdFx0XHR7XHJcblx0XHRcdFx0dGFnX2xhYmVsID0gMlxyXG5cdFx0XHR9XHJcblx0XHRcdGVsc2UgaWYgKG9iai5hcnRpc3RGbGFnKVxyXG5cdFx0XHR7XHJcblx0XHRcdFx0dGFnX2xhYmVsID0gMVxyXG5cdFx0XHR9XHJcblx0XHRcdG9iai5wb3RlbnRpYWxfdGFncy5wdXNoKFtvYmouY3VycmVudFRhZywgY3VycmVudF9pbmRleCwgb2JqLmNvbnRlbnRSZWYuY3VycmVudC5zZWxlY3Rpb25FbmQgLSAxLCB0YWdfbGFiZWxdKVxyXG5cdFx0fVxyXG5cdH0sXHJcblxyXG5cdHRhZ0NsaWNrZWQgOiBmdW5jdGlvbiAob2JqLCBlKVxyXG5cdHtcclxuXHRcdHZhciBjdXJyZW50X2luZGV4ID0gb2JqLmNvbnRlbnRSZWYuY3VycmVudC5zZWxlY3Rpb25FbmQgLSAxO1xyXG5cdFx0d2hpbGUgKGN1cnJlbnRfaW5kZXggPCBvYmouY29udGVudFJlZi5jdXJyZW50LnZhbHVlLmxlbmd0aClcclxuXHRcdHtcclxuXHRcdFx0aWYgKG9iai5jb250ZW50UmVmLmN1cnJlbnQudmFsdWVbY3VycmVudF9pbmRleF0gPT0gJyAnIHx8IFxyXG5cdFx0XHRcdG9iai5jb250ZW50UmVmLmN1cnJlbnQudmFsdWVbY3VycmVudF9pbmRleF0gPT0gJ1xcdCcgfHxcclxuXHRcdFx0XHRvYmouY29udGVudFJlZi5jdXJyZW50LnZhbHVlW2N1cnJlbnRfaW5kZXhdID09ICdcXG4nKVxyXG5cdFx0XHR7XHJcblx0XHRcdFx0LS1jdXJyZW50X2luZGV4XHJcblx0XHRcdFx0YnJlYWs7XHJcblx0XHRcdH1cclxuXHRcdFx0KytjdXJyZW50X2luZGV4XHJcblx0XHR9XHJcblx0XHR2YXIgdGFnX2VuZCA9IGN1cnJlbnRfaW5kZXhcclxuXHJcblx0XHR3aGlsZSAoY3VycmVudF9pbmRleCA+PSAwKVxyXG5cdFx0e1xyXG5cdFx0XHRpZiAob2JqLmNvbnRlbnRSZWYuY3VycmVudC52YWx1ZVtjdXJyZW50X2luZGV4XSA9PSAnQCcpXHJcblx0XHRcdHtcclxuXHRcdFx0XHRjdXJyZW50X2luZGV4LS07XHJcblx0XHRcdFx0YnJlYWs7XHJcblx0XHRcdH1cclxuXHRcdFx0aWYgKG9iai5jb250ZW50UmVmLmN1cnJlbnQudmFsdWVbY3VycmVudF9pbmRleF0gPT0gJyMnKVxyXG5cdFx0XHR7XHJcblx0XHRcdFx0Y3VycmVudF9pbmRleC0tO1xyXG5cdFx0XHRcdGJyZWFrO1xyXG5cdFx0XHR9XHJcblx0XHRcdGlmIChvYmouYXJ0aXN0U2VhcmNoICYmIG9iai5jb250ZW50UmVmLmN1cnJlbnQudmFsdWVbY3VycmVudF9pbmRleF0gPT0gJy0nKVxyXG5cdFx0XHR7XHJcblx0XHRcdFx0Y3VycmVudF9pbmRleC0tO1xyXG5cdFx0XHRcdGJyZWFrO1xyXG5cdFx0XHR9XHJcblx0XHRcdGN1cnJlbnRfaW5kZXgtLTtcclxuXHRcdH1cclxuXHJcblx0XHRpZiAob2JqLmFydGlzdFNlYXJjaClcclxuXHRcdHtcclxuXHRcdFx0dmFyIGFydGlzdF9zdGFydCA9IGN1cnJlbnRfaW5kZXhcclxuXHRcdFx0d2hpbGUoYXJ0aXN0X3N0YXJ0ID49IDApXHJcblx0XHRcdHtcclxuXHRcdFx0XHRpZiAob2JqLmNvbnRlbnRSZWYuY3VycmVudC52YWx1ZVthcnRpc3Rfc3RhcnRdID09ICcjJylcclxuXHRcdFx0XHR7XHJcblx0XHRcdFx0XHRicmVhaztcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0YXJ0aXN0X3N0YXJ0LS07XHJcblx0XHRcdH1cclxuXHRcdFx0dmFyIGFydGlzdF9yZXBsYWNlZCA9IHV0aWxzLnJlcGxhY2VBbGwoZS50YXJnZXQudGV4dENvbnRlbnQuc3Vic3RyaW5nKDEsIGUudGFyZ2V0LnRleHRDb250ZW50Lmxlbmd0aC0xKSwgJyAnLCAnXycpXHJcblx0XHRcdG9iai5jb250ZW50UmVmLmN1cnJlbnQudmFsdWUgPSBvYmouY29udGVudFJlZi5jdXJyZW50LnZhbHVlLnN1YnN0cmluZygwLCBjdXJyZW50X2luZGV4KzEpICsgXCItXCIgKyBhcnRpc3RfcmVwbGFjZWQgKyBvYmouY29udGVudFJlZi5jdXJyZW50LnZhbHVlLnN1YnN0cmluZyh0YWdfZW5kKzEsIG9iai5jb250ZW50UmVmLmN1cnJlbnQudmFsdWUubGVuZ3RoKVxyXG5cdFx0XHR2YXIgdGFnX3R5cGUgPSAyXHJcblx0XHRcdGlmIChvYmouc29uZ3NfYW5kX2FsYnVtc1twYXJzZUludChlLnRhcmdldC5pZCldLnNvbmcgPT0gXCJOT19TT05HX0FMQlVNX09OTFlcIilcclxuXHRcdFx0e1xyXG5cdFx0XHRcdHRhZ190eXBlID0gM1xyXG5cdFx0XHR9XHJcblx0XHRcdG9iai5wb3RlbnRpYWxfdGFnID0gdXRpbHMucmVwbGFjZVRhZyhvYmoucG90ZW50aWFsX3RhZ3MsIFtvYmouc29uZ3NfYW5kX2FsYnVtc1twYXJzZUludChlLnRhcmdldC5pZCldLCBhcnRpc3Rfc3RhcnQsIGN1cnJlbnRfaW5kZXggKyBhcnRpc3RfcmVwbGFjZWQubGVuZ3RoICsgMSwgdGFnX3R5cGVdKTtcclxuXHRcdH1cclxuXHRcdGVsc2UgaWYgKG9iai5hcnRpc3RGbGFnKVxyXG5cdFx0e1xyXG5cdFx0XHR2YXIgYXJ0aXN0X3JlcGxhY2VkID0gdXRpbHMucmVwbGFjZUFsbChlLnRhcmdldC50ZXh0Q29udGVudC5zdWJzdHJpbmcoMSwgZS50YXJnZXQudGV4dENvbnRlbnQubGVuZ3RoLTEpLCAnICcsICdfJylcclxuXHRcdFx0b2JqLmNvbnRlbnRSZWYuY3VycmVudC52YWx1ZSA9IG9iai5jb250ZW50UmVmLmN1cnJlbnQudmFsdWUuc3Vic3RyaW5nKDAsIGN1cnJlbnRfaW5kZXgrMSkgKyBcIiNcIiArIGFydGlzdF9yZXBsYWNlZCArIG9iai5jb250ZW50UmVmLmN1cnJlbnQudmFsdWUuc3Vic3RyaW5nKHRhZ19lbmQrMSwgb2JqLmNvbnRlbnRSZWYuY3VycmVudC52YWx1ZS5sZW5ndGgpXHJcblx0XHRcdG9iai5wb3RlbnRpYWxfdGFncyA9IHV0aWxzLnJlcGxhY2VUYWcob2JqLnBvdGVudGlhbF90YWdzLCBbb2JqLmFydGlzdHNbcGFyc2VJbnQoZS50YXJnZXQuaWQpXSwgY3VycmVudF9pbmRleCArIDEsIGN1cnJlbnRfaW5kZXggKyBhcnRpc3RfcmVwbGFjZWQubGVuZ3RoICsgMSwgMV0pO1xyXG5cclxuXHRcdH1cclxuXHRcdGVsc2VcclxuXHRcdHtcclxuXHRcdFx0dmFyIGFydGlzdF9yZXBsYWNlZCA9IHV0aWxzLnJlcGxhY2VBbGwoZS50YXJnZXQudGV4dENvbnRlbnQuc3Vic3RyaW5nKDEsIGUudGFyZ2V0LnRleHRDb250ZW50Lmxlbmd0aC0xKSwgJyAnLCAnXycpXHJcblx0XHRcdG9iai5jb250ZW50UmVmLmN1cnJlbnQudmFsdWUgPSBvYmouY29udGVudFJlZi5jdXJyZW50LnZhbHVlLnN1YnN0cmluZygwLCBjdXJyZW50X2luZGV4KzEpICsgXCJAXCIgKyBhcnRpc3RfcmVwbGFjZWQgKyBvYmouY29udGVudFJlZi5jdXJyZW50LnZhbHVlLnN1YnN0cmluZyh0YWdfZW5kKzEsIG9iai5jb250ZW50UmVmLmN1cnJlbnQudmFsdWUubGVuZ3RoKVxyXG5cdFx0XHRvYmoucG90ZW50aWFsX3RhZ3MgPSB1dGlscy5yZXBsYWNlVGFnKG9iai5wb3RlbnRpYWxfdGFncywgW29iai51c2Vyc1twYXJzZUludChlLnRhcmdldC5pZCldLCBjdXJyZW50X2luZGV4ICsgMSwgY3VycmVudF9pbmRleCArIGFydGlzdF9yZXBsYWNlZC5sZW5ndGggKyAxLCAwXSk7XHJcblxyXG5cdFx0fVxyXG5cdFx0b2JqLmNvbnRlbnRSZWYuY3VycmVudC5zZWxlY3Rpb25TdGFydCA9IGN1cnJlbnRfaW5kZXggKyBlLnRhcmdldC50ZXh0Q29udGVudC5sZW5ndGhcclxuXHRcdG9iai5jb250ZW50UmVmLmN1cnJlbnQuc2VsZWN0aW9uRW5kID0gY3VycmVudF9pbmRleCArIGUudGFyZ2V0LnRleHRDb250ZW50Lmxlbmd0aFxyXG5cclxuXHRcdG9iai5sYXN0Q29udGVudFNpemUgPSBvYmouY29udGVudFJlZi5jdXJyZW50LnZhbHVlLmxlbmd0aFxyXG5cclxuXHRcdG9iai5jb250ZW50UmVmLmN1cnJlbnQuZm9jdXMoKVxyXG5cdFx0b2JqLmZvcmNlVXBkYXRlKClcclxuXHR9LFxyXG5cclxuXHRmb3JtYXRDb250ZW50IDogZnVuY3Rpb24gKGNvbnRlbnQsIHJhd190YWdzKVxyXG5cdHtcclxuXHRcdHZhciBjb250ZW50X2RpdiA9IFtdXHJcblx0XHR2YXIgdGFnc1xyXG5cdFx0dmFyIHRhZ19pbmRpY2VzID0gW11cclxuXHRcdGlmIChyYXdfdGFncyAhPSB1bmRlZmluZWQgJiYgcmF3X3RhZ3MgIT0gbnVsbClcclxuXHRcdHtcclxuXHRcdFx0dGFncyA9IEpTT04ucGFyc2UocmF3X3RhZ3MpXHJcblx0XHRcdHRhZ19pbmRpY2VzID0gT2JqZWN0LmtleXModGFncylcclxuXHRcdFx0dmFyIHJlbWFpbmluZ19pbmRpY2VzID0gW11cclxuXHRcdFx0Zm9yICh2YXIgaW5kZXggb2YgdGFnX2luZGljZXMpXHJcblx0XHRcdHtcclxuXHRcdFx0XHRpZiAodGFnc1tpbmRleF0ubGVuZ3RoIDwgNSlcclxuXHRcdFx0XHR7XHJcblx0XHRcdFx0XHRjb250aW51ZVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHRyZW1haW5pbmdfaW5kaWNlcy5wdXNoKGluZGV4KVxyXG5cdFx0XHR9XHJcblx0XHRcdHRhZ19pbmRpY2VzID0gcmVtYWluaW5nX2luZGljZXNcclxuXHRcdFx0dGFnX2luZGljZXMuc29ydChcclxuXHRcdFx0XHRcdGZ1bmN0aW9uKGEsIGIpe1xyXG5cdFx0XHRcdCAgICBcdGlmIChwYXJzZUludChhKSA+IHBhcnNlSW50KGIpKVxyXG5cdFx0XHRcdCAgICAgICAge1xyXG5cdFx0XHRcdCAgICAgICAgXHRyZXR1cm4gMTtcclxuXHRcdFx0XHQgICAgICAgIH1cclxuXHRcdFx0XHQgICAgICAgIHJldHVybiAtMTtcclxuXHRcdFx0XHRcdH0pXHJcblx0XHRcdFx0ICAgIFx0XHRcclxuXHRcdH0gXHJcblx0XHR2YXIgdG90YWxfaW5kZXggPSAwO1xyXG5cdFx0Y29udGVudC5zcGxpdCgnXFxuJykubWFwKChpdGVtLCBpKSA9PiB7XHJcblx0XHRcdHZhciBjdXJyZW50X3RleHQgPSBcIlwiXHJcblx0XHRcdHZhciB0YWdfaW5kZXggPSAwO1xyXG5cdFx0XHR2YXIgYWxsX2NvbnRlbnQgPSBbXVxyXG5cdFx0XHR2YXIgaW5kZXggPSAwO1xyXG5cdFx0XHR3aGlsZSAodGFnX2luZGljZXNbMF0gPCB0b3RhbF9pbmRleCArIGl0ZW0ubGVuZ3RoKVxyXG5cdFx0XHR7XHJcblx0XHRcdFx0dmFyIGJlZm9yZV90ZXh0ID0gaXRlbS5zdWJzdHJpbmcoaW5kZXgsIHRhZ19pbmRpY2VzWzBdIC0gdG90YWxfaW5kZXgpXHJcblx0XHRcdFx0dmFyIGN1cnJlbnRfaW5kZXggPSB0YWdfaW5kaWNlc1swXSAtIHRvdGFsX2luZGV4O1xyXG5cdFx0XHRcdHZhciB0YWcgPSBcIlwiXHJcblx0XHRcdFx0d2hpbGUgKGN1cnJlbnRfaW5kZXggPCBpdGVtLmxlbmd0aClcclxuXHRcdFx0XHR7XHJcblx0XHRcdFx0XHRpZiAoaXRlbVtjdXJyZW50X2luZGV4XSA9PSAnICcgfHwgXHJcblx0XHRcdFx0XHRcdGl0ZW1bY3VycmVudF9pbmRleF0gPT0gJ1xcdCcgfHxcclxuXHRcdFx0XHRcdFx0aXRlbVtjdXJyZW50X2luZGV4XSA9PSAnXFxuJylcclxuXHRcdFx0XHRcdHtcclxuXHRcdFx0XHRcdFx0YnJlYWtcclxuXHRcdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0XHR0YWcgKz0gaXRlbVtjdXJyZW50X2luZGV4XVxyXG5cdFx0XHRcdFx0KytjdXJyZW50X2luZGV4XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdGN1cnJlbnRfdGV4dCA9IFwiXCJcclxuXHRcdFx0XHRpbmRleCA9IGN1cnJlbnRfaW5kZXhcclxuXHRcdFx0XHRhbGxfY29udGVudC5wdXNoKGJlZm9yZV90ZXh0KVxyXG5cdFx0XHRcdGFsbF9jb250ZW50LnB1c2goPGEga2V5ID0ge2N1cnJlbnRfaW5kZXh9IGhyZWYgPSB7dGFnc1t0YWdfaW5kaWNlc1swXV1bNF19Pnt0YWd9PC9hPilcclxuXHRcdFx0XHR0YWdfaW5kaWNlcy5zcGxpY2UoMCwxKTtcclxuXHRcdFx0fVxyXG5cdFx0XHR0b3RhbF9pbmRleCArPSBpdGVtLmxlbmd0aCArIDFcclxuXHRcdFx0YWxsX2NvbnRlbnQucHVzaChpdGVtLnN1YnN0cmluZyhpbmRleCwgaXRlbS5sZW5ndGgpKVxyXG5cdFx0XHQvL2NvbnRlbnRfZGl2LnB1c2goPHAgc3R5bGUgPSB7e319IGtleT17aX0+e2FsbF9jb250ZW50fTwvcD4pO1xyXG5cdFx0XHQvL2NvbnRlbnRfZGl2LnB1c2goPGRpdiBzdHlsZSA9IHt7bWluSGVpZ2h0OicyMy42N3B4J319IGtleT17aX0+e2FsbF9jb250ZW50fTwvZGl2Pik7XHJcblx0XHRcdGNvbnRlbnRfZGl2LnB1c2goYWxsX2NvbnRlbnQpO1xyXG5cdFx0XHRjb250ZW50X2Rpdi5wdXNoKDxiciBrZXkgPSB7aX0vPilcclxuXHRcdFx0Ly9jb250ZW50X2Rpdi5wdXNoKFwiXFxuXCIpO1xyXG5cdFx0fSlcclxuXHRcdHJldHVybiBjb250ZW50X2RpdlxyXG5cdH1cclxufSIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE0LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIFNpbWlsYXIgdG8gaW52YXJpYW50IGJ1dCBvbmx5IGxvZ3MgYSB3YXJuaW5nIGlmIHRoZSBjb25kaXRpb24gaXMgbm90IG1ldC5cbiAqIFRoaXMgY2FuIGJlIHVzZWQgdG8gbG9nIGlzc3VlcyBpbiBkZXZlbG9wbWVudCBlbnZpcm9ubWVudHMgaW4gY3JpdGljYWxcbiAqIHBhdGhzLiBSZW1vdmluZyB0aGUgbG9nZ2luZyBjb2RlIGZvciBwcm9kdWN0aW9uIGVudmlyb25tZW50cyB3aWxsIGtlZXAgdGhlXG4gKiBzYW1lIGxvZ2ljIGFuZCBmb2xsb3cgdGhlIHNhbWUgY29kZSBwYXRocy5cbiAqL1xuXG52YXIgX19ERVZfXyA9IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbic7XG5cbnZhciB3YXJuaW5nID0gZnVuY3Rpb24oKSB7fTtcblxuaWYgKF9fREVWX18pIHtcbiAgdmFyIHByaW50V2FybmluZyA9IGZ1bmN0aW9uIHByaW50V2FybmluZyhmb3JtYXQsIGFyZ3MpIHtcbiAgICB2YXIgbGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICBhcmdzID0gbmV3IEFycmF5KGxlbiA+IDIgPyBsZW4gLSAyIDogMCk7XG4gICAgZm9yICh2YXIga2V5ID0gMjsga2V5IDwgbGVuOyBrZXkrKykge1xuICAgICAgYXJnc1trZXkgLSAyXSA9IGFyZ3VtZW50c1trZXldO1xuICAgIH1cbiAgICB2YXIgYXJnSW5kZXggPSAwO1xuICAgIHZhciBtZXNzYWdlID0gJ1dhcm5pbmc6ICcgK1xuICAgICAgZm9ybWF0LnJlcGxhY2UoLyVzL2csIGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gYXJnc1thcmdJbmRleCsrXTtcbiAgICAgIH0pO1xuICAgIGlmICh0eXBlb2YgY29uc29sZSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IobWVzc2FnZSk7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAvLyAtLS0gV2VsY29tZSB0byBkZWJ1Z2dpbmcgUmVhY3QgLS0tXG4gICAgICAvLyBUaGlzIGVycm9yIHdhcyB0aHJvd24gYXMgYSBjb252ZW5pZW5jZSBzbyB0aGF0IHlvdSBjYW4gdXNlIHRoaXMgc3RhY2tcbiAgICAgIC8vIHRvIGZpbmQgdGhlIGNhbGxzaXRlIHRoYXQgY2F1c2VkIHRoaXMgd2FybmluZyB0byBmaXJlLlxuICAgICAgdGhyb3cgbmV3IEVycm9yKG1lc3NhZ2UpO1xuICAgIH0gY2F0Y2ggKHgpIHt9XG4gIH1cblxuICB3YXJuaW5nID0gZnVuY3Rpb24oY29uZGl0aW9uLCBmb3JtYXQsIGFyZ3MpIHtcbiAgICB2YXIgbGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICBhcmdzID0gbmV3IEFycmF5KGxlbiA+IDIgPyBsZW4gLSAyIDogMCk7XG4gICAgZm9yICh2YXIga2V5ID0gMjsga2V5IDwgbGVuOyBrZXkrKykge1xuICAgICAgYXJnc1trZXkgLSAyXSA9IGFyZ3VtZW50c1trZXldO1xuICAgIH1cbiAgICBpZiAoZm9ybWF0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgICAnYHdhcm5pbmcoY29uZGl0aW9uLCBmb3JtYXQsIC4uLmFyZ3MpYCByZXF1aXJlcyBhIHdhcm5pbmcgJyArXG4gICAgICAgICAgJ21lc3NhZ2UgYXJndW1lbnQnXG4gICAgICApO1xuICAgIH1cbiAgICBpZiAoIWNvbmRpdGlvbikge1xuICAgICAgcHJpbnRXYXJuaW5nLmFwcGx5KG51bGwsIFtmb3JtYXRdLmNvbmNhdChhcmdzKSk7XG4gICAgfVxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHdhcm5pbmc7XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBVc2UgaW52YXJpYW50KCkgdG8gYXNzZXJ0IHN0YXRlIHdoaWNoIHlvdXIgcHJvZ3JhbSBhc3N1bWVzIHRvIGJlIHRydWUuXG4gKlxuICogUHJvdmlkZSBzcHJpbnRmLXN0eWxlIGZvcm1hdCAob25seSAlcyBpcyBzdXBwb3J0ZWQpIGFuZCBhcmd1bWVudHNcbiAqIHRvIHByb3ZpZGUgaW5mb3JtYXRpb24gYWJvdXQgd2hhdCBicm9rZSBhbmQgd2hhdCB5b3Ugd2VyZVxuICogZXhwZWN0aW5nLlxuICpcbiAqIFRoZSBpbnZhcmlhbnQgbWVzc2FnZSB3aWxsIGJlIHN0cmlwcGVkIGluIHByb2R1Y3Rpb24sIGJ1dCB0aGUgaW52YXJpYW50XG4gKiB3aWxsIHJlbWFpbiB0byBlbnN1cmUgbG9naWMgZG9lcyBub3QgZGlmZmVyIGluIHByb2R1Y3Rpb24uXG4gKi9cblxudmFyIGludmFyaWFudCA9IGZ1bmN0aW9uKGNvbmRpdGlvbiwgZm9ybWF0LCBhLCBiLCBjLCBkLCBlLCBmKSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgaWYgKGZvcm1hdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ2ludmFyaWFudCByZXF1aXJlcyBhbiBlcnJvciBtZXNzYWdlIGFyZ3VtZW50Jyk7XG4gICAgfVxuICB9XG5cbiAgaWYgKCFjb25kaXRpb24pIHtcbiAgICB2YXIgZXJyb3I7XG4gICAgaWYgKGZvcm1hdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICBlcnJvciA9IG5ldyBFcnJvcihcbiAgICAgICAgJ01pbmlmaWVkIGV4Y2VwdGlvbiBvY2N1cnJlZDsgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50ICcgK1xuICAgICAgICAnZm9yIHRoZSBmdWxsIGVycm9yIG1lc3NhZ2UgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy4nXG4gICAgICApO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgYXJncyA9IFthLCBiLCBjLCBkLCBlLCBmXTtcbiAgICAgIHZhciBhcmdJbmRleCA9IDA7XG4gICAgICBlcnJvciA9IG5ldyBFcnJvcihcbiAgICAgICAgZm9ybWF0LnJlcGxhY2UoLyVzL2csIGZ1bmN0aW9uKCkgeyByZXR1cm4gYXJnc1thcmdJbmRleCsrXTsgfSlcbiAgICAgICk7XG4gICAgICBlcnJvci5uYW1lID0gJ0ludmFyaWFudCBWaW9sYXRpb24nO1xuICAgIH1cblxuICAgIGVycm9yLmZyYW1lc1RvUG9wID0gMTsgLy8gd2UgZG9uJ3QgY2FyZSBhYm91dCBpbnZhcmlhbnQncyBvd24gZnJhbWVcbiAgICB0aHJvdyBlcnJvcjtcbiAgfVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBpbnZhcmlhbnQ7XG4iLCIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIGNoZWNrRENFKCkge1xuICAvKiBnbG9iYWwgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fICovXG4gIGlmIChcbiAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fID09PSAndW5kZWZpbmVkJyB8fFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UgIT09ICdmdW5jdGlvbidcbiAgKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgLy8gVGhpcyBicmFuY2ggaXMgdW5yZWFjaGFibGUgYmVjYXVzZSB0aGlzIGZ1bmN0aW9uIGlzIG9ubHkgY2FsbGVkXG4gICAgLy8gaW4gcHJvZHVjdGlvbiwgYnV0IHRoZSBjb25kaXRpb24gaXMgdHJ1ZSBvbmx5IGluIGRldmVsb3BtZW50LlxuICAgIC8vIFRoZXJlZm9yZSBpZiB0aGUgYnJhbmNoIGlzIHN0aWxsIGhlcmUsIGRlYWQgY29kZSBlbGltaW5hdGlvbiB3YXNuJ3RcbiAgICAvLyBwcm9wZXJseSBhcHBsaWVkLlxuICAgIC8vIERvbid0IGNoYW5nZSB0aGUgbWVzc2FnZS4gUmVhY3QgRGV2VG9vbHMgcmVsaWVzIG9uIGl0LiBBbHNvIG1ha2Ugc3VyZVxuICAgIC8vIHRoaXMgbWVzc2FnZSBkb2Vzbid0IG9jY3VyIGVsc2V3aGVyZSBpbiB0aGlzIGZ1bmN0aW9uLCBvciBpdCB3aWxsIGNhdXNlXG4gICAgLy8gYSBmYWxzZSBwb3NpdGl2ZS5cbiAgICB0aHJvdyBuZXcgRXJyb3IoJ15fXicpO1xuICB9XG4gIHRyeSB7XG4gICAgLy8gVmVyaWZ5IHRoYXQgdGhlIGNvZGUgYWJvdmUgaGFzIGJlZW4gZGVhZCBjb2RlIGVsaW1pbmF0ZWQgKERDRSdkKS5cbiAgICBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UoY2hlY2tEQ0UpO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICAvLyBEZXZUb29scyBzaG91bGRuJ3QgY3Jhc2ggUmVhY3QsIG5vIG1hdHRlciB3aGF0LlxuICAgIC8vIFdlIHNob3VsZCBzdGlsbCByZXBvcnQgaW4gY2FzZSB3ZSBicmVhayB0aGlzIGNvZGUuXG4gICAgY29uc29sZS5lcnJvcihlcnIpO1xuICB9XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIC8vIERDRSBjaGVjayBzaG91bGQgaGFwcGVuIGJlZm9yZSBSZWFjdERPTSBidW5kbGUgZXhlY3V0ZXMgc28gdGhhdFxuICAvLyBEZXZUb29scyBjYW4gcmVwb3J0IGJhZCBtaW5pZmljYXRpb24gZHVyaW5nIGluamVjdGlvbi5cbiAgY2hlY2tEQ0UoKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtZG9tLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvKlxub2JqZWN0LWFzc2lnblxuKGMpIFNpbmRyZSBTb3JodXNcbkBsaWNlbnNlIE1JVFxuKi9cblxuJ3VzZSBzdHJpY3QnO1xuLyogZXNsaW50LWRpc2FibGUgbm8tdW51c2VkLXZhcnMgKi9cbnZhciBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzO1xudmFyIGhhc093blByb3BlcnR5ID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcbnZhciBwcm9wSXNFbnVtZXJhYmxlID0gT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZTtcblxuZnVuY3Rpb24gdG9PYmplY3QodmFsKSB7XG5cdGlmICh2YWwgPT09IG51bGwgfHwgdmFsID09PSB1bmRlZmluZWQpIHtcblx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKCdPYmplY3QuYXNzaWduIGNhbm5vdCBiZSBjYWxsZWQgd2l0aCBudWxsIG9yIHVuZGVmaW5lZCcpO1xuXHR9XG5cblx0cmV0dXJuIE9iamVjdCh2YWwpO1xufVxuXG5mdW5jdGlvbiBzaG91bGRVc2VOYXRpdmUoKSB7XG5cdHRyeSB7XG5cdFx0aWYgKCFPYmplY3QuYXNzaWduKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gRGV0ZWN0IGJ1Z2d5IHByb3BlcnR5IGVudW1lcmF0aW9uIG9yZGVyIGluIG9sZGVyIFY4IHZlcnNpb25zLlxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9NDExOFxuXHRcdHZhciB0ZXN0MSA9IG5ldyBTdHJpbmcoJ2FiYycpOyAgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1uZXctd3JhcHBlcnNcblx0XHR0ZXN0MVs1XSA9ICdkZSc7XG5cdFx0aWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRlc3QxKVswXSA9PT0gJzUnKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzA1NlxuXHRcdHZhciB0ZXN0MiA9IHt9O1xuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgMTA7IGkrKykge1xuXHRcdFx0dGVzdDJbJ18nICsgU3RyaW5nLmZyb21DaGFyQ29kZShpKV0gPSBpO1xuXHRcdH1cblx0XHR2YXIgb3JkZXIyID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGVzdDIpLm1hcChmdW5jdGlvbiAobikge1xuXHRcdFx0cmV0dXJuIHRlc3QyW25dO1xuXHRcdH0pO1xuXHRcdGlmIChvcmRlcjIuam9pbignJykgIT09ICcwMTIzNDU2Nzg5Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMwNTZcblx0XHR2YXIgdGVzdDMgPSB7fTtcblx0XHQnYWJjZGVmZ2hpamtsbW5vcHFyc3QnLnNwbGl0KCcnKS5mb3JFYWNoKGZ1bmN0aW9uIChsZXR0ZXIpIHtcblx0XHRcdHRlc3QzW2xldHRlcl0gPSBsZXR0ZXI7XG5cdFx0fSk7XG5cdFx0aWYgKE9iamVjdC5rZXlzKE9iamVjdC5hc3NpZ24oe30sIHRlc3QzKSkuam9pbignJykgIT09XG5cdFx0XHRcdCdhYmNkZWZnaGlqa2xtbm9wcXJzdCcpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdHJ1ZTtcblx0fSBjYXRjaCAoZXJyKSB7XG5cdFx0Ly8gV2UgZG9uJ3QgZXhwZWN0IGFueSBvZiB0aGUgYWJvdmUgdG8gdGhyb3csIGJ1dCBiZXR0ZXIgdG8gYmUgc2FmZS5cblx0XHRyZXR1cm4gZmFsc2U7XG5cdH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzaG91bGRVc2VOYXRpdmUoKSA/IE9iamVjdC5hc3NpZ24gOiBmdW5jdGlvbiAodGFyZ2V0LCBzb3VyY2UpIHtcblx0dmFyIGZyb207XG5cdHZhciB0byA9IHRvT2JqZWN0KHRhcmdldCk7XG5cdHZhciBzeW1ib2xzO1xuXG5cdGZvciAodmFyIHMgPSAxOyBzIDwgYXJndW1lbnRzLmxlbmd0aDsgcysrKSB7XG5cdFx0ZnJvbSA9IE9iamVjdChhcmd1bWVudHNbc10pO1xuXG5cdFx0Zm9yICh2YXIga2V5IGluIGZyb20pIHtcblx0XHRcdGlmIChoYXNPd25Qcm9wZXJ0eS5jYWxsKGZyb20sIGtleSkpIHtcblx0XHRcdFx0dG9ba2V5XSA9IGZyb21ba2V5XTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRpZiAoZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7XG5cdFx0XHRzeW1ib2xzID0gZ2V0T3duUHJvcGVydHlTeW1ib2xzKGZyb20pO1xuXHRcdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBzeW1ib2xzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRcdGlmIChwcm9wSXNFbnVtZXJhYmxlLmNhbGwoZnJvbSwgc3ltYm9sc1tpXSkpIHtcblx0XHRcdFx0XHR0b1tzeW1ib2xzW2ldXSA9IGZyb21bc3ltYm9sc1tpXV07XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gdG87XG59O1xuIiwidmFyIGlzYXJyYXkgPSByZXF1aXJlKCdpc2FycmF5JylcblxuLyoqXG4gKiBFeHBvc2UgYHBhdGhUb1JlZ2V4cGAuXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gcGF0aFRvUmVnZXhwXG5tb2R1bGUuZXhwb3J0cy5wYXJzZSA9IHBhcnNlXG5tb2R1bGUuZXhwb3J0cy5jb21waWxlID0gY29tcGlsZVxubW9kdWxlLmV4cG9ydHMudG9rZW5zVG9GdW5jdGlvbiA9IHRva2Vuc1RvRnVuY3Rpb25cbm1vZHVsZS5leHBvcnRzLnRva2Vuc1RvUmVnRXhwID0gdG9rZW5zVG9SZWdFeHBcblxuLyoqXG4gKiBUaGUgbWFpbiBwYXRoIG1hdGNoaW5nIHJlZ2V4cCB1dGlsaXR5LlxuICpcbiAqIEB0eXBlIHtSZWdFeHB9XG4gKi9cbnZhciBQQVRIX1JFR0VYUCA9IG5ldyBSZWdFeHAoW1xuICAvLyBNYXRjaCBlc2NhcGVkIGNoYXJhY3RlcnMgdGhhdCB3b3VsZCBvdGhlcndpc2UgYXBwZWFyIGluIGZ1dHVyZSBtYXRjaGVzLlxuICAvLyBUaGlzIGFsbG93cyB0aGUgdXNlciB0byBlc2NhcGUgc3BlY2lhbCBjaGFyYWN0ZXJzIHRoYXQgd29uJ3QgdHJhbnNmb3JtLlxuICAnKFxcXFxcXFxcLiknLFxuICAvLyBNYXRjaCBFeHByZXNzLXN0eWxlIHBhcmFtZXRlcnMgYW5kIHVuLW5hbWVkIHBhcmFtZXRlcnMgd2l0aCBhIHByZWZpeFxuICAvLyBhbmQgb3B0aW9uYWwgc3VmZml4ZXMuIE1hdGNoZXMgYXBwZWFyIGFzOlxuICAvL1xuICAvLyBcIi86dGVzdChcXFxcZCspP1wiID0+IFtcIi9cIiwgXCJ0ZXN0XCIsIFwiXFxkK1wiLCB1bmRlZmluZWQsIFwiP1wiLCB1bmRlZmluZWRdXG4gIC8vIFwiL3JvdXRlKFxcXFxkKylcIiAgPT4gW3VuZGVmaW5lZCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIFwiXFxkK1wiLCB1bmRlZmluZWQsIHVuZGVmaW5lZF1cbiAgLy8gXCIvKlwiICAgICAgICAgICAgPT4gW1wiL1wiLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIFwiKlwiXVxuICAnKFtcXFxcLy5dKT8oPzooPzpcXFxcOihcXFxcdyspKD86XFxcXCgoKD86XFxcXFxcXFwufFteXFxcXFxcXFwoKV0pKylcXFxcKSk/fFxcXFwoKCg/OlxcXFxcXFxcLnxbXlxcXFxcXFxcKCldKSspXFxcXCkpKFsrKj9dKT98KFxcXFwqKSknXG5dLmpvaW4oJ3wnKSwgJ2cnKVxuXG4vKipcbiAqIFBhcnNlIGEgc3RyaW5nIGZvciB0aGUgcmF3IHRva2Vucy5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9ICBzdHJcbiAqIEBwYXJhbSAge09iamVjdD19IG9wdGlvbnNcbiAqIEByZXR1cm4geyFBcnJheX1cbiAqL1xuZnVuY3Rpb24gcGFyc2UgKHN0ciwgb3B0aW9ucykge1xuICB2YXIgdG9rZW5zID0gW11cbiAgdmFyIGtleSA9IDBcbiAgdmFyIGluZGV4ID0gMFxuICB2YXIgcGF0aCA9ICcnXG4gIHZhciBkZWZhdWx0RGVsaW1pdGVyID0gb3B0aW9ucyAmJiBvcHRpb25zLmRlbGltaXRlciB8fCAnLydcbiAgdmFyIHJlc1xuXG4gIHdoaWxlICgocmVzID0gUEFUSF9SRUdFWFAuZXhlYyhzdHIpKSAhPSBudWxsKSB7XG4gICAgdmFyIG0gPSByZXNbMF1cbiAgICB2YXIgZXNjYXBlZCA9IHJlc1sxXVxuICAgIHZhciBvZmZzZXQgPSByZXMuaW5kZXhcbiAgICBwYXRoICs9IHN0ci5zbGljZShpbmRleCwgb2Zmc2V0KVxuICAgIGluZGV4ID0gb2Zmc2V0ICsgbS5sZW5ndGhcblxuICAgIC8vIElnbm9yZSBhbHJlYWR5IGVzY2FwZWQgc2VxdWVuY2VzLlxuICAgIGlmIChlc2NhcGVkKSB7XG4gICAgICBwYXRoICs9IGVzY2FwZWRbMV1cbiAgICAgIGNvbnRpbnVlXG4gICAgfVxuXG4gICAgdmFyIG5leHQgPSBzdHJbaW5kZXhdXG4gICAgdmFyIHByZWZpeCA9IHJlc1syXVxuICAgIHZhciBuYW1lID0gcmVzWzNdXG4gICAgdmFyIGNhcHR1cmUgPSByZXNbNF1cbiAgICB2YXIgZ3JvdXAgPSByZXNbNV1cbiAgICB2YXIgbW9kaWZpZXIgPSByZXNbNl1cbiAgICB2YXIgYXN0ZXJpc2sgPSByZXNbN11cblxuICAgIC8vIFB1c2ggdGhlIGN1cnJlbnQgcGF0aCBvbnRvIHRoZSB0b2tlbnMuXG4gICAgaWYgKHBhdGgpIHtcbiAgICAgIHRva2Vucy5wdXNoKHBhdGgpXG4gICAgICBwYXRoID0gJydcbiAgICB9XG5cbiAgICB2YXIgcGFydGlhbCA9IHByZWZpeCAhPSBudWxsICYmIG5leHQgIT0gbnVsbCAmJiBuZXh0ICE9PSBwcmVmaXhcbiAgICB2YXIgcmVwZWF0ID0gbW9kaWZpZXIgPT09ICcrJyB8fCBtb2RpZmllciA9PT0gJyonXG4gICAgdmFyIG9wdGlvbmFsID0gbW9kaWZpZXIgPT09ICc/JyB8fCBtb2RpZmllciA9PT0gJyonXG4gICAgdmFyIGRlbGltaXRlciA9IHJlc1syXSB8fCBkZWZhdWx0RGVsaW1pdGVyXG4gICAgdmFyIHBhdHRlcm4gPSBjYXB0dXJlIHx8IGdyb3VwXG5cbiAgICB0b2tlbnMucHVzaCh7XG4gICAgICBuYW1lOiBuYW1lIHx8IGtleSsrLFxuICAgICAgcHJlZml4OiBwcmVmaXggfHwgJycsXG4gICAgICBkZWxpbWl0ZXI6IGRlbGltaXRlcixcbiAgICAgIG9wdGlvbmFsOiBvcHRpb25hbCxcbiAgICAgIHJlcGVhdDogcmVwZWF0LFxuICAgICAgcGFydGlhbDogcGFydGlhbCxcbiAgICAgIGFzdGVyaXNrOiAhIWFzdGVyaXNrLFxuICAgICAgcGF0dGVybjogcGF0dGVybiA/IGVzY2FwZUdyb3VwKHBhdHRlcm4pIDogKGFzdGVyaXNrID8gJy4qJyA6ICdbXicgKyBlc2NhcGVTdHJpbmcoZGVsaW1pdGVyKSArICddKz8nKVxuICAgIH0pXG4gIH1cblxuICAvLyBNYXRjaCBhbnkgY2hhcmFjdGVycyBzdGlsbCByZW1haW5pbmcuXG4gIGlmIChpbmRleCA8IHN0ci5sZW5ndGgpIHtcbiAgICBwYXRoICs9IHN0ci5zdWJzdHIoaW5kZXgpXG4gIH1cblxuICAvLyBJZiB0aGUgcGF0aCBleGlzdHMsIHB1c2ggaXQgb250byB0aGUgZW5kLlxuICBpZiAocGF0aCkge1xuICAgIHRva2Vucy5wdXNoKHBhdGgpXG4gIH1cblxuICByZXR1cm4gdG9rZW5zXG59XG5cbi8qKlxuICogQ29tcGlsZSBhIHN0cmluZyB0byBhIHRlbXBsYXRlIGZ1bmN0aW9uIGZvciB0aGUgcGF0aC5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9ICAgICAgICAgICAgIHN0clxuICogQHBhcmFtICB7T2JqZWN0PX0gICAgICAgICAgICBvcHRpb25zXG4gKiBAcmV0dXJuIHshZnVuY3Rpb24oT2JqZWN0PSwgT2JqZWN0PSl9XG4gKi9cbmZ1bmN0aW9uIGNvbXBpbGUgKHN0ciwgb3B0aW9ucykge1xuICByZXR1cm4gdG9rZW5zVG9GdW5jdGlvbihwYXJzZShzdHIsIG9wdGlvbnMpKVxufVxuXG4vKipcbiAqIFByZXR0aWVyIGVuY29kaW5nIG9mIFVSSSBwYXRoIHNlZ21lbnRzLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ31cbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gZW5jb2RlVVJJQ29tcG9uZW50UHJldHR5IChzdHIpIHtcbiAgcmV0dXJuIGVuY29kZVVSSShzdHIpLnJlcGxhY2UoL1tcXC8/I10vZywgZnVuY3Rpb24gKGMpIHtcbiAgICByZXR1cm4gJyUnICsgYy5jaGFyQ29kZUF0KDApLnRvU3RyaW5nKDE2KS50b1VwcGVyQ2FzZSgpXG4gIH0pXG59XG5cbi8qKlxuICogRW5jb2RlIHRoZSBhc3RlcmlzayBwYXJhbWV0ZXIuIFNpbWlsYXIgdG8gYHByZXR0eWAsIGJ1dCBhbGxvd3Mgc2xhc2hlcy5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9XG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGVuY29kZUFzdGVyaXNrIChzdHIpIHtcbiAgcmV0dXJuIGVuY29kZVVSSShzdHIpLnJlcGxhY2UoL1s/I10vZywgZnVuY3Rpb24gKGMpIHtcbiAgICByZXR1cm4gJyUnICsgYy5jaGFyQ29kZUF0KDApLnRvU3RyaW5nKDE2KS50b1VwcGVyQ2FzZSgpXG4gIH0pXG59XG5cbi8qKlxuICogRXhwb3NlIGEgbWV0aG9kIGZvciB0cmFuc2Zvcm1pbmcgdG9rZW5zIGludG8gdGhlIHBhdGggZnVuY3Rpb24uXG4gKi9cbmZ1bmN0aW9uIHRva2Vuc1RvRnVuY3Rpb24gKHRva2Vucykge1xuICAvLyBDb21waWxlIGFsbCB0aGUgdG9rZW5zIGludG8gcmVnZXhwcy5cbiAgdmFyIG1hdGNoZXMgPSBuZXcgQXJyYXkodG9rZW5zLmxlbmd0aClcblxuICAvLyBDb21waWxlIGFsbCB0aGUgcGF0dGVybnMgYmVmb3JlIGNvbXBpbGF0aW9uLlxuICBmb3IgKHZhciBpID0gMDsgaSA8IHRva2Vucy5sZW5ndGg7IGkrKykge1xuICAgIGlmICh0eXBlb2YgdG9rZW5zW2ldID09PSAnb2JqZWN0Jykge1xuICAgICAgbWF0Y2hlc1tpXSA9IG5ldyBSZWdFeHAoJ14oPzonICsgdG9rZW5zW2ldLnBhdHRlcm4gKyAnKSQnKVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbiAob2JqLCBvcHRzKSB7XG4gICAgdmFyIHBhdGggPSAnJ1xuICAgIHZhciBkYXRhID0gb2JqIHx8IHt9XG4gICAgdmFyIG9wdGlvbnMgPSBvcHRzIHx8IHt9XG4gICAgdmFyIGVuY29kZSA9IG9wdGlvbnMucHJldHR5ID8gZW5jb2RlVVJJQ29tcG9uZW50UHJldHR5IDogZW5jb2RlVVJJQ29tcG9uZW50XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRva2Vucy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIHRva2VuID0gdG9rZW5zW2ldXG5cbiAgICAgIGlmICh0eXBlb2YgdG9rZW4gPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHBhdGggKz0gdG9rZW5cblxuICAgICAgICBjb250aW51ZVxuICAgICAgfVxuXG4gICAgICB2YXIgdmFsdWUgPSBkYXRhW3Rva2VuLm5hbWVdXG4gICAgICB2YXIgc2VnbWVudFxuXG4gICAgICBpZiAodmFsdWUgPT0gbnVsbCkge1xuICAgICAgICBpZiAodG9rZW4ub3B0aW9uYWwpIHtcbiAgICAgICAgICAvLyBQcmVwZW5kIHBhcnRpYWwgc2VnbWVudCBwcmVmaXhlcy5cbiAgICAgICAgICBpZiAodG9rZW4ucGFydGlhbCkge1xuICAgICAgICAgICAgcGF0aCArPSB0b2tlbi5wcmVmaXhcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBjb250aW51ZVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gYmUgZGVmaW5lZCcpXG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKGlzYXJyYXkodmFsdWUpKSB7XG4gICAgICAgIGlmICghdG9rZW4ucmVwZWF0KSB7XG4gICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBub3QgcmVwZWF0LCBidXQgcmVjZWl2ZWQgYCcgKyBKU09OLnN0cmluZ2lmeSh2YWx1ZSkgKyAnYCcpXG4gICAgICAgIH1cblxuICAgICAgICBpZiAodmFsdWUubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgaWYgKHRva2VuLm9wdGlvbmFsKSB7XG4gICAgICAgICAgICBjb250aW51ZVxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBcIicgKyB0b2tlbi5uYW1lICsgJ1wiIHRvIG5vdCBiZSBlbXB0eScpXG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCB2YWx1ZS5sZW5ndGg7IGorKykge1xuICAgICAgICAgIHNlZ21lbnQgPSBlbmNvZGUodmFsdWVbal0pXG5cbiAgICAgICAgICBpZiAoIW1hdGNoZXNbaV0udGVzdChzZWdtZW50KSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgYWxsIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gbWF0Y2ggXCInICsgdG9rZW4ucGF0dGVybiArICdcIiwgYnV0IHJlY2VpdmVkIGAnICsgSlNPTi5zdHJpbmdpZnkoc2VnbWVudCkgKyAnYCcpXG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcGF0aCArPSAoaiA9PT0gMCA/IHRva2VuLnByZWZpeCA6IHRva2VuLmRlbGltaXRlcikgKyBzZWdtZW50XG4gICAgICAgIH1cblxuICAgICAgICBjb250aW51ZVxuICAgICAgfVxuXG4gICAgICBzZWdtZW50ID0gdG9rZW4uYXN0ZXJpc2sgPyBlbmNvZGVBc3Rlcmlzayh2YWx1ZSkgOiBlbmNvZGUodmFsdWUpXG5cbiAgICAgIGlmICghbWF0Y2hlc1tpXS50ZXN0KHNlZ21lbnQpKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gbWF0Y2ggXCInICsgdG9rZW4ucGF0dGVybiArICdcIiwgYnV0IHJlY2VpdmVkIFwiJyArIHNlZ21lbnQgKyAnXCInKVxuICAgICAgfVxuXG4gICAgICBwYXRoICs9IHRva2VuLnByZWZpeCArIHNlZ21lbnRcbiAgICB9XG5cbiAgICByZXR1cm4gcGF0aFxuICB9XG59XG5cbi8qKlxuICogRXNjYXBlIGEgcmVndWxhciBleHByZXNzaW9uIHN0cmluZy5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9IHN0clxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBlc2NhcGVTdHJpbmcgKHN0cikge1xuICByZXR1cm4gc3RyLnJlcGxhY2UoLyhbLisqPz1eIToke30oKVtcXF18XFwvXFxcXF0pL2csICdcXFxcJDEnKVxufVxuXG4vKipcbiAqIEVzY2FwZSB0aGUgY2FwdHVyaW5nIGdyb3VwIGJ5IGVzY2FwaW5nIHNwZWNpYWwgY2hhcmFjdGVycyBhbmQgbWVhbmluZy5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9IGdyb3VwXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGVzY2FwZUdyb3VwIChncm91cCkge1xuICByZXR1cm4gZ3JvdXAucmVwbGFjZSgvKFs9ITokXFwvKCldKS9nLCAnXFxcXCQxJylcbn1cblxuLyoqXG4gKiBBdHRhY2ggdGhlIGtleXMgYXMgYSBwcm9wZXJ0eSBvZiB0aGUgcmVnZXhwLlxuICpcbiAqIEBwYXJhbSAgeyFSZWdFeHB9IHJlXG4gKiBAcGFyYW0gIHtBcnJheX0gICBrZXlzXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiBhdHRhY2hLZXlzIChyZSwga2V5cykge1xuICByZS5rZXlzID0ga2V5c1xuICByZXR1cm4gcmVcbn1cblxuLyoqXG4gKiBHZXQgdGhlIGZsYWdzIGZvciBhIHJlZ2V4cCBmcm9tIHRoZSBvcHRpb25zLlxuICpcbiAqIEBwYXJhbSAge09iamVjdH0gb3B0aW9uc1xuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBmbGFncyAob3B0aW9ucykge1xuICByZXR1cm4gb3B0aW9ucy5zZW5zaXRpdmUgPyAnJyA6ICdpJ1xufVxuXG4vKipcbiAqIFB1bGwgb3V0IGtleXMgZnJvbSBhIHJlZ2V4cC5cbiAqXG4gKiBAcGFyYW0gIHshUmVnRXhwfSBwYXRoXG4gKiBAcGFyYW0gIHshQXJyYXl9ICBrZXlzXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiByZWdleHBUb1JlZ2V4cCAocGF0aCwga2V5cykge1xuICAvLyBVc2UgYSBuZWdhdGl2ZSBsb29rYWhlYWQgdG8gbWF0Y2ggb25seSBjYXB0dXJpbmcgZ3JvdXBzLlxuICB2YXIgZ3JvdXBzID0gcGF0aC5zb3VyY2UubWF0Y2goL1xcKCg/IVxcPykvZylcblxuICBpZiAoZ3JvdXBzKSB7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBncm91cHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGtleXMucHVzaCh7XG4gICAgICAgIG5hbWU6IGksXG4gICAgICAgIHByZWZpeDogbnVsbCxcbiAgICAgICAgZGVsaW1pdGVyOiBudWxsLFxuICAgICAgICBvcHRpb25hbDogZmFsc2UsXG4gICAgICAgIHJlcGVhdDogZmFsc2UsXG4gICAgICAgIHBhcnRpYWw6IGZhbHNlLFxuICAgICAgICBhc3RlcmlzazogZmFsc2UsXG4gICAgICAgIHBhdHRlcm46IG51bGxcbiAgICAgIH0pXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGF0dGFjaEtleXMocGF0aCwga2V5cylcbn1cblxuLyoqXG4gKiBUcmFuc2Zvcm0gYW4gYXJyYXkgaW50byBhIHJlZ2V4cC5cbiAqXG4gKiBAcGFyYW0gIHshQXJyYXl9ICBwYXRoXG4gKiBAcGFyYW0gIHtBcnJheX0gICBrZXlzXG4gKiBAcGFyYW0gIHshT2JqZWN0fSBvcHRpb25zXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiBhcnJheVRvUmVnZXhwIChwYXRoLCBrZXlzLCBvcHRpb25zKSB7XG4gIHZhciBwYXJ0cyA9IFtdXG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBwYXRoLmxlbmd0aDsgaSsrKSB7XG4gICAgcGFydHMucHVzaChwYXRoVG9SZWdleHAocGF0aFtpXSwga2V5cywgb3B0aW9ucykuc291cmNlKVxuICB9XG5cbiAgdmFyIHJlZ2V4cCA9IG5ldyBSZWdFeHAoJyg/OicgKyBwYXJ0cy5qb2luKCd8JykgKyAnKScsIGZsYWdzKG9wdGlvbnMpKVxuXG4gIHJldHVybiBhdHRhY2hLZXlzKHJlZ2V4cCwga2V5cylcbn1cblxuLyoqXG4gKiBDcmVhdGUgYSBwYXRoIHJlZ2V4cCBmcm9tIHN0cmluZyBpbnB1dC5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9ICBwYXRoXG4gKiBAcGFyYW0gIHshQXJyYXl9ICBrZXlzXG4gKiBAcGFyYW0gIHshT2JqZWN0fSBvcHRpb25zXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiBzdHJpbmdUb1JlZ2V4cCAocGF0aCwga2V5cywgb3B0aW9ucykge1xuICByZXR1cm4gdG9rZW5zVG9SZWdFeHAocGFyc2UocGF0aCwgb3B0aW9ucyksIGtleXMsIG9wdGlvbnMpXG59XG5cbi8qKlxuICogRXhwb3NlIGEgZnVuY3Rpb24gZm9yIHRha2luZyB0b2tlbnMgYW5kIHJldHVybmluZyBhIFJlZ0V4cC5cbiAqXG4gKiBAcGFyYW0gIHshQXJyYXl9ICAgICAgICAgIHRva2Vuc1xuICogQHBhcmFtICB7KEFycmF5fE9iamVjdCk9fSBrZXlzXG4gKiBAcGFyYW0gIHtPYmplY3Q9fSAgICAgICAgIG9wdGlvbnNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIHRva2Vuc1RvUmVnRXhwICh0b2tlbnMsIGtleXMsIG9wdGlvbnMpIHtcbiAgaWYgKCFpc2FycmF5KGtleXMpKSB7XG4gICAgb3B0aW9ucyA9IC8qKiBAdHlwZSB7IU9iamVjdH0gKi8gKGtleXMgfHwgb3B0aW9ucylcbiAgICBrZXlzID0gW11cbiAgfVxuXG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9XG5cbiAgdmFyIHN0cmljdCA9IG9wdGlvbnMuc3RyaWN0XG4gIHZhciBlbmQgPSBvcHRpb25zLmVuZCAhPT0gZmFsc2VcbiAgdmFyIHJvdXRlID0gJydcblxuICAvLyBJdGVyYXRlIG92ZXIgdGhlIHRva2VucyBhbmQgY3JlYXRlIG91ciByZWdleHAgc3RyaW5nLlxuICBmb3IgKHZhciBpID0gMDsgaSA8IHRva2Vucy5sZW5ndGg7IGkrKykge1xuICAgIHZhciB0b2tlbiA9IHRva2Vuc1tpXVxuXG4gICAgaWYgKHR5cGVvZiB0b2tlbiA9PT0gJ3N0cmluZycpIHtcbiAgICAgIHJvdXRlICs9IGVzY2FwZVN0cmluZyh0b2tlbilcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHByZWZpeCA9IGVzY2FwZVN0cmluZyh0b2tlbi5wcmVmaXgpXG4gICAgICB2YXIgY2FwdHVyZSA9ICcoPzonICsgdG9rZW4ucGF0dGVybiArICcpJ1xuXG4gICAgICBrZXlzLnB1c2godG9rZW4pXG5cbiAgICAgIGlmICh0b2tlbi5yZXBlYXQpIHtcbiAgICAgICAgY2FwdHVyZSArPSAnKD86JyArIHByZWZpeCArIGNhcHR1cmUgKyAnKSonXG4gICAgICB9XG5cbiAgICAgIGlmICh0b2tlbi5vcHRpb25hbCkge1xuICAgICAgICBpZiAoIXRva2VuLnBhcnRpYWwpIHtcbiAgICAgICAgICBjYXB0dXJlID0gJyg/OicgKyBwcmVmaXggKyAnKCcgKyBjYXB0dXJlICsgJykpPydcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBjYXB0dXJlID0gcHJlZml4ICsgJygnICsgY2FwdHVyZSArICcpPydcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY2FwdHVyZSA9IHByZWZpeCArICcoJyArIGNhcHR1cmUgKyAnKSdcbiAgICAgIH1cblxuICAgICAgcm91dGUgKz0gY2FwdHVyZVxuICAgIH1cbiAgfVxuXG4gIHZhciBkZWxpbWl0ZXIgPSBlc2NhcGVTdHJpbmcob3B0aW9ucy5kZWxpbWl0ZXIgfHwgJy8nKVxuICB2YXIgZW5kc1dpdGhEZWxpbWl0ZXIgPSByb3V0ZS5zbGljZSgtZGVsaW1pdGVyLmxlbmd0aCkgPT09IGRlbGltaXRlclxuXG4gIC8vIEluIG5vbi1zdHJpY3QgbW9kZSB3ZSBhbGxvdyBhIHNsYXNoIGF0IHRoZSBlbmQgb2YgbWF0Y2guIElmIHRoZSBwYXRoIHRvXG4gIC8vIG1hdGNoIGFscmVhZHkgZW5kcyB3aXRoIGEgc2xhc2gsIHdlIHJlbW92ZSBpdCBmb3IgY29uc2lzdGVuY3kuIFRoZSBzbGFzaFxuICAvLyBpcyB2YWxpZCBhdCB0aGUgZW5kIG9mIGEgcGF0aCBtYXRjaCwgbm90IGluIHRoZSBtaWRkbGUuIFRoaXMgaXMgaW1wb3J0YW50XG4gIC8vIGluIG5vbi1lbmRpbmcgbW9kZSwgd2hlcmUgXCIvdGVzdC9cIiBzaG91bGRuJ3QgbWF0Y2ggXCIvdGVzdC8vcm91dGVcIi5cbiAgaWYgKCFzdHJpY3QpIHtcbiAgICByb3V0ZSA9IChlbmRzV2l0aERlbGltaXRlciA/IHJvdXRlLnNsaWNlKDAsIC1kZWxpbWl0ZXIubGVuZ3RoKSA6IHJvdXRlKSArICcoPzonICsgZGVsaW1pdGVyICsgJyg/PSQpKT8nXG4gIH1cblxuICBpZiAoZW5kKSB7XG4gICAgcm91dGUgKz0gJyQnXG4gIH0gZWxzZSB7XG4gICAgLy8gSW4gbm9uLWVuZGluZyBtb2RlLCB3ZSBuZWVkIHRoZSBjYXB0dXJpbmcgZ3JvdXBzIHRvIG1hdGNoIGFzIG11Y2ggYXNcbiAgICAvLyBwb3NzaWJsZSBieSB1c2luZyBhIHBvc2l0aXZlIGxvb2thaGVhZCB0byB0aGUgZW5kIG9yIG5leHQgcGF0aCBzZWdtZW50LlxuICAgIHJvdXRlICs9IHN0cmljdCAmJiBlbmRzV2l0aERlbGltaXRlciA/ICcnIDogJyg/PScgKyBkZWxpbWl0ZXIgKyAnfCQpJ1xuICB9XG5cbiAgcmV0dXJuIGF0dGFjaEtleXMobmV3IFJlZ0V4cCgnXicgKyByb3V0ZSwgZmxhZ3Mob3B0aW9ucykpLCBrZXlzKVxufVxuXG4vKipcbiAqIE5vcm1hbGl6ZSB0aGUgZ2l2ZW4gcGF0aCBzdHJpbmcsIHJldHVybmluZyBhIHJlZ3VsYXIgZXhwcmVzc2lvbi5cbiAqXG4gKiBBbiBlbXB0eSBhcnJheSBjYW4gYmUgcGFzc2VkIGluIGZvciB0aGUga2V5cywgd2hpY2ggd2lsbCBob2xkIHRoZVxuICogcGxhY2Vob2xkZXIga2V5IGRlc2NyaXB0aW9ucy4gRm9yIGV4YW1wbGUsIHVzaW5nIGAvdXNlci86aWRgLCBga2V5c2Agd2lsbFxuICogY29udGFpbiBgW3sgbmFtZTogJ2lkJywgZGVsaW1pdGVyOiAnLycsIG9wdGlvbmFsOiBmYWxzZSwgcmVwZWF0OiBmYWxzZSB9XWAuXG4gKlxuICogQHBhcmFtICB7KHN0cmluZ3xSZWdFeHB8QXJyYXkpfSBwYXRoXG4gKiBAcGFyYW0gIHsoQXJyYXl8T2JqZWN0KT19ICAgICAgIGtleXNcbiAqIEBwYXJhbSAge09iamVjdD19ICAgICAgICAgICAgICAgb3B0aW9uc1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gcGF0aFRvUmVnZXhwIChwYXRoLCBrZXlzLCBvcHRpb25zKSB7XG4gIGlmICghaXNhcnJheShrZXlzKSkge1xuICAgIG9wdGlvbnMgPSAvKiogQHR5cGUgeyFPYmplY3R9ICovIChrZXlzIHx8IG9wdGlvbnMpXG4gICAga2V5cyA9IFtdXG4gIH1cblxuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fVxuXG4gIGlmIChwYXRoIGluc3RhbmNlb2YgUmVnRXhwKSB7XG4gICAgcmV0dXJuIHJlZ2V4cFRvUmVnZXhwKHBhdGgsIC8qKiBAdHlwZSB7IUFycmF5fSAqLyAoa2V5cykpXG4gIH1cblxuICBpZiAoaXNhcnJheShwYXRoKSkge1xuICAgIHJldHVybiBhcnJheVRvUmVnZXhwKC8qKiBAdHlwZSB7IUFycmF5fSAqLyAocGF0aCksIC8qKiBAdHlwZSB7IUFycmF5fSAqLyAoa2V5cyksIG9wdGlvbnMpXG4gIH1cblxuICByZXR1cm4gc3RyaW5nVG9SZWdleHAoLyoqIEB0eXBlIHtzdHJpbmd9ICovIChwYXRoKSwgLyoqIEB0eXBlIHshQXJyYXl9ICovIChrZXlzKSwgb3B0aW9ucylcbn1cbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MTYuNy4wXG4gKiByZWFjdC5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0Jzt2YXIgaz1yZXF1aXJlKFwib2JqZWN0LWFzc2lnblwiKSxuPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5mb3IscD1uP1N5bWJvbC5mb3IoXCJyZWFjdC5lbGVtZW50XCIpOjYwMTAzLHE9bj9TeW1ib2wuZm9yKFwicmVhY3QucG9ydGFsXCIpOjYwMTA2LHI9bj9TeW1ib2wuZm9yKFwicmVhY3QuZnJhZ21lbnRcIik6NjAxMDcsdD1uP1N5bWJvbC5mb3IoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKTo2MDEwOCx1PW4/U3ltYm9sLmZvcihcInJlYWN0LnByb2ZpbGVyXCIpOjYwMTE0LHY9bj9TeW1ib2wuZm9yKFwicmVhY3QucHJvdmlkZXJcIik6NjAxMDksdz1uP1N5bWJvbC5mb3IoXCJyZWFjdC5jb250ZXh0XCIpOjYwMTEwLHg9bj9TeW1ib2wuZm9yKFwicmVhY3QuY29uY3VycmVudF9tb2RlXCIpOjYwMTExLHk9bj9TeW1ib2wuZm9yKFwicmVhY3QuZm9yd2FyZF9yZWZcIik6NjAxMTIsej1uP1N5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZVwiKTo2MDExMyxBPW4/U3ltYm9sLmZvcihcInJlYWN0Lm1lbW9cIik6XG42MDExNSxCPW4/U3ltYm9sLmZvcihcInJlYWN0LmxhenlcIik6NjAxMTYsQz1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuaXRlcmF0b3I7ZnVuY3Rpb24gYWEoYSxiLGUsYyxkLGcsaCxmKXtpZighYSl7YT12b2lkIDA7aWYodm9pZCAwPT09YilhPUVycm9yKFwiTWluaWZpZWQgZXhjZXB0aW9uIG9jY3VycmVkOyB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIHRoZSBmdWxsIGVycm9yIG1lc3NhZ2UgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy5cIik7ZWxzZXt2YXIgbD1bZSxjLGQsZyxoLGZdLG09MDthPUVycm9yKGIucmVwbGFjZSgvJXMvZyxmdW5jdGlvbigpe3JldHVybiBsW20rK119KSk7YS5uYW1lPVwiSW52YXJpYW50IFZpb2xhdGlvblwifWEuZnJhbWVzVG9Qb3A9MTt0aHJvdyBhO319XG5mdW5jdGlvbiBEKGEpe2Zvcih2YXIgYj1hcmd1bWVudHMubGVuZ3RoLTEsZT1cImh0dHBzOi8vcmVhY3Rqcy5vcmcvZG9jcy9lcnJvci1kZWNvZGVyLmh0bWw/aW52YXJpYW50PVwiK2EsYz0wO2M8YjtjKyspZSs9XCImYXJnc1tdPVwiK2VuY29kZVVSSUNvbXBvbmVudChhcmd1bWVudHNbYysxXSk7YWEoITEsXCJNaW5pZmllZCBSZWFjdCBlcnJvciAjXCIrYStcIjsgdmlzaXQgJXMgZm9yIHRoZSBmdWxsIG1lc3NhZ2Ugb3IgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciBmdWxsIGVycm9ycyBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLiBcIixlKX12YXIgRT17aXNNb3VudGVkOmZ1bmN0aW9uKCl7cmV0dXJuITF9LGVucXVldWVGb3JjZVVwZGF0ZTpmdW5jdGlvbigpe30sZW5xdWV1ZVJlcGxhY2VTdGF0ZTpmdW5jdGlvbigpe30sZW5xdWV1ZVNldFN0YXRlOmZ1bmN0aW9uKCl7fX0sRj17fTtcbmZ1bmN0aW9uIEcoYSxiLGUpe3RoaXMucHJvcHM9YTt0aGlzLmNvbnRleHQ9Yjt0aGlzLnJlZnM9Rjt0aGlzLnVwZGF0ZXI9ZXx8RX1HLnByb3RvdHlwZS5pc1JlYWN0Q29tcG9uZW50PXt9O0cucHJvdG90eXBlLnNldFN0YXRlPWZ1bmN0aW9uKGEsYil7XCJvYmplY3RcIiE9PXR5cGVvZiBhJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYSYmbnVsbCE9YT9EKFwiODVcIik6dm9pZCAwO3RoaXMudXBkYXRlci5lbnF1ZXVlU2V0U3RhdGUodGhpcyxhLGIsXCJzZXRTdGF0ZVwiKX07Ry5wcm90b3R5cGUuZm9yY2VVcGRhdGU9ZnVuY3Rpb24oYSl7dGhpcy51cGRhdGVyLmVucXVldWVGb3JjZVVwZGF0ZSh0aGlzLGEsXCJmb3JjZVVwZGF0ZVwiKX07ZnVuY3Rpb24gSCgpe31ILnByb3RvdHlwZT1HLnByb3RvdHlwZTtmdW5jdGlvbiBJKGEsYixlKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPUY7dGhpcy51cGRhdGVyPWV8fEV9dmFyIEo9SS5wcm90b3R5cGU9bmV3IEg7XG5KLmNvbnN0cnVjdG9yPUk7ayhKLEcucHJvdG90eXBlKTtKLmlzUHVyZVJlYWN0Q29tcG9uZW50PSEwO3ZhciBLPXtjdXJyZW50Om51bGwsY3VycmVudERpc3BhdGNoZXI6bnVsbH0sTD1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LE09e2tleTohMCxyZWY6ITAsX19zZWxmOiEwLF9fc291cmNlOiEwfTtcbmZ1bmN0aW9uIE4oYSxiLGUpe3ZhciBjPXZvaWQgMCxkPXt9LGc9bnVsbCxoPW51bGw7aWYobnVsbCE9Yilmb3IoYyBpbiB2b2lkIDAhPT1iLnJlZiYmKGg9Yi5yZWYpLHZvaWQgMCE9PWIua2V5JiYoZz1cIlwiK2Iua2V5KSxiKUwuY2FsbChiLGMpJiYhTS5oYXNPd25Qcm9wZXJ0eShjKSYmKGRbY109YltjXSk7dmFyIGY9YXJndW1lbnRzLmxlbmd0aC0yO2lmKDE9PT1mKWQuY2hpbGRyZW49ZTtlbHNlIGlmKDE8Zil7Zm9yKHZhciBsPUFycmF5KGYpLG09MDttPGY7bSsrKWxbbV09YXJndW1lbnRzW20rMl07ZC5jaGlsZHJlbj1sfWlmKGEmJmEuZGVmYXVsdFByb3BzKWZvcihjIGluIGY9YS5kZWZhdWx0UHJvcHMsZil2b2lkIDA9PT1kW2NdJiYoZFtjXT1mW2NdKTtyZXR1cm57JCR0eXBlb2Y6cCx0eXBlOmEsa2V5OmcscmVmOmgscHJvcHM6ZCxfb3duZXI6Sy5jdXJyZW50fX1cbmZ1bmN0aW9uIGJhKGEsYil7cmV0dXJueyQkdHlwZW9mOnAsdHlwZTphLnR5cGUsa2V5OmIscmVmOmEucmVmLHByb3BzOmEucHJvcHMsX293bmVyOmEuX293bmVyfX1mdW5jdGlvbiBPKGEpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJmEuJCR0eXBlb2Y9PT1wfWZ1bmN0aW9uIGVzY2FwZShhKXt2YXIgYj17XCI9XCI6XCI9MFwiLFwiOlwiOlwiPTJcIn07cmV0dXJuXCIkXCIrKFwiXCIrYSkucmVwbGFjZSgvWz06XS9nLGZ1bmN0aW9uKGEpe3JldHVybiBiW2FdfSl9dmFyIFA9L1xcLysvZyxRPVtdO2Z1bmN0aW9uIFIoYSxiLGUsYyl7aWYoUS5sZW5ndGgpe3ZhciBkPVEucG9wKCk7ZC5yZXN1bHQ9YTtkLmtleVByZWZpeD1iO2QuZnVuYz1lO2QuY29udGV4dD1jO2QuY291bnQ9MDtyZXR1cm4gZH1yZXR1cm57cmVzdWx0OmEsa2V5UHJlZml4OmIsZnVuYzplLGNvbnRleHQ6Yyxjb3VudDowfX1cbmZ1bmN0aW9uIFMoYSl7YS5yZXN1bHQ9bnVsbDthLmtleVByZWZpeD1udWxsO2EuZnVuYz1udWxsO2EuY29udGV4dD1udWxsO2EuY291bnQ9MDsxMD5RLmxlbmd0aCYmUS5wdXNoKGEpfVxuZnVuY3Rpb24gVChhLGIsZSxjKXt2YXIgZD10eXBlb2YgYTtpZihcInVuZGVmaW5lZFwiPT09ZHx8XCJib29sZWFuXCI9PT1kKWE9bnVsbDt2YXIgZz0hMTtpZihudWxsPT09YSlnPSEwO2Vsc2Ugc3dpdGNoKGQpe2Nhc2UgXCJzdHJpbmdcIjpjYXNlIFwibnVtYmVyXCI6Zz0hMDticmVhaztjYXNlIFwib2JqZWN0XCI6c3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgcDpjYXNlIHE6Zz0hMH19aWYoZylyZXR1cm4gZShjLGEsXCJcIj09PWI/XCIuXCIrVShhLDApOmIpLDE7Zz0wO2I9XCJcIj09PWI/XCIuXCI6YitcIjpcIjtpZihBcnJheS5pc0FycmF5KGEpKWZvcih2YXIgaD0wO2g8YS5sZW5ndGg7aCsrKXtkPWFbaF07dmFyIGY9YitVKGQsaCk7Zys9VChkLGYsZSxjKX1lbHNlIGlmKG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGE/Zj1udWxsOihmPUMmJmFbQ118fGFbXCJAQGl0ZXJhdG9yXCJdLGY9XCJmdW5jdGlvblwiPT09dHlwZW9mIGY/ZjpudWxsKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZilmb3IoYT1mLmNhbGwoYSksaD1cbjA7IShkPWEubmV4dCgpKS5kb25lOylkPWQudmFsdWUsZj1iK1UoZCxoKyspLGcrPVQoZCxmLGUsYyk7ZWxzZVwib2JqZWN0XCI9PT1kJiYoZT1cIlwiK2EsRChcIjMxXCIsXCJbb2JqZWN0IE9iamVjdF1cIj09PWU/XCJvYmplY3Qgd2l0aCBrZXlzIHtcIitPYmplY3Qua2V5cyhhKS5qb2luKFwiLCBcIikrXCJ9XCI6ZSxcIlwiKSk7cmV0dXJuIGd9ZnVuY3Rpb24gVihhLGIsZSl7cmV0dXJuIG51bGw9PWE/MDpUKGEsXCJcIixiLGUpfWZ1bmN0aW9uIFUoYSxiKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZudWxsIT1hLmtleT9lc2NhcGUoYS5rZXkpOmIudG9TdHJpbmcoMzYpfWZ1bmN0aW9uIGNhKGEsYil7YS5mdW5jLmNhbGwoYS5jb250ZXh0LGIsYS5jb3VudCsrKX1cbmZ1bmN0aW9uIGRhKGEsYixlKXt2YXIgYz1hLnJlc3VsdCxkPWEua2V5UHJlZml4O2E9YS5mdW5jLmNhbGwoYS5jb250ZXh0LGIsYS5jb3VudCsrKTtBcnJheS5pc0FycmF5KGEpP1coYSxjLGUsZnVuY3Rpb24oYSl7cmV0dXJuIGF9KTpudWxsIT1hJiYoTyhhKSYmKGE9YmEoYSxkKyghYS5rZXl8fGImJmIua2V5PT09YS5rZXk/XCJcIjooXCJcIithLmtleSkucmVwbGFjZShQLFwiJCYvXCIpK1wiL1wiKStlKSksYy5wdXNoKGEpKX1mdW5jdGlvbiBXKGEsYixlLGMsZCl7dmFyIGc9XCJcIjtudWxsIT1lJiYoZz0oXCJcIitlKS5yZXBsYWNlKFAsXCIkJi9cIikrXCIvXCIpO2I9UihiLGcsYyxkKTtWKGEsZGEsYik7UyhiKX1cbnZhciBYPXtDaGlsZHJlbjp7bWFwOmZ1bmN0aW9uKGEsYixlKXtpZihudWxsPT1hKXJldHVybiBhO3ZhciBjPVtdO1coYSxjLG51bGwsYixlKTtyZXR1cm4gY30sZm9yRWFjaDpmdW5jdGlvbihhLGIsZSl7aWYobnVsbD09YSlyZXR1cm4gYTtiPVIobnVsbCxudWxsLGIsZSk7VihhLGNhLGIpO1MoYil9LGNvdW50OmZ1bmN0aW9uKGEpe3JldHVybiBWKGEsZnVuY3Rpb24oKXtyZXR1cm4gbnVsbH0sbnVsbCl9LHRvQXJyYXk6ZnVuY3Rpb24oYSl7dmFyIGI9W107VyhhLGIsbnVsbCxmdW5jdGlvbihhKXtyZXR1cm4gYX0pO3JldHVybiBifSxvbmx5OmZ1bmN0aW9uKGEpe08oYSk/dm9pZCAwOkQoXCIxNDNcIik7cmV0dXJuIGF9fSxjcmVhdGVSZWY6ZnVuY3Rpb24oKXtyZXR1cm57Y3VycmVudDpudWxsfX0sQ29tcG9uZW50OkcsUHVyZUNvbXBvbmVudDpJLGNyZWF0ZUNvbnRleHQ6ZnVuY3Rpb24oYSxiKXt2b2lkIDA9PT1iJiYoYj1udWxsKTthPXskJHR5cGVvZjp3LF9jYWxjdWxhdGVDaGFuZ2VkQml0czpiLFxuX2N1cnJlbnRWYWx1ZTphLF9jdXJyZW50VmFsdWUyOmEsX3RocmVhZENvdW50OjAsUHJvdmlkZXI6bnVsbCxDb25zdW1lcjpudWxsfTthLlByb3ZpZGVyPXskJHR5cGVvZjp2LF9jb250ZXh0OmF9O3JldHVybiBhLkNvbnN1bWVyPWF9LGZvcndhcmRSZWY6ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOnkscmVuZGVyOmF9fSxsYXp5OmZ1bmN0aW9uKGEpe3JldHVybnskJHR5cGVvZjpCLF9jdG9yOmEsX3N0YXR1czotMSxfcmVzdWx0Om51bGx9fSxtZW1vOmZ1bmN0aW9uKGEsYil7cmV0dXJueyQkdHlwZW9mOkEsdHlwZTphLGNvbXBhcmU6dm9pZCAwPT09Yj9udWxsOmJ9fSxGcmFnbWVudDpyLFN0cmljdE1vZGU6dCxTdXNwZW5zZTp6LGNyZWF0ZUVsZW1lbnQ6TixjbG9uZUVsZW1lbnQ6ZnVuY3Rpb24oYSxiLGUpe251bGw9PT1hfHx2b2lkIDA9PT1hP0QoXCIyNjdcIixhKTp2b2lkIDA7dmFyIGM9dm9pZCAwLGQ9ayh7fSxhLnByb3BzKSxnPWEua2V5LGg9YS5yZWYsZj1hLl9vd25lcjtcbmlmKG51bGwhPWIpe3ZvaWQgMCE9PWIucmVmJiYoaD1iLnJlZixmPUsuY3VycmVudCk7dm9pZCAwIT09Yi5rZXkmJihnPVwiXCIrYi5rZXkpO3ZhciBsPXZvaWQgMDthLnR5cGUmJmEudHlwZS5kZWZhdWx0UHJvcHMmJihsPWEudHlwZS5kZWZhdWx0UHJvcHMpO2ZvcihjIGluIGIpTC5jYWxsKGIsYykmJiFNLmhhc093blByb3BlcnR5KGMpJiYoZFtjXT12b2lkIDA9PT1iW2NdJiZ2b2lkIDAhPT1sP2xbY106YltjXSl9Yz1hcmd1bWVudHMubGVuZ3RoLTI7aWYoMT09PWMpZC5jaGlsZHJlbj1lO2Vsc2UgaWYoMTxjKXtsPUFycmF5KGMpO2Zvcih2YXIgbT0wO208YzttKyspbFttXT1hcmd1bWVudHNbbSsyXTtkLmNoaWxkcmVuPWx9cmV0dXJueyQkdHlwZW9mOnAsdHlwZTphLnR5cGUsa2V5OmcscmVmOmgscHJvcHM6ZCxfb3duZXI6Zn19LGNyZWF0ZUZhY3Rvcnk6ZnVuY3Rpb24oYSl7dmFyIGI9Ti5iaW5kKG51bGwsYSk7Yi50eXBlPWE7cmV0dXJuIGJ9LGlzVmFsaWRFbGVtZW50Ok8sdmVyc2lvbjpcIjE2LjcuMFwiLFxudW5zdGFibGVfQ29uY3VycmVudE1vZGU6eCx1bnN0YWJsZV9Qcm9maWxlcjp1LF9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEOntSZWFjdEN1cnJlbnRPd25lcjpLLGFzc2lnbjprfX0sWT17ZGVmYXVsdDpYfSxaPVkmJlh8fFk7bW9kdWxlLmV4cG9ydHM9Wi5kZWZhdWx0fHxaO1xuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNi43LjBcbiAqIHJlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbi8qXG4gTW9kZXJuaXpyIDMuMC4wcHJlIChDdXN0b20gQnVpbGQpIHwgTUlUXG4qL1xuJ3VzZSBzdHJpY3QnO3ZhciBhYT1yZXF1aXJlKFwicmVhY3RcIiksbj1yZXF1aXJlKFwib2JqZWN0LWFzc2lnblwiKSxiYT1yZXF1aXJlKFwic2NoZWR1bGVyXCIpO2Z1bmN0aW9uIGNhKGEsYixjLGQsZSxmLGcsaCl7aWYoIWEpe2E9dm9pZCAwO2lmKHZvaWQgMD09PWIpYT1FcnJvcihcIk1pbmlmaWVkIGV4Y2VwdGlvbiBvY2N1cnJlZDsgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciB0aGUgZnVsbCBlcnJvciBtZXNzYWdlIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuXCIpO2Vsc2V7dmFyIGs9W2MsZCxlLGYsZyxoXSxsPTA7YT1FcnJvcihiLnJlcGxhY2UoLyVzL2csZnVuY3Rpb24oKXtyZXR1cm4ga1tsKytdfSkpO2EubmFtZT1cIkludmFyaWFudCBWaW9sYXRpb25cIn1hLmZyYW1lc1RvUG9wPTE7dGhyb3cgYTt9fVxuZnVuY3Rpb24gdChhKXtmb3IodmFyIGI9YXJndW1lbnRzLmxlbmd0aC0xLGM9XCJodHRwczovL3JlYWN0anMub3JnL2RvY3MvZXJyb3ItZGVjb2Rlci5odG1sP2ludmFyaWFudD1cIithLGQ9MDtkPGI7ZCsrKWMrPVwiJmFyZ3NbXT1cIitlbmNvZGVVUklDb21wb25lbnQoYXJndW1lbnRzW2QrMV0pO2NhKCExLFwiTWluaWZpZWQgUmVhY3QgZXJyb3IgI1wiK2ErXCI7IHZpc2l0ICVzIGZvciB0aGUgZnVsbCBtZXNzYWdlIG9yIHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgZnVsbCBlcnJvcnMgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy4gXCIsYyl9YWE/dm9pZCAwOnQoXCIyMjdcIik7ZnVuY3Rpb24gZGEoYSxiLGMsZCxlLGYsZyxoLGspe3ZhciBsPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywzKTt0cnl7Yi5hcHBseShjLGwpfWNhdGNoKG0pe3RoaXMub25FcnJvcihtKX19XG52YXIgZWE9ITEsZmE9bnVsbCxoYT0hMSxpYT1udWxsLGphPXtvbkVycm9yOmZ1bmN0aW9uKGEpe2VhPSEwO2ZhPWF9fTtmdW5jdGlvbiBrYShhLGIsYyxkLGUsZixnLGgsayl7ZWE9ITE7ZmE9bnVsbDtkYS5hcHBseShqYSxhcmd1bWVudHMpfWZ1bmN0aW9uIGxhKGEsYixjLGQsZSxmLGcsaCxrKXtrYS5hcHBseSh0aGlzLGFyZ3VtZW50cyk7aWYoZWEpe2lmKGVhKXt2YXIgbD1mYTtlYT0hMTtmYT1udWxsfWVsc2UgdChcIjE5OFwiKSxsPXZvaWQgMDtoYXx8KGhhPSEwLGlhPWwpfX12YXIgbWE9bnVsbCxuYT17fTtcbmZ1bmN0aW9uIG9hKCl7aWYobWEpZm9yKHZhciBhIGluIG5hKXt2YXIgYj1uYVthXSxjPW1hLmluZGV4T2YoYSk7LTE8Yz92b2lkIDA6dChcIjk2XCIsYSk7aWYoIXBhW2NdKXtiLmV4dHJhY3RFdmVudHM/dm9pZCAwOnQoXCI5N1wiLGEpO3BhW2NdPWI7Yz1iLmV2ZW50VHlwZXM7Zm9yKHZhciBkIGluIGMpe3ZhciBlPXZvaWQgMDt2YXIgZj1jW2RdLGc9YixoPWQ7cWEuaGFzT3duUHJvcGVydHkoaCk/dChcIjk5XCIsaCk6dm9pZCAwO3FhW2hdPWY7dmFyIGs9Zi5waGFzZWRSZWdpc3RyYXRpb25OYW1lcztpZihrKXtmb3IoZSBpbiBrKWsuaGFzT3duUHJvcGVydHkoZSkmJnJhKGtbZV0sZyxoKTtlPSEwfWVsc2UgZi5yZWdpc3RyYXRpb25OYW1lPyhyYShmLnJlZ2lzdHJhdGlvbk5hbWUsZyxoKSxlPSEwKTplPSExO2U/dm9pZCAwOnQoXCI5OFwiLGQsYSl9fX19XG5mdW5jdGlvbiByYShhLGIsYyl7c2FbYV0/dChcIjEwMFwiLGEpOnZvaWQgMDtzYVthXT1iO3RhW2FdPWIuZXZlbnRUeXBlc1tjXS5kZXBlbmRlbmNpZXN9dmFyIHBhPVtdLHFhPXt9LHNhPXt9LHRhPXt9LHVhPW51bGwsdmE9bnVsbCx3YT1udWxsO2Z1bmN0aW9uIHhhKGEsYixjKXt2YXIgZD1hLnR5cGV8fFwidW5rbm93bi1ldmVudFwiO2EuY3VycmVudFRhcmdldD13YShjKTtsYShkLGIsdm9pZCAwLGEpO2EuY3VycmVudFRhcmdldD1udWxsfWZ1bmN0aW9uIHlhKGEsYil7bnVsbD09Yj90KFwiMzBcIik6dm9pZCAwO2lmKG51bGw9PWEpcmV0dXJuIGI7aWYoQXJyYXkuaXNBcnJheShhKSl7aWYoQXJyYXkuaXNBcnJheShiKSlyZXR1cm4gYS5wdXNoLmFwcGx5KGEsYiksYTthLnB1c2goYik7cmV0dXJuIGF9cmV0dXJuIEFycmF5LmlzQXJyYXkoYik/W2FdLmNvbmNhdChiKTpbYSxiXX1cbmZ1bmN0aW9uIHphKGEsYixjKXtBcnJheS5pc0FycmF5KGEpP2EuZm9yRWFjaChiLGMpOmEmJmIuY2FsbChjLGEpfXZhciBBYT1udWxsO2Z1bmN0aW9uIEJhKGEpe2lmKGEpe3ZhciBiPWEuX2Rpc3BhdGNoTGlzdGVuZXJzLGM9YS5fZGlzcGF0Y2hJbnN0YW5jZXM7aWYoQXJyYXkuaXNBcnJheShiKSlmb3IodmFyIGQ9MDtkPGIubGVuZ3RoJiYhYS5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpO2QrKyl4YShhLGJbZF0sY1tkXSk7ZWxzZSBiJiZ4YShhLGIsYyk7YS5fZGlzcGF0Y2hMaXN0ZW5lcnM9bnVsbDthLl9kaXNwYXRjaEluc3RhbmNlcz1udWxsO2EuaXNQZXJzaXN0ZW50KCl8fGEuY29uc3RydWN0b3IucmVsZWFzZShhKX19XG52YXIgQ2E9e2luamVjdEV2ZW50UGx1Z2luT3JkZXI6ZnVuY3Rpb24oYSl7bWE/dChcIjEwMVwiKTp2b2lkIDA7bWE9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYSk7b2EoKX0saW5qZWN0RXZlbnRQbHVnaW5zQnlOYW1lOmZ1bmN0aW9uKGEpe3ZhciBiPSExLGM7Zm9yKGMgaW4gYSlpZihhLmhhc093blByb3BlcnR5KGMpKXt2YXIgZD1hW2NdO25hLmhhc093blByb3BlcnR5KGMpJiZuYVtjXT09PWR8fChuYVtjXT90KFwiMTAyXCIsYyk6dm9pZCAwLG5hW2NdPWQsYj0hMCl9YiYmb2EoKX19O1xuZnVuY3Rpb24gRGEoYSxiKXt2YXIgYz1hLnN0YXRlTm9kZTtpZighYylyZXR1cm4gbnVsbDt2YXIgZD11YShjKTtpZighZClyZXR1cm4gbnVsbDtjPWRbYl07YTpzd2l0Y2goYil7Y2FzZSBcIm9uQ2xpY2tcIjpjYXNlIFwib25DbGlja0NhcHR1cmVcIjpjYXNlIFwib25Eb3VibGVDbGlja1wiOmNhc2UgXCJvbkRvdWJsZUNsaWNrQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlRG93blwiOmNhc2UgXCJvbk1vdXNlRG93bkNhcHR1cmVcIjpjYXNlIFwib25Nb3VzZU1vdmVcIjpjYXNlIFwib25Nb3VzZU1vdmVDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VVcFwiOmNhc2UgXCJvbk1vdXNlVXBDYXB0dXJlXCI6KGQ9IWQuZGlzYWJsZWQpfHwoYT1hLnR5cGUsZD0hKFwiYnV0dG9uXCI9PT1hfHxcImlucHV0XCI9PT1hfHxcInNlbGVjdFwiPT09YXx8XCJ0ZXh0YXJlYVwiPT09YSkpO2E9IWQ7YnJlYWsgYTtkZWZhdWx0OmE9ITF9aWYoYSlyZXR1cm4gbnVsbDtjJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYz90KFwiMjMxXCIsYix0eXBlb2YgYyk6dm9pZCAwO1xucmV0dXJuIGN9ZnVuY3Rpb24gRWEoYSl7bnVsbCE9PWEmJihBYT15YShBYSxhKSk7YT1BYTtBYT1udWxsO2lmKGEmJih6YShhLEJhKSxBYT90KFwiOTVcIik6dm9pZCAwLGhhKSl0aHJvdyBhPWlhLGhhPSExLGlhPW51bGwsYTt9dmFyIEZhPU1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnNsaWNlKDIpLEdhPVwiX19yZWFjdEludGVybmFsSW5zdGFuY2UkXCIrRmEsSGE9XCJfX3JlYWN0RXZlbnRIYW5kbGVycyRcIitGYTtmdW5jdGlvbiBJYShhKXtpZihhW0dhXSlyZXR1cm4gYVtHYV07Zm9yKDshYVtHYV07KWlmKGEucGFyZW50Tm9kZSlhPWEucGFyZW50Tm9kZTtlbHNlIHJldHVybiBudWxsO2E9YVtHYV07cmV0dXJuIDU9PT1hLnRhZ3x8Nj09PWEudGFnP2E6bnVsbH1mdW5jdGlvbiBKYShhKXthPWFbR2FdO3JldHVybiFhfHw1IT09YS50YWcmJjYhPT1hLnRhZz9udWxsOmF9XG5mdW5jdGlvbiBLYShhKXtpZig1PT09YS50YWd8fDY9PT1hLnRhZylyZXR1cm4gYS5zdGF0ZU5vZGU7dChcIjMzXCIpfWZ1bmN0aW9uIExhKGEpe3JldHVybiBhW0hhXXx8bnVsbH1mdW5jdGlvbiBNYShhKXtkbyBhPWEucmV0dXJuO3doaWxlKGEmJjUhPT1hLnRhZyk7cmV0dXJuIGE/YTpudWxsfWZ1bmN0aW9uIE5hKGEsYixjKXtpZihiPURhKGEsYy5kaXNwYXRjaENvbmZpZy5waGFzZWRSZWdpc3RyYXRpb25OYW1lc1tiXSkpYy5fZGlzcGF0Y2hMaXN0ZW5lcnM9eWEoYy5fZGlzcGF0Y2hMaXN0ZW5lcnMsYiksYy5fZGlzcGF0Y2hJbnN0YW5jZXM9eWEoYy5fZGlzcGF0Y2hJbnN0YW5jZXMsYSl9XG5mdW5jdGlvbiBPYShhKXtpZihhJiZhLmRpc3BhdGNoQ29uZmlnLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzKXtmb3IodmFyIGI9YS5fdGFyZ2V0SW5zdCxjPVtdO2I7KWMucHVzaChiKSxiPU1hKGIpO2ZvcihiPWMubGVuZ3RoOzA8Yi0tOylOYShjW2JdLFwiY2FwdHVyZWRcIixhKTtmb3IoYj0wO2I8Yy5sZW5ndGg7YisrKU5hKGNbYl0sXCJidWJibGVkXCIsYSl9fWZ1bmN0aW9uIFBhKGEsYixjKXthJiZjJiZjLmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUmJihiPURhKGEsYy5kaXNwYXRjaENvbmZpZy5yZWdpc3RyYXRpb25OYW1lKSkmJihjLl9kaXNwYXRjaExpc3RlbmVycz15YShjLl9kaXNwYXRjaExpc3RlbmVycyxiKSxjLl9kaXNwYXRjaEluc3RhbmNlcz15YShjLl9kaXNwYXRjaEluc3RhbmNlcyxhKSl9ZnVuY3Rpb24gUWEoYSl7YSYmYS5kaXNwYXRjaENvbmZpZy5yZWdpc3RyYXRpb25OYW1lJiZQYShhLl90YXJnZXRJbnN0LG51bGwsYSl9XG5mdW5jdGlvbiBSYShhKXt6YShhLE9hKX12YXIgU2E9IShcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvd3x8IXdpbmRvdy5kb2N1bWVudHx8IXdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50KTtmdW5jdGlvbiBUYShhLGIpe3ZhciBjPXt9O2NbYS50b0xvd2VyQ2FzZSgpXT1iLnRvTG93ZXJDYXNlKCk7Y1tcIldlYmtpdFwiK2FdPVwid2Via2l0XCIrYjtjW1wiTW96XCIrYV09XCJtb3pcIitiO3JldHVybiBjfXZhciBVYT17YW5pbWF0aW9uZW5kOlRhKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25FbmRcIiksYW5pbWF0aW9uaXRlcmF0aW9uOlRhKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25JdGVyYXRpb25cIiksYW5pbWF0aW9uc3RhcnQ6VGEoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvblN0YXJ0XCIpLHRyYW5zaXRpb25lbmQ6VGEoXCJUcmFuc2l0aW9uXCIsXCJUcmFuc2l0aW9uRW5kXCIpfSxWYT17fSxXYT17fTtcblNhJiYoV2E9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKS5zdHlsZSxcIkFuaW1hdGlvbkV2ZW50XCJpbiB3aW5kb3d8fChkZWxldGUgVWEuYW5pbWF0aW9uZW5kLmFuaW1hdGlvbixkZWxldGUgVWEuYW5pbWF0aW9uaXRlcmF0aW9uLmFuaW1hdGlvbixkZWxldGUgVWEuYW5pbWF0aW9uc3RhcnQuYW5pbWF0aW9uKSxcIlRyYW5zaXRpb25FdmVudFwiaW4gd2luZG93fHxkZWxldGUgVWEudHJhbnNpdGlvbmVuZC50cmFuc2l0aW9uKTtmdW5jdGlvbiBYYShhKXtpZihWYVthXSlyZXR1cm4gVmFbYV07aWYoIVVhW2FdKXJldHVybiBhO3ZhciBiPVVhW2FdLGM7Zm9yKGMgaW4gYilpZihiLmhhc093blByb3BlcnR5KGMpJiZjIGluIFdhKXJldHVybiBWYVthXT1iW2NdO3JldHVybiBhfVxudmFyIFlhPVhhKFwiYW5pbWF0aW9uZW5kXCIpLFphPVhhKFwiYW5pbWF0aW9uaXRlcmF0aW9uXCIpLCRhPVhhKFwiYW5pbWF0aW9uc3RhcnRcIiksYWI9WGEoXCJ0cmFuc2l0aW9uZW5kXCIpLGJiPVwiYWJvcnQgY2FucGxheSBjYW5wbGF5dGhyb3VnaCBkdXJhdGlvbmNoYW5nZSBlbXB0aWVkIGVuY3J5cHRlZCBlbmRlZCBlcnJvciBsb2FkZWRkYXRhIGxvYWRlZG1ldGFkYXRhIGxvYWRzdGFydCBwYXVzZSBwbGF5IHBsYXlpbmcgcHJvZ3Jlc3MgcmF0ZWNoYW5nZSBzZWVrZWQgc2Vla2luZyBzdGFsbGVkIHN1c3BlbmQgdGltZXVwZGF0ZSB2b2x1bWVjaGFuZ2Ugd2FpdGluZ1wiLnNwbGl0KFwiIFwiKSxjYj1udWxsLGViPW51bGwsZmI9bnVsbDtcbmZ1bmN0aW9uIGdiKCl7aWYoZmIpcmV0dXJuIGZiO3ZhciBhLGI9ZWIsYz1iLmxlbmd0aCxkLGU9XCJ2YWx1ZVwiaW4gY2I/Y2IudmFsdWU6Y2IudGV4dENvbnRlbnQsZj1lLmxlbmd0aDtmb3IoYT0wO2E8YyYmYlthXT09PWVbYV07YSsrKTt2YXIgZz1jLWE7Zm9yKGQ9MTtkPD1nJiZiW2MtZF09PT1lW2YtZF07ZCsrKTtyZXR1cm4gZmI9ZS5zbGljZShhLDE8ZD8xLWQ6dm9pZCAwKX1mdW5jdGlvbiBoYigpe3JldHVybiEwfWZ1bmN0aW9uIGliKCl7cmV0dXJuITF9XG5mdW5jdGlvbiB6KGEsYixjLGQpe3RoaXMuZGlzcGF0Y2hDb25maWc9YTt0aGlzLl90YXJnZXRJbnN0PWI7dGhpcy5uYXRpdmVFdmVudD1jO2E9dGhpcy5jb25zdHJ1Y3Rvci5JbnRlcmZhY2U7Zm9yKHZhciBlIGluIGEpYS5oYXNPd25Qcm9wZXJ0eShlKSYmKChiPWFbZV0pP3RoaXNbZV09YihjKTpcInRhcmdldFwiPT09ZT90aGlzLnRhcmdldD1kOnRoaXNbZV09Y1tlXSk7dGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9KG51bGwhPWMuZGVmYXVsdFByZXZlbnRlZD9jLmRlZmF1bHRQcmV2ZW50ZWQ6ITE9PT1jLnJldHVyblZhbHVlKT9oYjppYjt0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPWliO3JldHVybiB0aGlzfVxubih6LnByb3RvdHlwZSx7cHJldmVudERlZmF1bHQ6ZnVuY3Rpb24oKXt0aGlzLmRlZmF1bHRQcmV2ZW50ZWQ9ITA7dmFyIGE9dGhpcy5uYXRpdmVFdmVudDthJiYoYS5wcmV2ZW50RGVmYXVsdD9hLnByZXZlbnREZWZhdWx0KCk6XCJ1bmtub3duXCIhPT10eXBlb2YgYS5yZXR1cm5WYWx1ZSYmKGEucmV0dXJuVmFsdWU9ITEpLHRoaXMuaXNEZWZhdWx0UHJldmVudGVkPWhiKX0sc3RvcFByb3BhZ2F0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5uYXRpdmVFdmVudDthJiYoYS5zdG9wUHJvcGFnYXRpb24/YS5zdG9wUHJvcGFnYXRpb24oKTpcInVua25vd25cIiE9PXR5cGVvZiBhLmNhbmNlbEJ1YmJsZSYmKGEuY2FuY2VsQnViYmxlPSEwKSx0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPWhiKX0scGVyc2lzdDpmdW5jdGlvbigpe3RoaXMuaXNQZXJzaXN0ZW50PWhifSxpc1BlcnNpc3RlbnQ6aWIsZGVzdHJ1Y3RvcjpmdW5jdGlvbigpe3ZhciBhPXRoaXMuY29uc3RydWN0b3IuSW50ZXJmYWNlLFxuYjtmb3IoYiBpbiBhKXRoaXNbYl09bnVsbDt0aGlzLm5hdGl2ZUV2ZW50PXRoaXMuX3RhcmdldEluc3Q9dGhpcy5kaXNwYXRjaENvbmZpZz1udWxsO3RoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9dGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9aWI7dGhpcy5fZGlzcGF0Y2hJbnN0YW5jZXM9dGhpcy5fZGlzcGF0Y2hMaXN0ZW5lcnM9bnVsbH19KTt6LkludGVyZmFjZT17dHlwZTpudWxsLHRhcmdldDpudWxsLGN1cnJlbnRUYXJnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gbnVsbH0sZXZlbnRQaGFzZTpudWxsLGJ1YmJsZXM6bnVsbCxjYW5jZWxhYmxlOm51bGwsdGltZVN0YW1wOmZ1bmN0aW9uKGEpe3JldHVybiBhLnRpbWVTdGFtcHx8RGF0ZS5ub3coKX0sZGVmYXVsdFByZXZlbnRlZDpudWxsLGlzVHJ1c3RlZDpudWxsfTtcbnouZXh0ZW5kPWZ1bmN0aW9uKGEpe2Z1bmN0aW9uIGIoKXt9ZnVuY3Rpb24gYygpe3JldHVybiBkLmFwcGx5KHRoaXMsYXJndW1lbnRzKX12YXIgZD10aGlzO2IucHJvdG90eXBlPWQucHJvdG90eXBlO3ZhciBlPW5ldyBiO24oZSxjLnByb3RvdHlwZSk7Yy5wcm90b3R5cGU9ZTtjLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1jO2MuSW50ZXJmYWNlPW4oe30sZC5JbnRlcmZhY2UsYSk7Yy5leHRlbmQ9ZC5leHRlbmQ7amIoYyk7cmV0dXJuIGN9O2piKHopO2Z1bmN0aW9uIGtiKGEsYixjLGQpe2lmKHRoaXMuZXZlbnRQb29sLmxlbmd0aCl7dmFyIGU9dGhpcy5ldmVudFBvb2wucG9wKCk7dGhpcy5jYWxsKGUsYSxiLGMsZCk7cmV0dXJuIGV9cmV0dXJuIG5ldyB0aGlzKGEsYixjLGQpfWZ1bmN0aW9uIGxiKGEpe2EgaW5zdGFuY2VvZiB0aGlzP3ZvaWQgMDp0KFwiMjc5XCIpO2EuZGVzdHJ1Y3RvcigpOzEwPnRoaXMuZXZlbnRQb29sLmxlbmd0aCYmdGhpcy5ldmVudFBvb2wucHVzaChhKX1cbmZ1bmN0aW9uIGpiKGEpe2EuZXZlbnRQb29sPVtdO2EuZ2V0UG9vbGVkPWtiO2EucmVsZWFzZT1sYn12YXIgbWI9ei5leHRlbmQoe2RhdGE6bnVsbH0pLG5iPXouZXh0ZW5kKHtkYXRhOm51bGx9KSxvYj1bOSwxMywyNywzMl0scGI9U2EmJlwiQ29tcG9zaXRpb25FdmVudFwiaW4gd2luZG93LHFiPW51bGw7U2EmJlwiZG9jdW1lbnRNb2RlXCJpbiBkb2N1bWVudCYmKHFiPWRvY3VtZW50LmRvY3VtZW50TW9kZSk7XG52YXIgcmI9U2EmJlwiVGV4dEV2ZW50XCJpbiB3aW5kb3cmJiFxYixzYj1TYSYmKCFwYnx8cWImJjg8cWImJjExPj1xYiksdGI9U3RyaW5nLmZyb21DaGFyQ29kZSgzMiksdWI9e2JlZm9yZUlucHV0OntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQmVmb3JlSW5wdXRcIixjYXB0dXJlZDpcIm9uQmVmb3JlSW5wdXRDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpbXCJjb21wb3NpdGlvbmVuZFwiLFwia2V5cHJlc3NcIixcInRleHRJbnB1dFwiLFwicGFzdGVcIl19LGNvbXBvc2l0aW9uRW5kOntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ29tcG9zaXRpb25FbmRcIixjYXB0dXJlZDpcIm9uQ29tcG9zaXRpb25FbmRDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY29tcG9zaXRpb25lbmQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIil9LGNvbXBvc2l0aW9uU3RhcnQ6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25Db21wb3NpdGlvblN0YXJ0XCIsXG5jYXB0dXJlZDpcIm9uQ29tcG9zaXRpb25TdGFydENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb21wb3NpdGlvbnN0YXJ0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpfSxjb21wb3NpdGlvblVwZGF0ZTp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNvbXBvc2l0aW9uVXBkYXRlXCIsY2FwdHVyZWQ6XCJvbkNvbXBvc2l0aW9uVXBkYXRlQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbXBvc2l0aW9udXBkYXRlIGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpfX0sdmI9ITE7XG5mdW5jdGlvbiB3YihhLGIpe3N3aXRjaChhKXtjYXNlIFwia2V5dXBcIjpyZXR1cm4tMSE9PW9iLmluZGV4T2YoYi5rZXlDb2RlKTtjYXNlIFwia2V5ZG93blwiOnJldHVybiAyMjkhPT1iLmtleUNvZGU7Y2FzZSBcImtleXByZXNzXCI6Y2FzZSBcIm1vdXNlZG93blwiOmNhc2UgXCJibHVyXCI6cmV0dXJuITA7ZGVmYXVsdDpyZXR1cm4hMX19ZnVuY3Rpb24geGIoYSl7YT1hLmRldGFpbDtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJlwiZGF0YVwiaW4gYT9hLmRhdGE6bnVsbH12YXIgeWI9ITE7ZnVuY3Rpb24gemIoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6cmV0dXJuIHhiKGIpO2Nhc2UgXCJrZXlwcmVzc1wiOmlmKDMyIT09Yi53aGljaClyZXR1cm4gbnVsbDt2Yj0hMDtyZXR1cm4gdGI7Y2FzZSBcInRleHRJbnB1dFwiOnJldHVybiBhPWIuZGF0YSxhPT09dGImJnZiP251bGw6YTtkZWZhdWx0OnJldHVybiBudWxsfX1cbmZ1bmN0aW9uIEFiKGEsYil7aWYoeWIpcmV0dXJuXCJjb21wb3NpdGlvbmVuZFwiPT09YXx8IXBiJiZ3YihhLGIpPyhhPWdiKCksZmI9ZWI9Y2I9bnVsbCx5Yj0hMSxhKTpudWxsO3N3aXRjaChhKXtjYXNlIFwicGFzdGVcIjpyZXR1cm4gbnVsbDtjYXNlIFwia2V5cHJlc3NcIjppZighKGIuY3RybEtleXx8Yi5hbHRLZXl8fGIubWV0YUtleSl8fGIuY3RybEtleSYmYi5hbHRLZXkpe2lmKGIuY2hhciYmMTxiLmNoYXIubGVuZ3RoKXJldHVybiBiLmNoYXI7aWYoYi53aGljaClyZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZShiLndoaWNoKX1yZXR1cm4gbnVsbDtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpyZXR1cm4gc2ImJlwia29cIiE9PWIubG9jYWxlP251bGw6Yi5kYXRhO2RlZmF1bHQ6cmV0dXJuIG51bGx9fVxudmFyIEJiPXtldmVudFR5cGVzOnViLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9dm9pZCAwO3ZhciBmPXZvaWQgMDtpZihwYiliOntzd2l0Y2goYSl7Y2FzZSBcImNvbXBvc2l0aW9uc3RhcnRcIjplPXViLmNvbXBvc2l0aW9uU3RhcnQ7YnJlYWsgYjtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjplPXViLmNvbXBvc2l0aW9uRW5kO2JyZWFrIGI7Y2FzZSBcImNvbXBvc2l0aW9udXBkYXRlXCI6ZT11Yi5jb21wb3NpdGlvblVwZGF0ZTticmVhayBifWU9dm9pZCAwfWVsc2UgeWI/d2IoYSxjKSYmKGU9dWIuY29tcG9zaXRpb25FbmQpOlwia2V5ZG93blwiPT09YSYmMjI5PT09Yy5rZXlDb2RlJiYoZT11Yi5jb21wb3NpdGlvblN0YXJ0KTtlPyhzYiYmXCJrb1wiIT09Yy5sb2NhbGUmJih5Ynx8ZSE9PXViLmNvbXBvc2l0aW9uU3RhcnQ/ZT09PXViLmNvbXBvc2l0aW9uRW5kJiZ5YiYmKGY9Z2IoKSk6KGNiPWQsZWI9XCJ2YWx1ZVwiaW4gY2I/Y2IudmFsdWU6Y2IudGV4dENvbnRlbnQseWI9XG4hMCkpLGU9bWIuZ2V0UG9vbGVkKGUsYixjLGQpLGY/ZS5kYXRhPWY6KGY9eGIoYyksbnVsbCE9PWYmJihlLmRhdGE9ZikpLFJhKGUpLGY9ZSk6Zj1udWxsOyhhPXJiP3piKGEsYyk6QWIoYSxjKSk/KGI9bmIuZ2V0UG9vbGVkKHViLmJlZm9yZUlucHV0LGIsYyxkKSxiLmRhdGE9YSxSYShiKSk6Yj1udWxsO3JldHVybiBudWxsPT09Zj9iOm51bGw9PT1iP2Y6W2YsYl19fSxDYj1udWxsLERiPW51bGwsRWI9bnVsbDtmdW5jdGlvbiBIYihhKXtpZihhPXZhKGEpKXtcImZ1bmN0aW9uXCIhPT10eXBlb2YgQ2I/dChcIjI4MFwiKTp2b2lkIDA7dmFyIGI9dWEoYS5zdGF0ZU5vZGUpO0NiKGEuc3RhdGVOb2RlLGEudHlwZSxiKX19ZnVuY3Rpb24gSWIoYSl7RGI/RWI/RWIucHVzaChhKTpFYj1bYV06RGI9YX1mdW5jdGlvbiBKYigpe2lmKERiKXt2YXIgYT1EYixiPUViO0ViPURiPW51bGw7SGIoYSk7aWYoYilmb3IoYT0wO2E8Yi5sZW5ndGg7YSsrKUhiKGJbYV0pfX1cbmZ1bmN0aW9uIEtiKGEsYil7cmV0dXJuIGEoYil9ZnVuY3Rpb24gTGIoYSxiLGMpe3JldHVybiBhKGIsYyl9ZnVuY3Rpb24gTWIoKXt9dmFyIE5iPSExO2Z1bmN0aW9uIE9iKGEsYil7aWYoTmIpcmV0dXJuIGEoYik7TmI9ITA7dHJ5e3JldHVybiBLYihhLGIpfWZpbmFsbHl7aWYoTmI9ITEsbnVsbCE9PURifHxudWxsIT09RWIpTWIoKSxKYigpfX12YXIgUGI9e2NvbG9yOiEwLGRhdGU6ITAsZGF0ZXRpbWU6ITAsXCJkYXRldGltZS1sb2NhbFwiOiEwLGVtYWlsOiEwLG1vbnRoOiEwLG51bWJlcjohMCxwYXNzd29yZDohMCxyYW5nZTohMCxzZWFyY2g6ITAsdGVsOiEwLHRleHQ6ITAsdGltZTohMCx1cmw6ITAsd2VlazohMH07ZnVuY3Rpb24gUWIoYSl7dmFyIGI9YSYmYS5ub2RlTmFtZSYmYS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVyblwiaW5wdXRcIj09PWI/ISFQYlthLnR5cGVdOlwidGV4dGFyZWFcIj09PWI/ITA6ITF9XG5mdW5jdGlvbiBSYihhKXthPWEudGFyZ2V0fHxhLnNyY0VsZW1lbnR8fHdpbmRvdzthLmNvcnJlc3BvbmRpbmdVc2VFbGVtZW50JiYoYT1hLmNvcnJlc3BvbmRpbmdVc2VFbGVtZW50KTtyZXR1cm4gMz09PWEubm9kZVR5cGU/YS5wYXJlbnROb2RlOmF9ZnVuY3Rpb24gU2IoYSl7aWYoIVNhKXJldHVybiExO2E9XCJvblwiK2E7dmFyIGI9YSBpbiBkb2N1bWVudDtifHwoYj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLGIuc2V0QXR0cmlidXRlKGEsXCJyZXR1cm47XCIpLGI9XCJmdW5jdGlvblwiPT09dHlwZW9mIGJbYV0pO3JldHVybiBifWZ1bmN0aW9uIFRiKGEpe3ZhciBiPWEudHlwZTtyZXR1cm4oYT1hLm5vZGVOYW1lKSYmXCJpbnB1dFwiPT09YS50b0xvd2VyQ2FzZSgpJiYoXCJjaGVja2JveFwiPT09Ynx8XCJyYWRpb1wiPT09Yil9XG5mdW5jdGlvbiBVYihhKXt2YXIgYj1UYihhKT9cImNoZWNrZWRcIjpcInZhbHVlXCIsYz1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGEuY29uc3RydWN0b3IucHJvdG90eXBlLGIpLGQ9XCJcIithW2JdO2lmKCFhLmhhc093blByb3BlcnR5KGIpJiZcInVuZGVmaW5lZFwiIT09dHlwZW9mIGMmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLmdldCYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGMuc2V0KXt2YXIgZT1jLmdldCxmPWMuc2V0O09iamVjdC5kZWZpbmVQcm9wZXJ0eShhLGIse2NvbmZpZ3VyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gZS5jYWxsKHRoaXMpfSxzZXQ6ZnVuY3Rpb24oYSl7ZD1cIlwiK2E7Zi5jYWxsKHRoaXMsYSl9fSk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGEsYix7ZW51bWVyYWJsZTpjLmVudW1lcmFibGV9KTtyZXR1cm57Z2V0VmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gZH0sc2V0VmFsdWU6ZnVuY3Rpb24oYSl7ZD1cIlwiK2F9LHN0b3BUcmFja2luZzpmdW5jdGlvbigpe2EuX3ZhbHVlVHJhY2tlcj1cbm51bGw7ZGVsZXRlIGFbYl19fX19ZnVuY3Rpb24gVmIoYSl7YS5fdmFsdWVUcmFja2VyfHwoYS5fdmFsdWVUcmFja2VyPVViKGEpKX1mdW5jdGlvbiBXYihhKXtpZighYSlyZXR1cm4hMTt2YXIgYj1hLl92YWx1ZVRyYWNrZXI7aWYoIWIpcmV0dXJuITA7dmFyIGM9Yi5nZXRWYWx1ZSgpO3ZhciBkPVwiXCI7YSYmKGQ9VGIoYSk/YS5jaGVja2VkP1widHJ1ZVwiOlwiZmFsc2VcIjphLnZhbHVlKTthPWQ7cmV0dXJuIGEhPT1jPyhiLnNldFZhbHVlKGEpLCEwKTohMX1cbnZhciBYYj1hYS5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRCxZYj0vXiguKilbXFxcXFxcL10vLEQ9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcixaYj1EP1N5bWJvbC5mb3IoXCJyZWFjdC5lbGVtZW50XCIpOjYwMTAzLCRiPUQ/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixhYz1EP1N5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKTo2MDEwNyxiYz1EP1N5bWJvbC5mb3IoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKTo2MDEwOCxjYz1EP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCxkYz1EP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKTo2MDEwOSxlYz1EP1N5bWJvbC5mb3IoXCJyZWFjdC5jb250ZXh0XCIpOjYwMTEwLGZjPUQ/U3ltYm9sLmZvcihcInJlYWN0LmNvbmN1cnJlbnRfbW9kZVwiKTo2MDExMSxnYz1EP1N5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTo2MDExMixoYz1EP1N5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZVwiKTpcbjYwMTEzLGljPUQ/U3ltYm9sLmZvcihcInJlYWN0Lm1lbW9cIik6NjAxMTUsamM9RD9TeW1ib2wuZm9yKFwicmVhY3QubGF6eVwiKTo2MDExNixrYz1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuaXRlcmF0b3I7ZnVuY3Rpb24gbGMoYSl7aWYobnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYSlyZXR1cm4gbnVsbDthPWtjJiZhW2tjXXx8YVtcIkBAaXRlcmF0b3JcIl07cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YTpudWxsfVxuZnVuY3Rpb24gbWMoYSl7aWYobnVsbD09YSlyZXR1cm4gbnVsbDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlyZXR1cm4gYS5kaXNwbGF5TmFtZXx8YS5uYW1lfHxudWxsO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYSlyZXR1cm4gYTtzd2l0Y2goYSl7Y2FzZSBmYzpyZXR1cm5cIkNvbmN1cnJlbnRNb2RlXCI7Y2FzZSBhYzpyZXR1cm5cIkZyYWdtZW50XCI7Y2FzZSAkYjpyZXR1cm5cIlBvcnRhbFwiO2Nhc2UgY2M6cmV0dXJuXCJQcm9maWxlclwiO2Nhc2UgYmM6cmV0dXJuXCJTdHJpY3RNb2RlXCI7Y2FzZSBoYzpyZXR1cm5cIlN1c3BlbnNlXCJ9aWYoXCJvYmplY3RcIj09PXR5cGVvZiBhKXN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIGVjOnJldHVyblwiQ29udGV4dC5Db25zdW1lclwiO2Nhc2UgZGM6cmV0dXJuXCJDb250ZXh0LlByb3ZpZGVyXCI7Y2FzZSBnYzp2YXIgYj1hLnJlbmRlcjtiPWIuZGlzcGxheU5hbWV8fGIubmFtZXx8XCJcIjtyZXR1cm4gYS5kaXNwbGF5TmFtZXx8KFwiXCIhPT1iP1wiRm9yd2FyZFJlZihcIitiK1xuXCIpXCI6XCJGb3J3YXJkUmVmXCIpO2Nhc2UgaWM6cmV0dXJuIG1jKGEudHlwZSk7Y2FzZSBqYzppZihhPTE9PT1hLl9zdGF0dXM/YS5fcmVzdWx0Om51bGwpcmV0dXJuIG1jKGEpfXJldHVybiBudWxsfWZ1bmN0aW9uIG5jKGEpe3ZhciBiPVwiXCI7ZG97YTpzd2l0Y2goYS50YWcpe2Nhc2UgMzpjYXNlIDQ6Y2FzZSA2OmNhc2UgNzpjYXNlIDEwOmNhc2UgOTp2YXIgYz1cIlwiO2JyZWFrIGE7ZGVmYXVsdDp2YXIgZD1hLl9kZWJ1Z093bmVyLGU9YS5fZGVidWdTb3VyY2UsZj1tYyhhLnR5cGUpO2M9bnVsbDtkJiYoYz1tYyhkLnR5cGUpKTtkPWY7Zj1cIlwiO2U/Zj1cIiAoYXQgXCIrZS5maWxlTmFtZS5yZXBsYWNlKFliLFwiXCIpK1wiOlwiK2UubGluZU51bWJlcitcIilcIjpjJiYoZj1cIiAoY3JlYXRlZCBieSBcIitjK1wiKVwiKTtjPVwiXFxuICAgIGluIFwiKyhkfHxcIlVua25vd25cIikrZn1iKz1jO2E9YS5yZXR1cm59d2hpbGUoYSk7cmV0dXJuIGJ9XG52YXIgb2M9L15bOkEtWl9hLXpcXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwRjZcXHUwMEY4LVxcdTAyRkZcXHUwMzcwLVxcdTAzN0RcXHUwMzdGLVxcdTFGRkZcXHUyMDBDLVxcdTIwMERcXHUyMDcwLVxcdTIxOEZcXHUyQzAwLVxcdTJGRUZcXHUzMDAxLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRkRdWzpBLVpfYS16XFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMkZGXFx1MDM3MC1cXHUwMzdEXFx1MDM3Ri1cXHUxRkZGXFx1MjAwQy1cXHUyMDBEXFx1MjA3MC1cXHUyMThGXFx1MkMwMC1cXHUyRkVGXFx1MzAwMS1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkZEXFwtLjAtOVxcdTAwQjdcXHUwMzAwLVxcdTAzNkZcXHUyMDNGLVxcdTIwNDBdKiQvLHBjPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkscWM9e30scmM9e307XG5mdW5jdGlvbiBzYyhhKXtpZihwYy5jYWxsKHJjLGEpKXJldHVybiEwO2lmKHBjLmNhbGwocWMsYSkpcmV0dXJuITE7aWYob2MudGVzdChhKSlyZXR1cm4gcmNbYV09ITA7cWNbYV09ITA7cmV0dXJuITF9ZnVuY3Rpb24gdGMoYSxiLGMsZCl7aWYobnVsbCE9PWMmJjA9PT1jLnR5cGUpcmV0dXJuITE7c3dpdGNoKHR5cGVvZiBiKXtjYXNlIFwiZnVuY3Rpb25cIjpjYXNlIFwic3ltYm9sXCI6cmV0dXJuITA7Y2FzZSBcImJvb2xlYW5cIjppZihkKXJldHVybiExO2lmKG51bGwhPT1jKXJldHVybiFjLmFjY2VwdHNCb29sZWFuczthPWEudG9Mb3dlckNhc2UoKS5zbGljZSgwLDUpO3JldHVyblwiZGF0YS1cIiE9PWEmJlwiYXJpYS1cIiE9PWE7ZGVmYXVsdDpyZXR1cm4hMX19XG5mdW5jdGlvbiB1YyhhLGIsYyxkKXtpZihudWxsPT09Ynx8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiBifHx0YyhhLGIsYyxkKSlyZXR1cm4hMDtpZihkKXJldHVybiExO2lmKG51bGwhPT1jKXN3aXRjaChjLnR5cGUpe2Nhc2UgMzpyZXR1cm4hYjtjYXNlIDQ6cmV0dXJuITE9PT1iO2Nhc2UgNTpyZXR1cm4gaXNOYU4oYik7Y2FzZSA2OnJldHVybiBpc05hTihiKXx8MT5ifXJldHVybiExfWZ1bmN0aW9uIEUoYSxiLGMsZCxlKXt0aGlzLmFjY2VwdHNCb29sZWFucz0yPT09Ynx8Mz09PWJ8fDQ9PT1iO3RoaXMuYXR0cmlidXRlTmFtZT1kO3RoaXMuYXR0cmlidXRlTmFtZXNwYWNlPWU7dGhpcy5tdXN0VXNlUHJvcGVydHk9Yzt0aGlzLnByb3BlcnR5TmFtZT1hO3RoaXMudHlwZT1ifXZhciBGPXt9O1xuXCJjaGlsZHJlbiBkYW5nZXJvdXNseVNldElubmVySFRNTCBkZWZhdWx0VmFsdWUgZGVmYXVsdENoZWNrZWQgaW5uZXJIVE1MIHN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZyBzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmcgc3R5bGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXtGW2FdPW5ldyBFKGEsMCwhMSxhLG51bGwpfSk7W1tcImFjY2VwdENoYXJzZXRcIixcImFjY2VwdC1jaGFyc2V0XCJdLFtcImNsYXNzTmFtZVwiLFwiY2xhc3NcIl0sW1wiaHRtbEZvclwiLFwiZm9yXCJdLFtcImh0dHBFcXVpdlwiLFwiaHR0cC1lcXVpdlwiXV0uZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hWzBdO0ZbYl09bmV3IEUoYiwxLCExLGFbMV0sbnVsbCl9KTtbXCJjb250ZW50RWRpdGFibGVcIixcImRyYWdnYWJsZVwiLFwic3BlbGxDaGVja1wiLFwidmFsdWVcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtGW2FdPW5ldyBFKGEsMiwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCl9KTtcbltcImF1dG9SZXZlcnNlXCIsXCJleHRlcm5hbFJlc291cmNlc1JlcXVpcmVkXCIsXCJmb2N1c2FibGVcIixcInByZXNlcnZlQWxwaGFcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtGW2FdPW5ldyBFKGEsMiwhMSxhLG51bGwpfSk7XCJhbGxvd0Z1bGxTY3JlZW4gYXN5bmMgYXV0b0ZvY3VzIGF1dG9QbGF5IGNvbnRyb2xzIGRlZmF1bHQgZGVmZXIgZGlzYWJsZWQgZm9ybU5vVmFsaWRhdGUgaGlkZGVuIGxvb3Agbm9Nb2R1bGUgbm9WYWxpZGF0ZSBvcGVuIHBsYXlzSW5saW5lIHJlYWRPbmx5IHJlcXVpcmVkIHJldmVyc2VkIHNjb3BlZCBzZWFtbGVzcyBpdGVtU2NvcGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXtGW2FdPW5ldyBFKGEsMywhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCl9KTtbXCJjaGVja2VkXCIsXCJtdWx0aXBsZVwiLFwibXV0ZWRcIixcInNlbGVjdGVkXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RlthXT1uZXcgRShhLDMsITAsYSxudWxsKX0pO1xuW1wiY2FwdHVyZVwiLFwiZG93bmxvYWRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtGW2FdPW5ldyBFKGEsNCwhMSxhLG51bGwpfSk7W1wiY29sc1wiLFwicm93c1wiLFwic2l6ZVwiLFwic3BhblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0ZbYV09bmV3IEUoYSw2LCExLGEsbnVsbCl9KTtbXCJyb3dTcGFuXCIsXCJzdGFydFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0ZbYV09bmV3IEUoYSw1LCExLGEudG9Mb3dlckNhc2UoKSxudWxsKX0pO3ZhciB2Yz0vW1xcLTpdKFthLXpdKS9nO2Z1bmN0aW9uIHdjKGEpe3JldHVybiBhWzFdLnRvVXBwZXJDYXNlKCl9XG5cImFjY2VudC1oZWlnaHQgYWxpZ25tZW50LWJhc2VsaW5lIGFyYWJpYy1mb3JtIGJhc2VsaW5lLXNoaWZ0IGNhcC1oZWlnaHQgY2xpcC1wYXRoIGNsaXAtcnVsZSBjb2xvci1pbnRlcnBvbGF0aW9uIGNvbG9yLWludGVycG9sYXRpb24tZmlsdGVycyBjb2xvci1wcm9maWxlIGNvbG9yLXJlbmRlcmluZyBkb21pbmFudC1iYXNlbGluZSBlbmFibGUtYmFja2dyb3VuZCBmaWxsLW9wYWNpdHkgZmlsbC1ydWxlIGZsb29kLWNvbG9yIGZsb29kLW9wYWNpdHkgZm9udC1mYW1pbHkgZm9udC1zaXplIGZvbnQtc2l6ZS1hZGp1c3QgZm9udC1zdHJldGNoIGZvbnQtc3R5bGUgZm9udC12YXJpYW50IGZvbnQtd2VpZ2h0IGdseXBoLW5hbWUgZ2x5cGgtb3JpZW50YXRpb24taG9yaXpvbnRhbCBnbHlwaC1vcmllbnRhdGlvbi12ZXJ0aWNhbCBob3Jpei1hZHYteCBob3Jpei1vcmlnaW4teCBpbWFnZS1yZW5kZXJpbmcgbGV0dGVyLXNwYWNpbmcgbGlnaHRpbmctY29sb3IgbWFya2VyLWVuZCBtYXJrZXItbWlkIG1hcmtlci1zdGFydCBvdmVybGluZS1wb3NpdGlvbiBvdmVybGluZS10aGlja25lc3MgcGFpbnQtb3JkZXIgcGFub3NlLTEgcG9pbnRlci1ldmVudHMgcmVuZGVyaW5nLWludGVudCBzaGFwZS1yZW5kZXJpbmcgc3RvcC1jb2xvciBzdG9wLW9wYWNpdHkgc3RyaWtldGhyb3VnaC1wb3NpdGlvbiBzdHJpa2V0aHJvdWdoLXRoaWNrbmVzcyBzdHJva2UtZGFzaGFycmF5IHN0cm9rZS1kYXNob2Zmc2V0IHN0cm9rZS1saW5lY2FwIHN0cm9rZS1saW5lam9pbiBzdHJva2UtbWl0ZXJsaW1pdCBzdHJva2Utb3BhY2l0eSBzdHJva2Utd2lkdGggdGV4dC1hbmNob3IgdGV4dC1kZWNvcmF0aW9uIHRleHQtcmVuZGVyaW5nIHVuZGVybGluZS1wb3NpdGlvbiB1bmRlcmxpbmUtdGhpY2tuZXNzIHVuaWNvZGUtYmlkaSB1bmljb2RlLXJhbmdlIHVuaXRzLXBlci1lbSB2LWFscGhhYmV0aWMgdi1oYW5naW5nIHYtaWRlb2dyYXBoaWMgdi1tYXRoZW1hdGljYWwgdmVjdG9yLWVmZmVjdCB2ZXJ0LWFkdi15IHZlcnQtb3JpZ2luLXggdmVydC1vcmlnaW4teSB3b3JkLXNwYWNpbmcgd3JpdGluZy1tb2RlIHhtbG5zOnhsaW5rIHgtaGVpZ2h0XCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKHZjLFxud2MpO0ZbYl09bmV3IEUoYiwxLCExLGEsbnVsbCl9KTtcInhsaW5rOmFjdHVhdGUgeGxpbms6YXJjcm9sZSB4bGluazpocmVmIHhsaW5rOnJvbGUgeGxpbms6c2hvdyB4bGluazp0aXRsZSB4bGluazp0eXBlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKHZjLHdjKTtGW2JdPW5ldyBFKGIsMSwhMSxhLFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiKX0pO1tcInhtbDpiYXNlXCIsXCJ4bWw6bGFuZ1wiLFwieG1sOnNwYWNlXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKHZjLHdjKTtGW2JdPW5ldyBFKGIsMSwhMSxhLFwiaHR0cDovL3d3dy53My5vcmcvWE1MLzE5OTgvbmFtZXNwYWNlXCIpfSk7Ri50YWJJbmRleD1uZXcgRShcInRhYkluZGV4XCIsMSwhMSxcInRhYmluZGV4XCIsbnVsbCk7XG5mdW5jdGlvbiB4YyhhLGIsYyxkKXt2YXIgZT1GLmhhc093blByb3BlcnR5KGIpP0ZbYl06bnVsbDt2YXIgZj1udWxsIT09ZT8wPT09ZS50eXBlOmQ/ITE6ISgyPGIubGVuZ3RoKXx8XCJvXCIhPT1iWzBdJiZcIk9cIiE9PWJbMF18fFwiblwiIT09YlsxXSYmXCJOXCIhPT1iWzFdPyExOiEwO2Z8fCh1YyhiLGMsZSxkKSYmKGM9bnVsbCksZHx8bnVsbD09PWU/c2MoYikmJihudWxsPT09Yz9hLnJlbW92ZUF0dHJpYnV0ZShiKTphLnNldEF0dHJpYnV0ZShiLFwiXCIrYykpOmUubXVzdFVzZVByb3BlcnR5P2FbZS5wcm9wZXJ0eU5hbWVdPW51bGw9PT1jPzM9PT1lLnR5cGU/ITE6XCJcIjpjOihiPWUuYXR0cmlidXRlTmFtZSxkPWUuYXR0cmlidXRlTmFtZXNwYWNlLG51bGw9PT1jP2EucmVtb3ZlQXR0cmlidXRlKGIpOihlPWUudHlwZSxjPTM9PT1lfHw0PT09ZSYmITA9PT1jP1wiXCI6XCJcIitjLGQ/YS5zZXRBdHRyaWJ1dGVOUyhkLGIsYyk6YS5zZXRBdHRyaWJ1dGUoYixjKSkpKX1cbmZ1bmN0aW9uIHljKGEpe3N3aXRjaCh0eXBlb2YgYSl7Y2FzZSBcImJvb2xlYW5cIjpjYXNlIFwibnVtYmVyXCI6Y2FzZSBcIm9iamVjdFwiOmNhc2UgXCJzdHJpbmdcIjpjYXNlIFwidW5kZWZpbmVkXCI6cmV0dXJuIGE7ZGVmYXVsdDpyZXR1cm5cIlwifX1mdW5jdGlvbiB6YyhhLGIpe3ZhciBjPWIuY2hlY2tlZDtyZXR1cm4gbih7fSxiLHtkZWZhdWx0Q2hlY2tlZDp2b2lkIDAsZGVmYXVsdFZhbHVlOnZvaWQgMCx2YWx1ZTp2b2lkIDAsY2hlY2tlZDpudWxsIT1jP2M6YS5fd3JhcHBlclN0YXRlLmluaXRpYWxDaGVja2VkfSl9XG5mdW5jdGlvbiBBYyhhLGIpe3ZhciBjPW51bGw9PWIuZGVmYXVsdFZhbHVlP1wiXCI6Yi5kZWZhdWx0VmFsdWUsZD1udWxsIT1iLmNoZWNrZWQ/Yi5jaGVja2VkOmIuZGVmYXVsdENoZWNrZWQ7Yz15YyhudWxsIT1iLnZhbHVlP2IudmFsdWU6Yyk7YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsQ2hlY2tlZDpkLGluaXRpYWxWYWx1ZTpjLGNvbnRyb2xsZWQ6XCJjaGVja2JveFwiPT09Yi50eXBlfHxcInJhZGlvXCI9PT1iLnR5cGU/bnVsbCE9Yi5jaGVja2VkOm51bGwhPWIudmFsdWV9fWZ1bmN0aW9uIEJjKGEsYil7Yj1iLmNoZWNrZWQ7bnVsbCE9YiYmeGMoYSxcImNoZWNrZWRcIixiLCExKX1cbmZ1bmN0aW9uIENjKGEsYil7QmMoYSxiKTt2YXIgYz15YyhiLnZhbHVlKSxkPWIudHlwZTtpZihudWxsIT1jKWlmKFwibnVtYmVyXCI9PT1kKXtpZigwPT09YyYmXCJcIj09PWEudmFsdWV8fGEudmFsdWUhPWMpYS52YWx1ZT1cIlwiK2N9ZWxzZSBhLnZhbHVlIT09XCJcIitjJiYoYS52YWx1ZT1cIlwiK2MpO2Vsc2UgaWYoXCJzdWJtaXRcIj09PWR8fFwicmVzZXRcIj09PWQpe2EucmVtb3ZlQXR0cmlidXRlKFwidmFsdWVcIik7cmV0dXJufWIuaGFzT3duUHJvcGVydHkoXCJ2YWx1ZVwiKT9EYyhhLGIudHlwZSxjKTpiLmhhc093blByb3BlcnR5KFwiZGVmYXVsdFZhbHVlXCIpJiZEYyhhLGIudHlwZSx5YyhiLmRlZmF1bHRWYWx1ZSkpO251bGw9PWIuY2hlY2tlZCYmbnVsbCE9Yi5kZWZhdWx0Q2hlY2tlZCYmKGEuZGVmYXVsdENoZWNrZWQ9ISFiLmRlZmF1bHRDaGVja2VkKX1cbmZ1bmN0aW9uIEVjKGEsYixjKXtpZihiLmhhc093blByb3BlcnR5KFwidmFsdWVcIil8fGIuaGFzT3duUHJvcGVydHkoXCJkZWZhdWx0VmFsdWVcIikpe3ZhciBkPWIudHlwZTtpZighKFwic3VibWl0XCIhPT1kJiZcInJlc2V0XCIhPT1kfHx2b2lkIDAhPT1iLnZhbHVlJiZudWxsIT09Yi52YWx1ZSkpcmV0dXJuO2I9XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlO2N8fGI9PT1hLnZhbHVlfHwoYS52YWx1ZT1iKTthLmRlZmF1bHRWYWx1ZT1ifWM9YS5uYW1lO1wiXCIhPT1jJiYoYS5uYW1lPVwiXCIpO2EuZGVmYXVsdENoZWNrZWQ9IWEuZGVmYXVsdENoZWNrZWQ7YS5kZWZhdWx0Q2hlY2tlZD0hIWEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsQ2hlY2tlZDtcIlwiIT09YyYmKGEubmFtZT1jKX1cbmZ1bmN0aW9uIERjKGEsYixjKXtpZihcIm51bWJlclwiIT09Ynx8YS5vd25lckRvY3VtZW50LmFjdGl2ZUVsZW1lbnQhPT1hKW51bGw9PWM/YS5kZWZhdWx0VmFsdWU9XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlOmEuZGVmYXVsdFZhbHVlIT09XCJcIitjJiYoYS5kZWZhdWx0VmFsdWU9XCJcIitjKX12YXIgRmM9e2NoYW5nZTp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNoYW5nZVwiLGNhcHR1cmVkOlwib25DaGFuZ2VDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY2hhbmdlIGNsaWNrIGZvY3VzIGlucHV0IGtleWRvd24ga2V5dXAgc2VsZWN0aW9uY2hhbmdlXCIuc3BsaXQoXCIgXCIpfX07ZnVuY3Rpb24gR2MoYSxiLGMpe2E9ei5nZXRQb29sZWQoRmMuY2hhbmdlLGEsYixjKTthLnR5cGU9XCJjaGFuZ2VcIjtJYihjKTtSYShhKTtyZXR1cm4gYX12YXIgSmM9bnVsbCxLYz1udWxsO2Z1bmN0aW9uIExjKGEpe0VhKGEpfVxuZnVuY3Rpb24gTWMoYSl7dmFyIGI9S2EoYSk7aWYoV2IoYikpcmV0dXJuIGF9ZnVuY3Rpb24gTmMoYSxiKXtpZihcImNoYW5nZVwiPT09YSlyZXR1cm4gYn12YXIgT2M9ITE7U2EmJihPYz1TYihcImlucHV0XCIpJiYoIWRvY3VtZW50LmRvY3VtZW50TW9kZXx8OTxkb2N1bWVudC5kb2N1bWVudE1vZGUpKTtmdW5jdGlvbiBQYygpe0pjJiYoSmMuZGV0YWNoRXZlbnQoXCJvbnByb3BlcnR5Y2hhbmdlXCIsUWMpLEtjPUpjPW51bGwpfWZ1bmN0aW9uIFFjKGEpe1widmFsdWVcIj09PWEucHJvcGVydHlOYW1lJiZNYyhLYykmJihhPUdjKEtjLGEsUmIoYSkpLE9iKExjLGEpKX1mdW5jdGlvbiBSYyhhLGIsYyl7XCJmb2N1c1wiPT09YT8oUGMoKSxKYz1iLEtjPWMsSmMuYXR0YWNoRXZlbnQoXCJvbnByb3BlcnR5Y2hhbmdlXCIsUWMpKTpcImJsdXJcIj09PWEmJlBjKCl9ZnVuY3Rpb24gU2MoYSl7aWYoXCJzZWxlY3Rpb25jaGFuZ2VcIj09PWF8fFwia2V5dXBcIj09PWF8fFwia2V5ZG93blwiPT09YSlyZXR1cm4gTWMoS2MpfVxuZnVuY3Rpb24gVGMoYSxiKXtpZihcImNsaWNrXCI9PT1hKXJldHVybiBNYyhiKX1mdW5jdGlvbiBVYyhhLGIpe2lmKFwiaW5wdXRcIj09PWF8fFwiY2hhbmdlXCI9PT1hKXJldHVybiBNYyhiKX1cbnZhciBWYz17ZXZlbnRUeXBlczpGYyxfaXNJbnB1dEV2ZW50U3VwcG9ydGVkOk9jLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9Yj9LYShiKTp3aW5kb3csZj12b2lkIDAsZz12b2lkIDAsaD1lLm5vZGVOYW1lJiZlLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7XCJzZWxlY3RcIj09PWh8fFwiaW5wdXRcIj09PWgmJlwiZmlsZVwiPT09ZS50eXBlP2Y9TmM6UWIoZSk/T2M/Zj1VYzooZj1TYyxnPVJjKTooaD1lLm5vZGVOYW1lKSYmXCJpbnB1dFwiPT09aC50b0xvd2VyQ2FzZSgpJiYoXCJjaGVja2JveFwiPT09ZS50eXBlfHxcInJhZGlvXCI9PT1lLnR5cGUpJiYoZj1UYyk7aWYoZiYmKGY9ZihhLGIpKSlyZXR1cm4gR2MoZixjLGQpO2cmJmcoYSxlLGIpO1wiYmx1clwiPT09YSYmKGE9ZS5fd3JhcHBlclN0YXRlKSYmYS5jb250cm9sbGVkJiZcIm51bWJlclwiPT09ZS50eXBlJiZEYyhlLFwibnVtYmVyXCIsZS52YWx1ZSl9fSxXYz16LmV4dGVuZCh7dmlldzpudWxsLGRldGFpbDpudWxsfSksWGM9e0FsdDpcImFsdEtleVwiLFxuQ29udHJvbDpcImN0cmxLZXlcIixNZXRhOlwibWV0YUtleVwiLFNoaWZ0Olwic2hpZnRLZXlcIn07ZnVuY3Rpb24gWWMoYSl7dmFyIGI9dGhpcy5uYXRpdmVFdmVudDtyZXR1cm4gYi5nZXRNb2RpZmllclN0YXRlP2IuZ2V0TW9kaWZpZXJTdGF0ZShhKTooYT1YY1thXSk/ISFiW2FdOiExfWZ1bmN0aW9uIFpjKCl7cmV0dXJuIFljfVxudmFyICRjPTAsYWQ9MCxiZD0hMSxjZD0hMSxkZD1XYy5leHRlbmQoe3NjcmVlblg6bnVsbCxzY3JlZW5ZOm51bGwsY2xpZW50WDpudWxsLGNsaWVudFk6bnVsbCxwYWdlWDpudWxsLHBhZ2VZOm51bGwsY3RybEtleTpudWxsLHNoaWZ0S2V5Om51bGwsYWx0S2V5Om51bGwsbWV0YUtleTpudWxsLGdldE1vZGlmaWVyU3RhdGU6WmMsYnV0dG9uOm51bGwsYnV0dG9uczpudWxsLHJlbGF0ZWRUYXJnZXQ6ZnVuY3Rpb24oYSl7cmV0dXJuIGEucmVsYXRlZFRhcmdldHx8KGEuZnJvbUVsZW1lbnQ9PT1hLnNyY0VsZW1lbnQ/YS50b0VsZW1lbnQ6YS5mcm9tRWxlbWVudCl9LG1vdmVtZW50WDpmdW5jdGlvbihhKXtpZihcIm1vdmVtZW50WFwiaW4gYSlyZXR1cm4gYS5tb3ZlbWVudFg7dmFyIGI9JGM7JGM9YS5zY3JlZW5YO3JldHVybiBiZD9cIm1vdXNlbW92ZVwiPT09YS50eXBlP2Euc2NyZWVuWC1iOjA6KGJkPSEwLDApfSxtb3ZlbWVudFk6ZnVuY3Rpb24oYSl7aWYoXCJtb3ZlbWVudFlcImluIGEpcmV0dXJuIGEubW92ZW1lbnRZO1xudmFyIGI9YWQ7YWQ9YS5zY3JlZW5ZO3JldHVybiBjZD9cIm1vdXNlbW92ZVwiPT09YS50eXBlP2Euc2NyZWVuWS1iOjA6KGNkPSEwLDApfX0pLGVkPWRkLmV4dGVuZCh7cG9pbnRlcklkOm51bGwsd2lkdGg6bnVsbCxoZWlnaHQ6bnVsbCxwcmVzc3VyZTpudWxsLHRhbmdlbnRpYWxQcmVzc3VyZTpudWxsLHRpbHRYOm51bGwsdGlsdFk6bnVsbCx0d2lzdDpudWxsLHBvaW50ZXJUeXBlOm51bGwsaXNQcmltYXJ5Om51bGx9KSxmZD17bW91c2VFbnRlcjp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uTW91c2VFbnRlclwiLGRlcGVuZGVuY2llczpbXCJtb3VzZW91dFwiLFwibW91c2VvdmVyXCJdfSxtb3VzZUxlYXZlOntyZWdpc3RyYXRpb25OYW1lOlwib25Nb3VzZUxlYXZlXCIsZGVwZW5kZW5jaWVzOltcIm1vdXNlb3V0XCIsXCJtb3VzZW92ZXJcIl19LHBvaW50ZXJFbnRlcjp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uUG9pbnRlckVudGVyXCIsZGVwZW5kZW5jaWVzOltcInBvaW50ZXJvdXRcIixcInBvaW50ZXJvdmVyXCJdfSxwb2ludGVyTGVhdmU6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvblBvaW50ZXJMZWF2ZVwiLFxuZGVwZW5kZW5jaWVzOltcInBvaW50ZXJvdXRcIixcInBvaW50ZXJvdmVyXCJdfX0sZ2Q9e2V2ZW50VHlwZXM6ZmQsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1cIm1vdXNlb3ZlclwiPT09YXx8XCJwb2ludGVyb3ZlclwiPT09YSxmPVwibW91c2VvdXRcIj09PWF8fFwicG9pbnRlcm91dFwiPT09YTtpZihlJiYoYy5yZWxhdGVkVGFyZ2V0fHxjLmZyb21FbGVtZW50KXx8IWYmJiFlKXJldHVybiBudWxsO2U9ZC53aW5kb3c9PT1kP2Q6KGU9ZC5vd25lckRvY3VtZW50KT9lLmRlZmF1bHRWaWV3fHxlLnBhcmVudFdpbmRvdzp3aW5kb3c7Zj8oZj1iLGI9KGI9Yy5yZWxhdGVkVGFyZ2V0fHxjLnRvRWxlbWVudCk/SWEoYik6bnVsbCk6Zj1udWxsO2lmKGY9PT1iKXJldHVybiBudWxsO3ZhciBnPXZvaWQgMCxoPXZvaWQgMCxrPXZvaWQgMCxsPXZvaWQgMDtpZihcIm1vdXNlb3V0XCI9PT1hfHxcIm1vdXNlb3ZlclwiPT09YSlnPWRkLGg9ZmQubW91c2VMZWF2ZSxrPWZkLm1vdXNlRW50ZXIsbD1cIm1vdXNlXCI7XG5lbHNlIGlmKFwicG9pbnRlcm91dFwiPT09YXx8XCJwb2ludGVyb3ZlclwiPT09YSlnPWVkLGg9ZmQucG9pbnRlckxlYXZlLGs9ZmQucG9pbnRlckVudGVyLGw9XCJwb2ludGVyXCI7dmFyIG09bnVsbD09Zj9lOkthKGYpO2U9bnVsbD09Yj9lOkthKGIpO2E9Zy5nZXRQb29sZWQoaCxmLGMsZCk7YS50eXBlPWwrXCJsZWF2ZVwiO2EudGFyZ2V0PW07YS5yZWxhdGVkVGFyZ2V0PWU7Yz1nLmdldFBvb2xlZChrLGIsYyxkKTtjLnR5cGU9bCtcImVudGVyXCI7Yy50YXJnZXQ9ZTtjLnJlbGF0ZWRUYXJnZXQ9bTtkPWI7aWYoZiYmZClhOntiPWY7ZT1kO2w9MDtmb3IoZz1iO2c7Zz1NYShnKSlsKys7Zz0wO2ZvcihrPWU7aztrPU1hKGspKWcrKztmb3IoOzA8bC1nOyliPU1hKGIpLGwtLTtmb3IoOzA8Zy1sOyllPU1hKGUpLGctLTtmb3IoO2wtLTspe2lmKGI9PT1lfHxiPT09ZS5hbHRlcm5hdGUpYnJlYWsgYTtiPU1hKGIpO2U9TWEoZSl9Yj1udWxsfWVsc2UgYj1udWxsO2U9Yjtmb3IoYj1bXTtmJiZmIT09ZTspe2w9XG5mLmFsdGVybmF0ZTtpZihudWxsIT09bCYmbD09PWUpYnJlYWs7Yi5wdXNoKGYpO2Y9TWEoZil9Zm9yKGY9W107ZCYmZCE9PWU7KXtsPWQuYWx0ZXJuYXRlO2lmKG51bGwhPT1sJiZsPT09ZSlicmVhaztmLnB1c2goZCk7ZD1NYShkKX1mb3IoZD0wO2Q8Yi5sZW5ndGg7ZCsrKVBhKGJbZF0sXCJidWJibGVkXCIsYSk7Zm9yKGQ9Zi5sZW5ndGg7MDxkLS07KVBhKGZbZF0sXCJjYXB0dXJlZFwiLGMpO3JldHVyblthLGNdfX0saGQ9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtmdW5jdGlvbiBpZChhLGIpe3JldHVybiBhPT09Yj8wIT09YXx8MCE9PWJ8fDEvYT09PTEvYjphIT09YSYmYiE9PWJ9XG5mdW5jdGlvbiBqZChhLGIpe2lmKGlkKGEsYikpcmV0dXJuITA7aWYoXCJvYmplY3RcIiE9PXR5cGVvZiBhfHxudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBifHxudWxsPT09YilyZXR1cm4hMTt2YXIgYz1PYmplY3Qua2V5cyhhKSxkPU9iamVjdC5rZXlzKGIpO2lmKGMubGVuZ3RoIT09ZC5sZW5ndGgpcmV0dXJuITE7Zm9yKGQ9MDtkPGMubGVuZ3RoO2QrKylpZighaGQuY2FsbChiLGNbZF0pfHwhaWQoYVtjW2RdXSxiW2NbZF1dKSlyZXR1cm4hMTtyZXR1cm4hMH1mdW5jdGlvbiBrZChhKXt2YXIgYj1hO2lmKGEuYWx0ZXJuYXRlKWZvcig7Yi5yZXR1cm47KWI9Yi5yZXR1cm47ZWxzZXtpZigwIT09KGIuZWZmZWN0VGFnJjIpKXJldHVybiAxO2Zvcig7Yi5yZXR1cm47KWlmKGI9Yi5yZXR1cm4sMCE9PShiLmVmZmVjdFRhZyYyKSlyZXR1cm4gMX1yZXR1cm4gMz09PWIudGFnPzI6M31mdW5jdGlvbiBsZChhKXsyIT09a2QoYSk/dChcIjE4OFwiKTp2b2lkIDB9XG5mdW5jdGlvbiBtZChhKXt2YXIgYj1hLmFsdGVybmF0ZTtpZighYilyZXR1cm4gYj1rZChhKSwzPT09Yj90KFwiMTg4XCIpOnZvaWQgMCwxPT09Yj9udWxsOmE7Zm9yKHZhciBjPWEsZD1iOzspe3ZhciBlPWMucmV0dXJuLGY9ZT9lLmFsdGVybmF0ZTpudWxsO2lmKCFlfHwhZilicmVhaztpZihlLmNoaWxkPT09Zi5jaGlsZCl7Zm9yKHZhciBnPWUuY2hpbGQ7Zzspe2lmKGc9PT1jKXJldHVybiBsZChlKSxhO2lmKGc9PT1kKXJldHVybiBsZChlKSxiO2c9Zy5zaWJsaW5nfXQoXCIxODhcIil9aWYoYy5yZXR1cm4hPT1kLnJldHVybiljPWUsZD1mO2Vsc2V7Zz0hMTtmb3IodmFyIGg9ZS5jaGlsZDtoOyl7aWYoaD09PWMpe2c9ITA7Yz1lO2Q9ZjticmVha31pZihoPT09ZCl7Zz0hMDtkPWU7Yz1mO2JyZWFrfWg9aC5zaWJsaW5nfWlmKCFnKXtmb3IoaD1mLmNoaWxkO2g7KXtpZihoPT09Yyl7Zz0hMDtjPWY7ZD1lO2JyZWFrfWlmKGg9PT1kKXtnPSEwO2Q9ZjtjPWU7YnJlYWt9aD1oLnNpYmxpbmd9Zz9cbnZvaWQgMDp0KFwiMTg5XCIpfX1jLmFsdGVybmF0ZSE9PWQ/dChcIjE5MFwiKTp2b2lkIDB9MyE9PWMudGFnP3QoXCIxODhcIik6dm9pZCAwO3JldHVybiBjLnN0YXRlTm9kZS5jdXJyZW50PT09Yz9hOmJ9ZnVuY3Rpb24gbmQoYSl7YT1tZChhKTtpZighYSlyZXR1cm4gbnVsbDtmb3IodmFyIGI9YTs7KXtpZig1PT09Yi50YWd8fDY9PT1iLnRhZylyZXR1cm4gYjtpZihiLmNoaWxkKWIuY2hpbGQucmV0dXJuPWIsYj1iLmNoaWxkO2Vsc2V7aWYoYj09PWEpYnJlYWs7Zm9yKDshYi5zaWJsaW5nOyl7aWYoIWIucmV0dXJufHxiLnJldHVybj09PWEpcmV0dXJuIG51bGw7Yj1iLnJldHVybn1iLnNpYmxpbmcucmV0dXJuPWIucmV0dXJuO2I9Yi5zaWJsaW5nfX1yZXR1cm4gbnVsbH1cbnZhciBvZD16LmV4dGVuZCh7YW5pbWF0aW9uTmFtZTpudWxsLGVsYXBzZWRUaW1lOm51bGwscHNldWRvRWxlbWVudDpudWxsfSkscGQ9ei5leHRlbmQoe2NsaXBib2FyZERhdGE6ZnVuY3Rpb24oYSl7cmV0dXJuXCJjbGlwYm9hcmREYXRhXCJpbiBhP2EuY2xpcGJvYXJkRGF0YTp3aW5kb3cuY2xpcGJvYXJkRGF0YX19KSxxZD1XYy5leHRlbmQoe3JlbGF0ZWRUYXJnZXQ6bnVsbH0pO2Z1bmN0aW9uIHJkKGEpe3ZhciBiPWEua2V5Q29kZTtcImNoYXJDb2RlXCJpbiBhPyhhPWEuY2hhckNvZGUsMD09PWEmJjEzPT09YiYmKGE9MTMpKTphPWI7MTA9PT1hJiYoYT0xMyk7cmV0dXJuIDMyPD1hfHwxMz09PWE/YTowfVxudmFyIHNkPXtFc2M6XCJFc2NhcGVcIixTcGFjZWJhcjpcIiBcIixMZWZ0OlwiQXJyb3dMZWZ0XCIsVXA6XCJBcnJvd1VwXCIsUmlnaHQ6XCJBcnJvd1JpZ2h0XCIsRG93bjpcIkFycm93RG93blwiLERlbDpcIkRlbGV0ZVwiLFdpbjpcIk9TXCIsTWVudTpcIkNvbnRleHRNZW51XCIsQXBwczpcIkNvbnRleHRNZW51XCIsU2Nyb2xsOlwiU2Nyb2xsTG9ja1wiLE1velByaW50YWJsZUtleTpcIlVuaWRlbnRpZmllZFwifSx0ZD17ODpcIkJhY2tzcGFjZVwiLDk6XCJUYWJcIiwxMjpcIkNsZWFyXCIsMTM6XCJFbnRlclwiLDE2OlwiU2hpZnRcIiwxNzpcIkNvbnRyb2xcIiwxODpcIkFsdFwiLDE5OlwiUGF1c2VcIiwyMDpcIkNhcHNMb2NrXCIsMjc6XCJFc2NhcGVcIiwzMjpcIiBcIiwzMzpcIlBhZ2VVcFwiLDM0OlwiUGFnZURvd25cIiwzNTpcIkVuZFwiLDM2OlwiSG9tZVwiLDM3OlwiQXJyb3dMZWZ0XCIsMzg6XCJBcnJvd1VwXCIsMzk6XCJBcnJvd1JpZ2h0XCIsNDA6XCJBcnJvd0Rvd25cIiw0NTpcIkluc2VydFwiLDQ2OlwiRGVsZXRlXCIsMTEyOlwiRjFcIiwxMTM6XCJGMlwiLDExNDpcIkYzXCIsMTE1OlwiRjRcIixcbjExNjpcIkY1XCIsMTE3OlwiRjZcIiwxMTg6XCJGN1wiLDExOTpcIkY4XCIsMTIwOlwiRjlcIiwxMjE6XCJGMTBcIiwxMjI6XCJGMTFcIiwxMjM6XCJGMTJcIiwxNDQ6XCJOdW1Mb2NrXCIsMTQ1OlwiU2Nyb2xsTG9ja1wiLDIyNDpcIk1ldGFcIn0sdWQ9V2MuZXh0ZW5kKHtrZXk6ZnVuY3Rpb24oYSl7aWYoYS5rZXkpe3ZhciBiPXNkW2Eua2V5XXx8YS5rZXk7aWYoXCJVbmlkZW50aWZpZWRcIiE9PWIpcmV0dXJuIGJ9cmV0dXJuXCJrZXlwcmVzc1wiPT09YS50eXBlPyhhPXJkKGEpLDEzPT09YT9cIkVudGVyXCI6U3RyaW5nLmZyb21DaGFyQ29kZShhKSk6XCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT90ZFthLmtleUNvZGVdfHxcIlVuaWRlbnRpZmllZFwiOlwiXCJ9LGxvY2F0aW9uOm51bGwsY3RybEtleTpudWxsLHNoaWZ0S2V5Om51bGwsYWx0S2V5Om51bGwsbWV0YUtleTpudWxsLHJlcGVhdDpudWxsLGxvY2FsZTpudWxsLGdldE1vZGlmaWVyU3RhdGU6WmMsY2hhckNvZGU6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlwcmVzc1wiPT09XG5hLnR5cGU/cmQoYSk6MH0sa2V5Q29kZTpmdW5jdGlvbihhKXtyZXR1cm5cImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP2Eua2V5Q29kZTowfSx3aGljaDpmdW5jdGlvbihhKXtyZXR1cm5cImtleXByZXNzXCI9PT1hLnR5cGU/cmQoYSk6XCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9hLmtleUNvZGU6MH19KSx2ZD1kZC5leHRlbmQoe2RhdGFUcmFuc2ZlcjpudWxsfSksd2Q9V2MuZXh0ZW5kKHt0b3VjaGVzOm51bGwsdGFyZ2V0VG91Y2hlczpudWxsLGNoYW5nZWRUb3VjaGVzOm51bGwsYWx0S2V5Om51bGwsbWV0YUtleTpudWxsLGN0cmxLZXk6bnVsbCxzaGlmdEtleTpudWxsLGdldE1vZGlmaWVyU3RhdGU6WmN9KSx4ZD16LmV4dGVuZCh7cHJvcGVydHlOYW1lOm51bGwsZWxhcHNlZFRpbWU6bnVsbCxwc2V1ZG9FbGVtZW50Om51bGx9KSx5ZD1kZC5leHRlbmQoe2RlbHRhWDpmdW5jdGlvbihhKXtyZXR1cm5cImRlbHRhWFwiaW4gYT9hLmRlbHRhWDpcIndoZWVsRGVsdGFYXCJpblxuYT8tYS53aGVlbERlbHRhWDowfSxkZWx0YVk6ZnVuY3Rpb24oYSl7cmV0dXJuXCJkZWx0YVlcImluIGE/YS5kZWx0YVk6XCJ3aGVlbERlbHRhWVwiaW4gYT8tYS53aGVlbERlbHRhWTpcIndoZWVsRGVsdGFcImluIGE/LWEud2hlZWxEZWx0YTowfSxkZWx0YVo6bnVsbCxkZWx0YU1vZGU6bnVsbH0pLHpkPVtbXCJhYm9ydFwiLFwiYWJvcnRcIl0sW1lhLFwiYW5pbWF0aW9uRW5kXCJdLFtaYSxcImFuaW1hdGlvbkl0ZXJhdGlvblwiXSxbJGEsXCJhbmltYXRpb25TdGFydFwiXSxbXCJjYW5wbGF5XCIsXCJjYW5QbGF5XCJdLFtcImNhbnBsYXl0aHJvdWdoXCIsXCJjYW5QbGF5VGhyb3VnaFwiXSxbXCJkcmFnXCIsXCJkcmFnXCJdLFtcImRyYWdlbnRlclwiLFwiZHJhZ0VudGVyXCJdLFtcImRyYWdleGl0XCIsXCJkcmFnRXhpdFwiXSxbXCJkcmFnbGVhdmVcIixcImRyYWdMZWF2ZVwiXSxbXCJkcmFnb3ZlclwiLFwiZHJhZ092ZXJcIl0sW1wiZHVyYXRpb25jaGFuZ2VcIixcImR1cmF0aW9uQ2hhbmdlXCJdLFtcImVtcHRpZWRcIixcImVtcHRpZWRcIl0sW1wiZW5jcnlwdGVkXCIsXCJlbmNyeXB0ZWRcIl0sXG5bXCJlbmRlZFwiLFwiZW5kZWRcIl0sW1wiZXJyb3JcIixcImVycm9yXCJdLFtcImdvdHBvaW50ZXJjYXB0dXJlXCIsXCJnb3RQb2ludGVyQ2FwdHVyZVwiXSxbXCJsb2FkXCIsXCJsb2FkXCJdLFtcImxvYWRlZGRhdGFcIixcImxvYWRlZERhdGFcIl0sW1wibG9hZGVkbWV0YWRhdGFcIixcImxvYWRlZE1ldGFkYXRhXCJdLFtcImxvYWRzdGFydFwiLFwibG9hZFN0YXJ0XCJdLFtcImxvc3Rwb2ludGVyY2FwdHVyZVwiLFwibG9zdFBvaW50ZXJDYXB0dXJlXCJdLFtcIm1vdXNlbW92ZVwiLFwibW91c2VNb3ZlXCJdLFtcIm1vdXNlb3V0XCIsXCJtb3VzZU91dFwiXSxbXCJtb3VzZW92ZXJcIixcIm1vdXNlT3ZlclwiXSxbXCJwbGF5aW5nXCIsXCJwbGF5aW5nXCJdLFtcInBvaW50ZXJtb3ZlXCIsXCJwb2ludGVyTW92ZVwiXSxbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyT3V0XCJdLFtcInBvaW50ZXJvdmVyXCIsXCJwb2ludGVyT3ZlclwiXSxbXCJwcm9ncmVzc1wiLFwicHJvZ3Jlc3NcIl0sW1wic2Nyb2xsXCIsXCJzY3JvbGxcIl0sW1wic2Vla2luZ1wiLFwic2Vla2luZ1wiXSxbXCJzdGFsbGVkXCIsXCJzdGFsbGVkXCJdLFxuW1wic3VzcGVuZFwiLFwic3VzcGVuZFwiXSxbXCJ0aW1ldXBkYXRlXCIsXCJ0aW1lVXBkYXRlXCJdLFtcInRvZ2dsZVwiLFwidG9nZ2xlXCJdLFtcInRvdWNobW92ZVwiLFwidG91Y2hNb3ZlXCJdLFthYixcInRyYW5zaXRpb25FbmRcIl0sW1wid2FpdGluZ1wiLFwid2FpdGluZ1wiXSxbXCJ3aGVlbFwiLFwid2hlZWxcIl1dLEFkPXt9LEJkPXt9O2Z1bmN0aW9uIENkKGEsYil7dmFyIGM9YVswXTthPWFbMV07dmFyIGQ9XCJvblwiKyhhWzBdLnRvVXBwZXJDYXNlKCkrYS5zbGljZSgxKSk7Yj17cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6ZCxjYXB0dXJlZDpkK1wiQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6W2NdLGlzSW50ZXJhY3RpdmU6Yn07QWRbYV09YjtCZFtjXT1ifVxuW1tcImJsdXJcIixcImJsdXJcIl0sW1wiY2FuY2VsXCIsXCJjYW5jZWxcIl0sW1wiY2xpY2tcIixcImNsaWNrXCJdLFtcImNsb3NlXCIsXCJjbG9zZVwiXSxbXCJjb250ZXh0bWVudVwiLFwiY29udGV4dE1lbnVcIl0sW1wiY29weVwiLFwiY29weVwiXSxbXCJjdXRcIixcImN1dFwiXSxbXCJhdXhjbGlja1wiLFwiYXV4Q2xpY2tcIl0sW1wiZGJsY2xpY2tcIixcImRvdWJsZUNsaWNrXCJdLFtcImRyYWdlbmRcIixcImRyYWdFbmRcIl0sW1wiZHJhZ3N0YXJ0XCIsXCJkcmFnU3RhcnRcIl0sW1wiZHJvcFwiLFwiZHJvcFwiXSxbXCJmb2N1c1wiLFwiZm9jdXNcIl0sW1wiaW5wdXRcIixcImlucHV0XCJdLFtcImludmFsaWRcIixcImludmFsaWRcIl0sW1wia2V5ZG93blwiLFwia2V5RG93blwiXSxbXCJrZXlwcmVzc1wiLFwia2V5UHJlc3NcIl0sW1wia2V5dXBcIixcImtleVVwXCJdLFtcIm1vdXNlZG93blwiLFwibW91c2VEb3duXCJdLFtcIm1vdXNldXBcIixcIm1vdXNlVXBcIl0sW1wicGFzdGVcIixcInBhc3RlXCJdLFtcInBhdXNlXCIsXCJwYXVzZVwiXSxbXCJwbGF5XCIsXCJwbGF5XCJdLFtcInBvaW50ZXJjYW5jZWxcIixcInBvaW50ZXJDYW5jZWxcIl0sXG5bXCJwb2ludGVyZG93blwiLFwicG9pbnRlckRvd25cIl0sW1wicG9pbnRlcnVwXCIsXCJwb2ludGVyVXBcIl0sW1wicmF0ZWNoYW5nZVwiLFwicmF0ZUNoYW5nZVwiXSxbXCJyZXNldFwiLFwicmVzZXRcIl0sW1wic2Vla2VkXCIsXCJzZWVrZWRcIl0sW1wic3VibWl0XCIsXCJzdWJtaXRcIl0sW1widG91Y2hjYW5jZWxcIixcInRvdWNoQ2FuY2VsXCJdLFtcInRvdWNoZW5kXCIsXCJ0b3VjaEVuZFwiXSxbXCJ0b3VjaHN0YXJ0XCIsXCJ0b3VjaFN0YXJ0XCJdLFtcInZvbHVtZWNoYW5nZVwiLFwidm9sdW1lQ2hhbmdlXCJdXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0NkKGEsITApfSk7emQuZm9yRWFjaChmdW5jdGlvbihhKXtDZChhLCExKX0pO1xudmFyIERkPXtldmVudFR5cGVzOkFkLGlzSW50ZXJhY3RpdmVUb3BMZXZlbEV2ZW50VHlwZTpmdW5jdGlvbihhKXthPUJkW2FdO3JldHVybiB2b2lkIDAhPT1hJiYhMD09PWEuaXNJbnRlcmFjdGl2ZX0sZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1CZFthXTtpZighZSlyZXR1cm4gbnVsbDtzd2l0Y2goYSl7Y2FzZSBcImtleXByZXNzXCI6aWYoMD09PXJkKGMpKXJldHVybiBudWxsO2Nhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXVwXCI6YT11ZDticmVhaztjYXNlIFwiYmx1clwiOmNhc2UgXCJmb2N1c1wiOmE9cWQ7YnJlYWs7Y2FzZSBcImNsaWNrXCI6aWYoMj09PWMuYnV0dG9uKXJldHVybiBudWxsO2Nhc2UgXCJhdXhjbGlja1wiOmNhc2UgXCJkYmxjbGlja1wiOmNhc2UgXCJtb3VzZWRvd25cIjpjYXNlIFwibW91c2Vtb3ZlXCI6Y2FzZSBcIm1vdXNldXBcIjpjYXNlIFwibW91c2VvdXRcIjpjYXNlIFwibW91c2VvdmVyXCI6Y2FzZSBcImNvbnRleHRtZW51XCI6YT1kZDticmVhaztjYXNlIFwiZHJhZ1wiOmNhc2UgXCJkcmFnZW5kXCI6Y2FzZSBcImRyYWdlbnRlclwiOmNhc2UgXCJkcmFnZXhpdFwiOmNhc2UgXCJkcmFnbGVhdmVcIjpjYXNlIFwiZHJhZ292ZXJcIjpjYXNlIFwiZHJhZ3N0YXJ0XCI6Y2FzZSBcImRyb3BcIjphPVxudmQ7YnJlYWs7Y2FzZSBcInRvdWNoY2FuY2VsXCI6Y2FzZSBcInRvdWNoZW5kXCI6Y2FzZSBcInRvdWNobW92ZVwiOmNhc2UgXCJ0b3VjaHN0YXJ0XCI6YT13ZDticmVhaztjYXNlIFlhOmNhc2UgWmE6Y2FzZSAkYTphPW9kO2JyZWFrO2Nhc2UgYWI6YT14ZDticmVhaztjYXNlIFwic2Nyb2xsXCI6YT1XYzticmVhaztjYXNlIFwid2hlZWxcIjphPXlkO2JyZWFrO2Nhc2UgXCJjb3B5XCI6Y2FzZSBcImN1dFwiOmNhc2UgXCJwYXN0ZVwiOmE9cGQ7YnJlYWs7Y2FzZSBcImdvdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcImxvc3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJwb2ludGVyY2FuY2VsXCI6Y2FzZSBcInBvaW50ZXJkb3duXCI6Y2FzZSBcInBvaW50ZXJtb3ZlXCI6Y2FzZSBcInBvaW50ZXJvdXRcIjpjYXNlIFwicG9pbnRlcm92ZXJcIjpjYXNlIFwicG9pbnRlcnVwXCI6YT1lZDticmVhaztkZWZhdWx0OmE9en1iPWEuZ2V0UG9vbGVkKGUsYixjLGQpO1JhKGIpO3JldHVybiBifX0sRWQ9RGQuaXNJbnRlcmFjdGl2ZVRvcExldmVsRXZlbnRUeXBlLFxuRmQ9W107ZnVuY3Rpb24gR2QoYSl7dmFyIGI9YS50YXJnZXRJbnN0LGM9Yjtkb3tpZighYyl7YS5hbmNlc3RvcnMucHVzaChjKTticmVha312YXIgZDtmb3IoZD1jO2QucmV0dXJuOylkPWQucmV0dXJuO2Q9MyE9PWQudGFnP251bGw6ZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztpZighZClicmVhazthLmFuY2VzdG9ycy5wdXNoKGMpO2M9SWEoZCl9d2hpbGUoYyk7Zm9yKGM9MDtjPGEuYW5jZXN0b3JzLmxlbmd0aDtjKyspe2I9YS5hbmNlc3RvcnNbY107dmFyIGU9UmIoYS5uYXRpdmVFdmVudCk7ZD1hLnRvcExldmVsVHlwZTtmb3IodmFyIGY9YS5uYXRpdmVFdmVudCxnPW51bGwsaD0wO2g8cGEubGVuZ3RoO2grKyl7dmFyIGs9cGFbaF07ayYmKGs9ay5leHRyYWN0RXZlbnRzKGQsYixmLGUpKSYmKGc9eWEoZyxrKSl9RWEoZyl9fXZhciBIZD0hMDtcbmZ1bmN0aW9uIEgoYSxiKXtpZighYilyZXR1cm4gbnVsbDt2YXIgYz0oRWQoYSk/SWQ6SmQpLmJpbmQobnVsbCxhKTtiLmFkZEV2ZW50TGlzdGVuZXIoYSxjLCExKX1mdW5jdGlvbiBLZChhLGIpe2lmKCFiKXJldHVybiBudWxsO3ZhciBjPShFZChhKT9JZDpKZCkuYmluZChudWxsLGEpO2IuYWRkRXZlbnRMaXN0ZW5lcihhLGMsITApfWZ1bmN0aW9uIElkKGEsYil7TGIoSmQsYSxiKX1cbmZ1bmN0aW9uIEpkKGEsYil7aWYoSGQpe3ZhciBjPVJiKGIpO2M9SWEoYyk7bnVsbD09PWN8fFwibnVtYmVyXCIhPT10eXBlb2YgYy50YWd8fDI9PT1rZChjKXx8KGM9bnVsbCk7aWYoRmQubGVuZ3RoKXt2YXIgZD1GZC5wb3AoKTtkLnRvcExldmVsVHlwZT1hO2QubmF0aXZlRXZlbnQ9YjtkLnRhcmdldEluc3Q9YzthPWR9ZWxzZSBhPXt0b3BMZXZlbFR5cGU6YSxuYXRpdmVFdmVudDpiLHRhcmdldEluc3Q6YyxhbmNlc3RvcnM6W119O3RyeXtPYihHZCxhKX1maW5hbGx5e2EudG9wTGV2ZWxUeXBlPW51bGwsYS5uYXRpdmVFdmVudD1udWxsLGEudGFyZ2V0SW5zdD1udWxsLGEuYW5jZXN0b3JzLmxlbmd0aD0wLDEwPkZkLmxlbmd0aCYmRmQucHVzaChhKX19fXZhciBMZD17fSxNZD0wLE5kPVwiX3JlYWN0TGlzdGVuZXJzSURcIisoXCJcIitNYXRoLnJhbmRvbSgpKS5zbGljZSgyKTtcbmZ1bmN0aW9uIE9kKGEpe09iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChhLE5kKXx8KGFbTmRdPU1kKyssTGRbYVtOZF1dPXt9KTtyZXR1cm4gTGRbYVtOZF1dfWZ1bmN0aW9uIFBkKGEpe2E9YXx8KFwidW5kZWZpbmVkXCIhPT10eXBlb2YgZG9jdW1lbnQ/ZG9jdW1lbnQ6dm9pZCAwKTtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIGEpcmV0dXJuIG51bGw7dHJ5e3JldHVybiBhLmFjdGl2ZUVsZW1lbnR8fGEuYm9keX1jYXRjaChiKXtyZXR1cm4gYS5ib2R5fX1mdW5jdGlvbiBRZChhKXtmb3IoO2EmJmEuZmlyc3RDaGlsZDspYT1hLmZpcnN0Q2hpbGQ7cmV0dXJuIGF9XG5mdW5jdGlvbiBSZChhLGIpe3ZhciBjPVFkKGEpO2E9MDtmb3IodmFyIGQ7Yzspe2lmKDM9PT1jLm5vZGVUeXBlKXtkPWErYy50ZXh0Q29udGVudC5sZW5ndGg7aWYoYTw9YiYmZD49YilyZXR1cm57bm9kZTpjLG9mZnNldDpiLWF9O2E9ZH1hOntmb3IoO2M7KXtpZihjLm5leHRTaWJsaW5nKXtjPWMubmV4dFNpYmxpbmc7YnJlYWsgYX1jPWMucGFyZW50Tm9kZX1jPXZvaWQgMH1jPVFkKGMpfX1mdW5jdGlvbiBTZChhLGIpe3JldHVybiBhJiZiP2E9PT1iPyEwOmEmJjM9PT1hLm5vZGVUeXBlPyExOmImJjM9PT1iLm5vZGVUeXBlP1NkKGEsYi5wYXJlbnROb2RlKTpcImNvbnRhaW5zXCJpbiBhP2EuY29udGFpbnMoYik6YS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbj8hIShhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKGIpJjE2KTohMTohMX1cbmZ1bmN0aW9uIFRkKCl7Zm9yKHZhciBhPXdpbmRvdyxiPVBkKCk7YiBpbnN0YW5jZW9mIGEuSFRNTElGcmFtZUVsZW1lbnQ7KXt0cnl7YT1iLmNvbnRlbnREb2N1bWVudC5kZWZhdWx0Vmlld31jYXRjaChjKXticmVha31iPVBkKGEuZG9jdW1lbnQpfXJldHVybiBifWZ1bmN0aW9uIFVkKGEpe3ZhciBiPWEmJmEubm9kZU5hbWUmJmEubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm4gYiYmKFwiaW5wdXRcIj09PWImJihcInRleHRcIj09PWEudHlwZXx8XCJzZWFyY2hcIj09PWEudHlwZXx8XCJ0ZWxcIj09PWEudHlwZXx8XCJ1cmxcIj09PWEudHlwZXx8XCJwYXNzd29yZFwiPT09YS50eXBlKXx8XCJ0ZXh0YXJlYVwiPT09Ynx8XCJ0cnVlXCI9PT1hLmNvbnRlbnRFZGl0YWJsZSl9XG52YXIgVmQ9U2EmJlwiZG9jdW1lbnRNb2RlXCJpbiBkb2N1bWVudCYmMTE+PWRvY3VtZW50LmRvY3VtZW50TW9kZSxXZD17c2VsZWN0OntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uU2VsZWN0XCIsY2FwdHVyZWQ6XCJvblNlbGVjdENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb250ZXh0bWVudSBkcmFnZW5kIGZvY3VzIGtleWRvd24ga2V5dXAgbW91c2Vkb3duIG1vdXNldXAgc2VsZWN0aW9uY2hhbmdlXCIuc3BsaXQoXCIgXCIpfX0sWGQ9bnVsbCxZZD1udWxsLFpkPW51bGwsJGQ9ITE7XG5mdW5jdGlvbiBhZShhLGIpe3ZhciBjPWIud2luZG93PT09Yj9iLmRvY3VtZW50Ojk9PT1iLm5vZGVUeXBlP2I6Yi5vd25lckRvY3VtZW50O2lmKCRkfHxudWxsPT1YZHx8WGQhPT1QZChjKSlyZXR1cm4gbnVsbDtjPVhkO1wic2VsZWN0aW9uU3RhcnRcImluIGMmJlVkKGMpP2M9e3N0YXJ0OmMuc2VsZWN0aW9uU3RhcnQsZW5kOmMuc2VsZWN0aW9uRW5kfTooYz0oYy5vd25lckRvY3VtZW50JiZjLm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXd8fHdpbmRvdykuZ2V0U2VsZWN0aW9uKCksYz17YW5jaG9yTm9kZTpjLmFuY2hvck5vZGUsYW5jaG9yT2Zmc2V0OmMuYW5jaG9yT2Zmc2V0LGZvY3VzTm9kZTpjLmZvY3VzTm9kZSxmb2N1c09mZnNldDpjLmZvY3VzT2Zmc2V0fSk7cmV0dXJuIFpkJiZqZChaZCxjKT9udWxsOihaZD1jLGE9ei5nZXRQb29sZWQoV2Quc2VsZWN0LFlkLGEsYiksYS50eXBlPVwic2VsZWN0XCIsYS50YXJnZXQ9WGQsUmEoYSksYSl9XG52YXIgYmU9e2V2ZW50VHlwZXM6V2QsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1kLndpbmRvdz09PWQ/ZC5kb2N1bWVudDo5PT09ZC5ub2RlVHlwZT9kOmQub3duZXJEb2N1bWVudCxmO2lmKCEoZj0hZSkpe2E6e2U9T2QoZSk7Zj10YS5vblNlbGVjdDtmb3IodmFyIGc9MDtnPGYubGVuZ3RoO2crKyl7dmFyIGg9ZltnXTtpZighZS5oYXNPd25Qcm9wZXJ0eShoKXx8IWVbaF0pe2U9ITE7YnJlYWsgYX19ZT0hMH1mPSFlfWlmKGYpcmV0dXJuIG51bGw7ZT1iP0thKGIpOndpbmRvdztzd2l0Y2goYSl7Y2FzZSBcImZvY3VzXCI6aWYoUWIoZSl8fFwidHJ1ZVwiPT09ZS5jb250ZW50RWRpdGFibGUpWGQ9ZSxZZD1iLFpkPW51bGw7YnJlYWs7Y2FzZSBcImJsdXJcIjpaZD1ZZD1YZD1udWxsO2JyZWFrO2Nhc2UgXCJtb3VzZWRvd25cIjokZD0hMDticmVhaztjYXNlIFwiY29udGV4dG1lbnVcIjpjYXNlIFwibW91c2V1cFwiOmNhc2UgXCJkcmFnZW5kXCI6cmV0dXJuICRkPSExLGFlKGMsZCk7Y2FzZSBcInNlbGVjdGlvbmNoYW5nZVwiOmlmKFZkKWJyZWFrO1xuY2FzZSBcImtleWRvd25cIjpjYXNlIFwia2V5dXBcIjpyZXR1cm4gYWUoYyxkKX1yZXR1cm4gbnVsbH19O0NhLmluamVjdEV2ZW50UGx1Z2luT3JkZXIoXCJSZXNwb25kZXJFdmVudFBsdWdpbiBTaW1wbGVFdmVudFBsdWdpbiBFbnRlckxlYXZlRXZlbnRQbHVnaW4gQ2hhbmdlRXZlbnRQbHVnaW4gU2VsZWN0RXZlbnRQbHVnaW4gQmVmb3JlSW5wdXRFdmVudFBsdWdpblwiLnNwbGl0KFwiIFwiKSk7dWE9TGE7dmE9SmE7d2E9S2E7Q2EuaW5qZWN0RXZlbnRQbHVnaW5zQnlOYW1lKHtTaW1wbGVFdmVudFBsdWdpbjpEZCxFbnRlckxlYXZlRXZlbnRQbHVnaW46Z2QsQ2hhbmdlRXZlbnRQbHVnaW46VmMsU2VsZWN0RXZlbnRQbHVnaW46YmUsQmVmb3JlSW5wdXRFdmVudFBsdWdpbjpCYn0pO2Z1bmN0aW9uIGRlKGEpe3ZhciBiPVwiXCI7YWEuQ2hpbGRyZW4uZm9yRWFjaChhLGZ1bmN0aW9uKGEpe251bGwhPWEmJihiKz1hKX0pO3JldHVybiBifVxuZnVuY3Rpb24gZWUoYSxiKXthPW4oe2NoaWxkcmVuOnZvaWQgMH0sYik7aWYoYj1kZShiLmNoaWxkcmVuKSlhLmNoaWxkcmVuPWI7cmV0dXJuIGF9ZnVuY3Rpb24gZmUoYSxiLGMsZCl7YT1hLm9wdGlvbnM7aWYoYil7Yj17fTtmb3IodmFyIGU9MDtlPGMubGVuZ3RoO2UrKyliW1wiJFwiK2NbZV1dPSEwO2ZvcihjPTA7YzxhLmxlbmd0aDtjKyspZT1iLmhhc093blByb3BlcnR5KFwiJFwiK2FbY10udmFsdWUpLGFbY10uc2VsZWN0ZWQhPT1lJiYoYVtjXS5zZWxlY3RlZD1lKSxlJiZkJiYoYVtjXS5kZWZhdWx0U2VsZWN0ZWQ9ITApfWVsc2V7Yz1cIlwiK3ljKGMpO2I9bnVsbDtmb3IoZT0wO2U8YS5sZW5ndGg7ZSsrKXtpZihhW2VdLnZhbHVlPT09Yyl7YVtlXS5zZWxlY3RlZD0hMDtkJiYoYVtlXS5kZWZhdWx0U2VsZWN0ZWQ9ITApO3JldHVybn1udWxsIT09Ynx8YVtlXS5kaXNhYmxlZHx8KGI9YVtlXSl9bnVsbCE9PWImJihiLnNlbGVjdGVkPSEwKX19XG5mdW5jdGlvbiBnZShhLGIpe251bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw/dChcIjkxXCIpOnZvaWQgMDtyZXR1cm4gbih7fSxiLHt2YWx1ZTp2b2lkIDAsZGVmYXVsdFZhbHVlOnZvaWQgMCxjaGlsZHJlbjpcIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWV9KX1mdW5jdGlvbiBoZShhLGIpe3ZhciBjPWIudmFsdWU7bnVsbD09YyYmKGM9Yi5kZWZhdWx0VmFsdWUsYj1iLmNoaWxkcmVuLG51bGwhPWImJihudWxsIT1jP3QoXCI5MlwiKTp2b2lkIDAsQXJyYXkuaXNBcnJheShiKSYmKDE+PWIubGVuZ3RoP3ZvaWQgMDp0KFwiOTNcIiksYj1iWzBdKSxjPWIpLG51bGw9PWMmJihjPVwiXCIpKTthLl93cmFwcGVyU3RhdGU9e2luaXRpYWxWYWx1ZTp5YyhjKX19XG5mdW5jdGlvbiBpZShhLGIpe3ZhciBjPXljKGIudmFsdWUpLGQ9eWMoYi5kZWZhdWx0VmFsdWUpO251bGwhPWMmJihjPVwiXCIrYyxjIT09YS52YWx1ZSYmKGEudmFsdWU9YyksbnVsbD09Yi5kZWZhdWx0VmFsdWUmJmEuZGVmYXVsdFZhbHVlIT09YyYmKGEuZGVmYXVsdFZhbHVlPWMpKTtudWxsIT1kJiYoYS5kZWZhdWx0VmFsdWU9XCJcIitkKX1mdW5jdGlvbiBqZShhKXt2YXIgYj1hLnRleHRDb250ZW50O2I9PT1hLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlJiYoYS52YWx1ZT1iKX12YXIga2U9e2h0bWw6XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCIsbWF0aG1sOlwiaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTFwiLHN2ZzpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCJ9O1xuZnVuY3Rpb24gbGUoYSl7c3dpdGNoKGEpe2Nhc2UgXCJzdmdcIjpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI7Y2FzZSBcIm1hdGhcIjpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzE5OTgvTWF0aC9NYXRoTUxcIjtkZWZhdWx0OnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwifX1mdW5jdGlvbiBtZShhLGIpe3JldHVybiBudWxsPT1hfHxcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIj09PWE/bGUoYik6XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPT09YSYmXCJmb3JlaWduT2JqZWN0XCI9PT1iP1wiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiOmF9XG52YXIgbmU9dm9pZCAwLG9lPWZ1bmN0aW9uKGEpe3JldHVyblwidW5kZWZpbmVkXCIhPT10eXBlb2YgTVNBcHAmJk1TQXBwLmV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uP2Z1bmN0aW9uKGIsYyxkLGUpe01TQXBwLmV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uKGZ1bmN0aW9uKCl7cmV0dXJuIGEoYixjLGQsZSl9KX06YX0oZnVuY3Rpb24oYSxiKXtpZihhLm5hbWVzcGFjZVVSSSE9PWtlLnN2Z3x8XCJpbm5lckhUTUxcImluIGEpYS5pbm5lckhUTUw9YjtlbHNle25lPW5lfHxkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO25lLmlubmVySFRNTD1cIjxzdmc+XCIrYitcIjwvc3ZnPlwiO2ZvcihiPW5lLmZpcnN0Q2hpbGQ7YS5maXJzdENoaWxkOylhLnJlbW92ZUNoaWxkKGEuZmlyc3RDaGlsZCk7Zm9yKDtiLmZpcnN0Q2hpbGQ7KWEuYXBwZW5kQ2hpbGQoYi5maXJzdENoaWxkKX19KTtcbmZ1bmN0aW9uIHBlKGEsYil7aWYoYil7dmFyIGM9YS5maXJzdENoaWxkO2lmKGMmJmM9PT1hLmxhc3RDaGlsZCYmMz09PWMubm9kZVR5cGUpe2Mubm9kZVZhbHVlPWI7cmV0dXJufX1hLnRleHRDb250ZW50PWJ9XG52YXIgcWU9e2FuaW1hdGlvbkl0ZXJhdGlvbkNvdW50OiEwLGJvcmRlckltYWdlT3V0c2V0OiEwLGJvcmRlckltYWdlU2xpY2U6ITAsYm9yZGVySW1hZ2VXaWR0aDohMCxib3hGbGV4OiEwLGJveEZsZXhHcm91cDohMCxib3hPcmRpbmFsR3JvdXA6ITAsY29sdW1uQ291bnQ6ITAsY29sdW1uczohMCxmbGV4OiEwLGZsZXhHcm93OiEwLGZsZXhQb3NpdGl2ZTohMCxmbGV4U2hyaW5rOiEwLGZsZXhOZWdhdGl2ZTohMCxmbGV4T3JkZXI6ITAsZ3JpZEFyZWE6ITAsZ3JpZFJvdzohMCxncmlkUm93RW5kOiEwLGdyaWRSb3dTcGFuOiEwLGdyaWRSb3dTdGFydDohMCxncmlkQ29sdW1uOiEwLGdyaWRDb2x1bW5FbmQ6ITAsZ3JpZENvbHVtblNwYW46ITAsZ3JpZENvbHVtblN0YXJ0OiEwLGZvbnRXZWlnaHQ6ITAsbGluZUNsYW1wOiEwLGxpbmVIZWlnaHQ6ITAsb3BhY2l0eTohMCxvcmRlcjohMCxvcnBoYW5zOiEwLHRhYlNpemU6ITAsd2lkb3dzOiEwLHpJbmRleDohMCx6b29tOiEwLGZpbGxPcGFjaXR5OiEwLFxuZmxvb2RPcGFjaXR5OiEwLHN0b3BPcGFjaXR5OiEwLHN0cm9rZURhc2hhcnJheTohMCxzdHJva2VEYXNob2Zmc2V0OiEwLHN0cm9rZU1pdGVybGltaXQ6ITAsc3Ryb2tlT3BhY2l0eTohMCxzdHJva2VXaWR0aDohMH0scmU9W1wiV2Via2l0XCIsXCJtc1wiLFwiTW96XCIsXCJPXCJdO09iamVjdC5rZXlzKHFlKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JlLmZvckVhY2goZnVuY3Rpb24oYil7Yj1iK2EuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkrYS5zdWJzdHJpbmcoMSk7cWVbYl09cWVbYV19KX0pO2Z1bmN0aW9uIHNlKGEsYixjKXtyZXR1cm4gbnVsbD09Ynx8XCJib29sZWFuXCI9PT10eXBlb2YgYnx8XCJcIj09PWI/XCJcIjpjfHxcIm51bWJlclwiIT09dHlwZW9mIGJ8fDA9PT1ifHxxZS5oYXNPd25Qcm9wZXJ0eShhKSYmcWVbYV0/KFwiXCIrYikudHJpbSgpOmIrXCJweFwifVxuZnVuY3Rpb24gdGUoYSxiKXthPWEuc3R5bGU7Zm9yKHZhciBjIGluIGIpaWYoYi5oYXNPd25Qcm9wZXJ0eShjKSl7dmFyIGQ9MD09PWMuaW5kZXhPZihcIi0tXCIpLGU9c2UoYyxiW2NdLGQpO1wiZmxvYXRcIj09PWMmJihjPVwiY3NzRmxvYXRcIik7ZD9hLnNldFByb3BlcnR5KGMsZSk6YVtjXT1lfX12YXIgdWU9bih7bWVudWl0ZW06ITB9LHthcmVhOiEwLGJhc2U6ITAsYnI6ITAsY29sOiEwLGVtYmVkOiEwLGhyOiEwLGltZzohMCxpbnB1dDohMCxrZXlnZW46ITAsbGluazohMCxtZXRhOiEwLHBhcmFtOiEwLHNvdXJjZTohMCx0cmFjazohMCx3YnI6ITB9KTtcbmZ1bmN0aW9uIHZlKGEsYil7YiYmKHVlW2FdJiYobnVsbCE9Yi5jaGlsZHJlbnx8bnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTD90KFwiMTM3XCIsYSxcIlwiKTp2b2lkIDApLG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJihudWxsIT1iLmNoaWxkcmVuP3QoXCI2MFwiKTp2b2lkIDAsXCJvYmplY3RcIj09PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZcIl9faHRtbFwiaW4gYi5kYW5nZXJvdXNseVNldElubmVySFRNTD92b2lkIDA6dChcIjYxXCIpKSxudWxsIT1iLnN0eWxlJiZcIm9iamVjdFwiIT09dHlwZW9mIGIuc3R5bGU/dChcIjYyXCIsXCJcIik6dm9pZCAwKX1cbmZ1bmN0aW9uIHdlKGEsYil7aWYoLTE9PT1hLmluZGV4T2YoXCItXCIpKXJldHVyblwic3RyaW5nXCI9PT10eXBlb2YgYi5pcztzd2l0Y2goYSl7Y2FzZSBcImFubm90YXRpb24teG1sXCI6Y2FzZSBcImNvbG9yLXByb2ZpbGVcIjpjYXNlIFwiZm9udC1mYWNlXCI6Y2FzZSBcImZvbnQtZmFjZS1zcmNcIjpjYXNlIFwiZm9udC1mYWNlLXVyaVwiOmNhc2UgXCJmb250LWZhY2UtZm9ybWF0XCI6Y2FzZSBcImZvbnQtZmFjZS1uYW1lXCI6Y2FzZSBcIm1pc3NpbmctZ2x5cGhcIjpyZXR1cm4hMTtkZWZhdWx0OnJldHVybiEwfX1cbmZ1bmN0aW9uIHhlKGEsYil7YT05PT09YS5ub2RlVHlwZXx8MTE9PT1hLm5vZGVUeXBlP2E6YS5vd25lckRvY3VtZW50O3ZhciBjPU9kKGEpO2I9dGFbYl07Zm9yKHZhciBkPTA7ZDxiLmxlbmd0aDtkKyspe3ZhciBlPWJbZF07aWYoIWMuaGFzT3duUHJvcGVydHkoZSl8fCFjW2VdKXtzd2l0Y2goZSl7Y2FzZSBcInNjcm9sbFwiOktkKFwic2Nyb2xsXCIsYSk7YnJlYWs7Y2FzZSBcImZvY3VzXCI6Y2FzZSBcImJsdXJcIjpLZChcImZvY3VzXCIsYSk7S2QoXCJibHVyXCIsYSk7Yy5ibHVyPSEwO2MuZm9jdXM9ITA7YnJlYWs7Y2FzZSBcImNhbmNlbFwiOmNhc2UgXCJjbG9zZVwiOlNiKGUpJiZLZChlLGEpO2JyZWFrO2Nhc2UgXCJpbnZhbGlkXCI6Y2FzZSBcInN1Ym1pdFwiOmNhc2UgXCJyZXNldFwiOmJyZWFrO2RlZmF1bHQ6LTE9PT1iYi5pbmRleE9mKGUpJiZIKGUsYSl9Y1tlXT0hMH19fWZ1bmN0aW9uIHllKCl7fXZhciB6ZT1udWxsLEFlPW51bGw7XG5mdW5jdGlvbiBCZShhLGIpe3N3aXRjaChhKXtjYXNlIFwiYnV0dG9uXCI6Y2FzZSBcImlucHV0XCI6Y2FzZSBcInNlbGVjdFwiOmNhc2UgXCJ0ZXh0YXJlYVwiOnJldHVybiEhYi5hdXRvRm9jdXN9cmV0dXJuITF9ZnVuY3Rpb24gQ2UoYSxiKXtyZXR1cm5cInRleHRhcmVhXCI9PT1hfHxcIm9wdGlvblwiPT09YXx8XCJub3NjcmlwdFwiPT09YXx8XCJzdHJpbmdcIj09PXR5cGVvZiBiLmNoaWxkcmVufHxcIm51bWJlclwiPT09dHlwZW9mIGIuY2hpbGRyZW58fFwib2JqZWN0XCI9PT10eXBlb2YgYi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmbnVsbCE9PWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJm51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwuX19odG1sfXZhciBEZT1cImZ1bmN0aW9uXCI9PT10eXBlb2Ygc2V0VGltZW91dD9zZXRUaW1lb3V0OnZvaWQgMCxFZT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgY2xlYXJUaW1lb3V0P2NsZWFyVGltZW91dDp2b2lkIDA7XG5mdW5jdGlvbiBGZShhLGIsYyxkLGUpe2FbSGFdPWU7XCJpbnB1dFwiPT09YyYmXCJyYWRpb1wiPT09ZS50eXBlJiZudWxsIT1lLm5hbWUmJkJjKGEsZSk7d2UoYyxkKTtkPXdlKGMsZSk7Zm9yKHZhciBmPTA7ZjxiLmxlbmd0aDtmKz0yKXt2YXIgZz1iW2ZdLGg9YltmKzFdO1wic3R5bGVcIj09PWc/dGUoYSxoKTpcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1nP29lKGEsaCk6XCJjaGlsZHJlblwiPT09Zz9wZShhLGgpOnhjKGEsZyxoLGQpfXN3aXRjaChjKXtjYXNlIFwiaW5wdXRcIjpDYyhhLGUpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmllKGEsZSk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmI9YS5fd3JhcHBlclN0YXRlLndhc011bHRpcGxlLGEuX3dyYXBwZXJTdGF0ZS53YXNNdWx0aXBsZT0hIWUubXVsdGlwbGUsYz1lLnZhbHVlLG51bGwhPWM/ZmUoYSwhIWUubXVsdGlwbGUsYywhMSk6YiE9PSEhZS5tdWx0aXBsZSYmKG51bGwhPWUuZGVmYXVsdFZhbHVlP2ZlKGEsISFlLm11bHRpcGxlLGUuZGVmYXVsdFZhbHVlLFxuITApOmZlKGEsISFlLm11bHRpcGxlLGUubXVsdGlwbGU/W106XCJcIiwhMSkpfX1mdW5jdGlvbiBHZShhKXtmb3IoYT1hLm5leHRTaWJsaW5nO2EmJjEhPT1hLm5vZGVUeXBlJiYzIT09YS5ub2RlVHlwZTspYT1hLm5leHRTaWJsaW5nO3JldHVybiBhfWZ1bmN0aW9uIEhlKGEpe2ZvcihhPWEuZmlyc3RDaGlsZDthJiYxIT09YS5ub2RlVHlwZSYmMyE9PWEubm9kZVR5cGU7KWE9YS5uZXh0U2libGluZztyZXR1cm4gYX1uZXcgU2V0O3ZhciBJZT1bXSxKZT0tMTtmdW5jdGlvbiBJKGEpezA+SmV8fChhLmN1cnJlbnQ9SWVbSmVdLEllW0plXT1udWxsLEplLS0pfWZ1bmN0aW9uIEooYSxiKXtKZSsrO0llW0plXT1hLmN1cnJlbnQ7YS5jdXJyZW50PWJ9dmFyIEtlPXt9LEs9e2N1cnJlbnQ6S2V9LEw9e2N1cnJlbnQ6ITF9LExlPUtlO1xuZnVuY3Rpb24gTWUoYSxiKXt2YXIgYz1hLnR5cGUuY29udGV4dFR5cGVzO2lmKCFjKXJldHVybiBLZTt2YXIgZD1hLnN0YXRlTm9kZTtpZihkJiZkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9PT1iKXJldHVybiBkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0O3ZhciBlPXt9LGY7Zm9yKGYgaW4gYyllW2ZdPWJbZl07ZCYmKGE9YS5zdGF0ZU5vZGUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PWIsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dD1lKTtyZXR1cm4gZX1mdW5jdGlvbiBNKGEpe2E9YS5jaGlsZENvbnRleHRUeXBlcztyZXR1cm4gbnVsbCE9PWEmJnZvaWQgMCE9PWF9ZnVuY3Rpb24gTmUoYSl7SShMLGEpO0koSyxhKX1mdW5jdGlvbiBPZShhKXtJKEwsYSk7SShLLGEpfVxuZnVuY3Rpb24gUGUoYSxiLGMpe0suY3VycmVudCE9PUtlP3QoXCIxNjhcIik6dm9pZCAwO0ooSyxiLGEpO0ooTCxjLGEpfWZ1bmN0aW9uIFFlKGEsYixjKXt2YXIgZD1hLnN0YXRlTm9kZTthPWIuY2hpbGRDb250ZXh0VHlwZXM7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGQuZ2V0Q2hpbGRDb250ZXh0KXJldHVybiBjO2Q9ZC5nZXRDaGlsZENvbnRleHQoKTtmb3IodmFyIGUgaW4gZCllIGluIGE/dm9pZCAwOnQoXCIxMDhcIixtYyhiKXx8XCJVbmtub3duXCIsZSk7cmV0dXJuIG4oe30sYyxkKX1mdW5jdGlvbiBSZShhKXt2YXIgYj1hLnN0YXRlTm9kZTtiPWImJmIuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHR8fEtlO0xlPUsuY3VycmVudDtKKEssYixhKTtKKEwsTC5jdXJyZW50LGEpO3JldHVybiEwfVxuZnVuY3Rpb24gU2UoYSxiLGMpe3ZhciBkPWEuc3RhdGVOb2RlO2Q/dm9pZCAwOnQoXCIxNjlcIik7Yz8oYj1RZShhLGIsTGUpLGQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQ9YixJKEwsYSksSShLLGEpLEooSyxiLGEpKTpJKEwsYSk7SihMLGMsYSl9dmFyIFRlPW51bGwsVWU9bnVsbDtmdW5jdGlvbiBWZShhKXtyZXR1cm4gZnVuY3Rpb24oYil7dHJ5e3JldHVybiBhKGIpfWNhdGNoKGMpe319fVxuZnVuY3Rpb24gV2UoYSl7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18pcmV0dXJuITE7dmFyIGI9X19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fO2lmKGIuaXNEaXNhYmxlZHx8IWIuc3VwcG9ydHNGaWJlcilyZXR1cm4hMDt0cnl7dmFyIGM9Yi5pbmplY3QoYSk7VGU9VmUoZnVuY3Rpb24oYSl7cmV0dXJuIGIub25Db21taXRGaWJlclJvb3QoYyxhKX0pO1VlPVZlKGZ1bmN0aW9uKGEpe3JldHVybiBiLm9uQ29tbWl0RmliZXJVbm1vdW50KGMsYSl9KX1jYXRjaChkKXt9cmV0dXJuITB9XG5mdW5jdGlvbiBYZShhLGIsYyxkKXt0aGlzLnRhZz1hO3RoaXMua2V5PWM7dGhpcy5zaWJsaW5nPXRoaXMuY2hpbGQ9dGhpcy5yZXR1cm49dGhpcy5zdGF0ZU5vZGU9dGhpcy50eXBlPXRoaXMuZWxlbWVudFR5cGU9bnVsbDt0aGlzLmluZGV4PTA7dGhpcy5yZWY9bnVsbDt0aGlzLnBlbmRpbmdQcm9wcz1iO3RoaXMuZmlyc3RDb250ZXh0RGVwZW5kZW5jeT10aGlzLm1lbW9pemVkU3RhdGU9dGhpcy51cGRhdGVRdWV1ZT10aGlzLm1lbW9pemVkUHJvcHM9bnVsbDt0aGlzLm1vZGU9ZDt0aGlzLmVmZmVjdFRhZz0wO3RoaXMubGFzdEVmZmVjdD10aGlzLmZpcnN0RWZmZWN0PXRoaXMubmV4dEVmZmVjdD1udWxsO3RoaXMuY2hpbGRFeHBpcmF0aW9uVGltZT10aGlzLmV4cGlyYXRpb25UaW1lPTA7dGhpcy5hbHRlcm5hdGU9bnVsbH1mdW5jdGlvbiBOKGEsYixjLGQpe3JldHVybiBuZXcgWGUoYSxiLGMsZCl9XG5mdW5jdGlvbiBZZShhKXthPWEucHJvdG90eXBlO3JldHVybiEoIWF8fCFhLmlzUmVhY3RDb21wb25lbnQpfWZ1bmN0aW9uIFplKGEpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKXJldHVybiBZZShhKT8xOjA7aWYodm9pZCAwIT09YSYmbnVsbCE9PWEpe2E9YS4kJHR5cGVvZjtpZihhPT09Z2MpcmV0dXJuIDExO2lmKGE9PT1pYylyZXR1cm4gMTR9cmV0dXJuIDJ9XG5mdW5jdGlvbiAkZShhLGIpe3ZhciBjPWEuYWx0ZXJuYXRlO251bGw9PT1jPyhjPU4oYS50YWcsYixhLmtleSxhLm1vZGUpLGMuZWxlbWVudFR5cGU9YS5lbGVtZW50VHlwZSxjLnR5cGU9YS50eXBlLGMuc3RhdGVOb2RlPWEuc3RhdGVOb2RlLGMuYWx0ZXJuYXRlPWEsYS5hbHRlcm5hdGU9Yyk6KGMucGVuZGluZ1Byb3BzPWIsYy5lZmZlY3RUYWc9MCxjLm5leHRFZmZlY3Q9bnVsbCxjLmZpcnN0RWZmZWN0PW51bGwsYy5sYXN0RWZmZWN0PW51bGwpO2MuY2hpbGRFeHBpcmF0aW9uVGltZT1hLmNoaWxkRXhwaXJhdGlvblRpbWU7Yy5leHBpcmF0aW9uVGltZT1hLmV4cGlyYXRpb25UaW1lO2MuY2hpbGQ9YS5jaGlsZDtjLm1lbW9pemVkUHJvcHM9YS5tZW1vaXplZFByb3BzO2MubWVtb2l6ZWRTdGF0ZT1hLm1lbW9pemVkU3RhdGU7Yy51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlO2MuZmlyc3RDb250ZXh0RGVwZW5kZW5jeT1hLmZpcnN0Q29udGV4dERlcGVuZGVuY3k7Yy5zaWJsaW5nPWEuc2libGluZztcbmMuaW5kZXg9YS5pbmRleDtjLnJlZj1hLnJlZjtyZXR1cm4gY31cbmZ1bmN0aW9uIGFmKGEsYixjLGQsZSxmKXt2YXIgZz0yO2Q9YTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlZZShhKSYmKGc9MSk7ZWxzZSBpZihcInN0cmluZ1wiPT09dHlwZW9mIGEpZz01O2Vsc2UgYTpzd2l0Y2goYSl7Y2FzZSBhYzpyZXR1cm4gYmYoYy5jaGlsZHJlbixlLGYsYik7Y2FzZSBmYzpyZXR1cm4gY2YoYyxlfDMsZixiKTtjYXNlIGJjOnJldHVybiBjZihjLGV8MixmLGIpO2Nhc2UgY2M6cmV0dXJuIGE9TigxMixjLGIsZXw0KSxhLmVsZW1lbnRUeXBlPWNjLGEudHlwZT1jYyxhLmV4cGlyYXRpb25UaW1lPWYsYTtjYXNlIGhjOnJldHVybiBhPU4oMTMsYyxiLGUpLGEuZWxlbWVudFR5cGU9aGMsYS50eXBlPWhjLGEuZXhwaXJhdGlvblRpbWU9ZixhO2RlZmF1bHQ6aWYoXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSlzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSBkYzpnPTEwO2JyZWFrIGE7Y2FzZSBlYzpnPTk7YnJlYWsgYTtjYXNlIGdjOmc9MTE7YnJlYWsgYTtjYXNlIGljOmc9XG4xNDticmVhayBhO2Nhc2UgamM6Zz0xNjtkPW51bGw7YnJlYWsgYX10KFwiMTMwXCIsbnVsbD09YT9hOnR5cGVvZiBhLFwiXCIpfWI9TihnLGMsYixlKTtiLmVsZW1lbnRUeXBlPWE7Yi50eXBlPWQ7Yi5leHBpcmF0aW9uVGltZT1mO3JldHVybiBifWZ1bmN0aW9uIGJmKGEsYixjLGQpe2E9Tig3LGEsZCxiKTthLmV4cGlyYXRpb25UaW1lPWM7cmV0dXJuIGF9ZnVuY3Rpb24gY2YoYSxiLGMsZCl7YT1OKDgsYSxkLGIpO2I9MD09PShiJjEpP2JjOmZjO2EuZWxlbWVudFR5cGU9YjthLnR5cGU9YjthLmV4cGlyYXRpb25UaW1lPWM7cmV0dXJuIGF9ZnVuY3Rpb24gZGYoYSxiLGMpe2E9Tig2LGEsbnVsbCxiKTthLmV4cGlyYXRpb25UaW1lPWM7cmV0dXJuIGF9XG5mdW5jdGlvbiBlZihhLGIsYyl7Yj1OKDQsbnVsbCE9PWEuY2hpbGRyZW4/YS5jaGlsZHJlbjpbXSxhLmtleSxiKTtiLmV4cGlyYXRpb25UaW1lPWM7Yi5zdGF0ZU5vZGU9e2NvbnRhaW5lckluZm86YS5jb250YWluZXJJbmZvLHBlbmRpbmdDaGlsZHJlbjpudWxsLGltcGxlbWVudGF0aW9uOmEuaW1wbGVtZW50YXRpb259O3JldHVybiBifWZ1bmN0aW9uIGZmKGEsYil7YS5kaWRFcnJvcj0hMTt2YXIgYz1hLmVhcmxpZXN0UGVuZGluZ1RpbWU7MD09PWM/YS5lYXJsaWVzdFBlbmRpbmdUaW1lPWEubGF0ZXN0UGVuZGluZ1RpbWU9YjpjPGI/YS5lYXJsaWVzdFBlbmRpbmdUaW1lPWI6YS5sYXRlc3RQZW5kaW5nVGltZT5iJiYoYS5sYXRlc3RQZW5kaW5nVGltZT1iKTtnZihiLGEpfVxuZnVuY3Rpb24gaGYoYSxiKXthLmRpZEVycm9yPSExO2EubGF0ZXN0UGluZ2VkVGltZT49YiYmKGEubGF0ZXN0UGluZ2VkVGltZT0wKTt2YXIgYz1hLmVhcmxpZXN0UGVuZGluZ1RpbWUsZD1hLmxhdGVzdFBlbmRpbmdUaW1lO2M9PT1iP2EuZWFybGllc3RQZW5kaW5nVGltZT1kPT09Yj9hLmxhdGVzdFBlbmRpbmdUaW1lPTA6ZDpkPT09YiYmKGEubGF0ZXN0UGVuZGluZ1RpbWU9Yyk7Yz1hLmVhcmxpZXN0U3VzcGVuZGVkVGltZTtkPWEubGF0ZXN0U3VzcGVuZGVkVGltZTswPT09Yz9hLmVhcmxpZXN0U3VzcGVuZGVkVGltZT1hLmxhdGVzdFN1c3BlbmRlZFRpbWU9YjpjPGI/YS5lYXJsaWVzdFN1c3BlbmRlZFRpbWU9YjpkPmImJihhLmxhdGVzdFN1c3BlbmRlZFRpbWU9Yik7Z2YoYixhKX1mdW5jdGlvbiBqZihhLGIpe3ZhciBjPWEuZWFybGllc3RQZW5kaW5nVGltZTthPWEuZWFybGllc3RTdXNwZW5kZWRUaW1lO2M+YiYmKGI9Yyk7YT5iJiYoYj1hKTtyZXR1cm4gYn1cbmZ1bmN0aW9uIGdmKGEsYil7dmFyIGM9Yi5lYXJsaWVzdFN1c3BlbmRlZFRpbWUsZD1iLmxhdGVzdFN1c3BlbmRlZFRpbWUsZT1iLmVhcmxpZXN0UGVuZGluZ1RpbWUsZj1iLmxhdGVzdFBpbmdlZFRpbWU7ZT0wIT09ZT9lOmY7MD09PWUmJigwPT09YXx8ZDxhKSYmKGU9ZCk7YT1lOzAhPT1hJiZjPmEmJihhPWMpO2IubmV4dEV4cGlyYXRpb25UaW1lVG9Xb3JrT249ZTtiLmV4cGlyYXRpb25UaW1lPWF9dmFyIGtmPSExO2Z1bmN0aW9uIGxmKGEpe3JldHVybntiYXNlU3RhdGU6YSxmaXJzdFVwZGF0ZTpudWxsLGxhc3RVcGRhdGU6bnVsbCxmaXJzdENhcHR1cmVkVXBkYXRlOm51bGwsbGFzdENhcHR1cmVkVXBkYXRlOm51bGwsZmlyc3RFZmZlY3Q6bnVsbCxsYXN0RWZmZWN0Om51bGwsZmlyc3RDYXB0dXJlZEVmZmVjdDpudWxsLGxhc3RDYXB0dXJlZEVmZmVjdDpudWxsfX1cbmZ1bmN0aW9uIG1mKGEpe3JldHVybntiYXNlU3RhdGU6YS5iYXNlU3RhdGUsZmlyc3RVcGRhdGU6YS5maXJzdFVwZGF0ZSxsYXN0VXBkYXRlOmEubGFzdFVwZGF0ZSxmaXJzdENhcHR1cmVkVXBkYXRlOm51bGwsbGFzdENhcHR1cmVkVXBkYXRlOm51bGwsZmlyc3RFZmZlY3Q6bnVsbCxsYXN0RWZmZWN0Om51bGwsZmlyc3RDYXB0dXJlZEVmZmVjdDpudWxsLGxhc3RDYXB0dXJlZEVmZmVjdDpudWxsfX1mdW5jdGlvbiBuZihhKXtyZXR1cm57ZXhwaXJhdGlvblRpbWU6YSx0YWc6MCxwYXlsb2FkOm51bGwsY2FsbGJhY2s6bnVsbCxuZXh0Om51bGwsbmV4dEVmZmVjdDpudWxsfX1mdW5jdGlvbiBvZihhLGIpe251bGw9PT1hLmxhc3RVcGRhdGU/YS5maXJzdFVwZGF0ZT1hLmxhc3RVcGRhdGU9YjooYS5sYXN0VXBkYXRlLm5leHQ9YixhLmxhc3RVcGRhdGU9Yil9XG5mdW5jdGlvbiBwZihhLGIpe3ZhciBjPWEuYWx0ZXJuYXRlO2lmKG51bGw9PT1jKXt2YXIgZD1hLnVwZGF0ZVF1ZXVlO3ZhciBlPW51bGw7bnVsbD09PWQmJihkPWEudXBkYXRlUXVldWU9bGYoYS5tZW1vaXplZFN0YXRlKSl9ZWxzZSBkPWEudXBkYXRlUXVldWUsZT1jLnVwZGF0ZVF1ZXVlLG51bGw9PT1kP251bGw9PT1lPyhkPWEudXBkYXRlUXVldWU9bGYoYS5tZW1vaXplZFN0YXRlKSxlPWMudXBkYXRlUXVldWU9bGYoYy5tZW1vaXplZFN0YXRlKSk6ZD1hLnVwZGF0ZVF1ZXVlPW1mKGUpOm51bGw9PT1lJiYoZT1jLnVwZGF0ZVF1ZXVlPW1mKGQpKTtudWxsPT09ZXx8ZD09PWU/b2YoZCxiKTpudWxsPT09ZC5sYXN0VXBkYXRlfHxudWxsPT09ZS5sYXN0VXBkYXRlPyhvZihkLGIpLG9mKGUsYikpOihvZihkLGIpLGUubGFzdFVwZGF0ZT1iKX1cbmZ1bmN0aW9uIHFmKGEsYil7dmFyIGM9YS51cGRhdGVRdWV1ZTtjPW51bGw9PT1jP2EudXBkYXRlUXVldWU9bGYoYS5tZW1vaXplZFN0YXRlKTpyZihhLGMpO251bGw9PT1jLmxhc3RDYXB0dXJlZFVwZGF0ZT9jLmZpcnN0Q2FwdHVyZWRVcGRhdGU9Yy5sYXN0Q2FwdHVyZWRVcGRhdGU9YjooYy5sYXN0Q2FwdHVyZWRVcGRhdGUubmV4dD1iLGMubGFzdENhcHR1cmVkVXBkYXRlPWIpfWZ1bmN0aW9uIHJmKGEsYil7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWMmJmI9PT1jLnVwZGF0ZVF1ZXVlJiYoYj1hLnVwZGF0ZVF1ZXVlPW1mKGIpKTtyZXR1cm4gYn1cbmZ1bmN0aW9uIHNmKGEsYixjLGQsZSxmKXtzd2l0Y2goYy50YWcpe2Nhc2UgMTpyZXR1cm4gYT1jLnBheWxvYWQsXCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YS5jYWxsKGYsZCxlKTphO2Nhc2UgMzphLmVmZmVjdFRhZz1hLmVmZmVjdFRhZyYtMjA0OXw2NDtjYXNlIDA6YT1jLnBheWxvYWQ7ZT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hLmNhbGwoZixkLGUpOmE7aWYobnVsbD09PWV8fHZvaWQgMD09PWUpYnJlYWs7cmV0dXJuIG4oe30sZCxlKTtjYXNlIDI6a2Y9ITB9cmV0dXJuIGR9XG5mdW5jdGlvbiB0ZihhLGIsYyxkLGUpe2tmPSExO2I9cmYoYSxiKTtmb3IodmFyIGY9Yi5iYXNlU3RhdGUsZz1udWxsLGg9MCxrPWIuZmlyc3RVcGRhdGUsbD1mO251bGwhPT1rOyl7dmFyIG09ay5leHBpcmF0aW9uVGltZTttPGU/KG51bGw9PT1nJiYoZz1rLGY9bCksaDxtJiYoaD1tKSk6KGw9c2YoYSxiLGssbCxjLGQpLG51bGwhPT1rLmNhbGxiYWNrJiYoYS5lZmZlY3RUYWd8PTMyLGsubmV4dEVmZmVjdD1udWxsLG51bGw9PT1iLmxhc3RFZmZlY3Q/Yi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9azooYi5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9ayxiLmxhc3RFZmZlY3Q9aykpKTtrPWsubmV4dH1tPW51bGw7Zm9yKGs9Yi5maXJzdENhcHR1cmVkVXBkYXRlO251bGwhPT1rOyl7dmFyIHI9ay5leHBpcmF0aW9uVGltZTtyPGU/KG51bGw9PT1tJiYobT1rLG51bGw9PT1nJiYoZj1sKSksaDxyJiYoaD1yKSk6KGw9c2YoYSxiLGssbCxjLGQpLG51bGwhPT1rLmNhbGxiYWNrJiYoYS5lZmZlY3RUYWd8PVxuMzIsay5uZXh0RWZmZWN0PW51bGwsbnVsbD09PWIubGFzdENhcHR1cmVkRWZmZWN0P2IuZmlyc3RDYXB0dXJlZEVmZmVjdD1iLmxhc3RDYXB0dXJlZEVmZmVjdD1rOihiLmxhc3RDYXB0dXJlZEVmZmVjdC5uZXh0RWZmZWN0PWssYi5sYXN0Q2FwdHVyZWRFZmZlY3Q9aykpKTtrPWsubmV4dH1udWxsPT09ZyYmKGIubGFzdFVwZGF0ZT1udWxsKTtudWxsPT09bT9iLmxhc3RDYXB0dXJlZFVwZGF0ZT1udWxsOmEuZWZmZWN0VGFnfD0zMjtudWxsPT09ZyYmbnVsbD09PW0mJihmPWwpO2IuYmFzZVN0YXRlPWY7Yi5maXJzdFVwZGF0ZT1nO2IuZmlyc3RDYXB0dXJlZFVwZGF0ZT1tO2EuZXhwaXJhdGlvblRpbWU9aDthLm1lbW9pemVkU3RhdGU9bH1cbmZ1bmN0aW9uIHVmKGEsYixjKXtudWxsIT09Yi5maXJzdENhcHR1cmVkVXBkYXRlJiYobnVsbCE9PWIubGFzdFVwZGF0ZSYmKGIubGFzdFVwZGF0ZS5uZXh0PWIuZmlyc3RDYXB0dXJlZFVwZGF0ZSxiLmxhc3RVcGRhdGU9Yi5sYXN0Q2FwdHVyZWRVcGRhdGUpLGIuZmlyc3RDYXB0dXJlZFVwZGF0ZT1iLmxhc3RDYXB0dXJlZFVwZGF0ZT1udWxsKTt2ZihiLmZpcnN0RWZmZWN0LGMpO2IuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PW51bGw7dmYoYi5maXJzdENhcHR1cmVkRWZmZWN0LGMpO2IuZmlyc3RDYXB0dXJlZEVmZmVjdD1iLmxhc3RDYXB0dXJlZEVmZmVjdD1udWxsfWZ1bmN0aW9uIHZmKGEsYil7Zm9yKDtudWxsIT09YTspe3ZhciBjPWEuY2FsbGJhY2s7aWYobnVsbCE9PWMpe2EuY2FsbGJhY2s9bnVsbDt2YXIgZD1iO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBjP3QoXCIxOTFcIixjKTp2b2lkIDA7Yy5jYWxsKGQpfWE9YS5uZXh0RWZmZWN0fX1cbmZ1bmN0aW9uIHdmKGEsYil7cmV0dXJue3ZhbHVlOmEsc291cmNlOmIsc3RhY2s6bmMoYil9fXZhciB4Zj17Y3VycmVudDpudWxsfSx5Zj1udWxsLHpmPW51bGwsQWY9bnVsbDtmdW5jdGlvbiBCZihhLGIpe3ZhciBjPWEudHlwZS5fY29udGV4dDtKKHhmLGMuX2N1cnJlbnRWYWx1ZSxhKTtjLl9jdXJyZW50VmFsdWU9Yn1mdW5jdGlvbiBDZihhKXt2YXIgYj14Zi5jdXJyZW50O0koeGYsYSk7YS50eXBlLl9jb250ZXh0Ll9jdXJyZW50VmFsdWU9Yn1mdW5jdGlvbiBEZihhKXt5Zj1hO0FmPXpmPW51bGw7YS5maXJzdENvbnRleHREZXBlbmRlbmN5PW51bGx9XG5mdW5jdGlvbiBFZihhLGIpe2lmKEFmIT09YSYmITEhPT1iJiYwIT09Yil7aWYoXCJudW1iZXJcIiE9PXR5cGVvZiBifHwxMDczNzQxODIzPT09YilBZj1hLGI9MTA3Mzc0MTgyMztiPXtjb250ZXh0OmEsb2JzZXJ2ZWRCaXRzOmIsbmV4dDpudWxsfTtudWxsPT09emY/KG51bGw9PT15Zj90KFwiMjkzXCIpOnZvaWQgMCx5Zi5maXJzdENvbnRleHREZXBlbmRlbmN5PXpmPWIpOnpmPXpmLm5leHQ9Yn1yZXR1cm4gYS5fY3VycmVudFZhbHVlfXZhciBGZj17fSxPPXtjdXJyZW50OkZmfSxHZj17Y3VycmVudDpGZn0sSGY9e2N1cnJlbnQ6RmZ9O2Z1bmN0aW9uIElmKGEpe2E9PT1GZj90KFwiMTc0XCIpOnZvaWQgMDtyZXR1cm4gYX1cbmZ1bmN0aW9uIEpmKGEsYil7SihIZixiLGEpO0ooR2YsYSxhKTtKKE8sRmYsYSk7dmFyIGM9Yi5ub2RlVHlwZTtzd2l0Y2goYyl7Y2FzZSA5OmNhc2UgMTE6Yj0oYj1iLmRvY3VtZW50RWxlbWVudCk/Yi5uYW1lc3BhY2VVUkk6bWUobnVsbCxcIlwiKTticmVhaztkZWZhdWx0OmM9OD09PWM/Yi5wYXJlbnROb2RlOmIsYj1jLm5hbWVzcGFjZVVSSXx8bnVsbCxjPWMudGFnTmFtZSxiPW1lKGIsYyl9SShPLGEpO0ooTyxiLGEpfWZ1bmN0aW9uIEtmKGEpe0koTyxhKTtJKEdmLGEpO0koSGYsYSl9ZnVuY3Rpb24gTGYoYSl7SWYoSGYuY3VycmVudCk7dmFyIGI9SWYoTy5jdXJyZW50KTt2YXIgYz1tZShiLGEudHlwZSk7YiE9PWMmJihKKEdmLGEsYSksSihPLGMsYSkpfWZ1bmN0aW9uIE1mKGEpe0dmLmN1cnJlbnQ9PT1hJiYoSShPLGEpLEkoR2YsYSkpfVxuZnVuY3Rpb24gUChhLGIpe2lmKGEmJmEuZGVmYXVsdFByb3BzKXtiPW4oe30sYik7YT1hLmRlZmF1bHRQcm9wcztmb3IodmFyIGMgaW4gYSl2b2lkIDA9PT1iW2NdJiYoYltjXT1hW2NdKX1yZXR1cm4gYn1mdW5jdGlvbiBOZihhKXt2YXIgYj1hLl9yZXN1bHQ7c3dpdGNoKGEuX3N0YXR1cyl7Y2FzZSAxOnJldHVybiBiO2Nhc2UgMjp0aHJvdyBiO2Nhc2UgMDp0aHJvdyBiO2RlZmF1bHQ6dGhyb3cgYS5fc3RhdHVzPTAsYj1hLl9jdG9yLGI9YigpLGIudGhlbihmdW5jdGlvbihiKXswPT09YS5fc3RhdHVzJiYoYj1iLmRlZmF1bHQsYS5fc3RhdHVzPTEsYS5fcmVzdWx0PWIpfSxmdW5jdGlvbihiKXswPT09YS5fc3RhdHVzJiYoYS5fc3RhdHVzPTIsYS5fcmVzdWx0PWIpfSksYS5fcmVzdWx0PWIsYjt9fXZhciBPZj1YYi5SZWFjdEN1cnJlbnRPd25lcixQZj0obmV3IGFhLkNvbXBvbmVudCkucmVmcztcbmZ1bmN0aW9uIFFmKGEsYixjLGQpe2I9YS5tZW1vaXplZFN0YXRlO2M9YyhkLGIpO2M9bnVsbD09PWN8fHZvaWQgMD09PWM/YjpuKHt9LGIsYyk7YS5tZW1vaXplZFN0YXRlPWM7ZD1hLnVwZGF0ZVF1ZXVlO251bGwhPT1kJiYwPT09YS5leHBpcmF0aW9uVGltZSYmKGQuYmFzZVN0YXRlPWMpfVxudmFyIFZmPXtpc01vdW50ZWQ6ZnVuY3Rpb24oYSl7cmV0dXJuKGE9YS5fcmVhY3RJbnRlcm5hbEZpYmVyKT8yPT09a2QoYSk6ITF9LGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbihhLGIsYyl7YT1hLl9yZWFjdEludGVybmFsRmliZXI7dmFyIGQ9UmYoKTtkPVNmKGQsYSk7dmFyIGU9bmYoZCk7ZS5wYXlsb2FkPWI7dm9pZCAwIT09YyYmbnVsbCE9PWMmJihlLmNhbGxiYWNrPWMpO1RmKCk7cGYoYSxlKTtVZihhLGQpfSxlbnF1ZXVlUmVwbGFjZVN0YXRlOmZ1bmN0aW9uKGEsYixjKXthPWEuX3JlYWN0SW50ZXJuYWxGaWJlcjt2YXIgZD1SZigpO2Q9U2YoZCxhKTt2YXIgZT1uZihkKTtlLnRhZz0xO2UucGF5bG9hZD1iO3ZvaWQgMCE9PWMmJm51bGwhPT1jJiYoZS5jYWxsYmFjaz1jKTtUZigpO3BmKGEsZSk7VWYoYSxkKX0sZW5xdWV1ZUZvcmNlVXBkYXRlOmZ1bmN0aW9uKGEsYil7YT1hLl9yZWFjdEludGVybmFsRmliZXI7dmFyIGM9UmYoKTtjPVNmKGMsYSk7dmFyIGQ9bmYoYyk7ZC50YWc9XG4yO3ZvaWQgMCE9PWImJm51bGwhPT1iJiYoZC5jYWxsYmFjaz1iKTtUZigpO3BmKGEsZCk7VWYoYSxjKX19O2Z1bmN0aW9uIFdmKGEsYixjLGQsZSxmLGcpe2E9YS5zdGF0ZU5vZGU7cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGEuc2hvdWxkQ29tcG9uZW50VXBkYXRlP2Euc2hvdWxkQ29tcG9uZW50VXBkYXRlKGQsZixnKTpiLnByb3RvdHlwZSYmYi5wcm90b3R5cGUuaXNQdXJlUmVhY3RDb21wb25lbnQ/IWpkKGMsZCl8fCFqZChlLGYpOiEwfVxuZnVuY3Rpb24gWGYoYSxiLGMpe3ZhciBkPSExLGU9S2U7dmFyIGY9Yi5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mP2Y9T2YuY3VycmVudERpc3BhdGNoZXIucmVhZENvbnRleHQoZik6KGU9TShiKT9MZTpLLmN1cnJlbnQsZD1iLmNvbnRleHRUeXBlcyxmPShkPW51bGwhPT1kJiZ2b2lkIDAhPT1kKT9NZShhLGUpOktlKTtiPW5ldyBiKGMsZik7YS5tZW1vaXplZFN0YXRlPW51bGwhPT1iLnN0YXRlJiZ2b2lkIDAhPT1iLnN0YXRlP2Iuc3RhdGU6bnVsbDtiLnVwZGF0ZXI9VmY7YS5zdGF0ZU5vZGU9YjtiLl9yZWFjdEludGVybmFsRmliZXI9YTtkJiYoYT1hLnN0YXRlTm9kZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9ZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0PWYpO3JldHVybiBifVxuZnVuY3Rpb24gWmYoYSxiLGMsZCl7YT1iLnN0YXRlO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJmIuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhjLGQpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZiLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKGMsZCk7Yi5zdGF0ZSE9PWEmJlZmLmVucXVldWVSZXBsYWNlU3RhdGUoYixiLnN0YXRlLG51bGwpfVxuZnVuY3Rpb24gJGYoYSxiLGMsZCl7dmFyIGU9YS5zdGF0ZU5vZGU7ZS5wcm9wcz1jO2Uuc3RhdGU9YS5tZW1vaXplZFN0YXRlO2UucmVmcz1QZjt2YXIgZj1iLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY/ZS5jb250ZXh0PU9mLmN1cnJlbnREaXNwYXRjaGVyLnJlYWRDb250ZXh0KGYpOihmPU0oYik/TGU6Sy5jdXJyZW50LGUuY29udGV4dD1NZShhLGYpKTtmPWEudXBkYXRlUXVldWU7bnVsbCE9PWYmJih0ZihhLGYsYyxlLGQpLGUuc3RhdGU9YS5tZW1vaXplZFN0YXRlKTtmPWIuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBmJiYoUWYoYSxiLGYsYyksZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGUpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wc3x8XCJmdW5jdGlvblwiPT09dHlwZW9mIGUuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJlxuXCJmdW5jdGlvblwiIT09dHlwZW9mIGUuY29tcG9uZW50V2lsbE1vdW50fHwoYj1lLnN0YXRlLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmNvbXBvbmVudFdpbGxNb3VudCYmZS5jb21wb25lbnRXaWxsTW91bnQoKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQoKSxiIT09ZS5zdGF0ZSYmVmYuZW5xdWV1ZVJlcGxhY2VTdGF0ZShlLGUuc3RhdGUsbnVsbCksZj1hLnVwZGF0ZVF1ZXVlLG51bGwhPT1mJiYodGYoYSxmLGMsZSxkKSxlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSkpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmNvbXBvbmVudERpZE1vdW50JiYoYS5lZmZlY3RUYWd8PTQpfXZhciBhZz1BcnJheS5pc0FycmF5O1xuZnVuY3Rpb24gYmcoYSxiLGMpe2E9Yy5yZWY7aWYobnVsbCE9PWEmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBhJiZcIm9iamVjdFwiIT09dHlwZW9mIGEpe2lmKGMuX293bmVyKXtjPWMuX293bmVyO3ZhciBkPXZvaWQgMDtjJiYoMSE9PWMudGFnP3QoXCIyODlcIik6dm9pZCAwLGQ9Yy5zdGF0ZU5vZGUpO2Q/dm9pZCAwOnQoXCIxNDdcIixhKTt2YXIgZT1cIlwiK2E7aWYobnVsbCE9PWImJm51bGwhPT1iLnJlZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGIucmVmJiZiLnJlZi5fc3RyaW5nUmVmPT09ZSlyZXR1cm4gYi5yZWY7Yj1mdW5jdGlvbihhKXt2YXIgYj1kLnJlZnM7Yj09PVBmJiYoYj1kLnJlZnM9e30pO251bGw9PT1hP2RlbGV0ZSBiW2VdOmJbZV09YX07Yi5fc3RyaW5nUmVmPWU7cmV0dXJuIGJ9XCJzdHJpbmdcIiE9PXR5cGVvZiBhP3QoXCIyODRcIik6dm9pZCAwO2MuX293bmVyP3ZvaWQgMDp0KFwiMjkwXCIsYSl9cmV0dXJuIGF9XG5mdW5jdGlvbiBjZyhhLGIpe1widGV4dGFyZWFcIiE9PWEudHlwZSYmdChcIjMxXCIsXCJbb2JqZWN0IE9iamVjdF1cIj09PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChiKT9cIm9iamVjdCB3aXRoIGtleXMge1wiK09iamVjdC5rZXlzKGIpLmpvaW4oXCIsIFwiKStcIn1cIjpiLFwiXCIpfVxuZnVuY3Rpb24gZGcoYSl7ZnVuY3Rpb24gYihiLGMpe2lmKGEpe3ZhciBkPWIubGFzdEVmZmVjdDtudWxsIT09ZD8oZC5uZXh0RWZmZWN0PWMsYi5sYXN0RWZmZWN0PWMpOmIuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PWM7Yy5uZXh0RWZmZWN0PW51bGw7Yy5lZmZlY3RUYWc9OH19ZnVuY3Rpb24gYyhjLGQpe2lmKCFhKXJldHVybiBudWxsO2Zvcig7bnVsbCE9PWQ7KWIoYyxkKSxkPWQuc2libGluZztyZXR1cm4gbnVsbH1mdW5jdGlvbiBkKGEsYil7Zm9yKGE9bmV3IE1hcDtudWxsIT09YjspbnVsbCE9PWIua2V5P2Euc2V0KGIua2V5LGIpOmEuc2V0KGIuaW5kZXgsYiksYj1iLnNpYmxpbmc7cmV0dXJuIGF9ZnVuY3Rpb24gZShhLGIsYyl7YT0kZShhLGIsYyk7YS5pbmRleD0wO2Euc2libGluZz1udWxsO3JldHVybiBhfWZ1bmN0aW9uIGYoYixjLGQpe2IuaW5kZXg9ZDtpZighYSlyZXR1cm4gYztkPWIuYWx0ZXJuYXRlO2lmKG51bGwhPT1kKXJldHVybiBkPWQuaW5kZXgsZDxjPyhiLmVmZmVjdFRhZz1cbjIsYyk6ZDtiLmVmZmVjdFRhZz0yO3JldHVybiBjfWZ1bmN0aW9uIGcoYil7YSYmbnVsbD09PWIuYWx0ZXJuYXRlJiYoYi5lZmZlY3RUYWc9Mik7cmV0dXJuIGJ9ZnVuY3Rpb24gaChhLGIsYyxkKXtpZihudWxsPT09Ynx8NiE9PWIudGFnKXJldHVybiBiPWRmKGMsYS5tb2RlLGQpLGIucmV0dXJuPWEsYjtiPWUoYixjLGQpO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gayhhLGIsYyxkKXtpZihudWxsIT09YiYmYi5lbGVtZW50VHlwZT09PWMudHlwZSlyZXR1cm4gZD1lKGIsYy5wcm9wcyxkKSxkLnJlZj1iZyhhLGIsYyksZC5yZXR1cm49YSxkO2Q9YWYoYy50eXBlLGMua2V5LGMucHJvcHMsbnVsbCxhLm1vZGUsZCk7ZC5yZWY9YmcoYSxiLGMpO2QucmV0dXJuPWE7cmV0dXJuIGR9ZnVuY3Rpb24gbChhLGIsYyxkKXtpZihudWxsPT09Ynx8NCE9PWIudGFnfHxiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvIT09Yy5jb250YWluZXJJbmZvfHxiLnN0YXRlTm9kZS5pbXBsZW1lbnRhdGlvbiE9PVxuYy5pbXBsZW1lbnRhdGlvbilyZXR1cm4gYj1lZihjLGEubW9kZSxkKSxiLnJldHVybj1hLGI7Yj1lKGIsYy5jaGlsZHJlbnx8W10sZCk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBtKGEsYixjLGQsZyl7aWYobnVsbD09PWJ8fDchPT1iLnRhZylyZXR1cm4gYj1iZihjLGEubW9kZSxkLGcpLGIucmV0dXJuPWEsYjtiPWUoYixjLGQpO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gcihhLGIsYyl7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBifHxcIm51bWJlclwiPT09dHlwZW9mIGIpcmV0dXJuIGI9ZGYoXCJcIitiLGEubW9kZSxjKSxiLnJldHVybj1hLGI7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBiJiZudWxsIT09Yil7c3dpdGNoKGIuJCR0eXBlb2Ype2Nhc2UgWmI6cmV0dXJuIGM9YWYoYi50eXBlLGIua2V5LGIucHJvcHMsbnVsbCxhLm1vZGUsYyksYy5yZWY9YmcoYSxudWxsLGIpLGMucmV0dXJuPWEsYztjYXNlICRiOnJldHVybiBiPWVmKGIsYS5tb2RlLGMpLGIucmV0dXJuPWEsYn1pZihhZyhiKXx8XG5sYyhiKSlyZXR1cm4gYj1iZihiLGEubW9kZSxjLG51bGwpLGIucmV0dXJuPWEsYjtjZyhhLGIpfXJldHVybiBudWxsfWZ1bmN0aW9uIHcoYSxiLGMsZCl7dmFyIGU9bnVsbCE9PWI/Yi5rZXk6bnVsbDtpZihcInN0cmluZ1wiPT09dHlwZW9mIGN8fFwibnVtYmVyXCI9PT10eXBlb2YgYylyZXR1cm4gbnVsbCE9PWU/bnVsbDpoKGEsYixcIlwiK2MsZCk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBjJiZudWxsIT09Yyl7c3dpdGNoKGMuJCR0eXBlb2Ype2Nhc2UgWmI6cmV0dXJuIGMua2V5PT09ZT9jLnR5cGU9PT1hYz9tKGEsYixjLnByb3BzLmNoaWxkcmVuLGQsZSk6ayhhLGIsYyxkKTpudWxsO2Nhc2UgJGI6cmV0dXJuIGMua2V5PT09ZT9sKGEsYixjLGQpOm51bGx9aWYoYWcoYyl8fGxjKGMpKXJldHVybiBudWxsIT09ZT9udWxsOm0oYSxiLGMsZCxudWxsKTtjZyhhLGMpfXJldHVybiBudWxsfWZ1bmN0aW9uIHkoYSxiLGMsZCxlKXtpZihcInN0cmluZ1wiPT09dHlwZW9mIGR8fFwibnVtYmVyXCI9PT10eXBlb2YgZClyZXR1cm4gYT1cbmEuZ2V0KGMpfHxudWxsLGgoYixhLFwiXCIrZCxlKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGQmJm51bGwhPT1kKXtzd2l0Y2goZC4kJHR5cGVvZil7Y2FzZSBaYjpyZXR1cm4gYT1hLmdldChudWxsPT09ZC5rZXk/YzpkLmtleSl8fG51bGwsZC50eXBlPT09YWM/bShiLGEsZC5wcm9wcy5jaGlsZHJlbixlLGQua2V5KTprKGIsYSxkLGUpO2Nhc2UgJGI6cmV0dXJuIGE9YS5nZXQobnVsbD09PWQua2V5P2M6ZC5rZXkpfHxudWxsLGwoYixhLGQsZSl9aWYoYWcoZCl8fGxjKGQpKXJldHVybiBhPWEuZ2V0KGMpfHxudWxsLG0oYixhLGQsZSxudWxsKTtjZyhiLGQpfXJldHVybiBudWxsfWZ1bmN0aW9uIEIoZSxnLGgsayl7Zm9yKHZhciBsPW51bGwscT1udWxsLG09Zyx1PWc9MCxwPW51bGw7bnVsbCE9PW0mJnU8aC5sZW5ndGg7dSsrKXttLmluZGV4PnU/KHA9bSxtPW51bGwpOnA9bS5zaWJsaW5nO3ZhciB2PXcoZSxtLGhbdV0sayk7aWYobnVsbD09PXYpe251bGw9PT1tJiYobT1wKTticmVha31hJiZcbm0mJm51bGw9PT12LmFsdGVybmF0ZSYmYihlLG0pO2c9Zih2LGcsdSk7bnVsbD09PXE/bD12OnEuc2libGluZz12O3E9djttPXB9aWYodT09PWgubGVuZ3RoKXJldHVybiBjKGUsbSksbDtpZihudWxsPT09bSl7Zm9yKDt1PGgubGVuZ3RoO3UrKylpZihtPXIoZSxoW3VdLGspKWc9ZihtLGcsdSksbnVsbD09PXE/bD1tOnEuc2libGluZz1tLHE9bTtyZXR1cm4gbH1mb3IobT1kKGUsbSk7dTxoLmxlbmd0aDt1KyspaWYocD15KG0sZSx1LGhbdV0saykpYSYmbnVsbCE9PXAuYWx0ZXJuYXRlJiZtLmRlbGV0ZShudWxsPT09cC5rZXk/dTpwLmtleSksZz1mKHAsZyx1KSxudWxsPT09cT9sPXA6cS5zaWJsaW5nPXAscT1wO2EmJm0uZm9yRWFjaChmdW5jdGlvbihhKXtyZXR1cm4gYihlLGEpfSk7cmV0dXJuIGx9ZnVuY3Rpb24gUihlLGcsaCxrKXt2YXIgbD1sYyhoKTtcImZ1bmN0aW9uXCIhPT10eXBlb2YgbD90KFwiMTUwXCIpOnZvaWQgMDtoPWwuY2FsbChoKTtudWxsPT1oP3QoXCIxNTFcIik6dm9pZCAwO1xuZm9yKHZhciBtPWw9bnVsbCxxPWcsdT1nPTAscD1udWxsLHY9aC5uZXh0KCk7bnVsbCE9PXEmJiF2LmRvbmU7dSsrLHY9aC5uZXh0KCkpe3EuaW5kZXg+dT8ocD1xLHE9bnVsbCk6cD1xLnNpYmxpbmc7dmFyIEE9dyhlLHEsdi52YWx1ZSxrKTtpZihudWxsPT09QSl7cXx8KHE9cCk7YnJlYWt9YSYmcSYmbnVsbD09PUEuYWx0ZXJuYXRlJiZiKGUscSk7Zz1mKEEsZyx1KTtudWxsPT09bT9sPUE6bS5zaWJsaW5nPUE7bT1BO3E9cH1pZih2LmRvbmUpcmV0dXJuIGMoZSxxKSxsO2lmKG51bGw9PT1xKXtmb3IoOyF2LmRvbmU7dSsrLHY9aC5uZXh0KCkpdj1yKGUsdi52YWx1ZSxrKSxudWxsIT09diYmKGc9Zih2LGcsdSksbnVsbD09PW0/bD12Om0uc2libGluZz12LG09dik7cmV0dXJuIGx9Zm9yKHE9ZChlLHEpOyF2LmRvbmU7dSsrLHY9aC5uZXh0KCkpdj15KHEsZSx1LHYudmFsdWUsayksbnVsbCE9PXYmJihhJiZudWxsIT09di5hbHRlcm5hdGUmJnEuZGVsZXRlKG51bGw9PT12LmtleT91Olxudi5rZXkpLGc9Zih2LGcsdSksbnVsbD09PW0/bD12Om0uc2libGluZz12LG09dik7YSYmcS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JldHVybiBiKGUsYSl9KTtyZXR1cm4gbH1yZXR1cm4gZnVuY3Rpb24oYSxkLGYsaCl7dmFyIGs9XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09ZiYmZi50eXBlPT09YWMmJm51bGw9PT1mLmtleTtrJiYoZj1mLnByb3BzLmNoaWxkcmVuKTt2YXIgbD1cIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mO2lmKGwpc3dpdGNoKGYuJCR0eXBlb2Ype2Nhc2UgWmI6YTp7bD1mLmtleTtmb3Ioaz1kO251bGwhPT1rOyl7aWYoay5rZXk9PT1sKWlmKDc9PT1rLnRhZz9mLnR5cGU9PT1hYzprLmVsZW1lbnRUeXBlPT09Zi50eXBlKXtjKGEsay5zaWJsaW5nKTtkPWUoayxmLnR5cGU9PT1hYz9mLnByb3BzLmNoaWxkcmVuOmYucHJvcHMsaCk7ZC5yZWY9YmcoYSxrLGYpO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9ZWxzZXtjKGEsayk7YnJlYWt9ZWxzZSBiKGEsayk7az1cbmsuc2libGluZ31mLnR5cGU9PT1hYz8oZD1iZihmLnByb3BzLmNoaWxkcmVuLGEubW9kZSxoLGYua2V5KSxkLnJldHVybj1hLGE9ZCk6KGg9YWYoZi50eXBlLGYua2V5LGYucHJvcHMsbnVsbCxhLm1vZGUsaCksaC5yZWY9YmcoYSxkLGYpLGgucmV0dXJuPWEsYT1oKX1yZXR1cm4gZyhhKTtjYXNlICRiOmE6e2ZvcihrPWYua2V5O251bGwhPT1kOyl7aWYoZC5rZXk9PT1rKWlmKDQ9PT1kLnRhZyYmZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbz09PWYuY29udGFpbmVySW5mbyYmZC5zdGF0ZU5vZGUuaW1wbGVtZW50YXRpb249PT1mLmltcGxlbWVudGF0aW9uKXtjKGEsZC5zaWJsaW5nKTtkPWUoZCxmLmNoaWxkcmVufHxbXSxoKTtkLnJldHVybj1hO2E9ZDticmVhayBhfWVsc2V7YyhhLGQpO2JyZWFrfWVsc2UgYihhLGQpO2Q9ZC5zaWJsaW5nfWQ9ZWYoZixhLm1vZGUsaCk7ZC5yZXR1cm49YTthPWR9cmV0dXJuIGcoYSl9aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBmfHxcIm51bWJlclwiPT09dHlwZW9mIGYpcmV0dXJuIGY9XG5cIlwiK2YsbnVsbCE9PWQmJjY9PT1kLnRhZz8oYyhhLGQuc2libGluZyksZD1lKGQsZixoKSxkLnJldHVybj1hLGE9ZCk6KGMoYSxkKSxkPWRmKGYsYS5tb2RlLGgpLGQucmV0dXJuPWEsYT1kKSxnKGEpO2lmKGFnKGYpKXJldHVybiBCKGEsZCxmLGgpO2lmKGxjKGYpKXJldHVybiBSKGEsZCxmLGgpO2wmJmNnKGEsZik7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBmJiYhaylzd2l0Y2goYS50YWcpe2Nhc2UgMTpjYXNlIDA6aD1hLnR5cGUsdChcIjE1MlwiLGguZGlzcGxheU5hbWV8fGgubmFtZXx8XCJDb21wb25lbnRcIil9cmV0dXJuIGMoYSxkKX19dmFyIGVnPWRnKCEwKSxmZz1kZyghMSksZ2c9bnVsbCxoZz1udWxsLGlnPSExO1xuZnVuY3Rpb24gamcoYSxiKXt2YXIgYz1OKDUsbnVsbCxudWxsLDApO2MuZWxlbWVudFR5cGU9XCJERUxFVEVEXCI7Yy50eXBlPVwiREVMRVRFRFwiO2Muc3RhdGVOb2RlPWI7Yy5yZXR1cm49YTtjLmVmZmVjdFRhZz04O251bGwhPT1hLmxhc3RFZmZlY3Q/KGEubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWMsYS5sYXN0RWZmZWN0PWMpOmEuZmlyc3RFZmZlY3Q9YS5sYXN0RWZmZWN0PWN9ZnVuY3Rpb24ga2coYSxiKXtzd2l0Y2goYS50YWcpe2Nhc2UgNTp2YXIgYz1hLnR5cGU7Yj0xIT09Yi5ub2RlVHlwZXx8Yy50b0xvd2VyQ2FzZSgpIT09Yi5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpP251bGw6YjtyZXR1cm4gbnVsbCE9PWI/KGEuc3RhdGVOb2RlPWIsITApOiExO2Nhc2UgNjpyZXR1cm4gYj1cIlwiPT09YS5wZW5kaW5nUHJvcHN8fDMhPT1iLm5vZGVUeXBlP251bGw6YixudWxsIT09Yj8oYS5zdGF0ZU5vZGU9YiwhMCk6ITE7ZGVmYXVsdDpyZXR1cm4hMX19XG5mdW5jdGlvbiBsZyhhKXtpZihpZyl7dmFyIGI9aGc7aWYoYil7dmFyIGM9YjtpZigha2coYSxiKSl7Yj1HZShjKTtpZighYnx8IWtnKGEsYikpe2EuZWZmZWN0VGFnfD0yO2lnPSExO2dnPWE7cmV0dXJufWpnKGdnLGMpfWdnPWE7aGc9SGUoYil9ZWxzZSBhLmVmZmVjdFRhZ3w9MixpZz0hMSxnZz1hfX1mdW5jdGlvbiBtZyhhKXtmb3IoYT1hLnJldHVybjtudWxsIT09YSYmNSE9PWEudGFnJiYzIT09YS50YWc7KWE9YS5yZXR1cm47Z2c9YX1mdW5jdGlvbiBuZyhhKXtpZihhIT09Z2cpcmV0dXJuITE7aWYoIWlnKXJldHVybiBtZyhhKSxpZz0hMCwhMTt2YXIgYj1hLnR5cGU7aWYoNSE9PWEudGFnfHxcImhlYWRcIiE9PWImJlwiYm9keVwiIT09YiYmIUNlKGIsYS5tZW1vaXplZFByb3BzKSlmb3IoYj1oZztiOylqZyhhLGIpLGI9R2UoYik7bWcoYSk7aGc9Z2c/R2UoYS5zdGF0ZU5vZGUpOm51bGw7cmV0dXJuITB9ZnVuY3Rpb24gb2coKXtoZz1nZz1udWxsO2lnPSExfXZhciBwZz1YYi5SZWFjdEN1cnJlbnRPd25lcjtcbmZ1bmN0aW9uIFEoYSxiLGMsZCl7Yi5jaGlsZD1udWxsPT09YT9mZyhiLG51bGwsYyxkKTplZyhiLGEuY2hpbGQsYyxkKX1mdW5jdGlvbiBxZyhhLGIsYyxkLGUpe2M9Yy5yZW5kZXI7dmFyIGY9Yi5yZWY7RGYoYixlKTtkPWMoZCxmKTtiLmVmZmVjdFRhZ3w9MTtRKGEsYixkLGUpO3JldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gcmcoYSxiLGMsZCxlLGYpe2lmKG51bGw9PT1hKXt2YXIgZz1jLnR5cGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcmJiFZZShnKSYmdm9pZCAwPT09Zy5kZWZhdWx0UHJvcHMmJm51bGw9PT1jLmNvbXBhcmUmJnZvaWQgMD09PWMuZGVmYXVsdFByb3BzKXJldHVybiBiLnRhZz0xNSxiLnR5cGU9ZyxzZyhhLGIsZyxkLGUsZik7YT1hZihjLnR5cGUsbnVsbCxkLG51bGwsYi5tb2RlLGYpO2EucmVmPWIucmVmO2EucmV0dXJuPWI7cmV0dXJuIGIuY2hpbGQ9YX1nPWEuY2hpbGQ7aWYoZTxmJiYoZT1nLm1lbW9pemVkUHJvcHMsYz1jLmNvbXBhcmUsYz1udWxsIT09Yz9jOmpkLGMoZSxkKSYmYS5yZWY9PT1iLnJlZikpcmV0dXJuIHRnKGEsYixmKTtiLmVmZmVjdFRhZ3w9MTthPSRlKGcsZCxmKTthLnJlZj1iLnJlZjthLnJldHVybj1iO3JldHVybiBiLmNoaWxkPWF9XG5mdW5jdGlvbiBzZyhhLGIsYyxkLGUsZil7cmV0dXJuIG51bGwhPT1hJiZlPGYmJmpkKGEubWVtb2l6ZWRQcm9wcyxkKSYmYS5yZWY9PT1iLnJlZj90ZyhhLGIsZik6dWcoYSxiLGMsZCxmKX1mdW5jdGlvbiB2ZyhhLGIpe3ZhciBjPWIucmVmO2lmKG51bGw9PT1hJiZudWxsIT09Y3x8bnVsbCE9PWEmJmEucmVmIT09YyliLmVmZmVjdFRhZ3w9MTI4fWZ1bmN0aW9uIHVnKGEsYixjLGQsZSl7dmFyIGY9TShjKT9MZTpLLmN1cnJlbnQ7Zj1NZShiLGYpO0RmKGIsZSk7Yz1jKGQsZik7Yi5lZmZlY3RUYWd8PTE7UShhLGIsYyxlKTtyZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIHdnKGEsYixjLGQsZSl7aWYoTShjKSl7dmFyIGY9ITA7UmUoYil9ZWxzZSBmPSExO0RmKGIsZSk7aWYobnVsbD09PWIuc3RhdGVOb2RlKW51bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKSxYZihiLGMsZCxlKSwkZihiLGMsZCxlKSxkPSEwO2Vsc2UgaWYobnVsbD09PWEpe3ZhciBnPWIuc3RhdGVOb2RlLGg9Yi5tZW1vaXplZFByb3BzO2cucHJvcHM9aDt2YXIgaz1nLmNvbnRleHQsbD1jLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgbCYmbnVsbCE9PWw/bD1PZi5jdXJyZW50RGlzcGF0Y2hlci5yZWFkQ29udGV4dChsKToobD1NKGMpP0xlOksuY3VycmVudCxsPU1lKGIsbCkpO3ZhciBtPWMuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzLHI9XCJmdW5jdGlvblwiPT09dHlwZW9mIG18fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlO3J8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcblwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHN8fChoIT09ZHx8ayE9PWwpJiZaZihiLGcsZCxsKTtrZj0hMTt2YXIgdz1iLm1lbW9pemVkU3RhdGU7az1nLnN0YXRlPXc7dmFyIHk9Yi51cGRhdGVRdWV1ZTtudWxsIT09eSYmKHRmKGIseSxkLGcsZSksaz1iLm1lbW9pemVkU3RhdGUpO2ghPT1kfHx3IT09a3x8TC5jdXJyZW50fHxrZj8oXCJmdW5jdGlvblwiPT09dHlwZW9mIG0mJihRZihiLGMsbSxkKSxrPWIubWVtb2l6ZWRTdGF0ZSksKGg9a2Z8fFdmKGIsYyxoLGQsdyxrLGwpKT8ocnx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbE1vdW50fHwoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50V2lsbE1vdW50JiZnLmNvbXBvbmVudFdpbGxNb3VudCgpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJlxuZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCkpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5lZmZlY3RUYWd8PTQpKTooXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmVmZmVjdFRhZ3w9NCksYi5tZW1vaXplZFByb3BzPWQsYi5tZW1vaXplZFN0YXRlPWspLGcucHJvcHM9ZCxnLnN0YXRlPWssZy5jb250ZXh0PWwsZD1oKTooXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmVmZmVjdFRhZ3w9NCksZD0hMSl9ZWxzZSBnPWIuc3RhdGVOb2RlLGg9Yi5tZW1vaXplZFByb3BzLGcucHJvcHM9Yi50eXBlPT09Yi5lbGVtZW50VHlwZT9oOlAoYi50eXBlLGgpLGs9Zy5jb250ZXh0LGw9Yy5jb250ZXh0VHlwZSxcIm9iamVjdFwiPT09dHlwZW9mIGwmJm51bGwhPT1sP2w9T2YuY3VycmVudERpc3BhdGNoZXIucmVhZENvbnRleHQobCk6KGw9TShjKT9MZTpLLmN1cnJlbnQsbD1NZShiLGwpKSxtPWMuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzLFxuKHI9XCJmdW5jdGlvblwiPT09dHlwZW9mIG18fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlKXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHN8fChoIT09ZHx8ayE9PWwpJiZaZihiLGcsZCxsKSxrZj0hMSxrPWIubWVtb2l6ZWRTdGF0ZSx3PWcuc3RhdGU9ayx5PWIudXBkYXRlUXVldWUsbnVsbCE9PXkmJih0ZihiLHksZCxnLGUpLHc9Yi5tZW1vaXplZFN0YXRlKSxoIT09ZHx8ayE9PXd8fEwuY3VycmVudHx8a2Y/KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBtJiYoUWYoYixjLG0sZCksdz1iLm1lbW9pemVkU3RhdGUpLChtPWtmfHxXZihiLGMsaCxkLGssdyxsKSk/KHJ8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsVXBkYXRlfHxcbihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnRXaWxsVXBkYXRlJiZnLmNvbXBvbmVudFdpbGxVcGRhdGUoZCx3LGwpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlJiZnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlKGQsdyxsKSksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlJiYoYi5lZmZlY3RUYWd8PTQpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlJiYoYi5lZmZlY3RUYWd8PTI1NikpOihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJms9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9NCksXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJms9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9MjU2KSxiLm1lbW9pemVkUHJvcHM9XG5kLGIubWVtb2l6ZWRTdGF0ZT13KSxnLnByb3BzPWQsZy5zdGF0ZT13LGcuY29udGV4dD1sLGQ9bSk6KFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmaz09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD00KSxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmaz09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD0yNTYpLGQ9ITEpO3JldHVybiB4ZyhhLGIsYyxkLGYsZSl9XG5mdW5jdGlvbiB4ZyhhLGIsYyxkLGUsZil7dmcoYSxiKTt2YXIgZz0wIT09KGIuZWZmZWN0VGFnJjY0KTtpZighZCYmIWcpcmV0dXJuIGUmJlNlKGIsYywhMSksdGcoYSxiLGYpO2Q9Yi5zdGF0ZU5vZGU7cGcuY3VycmVudD1iO3ZhciBoPWcmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBjLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcj9udWxsOmQucmVuZGVyKCk7Yi5lZmZlY3RUYWd8PTE7bnVsbCE9PWEmJmc/KGIuY2hpbGQ9ZWcoYixhLmNoaWxkLG51bGwsZiksYi5jaGlsZD1lZyhiLG51bGwsaCxmKSk6UShhLGIsaCxmKTtiLm1lbW9pemVkU3RhdGU9ZC5zdGF0ZTtlJiZTZShiLGMsITApO3JldHVybiBiLmNoaWxkfWZ1bmN0aW9uIHlnKGEpe3ZhciBiPWEuc3RhdGVOb2RlO2IucGVuZGluZ0NvbnRleHQ/UGUoYSxiLnBlbmRpbmdDb250ZXh0LGIucGVuZGluZ0NvbnRleHQhPT1iLmNvbnRleHQpOmIuY29udGV4dCYmUGUoYSxiLmNvbnRleHQsITEpO0pmKGEsYi5jb250YWluZXJJbmZvKX1cbmZ1bmN0aW9uIHpnKGEsYixjKXt2YXIgZD1iLm1vZGUsZT1iLnBlbmRpbmdQcm9wcyxmPWIubWVtb2l6ZWRTdGF0ZTtpZigwPT09KGIuZWZmZWN0VGFnJjY0KSl7Zj1udWxsO3ZhciBnPSExfWVsc2UgZj17dGltZWRPdXRBdDpudWxsIT09Zj9mLnRpbWVkT3V0QXQ6MH0sZz0hMCxiLmVmZmVjdFRhZyY9LTY1O2lmKG51bGw9PT1hKWlmKGcpe3ZhciBoPWUuZmFsbGJhY2s7YT1iZihudWxsLGQsMCxudWxsKTswPT09KGIubW9kZSYxKSYmKGEuY2hpbGQ9bnVsbCE9PWIubWVtb2l6ZWRTdGF0ZT9iLmNoaWxkLmNoaWxkOmIuY2hpbGQpO2Q9YmYoaCxkLGMsbnVsbCk7YS5zaWJsaW5nPWQ7Yz1hO2MucmV0dXJuPWQucmV0dXJuPWJ9ZWxzZSBjPWQ9ZmcoYixudWxsLGUuY2hpbGRyZW4sYyk7ZWxzZSBudWxsIT09YS5tZW1vaXplZFN0YXRlPyhkPWEuY2hpbGQsaD1kLnNpYmxpbmcsZz8oYz1lLmZhbGxiYWNrLGU9JGUoZCxkLnBlbmRpbmdQcm9wcywwKSwwPT09KGIubW9kZSYxKSYmKGc9bnVsbCE9PVxuYi5tZW1vaXplZFN0YXRlP2IuY2hpbGQuY2hpbGQ6Yi5jaGlsZCxnIT09ZC5jaGlsZCYmKGUuY2hpbGQ9ZykpLGQ9ZS5zaWJsaW5nPSRlKGgsYyxoLmV4cGlyYXRpb25UaW1lKSxjPWUsZS5jaGlsZEV4cGlyYXRpb25UaW1lPTAsYy5yZXR1cm49ZC5yZXR1cm49Yik6Yz1kPWVnKGIsZC5jaGlsZCxlLmNoaWxkcmVuLGMpKTooaD1hLmNoaWxkLGc/KGc9ZS5mYWxsYmFjayxlPWJmKG51bGwsZCwwLG51bGwpLGUuY2hpbGQ9aCwwPT09KGIubW9kZSYxKSYmKGUuY2hpbGQ9bnVsbCE9PWIubWVtb2l6ZWRTdGF0ZT9iLmNoaWxkLmNoaWxkOmIuY2hpbGQpLGQ9ZS5zaWJsaW5nPWJmKGcsZCxjLG51bGwpLGQuZWZmZWN0VGFnfD0yLGM9ZSxlLmNoaWxkRXhwaXJhdGlvblRpbWU9MCxjLnJldHVybj1kLnJldHVybj1iKTpkPWM9ZWcoYixoLGUuY2hpbGRyZW4sYykpLGIuc3RhdGVOb2RlPWEuc3RhdGVOb2RlO2IubWVtb2l6ZWRTdGF0ZT1mO2IuY2hpbGQ9YztyZXR1cm4gZH1cbmZ1bmN0aW9uIHRnKGEsYixjKXtudWxsIT09YSYmKGIuZmlyc3RDb250ZXh0RGVwZW5kZW5jeT1hLmZpcnN0Q29udGV4dERlcGVuZGVuY3kpO2lmKGIuY2hpbGRFeHBpcmF0aW9uVGltZTxjKXJldHVybiBudWxsO251bGwhPT1hJiZiLmNoaWxkIT09YS5jaGlsZD90KFwiMTUzXCIpOnZvaWQgMDtpZihudWxsIT09Yi5jaGlsZCl7YT1iLmNoaWxkO2M9JGUoYSxhLnBlbmRpbmdQcm9wcyxhLmV4cGlyYXRpb25UaW1lKTtiLmNoaWxkPWM7Zm9yKGMucmV0dXJuPWI7bnVsbCE9PWEuc2libGluZzspYT1hLnNpYmxpbmcsYz1jLnNpYmxpbmc9JGUoYSxhLnBlbmRpbmdQcm9wcyxhLmV4cGlyYXRpb25UaW1lKSxjLnJldHVybj1iO2Muc2libGluZz1udWxsfXJldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gQWcoYSxiLGMpe3ZhciBkPWIuZXhwaXJhdGlvblRpbWU7aWYobnVsbCE9PWEmJmEubWVtb2l6ZWRQcm9wcz09PWIucGVuZGluZ1Byb3BzJiYhTC5jdXJyZW50JiZkPGMpe3N3aXRjaChiLnRhZyl7Y2FzZSAzOnlnKGIpO29nKCk7YnJlYWs7Y2FzZSA1OkxmKGIpO2JyZWFrO2Nhc2UgMTpNKGIudHlwZSkmJlJlKGIpO2JyZWFrO2Nhc2UgNDpKZihiLGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pO2JyZWFrO2Nhc2UgMTA6QmYoYixiLm1lbW9pemVkUHJvcHMudmFsdWUpO2JyZWFrO2Nhc2UgMTM6aWYobnVsbCE9PWIubWVtb2l6ZWRTdGF0ZSl7ZD1iLmNoaWxkLmNoaWxkRXhwaXJhdGlvblRpbWU7aWYoMCE9PWQmJmQ+PWMpcmV0dXJuIHpnKGEsYixjKTtiPXRnKGEsYixjKTtyZXR1cm4gbnVsbCE9PWI/Yi5zaWJsaW5nOm51bGx9fXJldHVybiB0ZyhhLGIsYyl9Yi5leHBpcmF0aW9uVGltZT0wO3N3aXRjaChiLnRhZyl7Y2FzZSAyOmQ9Yi5lbGVtZW50VHlwZTtudWxsIT09XG5hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKTthPWIucGVuZGluZ1Byb3BzO3ZhciBlPU1lKGIsSy5jdXJyZW50KTtEZihiLGMpO2U9ZChhLGUpO2IuZWZmZWN0VGFnfD0xO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgZSYmbnVsbCE9PWUmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLnJlbmRlciYmdm9pZCAwPT09ZS4kJHR5cGVvZil7Yi50YWc9MTtpZihNKGQpKXt2YXIgZj0hMDtSZShiKX1lbHNlIGY9ITE7Yi5tZW1vaXplZFN0YXRlPW51bGwhPT1lLnN0YXRlJiZ2b2lkIDAhPT1lLnN0YXRlP2Uuc3RhdGU6bnVsbDt2YXIgZz1kLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcztcImZ1bmN0aW9uXCI9PT10eXBlb2YgZyYmUWYoYixkLGcsYSk7ZS51cGRhdGVyPVZmO2Iuc3RhdGVOb2RlPWU7ZS5fcmVhY3RJbnRlcm5hbEZpYmVyPWI7JGYoYixkLGEsYyk7Yj14ZyhudWxsLGIsZCwhMCxmLGMpfWVsc2UgYi50YWc9MCxRKG51bGwsYixlLGMpLGI9Yi5jaGlsZDtcbnJldHVybiBiO2Nhc2UgMTY6ZT1iLmVsZW1lbnRUeXBlO251bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKTtmPWIucGVuZGluZ1Byb3BzO2E9TmYoZSk7Yi50eXBlPWE7ZT1iLnRhZz1aZShhKTtmPVAoYSxmKTtnPXZvaWQgMDtzd2l0Y2goZSl7Y2FzZSAwOmc9dWcobnVsbCxiLGEsZixjKTticmVhaztjYXNlIDE6Zz13ZyhudWxsLGIsYSxmLGMpO2JyZWFrO2Nhc2UgMTE6Zz1xZyhudWxsLGIsYSxmLGMpO2JyZWFrO2Nhc2UgMTQ6Zz1yZyhudWxsLGIsYSxQKGEudHlwZSxmKSxkLGMpO2JyZWFrO2RlZmF1bHQ6dChcIjMwNlwiLGEsXCJcIil9cmV0dXJuIGc7Y2FzZSAwOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTpQKGQsZSksdWcoYSxiLGQsZSxjKTtjYXNlIDE6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOlAoZCxlKSx3ZyhhLGIsXG5kLGUsYyk7Y2FzZSAzOnlnKGIpO2Q9Yi51cGRhdGVRdWV1ZTtudWxsPT09ZD90KFwiMjgyXCIpOnZvaWQgMDtlPWIubWVtb2l6ZWRTdGF0ZTtlPW51bGwhPT1lP2UuZWxlbWVudDpudWxsO3RmKGIsZCxiLnBlbmRpbmdQcm9wcyxudWxsLGMpO2Q9Yi5tZW1vaXplZFN0YXRlLmVsZW1lbnQ7aWYoZD09PWUpb2coKSxiPXRnKGEsYixjKTtlbHNle2U9Yi5zdGF0ZU5vZGU7aWYoZT0obnVsbD09PWF8fG51bGw9PT1hLmNoaWxkKSYmZS5oeWRyYXRlKWhnPUhlKGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pLGdnPWIsZT1pZz0hMDtlPyhiLmVmZmVjdFRhZ3w9MixiLmNoaWxkPWZnKGIsbnVsbCxkLGMpKTooUShhLGIsZCxjKSxvZygpKTtiPWIuY2hpbGR9cmV0dXJuIGI7Y2FzZSA1OnJldHVybiBMZihiKSxudWxsPT09YSYmbGcoYiksZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxmPW51bGwhPT1hP2EubWVtb2l6ZWRQcm9wczpudWxsLGc9ZS5jaGlsZHJlbixDZShkLGUpP2c9bnVsbDpudWxsIT09XG5mJiZDZShkLGYpJiYoYi5lZmZlY3RUYWd8PTE2KSx2ZyhhLGIpLDEhPT1jJiZiLm1vZGUmMSYmZS5oaWRkZW4/KGIuZXhwaXJhdGlvblRpbWU9MSxiPW51bGwpOihRKGEsYixnLGMpLGI9Yi5jaGlsZCksYjtjYXNlIDY6cmV0dXJuIG51bGw9PT1hJiZsZyhiKSxudWxsO2Nhc2UgMTM6cmV0dXJuIHpnKGEsYixjKTtjYXNlIDQ6cmV0dXJuIEpmKGIsYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyksZD1iLnBlbmRpbmdQcm9wcyxudWxsPT09YT9iLmNoaWxkPWVnKGIsbnVsbCxkLGMpOlEoYSxiLGQsYyksYi5jaGlsZDtjYXNlIDExOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTpQKGQsZSkscWcoYSxiLGQsZSxjKTtjYXNlIDc6cmV0dXJuIFEoYSxiLGIucGVuZGluZ1Byb3BzLGMpLGIuY2hpbGQ7Y2FzZSA4OnJldHVybiBRKGEsYixiLnBlbmRpbmdQcm9wcy5jaGlsZHJlbixjKSxiLmNoaWxkO2Nhc2UgMTI6cmV0dXJuIFEoYSxiLGIucGVuZGluZ1Byb3BzLmNoaWxkcmVuLFxuYyksYi5jaGlsZDtjYXNlIDEwOmE6e2Q9Yi50eXBlLl9jb250ZXh0O2U9Yi5wZW5kaW5nUHJvcHM7Zz1iLm1lbW9pemVkUHJvcHM7Zj1lLnZhbHVlO0JmKGIsZik7aWYobnVsbCE9PWcpe3ZhciBoPWcudmFsdWU7Zj1oPT09ZiYmKDAhPT1ofHwxL2g9PT0xL2YpfHxoIT09aCYmZiE9PWY/MDooXCJmdW5jdGlvblwiPT09dHlwZW9mIGQuX2NhbGN1bGF0ZUNoYW5nZWRCaXRzP2QuX2NhbGN1bGF0ZUNoYW5nZWRCaXRzKGgsZik6MTA3Mzc0MTgyMyl8MDtpZigwPT09Zil7aWYoZy5jaGlsZHJlbj09PWUuY2hpbGRyZW4mJiFMLmN1cnJlbnQpe2I9dGcoYSxiLGMpO2JyZWFrIGF9fWVsc2UgZm9yKGc9Yi5jaGlsZCxudWxsIT09ZyYmKGcucmV0dXJuPWIpO251bGwhPT1nOyl7aD1nLmZpcnN0Q29udGV4dERlcGVuZGVuY3k7aWYobnVsbCE9PWgpe2Rve2lmKGguY29udGV4dD09PWQmJjAhPT0oaC5vYnNlcnZlZEJpdHMmZikpe2lmKDE9PT1nLnRhZyl7dmFyIGs9bmYoYyk7ay50YWc9MjtwZihnLGspfWcuZXhwaXJhdGlvblRpbWU8XG5jJiYoZy5leHBpcmF0aW9uVGltZT1jKTtrPWcuYWx0ZXJuYXRlO251bGwhPT1rJiZrLmV4cGlyYXRpb25UaW1lPGMmJihrLmV4cGlyYXRpb25UaW1lPWMpO2Zvcih2YXIgbD1nLnJldHVybjtudWxsIT09bDspe2s9bC5hbHRlcm5hdGU7aWYobC5jaGlsZEV4cGlyYXRpb25UaW1lPGMpbC5jaGlsZEV4cGlyYXRpb25UaW1lPWMsbnVsbCE9PWsmJmsuY2hpbGRFeHBpcmF0aW9uVGltZTxjJiYoay5jaGlsZEV4cGlyYXRpb25UaW1lPWMpO2Vsc2UgaWYobnVsbCE9PWsmJmsuY2hpbGRFeHBpcmF0aW9uVGltZTxjKWsuY2hpbGRFeHBpcmF0aW9uVGltZT1jO2Vsc2UgYnJlYWs7bD1sLnJldHVybn19az1nLmNoaWxkO2g9aC5uZXh0fXdoaWxlKG51bGwhPT1oKX1lbHNlIGs9MTA9PT1nLnRhZz9nLnR5cGU9PT1iLnR5cGU/bnVsbDpnLmNoaWxkOmcuY2hpbGQ7aWYobnVsbCE9PWspay5yZXR1cm49ZztlbHNlIGZvcihrPWc7bnVsbCE9PWs7KXtpZihrPT09Yil7az1udWxsO2JyZWFrfWc9ay5zaWJsaW5nO1xuaWYobnVsbCE9PWcpe2cucmV0dXJuPWsucmV0dXJuO2s9ZzticmVha31rPWsucmV0dXJufWc9a319UShhLGIsZS5jaGlsZHJlbixjKTtiPWIuY2hpbGR9cmV0dXJuIGI7Y2FzZSA5OnJldHVybiBlPWIudHlwZSxmPWIucGVuZGluZ1Byb3BzLGQ9Zi5jaGlsZHJlbixEZihiLGMpLGU9RWYoZSxmLnVuc3RhYmxlX29ic2VydmVkQml0cyksZD1kKGUpLGIuZWZmZWN0VGFnfD0xLFEoYSxiLGQsYyksYi5jaGlsZDtjYXNlIDE0OnJldHVybiBlPWIudHlwZSxmPVAoZSxiLnBlbmRpbmdQcm9wcyksZj1QKGUudHlwZSxmKSxyZyhhLGIsZSxmLGQsYyk7Y2FzZSAxNTpyZXR1cm4gc2coYSxiLGIudHlwZSxiLnBlbmRpbmdQcm9wcyxkLGMpO2Nhc2UgMTc6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOlAoZCxlKSxudWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmVmZmVjdFRhZ3w9MiksYi50YWc9MSxNKGQpPyhhPVxuITAsUmUoYikpOmE9ITEsRGYoYixjKSxYZihiLGQsZSxjKSwkZihiLGQsZSxjKSx4ZyhudWxsLGIsZCwhMCxhLGMpO2RlZmF1bHQ6dChcIjE1NlwiKX19ZnVuY3Rpb24gQmcoYSl7YS5lZmZlY3RUYWd8PTR9dmFyIENnPXZvaWQgMCxHZz12b2lkIDAsSGc9dm9pZCAwLElnPXZvaWQgMDtDZz1mdW5jdGlvbihhLGIpe2Zvcih2YXIgYz1iLmNoaWxkO251bGwhPT1jOyl7aWYoNT09PWMudGFnfHw2PT09Yy50YWcpYS5hcHBlbmRDaGlsZChjLnN0YXRlTm9kZSk7ZWxzZSBpZig0IT09Yy50YWcmJm51bGwhPT1jLmNoaWxkKXtjLmNoaWxkLnJldHVybj1jO2M9Yy5jaGlsZDtjb250aW51ZX1pZihjPT09YilicmVhaztmb3IoO251bGw9PT1jLnNpYmxpbmc7KXtpZihudWxsPT09Yy5yZXR1cm58fGMucmV0dXJuPT09YilyZXR1cm47Yz1jLnJldHVybn1jLnNpYmxpbmcucmV0dXJuPWMucmV0dXJuO2M9Yy5zaWJsaW5nfX07R2c9ZnVuY3Rpb24oKXt9O1xuSGc9ZnVuY3Rpb24oYSxiLGMsZCxlKXt2YXIgZj1hLm1lbW9pemVkUHJvcHM7aWYoZiE9PWQpe3ZhciBnPWIuc3RhdGVOb2RlO0lmKE8uY3VycmVudCk7YT1udWxsO3N3aXRjaChjKXtjYXNlIFwiaW5wdXRcIjpmPXpjKGcsZik7ZD16YyhnLGQpO2E9W107YnJlYWs7Y2FzZSBcIm9wdGlvblwiOmY9ZWUoZyxmKTtkPWVlKGcsZCk7YT1bXTticmVhaztjYXNlIFwic2VsZWN0XCI6Zj1uKHt9LGYse3ZhbHVlOnZvaWQgMH0pO2Q9bih7fSxkLHt2YWx1ZTp2b2lkIDB9KTthPVtdO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmY9Z2UoZyxmKTtkPWdlKGcsZCk7YT1bXTticmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBmLm9uQ2xpY2smJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLm9uQ2xpY2smJihnLm9uY2xpY2s9eWUpfXZlKGMsZCk7Zz1jPXZvaWQgMDt2YXIgaD1udWxsO2ZvcihjIGluIGYpaWYoIWQuaGFzT3duUHJvcGVydHkoYykmJmYuaGFzT3duUHJvcGVydHkoYykmJm51bGwhPWZbY10paWYoXCJzdHlsZVwiPT09XG5jKXt2YXIgaz1mW2NdO2ZvcihnIGluIGspay5oYXNPd25Qcm9wZXJ0eShnKSYmKGh8fChoPXt9KSxoW2ddPVwiXCIpfWVsc2VcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCIhPT1jJiZcImNoaWxkcmVuXCIhPT1jJiZcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09YyYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWMmJlwiYXV0b0ZvY3VzXCIhPT1jJiYoc2EuaGFzT3duUHJvcGVydHkoYyk/YXx8KGE9W10pOihhPWF8fFtdKS5wdXNoKGMsbnVsbCkpO2ZvcihjIGluIGQpe3ZhciBsPWRbY107az1udWxsIT1mP2ZbY106dm9pZCAwO2lmKGQuaGFzT3duUHJvcGVydHkoYykmJmwhPT1rJiYobnVsbCE9bHx8bnVsbCE9aykpaWYoXCJzdHlsZVwiPT09YylpZihrKXtmb3IoZyBpbiBrKSFrLmhhc093blByb3BlcnR5KGcpfHxsJiZsLmhhc093blByb3BlcnR5KGcpfHwoaHx8KGg9e30pLGhbZ109XCJcIik7Zm9yKGcgaW4gbClsLmhhc093blByb3BlcnR5KGcpJiZrW2ddIT09bFtnXSYmKGh8fFxuKGg9e30pLGhbZ109bFtnXSl9ZWxzZSBofHwoYXx8KGE9W10pLGEucHVzaChjLGgpKSxoPWw7ZWxzZVwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWM/KGw9bD9sLl9faHRtbDp2b2lkIDAsaz1rP2suX19odG1sOnZvaWQgMCxudWxsIT1sJiZrIT09bCYmKGE9YXx8W10pLnB1c2goYyxcIlwiK2wpKTpcImNoaWxkcmVuXCI9PT1jP2s9PT1sfHxcInN0cmluZ1wiIT09dHlwZW9mIGwmJlwibnVtYmVyXCIhPT10eXBlb2YgbHx8KGE9YXx8W10pLnB1c2goYyxcIlwiK2wpOlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1jJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09YyYmKHNhLmhhc093blByb3BlcnR5KGMpPyhudWxsIT1sJiZ4ZShlLGMpLGF8fGs9PT1sfHwoYT1bXSkpOihhPWF8fFtdKS5wdXNoKGMsbCkpfWgmJihhPWF8fFtdKS5wdXNoKFwic3R5bGVcIixoKTtlPWE7KGIudXBkYXRlUXVldWU9ZSkmJkJnKGIpfX07SWc9ZnVuY3Rpb24oYSxiLGMsZCl7YyE9PWQmJkJnKGIpfTtcbnZhciBKZz1cImZ1bmN0aW9uXCI9PT10eXBlb2YgV2Vha1NldD9XZWFrU2V0OlNldDtmdW5jdGlvbiBLZyhhLGIpe3ZhciBjPWIuc291cmNlLGQ9Yi5zdGFjaztudWxsPT09ZCYmbnVsbCE9PWMmJihkPW5jKGMpKTtudWxsIT09YyYmbWMoYy50eXBlKTtiPWIudmFsdWU7bnVsbCE9PWEmJjE9PT1hLnRhZyYmbWMoYS50eXBlKTt0cnl7Y29uc29sZS5lcnJvcihiKX1jYXRjaChlKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dGhyb3cgZTt9KX19ZnVuY3Rpb24gTGcoYSl7dmFyIGI9YS5yZWY7aWYobnVsbCE9PWIpaWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGIpdHJ5e2IobnVsbCl9Y2F0Y2goYyl7TWcoYSxjKX1lbHNlIGIuY3VycmVudD1udWxsfVxuZnVuY3Rpb24gTmcoYSxiKXtmb3IodmFyIGM9YTs7KXtpZig1PT09Yy50YWcpe3ZhciBkPWMuc3RhdGVOb2RlO2lmKGIpZC5zdHlsZS5kaXNwbGF5PVwibm9uZVwiO2Vsc2V7ZD1jLnN0YXRlTm9kZTt2YXIgZT1jLm1lbW9pemVkUHJvcHMuc3R5bGU7ZT12b2lkIDAhPT1lJiZudWxsIT09ZSYmZS5oYXNPd25Qcm9wZXJ0eShcImRpc3BsYXlcIik/ZS5kaXNwbGF5Om51bGw7ZC5zdHlsZS5kaXNwbGF5PXNlKFwiZGlzcGxheVwiLGUpfX1lbHNlIGlmKDY9PT1jLnRhZyljLnN0YXRlTm9kZS5ub2RlVmFsdWU9Yj9cIlwiOmMubWVtb2l6ZWRQcm9wcztlbHNlIGlmKDEzPT09Yy50YWcmJm51bGwhPT1jLm1lbW9pemVkU3RhdGUpe2Q9Yy5jaGlsZC5zaWJsaW5nO2QucmV0dXJuPWM7Yz1kO2NvbnRpbnVlfWVsc2UgaWYobnVsbCE9PWMuY2hpbGQpe2MuY2hpbGQucmV0dXJuPWM7Yz1jLmNoaWxkO2NvbnRpbnVlfWlmKGM9PT1hKWJyZWFrO2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jLnJldHVybnx8XG5jLnJldHVybj09PWEpcmV0dXJuO2M9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtjPWMuc2libGluZ319XG5mdW5jdGlvbiBPZyhhKXtcImZ1bmN0aW9uXCI9PT10eXBlb2YgVWUmJlVlKGEpO3N3aXRjaChhLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNDpjYXNlIDE1OnZhciBiPWEudXBkYXRlUXVldWU7aWYobnVsbCE9PWImJihiPWIubGFzdEVmZmVjdCxudWxsIT09Yikpe3ZhciBjPWI9Yi5uZXh0O2Rve3ZhciBkPWMuZGVzdHJveTtpZihudWxsIT09ZCl7dmFyIGU9YTt0cnl7ZCgpfWNhdGNoKGYpe01nKGUsZil9fWM9Yy5uZXh0fXdoaWxlKGMhPT1iKX1icmVhaztjYXNlIDE6TGcoYSk7Yj1hLnN0YXRlTm9kZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5jb21wb25lbnRXaWxsVW5tb3VudCl0cnl7Yi5wcm9wcz1hLm1lbW9pemVkUHJvcHMsYi5zdGF0ZT1hLm1lbW9pemVkU3RhdGUsYi5jb21wb25lbnRXaWxsVW5tb3VudCgpfWNhdGNoKGYpe01nKGEsZil9YnJlYWs7Y2FzZSA1OkxnKGEpO2JyZWFrO2Nhc2UgNDpQZyhhKX19XG5mdW5jdGlvbiBRZyhhKXtyZXR1cm4gNT09PWEudGFnfHwzPT09YS50YWd8fDQ9PT1hLnRhZ31cbmZ1bmN0aW9uIFJnKGEpe2E6e2Zvcih2YXIgYj1hLnJldHVybjtudWxsIT09Yjspe2lmKFFnKGIpKXt2YXIgYz1iO2JyZWFrIGF9Yj1iLnJldHVybn10KFwiMTYwXCIpO2M9dm9pZCAwfXZhciBkPWI9dm9pZCAwO3N3aXRjaChjLnRhZyl7Y2FzZSA1OmI9Yy5zdGF0ZU5vZGU7ZD0hMTticmVhaztjYXNlIDM6Yj1jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2Q9ITA7YnJlYWs7Y2FzZSA0OmI9Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztkPSEwO2JyZWFrO2RlZmF1bHQ6dChcIjE2MVwiKX1jLmVmZmVjdFRhZyYxNiYmKHBlKGIsXCJcIiksYy5lZmZlY3RUYWcmPS0xNyk7YTpiOmZvcihjPWE7Oyl7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxRZyhjLnJldHVybikpe2M9bnVsbDticmVhayBhfWM9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtmb3IoYz1jLnNpYmxpbmc7NSE9PWMudGFnJiY2IT09Yy50YWc7KXtpZihjLmVmZmVjdFRhZyYyKWNvbnRpbnVlIGI7XG5pZihudWxsPT09Yy5jaGlsZHx8ND09PWMudGFnKWNvbnRpbnVlIGI7ZWxzZSBjLmNoaWxkLnJldHVybj1jLGM9Yy5jaGlsZH1pZighKGMuZWZmZWN0VGFnJjIpKXtjPWMuc3RhdGVOb2RlO2JyZWFrIGF9fWZvcih2YXIgZT1hOzspe2lmKDU9PT1lLnRhZ3x8Nj09PWUudGFnKWlmKGMpaWYoZCl7dmFyIGY9YixnPWUuc3RhdGVOb2RlLGg9Yzs4PT09Zi5ub2RlVHlwZT9mLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGcsaCk6Zi5pbnNlcnRCZWZvcmUoZyxoKX1lbHNlIGIuaW5zZXJ0QmVmb3JlKGUuc3RhdGVOb2RlLGMpO2Vsc2UgZD8oZz1iLGg9ZS5zdGF0ZU5vZGUsOD09PWcubm9kZVR5cGU/KGY9Zy5wYXJlbnROb2RlLGYuaW5zZXJ0QmVmb3JlKGgsZykpOihmPWcsZi5hcHBlbmRDaGlsZChoKSksZz1nLl9yZWFjdFJvb3RDb250YWluZXIsbnVsbCE9PWcmJnZvaWQgMCE9PWd8fG51bGwhPT1mLm9uY2xpY2t8fChmLm9uY2xpY2s9eWUpKTpiLmFwcGVuZENoaWxkKGUuc3RhdGVOb2RlKTtcbmVsc2UgaWYoNCE9PWUudGFnJiZudWxsIT09ZS5jaGlsZCl7ZS5jaGlsZC5yZXR1cm49ZTtlPWUuY2hpbGQ7Y29udGludWV9aWYoZT09PWEpYnJlYWs7Zm9yKDtudWxsPT09ZS5zaWJsaW5nOyl7aWYobnVsbD09PWUucmV0dXJufHxlLnJldHVybj09PWEpcmV0dXJuO2U9ZS5yZXR1cm59ZS5zaWJsaW5nLnJldHVybj1lLnJldHVybjtlPWUuc2libGluZ319XG5mdW5jdGlvbiBQZyhhKXtmb3IodmFyIGI9YSxjPSExLGQ9dm9pZCAwLGU9dm9pZCAwOzspe2lmKCFjKXtjPWIucmV0dXJuO2E6Zm9yKDs7KXtudWxsPT09Yz90KFwiMTYwXCIpOnZvaWQgMDtzd2l0Y2goYy50YWcpe2Nhc2UgNTpkPWMuc3RhdGVOb2RlO2U9ITE7YnJlYWsgYTtjYXNlIDM6ZD1jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2U9ITA7YnJlYWsgYTtjYXNlIDQ6ZD1jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2U9ITA7YnJlYWsgYX1jPWMucmV0dXJufWM9ITB9aWYoNT09PWIudGFnfHw2PT09Yi50YWcpe2E6Zm9yKHZhciBmPWIsZz1mOzspaWYoT2coZyksbnVsbCE9PWcuY2hpbGQmJjQhPT1nLnRhZylnLmNoaWxkLnJldHVybj1nLGc9Zy5jaGlsZDtlbHNle2lmKGc9PT1mKWJyZWFrO2Zvcig7bnVsbD09PWcuc2libGluZzspe2lmKG51bGw9PT1nLnJldHVybnx8Zy5yZXR1cm49PT1mKWJyZWFrIGE7Zz1nLnJldHVybn1nLnNpYmxpbmcucmV0dXJuPWcucmV0dXJuO2c9Zy5zaWJsaW5nfWU/XG4oZj1kLGc9Yi5zdGF0ZU5vZGUsOD09PWYubm9kZVR5cGU/Zi5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGcpOmYucmVtb3ZlQ2hpbGQoZykpOmQucmVtb3ZlQ2hpbGQoYi5zdGF0ZU5vZGUpfWVsc2UgaWYoND09PWIudGFnPyhkPWIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8sZT0hMCk6T2coYiksbnVsbCE9PWIuY2hpbGQpe2IuY2hpbGQucmV0dXJuPWI7Yj1iLmNoaWxkO2NvbnRpbnVlfWlmKGI9PT1hKWJyZWFrO2Zvcig7bnVsbD09PWIuc2libGluZzspe2lmKG51bGw9PT1iLnJldHVybnx8Yi5yZXR1cm49PT1hKXJldHVybjtiPWIucmV0dXJuOzQ9PT1iLnRhZyYmKGM9ITEpfWIuc2libGluZy5yZXR1cm49Yi5yZXR1cm47Yj1iLnNpYmxpbmd9fVxuZnVuY3Rpb24gU2coYSxiKXtzd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTQ6Y2FzZSAxNTpicmVhaztjYXNlIDE6YnJlYWs7Y2FzZSA1OnZhciBjPWIuc3RhdGVOb2RlO2lmKG51bGwhPWMpe3ZhciBkPWIubWVtb2l6ZWRQcm9wczthPW51bGwhPT1hP2EubWVtb2l6ZWRQcm9wczpkO3ZhciBlPWIudHlwZSxmPWIudXBkYXRlUXVldWU7Yi51cGRhdGVRdWV1ZT1udWxsO251bGwhPT1mJiZGZShjLGYsZSxhLGQsYil9YnJlYWs7Y2FzZSA2Om51bGw9PT1iLnN0YXRlTm9kZT90KFwiMTYyXCIpOnZvaWQgMDtiLnN0YXRlTm9kZS5ub2RlVmFsdWU9Yi5tZW1vaXplZFByb3BzO2JyZWFrO2Nhc2UgMzpicmVhaztjYXNlIDEyOmJyZWFrO2Nhc2UgMTM6Yz1iLm1lbW9pemVkU3RhdGU7ZD12b2lkIDA7YT1iO251bGw9PT1jP2Q9ITE6KGQ9ITAsYT1iLmNoaWxkLDA9PT1jLnRpbWVkT3V0QXQmJihjLnRpbWVkT3V0QXQ9UmYoKSkpO251bGwhPT1hJiZOZyhhLGQpO2M9Yi51cGRhdGVRdWV1ZTtcbmlmKG51bGwhPT1jKXtiLnVwZGF0ZVF1ZXVlPW51bGw7dmFyIGc9Yi5zdGF0ZU5vZGU7bnVsbD09PWcmJihnPWIuc3RhdGVOb2RlPW5ldyBKZyk7Yy5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBjPVRnLmJpbmQobnVsbCxiLGEpO2cuaGFzKGEpfHwoZy5hZGQoYSksYS50aGVuKGMsYykpfSl9YnJlYWs7Y2FzZSAxNzpicmVhaztkZWZhdWx0OnQoXCIxNjNcIil9fXZhciBVZz1cImZ1bmN0aW9uXCI9PT10eXBlb2YgV2Vha01hcD9XZWFrTWFwOk1hcDtmdW5jdGlvbiBWZyhhLGIsYyl7Yz1uZihjKTtjLnRhZz0zO2MucGF5bG9hZD17ZWxlbWVudDpudWxsfTt2YXIgZD1iLnZhbHVlO2MuY2FsbGJhY2s9ZnVuY3Rpb24oKXtXZyhkKTtLZyhhLGIpfTtyZXR1cm4gY31cbmZ1bmN0aW9uIFhnKGEsYixjKXtjPW5mKGMpO2MudGFnPTM7dmFyIGQ9YS50eXBlLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcjtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZCl7dmFyIGU9Yi52YWx1ZTtjLnBheWxvYWQ9ZnVuY3Rpb24oKXtyZXR1cm4gZChlKX19dmFyIGY9YS5zdGF0ZU5vZGU7bnVsbCE9PWYmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBmLmNvbXBvbmVudERpZENhdGNoJiYoYy5jYWxsYmFjaz1mdW5jdGlvbigpe1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBkJiYobnVsbD09PVlnP1lnPW5ldyBTZXQoW3RoaXNdKTpZZy5hZGQodGhpcykpO3ZhciBjPWIudmFsdWUsZT1iLnN0YWNrO0tnKGEsYik7dGhpcy5jb21wb25lbnREaWRDYXRjaChjLHtjb21wb25lbnRTdGFjazpudWxsIT09ZT9lOlwiXCJ9KX0pO3JldHVybiBjfVxuZnVuY3Rpb24gWmcoYSl7c3dpdGNoKGEudGFnKXtjYXNlIDE6TShhLnR5cGUpJiZOZShhKTt2YXIgYj1hLmVmZmVjdFRhZztyZXR1cm4gYiYyMDQ4PyhhLmVmZmVjdFRhZz1iJi0yMDQ5fDY0LGEpOm51bGw7Y2FzZSAzOnJldHVybiBLZihhKSxPZShhKSxiPWEuZWZmZWN0VGFnLDAhPT0oYiY2NCk/dChcIjI4NVwiKTp2b2lkIDAsYS5lZmZlY3RUYWc9YiYtMjA0OXw2NCxhO2Nhc2UgNTpyZXR1cm4gTWYoYSksbnVsbDtjYXNlIDEzOnJldHVybiBiPWEuZWZmZWN0VGFnLGImMjA0OD8oYS5lZmZlY3RUYWc9YiYtMjA0OXw2NCxhKTpudWxsO2Nhc2UgNDpyZXR1cm4gS2YoYSksbnVsbDtjYXNlIDEwOnJldHVybiBDZihhKSxudWxsO2RlZmF1bHQ6cmV0dXJuIG51bGx9fVxudmFyICRnPXtyZWFkQ29udGV4dDpFZn0sYWg9WGIuUmVhY3RDdXJyZW50T3duZXIsYmg9MTA3Mzc0MTgyMixjaD0wLGRoPSExLFM9bnVsbCxUPW51bGwsVT0wLGVoPS0xLGZoPSExLFY9bnVsbCxnaD0hMSxoaD1udWxsLGloPW51bGwsWWc9bnVsbDtmdW5jdGlvbiBqaCgpe2lmKG51bGwhPT1TKWZvcih2YXIgYT1TLnJldHVybjtudWxsIT09YTspe3ZhciBiPWE7c3dpdGNoKGIudGFnKXtjYXNlIDE6dmFyIGM9Yi50eXBlLmNoaWxkQ29udGV4dFR5cGVzO251bGwhPT1jJiZ2b2lkIDAhPT1jJiZOZShiKTticmVhaztjYXNlIDM6S2YoYik7T2UoYik7YnJlYWs7Y2FzZSA1Ok1mKGIpO2JyZWFrO2Nhc2UgNDpLZihiKTticmVhaztjYXNlIDEwOkNmKGIpfWE9YS5yZXR1cm59VD1udWxsO1U9MDtlaD0tMTtmaD0hMTtTPW51bGx9ZnVuY3Rpb24gVGYoKXtudWxsIT09aWgmJihiYS51bnN0YWJsZV9jYW5jZWxDYWxsYmFjayhoaCksaWgoKSl9XG5mdW5jdGlvbiBraChhKXtmb3IoOzspe3ZhciBiPWEuYWx0ZXJuYXRlLGM9YS5yZXR1cm4sZD1hLnNpYmxpbmc7aWYoMD09PShhLmVmZmVjdFRhZyYxMDI0KSl7Uz1hO2E6e3ZhciBlPWI7Yj1hO3ZhciBmPVU7dmFyIGc9Yi5wZW5kaW5nUHJvcHM7c3dpdGNoKGIudGFnKXtjYXNlIDI6YnJlYWs7Y2FzZSAxNjpicmVhaztjYXNlIDE1OmNhc2UgMDpicmVhaztjYXNlIDE6TShiLnR5cGUpJiZOZShiKTticmVhaztjYXNlIDM6S2YoYik7T2UoYik7Zz1iLnN0YXRlTm9kZTtnLnBlbmRpbmdDb250ZXh0JiYoZy5jb250ZXh0PWcucGVuZGluZ0NvbnRleHQsZy5wZW5kaW5nQ29udGV4dD1udWxsKTtpZihudWxsPT09ZXx8bnVsbD09PWUuY2hpbGQpbmcoYiksYi5lZmZlY3RUYWcmPS0zO0dnKGIpO2JyZWFrO2Nhc2UgNTpNZihiKTt2YXIgaD1JZihIZi5jdXJyZW50KTtmPWIudHlwZTtpZihudWxsIT09ZSYmbnVsbCE9Yi5zdGF0ZU5vZGUpSGcoZSxiLGYsZyxoKSxlLnJlZiE9PWIucmVmJiYoYi5lZmZlY3RUYWd8PVxuMTI4KTtlbHNlIGlmKGcpe3ZhciBrPUlmKE8uY3VycmVudCk7aWYobmcoYikpe2c9YjtlPWcuc3RhdGVOb2RlO3ZhciBsPWcudHlwZSxtPWcubWVtb2l6ZWRQcm9wcyxyPWg7ZVtHYV09ZztlW0hhXT1tO2Y9dm9pZCAwO2g9bDtzd2l0Y2goaCl7Y2FzZSBcImlmcmFtZVwiOmNhc2UgXCJvYmplY3RcIjpIKFwibG9hZFwiLGUpO2JyZWFrO2Nhc2UgXCJ2aWRlb1wiOmNhc2UgXCJhdWRpb1wiOmZvcihsPTA7bDxiYi5sZW5ndGg7bCsrKUgoYmJbbF0sZSk7YnJlYWs7Y2FzZSBcInNvdXJjZVwiOkgoXCJlcnJvclwiLGUpO2JyZWFrO2Nhc2UgXCJpbWdcIjpjYXNlIFwiaW1hZ2VcIjpjYXNlIFwibGlua1wiOkgoXCJlcnJvclwiLGUpO0goXCJsb2FkXCIsZSk7YnJlYWs7Y2FzZSBcImZvcm1cIjpIKFwicmVzZXRcIixlKTtIKFwic3VibWl0XCIsZSk7YnJlYWs7Y2FzZSBcImRldGFpbHNcIjpIKFwidG9nZ2xlXCIsZSk7YnJlYWs7Y2FzZSBcImlucHV0XCI6QWMoZSxtKTtIKFwiaW52YWxpZFwiLGUpO3hlKHIsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwic2VsZWN0XCI6ZS5fd3JhcHBlclN0YXRlPVxue3dhc011bHRpcGxlOiEhbS5tdWx0aXBsZX07SChcImludmFsaWRcIixlKTt4ZShyLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6aGUoZSxtKSxIKFwiaW52YWxpZFwiLGUpLHhlKHIsXCJvbkNoYW5nZVwiKX12ZShoLG0pO2w9bnVsbDtmb3IoZiBpbiBtKW0uaGFzT3duUHJvcGVydHkoZikmJihrPW1bZl0sXCJjaGlsZHJlblwiPT09Zj9cInN0cmluZ1wiPT09dHlwZW9mIGs/ZS50ZXh0Q29udGVudCE9PWsmJihsPVtcImNoaWxkcmVuXCIsa10pOlwibnVtYmVyXCI9PT10eXBlb2YgayYmZS50ZXh0Q29udGVudCE9PVwiXCIrayYmKGw9W1wiY2hpbGRyZW5cIixcIlwiK2tdKTpzYS5oYXNPd25Qcm9wZXJ0eShmKSYmbnVsbCE9ayYmeGUocixmKSk7c3dpdGNoKGgpe2Nhc2UgXCJpbnB1dFwiOlZiKGUpO0VjKGUsbSwhMCk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6VmIoZSk7amUoZSxtKTticmVhaztjYXNlIFwic2VsZWN0XCI6Y2FzZSBcIm9wdGlvblwiOmJyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiPT09dHlwZW9mIG0ub25DbGljayYmXG4oZS5vbmNsaWNrPXllKX1mPWw7Zy51cGRhdGVRdWV1ZT1mO2c9bnVsbCE9PWY/ITA6ITE7ZyYmQmcoYil9ZWxzZXttPWI7ZT1mO3I9ZztsPTk9PT1oLm5vZGVUeXBlP2g6aC5vd25lckRvY3VtZW50O2s9PT1rZS5odG1sJiYoaz1sZShlKSk7az09PWtlLmh0bWw/XCJzY3JpcHRcIj09PWU/KGU9bC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLGUuaW5uZXJIVE1MPVwiPHNjcmlwdD5cXHgzYy9zY3JpcHQ+XCIsbD1lLnJlbW92ZUNoaWxkKGUuZmlyc3RDaGlsZCkpOlwic3RyaW5nXCI9PT10eXBlb2Ygci5pcz9sPWwuY3JlYXRlRWxlbWVudChlLHtpczpyLmlzfSk6KGw9bC5jcmVhdGVFbGVtZW50KGUpLFwic2VsZWN0XCI9PT1lJiZyLm11bHRpcGxlJiYobC5tdWx0aXBsZT0hMCkpOmw9bC5jcmVhdGVFbGVtZW50TlMoayxlKTtlPWw7ZVtHYV09bTtlW0hhXT1nO0NnKGUsYiwhMSwhMSk7cj1lO2w9ZjttPWc7dmFyIHc9aCx5PXdlKGwsbSk7c3dpdGNoKGwpe2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6SChcImxvYWRcIixcbnIpO2g9bTticmVhaztjYXNlIFwidmlkZW9cIjpjYXNlIFwiYXVkaW9cIjpmb3IoaD0wO2g8YmIubGVuZ3RoO2grKylIKGJiW2hdLHIpO2g9bTticmVhaztjYXNlIFwic291cmNlXCI6SChcImVycm9yXCIscik7aD1tO2JyZWFrO2Nhc2UgXCJpbWdcIjpjYXNlIFwiaW1hZ2VcIjpjYXNlIFwibGlua1wiOkgoXCJlcnJvclwiLHIpO0goXCJsb2FkXCIscik7aD1tO2JyZWFrO2Nhc2UgXCJmb3JtXCI6SChcInJlc2V0XCIscik7SChcInN1Ym1pdFwiLHIpO2g9bTticmVhaztjYXNlIFwiZGV0YWlsc1wiOkgoXCJ0b2dnbGVcIixyKTtoPW07YnJlYWs7Y2FzZSBcImlucHV0XCI6QWMocixtKTtoPXpjKHIsbSk7SChcImludmFsaWRcIixyKTt4ZSh3LFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcIm9wdGlvblwiOmg9ZWUocixtKTticmVhaztjYXNlIFwic2VsZWN0XCI6ci5fd3JhcHBlclN0YXRlPXt3YXNNdWx0aXBsZTohIW0ubXVsdGlwbGV9O2g9bih7fSxtLHt2YWx1ZTp2b2lkIDB9KTtIKFwiaW52YWxpZFwiLHIpO3hlKHcsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpoZShyLFxubSk7aD1nZShyLG0pO0goXCJpbnZhbGlkXCIscik7eGUodyxcIm9uQ2hhbmdlXCIpO2JyZWFrO2RlZmF1bHQ6aD1tfXZlKGwsaCk7az12b2lkIDA7dmFyIEI9bCxSPXIsdj1oO2ZvcihrIGluIHYpaWYodi5oYXNPd25Qcm9wZXJ0eShrKSl7dmFyIHE9dltrXTtcInN0eWxlXCI9PT1rP3RlKFIscSk6XCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09az8ocT1xP3EuX19odG1sOnZvaWQgMCxudWxsIT1xJiZvZShSLHEpKTpcImNoaWxkcmVuXCI9PT1rP1wic3RyaW5nXCI9PT10eXBlb2YgcT8oXCJ0ZXh0YXJlYVwiIT09Qnx8XCJcIiE9PXEpJiZwZShSLHEpOlwibnVtYmVyXCI9PT10eXBlb2YgcSYmcGUoUixcIlwiK3EpOlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1rJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09ayYmXCJhdXRvRm9jdXNcIiE9PWsmJihzYS5oYXNPd25Qcm9wZXJ0eShrKT9udWxsIT1xJiZ4ZSh3LGspOm51bGwhPXEmJnhjKFIsayxxLHkpKX1zd2l0Y2gobCl7Y2FzZSBcImlucHV0XCI6VmIocik7XG5FYyhyLG0sITEpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOlZiKHIpO2plKHIsbSk7YnJlYWs7Y2FzZSBcIm9wdGlvblwiOm51bGwhPW0udmFsdWUmJnIuc2V0QXR0cmlidXRlKFwidmFsdWVcIixcIlwiK3ljKG0udmFsdWUpKTticmVhaztjYXNlIFwic2VsZWN0XCI6aD1yO2gubXVsdGlwbGU9ISFtLm11bHRpcGxlO3I9bS52YWx1ZTtudWxsIT1yP2ZlKGgsISFtLm11bHRpcGxlLHIsITEpOm51bGwhPW0uZGVmYXVsdFZhbHVlJiZmZShoLCEhbS5tdWx0aXBsZSxtLmRlZmF1bHRWYWx1ZSwhMCk7YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2YgaC5vbkNsaWNrJiYoci5vbmNsaWNrPXllKX0oZz1CZShmLGcpKSYmQmcoYik7Yi5zdGF0ZU5vZGU9ZX1udWxsIT09Yi5yZWYmJihiLmVmZmVjdFRhZ3w9MTI4KX1lbHNlIG51bGw9PT1iLnN0YXRlTm9kZT90KFwiMTY2XCIpOnZvaWQgMDticmVhaztjYXNlIDY6ZSYmbnVsbCE9Yi5zdGF0ZU5vZGU/SWcoZSxiLGUubWVtb2l6ZWRQcm9wcyxnKTooXCJzdHJpbmdcIiE9PVxudHlwZW9mIGcmJihudWxsPT09Yi5zdGF0ZU5vZGU/dChcIjE2NlwiKTp2b2lkIDApLGU9SWYoSGYuY3VycmVudCksSWYoTy5jdXJyZW50KSxuZyhiKT8oZz1iLGY9Zy5zdGF0ZU5vZGUsZT1nLm1lbW9pemVkUHJvcHMsZltHYV09ZywoZz1mLm5vZGVWYWx1ZSE9PWUpJiZCZyhiKSk6KGY9YixnPSg5PT09ZS5ub2RlVHlwZT9lOmUub3duZXJEb2N1bWVudCkuY3JlYXRlVGV4dE5vZGUoZyksZ1tHYV09YixmLnN0YXRlTm9kZT1nKSk7YnJlYWs7Y2FzZSAxMTpicmVhaztjYXNlIDEzOmc9Yi5tZW1vaXplZFN0YXRlO2lmKDAhPT0oYi5lZmZlY3RUYWcmNjQpKXtiLmV4cGlyYXRpb25UaW1lPWY7Uz1iO2JyZWFrIGF9Zz1udWxsIT09ZztmPW51bGwhPT1lJiZudWxsIT09ZS5tZW1vaXplZFN0YXRlO251bGwhPT1lJiYhZyYmZiYmKGU9ZS5jaGlsZC5zaWJsaW5nLG51bGwhPT1lJiYoaD1iLmZpcnN0RWZmZWN0LG51bGwhPT1oPyhiLmZpcnN0RWZmZWN0PWUsZS5uZXh0RWZmZWN0PWgpOihiLmZpcnN0RWZmZWN0PVxuYi5sYXN0RWZmZWN0PWUsZS5uZXh0RWZmZWN0PW51bGwpLGUuZWZmZWN0VGFnPTgpKTtpZihnIT09Znx8MD09PShiLmVmZmVjdFRhZyYxKSYmZyliLmVmZmVjdFRhZ3w9NDticmVhaztjYXNlIDc6YnJlYWs7Y2FzZSA4OmJyZWFrO2Nhc2UgMTI6YnJlYWs7Y2FzZSA0OktmKGIpO0dnKGIpO2JyZWFrO2Nhc2UgMTA6Q2YoYik7YnJlYWs7Y2FzZSA5OmJyZWFrO2Nhc2UgMTQ6YnJlYWs7Y2FzZSAxNzpNKGIudHlwZSkmJk5lKGIpO2JyZWFrO2RlZmF1bHQ6dChcIjE1NlwiKX1TPW51bGx9Yj1hO2lmKDE9PT1VfHwxIT09Yi5jaGlsZEV4cGlyYXRpb25UaW1lKXtnPTA7Zm9yKGY9Yi5jaGlsZDtudWxsIT09ZjspZT1mLmV4cGlyYXRpb25UaW1lLGg9Zi5jaGlsZEV4cGlyYXRpb25UaW1lLGU+ZyYmKGc9ZSksaD5nJiYoZz1oKSxmPWYuc2libGluZztiLmNoaWxkRXhwaXJhdGlvblRpbWU9Z31pZihudWxsIT09UylyZXR1cm4gUztudWxsIT09YyYmMD09PShjLmVmZmVjdFRhZyYxMDI0KSYmKG51bGw9PT1cbmMuZmlyc3RFZmZlY3QmJihjLmZpcnN0RWZmZWN0PWEuZmlyc3RFZmZlY3QpLG51bGwhPT1hLmxhc3RFZmZlY3QmJihudWxsIT09Yy5sYXN0RWZmZWN0JiYoYy5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YS5maXJzdEVmZmVjdCksYy5sYXN0RWZmZWN0PWEubGFzdEVmZmVjdCksMTxhLmVmZmVjdFRhZyYmKG51bGwhPT1jLmxhc3RFZmZlY3Q/Yy5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YTpjLmZpcnN0RWZmZWN0PWEsYy5sYXN0RWZmZWN0PWEpKX1lbHNle2E9WmcoYSxVKTtpZihudWxsIT09YSlyZXR1cm4gYS5lZmZlY3RUYWcmPTEwMjMsYTtudWxsIT09YyYmKGMuZmlyc3RFZmZlY3Q9Yy5sYXN0RWZmZWN0PW51bGwsYy5lZmZlY3RUYWd8PTEwMjQpfWlmKG51bGwhPT1kKXJldHVybiBkO2lmKG51bGwhPT1jKWE9YztlbHNlIGJyZWFrfXJldHVybiBudWxsfVxuZnVuY3Rpb24gbGgoYSl7dmFyIGI9QWcoYS5hbHRlcm5hdGUsYSxVKTthLm1lbW9pemVkUHJvcHM9YS5wZW5kaW5nUHJvcHM7bnVsbD09PWImJihiPWtoKGEpKTthaC5jdXJyZW50PW51bGw7cmV0dXJuIGJ9XG5mdW5jdGlvbiBtaChhLGIpe2RoP3QoXCIyNDNcIik6dm9pZCAwO1RmKCk7ZGg9ITA7YWguY3VycmVudERpc3BhdGNoZXI9JGc7dmFyIGM9YS5uZXh0RXhwaXJhdGlvblRpbWVUb1dvcmtPbjtpZihjIT09VXx8YSE9PVR8fG51bGw9PT1TKWpoKCksVD1hLFU9YyxTPSRlKFQuY3VycmVudCxudWxsLFUpLGEucGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lPTA7dmFyIGQ9ITE7ZG97dHJ5e2lmKGIpZm9yKDtudWxsIT09UyYmIW5oKCk7KVM9bGgoUyk7ZWxzZSBmb3IoO251bGwhPT1TOylTPWxoKFMpfWNhdGNoKEIpe2lmKEFmPXpmPXlmPW51bGwsbnVsbD09PVMpZD0hMCxXZyhCKTtlbHNle251bGw9PT1TP3QoXCIyNzFcIik6dm9pZCAwO3ZhciBlPVMsZj1lLnJldHVybjtpZihudWxsPT09ZilkPSEwLFdnKEIpO2Vsc2V7YTp7dmFyIGc9YSxoPWYsaz1lLGw9QjtmPVU7ay5lZmZlY3RUYWd8PTEwMjQ7ay5maXJzdEVmZmVjdD1rLmxhc3RFZmZlY3Q9bnVsbDtpZihudWxsIT09bCYmXCJvYmplY3RcIj09PVxudHlwZW9mIGwmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBsLnRoZW4pe3ZhciBtPWw7bD1oO3ZhciByPS0xLHc9LTE7ZG97aWYoMTM9PT1sLnRhZyl7dmFyIHk9bC5hbHRlcm5hdGU7aWYobnVsbCE9PXkmJih5PXkubWVtb2l6ZWRTdGF0ZSxudWxsIT09eSkpe3c9MTAqKDEwNzM3NDE4MjIteS50aW1lZE91dEF0KTticmVha315PWwucGVuZGluZ1Byb3BzLm1heER1cmF0aW9uO2lmKFwibnVtYmVyXCI9PT10eXBlb2YgeSlpZigwPj15KXI9MDtlbHNlIGlmKC0xPT09cnx8eTxyKXI9eX1sPWwucmV0dXJufXdoaWxlKG51bGwhPT1sKTtsPWg7ZG97aWYoeT0xMz09PWwudGFnKXk9dm9pZCAwPT09bC5tZW1vaXplZFByb3BzLmZhbGxiYWNrPyExOm51bGw9PT1sLm1lbW9pemVkU3RhdGU7aWYoeSl7aD1sLnVwZGF0ZVF1ZXVlO251bGw9PT1oP2wudXBkYXRlUXVldWU9bmV3IFNldChbbV0pOmguYWRkKG0pO2lmKDA9PT0obC5tb2RlJjEpKXtsLmVmZmVjdFRhZ3w9NjQ7ay5lZmZlY3RUYWcmPS0xOTU3O1xuMT09PWsudGFnJiYobnVsbD09PWsuYWx0ZXJuYXRlP2sudGFnPTE3OihmPW5mKDEwNzM3NDE4MjMpLGYudGFnPTIscGYoayxmKSkpO2suZXhwaXJhdGlvblRpbWU9MTA3Mzc0MTgyMzticmVhayBhfWs9Zy5waW5nQ2FjaGU7bnVsbD09PWs/KGs9Zy5waW5nQ2FjaGU9bmV3IFVnLGg9bmV3IFNldCxrLnNldChtLGgpKTooaD1rLmdldChtKSx2b2lkIDA9PT1oJiYoaD1uZXcgU2V0LGsuc2V0KG0saCkpKTtoLmhhcyhmKXx8KGguYWRkKGYpLGs9b2guYmluZChudWxsLGcsbSxmKSxtLnRoZW4oayxrKSk7LTE9PT1yP2c9MTA3Mzc0MTgyMzooLTE9PT13JiYodz0xMCooMTA3Mzc0MTgyMi1qZihnLGYpKS01RTMpLGc9dytyKTswPD1nJiZlaDxnJiYoZWg9Zyk7bC5lZmZlY3RUYWd8PTIwNDg7bC5leHBpcmF0aW9uVGltZT1mO2JyZWFrIGF9bD1sLnJldHVybn13aGlsZShudWxsIT09bCk7bD1FcnJvcigobWMoay50eXBlKXx8XCJBIFJlYWN0IGNvbXBvbmVudFwiKStcIiBzdXNwZW5kZWQgd2hpbGUgcmVuZGVyaW5nLCBidXQgbm8gZmFsbGJhY2sgVUkgd2FzIHNwZWNpZmllZC5cXG5cXG5BZGQgYSA8U3VzcGVuc2UgZmFsbGJhY2s9Li4uPiBjb21wb25lbnQgaGlnaGVyIGluIHRoZSB0cmVlIHRvIHByb3ZpZGUgYSBsb2FkaW5nIGluZGljYXRvciBvciBwbGFjZWhvbGRlciB0byBkaXNwbGF5LlwiK1xubmMoaykpfWZoPSEwO2w9d2YobCxrKTtnPWg7ZG97c3dpdGNoKGcudGFnKXtjYXNlIDM6Zy5lZmZlY3RUYWd8PTIwNDg7Zy5leHBpcmF0aW9uVGltZT1mO2Y9VmcoZyxsLGYpO3FmKGcsZik7YnJlYWsgYTtjYXNlIDE6aWYobT1sLHI9Zy50eXBlLHc9Zy5zdGF0ZU5vZGUsMD09PShnLmVmZmVjdFRhZyY2NCkmJihcImZ1bmN0aW9uXCI9PT10eXBlb2Ygci5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3J8fG51bGwhPT13JiZcImZ1bmN0aW9uXCI9PT10eXBlb2Ygdy5jb21wb25lbnREaWRDYXRjaCYmKG51bGw9PT1ZZ3x8IVlnLmhhcyh3KSkpKXtnLmVmZmVjdFRhZ3w9MjA0ODtnLmV4cGlyYXRpb25UaW1lPWY7Zj1YZyhnLG0sZik7cWYoZyxmKTticmVhayBhfX1nPWcucmV0dXJufXdoaWxlKG51bGwhPT1nKX1TPWtoKGUpO2NvbnRpbnVlfX19YnJlYWt9d2hpbGUoMSk7ZGg9ITE7QWY9emY9eWY9YWguY3VycmVudERpc3BhdGNoZXI9bnVsbDtpZihkKVQ9bnVsbCxhLmZpbmlzaGVkV29yaz1udWxsO1xuZWxzZSBpZihudWxsIT09UylhLmZpbmlzaGVkV29yaz1udWxsO2Vsc2V7ZD1hLmN1cnJlbnQuYWx0ZXJuYXRlO251bGw9PT1kP3QoXCIyODFcIik6dm9pZCAwO1Q9bnVsbDtpZihmaCl7ZT1hLmxhdGVzdFBlbmRpbmdUaW1lO2Y9YS5sYXRlc3RTdXNwZW5kZWRUaW1lO2c9YS5sYXRlc3RQaW5nZWRUaW1lO2lmKDAhPT1lJiZlPGN8fDAhPT1mJiZmPGN8fDAhPT1nJiZnPGMpe2hmKGEsYyk7cGgoYSxkLGMsYS5leHBpcmF0aW9uVGltZSwtMSk7cmV0dXJufWlmKCFhLmRpZEVycm9yJiZiKXthLmRpZEVycm9yPSEwO2M9YS5uZXh0RXhwaXJhdGlvblRpbWVUb1dvcmtPbj1jO2I9YS5leHBpcmF0aW9uVGltZT0xMDczNzQxODIzO3BoKGEsZCxjLGIsLTEpO3JldHVybn19YiYmLTEhPT1laD8oaGYoYSxjKSxiPTEwKigxMDczNzQxODIyLWpmKGEsYykpLGI8ZWgmJihlaD1iKSxiPTEwKigxMDczNzQxODIyLVJmKCkpLGI9ZWgtYixwaChhLGQsYyxhLmV4cGlyYXRpb25UaW1lLDA+Yj8wOmIpKTooYS5wZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU9XG5jLGEuZmluaXNoZWRXb3JrPWQpfX1mdW5jdGlvbiBNZyhhLGIpe2Zvcih2YXIgYz1hLnJldHVybjtudWxsIT09Yzspe3N3aXRjaChjLnRhZyl7Y2FzZSAxOnZhciBkPWMuc3RhdGVOb2RlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLnR5cGUuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5jb21wb25lbnREaWRDYXRjaCYmKG51bGw9PT1ZZ3x8IVlnLmhhcyhkKSkpe2E9d2YoYixhKTthPVhnKGMsYSwxMDczNzQxODIzKTtwZihjLGEpO1VmKGMsMTA3Mzc0MTgyMyk7cmV0dXJufWJyZWFrO2Nhc2UgMzphPXdmKGIsYSk7YT1WZyhjLGEsMTA3Mzc0MTgyMyk7cGYoYyxhKTtVZihjLDEwNzM3NDE4MjMpO3JldHVybn1jPWMucmV0dXJufTM9PT1hLnRhZyYmKGM9d2YoYixhKSxjPVZnKGEsYywxMDczNzQxODIzKSxwZihhLGMpLFVmKGEsMTA3Mzc0MTgyMykpfVxuZnVuY3Rpb24gU2YoYSxiKXswIT09Y2g/YT1jaDpkaD9hPWdoPzEwNzM3NDE4MjM6VTpiLm1vZGUmMT8oYT1xaD8xMDczNzQxODIyLTEwKigoKDEwNzM3NDE4MjItYSsxNSkvMTB8MCkrMSk6MTA3Mzc0MTgyMi0yNSooKCgxMDczNzQxODIyLWErNTAwKS8yNXwwKSsxKSxudWxsIT09VCYmYT09PVUmJi0tYSk6YT0xMDczNzQxODIzO3FoJiYoMD09PXJofHxhPHJoKSYmKHJoPWEpO3JldHVybiBhfWZ1bmN0aW9uIG9oKGEsYixjKXt2YXIgZD1hLnBpbmdDYWNoZTtudWxsIT09ZCYmZC5kZWxldGUoYik7aWYobnVsbCE9PVQmJlU9PT1jKVQ9bnVsbDtlbHNlIGlmKGI9YS5lYXJsaWVzdFN1c3BlbmRlZFRpbWUsZD1hLmxhdGVzdFN1c3BlbmRlZFRpbWUsMCE9PWImJmM8PWImJmM+PWQpe2EuZGlkRXJyb3I9ITE7Yj1hLmxhdGVzdFBpbmdlZFRpbWU7aWYoMD09PWJ8fGI+YylhLmxhdGVzdFBpbmdlZFRpbWU9YztnZihjLGEpO2M9YS5leHBpcmF0aW9uVGltZTswIT09YyYmc2goYSxjKX19XG5mdW5jdGlvbiBUZyhhLGIpe3ZhciBjPWEuc3RhdGVOb2RlO251bGwhPT1jJiZjLmRlbGV0ZShiKTtiPVJmKCk7Yj1TZihiLGEpO2E9dGgoYSxiKTtudWxsIT09YSYmKGZmKGEsYiksYj1hLmV4cGlyYXRpb25UaW1lLDAhPT1iJiZzaChhLGIpKX1cbmZ1bmN0aW9uIHRoKGEsYil7YS5leHBpcmF0aW9uVGltZTxiJiYoYS5leHBpcmF0aW9uVGltZT1iKTt2YXIgYz1hLmFsdGVybmF0ZTtudWxsIT09YyYmYy5leHBpcmF0aW9uVGltZTxiJiYoYy5leHBpcmF0aW9uVGltZT1iKTt2YXIgZD1hLnJldHVybixlPW51bGw7aWYobnVsbD09PWQmJjM9PT1hLnRhZyllPWEuc3RhdGVOb2RlO2Vsc2UgZm9yKDtudWxsIT09ZDspe2M9ZC5hbHRlcm5hdGU7ZC5jaGlsZEV4cGlyYXRpb25UaW1lPGImJihkLmNoaWxkRXhwaXJhdGlvblRpbWU9Yik7bnVsbCE9PWMmJmMuY2hpbGRFeHBpcmF0aW9uVGltZTxiJiYoYy5jaGlsZEV4cGlyYXRpb25UaW1lPWIpO2lmKG51bGw9PT1kLnJldHVybiYmMz09PWQudGFnKXtlPWQuc3RhdGVOb2RlO2JyZWFrfWQ9ZC5yZXR1cm59cmV0dXJuIGV9XG5mdW5jdGlvbiBVZihhLGIpe2E9dGgoYSxiKTtudWxsIT09YSYmKCFkaCYmMCE9PVUmJmI+VSYmamgoKSxmZihhLGIpLGRoJiYhZ2gmJlQ9PT1hfHxzaChhLGEuZXhwaXJhdGlvblRpbWUpLHVoPnZoJiYodWg9MCx0KFwiMTg1XCIpKSl9ZnVuY3Rpb24gd2goYSxiLGMsZCxlKXt2YXIgZj1jaDtjaD0xMDczNzQxODIzO3RyeXtyZXR1cm4gYShiLGMsZCxlKX1maW5hbGx5e2NoPWZ9fXZhciB4aD1udWxsLFc9bnVsbCx5aD0wLHpoPXZvaWQgMCxYPSExLEFoPW51bGwsWT0wLHJoPTAsQmg9ITEsQ2g9bnVsbCxaPSExLERoPSExLHFoPSExLEVoPW51bGwsRmg9YmEudW5zdGFibGVfbm93KCksR2g9MTA3Mzc0MTgyMi0oRmgvMTB8MCksSGg9R2gsdmg9NTAsdWg9MCxJaD1udWxsO2Z1bmN0aW9uIEpoKCl7R2g9MTA3Mzc0MTgyMi0oKGJhLnVuc3RhYmxlX25vdygpLUZoKS8xMHwwKX1cbmZ1bmN0aW9uIEtoKGEsYil7aWYoMCE9PXloKXtpZihiPHloKXJldHVybjtudWxsIT09emgmJmJhLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrKHpoKX15aD1iO2E9YmEudW5zdGFibGVfbm93KCktRmg7emg9YmEudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayhMaCx7dGltZW91dDoxMCooMTA3Mzc0MTgyMi1iKS1hfSl9ZnVuY3Rpb24gcGgoYSxiLGMsZCxlKXthLmV4cGlyYXRpb25UaW1lPWQ7MCE9PWV8fG5oKCk/MDxlJiYoYS50aW1lb3V0SGFuZGxlPURlKE1oLmJpbmQobnVsbCxhLGIsYyksZSkpOihhLnBlbmRpbmdDb21taXRFeHBpcmF0aW9uVGltZT1jLGEuZmluaXNoZWRXb3JrPWIpfWZ1bmN0aW9uIE1oKGEsYixjKXthLnBlbmRpbmdDb21taXRFeHBpcmF0aW9uVGltZT1jO2EuZmluaXNoZWRXb3JrPWI7SmgoKTtIaD1HaDtOaChhLGMpfWZ1bmN0aW9uIFJmKCl7aWYoWClyZXR1cm4gSGg7T2goKTtpZigwPT09WXx8MT09PVkpSmgoKSxIaD1HaDtyZXR1cm4gSGh9XG5mdW5jdGlvbiBzaChhLGIpe251bGw9PT1hLm5leHRTY2hlZHVsZWRSb290PyhhLmV4cGlyYXRpb25UaW1lPWIsbnVsbD09PVc/KHhoPVc9YSxhLm5leHRTY2hlZHVsZWRSb290PWEpOihXPVcubmV4dFNjaGVkdWxlZFJvb3Q9YSxXLm5leHRTY2hlZHVsZWRSb290PXhoKSk6Yj5hLmV4cGlyYXRpb25UaW1lJiYoYS5leHBpcmF0aW9uVGltZT1iKTtYfHwoWj9EaCYmKEFoPWEsWT0xMDczNzQxODIzLFBoKGEsMTA3Mzc0MTgyMywhMSkpOjEwNzM3NDE4MjM9PT1iP1FoKDEwNzM3NDE4MjMsITEpOktoKGEsYikpfVxuZnVuY3Rpb24gT2goKXt2YXIgYT0wLGI9bnVsbDtpZihudWxsIT09Vylmb3IodmFyIGM9VyxkPXhoO251bGwhPT1kOyl7dmFyIGU9ZC5leHBpcmF0aW9uVGltZTtpZigwPT09ZSl7bnVsbD09PWN8fG51bGw9PT1XP3QoXCIyNDRcIik6dm9pZCAwO2lmKGQ9PT1kLm5leHRTY2hlZHVsZWRSb290KXt4aD1XPWQubmV4dFNjaGVkdWxlZFJvb3Q9bnVsbDticmVha31lbHNlIGlmKGQ9PT14aCl4aD1lPWQubmV4dFNjaGVkdWxlZFJvb3QsVy5uZXh0U2NoZWR1bGVkUm9vdD1lLGQubmV4dFNjaGVkdWxlZFJvb3Q9bnVsbDtlbHNlIGlmKGQ9PT1XKXtXPWM7Vy5uZXh0U2NoZWR1bGVkUm9vdD14aDtkLm5leHRTY2hlZHVsZWRSb290PW51bGw7YnJlYWt9ZWxzZSBjLm5leHRTY2hlZHVsZWRSb290PWQubmV4dFNjaGVkdWxlZFJvb3QsZC5uZXh0U2NoZWR1bGVkUm9vdD1udWxsO2Q9Yy5uZXh0U2NoZWR1bGVkUm9vdH1lbHNle2U+YSYmKGE9ZSxiPWQpO2lmKGQ9PT1XKWJyZWFrO2lmKDEwNzM3NDE4MjM9PT1cbmEpYnJlYWs7Yz1kO2Q9ZC5uZXh0U2NoZWR1bGVkUm9vdH19QWg9YjtZPWF9dmFyIFJoPSExO2Z1bmN0aW9uIG5oKCl7cmV0dXJuIFJoPyEwOmJhLnVuc3RhYmxlX3Nob3VsZFlpZWxkKCk/Umg9ITA6ITF9ZnVuY3Rpb24gTGgoKXt0cnl7aWYoIW5oKCkmJm51bGwhPT14aCl7SmgoKTt2YXIgYT14aDtkb3t2YXIgYj1hLmV4cGlyYXRpb25UaW1lOzAhPT1iJiZHaDw9YiYmKGEubmV4dEV4cGlyYXRpb25UaW1lVG9Xb3JrT249R2gpO2E9YS5uZXh0U2NoZWR1bGVkUm9vdH13aGlsZShhIT09eGgpfVFoKDAsITApfWZpbmFsbHl7Umg9ITF9fVxuZnVuY3Rpb24gUWgoYSxiKXtPaCgpO2lmKGIpZm9yKEpoKCksSGg9R2g7bnVsbCE9PUFoJiYwIT09WSYmYTw9WSYmIShSaCYmR2g+WSk7KVBoKEFoLFksR2g+WSksT2goKSxKaCgpLEhoPUdoO2Vsc2UgZm9yKDtudWxsIT09QWgmJjAhPT1ZJiZhPD1ZOylQaChBaCxZLCExKSxPaCgpO2ImJih5aD0wLHpoPW51bGwpOzAhPT1ZJiZLaChBaCxZKTt1aD0wO0loPW51bGw7aWYobnVsbCE9PUVoKWZvcihhPUVoLEVoPW51bGwsYj0wO2I8YS5sZW5ndGg7YisrKXt2YXIgYz1hW2JdO3RyeXtjLl9vbkNvbXBsZXRlKCl9Y2F0Y2goZCl7Qmh8fChCaD0hMCxDaD1kKX19aWYoQmgpdGhyb3cgYT1DaCxDaD1udWxsLEJoPSExLGE7fWZ1bmN0aW9uIE5oKGEsYil7WD90KFwiMjUzXCIpOnZvaWQgMDtBaD1hO1k9YjtQaChhLGIsITEpO1FoKDEwNzM3NDE4MjMsITEpfVxuZnVuY3Rpb24gUGgoYSxiLGMpe1g/dChcIjI0NVwiKTp2b2lkIDA7WD0hMDtpZihjKXt2YXIgZD1hLmZpbmlzaGVkV29yaztudWxsIT09ZD9TaChhLGQsYik6KGEuZmluaXNoZWRXb3JrPW51bGwsZD1hLnRpbWVvdXRIYW5kbGUsLTEhPT1kJiYoYS50aW1lb3V0SGFuZGxlPS0xLEVlKGQpKSxtaChhLGMpLGQ9YS5maW5pc2hlZFdvcmssbnVsbCE9PWQmJihuaCgpP2EuZmluaXNoZWRXb3JrPWQ6U2goYSxkLGIpKSl9ZWxzZSBkPWEuZmluaXNoZWRXb3JrLG51bGwhPT1kP1NoKGEsZCxiKTooYS5maW5pc2hlZFdvcms9bnVsbCxkPWEudGltZW91dEhhbmRsZSwtMSE9PWQmJihhLnRpbWVvdXRIYW5kbGU9LTEsRWUoZCkpLG1oKGEsYyksZD1hLmZpbmlzaGVkV29yayxudWxsIT09ZCYmU2goYSxkLGIpKTtYPSExfVxuZnVuY3Rpb24gU2goYSxiLGMpe3ZhciBkPWEuZmlyc3RCYXRjaDtpZihudWxsIT09ZCYmZC5fZXhwaXJhdGlvblRpbWU+PWMmJihudWxsPT09RWg/RWg9W2RdOkVoLnB1c2goZCksZC5fZGVmZXIpKXthLmZpbmlzaGVkV29yaz1iO2EuZXhwaXJhdGlvblRpbWU9MDtyZXR1cm59YS5maW5pc2hlZFdvcms9bnVsbDthPT09SWg/dWgrKzooSWg9YSx1aD0wKTtnaD1kaD0hMDthLmN1cnJlbnQ9PT1iP3QoXCIxNzdcIik6dm9pZCAwO2M9YS5wZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU7MD09PWM/dChcIjI2MVwiKTp2b2lkIDA7YS5wZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU9MDtkPWIuZXhwaXJhdGlvblRpbWU7dmFyIGU9Yi5jaGlsZEV4cGlyYXRpb25UaW1lO2Q9ZT5kP2U6ZDthLmRpZEVycm9yPSExOzA9PT1kPyhhLmVhcmxpZXN0UGVuZGluZ1RpbWU9MCxhLmxhdGVzdFBlbmRpbmdUaW1lPTAsYS5lYXJsaWVzdFN1c3BlbmRlZFRpbWU9MCxhLmxhdGVzdFN1c3BlbmRlZFRpbWU9MCxhLmxhdGVzdFBpbmdlZFRpbWU9XG4wKTooZDxhLmxhdGVzdFBpbmdlZFRpbWUmJihhLmxhdGVzdFBpbmdlZFRpbWU9MCksZT1hLmxhdGVzdFBlbmRpbmdUaW1lLDAhPT1lJiYoZT5kP2EuZWFybGllc3RQZW5kaW5nVGltZT1hLmxhdGVzdFBlbmRpbmdUaW1lPTA6YS5lYXJsaWVzdFBlbmRpbmdUaW1lPmQmJihhLmVhcmxpZXN0UGVuZGluZ1RpbWU9YS5sYXRlc3RQZW5kaW5nVGltZSkpLGU9YS5lYXJsaWVzdFN1c3BlbmRlZFRpbWUsMD09PWU/ZmYoYSxkKTpkPGEubGF0ZXN0U3VzcGVuZGVkVGltZT8oYS5lYXJsaWVzdFN1c3BlbmRlZFRpbWU9MCxhLmxhdGVzdFN1c3BlbmRlZFRpbWU9MCxhLmxhdGVzdFBpbmdlZFRpbWU9MCxmZihhLGQpKTpkPmUmJmZmKGEsZCkpO2dmKDAsYSk7YWguY3VycmVudD1udWxsOzE8Yi5lZmZlY3RUYWc/bnVsbCE9PWIubGFzdEVmZmVjdD8oYi5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YixkPWIuZmlyc3RFZmZlY3QpOmQ9YjpkPWIuZmlyc3RFZmZlY3Q7emU9SGQ7ZT1UZCgpO2lmKFVkKGUpKXtpZihcInNlbGVjdGlvblN0YXJ0XCJpblxuZSl2YXIgZj17c3RhcnQ6ZS5zZWxlY3Rpb25TdGFydCxlbmQ6ZS5zZWxlY3Rpb25FbmR9O2Vsc2UgYTp7Zj0oZj1lLm93bmVyRG9jdW1lbnQpJiZmLmRlZmF1bHRWaWV3fHx3aW5kb3c7dmFyIGc9Zi5nZXRTZWxlY3Rpb24mJmYuZ2V0U2VsZWN0aW9uKCk7aWYoZyYmMCE9PWcucmFuZ2VDb3VudCl7Zj1nLmFuY2hvck5vZGU7dmFyIGg9Zy5hbmNob3JPZmZzZXQsaz1nLmZvY3VzTm9kZTtnPWcuZm9jdXNPZmZzZXQ7dHJ5e2Yubm9kZVR5cGUsay5ub2RlVHlwZX1jYXRjaChkYil7Zj1udWxsO2JyZWFrIGF9dmFyIGw9MCxtPS0xLHI9LTEsdz0wLHk9MCxCPWUsUj1udWxsO2I6Zm9yKDs7KXtmb3IodmFyIHY7Oyl7QiE9PWZ8fDAhPT1oJiYzIT09Qi5ub2RlVHlwZXx8KG09bCtoKTtCIT09a3x8MCE9PWcmJjMhPT1CLm5vZGVUeXBlfHwocj1sK2cpOzM9PT1CLm5vZGVUeXBlJiYobCs9Qi5ub2RlVmFsdWUubGVuZ3RoKTtpZihudWxsPT09KHY9Qi5maXJzdENoaWxkKSlicmVhaztSPUI7Qj12fWZvcig7Oyl7aWYoQj09PVxuZSlicmVhayBiO1I9PT1mJiYrK3c9PT1oJiYobT1sKTtSPT09ayYmKyt5PT09ZyYmKHI9bCk7aWYobnVsbCE9PSh2PUIubmV4dFNpYmxpbmcpKWJyZWFrO0I9UjtSPUIucGFyZW50Tm9kZX1CPXZ9Zj0tMT09PW18fC0xPT09cj9udWxsOntzdGFydDptLGVuZDpyfX1lbHNlIGY9bnVsbH1mPWZ8fHtzdGFydDowLGVuZDowfX1lbHNlIGY9bnVsbDtBZT17Zm9jdXNlZEVsZW06ZSxzZWxlY3Rpb25SYW5nZTpmfTtIZD0hMTtmb3IoVj1kO251bGwhPT1WOyl7ZT0hMTtmPXZvaWQgMDt0cnl7Zm9yKDtudWxsIT09Vjspe2lmKFYuZWZmZWN0VGFnJjI1NilhOnt2YXIgcT1WLmFsdGVybmF0ZTtoPVY7c3dpdGNoKGgudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OmJyZWFrIGE7Y2FzZSAxOmlmKGguZWZmZWN0VGFnJjI1NiYmbnVsbCE9PXEpe3ZhciB1PXEubWVtb2l6ZWRQcm9wcyxBPXEubWVtb2l6ZWRTdGF0ZSxZZj1oLnN0YXRlTm9kZSxWaD1ZZi5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZShoLmVsZW1lbnRUeXBlPT09XG5oLnR5cGU/dTpQKGgudHlwZSx1KSxBKTtZZi5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZT1WaH1icmVhayBhO2Nhc2UgMzpjYXNlIDU6Y2FzZSA2OmNhc2UgNDpjYXNlIDE3OmJyZWFrIGE7ZGVmYXVsdDp0KFwiMTYzXCIpfX1WPVYubmV4dEVmZmVjdH19Y2F0Y2goZGIpe2U9ITAsZj1kYn1lJiYobnVsbD09PVY/dChcIjE3OFwiKTp2b2lkIDAsTWcoVixmKSxudWxsIT09ViYmKFY9Vi5uZXh0RWZmZWN0KSl9Zm9yKFY9ZDtudWxsIT09Vjspe3E9ITE7dT12b2lkIDA7dHJ5e2Zvcig7bnVsbCE9PVY7KXt2YXIgeD1WLmVmZmVjdFRhZzt4JjE2JiZwZShWLnN0YXRlTm9kZSxcIlwiKTtpZih4JjEyOCl7dmFyIEM9Vi5hbHRlcm5hdGU7aWYobnVsbCE9PUMpe3ZhciBwPUMucmVmO251bGwhPT1wJiYoXCJmdW5jdGlvblwiPT09dHlwZW9mIHA/cChudWxsKTpwLmN1cnJlbnQ9bnVsbCl9fXN3aXRjaCh4JjE0KXtjYXNlIDI6UmcoVik7Vi5lZmZlY3RUYWcmPS0zO2JyZWFrO2Nhc2UgNjpSZyhWKTtcblYuZWZmZWN0VGFnJj0tMztTZyhWLmFsdGVybmF0ZSxWKTticmVhaztjYXNlIDQ6U2coVi5hbHRlcm5hdGUsVik7YnJlYWs7Y2FzZSA4OkE9VjtQZyhBKTtBLnJldHVybj1udWxsO0EuY2hpbGQ9bnVsbDtBLm1lbW9pemVkU3RhdGU9bnVsbDtBLnVwZGF0ZVF1ZXVlPW51bGw7dmFyIEc9QS5hbHRlcm5hdGU7bnVsbCE9PUcmJihHLnJldHVybj1udWxsLEcuY2hpbGQ9bnVsbCxHLm1lbW9pemVkU3RhdGU9bnVsbCxHLnVwZGF0ZVF1ZXVlPW51bGwpfVY9Vi5uZXh0RWZmZWN0fX1jYXRjaChkYil7cT0hMCx1PWRifXEmJihudWxsPT09Vj90KFwiMTc4XCIpOnZvaWQgMCxNZyhWLHUpLG51bGwhPT1WJiYoVj1WLm5leHRFZmZlY3QpKX1wPUFlO0M9VGQoKTt4PXAuZm9jdXNlZEVsZW07cT1wLnNlbGVjdGlvblJhbmdlO2lmKEMhPT14JiZ4JiZ4Lm93bmVyRG9jdW1lbnQmJlNkKHgub3duZXJEb2N1bWVudC5kb2N1bWVudEVsZW1lbnQseCkpe251bGwhPT1xJiZVZCh4KSYmKEM9cS5zdGFydCxwPXEuZW5kLFxudm9pZCAwPT09cCYmKHA9QyksXCJzZWxlY3Rpb25TdGFydFwiaW4geD8oeC5zZWxlY3Rpb25TdGFydD1DLHguc2VsZWN0aW9uRW5kPU1hdGgubWluKHAseC52YWx1ZS5sZW5ndGgpKToocD0oQz14Lm93bmVyRG9jdW1lbnR8fGRvY3VtZW50KSYmQy5kZWZhdWx0Vmlld3x8d2luZG93LHAuZ2V0U2VsZWN0aW9uJiYocD1wLmdldFNlbGVjdGlvbigpLHU9eC50ZXh0Q29udGVudC5sZW5ndGgsRz1NYXRoLm1pbihxLnN0YXJ0LHUpLHE9dm9pZCAwPT09cS5lbmQ/RzpNYXRoLm1pbihxLmVuZCx1KSwhcC5leHRlbmQmJkc+cSYmKHU9cSxxPUcsRz11KSx1PVJkKHgsRyksQT1SZCh4LHEpLHUmJkEmJigxIT09cC5yYW5nZUNvdW50fHxwLmFuY2hvck5vZGUhPT11Lm5vZGV8fHAuYW5jaG9yT2Zmc2V0IT09dS5vZmZzZXR8fHAuZm9jdXNOb2RlIT09QS5ub2RlfHxwLmZvY3VzT2Zmc2V0IT09QS5vZmZzZXQpJiYoQz1DLmNyZWF0ZVJhbmdlKCksQy5zZXRTdGFydCh1Lm5vZGUsdS5vZmZzZXQpLHAucmVtb3ZlQWxsUmFuZ2VzKCksXG5HPnE/KHAuYWRkUmFuZ2UoQykscC5leHRlbmQoQS5ub2RlLEEub2Zmc2V0KSk6KEMuc2V0RW5kKEEubm9kZSxBLm9mZnNldCkscC5hZGRSYW5nZShDKSkpKSkpO0M9W107Zm9yKHA9eDtwPXAucGFyZW50Tm9kZTspMT09PXAubm9kZVR5cGUmJkMucHVzaCh7ZWxlbWVudDpwLGxlZnQ6cC5zY3JvbGxMZWZ0LHRvcDpwLnNjcm9sbFRvcH0pO1wiZnVuY3Rpb25cIj09PXR5cGVvZiB4LmZvY3VzJiZ4LmZvY3VzKCk7Zm9yKHg9MDt4PEMubGVuZ3RoO3grKylwPUNbeF0scC5lbGVtZW50LnNjcm9sbExlZnQ9cC5sZWZ0LHAuZWxlbWVudC5zY3JvbGxUb3A9cC50b3B9QWU9bnVsbDtIZD0hIXplO3plPW51bGw7YS5jdXJyZW50PWI7Zm9yKFY9ZDtudWxsIT09Vjspe2Q9ITE7eD12b2lkIDA7dHJ5e2ZvcihDPWM7bnVsbCE9PVY7KXt2YXIgRmI9Vi5lZmZlY3RUYWc7aWYoRmImMzYpe3ZhciBHYj1WLmFsdGVybmF0ZTtwPVY7Rz1DO3N3aXRjaChwLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTpicmVhaztcbmNhc2UgMTp2YXIgSGM9cC5zdGF0ZU5vZGU7aWYocC5lZmZlY3RUYWcmNClpZihudWxsPT09R2IpSGMuY29tcG9uZW50RGlkTW91bnQoKTtlbHNle3ZhciBpaT1wLmVsZW1lbnRUeXBlPT09cC50eXBlP0diLm1lbW9pemVkUHJvcHM6UChwLnR5cGUsR2IubWVtb2l6ZWRQcm9wcyk7SGMuY29tcG9uZW50RGlkVXBkYXRlKGlpLEdiLm1lbW9pemVkU3RhdGUsSGMuX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGUpfXZhciBEZz1wLnVwZGF0ZVF1ZXVlO251bGwhPT1EZyYmdWYocCxEZyxIYyxHKTticmVhaztjYXNlIDM6dmFyIEVnPXAudXBkYXRlUXVldWU7aWYobnVsbCE9PUVnKXtxPW51bGw7aWYobnVsbCE9PXAuY2hpbGQpc3dpdGNoKHAuY2hpbGQudGFnKXtjYXNlIDU6cT1wLmNoaWxkLnN0YXRlTm9kZTticmVhaztjYXNlIDE6cT1wLmNoaWxkLnN0YXRlTm9kZX11ZihwLEVnLHEsRyl9YnJlYWs7Y2FzZSA1OnZhciBqaT1wLnN0YXRlTm9kZTtudWxsPT09R2ImJnAuZWZmZWN0VGFnJlxuNCYmQmUocC50eXBlLHAubWVtb2l6ZWRQcm9wcykmJmppLmZvY3VzKCk7YnJlYWs7Y2FzZSA2OmJyZWFrO2Nhc2UgNDpicmVhaztjYXNlIDEyOmJyZWFrO2Nhc2UgMTM6YnJlYWs7Y2FzZSAxNzpicmVhaztkZWZhdWx0OnQoXCIxNjNcIil9fWlmKEZiJjEyOCl7dmFyIEljPVYucmVmO2lmKG51bGwhPT1JYyl7dmFyIEZnPVYuc3RhdGVOb2RlO3N3aXRjaChWLnRhZyl7Y2FzZSA1OnZhciBjZT1GZzticmVhaztkZWZhdWx0OmNlPUZnfVwiZnVuY3Rpb25cIj09PXR5cGVvZiBJYz9JYyhjZSk6SWMuY3VycmVudD1jZX19Vj1WLm5leHRFZmZlY3R9fWNhdGNoKGRiKXtkPSEwLHg9ZGJ9ZCYmKG51bGw9PT1WP3QoXCIxNzhcIik6dm9pZCAwLE1nKFYseCksbnVsbCE9PVYmJihWPVYubmV4dEVmZmVjdCkpfWRoPWdoPSExO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBUZSYmVGUoYi5zdGF0ZU5vZGUpO0ZiPWIuZXhwaXJhdGlvblRpbWU7Yj1iLmNoaWxkRXhwaXJhdGlvblRpbWU7Yj1iPkZiP2I6RmI7MD09PWImJihZZz1cbm51bGwpO2EuZXhwaXJhdGlvblRpbWU9YjthLmZpbmlzaGVkV29yaz1udWxsfWZ1bmN0aW9uIFdnKGEpe251bGw9PT1BaD90KFwiMjQ2XCIpOnZvaWQgMDtBaC5leHBpcmF0aW9uVGltZT0wO0JofHwoQmg9ITAsQ2g9YSl9ZnVuY3Rpb24gVGgoYSxiKXt2YXIgYz1aO1o9ITA7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7KFo9Yyl8fFh8fFFoKDEwNzM3NDE4MjMsITEpfX1mdW5jdGlvbiBVaChhLGIpe2lmKFomJiFEaCl7RGg9ITA7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7RGg9ITF9fXJldHVybiBhKGIpfWZ1bmN0aW9uIFdoKGEsYixjKXtpZihxaClyZXR1cm4gYShiLGMpO1p8fFh8fDA9PT1yaHx8KFFoKHJoLCExKSxyaD0wKTt2YXIgZD1xaCxlPVo7Wj1xaD0hMDt0cnl7cmV0dXJuIGEoYixjKX1maW5hbGx5e3FoPWQsKFo9ZSl8fFh8fFFoKDEwNzM3NDE4MjMsITEpfX1cbmZ1bmN0aW9uIFhoKGEsYixjLGQsZSl7dmFyIGY9Yi5jdXJyZW50O2E6aWYoYyl7Yz1jLl9yZWFjdEludGVybmFsRmliZXI7Yjp7Mj09PWtkKGMpJiYxPT09Yy50YWc/dm9pZCAwOnQoXCIxNzBcIik7dmFyIGc9Yztkb3tzd2l0Y2goZy50YWcpe2Nhc2UgMzpnPWcuc3RhdGVOb2RlLmNvbnRleHQ7YnJlYWsgYjtjYXNlIDE6aWYoTShnLnR5cGUpKXtnPWcuc3RhdGVOb2RlLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0O2JyZWFrIGJ9fWc9Zy5yZXR1cm59d2hpbGUobnVsbCE9PWcpO3QoXCIxNzFcIik7Zz12b2lkIDB9aWYoMT09PWMudGFnKXt2YXIgaD1jLnR5cGU7aWYoTShoKSl7Yz1RZShjLGgsZyk7YnJlYWsgYX19Yz1nfWVsc2UgYz1LZTtudWxsPT09Yi5jb250ZXh0P2IuY29udGV4dD1jOmIucGVuZGluZ0NvbnRleHQ9YztiPWU7ZT1uZihkKTtlLnBheWxvYWQ9e2VsZW1lbnQ6YX07Yj12b2lkIDA9PT1iP251bGw6YjtudWxsIT09YiYmKGUuY2FsbGJhY2s9Yik7XG5UZigpO3BmKGYsZSk7VWYoZixkKTtyZXR1cm4gZH1mdW5jdGlvbiBZaChhLGIsYyxkKXt2YXIgZT1iLmN1cnJlbnQsZj1SZigpO2U9U2YoZixlKTtyZXR1cm4gWGgoYSxiLGMsZSxkKX1mdW5jdGlvbiBaaChhKXthPWEuY3VycmVudDtpZighYS5jaGlsZClyZXR1cm4gbnVsbDtzd2l0Y2goYS5jaGlsZC50YWcpe2Nhc2UgNTpyZXR1cm4gYS5jaGlsZC5zdGF0ZU5vZGU7ZGVmYXVsdDpyZXR1cm4gYS5jaGlsZC5zdGF0ZU5vZGV9fWZ1bmN0aW9uICRoKGEsYixjKXt2YXIgZD0zPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1szXT9hcmd1bWVudHNbM106bnVsbDtyZXR1cm57JCR0eXBlb2Y6JGIsa2V5Om51bGw9PWQ/bnVsbDpcIlwiK2QsY2hpbGRyZW46YSxjb250YWluZXJJbmZvOmIsaW1wbGVtZW50YXRpb246Y319XG5DYj1mdW5jdGlvbihhLGIsYyl7c3dpdGNoKGIpe2Nhc2UgXCJpbnB1dFwiOkNjKGEsYyk7Yj1jLm5hbWU7aWYoXCJyYWRpb1wiPT09Yy50eXBlJiZudWxsIT1iKXtmb3IoYz1hO2MucGFyZW50Tm9kZTspYz1jLnBhcmVudE5vZGU7Yz1jLnF1ZXJ5U2VsZWN0b3JBbGwoXCJpbnB1dFtuYW1lPVwiK0pTT04uc3RyaW5naWZ5KFwiXCIrYikrJ11bdHlwZT1cInJhZGlvXCJdJyk7Zm9yKGI9MDtiPGMubGVuZ3RoO2IrKyl7dmFyIGQ9Y1tiXTtpZihkIT09YSYmZC5mb3JtPT09YS5mb3JtKXt2YXIgZT1MYShkKTtlP3ZvaWQgMDp0KFwiOTBcIik7V2IoZCk7Q2MoZCxlKX19fWJyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmllKGEsYyk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmI9Yy52YWx1ZSxudWxsIT1iJiZmZShhLCEhYy5tdWx0aXBsZSxiLCExKX19O1xuZnVuY3Rpb24gYWkoYSl7dmFyIGI9MTA3Mzc0MTgyMi0yNSooKCgxMDczNzQxODIyLVJmKCkrNTAwKS8yNXwwKSsxKTtiPj1iaCYmKGI9YmgtMSk7dGhpcy5fZXhwaXJhdGlvblRpbWU9Ymg9Yjt0aGlzLl9yb290PWE7dGhpcy5fY2FsbGJhY2tzPXRoaXMuX25leHQ9bnVsbDt0aGlzLl9oYXNDaGlsZHJlbj10aGlzLl9kaWRDb21wbGV0ZT0hMTt0aGlzLl9jaGlsZHJlbj1udWxsO3RoaXMuX2RlZmVyPSEwfWFpLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24oYSl7dGhpcy5fZGVmZXI/dm9pZCAwOnQoXCIyNTBcIik7dGhpcy5faGFzQ2hpbGRyZW49ITA7dGhpcy5fY2hpbGRyZW49YTt2YXIgYj10aGlzLl9yb290Ll9pbnRlcm5hbFJvb3QsYz10aGlzLl9leHBpcmF0aW9uVGltZSxkPW5ldyBiaTtYaChhLGIsbnVsbCxjLGQuX29uQ29tbWl0KTtyZXR1cm4gZH07XG5haS5wcm90b3R5cGUudGhlbj1mdW5jdGlvbihhKXtpZih0aGlzLl9kaWRDb21wbGV0ZSlhKCk7ZWxzZXt2YXIgYj10aGlzLl9jYWxsYmFja3M7bnVsbD09PWImJihiPXRoaXMuX2NhbGxiYWNrcz1bXSk7Yi5wdXNoKGEpfX07XG5haS5wcm90b3R5cGUuY29tbWl0PWZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5fcm9vdC5faW50ZXJuYWxSb290LGI9YS5maXJzdEJhdGNoO3RoaXMuX2RlZmVyJiZudWxsIT09Yj92b2lkIDA6dChcIjI1MVwiKTtpZih0aGlzLl9oYXNDaGlsZHJlbil7dmFyIGM9dGhpcy5fZXhwaXJhdGlvblRpbWU7aWYoYiE9PXRoaXMpe3RoaXMuX2hhc0NoaWxkcmVuJiYoYz10aGlzLl9leHBpcmF0aW9uVGltZT1iLl9leHBpcmF0aW9uVGltZSx0aGlzLnJlbmRlcih0aGlzLl9jaGlsZHJlbikpO2Zvcih2YXIgZD1udWxsLGU9YjtlIT09dGhpczspZD1lLGU9ZS5fbmV4dDtudWxsPT09ZD90KFwiMjUxXCIpOnZvaWQgMDtkLl9uZXh0PWUuX25leHQ7dGhpcy5fbmV4dD1iO2EuZmlyc3RCYXRjaD10aGlzfXRoaXMuX2RlZmVyPSExO05oKGEsYyk7Yj10aGlzLl9uZXh0O3RoaXMuX25leHQ9bnVsbDtiPWEuZmlyc3RCYXRjaD1iO251bGwhPT1iJiZiLl9oYXNDaGlsZHJlbiYmYi5yZW5kZXIoYi5fY2hpbGRyZW4pfWVsc2UgdGhpcy5fbmV4dD1cbm51bGwsdGhpcy5fZGVmZXI9ITF9O2FpLnByb3RvdHlwZS5fb25Db21wbGV0ZT1mdW5jdGlvbigpe2lmKCF0aGlzLl9kaWRDb21wbGV0ZSl7dGhpcy5fZGlkQ29tcGxldGU9ITA7dmFyIGE9dGhpcy5fY2FsbGJhY2tzO2lmKG51bGwhPT1hKWZvcih2YXIgYj0wO2I8YS5sZW5ndGg7YisrKSgwLGFbYl0pKCl9fTtmdW5jdGlvbiBiaSgpe3RoaXMuX2NhbGxiYWNrcz1udWxsO3RoaXMuX2RpZENvbW1pdD0hMTt0aGlzLl9vbkNvbW1pdD10aGlzLl9vbkNvbW1pdC5iaW5kKHRoaXMpfWJpLnByb3RvdHlwZS50aGVuPWZ1bmN0aW9uKGEpe2lmKHRoaXMuX2RpZENvbW1pdClhKCk7ZWxzZXt2YXIgYj10aGlzLl9jYWxsYmFja3M7bnVsbD09PWImJihiPXRoaXMuX2NhbGxiYWNrcz1bXSk7Yi5wdXNoKGEpfX07XG5iaS5wcm90b3R5cGUuX29uQ29tbWl0PWZ1bmN0aW9uKCl7aWYoIXRoaXMuX2RpZENvbW1pdCl7dGhpcy5fZGlkQ29tbWl0PSEwO3ZhciBhPXRoaXMuX2NhbGxiYWNrcztpZihudWxsIT09YSlmb3IodmFyIGI9MDtiPGEubGVuZ3RoO2IrKyl7dmFyIGM9YVtiXTtcImZ1bmN0aW9uXCIhPT10eXBlb2YgYz90KFwiMTkxXCIsYyk6dm9pZCAwO2MoKX19fTtcbmZ1bmN0aW9uIGNpKGEsYixjKXtiPU4oMyxudWxsLG51bGwsYj8zOjApO2E9e2N1cnJlbnQ6Yixjb250YWluZXJJbmZvOmEscGVuZGluZ0NoaWxkcmVuOm51bGwscGluZ0NhY2hlOm51bGwsZWFybGllc3RQZW5kaW5nVGltZTowLGxhdGVzdFBlbmRpbmdUaW1lOjAsZWFybGllc3RTdXNwZW5kZWRUaW1lOjAsbGF0ZXN0U3VzcGVuZGVkVGltZTowLGxhdGVzdFBpbmdlZFRpbWU6MCxkaWRFcnJvcjohMSxwZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU6MCxmaW5pc2hlZFdvcms6bnVsbCx0aW1lb3V0SGFuZGxlOi0xLGNvbnRleHQ6bnVsbCxwZW5kaW5nQ29udGV4dDpudWxsLGh5ZHJhdGU6YyxuZXh0RXhwaXJhdGlvblRpbWVUb1dvcmtPbjowLGV4cGlyYXRpb25UaW1lOjAsZmlyc3RCYXRjaDpudWxsLG5leHRTY2hlZHVsZWRSb290Om51bGx9O3RoaXMuX2ludGVybmFsUm9vdD1iLnN0YXRlTm9kZT1hfVxuY2kucHJvdG90eXBlLnJlbmRlcj1mdW5jdGlvbihhLGIpe3ZhciBjPXRoaXMuX2ludGVybmFsUm9vdCxkPW5ldyBiaTtiPXZvaWQgMD09PWI/bnVsbDpiO251bGwhPT1iJiZkLnRoZW4oYik7WWgoYSxjLG51bGwsZC5fb25Db21taXQpO3JldHVybiBkfTtjaS5wcm90b3R5cGUudW5tb3VudD1mdW5jdGlvbihhKXt2YXIgYj10aGlzLl9pbnRlcm5hbFJvb3QsYz1uZXcgYmk7YT12b2lkIDA9PT1hP251bGw6YTtudWxsIT09YSYmYy50aGVuKGEpO1loKG51bGwsYixudWxsLGMuX29uQ29tbWl0KTtyZXR1cm4gY307Y2kucHJvdG90eXBlLmxlZ2FjeV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcj1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9dGhpcy5faW50ZXJuYWxSb290LGU9bmV3IGJpO2M9dm9pZCAwPT09Yz9udWxsOmM7bnVsbCE9PWMmJmUudGhlbihjKTtZaChiLGQsYSxlLl9vbkNvbW1pdCk7cmV0dXJuIGV9O1xuY2kucHJvdG90eXBlLmNyZWF0ZUJhdGNoPWZ1bmN0aW9uKCl7dmFyIGE9bmV3IGFpKHRoaXMpLGI9YS5fZXhwaXJhdGlvblRpbWUsYz10aGlzLl9pbnRlcm5hbFJvb3QsZD1jLmZpcnN0QmF0Y2g7aWYobnVsbD09PWQpYy5maXJzdEJhdGNoPWEsYS5fbmV4dD1udWxsO2Vsc2V7Zm9yKGM9bnVsbDtudWxsIT09ZCYmZC5fZXhwaXJhdGlvblRpbWU+PWI7KWM9ZCxkPWQuX25leHQ7YS5fbmV4dD1kO251bGwhPT1jJiYoYy5fbmV4dD1hKX1yZXR1cm4gYX07ZnVuY3Rpb24gZGkoYSl7cmV0dXJuISghYXx8MSE9PWEubm9kZVR5cGUmJjkhPT1hLm5vZGVUeXBlJiYxMSE9PWEubm9kZVR5cGUmJig4IT09YS5ub2RlVHlwZXx8XCIgcmVhY3QtbW91bnQtcG9pbnQtdW5zdGFibGUgXCIhPT1hLm5vZGVWYWx1ZSkpfUtiPVRoO0xiPVdoO01iPWZ1bmN0aW9uKCl7WHx8MD09PXJofHwoUWgocmgsITEpLHJoPTApfTtcbmZ1bmN0aW9uIGVpKGEsYil7Ynx8KGI9YT85PT09YS5ub2RlVHlwZT9hLmRvY3VtZW50RWxlbWVudDphLmZpcnN0Q2hpbGQ6bnVsbCxiPSEoIWJ8fDEhPT1iLm5vZGVUeXBlfHwhYi5oYXNBdHRyaWJ1dGUoXCJkYXRhLXJlYWN0cm9vdFwiKSkpO2lmKCFiKWZvcih2YXIgYztjPWEubGFzdENoaWxkOylhLnJlbW92ZUNoaWxkKGMpO3JldHVybiBuZXcgY2koYSwhMSxiKX1cbmZ1bmN0aW9uIGZpKGEsYixjLGQsZSl7ZGkoYyk/dm9pZCAwOnQoXCIyMDBcIik7dmFyIGY9Yy5fcmVhY3RSb290Q29udGFpbmVyO2lmKGYpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlKXt2YXIgZz1lO2U9ZnVuY3Rpb24oKXt2YXIgYT1aaChmLl9pbnRlcm5hbFJvb3QpO2cuY2FsbChhKX19bnVsbCE9YT9mLmxlZ2FjeV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcihhLGIsZSk6Zi5yZW5kZXIoYixlKX1lbHNle2Y9Yy5fcmVhY3RSb290Q29udGFpbmVyPWVpKGMsZCk7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGUpe3ZhciBoPWU7ZT1mdW5jdGlvbigpe3ZhciBhPVpoKGYuX2ludGVybmFsUm9vdCk7aC5jYWxsKGEpfX1VaChmdW5jdGlvbigpe251bGwhPWE/Zi5sZWdhY3lfcmVuZGVyU3VidHJlZUludG9Db250YWluZXIoYSxiLGUpOmYucmVuZGVyKGIsZSl9KX1yZXR1cm4gWmgoZi5faW50ZXJuYWxSb290KX1cbmZ1bmN0aW9uIGdpKGEsYil7dmFyIGM9Mjxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOm51bGw7ZGkoYik/dm9pZCAwOnQoXCIyMDBcIik7cmV0dXJuICRoKGEsYixudWxsLGMpfVxudmFyIGtpPXtjcmVhdGVQb3J0YWw6Z2ksZmluZERPTU5vZGU6ZnVuY3Rpb24oYSl7aWYobnVsbD09YSlyZXR1cm4gbnVsbDtpZigxPT09YS5ub2RlVHlwZSlyZXR1cm4gYTt2YXIgYj1hLl9yZWFjdEludGVybmFsRmliZXI7dm9pZCAwPT09YiYmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLnJlbmRlcj90KFwiMTg4XCIpOnQoXCIyNjhcIixPYmplY3Qua2V5cyhhKSkpO2E9bmQoYik7YT1udWxsPT09YT9udWxsOmEuc3RhdGVOb2RlO3JldHVybiBhfSxoeWRyYXRlOmZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gZmkobnVsbCxhLGIsITAsYyl9LHJlbmRlcjpmdW5jdGlvbihhLGIsYyl7cmV0dXJuIGZpKG51bGwsYSxiLCExLGMpfSx1bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcjpmdW5jdGlvbihhLGIsYyxkKXtudWxsPT1hfHx2b2lkIDA9PT1hLl9yZWFjdEludGVybmFsRmliZXI/dChcIjM4XCIpOnZvaWQgMDtyZXR1cm4gZmkoYSxiLGMsITEsZCl9LHVubW91bnRDb21wb25lbnRBdE5vZGU6ZnVuY3Rpb24oYSl7ZGkoYSk/XG52b2lkIDA6dChcIjQwXCIpO3JldHVybiBhLl9yZWFjdFJvb3RDb250YWluZXI/KFVoKGZ1bmN0aW9uKCl7ZmkobnVsbCxudWxsLGEsITEsZnVuY3Rpb24oKXthLl9yZWFjdFJvb3RDb250YWluZXI9bnVsbH0pfSksITApOiExfSx1bnN0YWJsZV9jcmVhdGVQb3J0YWw6ZnVuY3Rpb24oKXtyZXR1cm4gZ2kuYXBwbHkodm9pZCAwLGFyZ3VtZW50cyl9LHVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzOlRoLHVuc3RhYmxlX2ludGVyYWN0aXZlVXBkYXRlczpXaCxmbHVzaFN5bmM6ZnVuY3Rpb24oYSxiKXtYP3QoXCIxODdcIik6dm9pZCAwO3ZhciBjPVo7Wj0hMDt0cnl7cmV0dXJuIHdoKGEsYil9ZmluYWxseXtaPWMsUWgoMTA3Mzc0MTgyMywhMSl9fSx1bnN0YWJsZV9jcmVhdGVSb290OmhpLHVuc3RhYmxlX2ZsdXNoQ29udHJvbGxlZDpmdW5jdGlvbihhKXt2YXIgYj1aO1o9ITA7dHJ5e3doKGEpfWZpbmFsbHl7KFo9Yil8fFh8fFFoKDEwNzM3NDE4MjMsITEpfX0sX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ6e0V2ZW50czpbSmEsXG5LYSxMYSxDYS5pbmplY3RFdmVudFBsdWdpbnNCeU5hbWUscWEsUmEsZnVuY3Rpb24oYSl7emEoYSxRYSl9LEliLEpiLEpkLEVhXX19O2Z1bmN0aW9uIGhpKGEsYil7ZGkoYSk/dm9pZCAwOnQoXCIyOTlcIixcInVuc3RhYmxlX2NyZWF0ZVJvb3RcIik7cmV0dXJuIG5ldyBjaShhLCEwLG51bGwhPWImJiEwPT09Yi5oeWRyYXRlKX0oZnVuY3Rpb24oYSl7dmFyIGI9YS5maW5kRmliZXJCeUhvc3RJbnN0YW5jZTtyZXR1cm4gV2Uobih7fSxhLHtvdmVycmlkZVByb3BzOm51bGwsZmluZEhvc3RJbnN0YW5jZUJ5RmliZXI6ZnVuY3Rpb24oYSl7YT1uZChhKTtyZXR1cm4gbnVsbD09PWE/bnVsbDphLnN0YXRlTm9kZX0sZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6ZnVuY3Rpb24oYSl7cmV0dXJuIGI/YihhKTpudWxsfX0pKX0pKHtmaW5kRmliZXJCeUhvc3RJbnN0YW5jZTpJYSxidW5kbGVUeXBlOjAsdmVyc2lvbjpcIjE2LjcuMFwiLHJlbmRlcmVyUGFja2FnZU5hbWU6XCJyZWFjdC1kb21cIn0pO1xudmFyIGxpPXtkZWZhdWx0OmtpfSxtaT1saSYma2l8fGxpO21vZHVsZS5leHBvcnRzPW1pLmRlZmF1bHR8fG1pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3NjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9zY2hlZHVsZXIuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MC4xMi4wXG4gKiBzY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7dmFyIGM9bnVsbCxmPSExLGg9MyxrPS0xLGw9LTEsbT0hMSxuPSExO2Z1bmN0aW9uIHAoKXtpZighbSl7dmFyIGE9Yy5leHBpcmF0aW9uVGltZTtuP3EoKTpuPSEwO3IodCxhKX19XG5mdW5jdGlvbiB1KCl7dmFyIGE9YyxiPWMubmV4dDtpZihjPT09YiljPW51bGw7ZWxzZXt2YXIgZD1jLnByZXZpb3VzO2M9ZC5uZXh0PWI7Yi5wcmV2aW91cz1kfWEubmV4dD1hLnByZXZpb3VzPW51bGw7ZD1hLmNhbGxiYWNrO2I9YS5leHBpcmF0aW9uVGltZTthPWEucHJpb3JpdHlMZXZlbDt2YXIgZT1oLFE9bDtoPWE7bD1iO3RyeXt2YXIgZz1kKCl9ZmluYWxseXtoPWUsbD1RfWlmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnKWlmKGc9e2NhbGxiYWNrOmcscHJpb3JpdHlMZXZlbDphLGV4cGlyYXRpb25UaW1lOmIsbmV4dDpudWxsLHByZXZpb3VzOm51bGx9LG51bGw9PT1jKWM9Zy5uZXh0PWcucHJldmlvdXM9ZztlbHNle2Q9bnVsbDthPWM7ZG97aWYoYS5leHBpcmF0aW9uVGltZT49Yil7ZD1hO2JyZWFrfWE9YS5uZXh0fXdoaWxlKGEhPT1jKTtudWxsPT09ZD9kPWM6ZD09PWMmJihjPWcscCgpKTtiPWQucHJldmlvdXM7Yi5uZXh0PWQucHJldmlvdXM9ZztnLm5leHQ9ZDtnLnByZXZpb3VzPVxuYn19ZnVuY3Rpb24gdigpe2lmKC0xPT09ayYmbnVsbCE9PWMmJjE9PT1jLnByaW9yaXR5TGV2ZWwpe209ITA7dHJ5e2RvIHUoKTt3aGlsZShudWxsIT09YyYmMT09PWMucHJpb3JpdHlMZXZlbCl9ZmluYWxseXttPSExLG51bGwhPT1jP3AoKTpuPSExfX19ZnVuY3Rpb24gdChhKXttPSEwO3ZhciBiPWY7Zj1hO3RyeXtpZihhKWZvcig7bnVsbCE9PWM7KXt2YXIgZD1leHBvcnRzLnVuc3RhYmxlX25vdygpO2lmKGMuZXhwaXJhdGlvblRpbWU8PWQpe2RvIHUoKTt3aGlsZShudWxsIT09YyYmYy5leHBpcmF0aW9uVGltZTw9ZCl9ZWxzZSBicmVha31lbHNlIGlmKG51bGwhPT1jKXtkbyB1KCk7d2hpbGUobnVsbCE9PWMmJiF3KCkpfX1maW5hbGx5e209ITEsZj1iLG51bGwhPT1jP3AoKTpuPSExLHYoKX19XG52YXIgeD1EYXRlLHk9XCJmdW5jdGlvblwiPT09dHlwZW9mIHNldFRpbWVvdXQ/c2V0VGltZW91dDp2b2lkIDAsej1cImZ1bmN0aW9uXCI9PT10eXBlb2YgY2xlYXJUaW1lb3V0P2NsZWFyVGltZW91dDp2b2lkIDAsQT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgcmVxdWVzdEFuaW1hdGlvbkZyYW1lP3JlcXVlc3RBbmltYXRpb25GcmFtZTp2b2lkIDAsQj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgY2FuY2VsQW5pbWF0aW9uRnJhbWU/Y2FuY2VsQW5pbWF0aW9uRnJhbWU6dm9pZCAwLEMsRDtmdW5jdGlvbiBFKGEpe0M9QShmdW5jdGlvbihiKXt6KEQpO2EoYil9KTtEPXkoZnVuY3Rpb24oKXtCKEMpO2EoZXhwb3J0cy51bnN0YWJsZV9ub3coKSl9LDEwMCl9XG5pZihcIm9iamVjdFwiPT09dHlwZW9mIHBlcmZvcm1hbmNlJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgcGVyZm9ybWFuY2Uubm93KXt2YXIgRj1wZXJmb3JtYW5jZTtleHBvcnRzLnVuc3RhYmxlX25vdz1mdW5jdGlvbigpe3JldHVybiBGLm5vdygpfX1lbHNlIGV4cG9ydHMudW5zdGFibGVfbm93PWZ1bmN0aW9uKCl7cmV0dXJuIHgubm93KCl9O3ZhciByLHEsdyxHPW51bGw7XCJ1bmRlZmluZWRcIiE9PXR5cGVvZiB3aW5kb3c/Rz13aW5kb3c6XCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBnbG9iYWwmJihHPWdsb2JhbCk7XG5pZihHJiZHLl9zY2hlZE1vY2spe3ZhciBIPUcuX3NjaGVkTW9jaztyPUhbMF07cT1IWzFdO3c9SFsyXTtleHBvcnRzLnVuc3RhYmxlX25vdz1IWzNdfWVsc2UgaWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3d8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBNZXNzYWdlQ2hhbm5lbCl7dmFyIEk9bnVsbCxKPWZ1bmN0aW9uKGEpe2lmKG51bGwhPT1JKXRyeXtJKGEpfWZpbmFsbHl7ST1udWxsfX07cj1mdW5jdGlvbihhKXtudWxsIT09ST9zZXRUaW1lb3V0KHIsMCxhKTooST1hLHNldFRpbWVvdXQoSiwwLCExKSl9O3E9ZnVuY3Rpb24oKXtJPW51bGx9O3c9ZnVuY3Rpb24oKXtyZXR1cm4hMX19ZWxzZXtcInVuZGVmaW5lZFwiIT09dHlwZW9mIGNvbnNvbGUmJihcImZ1bmN0aW9uXCIhPT10eXBlb2YgQSYmY29uc29sZS5lcnJvcihcIlRoaXMgYnJvd3NlciBkb2Vzbid0IHN1cHBvcnQgcmVxdWVzdEFuaW1hdGlvbkZyYW1lLiBNYWtlIHN1cmUgdGhhdCB5b3UgbG9hZCBhIHBvbHlmaWxsIGluIG9sZGVyIGJyb3dzZXJzLiBodHRwczovL2ZiLm1lL3JlYWN0LXBvbHlmaWxsc1wiKSxcblwiZnVuY3Rpb25cIiE9PXR5cGVvZiBCJiZjb25zb2xlLmVycm9yKFwiVGhpcyBicm93c2VyIGRvZXNuJ3Qgc3VwcG9ydCBjYW5jZWxBbmltYXRpb25GcmFtZS4gTWFrZSBzdXJlIHRoYXQgeW91IGxvYWQgYSBwb2x5ZmlsbCBpbiBvbGRlciBicm93c2Vycy4gaHR0cHM6Ly9mYi5tZS9yZWFjdC1wb2x5ZmlsbHNcIikpO3ZhciBLPW51bGwsTD0hMSxNPS0xLE49ITEsTz0hMSxQPTAsUj0zMyxTPTMzO3c9ZnVuY3Rpb24oKXtyZXR1cm4gUDw9ZXhwb3J0cy51bnN0YWJsZV9ub3coKX07dmFyIFQ9bmV3IE1lc3NhZ2VDaGFubmVsLFU9VC5wb3J0MjtULnBvcnQxLm9ubWVzc2FnZT1mdW5jdGlvbigpe0w9ITE7dmFyIGE9SyxiPU07Sz1udWxsO009LTE7dmFyIGQ9ZXhwb3J0cy51bnN0YWJsZV9ub3coKSxlPSExO2lmKDA+PVAtZClpZigtMSE9PWImJmI8PWQpZT0hMDtlbHNle058fChOPSEwLEUoVikpO0s9YTtNPWI7cmV0dXJufWlmKG51bGwhPT1hKXtPPSEwO3RyeXthKGUpfWZpbmFsbHl7Tz0hMX19fTtcbnZhciBWPWZ1bmN0aW9uKGEpe2lmKG51bGwhPT1LKXtFKFYpO3ZhciBiPWEtUCtTO2I8UyYmUjxTPyg4PmImJihiPTgpLFM9YjxSP1I6Yik6Uj1iO1A9YStTO0x8fChMPSEwLFUucG9zdE1lc3NhZ2Uodm9pZCAwKSl9ZWxzZSBOPSExfTtyPWZ1bmN0aW9uKGEsYil7Sz1hO009YjtPfHwwPmI/VS5wb3N0TWVzc2FnZSh2b2lkIDApOk58fChOPSEwLEUoVikpfTtxPWZ1bmN0aW9uKCl7Sz1udWxsO0w9ITE7TT0tMX19ZXhwb3J0cy51bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eT0xO2V4cG9ydHMudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHk9MjtleHBvcnRzLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5PTM7ZXhwb3J0cy51bnN0YWJsZV9JZGxlUHJpb3JpdHk9NTtleHBvcnRzLnVuc3RhYmxlX0xvd1ByaW9yaXR5PTQ7XG5leHBvcnRzLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eT1mdW5jdGlvbihhLGIpe3N3aXRjaChhKXtjYXNlIDE6Y2FzZSAyOmNhc2UgMzpjYXNlIDQ6Y2FzZSA1OmJyZWFrO2RlZmF1bHQ6YT0zfXZhciBkPWgsZT1rO2g9YTtrPWV4cG9ydHMudW5zdGFibGVfbm93KCk7dHJ5e3JldHVybiBiKCl9ZmluYWxseXtoPWQsaz1lLHYoKX19O1xuZXhwb3J0cy51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrPWZ1bmN0aW9uKGEsYil7dmFyIGQ9LTEhPT1rP2s6ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGImJm51bGwhPT1iJiZcIm51bWJlclwiPT09dHlwZW9mIGIudGltZW91dCliPWQrYi50aW1lb3V0O2Vsc2Ugc3dpdGNoKGgpe2Nhc2UgMTpiPWQrLTE7YnJlYWs7Y2FzZSAyOmI9ZCsyNTA7YnJlYWs7Y2FzZSA1OmI9ZCsxMDczNzQxODIzO2JyZWFrO2Nhc2UgNDpiPWQrMUU0O2JyZWFrO2RlZmF1bHQ6Yj1kKzVFM31hPXtjYWxsYmFjazphLHByaW9yaXR5TGV2ZWw6aCxleHBpcmF0aW9uVGltZTpiLG5leHQ6bnVsbCxwcmV2aW91czpudWxsfTtpZihudWxsPT09YyljPWEubmV4dD1hLnByZXZpb3VzPWEscCgpO2Vsc2V7ZD1udWxsO3ZhciBlPWM7ZG97aWYoZS5leHBpcmF0aW9uVGltZT5iKXtkPWU7YnJlYWt9ZT1lLm5leHR9d2hpbGUoZSE9PWMpO251bGw9PT1kP2Q9YzpkPT09YyYmKGM9YSxwKCkpO1xuYj1kLnByZXZpb3VzO2IubmV4dD1kLnByZXZpb3VzPWE7YS5uZXh0PWQ7YS5wcmV2aW91cz1ifXJldHVybiBhfTtleHBvcnRzLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrPWZ1bmN0aW9uKGEpe3ZhciBiPWEubmV4dDtpZihudWxsIT09Yil7aWYoYj09PWEpYz1udWxsO2Vsc2V7YT09PWMmJihjPWIpO3ZhciBkPWEucHJldmlvdXM7ZC5uZXh0PWI7Yi5wcmV2aW91cz1kfWEubmV4dD1hLnByZXZpb3VzPW51bGx9fTtleHBvcnRzLnVuc3RhYmxlX3dyYXBDYWxsYmFjaz1mdW5jdGlvbihhKXt2YXIgYj1oO3JldHVybiBmdW5jdGlvbigpe3ZhciBkPWgsZT1rO2g9YjtrPWV4cG9ydHMudW5zdGFibGVfbm93KCk7dHJ5e3JldHVybiBhLmFwcGx5KHRoaXMsYXJndW1lbnRzKX1maW5hbGx5e2g9ZCxrPWUsdigpfX19O2V4cG9ydHMudW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWw9ZnVuY3Rpb24oKXtyZXR1cm4gaH07XG5leHBvcnRzLnVuc3RhYmxlX3Nob3VsZFlpZWxkPWZ1bmN0aW9uKCl7cmV0dXJuIWYmJihudWxsIT09YyYmYy5leHBpcmF0aW9uVGltZTxsfHx3KCkpfTtleHBvcnRzLnVuc3RhYmxlX2NvbnRpbnVlRXhlY3V0aW9uPWZ1bmN0aW9uKCl7bnVsbCE9PWMmJnAoKX07ZXhwb3J0cy51bnN0YWJsZV9wYXVzZUV4ZWN1dGlvbj1mdW5jdGlvbigpe307ZXhwb3J0cy51bnN0YWJsZV9nZXRGaXJzdENhbGxiYWNrTm9kZT1mdW5jdGlvbigpe3JldHVybiBjfTtcbiIsInZhciBnO1xuXG4vLyBUaGlzIHdvcmtzIGluIG5vbi1zdHJpY3QgbW9kZVxuZyA9IChmdW5jdGlvbigpIHtcblx0cmV0dXJuIHRoaXM7XG59KSgpO1xuXG50cnkge1xuXHQvLyBUaGlzIHdvcmtzIGlmIGV2YWwgaXMgYWxsb3dlZCAoc2VlIENTUClcblx0ZyA9IGcgfHwgbmV3IEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKTtcbn0gY2F0Y2ggKGUpIHtcblx0Ly8gVGhpcyB3b3JrcyBpZiB0aGUgd2luZG93IHJlZmVyZW5jZSBpcyBhdmFpbGFibGVcblx0aWYgKHR5cGVvZiB3aW5kb3cgPT09IFwib2JqZWN0XCIpIGcgPSB3aW5kb3c7XG59XG5cbi8vIGcgY2FuIHN0aWxsIGJlIHVuZGVmaW5lZCwgYnV0IG5vdGhpbmcgdG8gZG8gYWJvdXQgaXQuLi5cbi8vIFdlIHJldHVybiB1bmRlZmluZWQsIGluc3RlYWQgb2Ygbm90aGluZyBoZXJlLCBzbyBpdCdzXG4vLyBlYXNpZXIgdG8gaGFuZGxlIHRoaXMgY2FzZS4gaWYoIWdsb2JhbCkgeyAuLi59XG5cbm1vZHVsZS5leHBvcnRzID0gZztcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSByZXF1aXJlKCcuL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldCcpO1xuXG5mdW5jdGlvbiBlbXB0eUZ1bmN0aW9uKCkge31cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbigpIHtcbiAgZnVuY3Rpb24gc2hpbShwcm9wcywgcHJvcE5hbWUsIGNvbXBvbmVudE5hbWUsIGxvY2F0aW9uLCBwcm9wRnVsbE5hbWUsIHNlY3JldCkge1xuICAgIGlmIChzZWNyZXQgPT09IFJlYWN0UHJvcFR5cGVzU2VjcmV0KSB7XG4gICAgICAvLyBJdCBpcyBzdGlsbCBzYWZlIHdoZW4gY2FsbGVkIGZyb20gUmVhY3QuXG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHZhciBlcnIgPSBuZXcgRXJyb3IoXG4gICAgICAnQ2FsbGluZyBQcm9wVHlwZXMgdmFsaWRhdG9ycyBkaXJlY3RseSBpcyBub3Qgc3VwcG9ydGVkIGJ5IHRoZSBgcHJvcC10eXBlc2AgcGFja2FnZS4gJyArXG4gICAgICAnVXNlIFByb3BUeXBlcy5jaGVja1Byb3BUeXBlcygpIHRvIGNhbGwgdGhlbS4gJyArXG4gICAgICAnUmVhZCBtb3JlIGF0IGh0dHA6Ly9mYi5tZS91c2UtY2hlY2stcHJvcC10eXBlcydcbiAgICApO1xuICAgIGVyci5uYW1lID0gJ0ludmFyaWFudCBWaW9sYXRpb24nO1xuICAgIHRocm93IGVycjtcbiAgfTtcbiAgc2hpbS5pc1JlcXVpcmVkID0gc2hpbTtcbiAgZnVuY3Rpb24gZ2V0U2hpbSgpIHtcbiAgICByZXR1cm4gc2hpbTtcbiAgfTtcbiAgLy8gSW1wb3J0YW50IVxuICAvLyBLZWVwIHRoaXMgbGlzdCBpbiBzeW5jIHdpdGggcHJvZHVjdGlvbiB2ZXJzaW9uIGluIGAuL2ZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzLmpzYC5cbiAgdmFyIFJlYWN0UHJvcFR5cGVzID0ge1xuICAgIGFycmF5OiBzaGltLFxuICAgIGJvb2w6IHNoaW0sXG4gICAgZnVuYzogc2hpbSxcbiAgICBudW1iZXI6IHNoaW0sXG4gICAgb2JqZWN0OiBzaGltLFxuICAgIHN0cmluZzogc2hpbSxcbiAgICBzeW1ib2w6IHNoaW0sXG5cbiAgICBhbnk6IHNoaW0sXG4gICAgYXJyYXlPZjogZ2V0U2hpbSxcbiAgICBlbGVtZW50OiBzaGltLFxuICAgIGluc3RhbmNlT2Y6IGdldFNoaW0sXG4gICAgbm9kZTogc2hpbSxcbiAgICBvYmplY3RPZjogZ2V0U2hpbSxcbiAgICBvbmVPZjogZ2V0U2hpbSxcbiAgICBvbmVPZlR5cGU6IGdldFNoaW0sXG4gICAgc2hhcGU6IGdldFNoaW0sXG4gICAgZXhhY3Q6IGdldFNoaW1cbiAgfTtcblxuICBSZWFjdFByb3BUeXBlcy5jaGVja1Byb3BUeXBlcyA9IGVtcHR5RnVuY3Rpb247XG4gIFJlYWN0UHJvcFR5cGVzLlByb3BUeXBlcyA9IFJlYWN0UHJvcFR5cGVzO1xuXG4gIHJldHVybiBSZWFjdFByb3BUeXBlcztcbn07XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gJ1NFQ1JFVF9ET19OT1RfUEFTU19USElTX09SX1lPVV9XSUxMX0JFX0ZJUkVEJztcblxubW9kdWxlLmV4cG9ydHMgPSBSZWFjdFByb3BUeXBlc1NlY3JldDtcbiIsIm1vZHVsZS5leHBvcnRzID0gQXJyYXkuaXNBcnJheSB8fCBmdW5jdGlvbiAoYXJyKSB7XG4gIHJldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoYXJyKSA9PSAnW29iamVjdCBBcnJheV0nO1xufTtcbiIsImZ1bmN0aW9uIGlzQWJzb2x1dGUocGF0aG5hbWUpIHtcbiAgcmV0dXJuIHBhdGhuYW1lLmNoYXJBdCgwKSA9PT0gJy8nO1xufVxuXG4vLyBBYm91dCAxLjV4IGZhc3RlciB0aGFuIHRoZSB0d28tYXJnIHZlcnNpb24gb2YgQXJyYXkjc3BsaWNlKClcbmZ1bmN0aW9uIHNwbGljZU9uZShsaXN0LCBpbmRleCkge1xuICBmb3IgKHZhciBpID0gaW5kZXgsIGsgPSBpICsgMSwgbiA9IGxpc3QubGVuZ3RoOyBrIDwgbjsgaSArPSAxLCBrICs9IDEpIHtcbiAgICBsaXN0W2ldID0gbGlzdFtrXTtcbiAgfVxuXG4gIGxpc3QucG9wKCk7XG59XG5cbi8vIFRoaXMgaW1wbGVtZW50YXRpb24gaXMgYmFzZWQgaGVhdmlseSBvbiBub2RlJ3MgdXJsLnBhcnNlXG5mdW5jdGlvbiByZXNvbHZlUGF0aG5hbWUodG8pIHtcbiAgdmFyIGZyb20gPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6ICcnO1xuXG4gIHZhciB0b1BhcnRzID0gdG8gJiYgdG8uc3BsaXQoJy8nKSB8fCBbXTtcbiAgdmFyIGZyb21QYXJ0cyA9IGZyb20gJiYgZnJvbS5zcGxpdCgnLycpIHx8IFtdO1xuXG4gIHZhciBpc1RvQWJzID0gdG8gJiYgaXNBYnNvbHV0ZSh0byk7XG4gIHZhciBpc0Zyb21BYnMgPSBmcm9tICYmIGlzQWJzb2x1dGUoZnJvbSk7XG4gIHZhciBtdXN0RW5kQWJzID0gaXNUb0FicyB8fCBpc0Zyb21BYnM7XG5cbiAgaWYgKHRvICYmIGlzQWJzb2x1dGUodG8pKSB7XG4gICAgLy8gdG8gaXMgYWJzb2x1dGVcbiAgICBmcm9tUGFydHMgPSB0b1BhcnRzO1xuICB9IGVsc2UgaWYgKHRvUGFydHMubGVuZ3RoKSB7XG4gICAgLy8gdG8gaXMgcmVsYXRpdmUsIGRyb3AgdGhlIGZpbGVuYW1lXG4gICAgZnJvbVBhcnRzLnBvcCgpO1xuICAgIGZyb21QYXJ0cyA9IGZyb21QYXJ0cy5jb25jYXQodG9QYXJ0cyk7XG4gIH1cblxuICBpZiAoIWZyb21QYXJ0cy5sZW5ndGgpIHJldHVybiAnLyc7XG5cbiAgdmFyIGhhc1RyYWlsaW5nU2xhc2ggPSB2b2lkIDA7XG4gIGlmIChmcm9tUGFydHMubGVuZ3RoKSB7XG4gICAgdmFyIGxhc3QgPSBmcm9tUGFydHNbZnJvbVBhcnRzLmxlbmd0aCAtIDFdO1xuICAgIGhhc1RyYWlsaW5nU2xhc2ggPSBsYXN0ID09PSAnLicgfHwgbGFzdCA9PT0gJy4uJyB8fCBsYXN0ID09PSAnJztcbiAgfSBlbHNlIHtcbiAgICBoYXNUcmFpbGluZ1NsYXNoID0gZmFsc2U7XG4gIH1cblxuICB2YXIgdXAgPSAwO1xuICBmb3IgKHZhciBpID0gZnJvbVBhcnRzLmxlbmd0aDsgaSA+PSAwOyBpLS0pIHtcbiAgICB2YXIgcGFydCA9IGZyb21QYXJ0c1tpXTtcblxuICAgIGlmIChwYXJ0ID09PSAnLicpIHtcbiAgICAgIHNwbGljZU9uZShmcm9tUGFydHMsIGkpO1xuICAgIH0gZWxzZSBpZiAocGFydCA9PT0gJy4uJykge1xuICAgICAgc3BsaWNlT25lKGZyb21QYXJ0cywgaSk7XG4gICAgICB1cCsrO1xuICAgIH0gZWxzZSBpZiAodXApIHtcbiAgICAgIHNwbGljZU9uZShmcm9tUGFydHMsIGkpO1xuICAgICAgdXAtLTtcbiAgICB9XG4gIH1cblxuICBpZiAoIW11c3RFbmRBYnMpIGZvciAoOyB1cC0tOyB1cCkge1xuICAgIGZyb21QYXJ0cy51bnNoaWZ0KCcuLicpO1xuICB9aWYgKG11c3RFbmRBYnMgJiYgZnJvbVBhcnRzWzBdICE9PSAnJyAmJiAoIWZyb21QYXJ0c1swXSB8fCAhaXNBYnNvbHV0ZShmcm9tUGFydHNbMF0pKSkgZnJvbVBhcnRzLnVuc2hpZnQoJycpO1xuXG4gIHZhciByZXN1bHQgPSBmcm9tUGFydHMuam9pbignLycpO1xuXG4gIGlmIChoYXNUcmFpbGluZ1NsYXNoICYmIHJlc3VsdC5zdWJzdHIoLTEpICE9PSAnLycpIHJlc3VsdCArPSAnLyc7XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgcmVzb2x2ZVBhdGhuYW1lOyIsInZhciBfdHlwZW9mID0gdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09IFwic3ltYm9sXCIgPyBmdW5jdGlvbiAob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9IDogZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajsgfTtcblxuZnVuY3Rpb24gdmFsdWVFcXVhbChhLCBiKSB7XG4gIGlmIChhID09PSBiKSByZXR1cm4gdHJ1ZTtcblxuICBpZiAoYSA9PSBudWxsIHx8IGIgPT0gbnVsbCkgcmV0dXJuIGZhbHNlO1xuXG4gIGlmIChBcnJheS5pc0FycmF5KGEpKSB7XG4gICAgcmV0dXJuIEFycmF5LmlzQXJyYXkoYikgJiYgYS5sZW5ndGggPT09IGIubGVuZ3RoICYmIGEuZXZlcnkoZnVuY3Rpb24gKGl0ZW0sIGluZGV4KSB7XG4gICAgICByZXR1cm4gdmFsdWVFcXVhbChpdGVtLCBiW2luZGV4XSk7XG4gICAgfSk7XG4gIH1cblxuICB2YXIgYVR5cGUgPSB0eXBlb2YgYSA9PT0gJ3VuZGVmaW5lZCcgPyAndW5kZWZpbmVkJyA6IF90eXBlb2YoYSk7XG4gIHZhciBiVHlwZSA9IHR5cGVvZiBiID09PSAndW5kZWZpbmVkJyA/ICd1bmRlZmluZWQnIDogX3R5cGVvZihiKTtcblxuICBpZiAoYVR5cGUgIT09IGJUeXBlKSByZXR1cm4gZmFsc2U7XG5cbiAgaWYgKGFUeXBlID09PSAnb2JqZWN0Jykge1xuICAgIHZhciBhVmFsdWUgPSBhLnZhbHVlT2YoKTtcbiAgICB2YXIgYlZhbHVlID0gYi52YWx1ZU9mKCk7XG5cbiAgICBpZiAoYVZhbHVlICE9PSBhIHx8IGJWYWx1ZSAhPT0gYikgcmV0dXJuIHZhbHVlRXF1YWwoYVZhbHVlLCBiVmFsdWUpO1xuXG4gICAgdmFyIGFLZXlzID0gT2JqZWN0LmtleXMoYSk7XG4gICAgdmFyIGJLZXlzID0gT2JqZWN0LmtleXMoYik7XG5cbiAgICBpZiAoYUtleXMubGVuZ3RoICE9PSBiS2V5cy5sZW5ndGgpIHJldHVybiBmYWxzZTtcblxuICAgIHJldHVybiBhS2V5cy5ldmVyeShmdW5jdGlvbiAoa2V5KSB7XG4gICAgICByZXR1cm4gdmFsdWVFcXVhbChhW2tleV0sIGJba2V5XSk7XG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4gZmFsc2U7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHZhbHVlRXF1YWw7IiwiZXhwb3J0IHZhciBhZGRMZWFkaW5nU2xhc2ggPSBmdW5jdGlvbiBhZGRMZWFkaW5nU2xhc2gocGF0aCkge1xuICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09ICcvJyA/IHBhdGggOiAnLycgKyBwYXRoO1xufTtcblxuZXhwb3J0IHZhciBzdHJpcExlYWRpbmdTbGFzaCA9IGZ1bmN0aW9uIHN0cmlwTGVhZGluZ1NsYXNoKHBhdGgpIHtcbiAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSAnLycgPyBwYXRoLnN1YnN0cigxKSA6IHBhdGg7XG59O1xuXG5leHBvcnQgdmFyIGhhc0Jhc2VuYW1lID0gZnVuY3Rpb24gaGFzQmFzZW5hbWUocGF0aCwgcHJlZml4KSB7XG4gIHJldHVybiBuZXcgUmVnRXhwKCdeJyArIHByZWZpeCArICcoXFxcXC98XFxcXD98I3wkKScsICdpJykudGVzdChwYXRoKTtcbn07XG5cbmV4cG9ydCB2YXIgc3RyaXBCYXNlbmFtZSA9IGZ1bmN0aW9uIHN0cmlwQmFzZW5hbWUocGF0aCwgcHJlZml4KSB7XG4gIHJldHVybiBoYXNCYXNlbmFtZShwYXRoLCBwcmVmaXgpID8gcGF0aC5zdWJzdHIocHJlZml4Lmxlbmd0aCkgOiBwYXRoO1xufTtcblxuZXhwb3J0IHZhciBzdHJpcFRyYWlsaW5nU2xhc2ggPSBmdW5jdGlvbiBzdHJpcFRyYWlsaW5nU2xhc2gocGF0aCkge1xuICByZXR1cm4gcGF0aC5jaGFyQXQocGF0aC5sZW5ndGggLSAxKSA9PT0gJy8nID8gcGF0aC5zbGljZSgwLCAtMSkgOiBwYXRoO1xufTtcblxuZXhwb3J0IHZhciBwYXJzZVBhdGggPSBmdW5jdGlvbiBwYXJzZVBhdGgocGF0aCkge1xuICB2YXIgcGF0aG5hbWUgPSBwYXRoIHx8ICcvJztcbiAgdmFyIHNlYXJjaCA9ICcnO1xuICB2YXIgaGFzaCA9ICcnO1xuXG4gIHZhciBoYXNoSW5kZXggPSBwYXRobmFtZS5pbmRleE9mKCcjJyk7XG4gIGlmIChoYXNoSW5kZXggIT09IC0xKSB7XG4gICAgaGFzaCA9IHBhdGhuYW1lLnN1YnN0cihoYXNoSW5kZXgpO1xuICAgIHBhdGhuYW1lID0gcGF0aG5hbWUuc3Vic3RyKDAsIGhhc2hJbmRleCk7XG4gIH1cblxuICB2YXIgc2VhcmNoSW5kZXggPSBwYXRobmFtZS5pbmRleE9mKCc/Jyk7XG4gIGlmIChzZWFyY2hJbmRleCAhPT0gLTEpIHtcbiAgICBzZWFyY2ggPSBwYXRobmFtZS5zdWJzdHIoc2VhcmNoSW5kZXgpO1xuICAgIHBhdGhuYW1lID0gcGF0aG5hbWUuc3Vic3RyKDAsIHNlYXJjaEluZGV4KTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgcGF0aG5hbWU6IHBhdGhuYW1lLFxuICAgIHNlYXJjaDogc2VhcmNoID09PSAnPycgPyAnJyA6IHNlYXJjaCxcbiAgICBoYXNoOiBoYXNoID09PSAnIycgPyAnJyA6IGhhc2hcbiAgfTtcbn07XG5cbmV4cG9ydCB2YXIgY3JlYXRlUGF0aCA9IGZ1bmN0aW9uIGNyZWF0ZVBhdGgobG9jYXRpb24pIHtcbiAgdmFyIHBhdGhuYW1lID0gbG9jYXRpb24ucGF0aG5hbWUsXG4gICAgICBzZWFyY2ggPSBsb2NhdGlvbi5zZWFyY2gsXG4gICAgICBoYXNoID0gbG9jYXRpb24uaGFzaDtcblxuXG4gIHZhciBwYXRoID0gcGF0aG5hbWUgfHwgJy8nO1xuXG4gIGlmIChzZWFyY2ggJiYgc2VhcmNoICE9PSAnPycpIHBhdGggKz0gc2VhcmNoLmNoYXJBdCgwKSA9PT0gJz8nID8gc2VhcmNoIDogJz8nICsgc2VhcmNoO1xuXG4gIGlmIChoYXNoICYmIGhhc2ggIT09ICcjJykgcGF0aCArPSBoYXNoLmNoYXJBdCgwKSA9PT0gJyMnID8gaGFzaCA6ICcjJyArIGhhc2g7XG5cbiAgcmV0dXJuIHBhdGg7XG59OyIsInZhciBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07XG5cbmltcG9ydCByZXNvbHZlUGF0aG5hbWUgZnJvbSAncmVzb2x2ZS1wYXRobmFtZSc7XG5pbXBvcnQgdmFsdWVFcXVhbCBmcm9tICd2YWx1ZS1lcXVhbCc7XG5pbXBvcnQgeyBwYXJzZVBhdGggfSBmcm9tICcuL1BhdGhVdGlscyc7XG5cbmV4cG9ydCB2YXIgY3JlYXRlTG9jYXRpb24gPSBmdW5jdGlvbiBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwga2V5LCBjdXJyZW50TG9jYXRpb24pIHtcbiAgdmFyIGxvY2F0aW9uID0gdm9pZCAwO1xuICBpZiAodHlwZW9mIHBhdGggPT09ICdzdHJpbmcnKSB7XG4gICAgLy8gVHdvLWFyZyBmb3JtOiBwdXNoKHBhdGgsIHN0YXRlKVxuICAgIGxvY2F0aW9uID0gcGFyc2VQYXRoKHBhdGgpO1xuICAgIGxvY2F0aW9uLnN0YXRlID0gc3RhdGU7XG4gIH0gZWxzZSB7XG4gICAgLy8gT25lLWFyZyBmb3JtOiBwdXNoKGxvY2F0aW9uKVxuICAgIGxvY2F0aW9uID0gX2V4dGVuZHMoe30sIHBhdGgpO1xuXG4gICAgaWYgKGxvY2F0aW9uLnBhdGhuYW1lID09PSB1bmRlZmluZWQpIGxvY2F0aW9uLnBhdGhuYW1lID0gJyc7XG5cbiAgICBpZiAobG9jYXRpb24uc2VhcmNoKSB7XG4gICAgICBpZiAobG9jYXRpb24uc2VhcmNoLmNoYXJBdCgwKSAhPT0gJz8nKSBsb2NhdGlvbi5zZWFyY2ggPSAnPycgKyBsb2NhdGlvbi5zZWFyY2g7XG4gICAgfSBlbHNlIHtcbiAgICAgIGxvY2F0aW9uLnNlYXJjaCA9ICcnO1xuICAgIH1cblxuICAgIGlmIChsb2NhdGlvbi5oYXNoKSB7XG4gICAgICBpZiAobG9jYXRpb24uaGFzaC5jaGFyQXQoMCkgIT09ICcjJykgbG9jYXRpb24uaGFzaCA9ICcjJyArIGxvY2F0aW9uLmhhc2g7XG4gICAgfSBlbHNlIHtcbiAgICAgIGxvY2F0aW9uLmhhc2ggPSAnJztcbiAgICB9XG5cbiAgICBpZiAoc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBsb2NhdGlvbi5zdGF0ZSA9PT0gdW5kZWZpbmVkKSBsb2NhdGlvbi5zdGF0ZSA9IHN0YXRlO1xuICB9XG5cbiAgdHJ5IHtcbiAgICBsb2NhdGlvbi5wYXRobmFtZSA9IGRlY29kZVVSSShsb2NhdGlvbi5wYXRobmFtZSk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBpZiAoZSBpbnN0YW5jZW9mIFVSSUVycm9yKSB7XG4gICAgICB0aHJvdyBuZXcgVVJJRXJyb3IoJ1BhdGhuYW1lIFwiJyArIGxvY2F0aW9uLnBhdGhuYW1lICsgJ1wiIGNvdWxkIG5vdCBiZSBkZWNvZGVkLiAnICsgJ1RoaXMgaXMgbGlrZWx5IGNhdXNlZCBieSBhbiBpbnZhbGlkIHBlcmNlbnQtZW5jb2RpbmcuJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRocm93IGU7XG4gICAgfVxuICB9XG5cbiAgaWYgKGtleSkgbG9jYXRpb24ua2V5ID0ga2V5O1xuXG4gIGlmIChjdXJyZW50TG9jYXRpb24pIHtcbiAgICAvLyBSZXNvbHZlIGluY29tcGxldGUvcmVsYXRpdmUgcGF0aG5hbWUgcmVsYXRpdmUgdG8gY3VycmVudCBsb2NhdGlvbi5cbiAgICBpZiAoIWxvY2F0aW9uLnBhdGhuYW1lKSB7XG4gICAgICBsb2NhdGlvbi5wYXRobmFtZSA9IGN1cnJlbnRMb2NhdGlvbi5wYXRobmFtZTtcbiAgICB9IGVsc2UgaWYgKGxvY2F0aW9uLnBhdGhuYW1lLmNoYXJBdCgwKSAhPT0gJy8nKSB7XG4gICAgICBsb2NhdGlvbi5wYXRobmFtZSA9IHJlc29sdmVQYXRobmFtZShsb2NhdGlvbi5wYXRobmFtZSwgY3VycmVudExvY2F0aW9uLnBhdGhuYW1lKTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgLy8gV2hlbiB0aGVyZSBpcyBubyBwcmlvciBsb2NhdGlvbiBhbmQgcGF0aG5hbWUgaXMgZW1wdHksIHNldCBpdCB0byAvXG4gICAgaWYgKCFsb2NhdGlvbi5wYXRobmFtZSkge1xuICAgICAgbG9jYXRpb24ucGF0aG5hbWUgPSAnLyc7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGxvY2F0aW9uO1xufTtcblxuZXhwb3J0IHZhciBsb2NhdGlvbnNBcmVFcXVhbCA9IGZ1bmN0aW9uIGxvY2F0aW9uc0FyZUVxdWFsKGEsIGIpIHtcbiAgcmV0dXJuIGEucGF0aG5hbWUgPT09IGIucGF0aG5hbWUgJiYgYS5zZWFyY2ggPT09IGIuc2VhcmNoICYmIGEuaGFzaCA9PT0gYi5oYXNoICYmIGEua2V5ID09PSBiLmtleSAmJiB2YWx1ZUVxdWFsKGEuc3RhdGUsIGIuc3RhdGUpO1xufTsiLCJpbXBvcnQgd2FybmluZyBmcm9tICd3YXJuaW5nJztcblxudmFyIGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyID0gZnVuY3Rpb24gY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIoKSB7XG4gIHZhciBwcm9tcHQgPSBudWxsO1xuXG4gIHZhciBzZXRQcm9tcHQgPSBmdW5jdGlvbiBzZXRQcm9tcHQobmV4dFByb21wdCkge1xuICAgIHdhcm5pbmcocHJvbXB0ID09IG51bGwsICdBIGhpc3Rvcnkgc3VwcG9ydHMgb25seSBvbmUgcHJvbXB0IGF0IGEgdGltZScpO1xuXG4gICAgcHJvbXB0ID0gbmV4dFByb21wdDtcblxuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAocHJvbXB0ID09PSBuZXh0UHJvbXB0KSBwcm9tcHQgPSBudWxsO1xuICAgIH07XG4gIH07XG5cbiAgdmFyIGNvbmZpcm1UcmFuc2l0aW9uVG8gPSBmdW5jdGlvbiBjb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGNhbGxiYWNrKSB7XG4gICAgLy8gVE9ETzogSWYgYW5vdGhlciB0cmFuc2l0aW9uIHN0YXJ0cyB3aGlsZSB3ZSdyZSBzdGlsbCBjb25maXJtaW5nXG4gICAgLy8gdGhlIHByZXZpb3VzIG9uZSwgd2UgbWF5IGVuZCB1cCBpbiBhIHdlaXJkIHN0YXRlLiBGaWd1cmUgb3V0IHRoZVxuICAgIC8vIGJlc3Qgd2F5IHRvIGhhbmRsZSB0aGlzLlxuICAgIGlmIChwcm9tcHQgIT0gbnVsbCkge1xuICAgICAgdmFyIHJlc3VsdCA9IHR5cGVvZiBwcm9tcHQgPT09ICdmdW5jdGlvbicgPyBwcm9tcHQobG9jYXRpb24sIGFjdGlvbikgOiBwcm9tcHQ7XG5cbiAgICAgIGlmICh0eXBlb2YgcmVzdWx0ID09PSAnc3RyaW5nJykge1xuICAgICAgICBpZiAodHlwZW9mIGdldFVzZXJDb25maXJtYXRpb24gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICBnZXRVc2VyQ29uZmlybWF0aW9uKHJlc3VsdCwgY2FsbGJhY2spO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHdhcm5pbmcoZmFsc2UsICdBIGhpc3RvcnkgbmVlZHMgYSBnZXRVc2VyQ29uZmlybWF0aW9uIGZ1bmN0aW9uIGluIG9yZGVyIHRvIHVzZSBhIHByb21wdCBtZXNzYWdlJyk7XG5cbiAgICAgICAgICBjYWxsYmFjayh0cnVlKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gUmV0dXJuIGZhbHNlIGZyb20gYSB0cmFuc2l0aW9uIGhvb2sgdG8gY2FuY2VsIHRoZSB0cmFuc2l0aW9uLlxuICAgICAgICBjYWxsYmFjayhyZXN1bHQgIT09IGZhbHNlKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgY2FsbGJhY2sodHJ1ZSk7XG4gICAgfVxuICB9O1xuXG4gIHZhciBsaXN0ZW5lcnMgPSBbXTtcblxuICB2YXIgYXBwZW5kTGlzdGVuZXIgPSBmdW5jdGlvbiBhcHBlbmRMaXN0ZW5lcihmbikge1xuICAgIHZhciBpc0FjdGl2ZSA9IHRydWU7XG5cbiAgICB2YXIgbGlzdGVuZXIgPSBmdW5jdGlvbiBsaXN0ZW5lcigpIHtcbiAgICAgIGlmIChpc0FjdGl2ZSkgZm4uYXBwbHkodW5kZWZpbmVkLCBhcmd1bWVudHMpO1xuICAgIH07XG5cbiAgICBsaXN0ZW5lcnMucHVzaChsaXN0ZW5lcik7XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgaXNBY3RpdmUgPSBmYWxzZTtcbiAgICAgIGxpc3RlbmVycyA9IGxpc3RlbmVycy5maWx0ZXIoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgICAgcmV0dXJuIGl0ZW0gIT09IGxpc3RlbmVyO1xuICAgICAgfSk7XG4gICAgfTtcbiAgfTtcblxuICB2YXIgbm90aWZ5TGlzdGVuZXJzID0gZnVuY3Rpb24gbm90aWZ5TGlzdGVuZXJzKCkge1xuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIGxpc3RlbmVycy5mb3JFYWNoKGZ1bmN0aW9uIChsaXN0ZW5lcikge1xuICAgICAgcmV0dXJuIGxpc3RlbmVyLmFwcGx5KHVuZGVmaW5lZCwgYXJncyk7XG4gICAgfSk7XG4gIH07XG5cbiAgcmV0dXJuIHtcbiAgICBzZXRQcm9tcHQ6IHNldFByb21wdCxcbiAgICBjb25maXJtVHJhbnNpdGlvblRvOiBjb25maXJtVHJhbnNpdGlvblRvLFxuICAgIGFwcGVuZExpc3RlbmVyOiBhcHBlbmRMaXN0ZW5lcixcbiAgICBub3RpZnlMaXN0ZW5lcnM6IG5vdGlmeUxpc3RlbmVyc1xuICB9O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXI7IiwiZXhwb3J0IHZhciBjYW5Vc2VET00gPSAhISh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB3aW5kb3cuZG9jdW1lbnQgJiYgd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQpO1xuXG5leHBvcnQgdmFyIGFkZEV2ZW50TGlzdGVuZXIgPSBmdW5jdGlvbiBhZGRFdmVudExpc3RlbmVyKG5vZGUsIGV2ZW50LCBsaXN0ZW5lcikge1xuICByZXR1cm4gbm9kZS5hZGRFdmVudExpc3RlbmVyID8gbm9kZS5hZGRFdmVudExpc3RlbmVyKGV2ZW50LCBsaXN0ZW5lciwgZmFsc2UpIDogbm9kZS5hdHRhY2hFdmVudCgnb24nICsgZXZlbnQsIGxpc3RlbmVyKTtcbn07XG5cbmV4cG9ydCB2YXIgcmVtb3ZlRXZlbnRMaXN0ZW5lciA9IGZ1bmN0aW9uIHJlbW92ZUV2ZW50TGlzdGVuZXIobm9kZSwgZXZlbnQsIGxpc3RlbmVyKSB7XG4gIHJldHVybiBub2RlLnJlbW92ZUV2ZW50TGlzdGVuZXIgPyBub2RlLnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZlbnQsIGxpc3RlbmVyLCBmYWxzZSkgOiBub2RlLmRldGFjaEV2ZW50KCdvbicgKyBldmVudCwgbGlzdGVuZXIpO1xufTtcblxuZXhwb3J0IHZhciBnZXRDb25maXJtYXRpb24gPSBmdW5jdGlvbiBnZXRDb25maXJtYXRpb24obWVzc2FnZSwgY2FsbGJhY2spIHtcbiAgcmV0dXJuIGNhbGxiYWNrKHdpbmRvdy5jb25maXJtKG1lc3NhZ2UpKTtcbn07IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tYWxlcnRcblxuLyoqXG4gKiBSZXR1cm5zIHRydWUgaWYgdGhlIEhUTUw1IGhpc3RvcnkgQVBJIGlzIHN1cHBvcnRlZC4gVGFrZW4gZnJvbSBNb2Rlcm5penIuXG4gKlxuICogaHR0cHM6Ly9naXRodWIuY29tL01vZGVybml6ci9Nb2Rlcm5penIvYmxvYi9tYXN0ZXIvTElDRU5TRVxuICogaHR0cHM6Ly9naXRodWIuY29tL01vZGVybml6ci9Nb2Rlcm5penIvYmxvYi9tYXN0ZXIvZmVhdHVyZS1kZXRlY3RzL2hpc3RvcnkuanNcbiAqIGNoYW5nZWQgdG8gYXZvaWQgZmFsc2UgbmVnYXRpdmVzIGZvciBXaW5kb3dzIFBob25lczogaHR0cHM6Ly9naXRodWIuY29tL3JlYWN0anMvcmVhY3Qtcm91dGVyL2lzc3Vlcy81ODZcbiAqL1xuZXhwb3J0IHZhciBzdXBwb3J0c0hpc3RvcnkgPSBmdW5jdGlvbiBzdXBwb3J0c0hpc3RvcnkoKSB7XG4gIHZhciB1YSA9IHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50O1xuXG4gIGlmICgodWEuaW5kZXhPZignQW5kcm9pZCAyLicpICE9PSAtMSB8fCB1YS5pbmRleE9mKCdBbmRyb2lkIDQuMCcpICE9PSAtMSkgJiYgdWEuaW5kZXhPZignTW9iaWxlIFNhZmFyaScpICE9PSAtMSAmJiB1YS5pbmRleE9mKCdDaHJvbWUnKSA9PT0gLTEgJiYgdWEuaW5kZXhPZignV2luZG93cyBQaG9uZScpID09PSAtMSkgcmV0dXJuIGZhbHNlO1xuXG4gIHJldHVybiB3aW5kb3cuaGlzdG9yeSAmJiAncHVzaFN0YXRlJyBpbiB3aW5kb3cuaGlzdG9yeTtcbn07XG5cbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIGJyb3dzZXIgZmlyZXMgcG9wc3RhdGUgb24gaGFzaCBjaGFuZ2UuXG4gKiBJRTEwIGFuZCBJRTExIGRvIG5vdC5cbiAqL1xuZXhwb3J0IHZhciBzdXBwb3J0c1BvcFN0YXRlT25IYXNoQ2hhbmdlID0gZnVuY3Rpb24gc3VwcG9ydHNQb3BTdGF0ZU9uSGFzaENoYW5nZSgpIHtcbiAgcmV0dXJuIHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoJ1RyaWRlbnQnKSA9PT0gLTE7XG59O1xuXG4vKipcbiAqIFJldHVybnMgZmFsc2UgaWYgdXNpbmcgZ28obikgd2l0aCBoYXNoIGhpc3RvcnkgY2F1c2VzIGEgZnVsbCBwYWdlIHJlbG9hZC5cbiAqL1xuZXhwb3J0IHZhciBzdXBwb3J0c0dvV2l0aG91dFJlbG9hZFVzaW5nSGFzaCA9IGZ1bmN0aW9uIHN1cHBvcnRzR29XaXRob3V0UmVsb2FkVXNpbmdIYXNoKCkge1xuICByZXR1cm4gd2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZignRmlyZWZveCcpID09PSAtMTtcbn07XG5cbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIGEgZ2l2ZW4gcG9wc3RhdGUgZXZlbnQgaXMgYW4gZXh0cmFuZW91cyBXZWJLaXQgZXZlbnQuXG4gKiBBY2NvdW50cyBmb3IgdGhlIGZhY3QgdGhhdCBDaHJvbWUgb24gaU9TIGZpcmVzIHJlYWwgcG9wc3RhdGUgZXZlbnRzXG4gKiBjb250YWluaW5nIHVuZGVmaW5lZCBzdGF0ZSB3aGVuIHByZXNzaW5nIHRoZSBiYWNrIGJ1dHRvbi5cbiAqL1xuZXhwb3J0IHZhciBpc0V4dHJhbmVvdXNQb3BzdGF0ZUV2ZW50ID0gZnVuY3Rpb24gaXNFeHRyYW5lb3VzUG9wc3RhdGVFdmVudChldmVudCkge1xuICByZXR1cm4gZXZlbnQuc3RhdGUgPT09IHVuZGVmaW5lZCAmJiBuYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoJ0NyaU9TJykgPT09IC0xO1xufTsiLCJ2YXIgX3R5cGVvZiA9IHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID09PSBcInN5bWJvbFwiID8gZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gdHlwZW9mIG9iajsgfSA6IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7IH07XG5cbnZhciBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07XG5cbmltcG9ydCB3YXJuaW5nIGZyb20gJ3dhcm5pbmcnO1xuaW1wb3J0IGludmFyaWFudCBmcm9tICdpbnZhcmlhbnQnO1xuaW1wb3J0IHsgY3JlYXRlTG9jYXRpb24gfSBmcm9tICcuL0xvY2F0aW9uVXRpbHMnO1xuaW1wb3J0IHsgYWRkTGVhZGluZ1NsYXNoLCBzdHJpcFRyYWlsaW5nU2xhc2gsIGhhc0Jhc2VuYW1lLCBzdHJpcEJhc2VuYW1lLCBjcmVhdGVQYXRoIH0gZnJvbSAnLi9QYXRoVXRpbHMnO1xuaW1wb3J0IGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyIGZyb20gJy4vY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXInO1xuaW1wb3J0IHsgY2FuVXNlRE9NLCBhZGRFdmVudExpc3RlbmVyLCByZW1vdmVFdmVudExpc3RlbmVyLCBnZXRDb25maXJtYXRpb24sIHN1cHBvcnRzSGlzdG9yeSwgc3VwcG9ydHNQb3BTdGF0ZU9uSGFzaENoYW5nZSwgaXNFeHRyYW5lb3VzUG9wc3RhdGVFdmVudCB9IGZyb20gJy4vRE9NVXRpbHMnO1xuXG52YXIgUG9wU3RhdGVFdmVudCA9ICdwb3BzdGF0ZSc7XG52YXIgSGFzaENoYW5nZUV2ZW50ID0gJ2hhc2hjaGFuZ2UnO1xuXG52YXIgZ2V0SGlzdG9yeVN0YXRlID0gZnVuY3Rpb24gZ2V0SGlzdG9yeVN0YXRlKCkge1xuICB0cnkge1xuICAgIHJldHVybiB3aW5kb3cuaGlzdG9yeS5zdGF0ZSB8fCB7fTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIC8vIElFIDExIHNvbWV0aW1lcyB0aHJvd3Mgd2hlbiBhY2Nlc3Npbmcgd2luZG93Lmhpc3Rvcnkuc3RhdGVcbiAgICAvLyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL1JlYWN0VHJhaW5pbmcvaGlzdG9yeS9wdWxsLzI4OVxuICAgIHJldHVybiB7fTtcbiAgfVxufTtcblxuLyoqXG4gKiBDcmVhdGVzIGEgaGlzdG9yeSBvYmplY3QgdGhhdCB1c2VzIHRoZSBIVE1MNSBoaXN0b3J5IEFQSSBpbmNsdWRpbmdcbiAqIHB1c2hTdGF0ZSwgcmVwbGFjZVN0YXRlLCBhbmQgdGhlIHBvcHN0YXRlIGV2ZW50LlxuICovXG52YXIgY3JlYXRlQnJvd3Nlckhpc3RvcnkgPSBmdW5jdGlvbiBjcmVhdGVCcm93c2VySGlzdG9yeSgpIHtcbiAgdmFyIHByb3BzID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiB7fTtcblxuICBpbnZhcmlhbnQoY2FuVXNlRE9NLCAnQnJvd3NlciBoaXN0b3J5IG5lZWRzIGEgRE9NJyk7XG5cbiAgdmFyIGdsb2JhbEhpc3RvcnkgPSB3aW5kb3cuaGlzdG9yeTtcbiAgdmFyIGNhblVzZUhpc3RvcnkgPSBzdXBwb3J0c0hpc3RvcnkoKTtcbiAgdmFyIG5lZWRzSGFzaENoYW5nZUxpc3RlbmVyID0gIXN1cHBvcnRzUG9wU3RhdGVPbkhhc2hDaGFuZ2UoKTtcblxuICB2YXIgX3Byb3BzJGZvcmNlUmVmcmVzaCA9IHByb3BzLmZvcmNlUmVmcmVzaCxcbiAgICAgIGZvcmNlUmVmcmVzaCA9IF9wcm9wcyRmb3JjZVJlZnJlc2ggPT09IHVuZGVmaW5lZCA/IGZhbHNlIDogX3Byb3BzJGZvcmNlUmVmcmVzaCxcbiAgICAgIF9wcm9wcyRnZXRVc2VyQ29uZmlybSA9IHByb3BzLmdldFVzZXJDb25maXJtYXRpb24sXG4gICAgICBnZXRVc2VyQ29uZmlybWF0aW9uID0gX3Byb3BzJGdldFVzZXJDb25maXJtID09PSB1bmRlZmluZWQgPyBnZXRDb25maXJtYXRpb24gOiBfcHJvcHMkZ2V0VXNlckNvbmZpcm0sXG4gICAgICBfcHJvcHMka2V5TGVuZ3RoID0gcHJvcHMua2V5TGVuZ3RoLFxuICAgICAga2V5TGVuZ3RoID0gX3Byb3BzJGtleUxlbmd0aCA9PT0gdW5kZWZpbmVkID8gNiA6IF9wcm9wcyRrZXlMZW5ndGg7XG5cbiAgdmFyIGJhc2VuYW1lID0gcHJvcHMuYmFzZW5hbWUgPyBzdHJpcFRyYWlsaW5nU2xhc2goYWRkTGVhZGluZ1NsYXNoKHByb3BzLmJhc2VuYW1lKSkgOiAnJztcblxuICB2YXIgZ2V0RE9NTG9jYXRpb24gPSBmdW5jdGlvbiBnZXRET01Mb2NhdGlvbihoaXN0b3J5U3RhdGUpIHtcbiAgICB2YXIgX3JlZiA9IGhpc3RvcnlTdGF0ZSB8fCB7fSxcbiAgICAgICAga2V5ID0gX3JlZi5rZXksXG4gICAgICAgIHN0YXRlID0gX3JlZi5zdGF0ZTtcblxuICAgIHZhciBfd2luZG93JGxvY2F0aW9uID0gd2luZG93LmxvY2F0aW9uLFxuICAgICAgICBwYXRobmFtZSA9IF93aW5kb3ckbG9jYXRpb24ucGF0aG5hbWUsXG4gICAgICAgIHNlYXJjaCA9IF93aW5kb3ckbG9jYXRpb24uc2VhcmNoLFxuICAgICAgICBoYXNoID0gX3dpbmRvdyRsb2NhdGlvbi5oYXNoO1xuXG5cbiAgICB2YXIgcGF0aCA9IHBhdGhuYW1lICsgc2VhcmNoICsgaGFzaDtcblxuICAgIHdhcm5pbmcoIWJhc2VuYW1lIHx8IGhhc0Jhc2VuYW1lKHBhdGgsIGJhc2VuYW1lKSwgJ1lvdSBhcmUgYXR0ZW1wdGluZyB0byB1c2UgYSBiYXNlbmFtZSBvbiBhIHBhZ2Ugd2hvc2UgVVJMIHBhdGggZG9lcyBub3QgYmVnaW4gJyArICd3aXRoIHRoZSBiYXNlbmFtZS4gRXhwZWN0ZWQgcGF0aCBcIicgKyBwYXRoICsgJ1wiIHRvIGJlZ2luIHdpdGggXCInICsgYmFzZW5hbWUgKyAnXCIuJyk7XG5cbiAgICBpZiAoYmFzZW5hbWUpIHBhdGggPSBzdHJpcEJhc2VuYW1lKHBhdGgsIGJhc2VuYW1lKTtcblxuICAgIHJldHVybiBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwga2V5KTtcbiAgfTtcblxuICB2YXIgY3JlYXRlS2V5ID0gZnVuY3Rpb24gY3JlYXRlS2V5KCkge1xuICAgIHJldHVybiBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHIoMiwga2V5TGVuZ3RoKTtcbiAgfTtcblxuICB2YXIgdHJhbnNpdGlvbk1hbmFnZXIgPSBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlcigpO1xuXG4gIHZhciBzZXRTdGF0ZSA9IGZ1bmN0aW9uIHNldFN0YXRlKG5leHRTdGF0ZSkge1xuICAgIF9leHRlbmRzKGhpc3RvcnksIG5leHRTdGF0ZSk7XG5cbiAgICBoaXN0b3J5Lmxlbmd0aCA9IGdsb2JhbEhpc3RvcnkubGVuZ3RoO1xuXG4gICAgdHJhbnNpdGlvbk1hbmFnZXIubm90aWZ5TGlzdGVuZXJzKGhpc3RvcnkubG9jYXRpb24sIGhpc3RvcnkuYWN0aW9uKTtcbiAgfTtcblxuICB2YXIgaGFuZGxlUG9wU3RhdGUgPSBmdW5jdGlvbiBoYW5kbGVQb3BTdGF0ZShldmVudCkge1xuICAgIC8vIElnbm9yZSBleHRyYW5lb3VzIHBvcHN0YXRlIGV2ZW50cyBpbiBXZWJLaXQuXG4gICAgaWYgKGlzRXh0cmFuZW91c1BvcHN0YXRlRXZlbnQoZXZlbnQpKSByZXR1cm47XG5cbiAgICBoYW5kbGVQb3AoZ2V0RE9NTG9jYXRpb24oZXZlbnQuc3RhdGUpKTtcbiAgfTtcblxuICB2YXIgaGFuZGxlSGFzaENoYW5nZSA9IGZ1bmN0aW9uIGhhbmRsZUhhc2hDaGFuZ2UoKSB7XG4gICAgaGFuZGxlUG9wKGdldERPTUxvY2F0aW9uKGdldEhpc3RvcnlTdGF0ZSgpKSk7XG4gIH07XG5cbiAgdmFyIGZvcmNlTmV4dFBvcCA9IGZhbHNlO1xuXG4gIHZhciBoYW5kbGVQb3AgPSBmdW5jdGlvbiBoYW5kbGVQb3AobG9jYXRpb24pIHtcbiAgICBpZiAoZm9yY2VOZXh0UG9wKSB7XG4gICAgICBmb3JjZU5leHRQb3AgPSBmYWxzZTtcbiAgICAgIHNldFN0YXRlKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBhY3Rpb24gPSAnUE9QJztcblxuICAgICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgICAgaWYgKG9rKSB7XG4gICAgICAgICAgc2V0U3RhdGUoeyBhY3Rpb246IGFjdGlvbiwgbG9jYXRpb246IGxvY2F0aW9uIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldmVydFBvcChsb2NhdGlvbik7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfTtcblxuICB2YXIgcmV2ZXJ0UG9wID0gZnVuY3Rpb24gcmV2ZXJ0UG9wKGZyb21Mb2NhdGlvbikge1xuICAgIHZhciB0b0xvY2F0aW9uID0gaGlzdG9yeS5sb2NhdGlvbjtcblxuICAgIC8vIFRPRE86IFdlIGNvdWxkIHByb2JhYmx5IG1ha2UgdGhpcyBtb3JlIHJlbGlhYmxlIGJ5XG4gICAgLy8ga2VlcGluZyBhIGxpc3Qgb2Yga2V5cyB3ZSd2ZSBzZWVuIGluIHNlc3Npb25TdG9yYWdlLlxuICAgIC8vIEluc3RlYWQsIHdlIGp1c3QgZGVmYXVsdCB0byAwIGZvciBrZXlzIHdlIGRvbid0IGtub3cuXG5cbiAgICB2YXIgdG9JbmRleCA9IGFsbEtleXMuaW5kZXhPZih0b0xvY2F0aW9uLmtleSk7XG5cbiAgICBpZiAodG9JbmRleCA9PT0gLTEpIHRvSW5kZXggPSAwO1xuXG4gICAgdmFyIGZyb21JbmRleCA9IGFsbEtleXMuaW5kZXhPZihmcm9tTG9jYXRpb24ua2V5KTtcblxuICAgIGlmIChmcm9tSW5kZXggPT09IC0xKSBmcm9tSW5kZXggPSAwO1xuXG4gICAgdmFyIGRlbHRhID0gdG9JbmRleCAtIGZyb21JbmRleDtcblxuICAgIGlmIChkZWx0YSkge1xuICAgICAgZm9yY2VOZXh0UG9wID0gdHJ1ZTtcbiAgICAgIGdvKGRlbHRhKTtcbiAgICB9XG4gIH07XG5cbiAgdmFyIGluaXRpYWxMb2NhdGlvbiA9IGdldERPTUxvY2F0aW9uKGdldEhpc3RvcnlTdGF0ZSgpKTtcbiAgdmFyIGFsbEtleXMgPSBbaW5pdGlhbExvY2F0aW9uLmtleV07XG5cbiAgLy8gUHVibGljIGludGVyZmFjZVxuXG4gIHZhciBjcmVhdGVIcmVmID0gZnVuY3Rpb24gY3JlYXRlSHJlZihsb2NhdGlvbikge1xuICAgIHJldHVybiBiYXNlbmFtZSArIGNyZWF0ZVBhdGgobG9jYXRpb24pO1xuICB9O1xuXG4gIHZhciBwdXNoID0gZnVuY3Rpb24gcHVzaChwYXRoLCBzdGF0ZSkge1xuICAgIHdhcm5pbmcoISgodHlwZW9mIHBhdGggPT09ICd1bmRlZmluZWQnID8gJ3VuZGVmaW5lZCcgOiBfdHlwZW9mKHBhdGgpKSA9PT0gJ29iamVjdCcgJiYgcGF0aC5zdGF0ZSAhPT0gdW5kZWZpbmVkICYmIHN0YXRlICE9PSB1bmRlZmluZWQpLCAnWW91IHNob3VsZCBhdm9pZCBwcm92aWRpbmcgYSAybmQgc3RhdGUgYXJndW1lbnQgdG8gcHVzaCB3aGVuIHRoZSAxc3QgJyArICdhcmd1bWVudCBpcyBhIGxvY2F0aW9uLWxpa2Ugb2JqZWN0IHRoYXQgYWxyZWFkeSBoYXMgc3RhdGU7IGl0IGlzIGlnbm9yZWQnKTtcblxuICAgIHZhciBhY3Rpb24gPSAnUFVTSCc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGNyZWF0ZUtleSgpLCBoaXN0b3J5LmxvY2F0aW9uKTtcblxuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG5cbiAgICAgIHZhciBocmVmID0gY3JlYXRlSHJlZihsb2NhdGlvbik7XG4gICAgICB2YXIga2V5ID0gbG9jYXRpb24ua2V5LFxuICAgICAgICAgIHN0YXRlID0gbG9jYXRpb24uc3RhdGU7XG5cblxuICAgICAgaWYgKGNhblVzZUhpc3RvcnkpIHtcbiAgICAgICAgZ2xvYmFsSGlzdG9yeS5wdXNoU3RhdGUoeyBrZXk6IGtleSwgc3RhdGU6IHN0YXRlIH0sIG51bGwsIGhyZWYpO1xuXG4gICAgICAgIGlmIChmb3JjZVJlZnJlc2gpIHtcbiAgICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IGhyZWY7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdmFyIHByZXZJbmRleCA9IGFsbEtleXMuaW5kZXhPZihoaXN0b3J5LmxvY2F0aW9uLmtleSk7XG4gICAgICAgICAgdmFyIG5leHRLZXlzID0gYWxsS2V5cy5zbGljZSgwLCBwcmV2SW5kZXggPT09IC0xID8gMCA6IHByZXZJbmRleCArIDEpO1xuXG4gICAgICAgICAgbmV4dEtleXMucHVzaChsb2NhdGlvbi5rZXkpO1xuICAgICAgICAgIGFsbEtleXMgPSBuZXh0S2V5cztcblxuICAgICAgICAgIHNldFN0YXRlKHsgYWN0aW9uOiBhY3Rpb24sIGxvY2F0aW9uOiBsb2NhdGlvbiB9KTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgd2FybmluZyhzdGF0ZSA9PT0gdW5kZWZpbmVkLCAnQnJvd3NlciBoaXN0b3J5IGNhbm5vdCBwdXNoIHN0YXRlIGluIGJyb3dzZXJzIHRoYXQgZG8gbm90IHN1cHBvcnQgSFRNTDUgaGlzdG9yeScpO1xuXG4gICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gaHJlZjtcbiAgICAgIH1cbiAgICB9KTtcbiAgfTtcblxuICB2YXIgcmVwbGFjZSA9IGZ1bmN0aW9uIHJlcGxhY2UocGF0aCwgc3RhdGUpIHtcbiAgICB3YXJuaW5nKCEoKHR5cGVvZiBwYXRoID09PSAndW5kZWZpbmVkJyA/ICd1bmRlZmluZWQnIDogX3R5cGVvZihwYXRoKSkgPT09ICdvYmplY3QnICYmIHBhdGguc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBzdGF0ZSAhPT0gdW5kZWZpbmVkKSwgJ1lvdSBzaG91bGQgYXZvaWQgcHJvdmlkaW5nIGEgMm5kIHN0YXRlIGFyZ3VtZW50IHRvIHJlcGxhY2Ugd2hlbiB0aGUgMXN0ICcgKyAnYXJndW1lbnQgaXMgYSBsb2NhdGlvbi1saWtlIG9iamVjdCB0aGF0IGFscmVhZHkgaGFzIHN0YXRlOyBpdCBpcyBpZ25vcmVkJyk7XG5cbiAgICB2YXIgYWN0aW9uID0gJ1JFUExBQ0UnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBjcmVhdGVLZXkoKSwgaGlzdG9yeS5sb2NhdGlvbik7XG5cbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuXG4gICAgICB2YXIgaHJlZiA9IGNyZWF0ZUhyZWYobG9jYXRpb24pO1xuICAgICAgdmFyIGtleSA9IGxvY2F0aW9uLmtleSxcbiAgICAgICAgICBzdGF0ZSA9IGxvY2F0aW9uLnN0YXRlO1xuXG5cbiAgICAgIGlmIChjYW5Vc2VIaXN0b3J5KSB7XG4gICAgICAgIGdsb2JhbEhpc3RvcnkucmVwbGFjZVN0YXRlKHsga2V5OiBrZXksIHN0YXRlOiBzdGF0ZSB9LCBudWxsLCBocmVmKTtcblxuICAgICAgICBpZiAoZm9yY2VSZWZyZXNoKSB7XG4gICAgICAgICAgd2luZG93LmxvY2F0aW9uLnJlcGxhY2UoaHJlZik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdmFyIHByZXZJbmRleCA9IGFsbEtleXMuaW5kZXhPZihoaXN0b3J5LmxvY2F0aW9uLmtleSk7XG5cbiAgICAgICAgICBpZiAocHJldkluZGV4ICE9PSAtMSkgYWxsS2V5c1twcmV2SW5kZXhdID0gbG9jYXRpb24ua2V5O1xuXG4gICAgICAgICAgc2V0U3RhdGUoeyBhY3Rpb246IGFjdGlvbiwgbG9jYXRpb246IGxvY2F0aW9uIH0pO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB3YXJuaW5nKHN0YXRlID09PSB1bmRlZmluZWQsICdCcm93c2VyIGhpc3RvcnkgY2Fubm90IHJlcGxhY2Ugc3RhdGUgaW4gYnJvd3NlcnMgdGhhdCBkbyBub3Qgc3VwcG9ydCBIVE1MNSBoaXN0b3J5Jyk7XG5cbiAgICAgICAgd2luZG93LmxvY2F0aW9uLnJlcGxhY2UoaHJlZik7XG4gICAgICB9XG4gICAgfSk7XG4gIH07XG5cbiAgdmFyIGdvID0gZnVuY3Rpb24gZ28obikge1xuICAgIGdsb2JhbEhpc3RvcnkuZ28obik7XG4gIH07XG5cbiAgdmFyIGdvQmFjayA9IGZ1bmN0aW9uIGdvQmFjaygpIHtcbiAgICByZXR1cm4gZ28oLTEpO1xuICB9O1xuXG4gIHZhciBnb0ZvcndhcmQgPSBmdW5jdGlvbiBnb0ZvcndhcmQoKSB7XG4gICAgcmV0dXJuIGdvKDEpO1xuICB9O1xuXG4gIHZhciBsaXN0ZW5lckNvdW50ID0gMDtcblxuICB2YXIgY2hlY2tET01MaXN0ZW5lcnMgPSBmdW5jdGlvbiBjaGVja0RPTUxpc3RlbmVycyhkZWx0YSkge1xuICAgIGxpc3RlbmVyQ291bnQgKz0gZGVsdGE7XG5cbiAgICBpZiAobGlzdGVuZXJDb3VudCA9PT0gMSkge1xuICAgICAgYWRkRXZlbnRMaXN0ZW5lcih3aW5kb3csIFBvcFN0YXRlRXZlbnQsIGhhbmRsZVBvcFN0YXRlKTtcblxuICAgICAgaWYgKG5lZWRzSGFzaENoYW5nZUxpc3RlbmVyKSBhZGRFdmVudExpc3RlbmVyKHdpbmRvdywgSGFzaENoYW5nZUV2ZW50LCBoYW5kbGVIYXNoQ2hhbmdlKTtcbiAgICB9IGVsc2UgaWYgKGxpc3RlbmVyQ291bnQgPT09IDApIHtcbiAgICAgIHJlbW92ZUV2ZW50TGlzdGVuZXIod2luZG93LCBQb3BTdGF0ZUV2ZW50LCBoYW5kbGVQb3BTdGF0ZSk7XG5cbiAgICAgIGlmIChuZWVkc0hhc2hDaGFuZ2VMaXN0ZW5lcikgcmVtb3ZlRXZlbnRMaXN0ZW5lcih3aW5kb3csIEhhc2hDaGFuZ2VFdmVudCwgaGFuZGxlSGFzaENoYW5nZSk7XG4gICAgfVxuICB9O1xuXG4gIHZhciBpc0Jsb2NrZWQgPSBmYWxzZTtcblxuICB2YXIgYmxvY2sgPSBmdW5jdGlvbiBibG9jaygpIHtcbiAgICB2YXIgcHJvbXB0ID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiBmYWxzZTtcblxuICAgIHZhciB1bmJsb2NrID0gdHJhbnNpdGlvbk1hbmFnZXIuc2V0UHJvbXB0KHByb21wdCk7XG5cbiAgICBpZiAoIWlzQmxvY2tlZCkge1xuICAgICAgY2hlY2tET01MaXN0ZW5lcnMoMSk7XG4gICAgICBpc0Jsb2NrZWQgPSB0cnVlO1xuICAgIH1cblxuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAoaXNCbG9ja2VkKSB7XG4gICAgICAgIGlzQmxvY2tlZCA9IGZhbHNlO1xuICAgICAgICBjaGVja0RPTUxpc3RlbmVycygtMSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB1bmJsb2NrKCk7XG4gICAgfTtcbiAgfTtcblxuICB2YXIgbGlzdGVuID0gZnVuY3Rpb24gbGlzdGVuKGxpc3RlbmVyKSB7XG4gICAgdmFyIHVubGlzdGVuID0gdHJhbnNpdGlvbk1hbmFnZXIuYXBwZW5kTGlzdGVuZXIobGlzdGVuZXIpO1xuICAgIGNoZWNrRE9NTGlzdGVuZXJzKDEpO1xuXG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKC0xKTtcbiAgICAgIHVubGlzdGVuKCk7XG4gICAgfTtcbiAgfTtcblxuICB2YXIgaGlzdG9yeSA9IHtcbiAgICBsZW5ndGg6IGdsb2JhbEhpc3RvcnkubGVuZ3RoLFxuICAgIGFjdGlvbjogJ1BPUCcsXG4gICAgbG9jYXRpb246IGluaXRpYWxMb2NhdGlvbixcbiAgICBjcmVhdGVIcmVmOiBjcmVhdGVIcmVmLFxuICAgIHB1c2g6IHB1c2gsXG4gICAgcmVwbGFjZTogcmVwbGFjZSxcbiAgICBnbzogZ28sXG4gICAgZ29CYWNrOiBnb0JhY2ssXG4gICAgZ29Gb3J3YXJkOiBnb0ZvcndhcmQsXG4gICAgYmxvY2s6IGJsb2NrLFxuICAgIGxpc3RlbjogbGlzdGVuXG4gIH07XG5cbiAgcmV0dXJuIGhpc3Rvcnk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBjcmVhdGVCcm93c2VySGlzdG9yeTsiLCJ2YXIgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9O1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbmltcG9ydCB3YXJuaW5nIGZyb20gXCJ3YXJuaW5nXCI7XG5pbXBvcnQgaW52YXJpYW50IGZyb20gXCJpbnZhcmlhbnRcIjtcbmltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSBcInByb3AtdHlwZXNcIjtcblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgcHV0dGluZyBoaXN0b3J5IG9uIGNvbnRleHQuXG4gKi9cblxudmFyIFJvdXRlciA9IGZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0cyhSb3V0ZXIsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIFJvdXRlcigpIHtcbiAgICB2YXIgX3RlbXAsIF90aGlzLCBfcmV0O1xuXG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFJvdXRlcik7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICByZXR1cm4gX3JldCA9IChfdGVtcCA9IChfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9SZWFjdCRDb21wb25lbnQuY2FsbC5hcHBseShfUmVhY3QkQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KGFyZ3MpKSksIF90aGlzKSwgX3RoaXMuc3RhdGUgPSB7XG4gICAgICBtYXRjaDogX3RoaXMuY29tcHV0ZU1hdGNoKF90aGlzLnByb3BzLmhpc3RvcnkubG9jYXRpb24ucGF0aG5hbWUpXG4gICAgfSwgX3RlbXApLCBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihfdGhpcywgX3JldCk7XG4gIH1cblxuICBSb3V0ZXIucHJvdG90eXBlLmdldENoaWxkQ29udGV4dCA9IGZ1bmN0aW9uIGdldENoaWxkQ29udGV4dCgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgcm91dGVyOiBfZXh0ZW5kcyh7fSwgdGhpcy5jb250ZXh0LnJvdXRlciwge1xuICAgICAgICBoaXN0b3J5OiB0aGlzLnByb3BzLmhpc3RvcnksXG4gICAgICAgIHJvdXRlOiB7XG4gICAgICAgICAgbG9jYXRpb246IHRoaXMucHJvcHMuaGlzdG9yeS5sb2NhdGlvbixcbiAgICAgICAgICBtYXRjaDogdGhpcy5zdGF0ZS5tYXRjaFxuICAgICAgICB9XG4gICAgICB9KVxuICAgIH07XG4gIH07XG5cbiAgUm91dGVyLnByb3RvdHlwZS5jb21wdXRlTWF0Y2ggPSBmdW5jdGlvbiBjb21wdXRlTWF0Y2gocGF0aG5hbWUpIHtcbiAgICByZXR1cm4ge1xuICAgICAgcGF0aDogXCIvXCIsXG4gICAgICB1cmw6IFwiL1wiLFxuICAgICAgcGFyYW1zOiB7fSxcbiAgICAgIGlzRXhhY3Q6IHBhdGhuYW1lID09PSBcIi9cIlxuICAgIH07XG4gIH07XG5cbiAgUm91dGVyLnByb3RvdHlwZS5jb21wb25lbnRXaWxsTW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsTW91bnQoKSB7XG4gICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICB2YXIgX3Byb3BzID0gdGhpcy5wcm9wcyxcbiAgICAgICAgY2hpbGRyZW4gPSBfcHJvcHMuY2hpbGRyZW4sXG4gICAgICAgIGhpc3RvcnkgPSBfcHJvcHMuaGlzdG9yeTtcblxuXG4gICAgaW52YXJpYW50KGNoaWxkcmVuID09IG51bGwgfHwgUmVhY3QuQ2hpbGRyZW4uY291bnQoY2hpbGRyZW4pID09PSAxLCBcIkEgPFJvdXRlcj4gbWF5IGhhdmUgb25seSBvbmUgY2hpbGQgZWxlbWVudFwiKTtcblxuICAgIC8vIERvIHRoaXMgaGVyZSBzbyB3ZSBjYW4gc2V0U3RhdGUgd2hlbiBhIDxSZWRpcmVjdD4gY2hhbmdlcyB0aGVcbiAgICAvLyBsb2NhdGlvbiBpbiBjb21wb25lbnRXaWxsTW91bnQuIFRoaXMgaGFwcGVucyBlLmcuIHdoZW4gZG9pbmdcbiAgICAvLyBzZXJ2ZXIgcmVuZGVyaW5nIHVzaW5nIGEgPFN0YXRpY1JvdXRlcj4uXG4gICAgdGhpcy51bmxpc3RlbiA9IGhpc3RvcnkubGlzdGVuKGZ1bmN0aW9uICgpIHtcbiAgICAgIF90aGlzMi5zZXRTdGF0ZSh7XG4gICAgICAgIG1hdGNoOiBfdGhpczIuY29tcHV0ZU1hdGNoKGhpc3RvcnkubG9jYXRpb24ucGF0aG5hbWUpXG4gICAgICB9KTtcbiAgICB9KTtcbiAgfTtcblxuICBSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKG5leHRQcm9wcykge1xuICAgIHdhcm5pbmcodGhpcy5wcm9wcy5oaXN0b3J5ID09PSBuZXh0UHJvcHMuaGlzdG9yeSwgXCJZb3UgY2Fubm90IGNoYW5nZSA8Um91dGVyIGhpc3Rvcnk+XCIpO1xuICB9O1xuXG4gIFJvdXRlci5wcm90b3R5cGUuY29tcG9uZW50V2lsbFVubW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICB0aGlzLnVubGlzdGVuKCk7XG4gIH07XG5cbiAgUm91dGVyLnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgdmFyIGNoaWxkcmVuID0gdGhpcy5wcm9wcy5jaGlsZHJlbjtcblxuICAgIHJldHVybiBjaGlsZHJlbiA/IFJlYWN0LkNoaWxkcmVuLm9ubHkoY2hpbGRyZW4pIDogbnVsbDtcbiAgfTtcblxuICByZXR1cm4gUm91dGVyO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5Sb3V0ZXIucHJvcFR5cGVzID0ge1xuICBoaXN0b3J5OiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsXG4gIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZVxufTtcblJvdXRlci5jb250ZXh0VHlwZXMgPSB7XG4gIHJvdXRlcjogUHJvcFR5cGVzLm9iamVjdFxufTtcblJvdXRlci5jaGlsZENvbnRleHRUeXBlcyA9IHtcbiAgcm91dGVyOiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWRcbn07XG5cblxuZXhwb3J0IGRlZmF1bHQgUm91dGVyOyIsInZhciBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07XG5cbmltcG9ydCB3YXJuaW5nIGZyb20gJ3dhcm5pbmcnO1xuaW1wb3J0IGludmFyaWFudCBmcm9tICdpbnZhcmlhbnQnO1xuaW1wb3J0IHsgY3JlYXRlTG9jYXRpb24sIGxvY2F0aW9uc0FyZUVxdWFsIH0gZnJvbSAnLi9Mb2NhdGlvblV0aWxzJztcbmltcG9ydCB7IGFkZExlYWRpbmdTbGFzaCwgc3RyaXBMZWFkaW5nU2xhc2gsIHN0cmlwVHJhaWxpbmdTbGFzaCwgaGFzQmFzZW5hbWUsIHN0cmlwQmFzZW5hbWUsIGNyZWF0ZVBhdGggfSBmcm9tICcuL1BhdGhVdGlscyc7XG5pbXBvcnQgY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIgZnJvbSAnLi9jcmVhdGVUcmFuc2l0aW9uTWFuYWdlcic7XG5pbXBvcnQgeyBjYW5Vc2VET00sIGFkZEV2ZW50TGlzdGVuZXIsIHJlbW92ZUV2ZW50TGlzdGVuZXIsIGdldENvbmZpcm1hdGlvbiwgc3VwcG9ydHNHb1dpdGhvdXRSZWxvYWRVc2luZ0hhc2ggfSBmcm9tICcuL0RPTVV0aWxzJztcblxudmFyIEhhc2hDaGFuZ2VFdmVudCA9ICdoYXNoY2hhbmdlJztcblxudmFyIEhhc2hQYXRoQ29kZXJzID0ge1xuICBoYXNoYmFuZzoge1xuICAgIGVuY29kZVBhdGg6IGZ1bmN0aW9uIGVuY29kZVBhdGgocGF0aCkge1xuICAgICAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSAnIScgPyBwYXRoIDogJyEvJyArIHN0cmlwTGVhZGluZ1NsYXNoKHBhdGgpO1xuICAgIH0sXG4gICAgZGVjb2RlUGF0aDogZnVuY3Rpb24gZGVjb2RlUGF0aChwYXRoKSB7XG4gICAgICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09ICchJyA/IHBhdGguc3Vic3RyKDEpIDogcGF0aDtcbiAgICB9XG4gIH0sXG4gIG5vc2xhc2g6IHtcbiAgICBlbmNvZGVQYXRoOiBzdHJpcExlYWRpbmdTbGFzaCxcbiAgICBkZWNvZGVQYXRoOiBhZGRMZWFkaW5nU2xhc2hcbiAgfSxcbiAgc2xhc2g6IHtcbiAgICBlbmNvZGVQYXRoOiBhZGRMZWFkaW5nU2xhc2gsXG4gICAgZGVjb2RlUGF0aDogYWRkTGVhZGluZ1NsYXNoXG4gIH1cbn07XG5cbnZhciBnZXRIYXNoUGF0aCA9IGZ1bmN0aW9uIGdldEhhc2hQYXRoKCkge1xuICAvLyBXZSBjYW4ndCB1c2Ugd2luZG93LmxvY2F0aW9uLmhhc2ggaGVyZSBiZWNhdXNlIGl0J3Mgbm90XG4gIC8vIGNvbnNpc3RlbnQgYWNyb3NzIGJyb3dzZXJzIC0gRmlyZWZveCB3aWxsIHByZS1kZWNvZGUgaXQhXG4gIHZhciBocmVmID0gd2luZG93LmxvY2F0aW9uLmhyZWY7XG4gIHZhciBoYXNoSW5kZXggPSBocmVmLmluZGV4T2YoJyMnKTtcbiAgcmV0dXJuIGhhc2hJbmRleCA9PT0gLTEgPyAnJyA6IGhyZWYuc3Vic3RyaW5nKGhhc2hJbmRleCArIDEpO1xufTtcblxudmFyIHB1c2hIYXNoUGF0aCA9IGZ1bmN0aW9uIHB1c2hIYXNoUGF0aChwYXRoKSB7XG4gIHJldHVybiB3aW5kb3cubG9jYXRpb24uaGFzaCA9IHBhdGg7XG59O1xuXG52YXIgcmVwbGFjZUhhc2hQYXRoID0gZnVuY3Rpb24gcmVwbGFjZUhhc2hQYXRoKHBhdGgpIHtcbiAgdmFyIGhhc2hJbmRleCA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmLmluZGV4T2YoJyMnKTtcblxuICB3aW5kb3cubG9jYXRpb24ucmVwbGFjZSh3aW5kb3cubG9jYXRpb24uaHJlZi5zbGljZSgwLCBoYXNoSW5kZXggPj0gMCA/IGhhc2hJbmRleCA6IDApICsgJyMnICsgcGF0aCk7XG59O1xuXG52YXIgY3JlYXRlSGFzaEhpc3RvcnkgPSBmdW5jdGlvbiBjcmVhdGVIYXNoSGlzdG9yeSgpIHtcbiAgdmFyIHByb3BzID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiB7fTtcblxuICBpbnZhcmlhbnQoY2FuVXNlRE9NLCAnSGFzaCBoaXN0b3J5IG5lZWRzIGEgRE9NJyk7XG5cbiAgdmFyIGdsb2JhbEhpc3RvcnkgPSB3aW5kb3cuaGlzdG9yeTtcbiAgdmFyIGNhbkdvV2l0aG91dFJlbG9hZCA9IHN1cHBvcnRzR29XaXRob3V0UmVsb2FkVXNpbmdIYXNoKCk7XG5cbiAgdmFyIF9wcm9wcyRnZXRVc2VyQ29uZmlybSA9IHByb3BzLmdldFVzZXJDb25maXJtYXRpb24sXG4gICAgICBnZXRVc2VyQ29uZmlybWF0aW9uID0gX3Byb3BzJGdldFVzZXJDb25maXJtID09PSB1bmRlZmluZWQgPyBnZXRDb25maXJtYXRpb24gOiBfcHJvcHMkZ2V0VXNlckNvbmZpcm0sXG4gICAgICBfcHJvcHMkaGFzaFR5cGUgPSBwcm9wcy5oYXNoVHlwZSxcbiAgICAgIGhhc2hUeXBlID0gX3Byb3BzJGhhc2hUeXBlID09PSB1bmRlZmluZWQgPyAnc2xhc2gnIDogX3Byb3BzJGhhc2hUeXBlO1xuXG4gIHZhciBiYXNlbmFtZSA9IHByb3BzLmJhc2VuYW1lID8gc3RyaXBUcmFpbGluZ1NsYXNoKGFkZExlYWRpbmdTbGFzaChwcm9wcy5iYXNlbmFtZSkpIDogJyc7XG5cbiAgdmFyIF9IYXNoUGF0aENvZGVycyRoYXNoVCA9IEhhc2hQYXRoQ29kZXJzW2hhc2hUeXBlXSxcbiAgICAgIGVuY29kZVBhdGggPSBfSGFzaFBhdGhDb2RlcnMkaGFzaFQuZW5jb2RlUGF0aCxcbiAgICAgIGRlY29kZVBhdGggPSBfSGFzaFBhdGhDb2RlcnMkaGFzaFQuZGVjb2RlUGF0aDtcblxuXG4gIHZhciBnZXRET01Mb2NhdGlvbiA9IGZ1bmN0aW9uIGdldERPTUxvY2F0aW9uKCkge1xuICAgIHZhciBwYXRoID0gZGVjb2RlUGF0aChnZXRIYXNoUGF0aCgpKTtcblxuICAgIHdhcm5pbmcoIWJhc2VuYW1lIHx8IGhhc0Jhc2VuYW1lKHBhdGgsIGJhc2VuYW1lKSwgJ1lvdSBhcmUgYXR0ZW1wdGluZyB0byB1c2UgYSBiYXNlbmFtZSBvbiBhIHBhZ2Ugd2hvc2UgVVJMIHBhdGggZG9lcyBub3QgYmVnaW4gJyArICd3aXRoIHRoZSBiYXNlbmFtZS4gRXhwZWN0ZWQgcGF0aCBcIicgKyBwYXRoICsgJ1wiIHRvIGJlZ2luIHdpdGggXCInICsgYmFzZW5hbWUgKyAnXCIuJyk7XG5cbiAgICBpZiAoYmFzZW5hbWUpIHBhdGggPSBzdHJpcEJhc2VuYW1lKHBhdGgsIGJhc2VuYW1lKTtcblxuICAgIHJldHVybiBjcmVhdGVMb2NhdGlvbihwYXRoKTtcbiAgfTtcblxuICB2YXIgdHJhbnNpdGlvbk1hbmFnZXIgPSBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlcigpO1xuXG4gIHZhciBzZXRTdGF0ZSA9IGZ1bmN0aW9uIHNldFN0YXRlKG5leHRTdGF0ZSkge1xuICAgIF9leHRlbmRzKGhpc3RvcnksIG5leHRTdGF0ZSk7XG5cbiAgICBoaXN0b3J5Lmxlbmd0aCA9IGdsb2JhbEhpc3RvcnkubGVuZ3RoO1xuXG4gICAgdHJhbnNpdGlvbk1hbmFnZXIubm90aWZ5TGlzdGVuZXJzKGhpc3RvcnkubG9jYXRpb24sIGhpc3RvcnkuYWN0aW9uKTtcbiAgfTtcblxuICB2YXIgZm9yY2VOZXh0UG9wID0gZmFsc2U7XG4gIHZhciBpZ25vcmVQYXRoID0gbnVsbDtcblxuICB2YXIgaGFuZGxlSGFzaENoYW5nZSA9IGZ1bmN0aW9uIGhhbmRsZUhhc2hDaGFuZ2UoKSB7XG4gICAgdmFyIHBhdGggPSBnZXRIYXNoUGF0aCgpO1xuICAgIHZhciBlbmNvZGVkUGF0aCA9IGVuY29kZVBhdGgocGF0aCk7XG5cbiAgICBpZiAocGF0aCAhPT0gZW5jb2RlZFBhdGgpIHtcbiAgICAgIC8vIEVuc3VyZSB3ZSBhbHdheXMgaGF2ZSBhIHByb3Blcmx5LWVuY29kZWQgaGFzaC5cbiAgICAgIHJlcGxhY2VIYXNoUGF0aChlbmNvZGVkUGF0aCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBsb2NhdGlvbiA9IGdldERPTUxvY2F0aW9uKCk7XG4gICAgICB2YXIgcHJldkxvY2F0aW9uID0gaGlzdG9yeS5sb2NhdGlvbjtcblxuICAgICAgaWYgKCFmb3JjZU5leHRQb3AgJiYgbG9jYXRpb25zQXJlRXF1YWwocHJldkxvY2F0aW9uLCBsb2NhdGlvbikpIHJldHVybjsgLy8gQSBoYXNoY2hhbmdlIGRvZXNuJ3QgYWx3YXlzID09IGxvY2F0aW9uIGNoYW5nZS5cblxuICAgICAgaWYgKGlnbm9yZVBhdGggPT09IGNyZWF0ZVBhdGgobG9jYXRpb24pKSByZXR1cm47IC8vIElnbm9yZSB0aGlzIGNoYW5nZTsgd2UgYWxyZWFkeSBzZXRTdGF0ZSBpbiBwdXNoL3JlcGxhY2UuXG5cbiAgICAgIGlnbm9yZVBhdGggPSBudWxsO1xuXG4gICAgICBoYW5kbGVQb3AobG9jYXRpb24pO1xuICAgIH1cbiAgfTtcblxuICB2YXIgaGFuZGxlUG9wID0gZnVuY3Rpb24gaGFuZGxlUG9wKGxvY2F0aW9uKSB7XG4gICAgaWYgKGZvcmNlTmV4dFBvcCkge1xuICAgICAgZm9yY2VOZXh0UG9wID0gZmFsc2U7XG4gICAgICBzZXRTdGF0ZSgpO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgYWN0aW9uID0gJ1BPUCc7XG5cbiAgICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICAgIGlmIChvaykge1xuICAgICAgICAgIHNldFN0YXRlKHsgYWN0aW9uOiBhY3Rpb24sIGxvY2F0aW9uOiBsb2NhdGlvbiB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXZlcnRQb3AobG9jYXRpb24pO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH07XG5cbiAgdmFyIHJldmVydFBvcCA9IGZ1bmN0aW9uIHJldmVydFBvcChmcm9tTG9jYXRpb24pIHtcbiAgICB2YXIgdG9Mb2NhdGlvbiA9IGhpc3RvcnkubG9jYXRpb247XG5cbiAgICAvLyBUT0RPOiBXZSBjb3VsZCBwcm9iYWJseSBtYWtlIHRoaXMgbW9yZSByZWxpYWJsZSBieVxuICAgIC8vIGtlZXBpbmcgYSBsaXN0IG9mIHBhdGhzIHdlJ3ZlIHNlZW4gaW4gc2Vzc2lvblN0b3JhZ2UuXG4gICAgLy8gSW5zdGVhZCwgd2UganVzdCBkZWZhdWx0IHRvIDAgZm9yIHBhdGhzIHdlIGRvbid0IGtub3cuXG5cbiAgICB2YXIgdG9JbmRleCA9IGFsbFBhdGhzLmxhc3RJbmRleE9mKGNyZWF0ZVBhdGgodG9Mb2NhdGlvbikpO1xuXG4gICAgaWYgKHRvSW5kZXggPT09IC0xKSB0b0luZGV4ID0gMDtcblxuICAgIHZhciBmcm9tSW5kZXggPSBhbGxQYXRocy5sYXN0SW5kZXhPZihjcmVhdGVQYXRoKGZyb21Mb2NhdGlvbikpO1xuXG4gICAgaWYgKGZyb21JbmRleCA9PT0gLTEpIGZyb21JbmRleCA9IDA7XG5cbiAgICB2YXIgZGVsdGEgPSB0b0luZGV4IC0gZnJvbUluZGV4O1xuXG4gICAgaWYgKGRlbHRhKSB7XG4gICAgICBmb3JjZU5leHRQb3AgPSB0cnVlO1xuICAgICAgZ28oZGVsdGEpO1xuICAgIH1cbiAgfTtcblxuICAvLyBFbnN1cmUgdGhlIGhhc2ggaXMgZW5jb2RlZCBwcm9wZXJseSBiZWZvcmUgZG9pbmcgYW55dGhpbmcgZWxzZS5cbiAgdmFyIHBhdGggPSBnZXRIYXNoUGF0aCgpO1xuICB2YXIgZW5jb2RlZFBhdGggPSBlbmNvZGVQYXRoKHBhdGgpO1xuXG4gIGlmIChwYXRoICE9PSBlbmNvZGVkUGF0aCkgcmVwbGFjZUhhc2hQYXRoKGVuY29kZWRQYXRoKTtcblxuICB2YXIgaW5pdGlhbExvY2F0aW9uID0gZ2V0RE9NTG9jYXRpb24oKTtcbiAgdmFyIGFsbFBhdGhzID0gW2NyZWF0ZVBhdGgoaW5pdGlhbExvY2F0aW9uKV07XG5cbiAgLy8gUHVibGljIGludGVyZmFjZVxuXG4gIHZhciBjcmVhdGVIcmVmID0gZnVuY3Rpb24gY3JlYXRlSHJlZihsb2NhdGlvbikge1xuICAgIHJldHVybiAnIycgKyBlbmNvZGVQYXRoKGJhc2VuYW1lICsgY3JlYXRlUGF0aChsb2NhdGlvbikpO1xuICB9O1xuXG4gIHZhciBwdXNoID0gZnVuY3Rpb24gcHVzaChwYXRoLCBzdGF0ZSkge1xuICAgIHdhcm5pbmcoc3RhdGUgPT09IHVuZGVmaW5lZCwgJ0hhc2ggaGlzdG9yeSBjYW5ub3QgcHVzaCBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpO1xuXG4gICAgdmFyIGFjdGlvbiA9ICdQVVNIJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaGlzdG9yeS5sb2NhdGlvbik7XG5cbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuXG4gICAgICB2YXIgcGF0aCA9IGNyZWF0ZVBhdGgobG9jYXRpb24pO1xuICAgICAgdmFyIGVuY29kZWRQYXRoID0gZW5jb2RlUGF0aChiYXNlbmFtZSArIHBhdGgpO1xuICAgICAgdmFyIGhhc2hDaGFuZ2VkID0gZ2V0SGFzaFBhdGgoKSAhPT0gZW5jb2RlZFBhdGg7XG5cbiAgICAgIGlmIChoYXNoQ2hhbmdlZCkge1xuICAgICAgICAvLyBXZSBjYW5ub3QgdGVsbCBpZiBhIGhhc2hjaGFuZ2Ugd2FzIGNhdXNlZCBieSBhIFBVU0gsIHNvIHdlJ2RcbiAgICAgICAgLy8gcmF0aGVyIHNldFN0YXRlIGhlcmUgYW5kIGlnbm9yZSB0aGUgaGFzaGNoYW5nZS4gVGhlIGNhdmVhdCBoZXJlXG4gICAgICAgIC8vIGlzIHRoYXQgb3RoZXIgaGFzaCBoaXN0b3JpZXMgaW4gdGhlIHBhZ2Ugd2lsbCBjb25zaWRlciBpdCBhIFBPUC5cbiAgICAgICAgaWdub3JlUGF0aCA9IHBhdGg7XG4gICAgICAgIHB1c2hIYXNoUGF0aChlbmNvZGVkUGF0aCk7XG5cbiAgICAgICAgdmFyIHByZXZJbmRleCA9IGFsbFBhdGhzLmxhc3RJbmRleE9mKGNyZWF0ZVBhdGgoaGlzdG9yeS5sb2NhdGlvbikpO1xuICAgICAgICB2YXIgbmV4dFBhdGhzID0gYWxsUGF0aHMuc2xpY2UoMCwgcHJldkluZGV4ID09PSAtMSA/IDAgOiBwcmV2SW5kZXggKyAxKTtcblxuICAgICAgICBuZXh0UGF0aHMucHVzaChwYXRoKTtcbiAgICAgICAgYWxsUGF0aHMgPSBuZXh0UGF0aHM7XG5cbiAgICAgICAgc2V0U3RhdGUoeyBhY3Rpb246IGFjdGlvbiwgbG9jYXRpb246IGxvY2F0aW9uIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgd2FybmluZyhmYWxzZSwgJ0hhc2ggaGlzdG9yeSBjYW5ub3QgUFVTSCB0aGUgc2FtZSBwYXRoOyBhIG5ldyBlbnRyeSB3aWxsIG5vdCBiZSBhZGRlZCB0byB0aGUgaGlzdG9yeSBzdGFjaycpO1xuXG4gICAgICAgIHNldFN0YXRlKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH07XG5cbiAgdmFyIHJlcGxhY2UgPSBmdW5jdGlvbiByZXBsYWNlKHBhdGgsIHN0YXRlKSB7XG4gICAgd2FybmluZyhzdGF0ZSA9PT0gdW5kZWZpbmVkLCAnSGFzaCBoaXN0b3J5IGNhbm5vdCByZXBsYWNlIHN0YXRlOyBpdCBpcyBpZ25vcmVkJyk7XG5cbiAgICB2YXIgYWN0aW9uID0gJ1JFUExBQ0UnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBoaXN0b3J5LmxvY2F0aW9uKTtcblxuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG5cbiAgICAgIHZhciBwYXRoID0gY3JlYXRlUGF0aChsb2NhdGlvbik7XG4gICAgICB2YXIgZW5jb2RlZFBhdGggPSBlbmNvZGVQYXRoKGJhc2VuYW1lICsgcGF0aCk7XG4gICAgICB2YXIgaGFzaENoYW5nZWQgPSBnZXRIYXNoUGF0aCgpICE9PSBlbmNvZGVkUGF0aDtcblxuICAgICAgaWYgKGhhc2hDaGFuZ2VkKSB7XG4gICAgICAgIC8vIFdlIGNhbm5vdCB0ZWxsIGlmIGEgaGFzaGNoYW5nZSB3YXMgY2F1c2VkIGJ5IGEgUkVQTEFDRSwgc28gd2UnZFxuICAgICAgICAvLyByYXRoZXIgc2V0U3RhdGUgaGVyZSBhbmQgaWdub3JlIHRoZSBoYXNoY2hhbmdlLiBUaGUgY2F2ZWF0IGhlcmVcbiAgICAgICAgLy8gaXMgdGhhdCBvdGhlciBoYXNoIGhpc3RvcmllcyBpbiB0aGUgcGFnZSB3aWxsIGNvbnNpZGVyIGl0IGEgUE9QLlxuICAgICAgICBpZ25vcmVQYXRoID0gcGF0aDtcbiAgICAgICAgcmVwbGFjZUhhc2hQYXRoKGVuY29kZWRQYXRoKTtcbiAgICAgIH1cblxuICAgICAgdmFyIHByZXZJbmRleCA9IGFsbFBhdGhzLmluZGV4T2YoY3JlYXRlUGF0aChoaXN0b3J5LmxvY2F0aW9uKSk7XG5cbiAgICAgIGlmIChwcmV2SW5kZXggIT09IC0xKSBhbGxQYXRoc1twcmV2SW5kZXhdID0gcGF0aDtcblxuICAgICAgc2V0U3RhdGUoeyBhY3Rpb246IGFjdGlvbiwgbG9jYXRpb246IGxvY2F0aW9uIH0pO1xuICAgIH0pO1xuICB9O1xuXG4gIHZhciBnbyA9IGZ1bmN0aW9uIGdvKG4pIHtcbiAgICB3YXJuaW5nKGNhbkdvV2l0aG91dFJlbG9hZCwgJ0hhc2ggaGlzdG9yeSBnbyhuKSBjYXVzZXMgYSBmdWxsIHBhZ2UgcmVsb2FkIGluIHRoaXMgYnJvd3NlcicpO1xuXG4gICAgZ2xvYmFsSGlzdG9yeS5nbyhuKTtcbiAgfTtcblxuICB2YXIgZ29CYWNrID0gZnVuY3Rpb24gZ29CYWNrKCkge1xuICAgIHJldHVybiBnbygtMSk7XG4gIH07XG5cbiAgdmFyIGdvRm9yd2FyZCA9IGZ1bmN0aW9uIGdvRm9yd2FyZCgpIHtcbiAgICByZXR1cm4gZ28oMSk7XG4gIH07XG5cbiAgdmFyIGxpc3RlbmVyQ291bnQgPSAwO1xuXG4gIHZhciBjaGVja0RPTUxpc3RlbmVycyA9IGZ1bmN0aW9uIGNoZWNrRE9NTGlzdGVuZXJzKGRlbHRhKSB7XG4gICAgbGlzdGVuZXJDb3VudCArPSBkZWx0YTtcblxuICAgIGlmIChsaXN0ZW5lckNvdW50ID09PSAxKSB7XG4gICAgICBhZGRFdmVudExpc3RlbmVyKHdpbmRvdywgSGFzaENoYW5nZUV2ZW50LCBoYW5kbGVIYXNoQ2hhbmdlKTtcbiAgICB9IGVsc2UgaWYgKGxpc3RlbmVyQ291bnQgPT09IDApIHtcbiAgICAgIHJlbW92ZUV2ZW50TGlzdGVuZXIod2luZG93LCBIYXNoQ2hhbmdlRXZlbnQsIGhhbmRsZUhhc2hDaGFuZ2UpO1xuICAgIH1cbiAgfTtcblxuICB2YXIgaXNCbG9ja2VkID0gZmFsc2U7XG5cbiAgdmFyIGJsb2NrID0gZnVuY3Rpb24gYmxvY2soKSB7XG4gICAgdmFyIHByb21wdCA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogZmFsc2U7XG5cbiAgICB2YXIgdW5ibG9jayA9IHRyYW5zaXRpb25NYW5hZ2VyLnNldFByb21wdChwcm9tcHQpO1xuXG4gICAgaWYgKCFpc0Jsb2NrZWQpIHtcbiAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKDEpO1xuICAgICAgaXNCbG9ja2VkID0gdHJ1ZTtcbiAgICB9XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKGlzQmxvY2tlZCkge1xuICAgICAgICBpc0Jsb2NrZWQgPSBmYWxzZTtcbiAgICAgICAgY2hlY2tET01MaXN0ZW5lcnMoLTEpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdW5ibG9jaygpO1xuICAgIH07XG4gIH07XG5cbiAgdmFyIGxpc3RlbiA9IGZ1bmN0aW9uIGxpc3RlbihsaXN0ZW5lcikge1xuICAgIHZhciB1bmxpc3RlbiA9IHRyYW5zaXRpb25NYW5hZ2VyLmFwcGVuZExpc3RlbmVyKGxpc3RlbmVyKTtcbiAgICBjaGVja0RPTUxpc3RlbmVycygxKTtcblxuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBjaGVja0RPTUxpc3RlbmVycygtMSk7XG4gICAgICB1bmxpc3RlbigpO1xuICAgIH07XG4gIH07XG5cbiAgdmFyIGhpc3RvcnkgPSB7XG4gICAgbGVuZ3RoOiBnbG9iYWxIaXN0b3J5Lmxlbmd0aCxcbiAgICBhY3Rpb246ICdQT1AnLFxuICAgIGxvY2F0aW9uOiBpbml0aWFsTG9jYXRpb24sXG4gICAgY3JlYXRlSHJlZjogY3JlYXRlSHJlZixcbiAgICBwdXNoOiBwdXNoLFxuICAgIHJlcGxhY2U6IHJlcGxhY2UsXG4gICAgZ286IGdvLFxuICAgIGdvQmFjazogZ29CYWNrLFxuICAgIGdvRm9yd2FyZDogZ29Gb3J3YXJkLFxuICAgIGJsb2NrOiBibG9jayxcbiAgICBsaXN0ZW46IGxpc3RlblxuICB9O1xuXG4gIHJldHVybiBoaXN0b3J5O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY3JlYXRlSGFzaEhpc3Rvcnk7IiwidmFyIF90eXBlb2YgPSB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gXCJzeW1ib2xcIiA/IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIHR5cGVvZiBvYmo7IH0gOiBmdW5jdGlvbiAob2JqKSB7IHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqOyB9O1xuXG52YXIgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9O1xuXG5pbXBvcnQgd2FybmluZyBmcm9tICd3YXJuaW5nJztcbmltcG9ydCB7IGNyZWF0ZVBhdGggfSBmcm9tICcuL1BhdGhVdGlscyc7XG5pbXBvcnQgeyBjcmVhdGVMb2NhdGlvbiB9IGZyb20gJy4vTG9jYXRpb25VdGlscyc7XG5pbXBvcnQgY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIgZnJvbSAnLi9jcmVhdGVUcmFuc2l0aW9uTWFuYWdlcic7XG5cbnZhciBjbGFtcCA9IGZ1bmN0aW9uIGNsYW1wKG4sIGxvd2VyQm91bmQsIHVwcGVyQm91bmQpIHtcbiAgcmV0dXJuIE1hdGgubWluKE1hdGgubWF4KG4sIGxvd2VyQm91bmQpLCB1cHBlckJvdW5kKTtcbn07XG5cbi8qKlxuICogQ3JlYXRlcyBhIGhpc3Rvcnkgb2JqZWN0IHRoYXQgc3RvcmVzIGxvY2F0aW9ucyBpbiBtZW1vcnkuXG4gKi9cbnZhciBjcmVhdGVNZW1vcnlIaXN0b3J5ID0gZnVuY3Rpb24gY3JlYXRlTWVtb3J5SGlzdG9yeSgpIHtcbiAgdmFyIHByb3BzID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiB7fTtcbiAgdmFyIGdldFVzZXJDb25maXJtYXRpb24gPSBwcm9wcy5nZXRVc2VyQ29uZmlybWF0aW9uLFxuICAgICAgX3Byb3BzJGluaXRpYWxFbnRyaWVzID0gcHJvcHMuaW5pdGlhbEVudHJpZXMsXG4gICAgICBpbml0aWFsRW50cmllcyA9IF9wcm9wcyRpbml0aWFsRW50cmllcyA9PT0gdW5kZWZpbmVkID8gWycvJ10gOiBfcHJvcHMkaW5pdGlhbEVudHJpZXMsXG4gICAgICBfcHJvcHMkaW5pdGlhbEluZGV4ID0gcHJvcHMuaW5pdGlhbEluZGV4LFxuICAgICAgaW5pdGlhbEluZGV4ID0gX3Byb3BzJGluaXRpYWxJbmRleCA9PT0gdW5kZWZpbmVkID8gMCA6IF9wcm9wcyRpbml0aWFsSW5kZXgsXG4gICAgICBfcHJvcHMka2V5TGVuZ3RoID0gcHJvcHMua2V5TGVuZ3RoLFxuICAgICAga2V5TGVuZ3RoID0gX3Byb3BzJGtleUxlbmd0aCA9PT0gdW5kZWZpbmVkID8gNiA6IF9wcm9wcyRrZXlMZW5ndGg7XG5cblxuICB2YXIgdHJhbnNpdGlvbk1hbmFnZXIgPSBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlcigpO1xuXG4gIHZhciBzZXRTdGF0ZSA9IGZ1bmN0aW9uIHNldFN0YXRlKG5leHRTdGF0ZSkge1xuICAgIF9leHRlbmRzKGhpc3RvcnksIG5leHRTdGF0ZSk7XG5cbiAgICBoaXN0b3J5Lmxlbmd0aCA9IGhpc3RvcnkuZW50cmllcy5sZW5ndGg7XG5cbiAgICB0cmFuc2l0aW9uTWFuYWdlci5ub3RpZnlMaXN0ZW5lcnMoaGlzdG9yeS5sb2NhdGlvbiwgaGlzdG9yeS5hY3Rpb24pO1xuICB9O1xuXG4gIHZhciBjcmVhdGVLZXkgPSBmdW5jdGlvbiBjcmVhdGVLZXkoKSB7XG4gICAgcmV0dXJuIE1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cigyLCBrZXlMZW5ndGgpO1xuICB9O1xuXG4gIHZhciBpbmRleCA9IGNsYW1wKGluaXRpYWxJbmRleCwgMCwgaW5pdGlhbEVudHJpZXMubGVuZ3RoIC0gMSk7XG4gIHZhciBlbnRyaWVzID0gaW5pdGlhbEVudHJpZXMubWFwKGZ1bmN0aW9uIChlbnRyeSkge1xuICAgIHJldHVybiB0eXBlb2YgZW50cnkgPT09ICdzdHJpbmcnID8gY3JlYXRlTG9jYXRpb24oZW50cnksIHVuZGVmaW5lZCwgY3JlYXRlS2V5KCkpIDogY3JlYXRlTG9jYXRpb24oZW50cnksIHVuZGVmaW5lZCwgZW50cnkua2V5IHx8IGNyZWF0ZUtleSgpKTtcbiAgfSk7XG5cbiAgLy8gUHVibGljIGludGVyZmFjZVxuXG4gIHZhciBjcmVhdGVIcmVmID0gY3JlYXRlUGF0aDtcblxuICB2YXIgcHVzaCA9IGZ1bmN0aW9uIHB1c2gocGF0aCwgc3RhdGUpIHtcbiAgICB3YXJuaW5nKCEoKHR5cGVvZiBwYXRoID09PSAndW5kZWZpbmVkJyA/ICd1bmRlZmluZWQnIDogX3R5cGVvZihwYXRoKSkgPT09ICdvYmplY3QnICYmIHBhdGguc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBzdGF0ZSAhPT0gdW5kZWZpbmVkKSwgJ1lvdSBzaG91bGQgYXZvaWQgcHJvdmlkaW5nIGEgMm5kIHN0YXRlIGFyZ3VtZW50IHRvIHB1c2ggd2hlbiB0aGUgMXN0ICcgKyAnYXJndW1lbnQgaXMgYSBsb2NhdGlvbi1saWtlIG9iamVjdCB0aGF0IGFscmVhZHkgaGFzIHN0YXRlOyBpdCBpcyBpZ25vcmVkJyk7XG5cbiAgICB2YXIgYWN0aW9uID0gJ1BVU0gnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBjcmVhdGVLZXkoKSwgaGlzdG9yeS5sb2NhdGlvbik7XG5cbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuXG4gICAgICB2YXIgcHJldkluZGV4ID0gaGlzdG9yeS5pbmRleDtcbiAgICAgIHZhciBuZXh0SW5kZXggPSBwcmV2SW5kZXggKyAxO1xuXG4gICAgICB2YXIgbmV4dEVudHJpZXMgPSBoaXN0b3J5LmVudHJpZXMuc2xpY2UoMCk7XG4gICAgICBpZiAobmV4dEVudHJpZXMubGVuZ3RoID4gbmV4dEluZGV4KSB7XG4gICAgICAgIG5leHRFbnRyaWVzLnNwbGljZShuZXh0SW5kZXgsIG5leHRFbnRyaWVzLmxlbmd0aCAtIG5leHRJbmRleCwgbG9jYXRpb24pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbmV4dEVudHJpZXMucHVzaChsb2NhdGlvbik7XG4gICAgICB9XG5cbiAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvbixcbiAgICAgICAgaW5kZXg6IG5leHRJbmRleCxcbiAgICAgICAgZW50cmllczogbmV4dEVudHJpZXNcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9O1xuXG4gIHZhciByZXBsYWNlID0gZnVuY3Rpb24gcmVwbGFjZShwYXRoLCBzdGF0ZSkge1xuICAgIHdhcm5pbmcoISgodHlwZW9mIHBhdGggPT09ICd1bmRlZmluZWQnID8gJ3VuZGVmaW5lZCcgOiBfdHlwZW9mKHBhdGgpKSA9PT0gJ29iamVjdCcgJiYgcGF0aC5zdGF0ZSAhPT0gdW5kZWZpbmVkICYmIHN0YXRlICE9PSB1bmRlZmluZWQpLCAnWW91IHNob3VsZCBhdm9pZCBwcm92aWRpbmcgYSAybmQgc3RhdGUgYXJndW1lbnQgdG8gcmVwbGFjZSB3aGVuIHRoZSAxc3QgJyArICdhcmd1bWVudCBpcyBhIGxvY2F0aW9uLWxpa2Ugb2JqZWN0IHRoYXQgYWxyZWFkeSBoYXMgc3RhdGU7IGl0IGlzIGlnbm9yZWQnKTtcblxuICAgIHZhciBhY3Rpb24gPSAnUkVQTEFDRSc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGNyZWF0ZUtleSgpLCBoaXN0b3J5LmxvY2F0aW9uKTtcblxuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG5cbiAgICAgIGhpc3RvcnkuZW50cmllc1toaXN0b3J5LmluZGV4XSA9IGxvY2F0aW9uO1xuXG4gICAgICBzZXRTdGF0ZSh7IGFjdGlvbjogYWN0aW9uLCBsb2NhdGlvbjogbG9jYXRpb24gfSk7XG4gICAgfSk7XG4gIH07XG5cbiAgdmFyIGdvID0gZnVuY3Rpb24gZ28obikge1xuICAgIHZhciBuZXh0SW5kZXggPSBjbGFtcChoaXN0b3J5LmluZGV4ICsgbiwgMCwgaGlzdG9yeS5lbnRyaWVzLmxlbmd0aCAtIDEpO1xuXG4gICAgdmFyIGFjdGlvbiA9ICdQT1AnO1xuICAgIHZhciBsb2NhdGlvbiA9IGhpc3RvcnkuZW50cmllc1tuZXh0SW5kZXhdO1xuXG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmIChvaykge1xuICAgICAgICBzZXRTdGF0ZSh7XG4gICAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uLFxuICAgICAgICAgIGluZGV4OiBuZXh0SW5kZXhcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBNaW1pYyB0aGUgYmVoYXZpb3Igb2YgRE9NIGhpc3RvcmllcyBieVxuICAgICAgICAvLyBjYXVzaW5nIGEgcmVuZGVyIGFmdGVyIGEgY2FuY2VsbGVkIFBPUC5cbiAgICAgICAgc2V0U3RhdGUoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfTtcblxuICB2YXIgZ29CYWNrID0gZnVuY3Rpb24gZ29CYWNrKCkge1xuICAgIHJldHVybiBnbygtMSk7XG4gIH07XG5cbiAgdmFyIGdvRm9yd2FyZCA9IGZ1bmN0aW9uIGdvRm9yd2FyZCgpIHtcbiAgICByZXR1cm4gZ28oMSk7XG4gIH07XG5cbiAgdmFyIGNhbkdvID0gZnVuY3Rpb24gY2FuR28obikge1xuICAgIHZhciBuZXh0SW5kZXggPSBoaXN0b3J5LmluZGV4ICsgbjtcbiAgICByZXR1cm4gbmV4dEluZGV4ID49IDAgJiYgbmV4dEluZGV4IDwgaGlzdG9yeS5lbnRyaWVzLmxlbmd0aDtcbiAgfTtcblxuICB2YXIgYmxvY2sgPSBmdW5jdGlvbiBibG9jaygpIHtcbiAgICB2YXIgcHJvbXB0ID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiBmYWxzZTtcbiAgICByZXR1cm4gdHJhbnNpdGlvbk1hbmFnZXIuc2V0UHJvbXB0KHByb21wdCk7XG4gIH07XG5cbiAgdmFyIGxpc3RlbiA9IGZ1bmN0aW9uIGxpc3RlbihsaXN0ZW5lcikge1xuICAgIHJldHVybiB0cmFuc2l0aW9uTWFuYWdlci5hcHBlbmRMaXN0ZW5lcihsaXN0ZW5lcik7XG4gIH07XG5cbiAgdmFyIGhpc3RvcnkgPSB7XG4gICAgbGVuZ3RoOiBlbnRyaWVzLmxlbmd0aCxcbiAgICBhY3Rpb246ICdQT1AnLFxuICAgIGxvY2F0aW9uOiBlbnRyaWVzW2luZGV4XSxcbiAgICBpbmRleDogaW5kZXgsXG4gICAgZW50cmllczogZW50cmllcyxcbiAgICBjcmVhdGVIcmVmOiBjcmVhdGVIcmVmLFxuICAgIHB1c2g6IHB1c2gsXG4gICAgcmVwbGFjZTogcmVwbGFjZSxcbiAgICBnbzogZ28sXG4gICAgZ29CYWNrOiBnb0JhY2ssXG4gICAgZ29Gb3J3YXJkOiBnb0ZvcndhcmQsXG4gICAgY2FuR286IGNhbkdvLFxuICAgIGJsb2NrOiBibG9jayxcbiAgICBsaXN0ZW46IGxpc3RlblxuICB9O1xuXG4gIHJldHVybiBoaXN0b3J5O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY3JlYXRlTWVtb3J5SGlzdG9yeTsiLCIvLyBXcml0dGVuIGluIHRoaXMgcm91bmQgYWJvdXQgd2F5IGZvciBiYWJlbC10cmFuc2Zvcm0taW1wb3J0c1xuaW1wb3J0IFJvdXRlciBmcm9tIFwicmVhY3Qtcm91dGVyL2VzL1JvdXRlclwiO1xuXG5leHBvcnQgZGVmYXVsdCBSb3V0ZXI7IiwiZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG5pbXBvcnQgd2FybmluZyBmcm9tIFwid2FybmluZ1wiO1xuaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tIFwicHJvcC10eXBlc1wiO1xuaW1wb3J0IHsgY3JlYXRlQnJvd3Nlckhpc3RvcnkgYXMgY3JlYXRlSGlzdG9yeSB9IGZyb20gXCJoaXN0b3J5XCI7XG5pbXBvcnQgUm91dGVyIGZyb20gXCIuL1JvdXRlclwiO1xuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBhIDxSb3V0ZXI+IHRoYXQgdXNlcyBIVE1MNSBoaXN0b3J5LlxuICovXG5cbnZhciBCcm93c2VyUm91dGVyID0gZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzKEJyb3dzZXJSb3V0ZXIsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIEJyb3dzZXJSb3V0ZXIoKSB7XG4gICAgdmFyIF90ZW1wLCBfdGhpcywgX3JldDtcblxuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBCcm93c2VyUm91dGVyKTtcblxuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIHJldHVybiBfcmV0ID0gKF90ZW1wID0gKF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgX1JlYWN0JENvbXBvbmVudC5jYWxsLmFwcGx5KF9SZWFjdCRDb21wb25lbnQsIFt0aGlzXS5jb25jYXQoYXJncykpKSwgX3RoaXMpLCBfdGhpcy5oaXN0b3J5ID0gY3JlYXRlSGlzdG9yeShfdGhpcy5wcm9wcyksIF90ZW1wKSwgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oX3RoaXMsIF9yZXQpO1xuICB9XG5cbiAgQnJvd3NlclJvdXRlci5wcm90b3R5cGUuY29tcG9uZW50V2lsbE1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbE1vdW50KCkge1xuICAgIHdhcm5pbmcoIXRoaXMucHJvcHMuaGlzdG9yeSwgXCI8QnJvd3NlclJvdXRlcj4gaWdub3JlcyB0aGUgaGlzdG9yeSBwcm9wLiBUbyB1c2UgYSBjdXN0b20gaGlzdG9yeSwgXCIgKyBcInVzZSBgaW1wb3J0IHsgUm91dGVyIH1gIGluc3RlYWQgb2YgYGltcG9ydCB7IEJyb3dzZXJSb3V0ZXIgYXMgUm91dGVyIH1gLlwiKTtcbiAgfTtcblxuICBCcm93c2VyUm91dGVyLnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGVyLCB7IGhpc3Rvcnk6IHRoaXMuaGlzdG9yeSwgY2hpbGRyZW46IHRoaXMucHJvcHMuY2hpbGRyZW4gfSk7XG4gIH07XG5cbiAgcmV0dXJuIEJyb3dzZXJSb3V0ZXI7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbkJyb3dzZXJSb3V0ZXIucHJvcFR5cGVzID0ge1xuICBiYXNlbmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgZm9yY2VSZWZyZXNoOiBQcm9wVHlwZXMuYm9vbCxcbiAgZ2V0VXNlckNvbmZpcm1hdGlvbjogUHJvcFR5cGVzLmZ1bmMsXG4gIGtleUxlbmd0aDogUHJvcFR5cGVzLm51bWJlcixcbiAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlXG59O1xuXG5cbmV4cG9ydCBkZWZhdWx0IEJyb3dzZXJSb3V0ZXI7IiwiaW1wb3J0IHBhdGhUb1JlZ2V4cCBmcm9tIFwicGF0aC10by1yZWdleHBcIjtcblxudmFyIHBhdHRlcm5DYWNoZSA9IHt9O1xudmFyIGNhY2hlTGltaXQgPSAxMDAwMDtcbnZhciBjYWNoZUNvdW50ID0gMDtcblxudmFyIGNvbXBpbGVQYXRoID0gZnVuY3Rpb24gY29tcGlsZVBhdGgocGF0dGVybiwgb3B0aW9ucykge1xuICB2YXIgY2FjaGVLZXkgPSBcIlwiICsgb3B0aW9ucy5lbmQgKyBvcHRpb25zLnN0cmljdCArIG9wdGlvbnMuc2Vuc2l0aXZlO1xuICB2YXIgY2FjaGUgPSBwYXR0ZXJuQ2FjaGVbY2FjaGVLZXldIHx8IChwYXR0ZXJuQ2FjaGVbY2FjaGVLZXldID0ge30pO1xuXG4gIGlmIChjYWNoZVtwYXR0ZXJuXSkgcmV0dXJuIGNhY2hlW3BhdHRlcm5dO1xuXG4gIHZhciBrZXlzID0gW107XG4gIHZhciByZSA9IHBhdGhUb1JlZ2V4cChwYXR0ZXJuLCBrZXlzLCBvcHRpb25zKTtcbiAgdmFyIGNvbXBpbGVkUGF0dGVybiA9IHsgcmU6IHJlLCBrZXlzOiBrZXlzIH07XG5cbiAgaWYgKGNhY2hlQ291bnQgPCBjYWNoZUxpbWl0KSB7XG4gICAgY2FjaGVbcGF0dGVybl0gPSBjb21waWxlZFBhdHRlcm47XG4gICAgY2FjaGVDb3VudCsrO1xuICB9XG5cbiAgcmV0dXJuIGNvbXBpbGVkUGF0dGVybjtcbn07XG5cbi8qKlxuICogUHVibGljIEFQSSBmb3IgbWF0Y2hpbmcgYSBVUkwgcGF0aG5hbWUgdG8gYSBwYXRoIHBhdHRlcm4uXG4gKi9cbnZhciBtYXRjaFBhdGggPSBmdW5jdGlvbiBtYXRjaFBhdGgocGF0aG5hbWUpIHtcbiAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IHt9O1xuICB2YXIgcGFyZW50ID0gYXJndW1lbnRzWzJdO1xuXG4gIGlmICh0eXBlb2Ygb3B0aW9ucyA9PT0gXCJzdHJpbmdcIikgb3B0aW9ucyA9IHsgcGF0aDogb3B0aW9ucyB9O1xuXG4gIHZhciBfb3B0aW9ucyA9IG9wdGlvbnMsXG4gICAgICBwYXRoID0gX29wdGlvbnMucGF0aCxcbiAgICAgIF9vcHRpb25zJGV4YWN0ID0gX29wdGlvbnMuZXhhY3QsXG4gICAgICBleGFjdCA9IF9vcHRpb25zJGV4YWN0ID09PSB1bmRlZmluZWQgPyBmYWxzZSA6IF9vcHRpb25zJGV4YWN0LFxuICAgICAgX29wdGlvbnMkc3RyaWN0ID0gX29wdGlvbnMuc3RyaWN0LFxuICAgICAgc3RyaWN0ID0gX29wdGlvbnMkc3RyaWN0ID09PSB1bmRlZmluZWQgPyBmYWxzZSA6IF9vcHRpb25zJHN0cmljdCxcbiAgICAgIF9vcHRpb25zJHNlbnNpdGl2ZSA9IF9vcHRpb25zLnNlbnNpdGl2ZSxcbiAgICAgIHNlbnNpdGl2ZSA9IF9vcHRpb25zJHNlbnNpdGl2ZSA9PT0gdW5kZWZpbmVkID8gZmFsc2UgOiBfb3B0aW9ucyRzZW5zaXRpdmU7XG5cblxuICBpZiAocGF0aCA9PSBudWxsKSByZXR1cm4gcGFyZW50O1xuXG4gIHZhciBfY29tcGlsZVBhdGggPSBjb21waWxlUGF0aChwYXRoLCB7IGVuZDogZXhhY3QsIHN0cmljdDogc3RyaWN0LCBzZW5zaXRpdmU6IHNlbnNpdGl2ZSB9KSxcbiAgICAgIHJlID0gX2NvbXBpbGVQYXRoLnJlLFxuICAgICAga2V5cyA9IF9jb21waWxlUGF0aC5rZXlzO1xuXG4gIHZhciBtYXRjaCA9IHJlLmV4ZWMocGF0aG5hbWUpO1xuXG4gIGlmICghbWF0Y2gpIHJldHVybiBudWxsO1xuXG4gIHZhciB1cmwgPSBtYXRjaFswXSxcbiAgICAgIHZhbHVlcyA9IG1hdGNoLnNsaWNlKDEpO1xuXG4gIHZhciBpc0V4YWN0ID0gcGF0aG5hbWUgPT09IHVybDtcblxuICBpZiAoZXhhY3QgJiYgIWlzRXhhY3QpIHJldHVybiBudWxsO1xuXG4gIHJldHVybiB7XG4gICAgcGF0aDogcGF0aCwgLy8gdGhlIHBhdGggcGF0dGVybiB1c2VkIHRvIG1hdGNoXG4gICAgdXJsOiBwYXRoID09PSBcIi9cIiAmJiB1cmwgPT09IFwiXCIgPyBcIi9cIiA6IHVybCwgLy8gdGhlIG1hdGNoZWQgcG9ydGlvbiBvZiB0aGUgVVJMXG4gICAgaXNFeGFjdDogaXNFeGFjdCwgLy8gd2hldGhlciBvciBub3Qgd2UgbWF0Y2hlZCBleGFjdGx5XG4gICAgcGFyYW1zOiBrZXlzLnJlZHVjZShmdW5jdGlvbiAobWVtbywga2V5LCBpbmRleCkge1xuICAgICAgbWVtb1trZXkubmFtZV0gPSB2YWx1ZXNbaW5kZXhdO1xuICAgICAgcmV0dXJuIG1lbW87XG4gICAgfSwge30pXG4gIH07XG59O1xuXG5leHBvcnQgZGVmYXVsdCBtYXRjaFBhdGg7IiwiZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG5pbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gXCJwcm9wLXR5cGVzXCI7XG5pbXBvcnQgd2FybmluZyBmcm9tIFwid2FybmluZ1wiO1xuaW1wb3J0IGludmFyaWFudCBmcm9tIFwiaW52YXJpYW50XCI7XG5pbXBvcnQgbWF0Y2hQYXRoIGZyb20gXCIuL21hdGNoUGF0aFwiO1xuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciByZW5kZXJpbmcgdGhlIGZpcnN0IDxSb3V0ZT4gdGhhdCBtYXRjaGVzLlxuICovXG5cbnZhciBTd2l0Y2ggPSBmdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHMoU3dpdGNoLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBTd2l0Y2goKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFN3aXRjaCk7XG5cbiAgICByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgX1JlYWN0JENvbXBvbmVudC5hcHBseSh0aGlzLCBhcmd1bWVudHMpKTtcbiAgfVxuXG4gIFN3aXRjaC5wcm90b3R5cGUuY29tcG9uZW50V2lsbE1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbE1vdW50KCkge1xuICAgIGludmFyaWFudCh0aGlzLmNvbnRleHQucm91dGVyLCBcIllvdSBzaG91bGQgbm90IHVzZSA8U3dpdGNoPiBvdXRzaWRlIGEgPFJvdXRlcj5cIik7XG4gIH07XG5cbiAgU3dpdGNoLnByb3RvdHlwZS5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhuZXh0UHJvcHMpIHtcbiAgICB3YXJuaW5nKCEobmV4dFByb3BzLmxvY2F0aW9uICYmICF0aGlzLnByb3BzLmxvY2F0aW9uKSwgJzxTd2l0Y2g+IGVsZW1lbnRzIHNob3VsZCBub3QgY2hhbmdlIGZyb20gdW5jb250cm9sbGVkIHRvIGNvbnRyb2xsZWQgKG9yIHZpY2UgdmVyc2EpLiBZb3UgaW5pdGlhbGx5IHVzZWQgbm8gXCJsb2NhdGlvblwiIHByb3AgYW5kIHRoZW4gcHJvdmlkZWQgb25lIG9uIGEgc3Vic2VxdWVudCByZW5kZXIuJyk7XG5cbiAgICB3YXJuaW5nKCEoIW5leHRQcm9wcy5sb2NhdGlvbiAmJiB0aGlzLnByb3BzLmxvY2F0aW9uKSwgJzxTd2l0Y2g+IGVsZW1lbnRzIHNob3VsZCBub3QgY2hhbmdlIGZyb20gY29udHJvbGxlZCB0byB1bmNvbnRyb2xsZWQgKG9yIHZpY2UgdmVyc2EpLiBZb3UgcHJvdmlkZWQgYSBcImxvY2F0aW9uXCIgcHJvcCBpbml0aWFsbHkgYnV0IG9taXR0ZWQgaXQgb24gYSBzdWJzZXF1ZW50IHJlbmRlci4nKTtcbiAgfTtcblxuICBTd2l0Y2gucHJvdG90eXBlLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICB2YXIgcm91dGUgPSB0aGlzLmNvbnRleHQucm91dGVyLnJvdXRlO1xuICAgIHZhciBjaGlsZHJlbiA9IHRoaXMucHJvcHMuY2hpbGRyZW47XG5cbiAgICB2YXIgbG9jYXRpb24gPSB0aGlzLnByb3BzLmxvY2F0aW9uIHx8IHJvdXRlLmxvY2F0aW9uO1xuXG4gICAgdmFyIG1hdGNoID0gdm9pZCAwLFxuICAgICAgICBjaGlsZCA9IHZvaWQgMDtcbiAgICBSZWFjdC5DaGlsZHJlbi5mb3JFYWNoKGNoaWxkcmVuLCBmdW5jdGlvbiAoZWxlbWVudCkge1xuICAgICAgaWYgKG1hdGNoID09IG51bGwgJiYgUmVhY3QuaXNWYWxpZEVsZW1lbnQoZWxlbWVudCkpIHtcbiAgICAgICAgdmFyIF9lbGVtZW50JHByb3BzID0gZWxlbWVudC5wcm9wcyxcbiAgICAgICAgICAgIHBhdGhQcm9wID0gX2VsZW1lbnQkcHJvcHMucGF0aCxcbiAgICAgICAgICAgIGV4YWN0ID0gX2VsZW1lbnQkcHJvcHMuZXhhY3QsXG4gICAgICAgICAgICBzdHJpY3QgPSBfZWxlbWVudCRwcm9wcy5zdHJpY3QsXG4gICAgICAgICAgICBzZW5zaXRpdmUgPSBfZWxlbWVudCRwcm9wcy5zZW5zaXRpdmUsXG4gICAgICAgICAgICBmcm9tID0gX2VsZW1lbnQkcHJvcHMuZnJvbTtcblxuICAgICAgICB2YXIgcGF0aCA9IHBhdGhQcm9wIHx8IGZyb207XG5cbiAgICAgICAgY2hpbGQgPSBlbGVtZW50O1xuICAgICAgICBtYXRjaCA9IG1hdGNoUGF0aChsb2NhdGlvbi5wYXRobmFtZSwgeyBwYXRoOiBwYXRoLCBleGFjdDogZXhhY3QsIHN0cmljdDogc3RyaWN0LCBzZW5zaXRpdmU6IHNlbnNpdGl2ZSB9LCByb3V0ZS5tYXRjaCk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICByZXR1cm4gbWF0Y2ggPyBSZWFjdC5jbG9uZUVsZW1lbnQoY2hpbGQsIHsgbG9jYXRpb246IGxvY2F0aW9uLCBjb21wdXRlZE1hdGNoOiBtYXRjaCB9KSA6IG51bGw7XG4gIH07XG5cbiAgcmV0dXJuIFN3aXRjaDtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuU3dpdGNoLmNvbnRleHRUeXBlcyA9IHtcbiAgcm91dGVyOiBQcm9wVHlwZXMuc2hhcGUoe1xuICAgIHJvdXRlOiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWRcbiAgfSkuaXNSZXF1aXJlZFxufTtcblN3aXRjaC5wcm9wVHlwZXMgPSB7XG4gIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcbiAgbG9jYXRpb246IFByb3BUeXBlcy5vYmplY3Rcbn07XG5cblxuZXhwb3J0IGRlZmF1bHQgU3dpdGNoOyIsIi8vIFdyaXR0ZW4gaW4gdGhpcyByb3VuZCBhYm91dCB3YXkgZm9yIGJhYmVsLXRyYW5zZm9ybS1pbXBvcnRzXG5pbXBvcnQgU3dpdGNoIGZyb20gXCJyZWFjdC1yb3V0ZXIvZXMvU3dpdGNoXCI7XG5cbmV4cG9ydCBkZWZhdWx0IFN3aXRjaDsiLCJ2YXIgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9O1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbmltcG9ydCB3YXJuaW5nIGZyb20gXCJ3YXJuaW5nXCI7XG5pbXBvcnQgaW52YXJpYW50IGZyb20gXCJpbnZhcmlhbnRcIjtcbmltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSBcInByb3AtdHlwZXNcIjtcbmltcG9ydCBtYXRjaFBhdGggZnJvbSBcIi4vbWF0Y2hQYXRoXCI7XG5cbnZhciBpc0VtcHR5Q2hpbGRyZW4gPSBmdW5jdGlvbiBpc0VtcHR5Q2hpbGRyZW4oY2hpbGRyZW4pIHtcbiAgcmV0dXJuIFJlYWN0LkNoaWxkcmVuLmNvdW50KGNoaWxkcmVuKSA9PT0gMDtcbn07XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIG1hdGNoaW5nIGEgc2luZ2xlIHBhdGggYW5kIHJlbmRlcmluZy5cbiAqL1xuXG52YXIgUm91dGUgPSBmdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHMoUm91dGUsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIFJvdXRlKCkge1xuICAgIHZhciBfdGVtcCwgX3RoaXMsIF9yZXQ7XG5cbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgUm91dGUpO1xuXG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgcmV0dXJuIF9yZXQgPSAoX3RlbXAgPSAoX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfUmVhY3QkQ29tcG9uZW50LmNhbGwuYXBwbHkoX1JlYWN0JENvbXBvbmVudCwgW3RoaXNdLmNvbmNhdChhcmdzKSkpLCBfdGhpcyksIF90aGlzLnN0YXRlID0ge1xuICAgICAgbWF0Y2g6IF90aGlzLmNvbXB1dGVNYXRjaChfdGhpcy5wcm9wcywgX3RoaXMuY29udGV4dC5yb3V0ZXIpXG4gICAgfSwgX3RlbXApLCBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihfdGhpcywgX3JldCk7XG4gIH1cblxuICBSb3V0ZS5wcm90b3R5cGUuZ2V0Q2hpbGRDb250ZXh0ID0gZnVuY3Rpb24gZ2V0Q2hpbGRDb250ZXh0KCkge1xuICAgIHJldHVybiB7XG4gICAgICByb3V0ZXI6IF9leHRlbmRzKHt9LCB0aGlzLmNvbnRleHQucm91dGVyLCB7XG4gICAgICAgIHJvdXRlOiB7XG4gICAgICAgICAgbG9jYXRpb246IHRoaXMucHJvcHMubG9jYXRpb24gfHwgdGhpcy5jb250ZXh0LnJvdXRlci5yb3V0ZS5sb2NhdGlvbixcbiAgICAgICAgICBtYXRjaDogdGhpcy5zdGF0ZS5tYXRjaFxuICAgICAgICB9XG4gICAgICB9KVxuICAgIH07XG4gIH07XG5cbiAgUm91dGUucHJvdG90eXBlLmNvbXB1dGVNYXRjaCA9IGZ1bmN0aW9uIGNvbXB1dGVNYXRjaChfcmVmLCByb3V0ZXIpIHtcbiAgICB2YXIgY29tcHV0ZWRNYXRjaCA9IF9yZWYuY29tcHV0ZWRNYXRjaCxcbiAgICAgICAgbG9jYXRpb24gPSBfcmVmLmxvY2F0aW9uLFxuICAgICAgICBwYXRoID0gX3JlZi5wYXRoLFxuICAgICAgICBzdHJpY3QgPSBfcmVmLnN0cmljdCxcbiAgICAgICAgZXhhY3QgPSBfcmVmLmV4YWN0LFxuICAgICAgICBzZW5zaXRpdmUgPSBfcmVmLnNlbnNpdGl2ZTtcblxuICAgIGlmIChjb21wdXRlZE1hdGNoKSByZXR1cm4gY29tcHV0ZWRNYXRjaDsgLy8gPFN3aXRjaD4gYWxyZWFkeSBjb21wdXRlZCB0aGUgbWF0Y2ggZm9yIHVzXG5cbiAgICBpbnZhcmlhbnQocm91dGVyLCBcIllvdSBzaG91bGQgbm90IHVzZSA8Um91dGU+IG9yIHdpdGhSb3V0ZXIoKSBvdXRzaWRlIGEgPFJvdXRlcj5cIik7XG5cbiAgICB2YXIgcm91dGUgPSByb3V0ZXIucm91dGU7XG5cbiAgICB2YXIgcGF0aG5hbWUgPSAobG9jYXRpb24gfHwgcm91dGUubG9jYXRpb24pLnBhdGhuYW1lO1xuXG4gICAgcmV0dXJuIG1hdGNoUGF0aChwYXRobmFtZSwgeyBwYXRoOiBwYXRoLCBzdHJpY3Q6IHN0cmljdCwgZXhhY3Q6IGV4YWN0LCBzZW5zaXRpdmU6IHNlbnNpdGl2ZSB9LCByb3V0ZS5tYXRjaCk7XG4gIH07XG5cbiAgUm91dGUucHJvdG90eXBlLmNvbXBvbmVudFdpbGxNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxNb3VudCgpIHtcbiAgICB3YXJuaW5nKCEodGhpcy5wcm9wcy5jb21wb25lbnQgJiYgdGhpcy5wcm9wcy5yZW5kZXIpLCBcIllvdSBzaG91bGQgbm90IHVzZSA8Um91dGUgY29tcG9uZW50PiBhbmQgPFJvdXRlIHJlbmRlcj4gaW4gdGhlIHNhbWUgcm91dGU7IDxSb3V0ZSByZW5kZXI+IHdpbGwgYmUgaWdub3JlZFwiKTtcblxuICAgIHdhcm5pbmcoISh0aGlzLnByb3BzLmNvbXBvbmVudCAmJiB0aGlzLnByb3BzLmNoaWxkcmVuICYmICFpc0VtcHR5Q2hpbGRyZW4odGhpcy5wcm9wcy5jaGlsZHJlbikpLCBcIllvdSBzaG91bGQgbm90IHVzZSA8Um91dGUgY29tcG9uZW50PiBhbmQgPFJvdXRlIGNoaWxkcmVuPiBpbiB0aGUgc2FtZSByb3V0ZTsgPFJvdXRlIGNoaWxkcmVuPiB3aWxsIGJlIGlnbm9yZWRcIik7XG5cbiAgICB3YXJuaW5nKCEodGhpcy5wcm9wcy5yZW5kZXIgJiYgdGhpcy5wcm9wcy5jaGlsZHJlbiAmJiAhaXNFbXB0eUNoaWxkcmVuKHRoaXMucHJvcHMuY2hpbGRyZW4pKSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFJvdXRlIHJlbmRlcj4gYW5kIDxSb3V0ZSBjaGlsZHJlbj4gaW4gdGhlIHNhbWUgcm91dGU7IDxSb3V0ZSBjaGlsZHJlbj4gd2lsbCBiZSBpZ25vcmVkXCIpO1xuICB9O1xuXG4gIFJvdXRlLnByb3RvdHlwZS5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhuZXh0UHJvcHMsIG5leHRDb250ZXh0KSB7XG4gICAgd2FybmluZyghKG5leHRQcm9wcy5sb2NhdGlvbiAmJiAhdGhpcy5wcm9wcy5sb2NhdGlvbiksICc8Um91dGU+IGVsZW1lbnRzIHNob3VsZCBub3QgY2hhbmdlIGZyb20gdW5jb250cm9sbGVkIHRvIGNvbnRyb2xsZWQgKG9yIHZpY2UgdmVyc2EpLiBZb3UgaW5pdGlhbGx5IHVzZWQgbm8gXCJsb2NhdGlvblwiIHByb3AgYW5kIHRoZW4gcHJvdmlkZWQgb25lIG9uIGEgc3Vic2VxdWVudCByZW5kZXIuJyk7XG5cbiAgICB3YXJuaW5nKCEoIW5leHRQcm9wcy5sb2NhdGlvbiAmJiB0aGlzLnByb3BzLmxvY2F0aW9uKSwgJzxSb3V0ZT4gZWxlbWVudHMgc2hvdWxkIG5vdCBjaGFuZ2UgZnJvbSBjb250cm9sbGVkIHRvIHVuY29udHJvbGxlZCAob3IgdmljZSB2ZXJzYSkuIFlvdSBwcm92aWRlZCBhIFwibG9jYXRpb25cIiBwcm9wIGluaXRpYWxseSBidXQgb21pdHRlZCBpdCBvbiBhIHN1YnNlcXVlbnQgcmVuZGVyLicpO1xuXG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICBtYXRjaDogdGhpcy5jb21wdXRlTWF0Y2gobmV4dFByb3BzLCBuZXh0Q29udGV4dC5yb3V0ZXIpXG4gICAgfSk7XG4gIH07XG5cbiAgUm91dGUucHJvdG90eXBlLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICB2YXIgbWF0Y2ggPSB0aGlzLnN0YXRlLm1hdGNoO1xuICAgIHZhciBfcHJvcHMgPSB0aGlzLnByb3BzLFxuICAgICAgICBjaGlsZHJlbiA9IF9wcm9wcy5jaGlsZHJlbixcbiAgICAgICAgY29tcG9uZW50ID0gX3Byb3BzLmNvbXBvbmVudCxcbiAgICAgICAgcmVuZGVyID0gX3Byb3BzLnJlbmRlcjtcbiAgICB2YXIgX2NvbnRleHQkcm91dGVyID0gdGhpcy5jb250ZXh0LnJvdXRlcixcbiAgICAgICAgaGlzdG9yeSA9IF9jb250ZXh0JHJvdXRlci5oaXN0b3J5LFxuICAgICAgICByb3V0ZSA9IF9jb250ZXh0JHJvdXRlci5yb3V0ZSxcbiAgICAgICAgc3RhdGljQ29udGV4dCA9IF9jb250ZXh0JHJvdXRlci5zdGF0aWNDb250ZXh0O1xuXG4gICAgdmFyIGxvY2F0aW9uID0gdGhpcy5wcm9wcy5sb2NhdGlvbiB8fCByb3V0ZS5sb2NhdGlvbjtcbiAgICB2YXIgcHJvcHMgPSB7IG1hdGNoOiBtYXRjaCwgbG9jYXRpb246IGxvY2F0aW9uLCBoaXN0b3J5OiBoaXN0b3J5LCBzdGF0aWNDb250ZXh0OiBzdGF0aWNDb250ZXh0IH07XG5cbiAgICBpZiAoY29tcG9uZW50KSByZXR1cm4gbWF0Y2ggPyBSZWFjdC5jcmVhdGVFbGVtZW50KGNvbXBvbmVudCwgcHJvcHMpIDogbnVsbDtcblxuICAgIGlmIChyZW5kZXIpIHJldHVybiBtYXRjaCA/IHJlbmRlcihwcm9wcykgOiBudWxsO1xuXG4gICAgaWYgKHR5cGVvZiBjaGlsZHJlbiA9PT0gXCJmdW5jdGlvblwiKSByZXR1cm4gY2hpbGRyZW4ocHJvcHMpO1xuXG4gICAgaWYgKGNoaWxkcmVuICYmICFpc0VtcHR5Q2hpbGRyZW4oY2hpbGRyZW4pKSByZXR1cm4gUmVhY3QuQ2hpbGRyZW4ub25seShjaGlsZHJlbik7XG5cbiAgICByZXR1cm4gbnVsbDtcbiAgfTtcblxuICByZXR1cm4gUm91dGU7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cblJvdXRlLnByb3BUeXBlcyA9IHtcbiAgY29tcHV0ZWRNYXRjaDogUHJvcFR5cGVzLm9iamVjdCwgLy8gcHJpdmF0ZSwgZnJvbSA8U3dpdGNoPlxuICBwYXRoOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBleGFjdDogUHJvcFR5cGVzLmJvb2wsXG4gIHN0cmljdDogUHJvcFR5cGVzLmJvb2wsXG4gIHNlbnNpdGl2ZTogUHJvcFR5cGVzLmJvb2wsXG4gIGNvbXBvbmVudDogUHJvcFR5cGVzLmZ1bmMsXG4gIHJlbmRlcjogUHJvcFR5cGVzLmZ1bmMsXG4gIGNoaWxkcmVuOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuZnVuYywgUHJvcFR5cGVzLm5vZGVdKSxcbiAgbG9jYXRpb246IFByb3BUeXBlcy5vYmplY3Rcbn07XG5Sb3V0ZS5jb250ZXh0VHlwZXMgPSB7XG4gIHJvdXRlcjogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICBoaXN0b3J5OiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsXG4gICAgcm91dGU6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcbiAgICBzdGF0aWNDb250ZXh0OiBQcm9wVHlwZXMub2JqZWN0XG4gIH0pXG59O1xuUm91dGUuY2hpbGRDb250ZXh0VHlwZXMgPSB7XG4gIHJvdXRlcjogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkXG59O1xuXG5cbmV4cG9ydCBkZWZhdWx0IFJvdXRlOyIsIi8vIFdyaXR0ZW4gaW4gdGhpcyByb3VuZCBhYm91dCB3YXkgZm9yIGJhYmVsLXRyYW5zZm9ybS1pbXBvcnRzXG5pbXBvcnQgUm91dGUgZnJvbSBcInJlYWN0LXJvdXRlci9lcy9Sb3V0ZVwiO1xuXG5leHBvcnQgZGVmYXVsdCBSb3V0ZTsiLCJ2YXIgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xyXG52YXIgUmVhY3RET00gPSByZXF1aXJlKCdyZWFjdC1kb20nKVxyXG5cclxuZnVuY3Rpb24gU29ydFNlYXJjaCh1c2VycywgYXJ0aXN0cywgc29uZ3MsIGFsYnVtcylcclxue1xyXG5cdHZhciBzZWFyY2hfbGlzdCA9IFtdO1xyXG5cclxuXHRmb3IgKHZhciBrZXkgaW4gdXNlcnMpXHJcblx0e1xyXG5cdFx0dmFyIHVzZXJfZGlzcGxheSA9IHVzZXJzW2tleV0udXNlcm5hbWU7XHJcblx0XHR2YXIgdXNlcl91cmwgPSBcIi91c2VyL1wiICsgdXNlcnNba2V5XS51c2VybmFtZTtcclxuXHRcdHNlYXJjaF9saXN0LnB1c2goW3VzZXJfZGlzcGxheSwgdXNlcl91cmxdKTtcclxuIFx0fVxyXG5cclxuIFx0Zm9yICh2YXIga2V5IGluIGFydGlzdHMpXHJcbiBcdHtcclxuXHQgXHR2YXIgYXJ0aXN0X2Rpc3BsYXkgPSBhcnRpc3RzW2tleV0uYXJ0aXN0O1xyXG5cdCBcdHZhciBhcnRpc3RfdXJsID0gXCIvYXJ0aXN0L1wiICsgYXJ0aXN0c1trZXldLmFydGlzdFxyXG5cdCBcdHNlYXJjaF9saXN0LnB1c2goW2FydGlzdF9kaXNwbGF5LCBhcnRpc3RfdXJsXSk7XHJcblx0fVxyXG5cclxuXHRmb3IgKHZhciBrZXkgaW4gc29uZ3MpXHJcblx0e1xyXG5cdCBcdHZhciBzb25nX2Rpc3BsYXkgPSBzb25nc1trZXldLnNvbmc7XHJcblx0IFx0dmFyIHNvbmdfdXJsID0gXCIvcG9zdC9cIiArIHNvbmdzW2tleV0uYXJ0aXN0ICsgXCIvXCIgKyBzb25nc1trZXldLnNvbmc7XHJcblx0IFx0c2VhcmNoX2xpc3QucHVzaChbc29uZ19kaXNwbGF5LCBzb25nX3VybF0pO1xyXG4gXHR9XHJcblxyXG4gXHRmb3IgKHZhciBrZXkgaW4gYWxidW1zKVxyXG4gXHR7XHJcblx0IFx0dmFyIGFsYnVtX2Rpc3BsYXkgPSBhbGJ1bXNba2V5XS5hbGJ1bTtcclxuXHQgXHR2YXIgYWxidW1fdXJsID0gXCIvYWxidW0vXCIgKyBhbGJ1bXNba2V5XS5hcnRpc3QgKyBcIi9cIiArIGFsYnVtc1trZXldLmFsYnVtO1xyXG5cdCBcdHNlYXJjaF9saXN0LnB1c2goW2FsYnVtX2Rpc3BsYXksIGFsYnVtX3VybF0pO1xyXG4gXHR9XHJcblxyXG4gICAgc2VhcmNoX2xpc3Quc29ydChmdW5jdGlvbihhLCBiKXtcclxuICAgIFx0aWYgKGFbMF0gPiBiWzBdKVxyXG4gICAgICAgIHtcclxuICAgICAgICBcdHJldHVybiAxO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gLTE7XHJcbiAgICB9KTtcclxuICAgIHJldHVybiBzZWFyY2hfbGlzdDtcclxufVxyXG5cclxuY2xhc3MgU2VhcmNoSXRlbSBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XHJcblxyXG5cdGNvbnN0cnVjdG9yKHByb3BzKSB7XHJcblx0XHRzdXBlcihwcm9wcyk7XHJcblx0XHR0aGlzLml0ZW1fbGlzdCA9IFtdO1xyXG5cdH1cclxuXHJcblx0Y2xlYXJJdGVtcygpXHJcblx0e1xyXG5cdFx0dGhpcy5pdGVtX2xpc3QgPSBbXTtcclxuXHRcdHRoaXMuZm9yY2VVcGRhdGUoKTtcclxuXHR9XHJcblxyXG5cdHJlbmRlckl0ZW0oaXRlbSwgdXJsKVxyXG5cdHtcclxuXHRcdHRoaXMuaXRlbV9saXN0LnB1c2goXHJcblx0XHRcdDxkaXZcclxuXHRcdFx0XHR0YWJpbmRleFxyXG5cdFx0XHRcdGNsYXNzTmFtZT1cInNlYXJjaEl0ZW1cIlxyXG5cdFx0XHRcdG9uQ2xpY2s9eygpID0+IHt3aW5kb3cubG9jYXRpb24uaHJlZiA9IHVybH19XHJcblx0XHRcdD5cclxuXHRcdFx0XHR7aXRlbX1cclxuXHRcdFx0PC9kaXY+XHJcblx0XHQpO1xyXG5cdFx0dGhpcy5mb3JjZVVwZGF0ZSgpO1xyXG5cdH1cclxuXHJcblx0cmVuZGVyKClcclxuXHR7XHJcblx0XHRyZXR1cm4gdGhpcy5pdGVtX2xpc3QubGVuZ3RoID4gMCA/XHJcblx0XHRcdChcclxuXHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT1cInNlYXJjaEl0ZW1zXCI+XHJcblx0XHRcdFx0XHR7dGhpcy5pdGVtX2xpc3R9XHJcblx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdCkgOiBudWxsO1xyXG5cdH1cclxufTtcclxuXHJcbmNsYXNzIFNlYXJjaExpc3QgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xyXG5cclxuXHRjb25zdHJ1Y3Rvcihwcm9wcylcclxuXHR7XHJcblx0XHRzdXBlcihwcm9wcyk7XHJcblx0XHR0aGlzLnNlYXJjaF9saXN0ID0gUmVhY3QuY3JlYXRlUmVmKCk7XHJcblx0fVxyXG5cclxuXHRoYW5kbGVDaGFuZ2UoKVxyXG5cdHtcclxuXHRcdHZhciBpbnB1dCA9IGV2ZW50LnRhcmdldC52YWx1ZTtcclxuXHRcdHZhciB0aGF0ID0gdGhpcztcclxuXHJcblx0XHRmZXRjaChcIi9zZWFyY2hcIiwge1xyXG5cdFx0XHRtZXRob2Q6IFwiUE9TVFwiLFxyXG5cdFx0XHRoZWFkZXJzOiB7XHJcblx0XHRcdFx0QWNjZXB0OiAnYXBwbGljYXRpb24vanNvbicsXHJcblx0XHRcdFx0J0F1dGhvcml6YXRpb24nOiAnQmFzaWMnLFxyXG5cdFx0XHRcdCdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXHJcblx0XHRcdH0sXHJcblx0XHRcdGJvZHk6IEpTT04uc3RyaW5naWZ5KHt0eXBlOiBcInNlYXJjaFwiLCB0ZXh0OiBpbnB1dH0pLFxyXG5cdFx0fSkudGhlbihmdW5jdGlvbihyZXNwb25zZSkgeyByZXR1cm4gcmVzcG9uc2UuanNvbigpO31cclxuXHRcdCkudGhlbihmdW5jdGlvbiAoZGF0YSkge1xyXG5cdFx0XHR2YXIgc2VhcmNoX3Jlc3VsdHMgPSBTb3J0U2VhcmNoKGRhdGEudXNlcnMsIGRhdGEuYXJ0aXN0cywgZGF0YS5zb25ncywgZGF0YS5hbGJ1bXMpO1xyXG5cdFx0XHR0aGF0LnNlYXJjaF9saXN0LmN1cnJlbnQuY2xlYXJJdGVtcygpO1xyXG5cdFx0XHRmb3IgKHZhciBrZXkgaW4gc2VhcmNoX3Jlc3VsdHMpXHJcblx0XHRcdHtcclxuXHRcdFx0XHR0aGF0LnNlYXJjaF9saXN0LmN1cnJlbnQucmVuZGVySXRlbShzZWFyY2hfcmVzdWx0c1trZXldWzBdLCBzZWFyY2hfcmVzdWx0c1trZXldWzFdKTtcclxuXHRcdFx0fVxyXG5cdCBcdH0pXHJcblx0fVxyXG5cclxuXHRyZW5kZXIgKClcclxuXHR7XHJcblx0XHRyZXR1cm4oXHJcblx0XHRcdDxkaXYgY2xhc3NOYW1lPVwic2VhcmNoQmFyQ29udGFpbmVyXCI+XHJcblx0XHRcdFx0PGlucHV0XHJcblx0XHRcdFx0XHRjbGFzc05hbWU9eydzZWFyY2hCYXInfVxyXG5cdFx0XHRcdFx0b25DaGFuZ2U9e3RoaXMuaGFuZGxlQ2hhbmdlLmJpbmQodGhpcyl9XHJcblx0XHRcdFx0XHRwbGFjZWhvbGRlcj0nU2VhcmNoJ1xyXG5cdFx0XHRcdFx0dHlwZT0ndGV4dCdcclxuXHRcdFx0XHRcdC8+XHJcblx0XHRcdFx0PFNlYXJjaEl0ZW0gcmVmPXt0aGlzLnNlYXJjaF9saXN0fSAvPlxyXG5cdFx0XHQ8L2Rpdj5cclxuXHRcdCk7XHJcblxyXG5cdH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU3RhbmRhcmRIZWFkZXIgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xyXG5cclxuXHRjb25zdHJ1Y3RvciAocHJvcHMpXHJcblx0e1xyXG5cdFx0c3VwZXIocHJvcHMpO1xyXG5cdFx0dGhpcy5zZWFyY2hfbGlzdCA9IFJlYWN0LmNyZWF0ZVJlZigpO1xyXG5cdFx0dGhpcy5kcm9wZG93blJlZiA9IFJlYWN0LmNyZWF0ZVJlZigpO1xyXG5cdFx0dGhpcy5ub3RpZmljYXRpb25zUmVmID0gUmVhY3QuY3JlYXRlUmVmKCk7XHJcblx0XHR0aGlzLmRyb3Bkb3duX2NvbnRlbnQgPSBbXVxyXG5cdFx0dGhpcy5vcHRpb25zUmVmID0gUmVhY3QuY3JlYXRlUmVmKCk7XHJcbiAgXHR0aGlzLm5vdGlmaWNhdGlvbl9kaXYgPSBcIlwiXHJcbiAgXHR0aGlzLmRyb3Bkb3duX2RpdiA9IFwiXCJcclxuICBcdHRoaXMubG9naW5fZGl2ID0gXCJcIlxyXG5cdH1cclxuXHJcblx0bG9nb3V0Q2xpY2tlZCAoKVxyXG5cdHtcclxuXHQgICAgZmV0Y2goJy9sb2dvdXQnLCB7XHJcblx0ICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxyXG5cdCAgICAgICAgaGVhZGVyczoge1xyXG5cdCAgICAgICAgXHRBY2NlcHQ6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuXHQgICAgICAgIFx0J0F1dGhvcml6YXRpb24nOiAnQmFzaWMnLFxyXG5cdCAgICAgICAgXHQnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxyXG5cdCAgICAgICAgfSxcclxuXHQgICAgfSlcclxuXHQgICAgLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHsgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTt9KVxyXG5cdCAgICAudGhlbihmdW5jdGlvbiAoZGF0YSkge1xyXG5cdCAgICBcdGxvY2F0aW9uLnJlbG9hZCh0cnVlKTtcclxuXHQgXHR9KVxyXG5cdH1cclxuXHJcblxyXG5cdHRvZ2dsZU5vdGlmaWNhdGlvbnMoKVxyXG5cdHtcclxuXHRcdGlmICh0aGlzLmRyb3Bkb3duUmVmLmN1cnJlbnQuc3R5bGUuZGlzcGxheSA9PSAnYmxvY2snKVxyXG5cdFx0e1xyXG5cdFx0XHR0aGlzLmNsb3NlTm90aWZpY2F0aW9ucygpXHJcblx0XHR9XHJcblx0XHRlbHNlXHJcblx0XHR7XHJcblx0XHRcdHRoaXMuc2hvd05vdGlmaWNhdGlvbnMoKVxyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0c2hvd05vdGlmaWNhdGlvbnMoKVxyXG5cdHtcclxuXHJcblx0XHR0aGlzLmRyb3Bkb3duUmVmLmN1cnJlbnQuc3R5bGUuZGlzcGxheSA9ICdibG9jaydcclxuXHRcdHRoaXMuZm9yY2VVcGRhdGUoKTtcclxuXHR9XHJcblxyXG5cdGNsb3NlTm90aWZpY2F0aW9ucygpXHJcblx0e1xyXG5cdFx0dGhpcy5kcm9wZG93blJlZi5jdXJyZW50LnN0eWxlLmRpc3BsYXkgPSAnbm9uZSdcclxuXHRcdHRoaXMuZm9yY2VVcGRhdGUoKTtcclxuXHR9XHJcblxyXG5cdGNvbXBvbmVudERpZE1vdW50KClcclxuXHR7XHJcblx0XHR2YXIgdGhhdCA9IHRoaXM7XHJcblx0ICAgIGZldGNoKCcvbm90aWZpY2F0aW9ucycsIHtcclxuXHQgICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcblx0ICAgICAgICBoZWFkZXJzOiB7XHJcblx0ICAgICAgICBcdEFjY2VwdDogJ2FwcGxpY2F0aW9uL2pzb24nLFxyXG5cdCAgICAgICAgXHQnQXV0aG9yaXphdGlvbic6ICdCYXNpYycsXHJcblx0ICAgICAgICBcdCdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXHJcblx0ICAgICAgICB9LFxyXG5cdCAgICB9KVxyXG5cdCAgICAudGhlbihmdW5jdGlvbihyZXNwb25zZSkgeyByZXR1cm4gcmVzcG9uc2UuanNvbigpO30pXHJcblx0ICAgIC50aGVuKGZ1bmN0aW9uIChkYXRhKSB7XHJcblx0ICAgIFx0dGhhdC5wcm9wcy5ub3RpZmljYXRpb25zID0gZGF0YS5ub3RpZmljYXRpb25zXHJcblx0XHQgIFx0aWYgKHRoYXQucHJvcHMubm90aWZpY2F0aW9ucyAhPSB1bmRlZmluZWQgJiYgdGhhdC5wcm9wcy5ub3RpZmljYXRpb25zLmxlbmd0aCA+IDApXHJcblx0XHQgIFx0e1xyXG5cdFx0XHQgIFx0Zm9yICh2YXIgaSA9IDA7IGkgPCB0aGF0LnByb3BzLm5vdGlmaWNhdGlvbnMubGVuZ3RoOyArK2kpXHJcblx0XHRcdCAgXHR7XHJcblx0XHRcdCAgXHRcdHZhciBjb21tZW50X3RleHQgPSB0aGF0LnByb3BzLm5vdGlmaWNhdGlvbnNbaV0ubnVtX2NvbW1lbnRzICsgXCIsIGNvbW1lbnRzXCJcclxuXHRcdFx0ICBcdFx0dmFyIGxpa2VzX3RleHQgPSB0aGF0LnByb3BzLm5vdGlmaWNhdGlvbnNbaV0ubnVtX2xpa2VzICsgXCIgbGlrZXNcIlxyXG5cclxuXHRcdFx0ICBcdFx0aWYgKHRoYXQucHJvcHMubm90aWZpY2F0aW9uc1tpXS5udW1fY29tbWVudHMgPT0gMClcclxuXHRcdFx0ICBcdFx0e1xyXG5cdFx0XHQgIFx0XHRcdGNvbW1lbnRfdGV4dCA9IFwiXCJcclxuXHRcdFx0ICBcdFx0fVxyXG5cdFx0XHQgIFx0XHRpZiAodGhhdC5wcm9wcy5ub3RpZmljYXRpb25zW2ldLm51bV9saWtlcyA9PSAwKVxyXG5cdFx0XHQgIFx0XHR7XHJcblx0XHRcdCAgXHRcdFx0bGlrZXNfdGV4dCA9IFwiXCJcclxuXHRcdFx0ICBcdFx0XHRpZiAoY29tbWVudF90ZXh0Lmxlbmd0aCAhPSAwKVxyXG5cdFx0XHQgIFx0XHRcdHtcclxuXHRcdFx0ICBcdFx0XHRcdGNvbW1lbnRfdGV4dCA9IGNvbW1lbnRfdGV4dC5zdWJzdHJpbmcoMCwgY29tbWVudF90ZXh0LmluZGV4T2YoXCIsXCIpKSArIGNvbW1lbnRfdGV4dC5zdWJzdHJpbmcoY29tbWVudF90ZXh0LmluZGV4T2YoXCIsXCIpICsgMSwgY29tbWVudF90ZXh0Lmxlbmd0aClcclxuXHRcdFx0ICBcdFx0XHR9XHJcblx0XHRcdCAgXHRcdH1cclxuXHRcdFx0ICBcdFx0dmFyIG5vdGlmaWNhdGlvbl90ZXh0ID0gXCJZb3VyIHBvc3QgXCIgKyB0aGF0LnByb3BzLm5vdGlmaWNhdGlvbnNbaV0ubmFtZSArIFwiIGdvdCBcIiArIGxpa2VzX3RleHQgKyBjb21tZW50X3RleHRcclxuXHRcdFx0ICBcdFx0dmFyIG5vdGlmaWNhdGlvbl91cmwgPSBcIi91c2VyL1wiICsgdGhhdC5wcm9wcy5ub3RpZmljYXRpb25zW2ldLnVzZXJuYW1lICsgXCIvXCIgKyB0aGF0LnByb3BzLm5vdGlmaWNhdGlvbnNbaV0ucG9zdF9pZFxyXG5cdFx0XHQgIFx0XHRpZiAodGhhdC5wcm9wcy5ub3RpZmljYXRpb25zW2ldLnRhZyA+IDApXHJcblx0XHRcdCAgXHRcdHtcclxuXHRcdFx0ICBcdFx0XHRub3RpZmljYXRpb25fdGV4dCA9IHRoYXQucHJvcHMubm90aWZpY2F0aW9uc1tpXS50YWdnZXIgKyBcIiB0YWdnZWQgeW91IGluIGEgcG9zdFwiXHJcblx0XHRcdCAgXHRcdFx0aWYgKHRoYXQucHJvcHMubm90aWZpY2F0aW9uc1tpXS50YWcgPT0gMSlcclxuXHRcdFx0ICBcdFx0XHR7XHJcblx0XHRcdCAgXHRcdFx0XHRub3RpZmljYXRpb25fdXJsID0gXCIvdXNlci9cIiArIHRoYXQucHJvcHMubm90aWZpY2F0aW9uc1tpXS50YWdnZXIgKyBcIi9cIiArIHRoYXQucHJvcHMubm90aWZpY2F0aW9uc1tpXS5wb3N0X2lkXHJcblx0XHRcdCAgXHRcdFx0fVxyXG5cdFx0XHQgIFx0XHRcdGVsc2VcclxuXHRcdFx0ICBcdFx0XHR7XHJcblx0XHRcdCAgXHRcdFx0XHRub3RpZmljYXRpb25fdXJsID0gXCIvdXNlci9cIiArIHRoYXQucHJvcHMubm90aWZpY2F0aW9uc1tpXS5uYW1lICsgXCIvXCIgKyB0aGF0LnByb3BzLm5vdGlmaWNhdGlvbnNbaV0ucG9zdF9pZFxyXG5cdFx0XHQgIFx0XHRcdH1cclxuXHJcblx0XHRcdCAgXHRcdH1cclxuXHRcdFx0ICBcdFx0dGhhdC5kcm9wZG93bl9jb250ZW50LnB1c2goPGRpdiBrZXkgPSB7dGhhdC5wcm9wcy5ub3RpZmljYXRpb25zW2ldLnBvc3RfaWR9IGlkID0ge3RoYXQucHJvcHMubm90aWZpY2F0aW9uc1tpXS5wb3N0X2lkfSBjbGFzc05hbWUgPSBcImRyb3Bkb3duZWxlbWVudFwiIHN0eWxlID0ge3tiYWNrZ3JvdW5kOid3aGl0ZScsIGJvcmRlcjogJzFweCBzb2xpZCAjRjhGOEY4JywgYmFja2dyb3VuZENvbG9yOicjRjhGOEY4J319PlxyXG5cdFx0XHQgIFx0XHRcdDxhIGNsYXNzTmFtZSA9IFwiZHJvcGRvd25lbGVtZW50XCIgaHJlZiA9IHtub3RpZmljYXRpb25fdXJsfSBzdHlsZSA9IHt7dGV4dERlY29yYXRpb246J25vbmUnLCBmb250RmFtaWx5OidSb2JvdG8nfX0+e25vdGlmaWNhdGlvbl90ZXh0fSA8L2E+XHJcblx0XHRcdCAgXHRcdFx0IDxidXR0b24ga2V5ID0ge3RoYXQucHJvcHMubm90aWZpY2F0aW9uc1tpXS5wb3N0X2lkfSBzdHlsZSA9IHt7cmlnaHQ6JzBweCcsIHBvc2l0aW9uOidhYnNvbHV0ZScsIGJvcmRlclJhZGl1czonMHB4JywgaGVpZ2h0OicyMHB4J319IGNsYXNzTmFtZSA9IFwiZHJvcGRvd25lbGVtZW50IGdyYXlCdXR0b25cIiBvbkNsaWNrID0ge3RoYXQucmVtb3ZlTm90aWZpY2F0aW9uLmJpbmQodGhhdCwgdGhhdC5wcm9wcy5ub3RpZmljYXRpb25zW2ldLnBvc3RfaWQpfT4gWCA8L2J1dHRvbj5cclxuXHRcdFx0ICBcdFx0XHQ8L2Rpdj4pXHJcblx0XHRcdCAgXHR9XHJcblx0XHRcdCAgXHR0aGF0Lm5vdGlmaWNhdGlvbl9kaXYgPSA8ZGl2IGNsYXNzTmFtZSA9IFwibm90aWZpY2F0aW9uc1wiIHJlZiA9IHt0aGF0Lm5vdGlmaWNhdGlvbnNSZWZ9IG9uQ2xpY2sgPSB7dGhhdC50b2dnbGVOb3RpZmljYXRpb25zLmJpbmQodGhhdCl9IHN0eWxlID0ge3ttYXJnaW5SaWdodDogJzEwcHgnLCBmb250V2VpZ2h0Oidib2xkJywgZm9udFNpemU6JzEycHQnLCBjb2xvcjogXCIjMTc4Mjc1XCIsIHdpZHRoOicyNHB4JywgaGVpZ2h0OicyNHB4JywgdGV4dEFsaWduOidjZW50ZXInLCBiYWNrZ3JvdW5kQ29sb3I6J3doaXRlJywgYm9yZGVyUmFkaXVzOic1MCUnLCBwb3NpdGlvbjoncmVsYXRpdmUnLCB0b3A6JzZweCcsIGRpc3BsYXk6J2ZsZXgnLCBqdXN0aWZ5Q29udGVudDonY2VudGVyJywgYWxpZ25JdGVtczonY2VudGVyJ319PiB7dGhhdC5wcm9wcy5ub3RpZmljYXRpb25zLmxlbmd0aH08L2Rpdj5cclxuXHRcdCAgXHR9XHJcblx0XHQgIFx0dGhhdC5mb3JjZVVwZGF0ZSgpXHJcblx0IFx0fSlcclxuXHRcdHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWRvd24nLCB0aGlzLmhhbmRsZUNsaWNrT3V0c2lkZS5iaW5kKHRoaXMpKTtcclxuXHR9XHJcblxyXG5cdGNvbXBvbmVudFdpbGxVbm1vdW50KClcclxuXHR7XHJcblx0XHR3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2Vkb3duJywgdGhpcy5oYW5kbGVDbGlja091dHNpZGUuYmluZCh0aGlzKSk7XHJcblx0fVxyXG5cclxuXHRoYW5kbGVDbGlja091dHNpZGUoZXZlbnQpXHJcblx0e1xyXG5cdFx0aWYgKGV2ZW50LnR5cGUgPT0gJ2NvbnRleHRtZW51JylcclxuXHRcdHtcclxuXHRcdFx0cmV0dXJuXHJcblx0XHR9XHJcblx0XHRpZiAoZXZlbnQudGFyZ2V0LmNsYXNzTmFtZSAhPSBcImRyb3Bkb3duXCIgJiYgZXZlbnQudGFyZ2V0LmNsYXNzTmFtZSAhPSBcIm5vdGlmaWNhdGlvbnNcIiAmJiBldmVudC50YXJnZXQuY2xhc3NOYW1lICE9IFwiZHJvcGRvd25lbGVtZW50XCIpIHtcclxuXHRcdFx0dGhpcy5jbG9zZU5vdGlmaWNhdGlvbnMoKVxyXG5cdFx0fVxyXG5cdFx0ZWxzZVxyXG5cdFx0e1xyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0cmVtb3ZlTm90aWZpY2F0aW9uKGlkKVxyXG5cdHtcclxuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5kcm9wZG93bl9jb250ZW50Lmxlbmd0aDsgKytpKVxyXG5cdFx0e1xyXG5cdFx0XHRpZiAodGhpcy5kcm9wZG93bl9jb250ZW50W2ldLnByb3BzLmlkID09IGlkKVxyXG5cdFx0XHR7XHJcblx0XHRcdFx0dGhpcy5kcm9wZG93bl9jb250ZW50LnNwbGljZShpLCAxKVxyXG5cdFx0XHRcdHRoaXMubm90aWZpY2F0aW9uX2RpdiA9IDxkaXYgY2xhc3NOYW1lID0gXCJub3RpZmljYXRpb25zXCIgcmVmID0ge3RoaXMubm90aWZpY2F0aW9uc1JlZn0gb25DbGljayA9IHt0aGlzLnRvZ2dsZU5vdGlmaWNhdGlvbnMuYmluZCh0aGlzKX0gc3R5bGUgPSB7e21hcmdpblJpZ2h0OiAnMTBweCcsIGZvbnRXZWlnaHQ6J2JvbGQnLCBmb250U2l6ZTonMTRwdCcsIG1pbldpZHRoOiczMHB4JywgbWluSGVpZ2h0OiczMHB4JywgdGV4dEFsaWduOidjZW50ZXInfX0+IHt0aGlzLm5vdGlmaWNhdGlvbl9kaXYucHJvcHMuY2hpbGRyZW5bMV0gLTF9PC9kaXY+XHJcblx0XHRcdFx0YnJlYWtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdFx0aWYgKHRoaXMuZHJvcGRvd25fY29udGVudC5sZW5ndGggPT0gMClcclxuXHRcdHtcclxuXHRcdFx0dGhpcy5ub3RpZmljYXRpb25fZGl2ID0gXCJcIlxyXG5cdFx0XHR0aGlzLmNsb3NlTm90aWZpY2F0aW9ucygpO1xyXG5cdFx0fVxyXG5cclxuXHRcdHRoaXMuZm9yY2VVcGRhdGUoKVxyXG5cdCAgICBmZXRjaCgnL3JlbW92ZV9ub3RpZmljYXRpb24nLCB7XHJcblx0ICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxyXG5cdCAgICAgICAgaGVhZGVyczoge1xyXG5cdCAgICAgICAgXHRBY2NlcHQ6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuXHQgICAgICAgIFx0J0F1dGhvcml6YXRpb24nOiAnQmFzaWMnLFxyXG5cdCAgICAgICAgXHQnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxyXG5cdCAgICAgICAgfSxcclxuXHQgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHt9KSxcclxuXHQgICAgfSlcclxuXHQgICAgLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHsgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTt9KVxyXG5cdCAgICAudGhlbihmdW5jdGlvbiAoZGF0YSkge1xyXG5cdCBcdH0pXHJcblx0fVxyXG5cclxuXHR0b2dnbGVPcHRpb25zKClcclxuXHR7XHJcblx0XHRpZiAodGhpcy5vcHRpb25zUmVmLmN1cnJlbnQuc3R5bGUuZGlzcGxheSA9PSAnbm9uZScpXHJcblx0XHR7XHJcblx0XHRcdHRoaXMub3B0aW9uc1JlZi5jdXJyZW50LnN0eWxlLmRpc3BsYXkgPSAnJ1xyXG5cdFx0fVxyXG5cdFx0ZWxzZVxyXG5cdFx0e1xyXG5cdFx0XHR0aGlzLm9wdGlvbnNSZWYuY3VycmVudC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnXHJcblx0XHR9XHJcblx0fVxyXG5cdGNsb3NlT3B0aW9ucygpXHJcblx0e1xyXG5cclxuXHRcdHRoaXMub3B0aW9uc1JlZi5jdXJyZW50LnN0eWxlLmRpc3BsYXkgPSAnbm9uZSdcclxuXHR9XHJcbiAgcmVuZGVyKCkge1xyXG5cdFx0dGhpcy5kcm9wZG93bl9kaXYgPSA8ZGl2IGNsYXNzTmFtZSA9IFwiZHJvcGRvd25cIiByZWYgPSB7dGhpcy5kcm9wZG93blJlZn0gc3R5bGUgPSB7eyB3aWR0aDonNDAwcHgnLCBtaW5IZWlnaHQ6JzEwcHgnLCBwb3NpdGlvbjogXCJmaXhlZFwiLCByaWdodDonMTI0JywgdG9wOic1MnB4JywgYmFja2dyb3VuZDond2hpdGUnLCBkaXNwbGF5Oidub25lJywgZm9udFdlaWdodDonbm9ybWFsJywgZm9udFNpemU6JzEycHQnLCB6SW5kZXg6JzgnfX0+e3RoaXMuZHJvcGRvd25fY29udGVudH08L2Rpdj5cclxuXHJcbiAgXHRsZXQgdXNlcl9sb2dpbiwgbG9naW5fZGl2O1xyXG4gIFx0aWYgKHRoaXMucHJvcHMudXNlcm5hbWUgPT0gdW5kZWZpbmVkKSB7XHJcblx0ICBcdHVzZXJfbG9naW4gPSAoXHJcblx0XHRcdFx0PGRpdiBjbGFzc05hbWU9XCJoZWFkZXJMaW5rXCIgb25DbGljaz17KCkgPT4ge3dpbmRvdy5sb2NhdGlvbi5ocmVmID0gXCIvcmVnaXN0ZXJcIn19PlJlZ2lzdGVyPC9kaXY+XHJcblx0XHRcdCk7XHJcblx0XHRcdGxvZ2luX2RpdiA9IDxkaXYgY2xhc3NOYW1lPVwiaGVhZGVyTGlua1wiIG9uQ2xpY2s9eygpID0+IHt3aW5kb3cubG9jYXRpb24uaHJlZiA9IFwiL2xvZ2luXCJ9fT5Mb2dpbjwvZGl2PlxyXG4gIFx0fSBlbHNlIHtcclxuXHRcdFx0dXNlcl9sb2dpbiA9IChcclxuXHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT1cImhlYWRlckxpbmtcIiBvbkNsaWNrPXsoKSA9PiB7d2luZG93LmxvY2F0aW9uLmhyZWYgPSBcIi91c2VyL1wiICsgdGhpcy5wcm9wcy51c2VybmFtZX19Pnt0aGlzLnByb3BzLnVzZXJuYW1lfTwvZGl2PlxyXG5cdFx0XHQpO1xyXG5cdFx0fVxyXG5cclxuICAgIHJldHVybiAoXHJcblx0XHRcdDxkaXY+XHJcblx0XHRcdFx0PGhlYWQ+XHJcblx0XHRcdFx0XHQ8dGl0bGU+VW5oZWFyZDwvdGl0bGU+XHJcblx0XHRcdFx0XHQ8bGluayByZWw9XCJzdHlsZXNoZWV0XCIgaHJlZj1cImh0dHBzOi8vbWF4Y2RuLmJvb3RzdHJhcGNkbi5jb20vYm9vdHN0cmFwLzQuMC4wL2Nzcy9ib290c3RyYXAubWluLmNzc1wiLz5cclxuXHRcdFx0XHQ8L2hlYWQ+XHJcblx0XHRcdFx0PGhlYWRlcj5cclxuXHRcdFx0XHRcdDxkaXYgY2xhc3NOYW1lPVwiZml4ZWRIZWFkZXJcIj5cclxuXHRcdFx0XHRcdFx0PGRpdiBjbGFzc05hbWU9XCJoZWFkZXJMaW5rXCIgb25DbGljaz17KCkgPT4ge3dpbmRvdy5sb2NhdGlvbi5ocmVmID0gXCIvXCJ9fT5Ib21lPC9kaXY+XHJcblx0XHRcdFx0XHRcdDxkaXYgc3R5bGU9e3tmbGV4OiAnMSAwIGF1dG8nLCBwYWRkaW5nOiAnMCAxMnB4J319PlxyXG5cdFx0XHRcdFx0XHRcdDxTZWFyY2hMaXN0IC8+XHJcblx0XHRcdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcdFx0XHR7bG9naW5fZGl2fVxyXG5cdFx0XHRcdFx0XHR7dXNlcl9sb2dpbn1cclxuXHRcdFx0XHRcdFx0e3RoaXMubm90aWZpY2F0aW9uX2Rpdn1cclxuXHRcdFx0XHRcdFx0e3RoaXMuZHJvcGRvd25fZGl2fVxyXG5cdFx0XHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT1cImhlYWRlckxpbmtcIiBvbkNsaWNrPXsoKSA9PiB7d2luZG93LmxvY2F0aW9uLmhyZWYgPSBcIi9yYW5kb21cIn19PlJhbmRvbTwvZGl2PlxyXG5cdFx0XHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT1cImhlYWRlck1lbnVBcnJvd1wiPlxyXG5cdFx0XHRcdFx0XHRcdDxzdmcgY2xhc3NOYW1lID0gXCJvcHRpb25zXCIgb25DbGljayA9IHt0aGlzLnRvZ2dsZU9wdGlvbnMuYmluZCh0aGlzKX0gd2lkdGg9XCIxOFwiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAyNiAxNlwiIGZpbGw9XCJub25lXCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPlxyXG5cdFx0XHRcdFx0XHRcdFx0PHBhdGggZD1cIk0yMy4wOTI2IDEuMjVMMTMgMTQuMzYwNkwyLjkwNzQyIDEuMjVMMjMuMDkyNiAxLjI1WlwiIGZpbGw9XCJ3aGl0ZVwiIHN0cm9rZT1cIndoaXRlXCIgc3Ryb2tlV2lkdGg9XCIyXCIgLz5cclxuXHRcdFx0XHRcdFx0XHQ8L3N2Zz5cclxuXHRcdFx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0XHRcdDxkaXYgcmVmID0ge3RoaXMub3B0aW9uc1JlZn0gc3R5bGUgPSB7e2JhY2tncm91bmRDb2xvcjogJyMxNzgyNzUnLCBkaXNwbGF5Oidub25lJywgcG9zaXRpb246J2ZpeGVkJywgcmlnaHQ6JzBweCcsIHRvcDonNDBweCd9fT5cclxuXHRcdFx0XHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT1cImhlYWRlckxpbmtcIiBvbkNsaWNrPXsoKSA9PiB7d2luZG93LmxvY2F0aW9uLmhyZWYgPSBcIi9hYm91dFwifX0+QWJvdXQ8L2Rpdj5cclxuXHRcdFx0XHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT1cImhlYWRlckxpbmtcIiBvbkNsaWNrPXsoKSA9PiB7d2luZG93LmxvY2F0aW9uLmhyZWYgPSBcIi9jb250YWN0XCJ9fT5Db250YWN0PC9kaXY+XHJcblx0XHRcdFx0XHRcdFx0e3RoaXMucHJvcHMudXNlcm5hbWUgIT0gbnVsbCAmJiA8ZGl2IGNsYXNzTmFtZT1cImhlYWRlckxpbmtcIiBvbkNsaWNrPXt0aGlzLmxvZ291dENsaWNrZWQuYmluZCh0aGlzKX0+TG9nb3V0PC9kaXY+fVxyXG5cdFx0XHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcdDwvaGVhZGVyPlxyXG5cdFx0XHQ8L2Rpdj5cclxuXHRcdCk7XHJcblx0fVxyXG59XHJcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB1dGlscyBmcm9tICcuL3V0aWxzLmpzJ1xyXG5pbXBvcnQgdGFnX3V0aWxzIGZyb20gJy4vdGFnX3V0aWxzLmpzJ1xyXG5cclxuY29uc3QgbW9udGhOYW1lcyA9IFtcIkphbnVhcnlcIiwgXCJGZWJydWFyeVwiLCBcIk1hcmNoXCIsIFwiQXByaWxcIiwgXCJNYXlcIiwgXCJKdW5lXCIsXHJcbiAgXCJKdWx5XCIsIFwiQXVndXN0XCIsIFwiU2VwdGVtYmVyXCIsIFwiT2N0b2JlclwiLCBcIk5vdmVtYmVyXCIsIFwiRGVjZW1iZXJcIlxyXG5dO1xyXG5cclxuY2xhc3MgUG9zdCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudFxyXG57XHJcblx0Y29uc3RydWN0b3IocHJvcHMpXHJcblx0e1xyXG5cdFx0c3VwZXIocHJvcHMpO1xyXG5cdFx0dGhpcy5saWtlc19zY29yZSA9IHRoaXMucHJvcHMuc29uZy5saWtlcyAtIHByb3BzLnNvbmcuZGlzbGlrZXM7XHJcblx0XHQvL3RoaXMubGlrZVJlZiA9IFJlYWN0LmNyZWF0ZVJlZigpO1xyXG5cdFx0Ly90aGlzLmRpc2xpa2VSZWYgPSBSZWFjdC5jcmVhdGVSZWYoKTtcclxuXHRcdHRoaXMudXBfY29sb3IgPSBcIiMyRjM4NDZcIlxyXG5cdFx0dGhpcy5kb3duX2NvbG9yID0gXCIjMkYzODQ2XCJcclxuXHRcdHRoaXMuY29udGVudFJlZiA9IFJlYWN0LmNyZWF0ZVJlZigpO1xyXG5cdFx0dGhpcy5lbGxpcHNpcyA9IDxkaXY+PC9kaXY+XHJcblx0XHR0aGlzLmJ1bXBfYnV0dG9uID0gPGJ1dHRvbiBzdHlsZSA9IHt7Y29sb3I6J2JsYWNrJ319IG9uQ2xpY2sgPSB7dGhpcy5idW1wQ2xpY2tlZC5iaW5kKHRoaXMpfT4gQnVtcCA8L2J1dHRvbj5cclxuXHRcdGlmICh0aGlzLnByb3BzLmJ1bXApXHJcblx0XHR7XHJcblx0XHRcdHRoaXMuYnVtcF9idXR0b24gPSA8YnV0dG9uIHN0eWxlID0ge3tjb2xvcjonYmxhY2snLCBiYWNrZ3JvdW5kQ29sb3I6ICdncmF5J319IG9uQ2xpY2sgPSB7dGhpcy5idW1wQ2xpY2tlZC5iaW5kKHRoaXMpfSBkaXNhYmxlZD4gQnVtcGVkIDwvYnV0dG9uPlxyXG5cdFx0fVxyXG5cclxuXHR9XHJcblxyXG5cdHJlbmRlcmlmcmFtZShpZnJhbWUpIHtcclxuXHRcdHJldHVybiB7XHJcblx0XHRcdF9faHRtbDogaWZyYW1lXHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHRsaWtlQ2xpY2tlZCgpXHJcblx0e1xyXG5cclxuXHRcdGlmICghdXRpbHMuY2hlY2tMb2dnZWRJbigpKVxyXG5cdFx0e1xyXG5cdFx0XHRhbGVydChcIk1VU1QgQkUgTE9HR0VEIElOXCIpXHJcblx0XHRcdHJldHVybjtcclxuXHRcdH1cclxuXHJcblx0XHR2YXIgdGhhdCA9IHRoaXM7XHJcblx0XHR2YXIgaWQgPSB0aGF0LnByb3BzLnNvbmcucG9zdF9pZDtcclxuXHRcdGlmIChpZCA9PSB1bmRlZmluZWQpXHJcblx0XHR7XHJcblx0XHRcdGlkID0gdGhhdC5wcm9wcy5zb25nLmlkO1xyXG5cdFx0fVxyXG5cclxuXHRcdHZhciBwb3N0X3VybCA9IFwiL2xpa2VcIlxyXG5cdFx0aWYgKHRoYXQucHJvcHMuc29uZy51c2VybmFtZSA9PSB1bmRlZmluZWQpXHJcblx0XHR7XHJcblx0XHRcdHBvc3RfdXJsID0gXCIvZ2xvYmFsX2xpa2VcIlxyXG5cdFx0fVxyXG5cclxuICAgIGZldGNoKHBvc3RfdXJsLCB7XHJcbiAgICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcbiAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgXHRBY2NlcHQ6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuICAgICAgXHQnQXV0aG9yaXphdGlvbic6ICdCYXNpYycsXHJcbiAgICAgIFx0J0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuICAgICAgfSxcclxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe3VzZXI6IHRoYXQucHJvcHMuc29uZy51c2VybmFtZSwgaWQ6IGlkLCBuYW1lOnRoaXMucHJvcHMuc29uZy50aXRsZX0pXHJcbiAgICB9KS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7XHJcbiAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7XHJcbiAgICB9KTtcclxuXHJcbiAgXHRpZiAodGhpcy5wcm9wcy5saWtlX3N0YXRlID09IDEpXHJcbiAgXHR7XHJcbiAgICAgIHRoaXMubGlrZXNfc2NvcmUgLT0gMTtcclxuICAgICAgdGhpcy51cF9jb2xvciA9IFwiIzJGMzg0NlwiXHJcbiAgICAgIHRoaXMucHJvcHMubGlrZV9zdGF0ZSA9IC0xO1xyXG4gIFx0fVxyXG4gIFx0ZWxzZVxyXG4gIFx0e1xyXG4gIFx0XHRpZiAodGhpcy5wcm9wcy5saWtlX3N0YXRlID09IC0xKVxyXG4gIFx0XHR7XHJcbiAgXHRcdFx0dGhpcy5saWtlc19zY29yZSArPSAxO1xyXG4gIFx0XHR9XHJcbiAgXHRcdGVsc2VcclxuICBcdFx0e1xyXG4gIFx0XHRcdHRoaXMubGlrZXNfc2NvcmUgKz0gMjtcclxuICBcdFx0fVxyXG4gIFx0XHR0aGlzLnVwX2NvbG9yID0gXCIjMTQ4NWNjXCJcclxuICBcdFx0dGhpcy5kb3duX2NvbG9yID0gXCIjMkYzODQ2XCJcclxuICBcdFx0dGhpcy5wcm9wcy5saWtlX3N0YXRlID0gMTtcclxuICBcdH1cclxuXHJcbiAgXHR0aGlzLmZvcmNlVXBkYXRlKCk7XHJcblx0fVxyXG5cclxuXHRkaXNsaWtlQ2xpY2tlZCgpXHJcblx0e1xyXG5cdFx0aWYgKCF1dGlscy5jaGVja0xvZ2dlZEluKCkpXHJcblx0XHR7XHJcblx0XHRcdGFsZXJ0KFwiTVVTVCBCRSBMT0dHRUQgSU5cIilcclxuXHRcdFx0cmV0dXJuO1xyXG5cdFx0fVxyXG5cdFx0dmFyIHRoYXQgPSB0aGlzO1xyXG5cdFx0dmFyIGlkID0gdGhhdC5wcm9wcy5zb25nLnBvc3RfaWQ7XHJcblx0XHRpZiAoaWQgPT0gdW5kZWZpbmVkKVxyXG5cdFx0e1xyXG5cdFx0XHRpZCA9IHRoYXQucHJvcHMuc29uZy5pZDtcclxuXHRcdH1cclxuXHJcblx0XHR2YXIgcG9zdF91cmwgPSBcIi9kaXNsaWtlXCJcclxuXHRcdGlmICh0aGF0LnByb3BzLnNvbmcudXNlcm5hbWUgPT0gdW5kZWZpbmVkKVxyXG5cdFx0e1xyXG5cdFx0XHRwb3N0X3VybCA9IFwiL2dsb2JhbF9kaXNsaWtlXCJcclxuXHRcdH1cclxuXHJcbiAgICBmZXRjaChwb3N0X3VybCwge1xyXG4gICAgICBtZXRob2Q6IFwiUE9TVFwiLFxyXG4gICAgICBoZWFkZXJzOiB7XHJcbiAgICAgIFx0QWNjZXB0OiAnYXBwbGljYXRpb24vanNvbicsXHJcbiAgICAgIFx0J0F1dGhvcml6YXRpb24nOiAnQmFzaWMnLFxyXG4gICAgICBcdCdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXHJcbiAgICAgIH0sXHJcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHt1c2VyOiB0aGF0LnByb3BzLnNvbmcudXNlcm5hbWUsIGlkOiBpZCwgbmFtZTogdGhhdC5wcm9wcy5zb25nLnRpdGxlfSl9KVxyXG4gICAgLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHtcclxuICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTtcclxuICAgIH0pO1xyXG5cclxuICBcdGlmICh0aGlzLnByb3BzLmxpa2Vfc3RhdGUgPT0gMClcclxuICBcdHtcclxuICBcdFx0dGhpcy5kb3duX2NvbG9yID0gXCIjMkYzODQ2XCJcclxuICBcdFx0dGhpcy5wcm9wcy5saWtlX3N0YXRlID0gLTE7XHJcbiAgXHRcdHRoaXMubGlrZXNfc2NvcmUgKz0gMTtcclxuICBcdH1cclxuICBcdGVsc2VcclxuICBcdHtcclxuICBcdFx0aWYgKHRoaXMucHJvcHMubGlrZV9zdGF0ZSA9PSAtMSlcclxuICBcdFx0e1xyXG4gIFx0XHRcdHRoaXMubGlrZXNfc2NvcmUgLT0gMTtcclxuICBcdFx0fVxyXG4gIFx0XHRlbHNlXHJcbiAgXHRcdHtcclxuICBcdFx0XHR0aGlzLmxpa2VzX3Njb3JlIC09IDI7XHJcbiAgXHRcdH1cclxuICBcdFx0dGhpcy5kb3duX2NvbG9yID0gXCIjZGQzZDNkXCJcclxuICBcdFx0dGhpcy51cF9jb2xvciA9IFwiIzJGMzg0NlwiXHJcbiAgXHRcdHRoaXMucHJvcHMubGlrZV9zdGF0ZSA9IDA7XHJcbiAgXHR9XHJcbiAgXHR0aGlzLmZvcmNlVXBkYXRlKCk7XHJcblx0fVxyXG5cclxuXHRjb21wb25lbnREaWRNb3VudCgpIHtcclxuXHRcdGlmICh0aGlzLmNvbnRlbnRSZWYuY3VycmVudC5vZmZzZXRIZWlnaHQgPiAzOTApXHJcblx0XHR7XHJcblx0XHRcdHZhciBjb250ZW50X3VybCA9IFwiL3VzZXIvXCIgKyB0aGlzLnByb3BzLnNvbmcudXNlcm5hbWUrIFwiL1wiICsgdGhpcy5wcm9wcy5zb25nLnBvc3RfaWRcclxuXHJcblx0XHRcdC8vIGlmICh0aGlzLnByb3BzLnNvbmcuc29uZyA9PSBcIk5PX1NPTkdfQUxCVU1fT05MWVwiKVxyXG5cdFx0XHQvLyB7XHJcblx0XHRcdC8vIFx0Y29udGVudF91cmwgPSBcIi9hbGJ1bS9cIiArIHRoaXMucHJvcHMuc29uZy5hcnRpc3QgKyBcIi9cIiArIHRoaXMucHJvcHMuc29uZy5hbGJ1bTtcclxuXHRcdFx0Ly8gfVxyXG5cclxuXHJcblx0XHRcdHRoaXMuZWxsaXBzaXMgPSA8ZGl2IHN0eWxlID0ge3t9fT5cclxuXHRcdFx0PGEgc3R5bGUgPSB7e2NvbG9yOicjMTc4Mjc1JywgZm9udFNpemU6JzE0cHQnLCBmb250V2VpZ2h0OiAnYm9sZCd9fWhyZWYgPSB7Y29udGVudF91cmx9PiBTZWUgTW9yZSA8L2E+XHJcblx0XHRcdDwvZGl2PlxyXG5cdFx0XHR0aGlzLmZvcmNlVXBkYXRlKCk7XHJcblxyXG5cdFx0fVxyXG5cclxuXHR9XHJcblxyXG5cdGJ1bXBDbGlja2VkKClcclxuXHR7XHJcblx0XHRpZiAoIXV0aWxzLmNoZWNrTG9nZ2VkSW4oKSlcclxuXHRcdHtcclxuXHRcdFx0YWxlcnQoXCJNVVNUIEJFIExPR0dFRCBJTlwiKVxyXG5cdFx0XHRyZXR1cm47XHJcblx0XHR9XHJcblx0XHR2YXIgdGhhdCA9IHRoaXNcclxuXHQgICAgZmV0Y2goXCIvYnVtcFwiLCB7XHJcblx0ICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxyXG5cdCAgICAgICAgaGVhZGVyczoge1xyXG5cdCAgICAgICAgXHRBY2NlcHQ6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuXHQgICAgICAgIFx0J0F1dGhvcml6YXRpb24nOiAnQmFzaWMnLFxyXG5cdCAgICAgICAgXHQnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxyXG5cdCAgICAgICAgfSxcclxuXHQgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtwb3N0X2lkOiB0aGlzLnByb3BzLnNvbmcucG9zdF9pZH0pfSlcclxuXHQgICAgLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHsgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTt9KVxyXG5cdCAgICAudGhlbihmdW5jdGlvbiAoZGF0YSkge1xyXG5cdCAgICBcdGlmIChkYXRhLnN1Y2Nlc3MpXHJcblx0ICAgIFx0e1xyXG5cdCAgICBcdFx0Ly9jaGFuZ2UgYnVtcCB0byBidW1wZWRcclxuXHQgICAgXHRcdHRoYXQuYnVtcF9idXR0b24gPSA8YnV0dG9uIHN0eWxlID0ge3tjb2xvcjonYmxhY2snLCBiYWNrZ3JvdW5kQ29sb3I6ICdncmF5J319IG9uQ2xpY2sgPSB7dGhhdC5idW1wQ2xpY2tlZC5iaW5kKHRoaXMpfSBkaXNhYmxlZD4gQnVtcGVkIDwvYnV0dG9uPlxyXG5cdCAgICBcdFx0dGhhdC5mb3JjZVVwZGF0ZSgpXHJcblx0ICAgIFx0fVxyXG5cdCAgICBcdGVsc2VcclxuXHQgICAgXHR7XHJcblx0ICAgIFx0XHQvL2FsZXJ0IG5vIGJ1bXBzXHJcblx0ICAgIFx0XHRhbGVydChcIllPVSBIQVZFIE5PIEJVTVBTIEFWQUlMQUJMRVwiKVxyXG5cdCAgICBcdH1cclxuXHQgICAgfSlcclxuXHR9XHJcblx0XHRcdFx0XHRcdC8vIDxkaXYgIHN0eWxlID0ge3t3aWR0aDonMzBweCcsIGhlaWdodDonMzBweCcsIHZlcnRpY2FsQWxpZ246ICdtaWRkbGUnLCB0ZXh0QWxpZ246ICdjZW50ZXInLCBmb250U2l6ZTogJzE2cHgnLCBmb250V2VpZ2h0Oidib2xkJ319PlxyXG5cdFx0XHRcdFx0XHQvLyBcdHt0aGlzLmJ1bXBfYnV0dG9ufVxyXG5cdFx0XHRcdFx0XHQvLyA8L2Rpdj5cclxuXHRyZW5kZXIoKVxyXG5cdHtcclxuXHRcdHZhciBkYXRlID0gbmV3IERhdGUodGhpcy5wcm9wcy5zb25nLnRpbWVzdGFtcClcclxuXHRcdHZhciBwb3N0X3RpdGxlID0gPGgxIGNsYXNzTmFtZT1cInBvc3RfdGl0bGVcIiBzdHlsZT0ge3tmb250V2VpZ2h0Oidib2xkJywgZm9udFNpemU6JzI0cHgnfX0+PGEgaHJlZiA9IHtcIi91c2VyL1wiICsgdGhpcy5wcm9wcy5zb25nLnVzZXJuYW1lICsgXCIvXCIgKyB0aGlzLnByb3BzLnNvbmcuaWR9ID4ge3RoaXMucHJvcHMuc29uZy50aXRsZX08L2E+PC9oMT47XHJcblx0XHR2YXIgcG9zdGVyX3VzZXJuYW1lID0gJyc7Ly90aGlzLnByb3BzLnNvbmcuYXJ0aXN0O1xyXG5cdFx0dmFyIHBvc3Rlcl91c2VybmFtZV91cmwgPSAnJzsvL1wiL2FydGlzdC9cIiArIHRoaXMucHJvcHMuc29uZy5hcnRpc3Q7XHJcblxyXG5cdFx0dmFyIGFydGlzdF9uYW1lID0gdGhpcy5wcm9wcy5zb25nLmFydGlzdDtcclxuXHJcblx0XHR2YXIgYXJ0aXN0X25hbWVzID0gW11cclxuXHRcdHRoaXMucHJvcHMuc29uZy5hcnRpc3Quc3BsaXQoJ14nKS5tYXAoKGl0ZW0sIGkpID0+IHtcclxuXHRcdFx0YXJ0aXN0X25hbWVzLnB1c2goPGEga2V5ID0ge2l9IGhyZWYgPXtcIi9hcnRpc3QvXCIgKyBpdGVtfSA+IHtpdGVtfSA8L2E+KTtcclxuXHRcdFx0YXJ0aXN0X25hbWVzLnB1c2goJywnKVxyXG5cdFx0fSlcclxuXHRcdGFydGlzdF9uYW1lcyA9IGFydGlzdF9uYW1lcy5zbGljZSgwLCBhcnRpc3RfbmFtZXMubGVuZ3RoLTEpXHJcblxyXG5cdFx0dmFyIGFydGlzdF91cmwgPSBcIi9hcnRpc3QvXCIgKyB0aGlzLnByb3BzLnNvbmcuYXJ0aXN0O1xyXG5cclxuXHRcdHZhciBjb250ZW50X2RpdiA9IFtdXHJcblxyXG5cdFx0dmFyIGNvbnRlbnQgPSA8aDI+e2NvbnRlbnRfZGl2fTwvaDI+XHJcblxyXG5cdFx0dmFyIGJ5X3RleHQgPSBcIiBieVwiXHJcblx0XHR2YXIgYXRfdGV4dCA9IFwiIHBvc3RlZCBhdCBcIlxyXG5cclxuXHRcdHZhciBwb3N0X2lkID0gdGhpcy5wcm9wcy5zb25nLnBvc3RfaWQ7XHJcblxyXG5cdFx0Ly9ub3QgJ2dsb2JhbCcgcG9zdFxyXG5cdFx0aWYgKHRoaXMucHJvcHMuc29uZy51c2VybmFtZSAhPSB1bmRlZmluZWQpXHJcblx0XHR7XHJcblx0XHRcdHBvc3RfaWQgPSB0aGlzLnByb3BzLnNvbmcuaWQ7XHJcblx0XHRcdC8vcG9zdF90aXRsZSA9IFwiXCI7XHJcblx0XHRcdGJ5X3RleHQgPSBcIiBwb3N0ZWQgYnkgXCJcclxuXHRcdFx0YXRfdGV4dCA9IFwiIGF0IFwiXHJcblx0XHRcdHBvc3Rlcl91c2VybmFtZSA9IHRoaXMucHJvcHMuc29uZy51c2VybmFtZTtcclxuXHRcdFx0cG9zdGVyX3VzZXJuYW1lX3VybCA9IFwiL3VzZXIvXCIgKyB0aGlzLnByb3BzLnNvbmcudXNlcm5hbWU7XHJcblxyXG5cdFx0XHRjb250ZW50X2RpdiA9IHRhZ191dGlscy5mb3JtYXRDb250ZW50KHRoaXMucHJvcHMuc29uZy5jb250ZW50LCB0aGlzLnByb3BzLnNvbmcudGFncylcclxuXHRcdH1cclxuXHJcblx0XHR2YXIgbGlrZV9zdHlsZSA9IHtjb2xvcjonYmxhY2snfVxyXG5cdFx0dmFyIGRpc2xpa2Vfc3R5bGUgPSB7Y29sb3I6J2JsYWNrJ31cclxuXHRcdGlmICh0aGlzLnByb3BzLmxpa2Vfc3RhdGUgPT0gMSlcclxuXHRcdHtcclxuXHRcdFx0bGlrZV9zdHlsZS5jb2xvciA9ICdibHVlJztcclxuXHRcdFx0dGhpcy51cF9jb2xvciA9IFwiIzE0ODVjY1wiXHJcblx0XHR9XHJcblx0XHRlbHNlIGlmICh0aGlzLnByb3BzLmxpa2Vfc3RhdGUgPT0gMClcclxuXHRcdHtcclxuXHRcdFx0ZGlzbGlrZV9zdHlsZS5jb2xvciA9ICdyZWQnO1xyXG5cdFx0XHR0aGlzLmRvd25fY29sb3IgPSBcIiNkZDNkM2RcIlxyXG5cdFx0fVxyXG5cclxuXHRcdHZhciBsaWtlc19zZWN0aW9uID0gPGRpdj5cclxuXHRcdFx0PGRpdiAgY2xhc3NOYW1lPVwibGlrZXNcIiBpZCA9IHtwb3N0X2lkfSA+TGlrZXM6IHt0aGlzLmxpa2VzX3Njb3JlfSA8L2Rpdj5cclxuXHRcdFx0PGJ1dHRvbiByZWYgPSB7dGhpcy5saWtlUmVmfSBvbkNsaWNrID0ge3RoaXMubGlrZUNsaWNrZWQuYmluZCh0aGlzKX0gdHlwZT1cImJ1dHRvblwiIGNsYXNzTmFtZSA9IFwibGlrZVwiIGlkID0ge3Bvc3RfaWR9IHN0eWxlID0ge2xpa2Vfc3R5bGV9Pkxpa2U8L2J1dHRvbj5cclxuXHRcdFx0PGJ1dHRvbiByZWYgPSB7dGhpcy5kaXNsaWtlUmVmfSBvbkNsaWNrID0ge3RoaXMuZGlzbGlrZUNsaWNrZWQuYmluZCh0aGlzKX0gdHlwZT1cImJ1dHRvblwiIGNsYXNzTmFtZSA9IFwidW5saWtlXCIgaWQgPSB7cG9zdF9pZH0gc3R5bGUgPSB7ZGlzbGlrZV9zdHlsZX0+SGF0ZTwvYnV0dG9uPlxyXG5cdFx0XHQ8L2Rpdj5cclxuXHRcdHZhciBjb21tZW50X3NlY3Rpb24gPSA8ZGl2IHN0eWxlID0ge3tmb250U2l6ZTonMjRweCd9fSBjbGFzc05hbWU9IFwiY29tbWVudF9zZWN0aW9uXCIgaWQgPSB7cG9zdF9pZH0gLz5cclxuXHRcdHZhciBjb250ZW50X3VybCA9IFwiL3Bvc3QvXCIgKyB0aGlzLnByb3BzLnNvbmcuYXJ0aXN0ICsgXCIvXCIgKyB0aGlzLnByb3BzLnNvbmcuc29uZztcclxuXHRcdHZhciBjb250ZW50X25hbWUgPSB0aGlzLnByb3BzLnNvbmcuc29uZztcclxuXHJcblx0XHRpZiAodGhpcy5wcm9wcy5zb25nLnNvbmcgPT0gXCJOT19TT05HX0FMQlVNX09OTFlcIilcclxuXHRcdHtcclxuXHRcdFx0Y29udGVudF91cmwgPSBcIi9hbGJ1bS9cIiArIHRoaXMucHJvcHMuc29uZy5hcnRpc3QgKyBcIi9cIiArIHRoaXMucHJvcHMuc29uZy5hbGJ1bTtcclxuXHRcdFx0Y29udGVudF9uYW1lID0gdGhpcy5wcm9wcy5zb25nLmFsYnVtO1xyXG5cdFx0fVxyXG5cdFx0dmFyIGxlZnRwYWRkaW5nID0gJzBweCdcclxuXHRcdHZhciBjb250ZW50X3NlY3Rpb24gPSA8ZGl2ICBzdHlsZSA9IHt7bWF4SGVpZ2h0Oic0NTBweCcsIHBhZGRpbmdUb3A6JzVweCcsIGxpbmVIZWlnaHQ6JzI3cHgnLCB3aWR0aDonMzgwcHgnLCBmb250U2l6ZTonMjBweCcsIG92ZXJmbG93OidoaWRkZW4nLCB0ZXh0T3ZlcmZsb3c6J2VsbGlwc2lzJ319PlxyXG5cdFx0XHRcdFx0PGRpdiByZWYgPSB7dGhpcy5jb250ZW50UmVmfT5cclxuXHRcdFx0XHRcdFx0e2NvbnRlbnRfZGl2fVxyXG5cdFx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0PC9kaXY+XHJcblx0XHR2YXIgZGF0ZV9mbG9hdCA9ICdyaWdodCdcclxuXHRcdGlmICh0aGlzLnByb3BzLnNvbmcudXNlcm5hbWUgPT0gdW5kZWZpbmVkKVxyXG5cdFx0e1xyXG5cdFx0XHRsZWZ0cGFkZGluZyA9ICczNDBweCdcclxuXHRcdFx0Y29udGVudF9zZWN0aW9uID0gPGRpdiByZWYgPSB7dGhpcy5jb250ZW50UmVmfT48L2Rpdj5cclxuXHRcdFx0ZGF0ZV9mbG9hdCA9ICdsZWZ0J1xyXG5cdFx0fVxyXG5cclxuXHRcdHJldHVybihcclxuXHJcblx0XHQ8ZGl2IGtleSA9IHt0aGlzLnByb3BzLnNvbmcucG9zdF9pZH0gc3R5bGUgPSB7e2JvcmRlcjogJzFweCBzb2xpZCAjRjFGMUYxJywgYm9yZGVyUmFkaXVzOiAnN3B4Jywgd2lkdGg6JzczNXB4JywgYmFja2dyb3VuZDond2hpdGUnLCBtaW5IZWlnaHQ6JzUxM3B4JywgbWFyZ2luQm90dG9tOiAnMTJweCd9fT5cclxuXHRcdFx0PGRpdiBzdHlsZSA9IHt7ZGlzcGxheTonZmxleCcsIGZsZXhEaXJlY3Rpb246J3Jvdyd9fT5cclxuXHRcdFx0XHQ8ZGl2IHN0eWxlID0ge3t3aWR0aDonMzIwcHgnLCBwYWRkaW5nVG9wOiczMHB4JywgcGFkZGluZ0xlZnQ6JzEwcHgnLCBib3JkZXJSaWdodDonMXB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4wOSknLCBib3JkZXJSYWRpdXM6JzdweCcsIGJvcmRlclRvcFJpZ2h0UmFkaXVzOiAnMHB4JywgYm9yZGVyQm90dG9tUmlnaHRSYWRpdXM6ICcwcHgnfX0+XHJcblx0XHRcdFx0XHQ8ZGl2IHN0eWxlID0ge3tkaXNwbGF5OidmbGV4JywgZmxleERpcmVjdGlvbjoncm93J319PlxyXG5cdFx0XHRcdFx0XHQ8ZGl2IHN0eWxlID0ge3t3aWR0aDonNjVweCcsIGhlaWdodDonNjVweCcsIGJhY2tncm91bmRDb2xvcjp0aGlzLnByb3BzLnVzZXJfcHJvZmlsZSwgYm9yZGVyUmFkaXVzOic1MCUnfX0+XHJcblx0XHRcdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcdFx0XHQ8ZGl2IHN0eWxlID0ge3twYWRkaW5nTGVmdDonMjBweCd9fT5cclxuXHRcdFx0XHRcdFx0XHQ8ZGl2IHN0eWxlID0ge3tmb250U2l6ZTonMjRweCcsIGZvbnRXZWlnaHQ6J2JvbGQnfX0+IDxhIGhyZWYgPXtwb3N0ZXJfdXNlcm5hbWVfdXJsfSA+IHtwb3N0ZXJfdXNlcm5hbWV9IDwvYT48L2Rpdj5cclxuXHRcdFx0XHRcdFx0XHQ8ZGl2IHN0eWxlID0ge3tmb250U2l6ZTonMTdweCcsIHBhZGRpbmdSaWdodDonMTBweCd9fT57IG1vbnRoTmFtZXNbcGFyc2VJbnQoZGF0ZS5nZXRNb250aCgpKV0rIFwiIFwiICsgZGF0ZS5nZXREYXRlKCkgKyBcIiwgXCIgKyBkYXRlLmdldEZ1bGxZZWFyKCl9PC9kaXY+XHJcblx0XHRcdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcdFx0PC9kaXY+XHJcblxyXG5cclxuXHRcdFx0XHRcdDxkaXYgc3R5bGUgPSB7e3BhZGRpbmdUb3A6JzMwcHgnfX0+PHNwYW4gZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw9e3RoaXMucmVuZGVyaWZyYW1lKHRoaXMucHJvcHMuc29uZy5lbWJlZGRlZF9jb250ZW50KX0+PC9zcGFuPlxyXG5cdFx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0XHQ8ZGl2IHN0eWxlID0ge3t3aWR0aDonMzAwcHgnLCBoZWlnaHQ6JzMwcHgnfX0+XHJcblx0XHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0XHRcdDxkaXYgc3R5bGUgPSB7e2hlaWdodDonMzVweCcsIGRpc3BsYXk6J2ZsZXgnLCBmbGV4RGlyZWN0aW9uOidyb3cnfX0+XHJcblx0XHRcdFx0XHRcdDxkaXYgc3R5bGUgPSB7e3dpZHRoOicxNXB4JywgaGVpZ2h0OiczMHB4J319PjwvZGl2PlxyXG5cdFx0XHRcdFx0XHQ8c3ZnIG9uQ2xpY2sgPSB7dGhpcy5saWtlQ2xpY2tlZC5iaW5kKHRoaXMpfSB3aWR0aD1cIjE0XCIgaGVpZ2h0PVwiMjRcIiB2aWV3Qm94PVwiMCAwIDE2IDI3XCIgZmlsbD1cIm5vbmVcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgY29sb3IgPSAnYmx1ZSc+XHJcblx0XHRcdFx0XHRcdDxwYXRoIGQ9XCJNOC43MDcxMSAwLjk4NzM1NkM4LjMxNjU4IDAuNTk2ODMyIDcuNjgzNDIgMC41OTY4MzIgNy4yOTI4OSAwLjk4NzM1NkwwLjkyODkzMSA3LjM1MTMyQzAuNTM4NDA3IDcuNzQxODQgMC41Mzg0MDcgOC4zNzUwMSAwLjkyODkzMSA4Ljc2NTUzQzEuMzE5NDYgOS4xNTYwNiAxLjk1MjYyIDkuMTU2MDYgMi4zNDMxNSA4Ljc2NTUzTDggMy4xMDg2OEwxMy42NTY5IDguNzY1NTNDMTQuMDQ3NCA5LjE1NjA2IDE0LjY4MDUgOS4xNTYwNiAxNS4wNzExIDguNzY1NTNDMTUuNDYxNiA4LjM3NTAxIDE1LjQ2MTYgNy43NDE4NCAxNS4wNzExIDcuMzUxMzJMOC43MDcxMSAwLjk4NzM1NlpNOSAyNi4zMTI2TDkgMS42OTQ0Nkw3IDEuNjk0NDZMNyAyNi4zMTI2TDkgMjYuMzEyNlpcIiBmaWxsPXt0aGlzLnVwX2NvbG9yfS8+XHJcblx0XHRcdFx0XHRcdDwvc3ZnPlxyXG5cdFx0XHRcdFx0XHQ8ZGl2IHN0eWxlID0ge3ttaW5XaWR0aDonMzBweCcsIGhlaWdodDonMzBweCcsIHZlcnRpY2FsQWxpZ246ICdtaWRkbGUnLCB0ZXh0QWxpZ246ICdjZW50ZXInLCBmb250U2l6ZTogJzE2cHgnLCBmb250V2VpZ2h0Oidib2xkJ319PjxhIGhyZWYgPSB7XCIvdXNlci9cIiArIHRoaXMucHJvcHMuc29uZy51c2VybmFtZSArIFwiL1wiICsgdGhpcy5wcm9wcy5zb25nLmlkICsgXCIvbGlrZXNcIn0gPnt0aGlzLmxpa2VzX3Njb3JlfSA8L2E+PC9kaXY+XHJcblxyXG5cdFx0XHRcdFx0XHQ8c3ZnIG9uQ2xpY2sgPSB7dGhpcy5kaXNsaWtlQ2xpY2tlZC5iaW5kKHRoaXMpfSB3aWR0aD1cIjE0XCIgaGVpZ2h0PVwiMjRcIiB2aWV3Qm94PVwiMCAwIDE2IDI3XCIgZmlsbD1cIm5vbmVcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI+XHJcblx0XHRcdFx0XHRcdDxwYXRoIGQ9XCJNNy4yOTI4OSAyNi4wMTk3QzcuNjgzNDIgMjYuNDEwMiA4LjMxNjU4IDI2LjQxMDIgOC43MDcxMSAyNi4wMTk3TDE1LjA3MTEgMTkuNjU1N0MxNS40NjE2IDE5LjI2NTIgMTUuNDYxNiAxOC42MzIgMTUuMDcxMSAxOC4yNDE1QzE0LjY4MDUgMTcuODUxIDE0LjA0NzQgMTcuODUxIDEzLjY1NjkgMTguMjQxNUw4IDIzLjg5ODRMMi4zNDMxNSAxOC4yNDE1QzEuOTUyNjIgMTcuODUxIDEuMzE5NDYgMTcuODUxIDAuOTI4OTMyIDE4LjI0MTVDMC41Mzg0MDggMTguNjMyIDAuNTM4NDA4IDE5LjI2NTIgMC45Mjg5MzIgMTkuNjU1N0w3LjI5Mjg5IDI2LjAxOTdaTTcgMC42OTQ0ODlMNyAyNS4zMTI2SDlMOSAwLjY5NDQ4OUw3IDAuNjk0NDg5WlwiIGZpbGw9e3RoaXMuZG93bl9jb2xvcn0vPlxyXG5cdFx0XHRcdFx0XHQ8L3N2Zz5cclxuXHJcblx0XHRcdFx0XHRcdDxkaXYgc3R5bGUgPSB7e3dpZHRoOicxMHB4JywgaGVpZ2h0OiczMHB4JywgYm9yZGVyUmlnaHQ6ICcxcHggc29saWQgcmdiYSgwLCAwLCAwLCAwLjA5KSd9fT48L2Rpdj5cclxuXHRcdFx0XHRcdFx0PGRpdiBzdHlsZSA9IHt7d2lkdGg6JzEwcHgnLCBoZWlnaHQ6JzMwcHgnfX0+PC9kaXY+XHJcblx0XHRcdFx0XHRcdDxkaXYgc3R5bGUgPSB7e319PjxhIGhyZWYgPSB7XCIvdXNlci9cIiArIHRoaXMucHJvcHMuc29uZy51c2VybmFtZSArIFwiL1wiICsgdGhpcy5wcm9wcy5zb25nLmlkfT48aW1nIHNyYz1cIi9zcGVlY2hfYnViYmxlLnBuZ1wiIHdpZHRoPVwiMzBcIiBoZWlnaHQ9XCIyNlwiIGFsdD1cIlwiLz48L2E+PC9kaXY+XHJcblxyXG5cdFx0XHRcdFx0XHQ8ZGl2IHN0eWxlID0ge3t3aWR0aDonMzBweCcsIGhlaWdodDonMzBweCcsIHZlcnRpY2FsQWxpZ246ICdtaWRkbGUnLCB0ZXh0QWxpZ246ICdjZW50ZXInLCBmb250U2l6ZTogJzE2cHgnLCBmb250V2VpZ2h0Oidib2xkJ319PiA8YSBocmVmID0ge1wiL3VzZXIvXCIgKyB0aGlzLnByb3BzLnNvbmcudXNlcm5hbWUgKyBcIi9cIiArIHRoaXMucHJvcHMuc29uZy5pZH0+IHt0aGlzLnByb3BzLm51bV9jb21tZW50c30gPC9hPjwvZGl2PlxyXG5cclxuXHRcdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcdDwvZGl2PlxyXG5cclxuXHRcdFx0XHQ8ZGl2IHN0eWxlID0ge3twYWRkaW5nVG9wOiczMHB4JywgcGFkZGluZ0xlZnQ6JzEwcHgnLCBwYWRkaW5nUmlnaHQ6JzIwcHgnLCB3aWR0aDonNDAwcHgnLCBmb250U2l6ZTonMjBweCd9fT5cclxuXHRcdFx0XHRcdHtwb3N0X3RpdGxlfVxyXG5cdFx0XHRcdFx0e2NvbnRlbnRfc2VjdGlvbn1cclxuXHRcdFx0XHRcdHt0aGlzLmVsbGlwc2lzfVxyXG5cdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHQ8L2Rpdj5cclxuXHRcdDwvZGl2PlxyXG5cclxuXHRcdCk7XHJcblx0fVxyXG59XHJcblxyXG5mdW5jdGlvbiBtYWtlUG9zdChzb25nLCBsaWtlcywgYWxsX251bV9jb21tZW50cywgYWxsX251bV9wb3N0cywgYnVtcHMsIHVzZXJfcHJvZmlsZXMpXHJcbntcclxuICB2YXIgbGlrZV9zdGF0ZSA9IC0xO1xyXG4gIHZhciBjdXJyZW50X251bV9jb21tZW50cyA9IDA7XHJcbiAgZm9yICh2YXIgbGlrZSBvZiBsaWtlcylcclxuICB7XHJcbiAgICB2YXIgaWQgPSBsaWtlLnBvc3RfaWRcclxuICAgIGlmIChpZCA9PSB1bmRlZmluZWQpXHJcbiAgICB7XHJcbiAgICAgIGlkID0gbGlrZS5pZDtcclxuICAgIH1cclxuXHJcbiAgICB2YXIgcG9zdF9pZCA9IHNvbmcuaWQ7XHJcbiAgICBpZiAocG9zdF9pZCA9PSB1bmRlZmluZWQpXHJcbiAgICB7XHJcbiAgICAgIHBvc3RfaWQgPSBzb25nLnBvc3RfaWQ7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKGlkID09IHBvc3RfaWQpXHJcbiAgICB7XHJcbiAgICAgIGxpa2Vfc3RhdGUgPSBsaWtlLmxpa2Vfc3RhdGU7XHJcbiAgICB9XHJcbiAgfVxyXG4gIGlmIChzb25nLnVzZXJuYW1lICE9IHVuZGVmaW5lZClcclxuICB7XHJcbiAgICBmb3IgKHZhciBudW1fY29tbWVudHMgb2YgYWxsX251bV9jb21tZW50cylcclxuICAgIHtcclxuICAgICAgdmFyIGlkID0gbnVtX2NvbW1lbnRzLnBvc3RfaWRcclxuICAgICAgaWYgKGlkID09IHNvbmcucG9zdF9pZClcclxuICAgICAge1xyXG4gICAgICAgIGN1cnJlbnRfbnVtX2NvbW1lbnRzID0gbnVtX2NvbW1lbnRzLmNvdW50O1xyXG4gICAgICAgIGJyZWFrO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG4gIGVsc2VcclxuICB7XHJcbiAgICBmb3IgKHZhciBudW1fcG9zdHMgb2YgYWxsX251bV9wb3N0cylcclxuICAgIHtcclxuICAgICAgdmFyIGlkID0gbnVtX3Bvc3RzLnBvc3RfaWRcclxuICAgICAgaWYgKGlkID09IHNvbmcucG9zdF9pZClcclxuICAgICAge1xyXG4gICAgICAgIGN1cnJlbnRfbnVtX2NvbW1lbnRzID0gbnVtX3Bvc3RzLmNvdW50O1xyXG4gICAgICAgIGJyZWFrO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG4gIHZhciBwb3N0X2J1bXBlZCA9IGZhbHNlXHJcbiAgZm9yICh2YXIgYnVtcCBvZiBidW1wcylcclxuICB7XHJcbiAgICBpZiAoc29uZy5wb3N0X2lkID09IGJ1bXAucG9zdF9pZClcclxuICAgIHtcclxuICAgICAgcG9zdF9idW1wZWQgPSB0cnVlXHJcbiAgICB9XHJcbiAgfVxyXG4gIHZhciB1c2VyX3Byb2ZpbGUgPSB1c2VyX3Byb2ZpbGVzW3NvbmcudXNlcm5hbWVdXHJcbiAgcmV0dXJuIChcclxuICAgIDxQb3N0XHJcbiAgICAgIGtleT17c29uZy5wb3N0X2lkfVxyXG4gICAgICBzb25nPXtzb25nfVxyXG4gICAgICBsaWtlX3N0YXRlPXtsaWtlX3N0YXRlfVxyXG4gICAgICBudW1fY29tbWVudHM9e2N1cnJlbnRfbnVtX2NvbW1lbnRzfVxyXG4gICAgICB1c2VyX3Byb2ZpbGU9e3VzZXJfcHJvZmlsZX1cclxuICAgICAgYnVtcD17cG9zdF9idW1wZWR9XHJcbiAgICAvPlxyXG4gICk7XHJcbn1cclxuXHJcbmNsYXNzIFBvc3RJbmZvIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50XHJcbntcclxuXHRyZW5kZXIoKVxyXG5cdHtcclxuXHRcdHJldHVybihcclxuXHRcdFx0PGRpdiBzdHlsZT17e3dpZHRoOic3MzVweCd9fT5cclxuXHRcdFx0XHR7dGhpcy5wcm9wcy5wb3N0cy5tYXAoKHBvc3QpID0+IHtyZXR1cm4gPGRpdj4ge3Bvc3R9IDwvZGl2Pn0pfVxyXG5cdFx0XHQ8L2Rpdj5cclxuXHRcdCk7XHJcblx0fVxyXG59XHJcblxyXG5leHBvcnQgeyBQb3N0SW5mbywgbWFrZVBvc3QgfVxyXG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgU3RhbmRhcmRIZWFkZXIgZnJvbSAnLi9zdGFuZGFyZF9oZWFkZXIuanMnXHJcbmltcG9ydCB7IFBvc3RJbmZvLCBtYWtlUG9zdCB9IGZyb20gJy4vcG9zdC5qcydcclxuaW1wb3J0IHV0aWxzIGZyb20gJy4vdXRpbHMuanMnXHJcbmltcG9ydCB0YWdfdXRpbHMgZnJvbSAnLi90YWdfdXRpbHMuanMnXHJcblxyXG5jbGFzcyBOZXdQb3N0U3VibWlzc2lvbiBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XHJcblx0Y29uc3RydWN0b3IocHJvcHMpXHJcblx0e1xyXG5cdFx0c3VwZXIocHJvcHMpO1xyXG5cdFx0dGhpcy5zdGF0ZSA9IHtcclxuXHRcdFx0ZW1iZWRMaW5rOiAnJyxcclxuXHRcdFx0dGl0bGU6ICcnLFxyXG5cdFx0XHRjb250ZW50OiAnJyxcclxuXHRcdH07XHJcblxyXG5cdFx0dGhpcy5jb250ZW50UmVmID0gUmVhY3QuY3JlYXRlUmVmKCk7XHJcblxyXG5cdFx0dGhpcy50YWdGbGFnID0gZmFsc2VcclxuXHRcdHRoaXMuY3VycmVudFRhZyA9IFwiXCJcclxuXHRcdHRoaXMudGFnTGlzdCA9IFtdXHJcblx0XHR0aGlzLmFydGlzdHMgPSBbXVxyXG5cdFx0dGhpcy5zb25nc19hbmRfYWxidW1zID0gW11cclxuXHRcdHRoaXMudXNlcnMgPSBbXVxyXG5cdFx0dGhpcy5hcnRpc3RTZWFyY2ggPSBmYWxzZVxyXG5cdFx0dGhpcy5jdXJyZW50QXJ0aXN0ID0gXCJcIlxyXG5cdFx0dGhpcy5wb3RlbnRpYWxfdGFncyA9IFtdXHJcblx0XHR0aGlzLmFydGlzdEZsYWcgPSBmYWxzZVxyXG5cdFx0dGhpcy5sYXN0Q29udGVudFNpemUgPSAwXHJcblx0XHR0aGlzLnRhZ2dlZCA9IGZhbHNlXHJcblx0XHR0aGlzLnN1Ym1pc3Npb25MaWtlU3RhdGUgPSAtMVxyXG5cdH1cclxuXHJcblx0c29uZ0lucHV0KGV2ZW50KVxyXG5cdHtcclxuXHRcdHZhciBlbWJlZExpbmsgPSBldmVudC50YXJnZXQudmFsdWU7XHJcblx0XHR0aGlzLnNldFN0YXRlKHtlbWJlZExpbmt9KTtcclxuXHR9XHJcblxyXG5cdG9uVGl0bGVDaGFuZ2UoZXZlbnQpIHtcclxuXHRcdGxldCB0aXRsZSA9IGV2ZW50LnRhcmdldC52YWx1ZTtcclxuXHRcdHRoaXMuc2V0U3RhdGUoe3RpdGxlfSk7XHJcblx0fVxyXG5cclxuXHRjb250ZW50SW5wdXQoKVxyXG5cdHtcclxuXHRcdHZhciBpbnB1dCA9IGV2ZW50LnRhcmdldC52YWx1ZTtcclxuXHRcdHZhciBjb250ZW50X3N0ciA9IHRoaXMuY29udGVudFJlZi5jdXJyZW50LnZhbHVlO1xyXG5cdFx0Ly91cGRhdGUgYW5kIHBydW5lIHRhZ3MgbGlzdFxyXG5cdFx0dGFnX3V0aWxzLmdldFRhZ3ModGhpcyk7XHJcblx0XHRjb25zb2xlLmxvZyhcIldIQVRcIilcclxuXHRcdHRoaXMubGFzdENvbnRlbnRTaXplID0gdGhpcy5jb250ZW50UmVmLmN1cnJlbnQudmFsdWUubGVuZ3RoO1xyXG5cdFx0dGhpcy5mb3JjZVVwZGF0ZSgpO1xyXG5cdH1cclxuXHJcblx0c2VsZWN0VGFnKGUpXHJcblx0e1xyXG5cdFx0dGFnX3V0aWxzLnRhZ0NsaWNrZWQodGhpcywgZSlcclxuXHR9XHJcblxyXG5cdHN1Ym1pdFBvc3QoKVxyXG5cdHtcclxuXHRcdGlmICghdXRpbHMuY2hlY2tMb2dnZWRJbigpKVxyXG5cdFx0e1xyXG5cdFx0XHRhbGVydChcIk1VU1QgQkUgTE9HR0VEIElOXCIpXHJcblx0XHRcdHJldHVybjtcclxuXHRcdH1cclxuXHRcdHZhciB0aGF0ID0gdGhpcztcclxuXHRcdGZldGNoKFwiL3Bvc3RcIiwge1xyXG5cdFx0XHRtZXRob2Q6IFwiUE9TVFwiLFxyXG5cdFx0XHRoZWFkZXJzOiB7XHJcblx0XHRcdFx0J0FjY2VwdCc6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuXHRcdFx0XHQnQXV0aG9yaXphdGlvbic6ICdCYXNpYycsXHJcblx0XHRcdFx0J0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuXHRcdFx0fSxcclxuXHRcdFx0Ym9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG5cdFx0XHRcdHNvbmc6IHRoaXMuc3RhdGUuZW1iZWRMaW5rLFxyXG5cdFx0XHRcdGNvbnRlbnQ6IHRoaXMuY29udGVudFJlZi5jdXJyZW50LnZhbHVlLFxyXG5cdFx0XHRcdHRpdGxlOiB0aGlzLnN0YXRlLnRpdGxlLFxyXG5cdFx0XHRcdHN1Ym1pc3Npb25MaWtlU3RhdGU6IHRoaXMuc3VibWlzc2lvbkxpa2VTdGF0ZSxcclxuXHRcdFx0XHRwb3RlbnRpYWxUYWdzOiB0aGlzLnBvdGVudGlhbF90YWdzXHJcblx0XHRcdH0pLFxyXG5cdFx0fSkudGhlbihmdW5jdGlvbihyZXNwb25zZSkge1xyXG5cdFx0XHRyZXR1cm4gcmVzcG9uc2UuanNvbigpO1xyXG5cdFx0fSkudGhlbihmdW5jdGlvbiAoZGF0YSkge1xyXG5cdFx0XHR0aGF0LnNldFN0YXRlKHtlbWJlZExpbms6ICcnLCB0aXRsZTogJyd9KTtcclxuXHRcdFx0dGhhdC5jb250ZW50UmVmLmN1cnJlbnQudmFsdWUgPSBcIlwiXHJcblx0XHRcdGxvY2F0aW9uLnJlbG9hZCh0cnVlKTtcclxuXHRcdH0pO1xyXG5cdH1cclxuXHJcblx0c3VibWlzc2lvbkxpa2VkKClcclxuXHR7XHJcblx0XHRpZiAodGhpcy5zdWJtaXNzaW9uTGlrZVN0YXRlID09IDEpXHJcblx0XHR7XHJcblx0XHRcdHRoaXMuc3VibWlzc2lvbkxpa2VTdGF0ZSA9IC0xXHJcblx0XHR9XHJcblx0XHRlbHNlXHJcblx0XHR7XHJcblx0XHRcdHRoaXMuc3VibWlzc2lvbkxpa2VTdGF0ZSA9IDFcclxuXHRcdH1cclxuXHRcdHRoaXMuZm9yY2VVcGRhdGUoKVxyXG5cdH1cclxuXHJcblx0c3VibWlzc2lvbkRpc2xpa2VkKClcclxuXHR7XHJcblx0XHRpZiAodGhpcy5zdWJtaXNzaW9uTGlrZVN0YXRlID09IDApXHJcblx0XHR7XHJcblx0XHRcdHRoaXMuc3VibWlzc2lvbkxpa2VTdGF0ZSA9IC0xXHJcblx0XHR9XHJcblx0XHRlbHNlXHJcblx0XHR7XHJcblx0XHRcdHRoaXMuc3VibWlzc2lvbkxpa2VTdGF0ZSA9IDBcclxuXHRcdH1cclxuXHRcdHRoaXMuZm9yY2VVcGRhdGUoKVxyXG5cdH1cclxuXHJcblx0cmVuZGVyKClcclxuXHR7XHJcblx0XHR2YXIgdGFnX2Rpc3BsYXkgPSAnbm9uZSdcclxuXHRcdGlmICh0aGlzLnRhZ0ZsYWcpXHJcblx0XHR7XHJcblx0XHRcdHRhZ19kaXNwbGF5ID0gJydcclxuXHRcdH1cclxuXHJcblx0XHRyZXR1cm4gKFxyXG5cdFx0XHQ8ZGl2XHJcblx0XHRcdFx0c3R5bGU9e3tcclxuXHRcdFx0XHRcdGRpc3BsYXk6J2ZsZXgnLFxyXG5cdFx0XHRcdFx0ZmxleERpcmVjdGlvbjogJ2NvbHVtbicsXHJcblx0XHRcdFx0XHRiYWNrZ3JvdW5kQ29sb3I6J3doaXRlJyxcclxuXHRcdFx0XHRcdGJvcmRlcjogJzFweCBzb2xpZCAjRjFGMUYxJyxcclxuXHRcdFx0XHRcdGJvcmRlclJhZGl1czonOHB4JyxcclxuXHRcdFx0XHRcdHBhZGRpbmc6ICcxMnB4IDE2cHggMTZweCAxNnB4JyxcclxuXHRcdFx0XHR9fVxyXG5cdFx0XHQ+XHJcblx0XHRcdFx0PGRpdlxyXG5cdFx0XHRcdFx0c3R5bGU9e3tcclxuXHRcdFx0XHRcdFx0Zm9udEZhbWlseTogJ1JvYm90b1JlZ3VsYXInLFxyXG5cdFx0XHRcdFx0XHRmb250U2l6ZTogJzIwcHgnLFxyXG5cdFx0XHRcdFx0XHRjb2xvcjogJ3JnYmEoNDcsIDU2LCA3MCwgMC41OCknLFxyXG5cdFx0XHRcdFx0XHRib3JkZXJCb3R0b206ICcxcHggc29saWQgcmdiYSgwLCAwLCAwLCAwLjA5KScsXHJcblx0XHRcdFx0XHRcdHBhZGRpbmdCb3R0b206ICc4cHgnLFxyXG5cdFx0XHRcdFx0fX1cclxuXHRcdFx0XHQ+XHJcblx0XHRcdFx0XHRDcmVhdGUgUG9zdFxyXG5cdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcdDxkaXYgc3R5bGU9e3tkaXNwbGF5OidmbGV4JywgZmxleERpcmVjdGlvbjoncm93JywgcGFkZGluZ1RvcDonMTZweCd9fT5cclxuXHRcdFx0XHRcdDxkaXYgc3R5bGU9e3t3aWR0aDonNjVweCcsIGhlaWdodDonNjVweCcsIGJhY2tncm91bmRDb2xvcjonIzE3ODI3NScsIGJvcmRlclJhZGl1czonNTAlJywgbWFyZ2luUmlnaHQ6JzEycHgnfX0+PC9kaXY+XHJcblx0XHRcdFx0XHQ8ZGl2IHN0eWxlPXt7ZGlzcGxheTogJ2ZsZXgnLCBmbGV4OiAnMSAwIGF1dG8nfX0+XHJcblx0XHRcdFx0XHRcdDxpbnB1dFxyXG5cdFx0XHRcdFx0XHRcdG9uQ2hhbmdlPXt0aGlzLnNvbmdJbnB1dC5iaW5kKHRoaXMpfVxyXG5cdFx0XHRcdFx0XHRcdHZhbHVlPXt0aGlzLnN0YXRlLmVtYmVkTGlua31cclxuXHRcdFx0XHRcdFx0XHRwbGFjZWhvbGRlcj1cIkVtYmVkIGxpbmsgaGVyZVwiXHJcblx0XHRcdFx0XHRcdFx0c3R5bGU9e3tcclxuXHRcdFx0XHRcdFx0XHRcdGJvcmRlcjonMXB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4wOSknLFxyXG5cdFx0XHRcdFx0XHRcdFx0Ym9yZGVyUmFkaXVzOiAnOHB4JyxcclxuXHRcdFx0XHRcdFx0XHRcdGZvbnRTaXplOicxNnB4JyxcclxuXHRcdFx0XHRcdFx0XHRcdHBhZGRpbmc6JzhweCcsXHJcblx0XHRcdFx0XHRcdFx0XHR3aWR0aDogJzEwMCUnLFxyXG5cdFx0XHRcdFx0XHRcdH19XHJcblx0XHRcdFx0XHRcdC8+XHJcblx0XHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0XHQ8ZGl2IHN0eWxlPXt7ZGlzcGxheTogdGhpcy5zdGF0ZS5lbWJlZExpbmsgPyAnZmxleCcgOiAnbm9uZScsIGZsZXhEaXJlY3Rpb246ICdyb3cnLCBwYWRkaW5nVG9wOiAnMTZweCd9fT5cclxuXHRcdFx0XHRcdDxkaXYgc3R5bGU9e3tkaXNwbGF5OiAnZmxleCcsIGZsZXhEaXJlY3Rpb246ICdjb2x1bW4nLCBmbGV4OiAnMSAwIGF1dG8nfX0+XHJcblx0XHRcdFx0XHRcdDxkaXYgc3R5bGU9e3tkaXNwbGF5OidmbGV4JywgZmxleERpcmVjdGlvbjonY29sdW1uJywgZmxleDogJzEgMCBhdXRvJ319PlxyXG5cdFx0XHRcdFx0XHRcdDxpbnB1dFxyXG5cdFx0XHRcdFx0XHRcdFx0YXV0b0NvbXBsZXRlPVwib2ZmXCJcclxuXHRcdFx0XHRcdFx0XHRcdG9uQ2hhbmdlPXt0aGlzLm9uVGl0bGVDaGFuZ2UuYmluZCh0aGlzKX1cclxuXHRcdFx0XHRcdFx0XHRcdHBsYWNlaG9sZGVyPVwiVGl0bGVcIlxyXG5cdFx0XHRcdFx0XHRcdFx0c3R5bGU9e3tcclxuXHRcdFx0XHRcdFx0XHRcdFx0Ym9yZGVyOicxcHggc29saWQgcmdiYSgwLCAwLCAwLCAwLjA5KScsXHJcblx0XHRcdFx0XHRcdFx0XHRcdGJvcmRlckJvdHRvbTonbm9uZScsXHJcblx0XHRcdFx0XHRcdFx0XHRcdGJvcmRlclJhZGl1czonOHB4IDhweCAwIDAnLFxyXG5cdFx0XHRcdFx0XHRcdFx0XHRwYWRkaW5nOiAnOHB4JyxcclxuXHRcdFx0XHRcdFx0XHRcdH19XHJcblx0XHRcdFx0XHRcdFx0XHR0eXBlPVwidGV4dFwiXHJcblx0XHRcdFx0XHRcdFx0XHR2YWx1ZT17dGhpcy5zdGF0ZS50aXRsZX1cclxuXHRcdFx0XHRcdFx0XHQvPlxyXG5cdFx0XHRcdFx0XHRcdDx0ZXh0YXJlYVxyXG5cdFx0XHRcdFx0XHRcdFx0YXV0b0NvbXBsZXRlPVwib2ZmXCJcclxuXHRcdFx0XHRcdFx0XHRcdG9uQ2hhbmdlPXt0aGlzLmNvbnRlbnRJbnB1dC5iaW5kKHRoaXMpfVxyXG5cdFx0XHRcdFx0XHRcdFx0cGxhY2Vob2xkZXI9XCJZb3VyIHRleHQgaGVyZVwiXHJcblx0XHRcdFx0XHRcdFx0XHRyZWY9e3RoaXMuY29udGVudFJlZn1cclxuXHRcdFx0XHRcdFx0XHRcdHN0eWxlPXt7XHJcblx0XHRcdFx0XHRcdFx0XHRcdGJvcmRlcjonMXB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4wOSknLFxyXG5cdFx0XHRcdFx0XHRcdFx0XHRib3JkZXJSYWRpdXM6JzAgMCA4cHggOHB4JyxcclxuXHRcdFx0XHRcdFx0XHRcdFx0ZmxleDogJzEgMCBhdXRvJyxcclxuXHRcdFx0XHRcdFx0XHRcdFx0cGFkZGluZzogJzhweCcsXHJcblx0XHRcdFx0XHRcdFx0XHRcdHJlc2l6ZTogJ25vbmUnLFxyXG5cdFx0XHRcdFx0XHRcdFx0fX1cclxuXHRcdFx0XHRcdFx0XHQvPlxyXG5cdFx0XHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0XHRcdFx0PGRpdiBzdHlsZT17e3BhZGRpbmdUb3A6ICcxMnB4J319PlxyXG5cdFx0XHRcdFx0XHRcdDxidXR0b25cclxuXHRcdFx0XHRcdFx0XHRcdGNsYXNzTmFtZT17J2ZlZWRfcG9zdEJ1dHRvbid9XHJcblx0XHRcdFx0XHRcdFx0XHRvbkNsaWNrPXt0aGlzLnN1Ym1pdFBvc3QuYmluZCh0aGlzKX1cclxuXHRcdFx0XHRcdFx0XHQ+XHJcblx0XHRcdFx0XHRcdFx0XHRQb3N0XHJcblx0XHRcdFx0XHRcdFx0PC9idXR0b24+XHJcblx0XHRcdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcdFx0PC9kaXY+XHJcblxyXG5cdFx0XHRcdFx0PGRpdiBzdHlsZT17e2Rpc3BsYXk6IHRoaXMuc3RhdGUuZW1iZWRMaW5rID8gJycgOiAnbm9uZScsIG1hcmdpbkxlZnQ6ICcxNnB4J319PlxyXG5cdFx0XHRcdFx0XHQ8ZGl2IGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MPXt1dGlscy5yZW5kZXJpZnJhbWUodGhpcy5zdGF0ZS5lbWJlZExpbmspfSAvPlxyXG5cdFx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0PGRpdiBzdHlsZSA9IHt7cG9zaXRpb246J2ZpeGVkJywgd2lkdGg6ICcyMDBweCcsIGhlaWdodDonMzAwcHgnLCByaWdodDonMSUnLCB0b3A6JzYwcHgnLCBiYWNrZ3JvdW5kQ29sb3I6J3doaXRlJywgZGlzcGxheTp0YWdfZGlzcGxheSwgekluZGV4OjE1LCBvdmVyZmxvd1k6J3Njcm9sbCcsIGJvcmRlcjonMXB4IHNvbGlkICNGMUYxRjEnLCBib3JkZXJSYWRpdXM6JzdweCd9fSA+XHJcblx0XHRcdFx0XHR7dGhpcy50YWdMaXN0fVxyXG5cdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHQ8L2Rpdj5cclxuXHRcdCk7XHJcblx0fVxyXG59XHJcblxyXG5cclxuXHJcbmNsYXNzIFRyZW5kaW5nIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcclxuXHRjb25zdHJ1Y3Rvcihwcm9wcylcclxuXHR7XHJcblx0XHRzdXBlcihwcm9wcylcclxuXHRcdHRoaXMuZ2xvYmFsX3Bvc3RfaW5kZXggPSAwO1xyXG5cdFx0dGhpcy5zdGF0ZSA9IHsgZ2xvYmFsX3Bvc3RfaW5kZXg6IDAgfTtcclxuXHRcdHRoaXMuZ2xvYmFsX3Bvc3RzID0gW11cclxuXHRcdHRoaXMudHJlbmRpbmdfcG9zdHMgPSBbXVxyXG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLnByb3BzLmRhdGEubGVuZ3RoOyArK2kpXHJcblx0XHR7XHJcblx0XHRcdHZhciBpZnJhbWVfc3RyaW5nID0gdGhpcy5wcm9wcy5kYXRhW2ldLmVtYmVkZGVkX2NvbnRlbnQ7XHJcblxyXG5cdFx0XHR0aGlzLnByb3BzLmRhdGFbaV0uZW1iZWRkZWRfY29udGVudCA9IHV0aWxzLlNldFNwb3RpZnlTaXplKGlmcmFtZV9zdHJpbmcsIDI1MCwgMzMwKVxyXG5cclxuXHJcblx0XHRcdHRoaXMuZ2xvYmFsX3Bvc3RzLnB1c2godGhpcy5wcm9wcy5kYXRhW2ldKVxyXG5cdFx0fVxyXG5cdFx0dGhpcy5yZWxhdGVkX2xpbmtzID0gW11cclxuXHJcblx0XHR0aGlzLnRyZW5kaW5nX3JlZnMgPSBbXVxyXG5cdFx0dGhpcy5nbG9iYWxfcG9zdHMubWFwKChpdGVtLCBpKSA9PiB7XHJcblx0XHRcdHZhciB0cmVuZGluZ19yZWYgPSBSZWFjdC5jcmVhdGVSZWYoKTtcclxuXHRcdFx0aWYgKGkgPT0gMClcclxuXHRcdFx0e1xyXG5cdFx0XHRcdHRoaXMudHJlbmRpbmdfcG9zdHMucHVzaCg8ZGl2IGtleSA9IHtpdGVtLnBvc3RfaWR9IHJlZiA9IHt0cmVuZGluZ19yZWZ9IGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MPXt1dGlscy5yZW5kZXJpZnJhbWUoaXRlbS5lbWJlZGRlZF9jb250ZW50KX0gLz4pXHJcblx0XHRcdH1cclxuXHRcdFx0ZWxzZVxyXG5cdFx0XHR7XHJcblx0XHRcdFx0dGhpcy50cmVuZGluZ19wb3N0cy5wdXNoKDxkaXYga2V5ID0ge2l0ZW0ucG9zdF9pZH0gcmVmID0ge3RyZW5kaW5nX3JlZn0gIHN0eWxlID0ge3tkaXNwbGF5Oidub25lJ319IGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MPXt1dGlscy5yZW5kZXJpZnJhbWUoaXRlbS5lbWJlZGRlZF9jb250ZW50KX0gLz4pXHJcblx0XHRcdH1cclxuXHRcdFx0dGhpcy50cmVuZGluZ19yZWZzLnB1c2godHJlbmRpbmdfcmVmKVxyXG5cdFx0fSlcclxuXHR9XHJcblxyXG5cdHJpZ2h0Q2xpY2soKVxyXG5cdHtcclxuXHRcdHRoaXMudHJlbmRpbmdfcmVmc1t0aGlzLmdsb2JhbF9wb3N0X2luZGV4XS5jdXJyZW50LnN0eWxlLmRpc3BsYXkgPSAnbm9uZSdcclxuXHRcdHRoaXMuZ2xvYmFsX3Bvc3RfaW5kZXgrKztcclxuXHRcdGlmICh0aGlzLmdsb2JhbF9wb3N0X2luZGV4ID49IDE1KVxyXG5cdFx0e1xyXG5cdFx0XHR0aGlzLmdsb2JhbF9wb3N0X2luZGV4ID0gMDtcclxuXHRcdFx0dGhpcy50cmVuZGluZ19yZWZzW3RoaXMuZ2xvYmFsX3Bvc3RfaW5kZXhdLmN1cnJlbnQuc3R5bGUuZGlzcGxheSA9ICcnXHJcblx0XHR9XHJcblx0XHRlbHNlIGlmICh0aGlzLmdsb2JhbF9wb3N0X2luZGV4ID49IHRoaXMudHJlbmRpbmdfcmVmcy5sZW5ndGggLSAyKVxyXG5cdFx0e1xyXG5cdFx0XHR2YXIgbmV3X29mZnNldCA9IHRoaXMudHJlbmRpbmdfcmVmcy5sZW5ndGg7XHJcblx0XHRcdHZhciB0aGF0ID0gdGhpcztcclxuXHRcdFx0ZmV0Y2goXCIvdXBkYXRlVHJlbmRpbmdcIixcclxuXHRcdFx0e1xyXG5cdFx0XHRtZXRob2Q6IFwiUE9TVFwiLFxyXG5cdFx0XHRoZWFkZXJzOlxyXG5cdFx0XHR7XHJcblx0XHRcdFx0J0FjY2VwdCc6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuXHRcdFx0XHQnQXV0aG9yaXphdGlvbic6ICdCYXNpYycsXHJcblx0XHRcdFx0J0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuXHRcdFx0fSxcclxuXHRcdFx0Ym9keTogSlNPTi5zdHJpbmdpZnkoe2dsb2JhbF9vZmZzZXQ6IG5ld19vZmZzZXR9KVxyXG5cdFx0XHR9KVxyXG5cdFx0XHQudGhlbihmdW5jdGlvbihyZXNwb25zZSkgeyByZXR1cm4gcmVzcG9uc2UuanNvbigpO30pXHJcblx0XHRcdC50aGVuKGZ1bmN0aW9uIChkYXRhKVxyXG5cdFx0XHR7XHJcblx0XHRcdFx0Zm9yICh2YXIga2V5IGluIE9iamVjdC5rZXlzKGRhdGEucG9zdHMpKVxyXG5cdFx0XHRcdHtcclxuXHRcdFx0XHRcdHZhciBpdGVtID0gZGF0YS5wb3N0c1trZXldXHJcblx0XHRcdFx0XHRpdGVtLmVtYmVkZGVkX2NvbnRlbnQgPSB1dGlscy5TZXRTcG90aWZ5U2l6ZShpdGVtLmVtYmVkZGVkX2NvbnRlbnQsIDI1MCwgMzMwKVxyXG5cdFx0XHRcdFx0dmFyIHRyZW5kaW5nX3JlZjEgPSBSZWFjdC5jcmVhdGVSZWYoKVxyXG5cdFx0XHRcdFx0dGhhdC50cmVuZGluZ19wb3N0cy5wdXNoKDxkaXYga2V5ID0ge2l0ZW0ucG9zdF9pZH0gcmVmID0ge3RyZW5kaW5nX3JlZjF9IHN0eWxlID0ge3tkaXNwbGF5Oidub25lJ319IGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MPXt1dGlscy5yZW5kZXJpZnJhbWUoaXRlbS5lbWJlZGRlZF9jb250ZW50KX0gLz4pO1xyXG5cdFx0XHRcdFx0dGhhdC50cmVuZGluZ19yZWZzLnB1c2godHJlbmRpbmdfcmVmMSlcclxuXHRcdFx0XHRcdHRoYXQuZm9yY2VVcGRhdGUoKVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHR0aGF0LnRyZW5kaW5nX3JlZnNbdGhhdC5nbG9iYWxfcG9zdF9pbmRleF0uY3VycmVudC5zdHlsZS5kaXNwbGF5ID0gJydcclxuXHRcdFx0fSlcclxuXHRcdH1cclxuXHRcdGVsc2VcclxuXHRcdHtcclxuXHRcdFx0dGhpcy50cmVuZGluZ19yZWZzW3RoaXMuZ2xvYmFsX3Bvc3RfaW5kZXhdLmN1cnJlbnQuc3R5bGUuZGlzcGxheSA9ICcnXHJcblx0XHR9XHJcblx0XHR0aGlzLmZvcmNlVXBkYXRlKCk7XHJcblx0fVxyXG5cclxuXHRsZWZ0Q2xpY2soKVxyXG5cdHtcclxuXHRcdHRoaXMudHJlbmRpbmdfcmVmc1t0aGlzLmdsb2JhbF9wb3N0X2luZGV4XS5jdXJyZW50LnN0eWxlLmRpc3BsYXkgPSAnbm9uZSdcclxuXHRcdHRoaXMuZ2xvYmFsX3Bvc3RfaW5kZXgtLTtcclxuXHRcdGlmICh0aGlzLmdsb2JhbF9wb3N0X2luZGV4IDwgMClcclxuXHRcdHtcclxuXHRcdFx0dGhpcy5nbG9iYWxfcG9zdF9pbmRleCA9IDA7XHJcblxyXG5cdFx0fVxyXG5cdFx0dGhpcy50cmVuZGluZ19yZWZzW3RoaXMuZ2xvYmFsX3Bvc3RfaW5kZXhdLmN1cnJlbnQuc3R5bGUuZGlzcGxheSA9ICcnXHJcblx0XHR0aGlzLmZvcmNlVXBkYXRlKCk7XHJcblx0fVxyXG5cclxuXHRjb21wb25lbnREaWRNb3VudCgpXHJcblx0e1xyXG5cdFx0dmFyIHRoYXQgPSB0aGlzXHJcblx0ICAgIGZldGNoKCcvcmFuZG9tX2xpbmtzJywge1xyXG5cdCAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcclxuXHQgICAgICAgIGhlYWRlcnM6IHtcclxuXHQgICAgICAgIFx0QWNjZXB0OiAnYXBwbGljYXRpb24vanNvbicsXHJcblx0ICAgICAgICBcdCdBdXRob3JpemF0aW9uJzogJ0Jhc2ljJyxcclxuXHQgICAgICAgIFx0J0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuXHQgICAgICAgIFx0fSxcclxuXHRcdCAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7fSl9KVxyXG5cdFx0ICAgIC50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7IHJldHVybiByZXNwb25zZS5qc29uKCk7fSlcclxuXHRcdCAgICAudGhlbihmdW5jdGlvbiAoZGF0YSkge1xyXG5cdFx0ICAgIFx0Zm9yICh2YXIgaXRlbSBvZiBkYXRhLmRhdGEpXHJcblx0XHQgICAgXHR7XHJcblx0XHQgICAgXHRcdHRoYXQucmVsYXRlZF9saW5rcy5wdXNoKDxkaXYgc3R5bGUgPSB7e3dpZHRoOiczMDBweCcsIGhlaWdodDonMjBweCcsIG92ZXJmbG93OiAnaGlkZGVuJywgd2hpdGVTcGFjZTogJ25vd3JhcCcsIHRleHRPdmVyZmxvdzogJ2VsbGlwc2lzJ319PjxhIGhyZWYgPSB7aXRlbS51cmx9PiB7aXRlbS50ZXh0fSA8L2E+IDwvZGl2PilcclxuXHRcdCAgICBcdH1cclxuXHRcdCAgICB0aGF0LmZvcmNlVXBkYXRlKClcclxuXHQgICAgfSlcclxuXHR9XHJcblxyXG5cdHJlbmRlcigpXHJcblx0e1xyXG5cdFx0Ly88aW1nIHNyYyA9IFwiL3BsYWNlaG9sZGVyLmpwZ1wiIC8+XHJcblx0XHRyZXR1cm4gKFxyXG5cdFx0PGRpdiBzdHlsZSA9IHt7d2lkdGg6JzQwMHB4JywgaGVpZ2h0Oic2ODBweCcsIGJhY2tncm91bmRDb2xvcjond2hpdGUnLCBib3JkZXI6JzFweCBzb2xpZCAjRjFGMUYxJywgYm9yZGVyUmFkaXVzOic4cHgnfX0+XHJcblx0XHRcdDxkaXYgc3R5bGUgPSB7e21hcmdpbjonMHB4IGF1dG8nLCBmb250V2VpZ2h0Oidib2xkJywgd2lkdGg6JzExMHB4JywgZm9udFNpemU6JzI3cHgnLCBwYWRkaW5nVG9wOicxNnB4J319PlxyXG5cdFx0XHRcdFRyZW5kaW5nXHJcblx0XHRcdDwvZGl2PlxyXG5cdFx0XHQ8ZGl2IHN0eWxlID0ge3ttYXJnaW46JzBweCBhdXRvJywgZm9udFdlaWdodDonYm9sZCcsIHdpZHRoOiczMjRweCcsIGhlaWdodDonMTBweCcsIGZvbnRTaXplOicyN3B4JywgcGFkZGluZ1RvcDonMTZweCcsIGJvcmRlckJvdHRvbTonMXB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4wOSknfX0+XHJcblxyXG5cdFx0XHQ8L2Rpdj5cclxuXHRcdFx0PGRpdiBzdHlsZSA9IHt7ZGlzcGxheTonZmxleCcsIGZsZXhEaXJlY3Rpb246J3JvdycsIHBhZGRpbmdUb3A6JzMwcHgnLCB3aWR0aDonMjkwcHgnLCBtYXJnaW46JzBweCBhdXRvJywganVzdGlmeUNvbnRlbnQ6J2NlbnRlcicsIGFsaWduSXRlbXM6J2NlbnRlcid9fT5cclxuXHRcdFx0XHRcclxuXHRcdFx0XHQ8ZGl2IHN0eWxlID0ge3twYWRkaW5nUmlnaHQ6JzEwcHgnLCB3aWR0aDonMzBweCcsIGhlaWdodDonNTBweCd9fT5cclxuXHRcdFx0XHRcdDxzdmcgb25DbGljayA9IHt0aGlzLmxlZnRDbGljay5iaW5kKHRoaXMpfSB3aWR0aD1cIjIwXCIgaGVpZ2h0PVwiNTBcIiB2aWV3Qm94PVwiMCAwIDIwIDUwXCIgZmlsbD1cIm5vbmVcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI+XHJcblx0XHRcdFx0XHRcdDxwYXRoIGQ9XCJNMTkgNDlMMiAyNUwxOSAwLjk5OTk5OFwiIHN0cm9rZT1cIiMyRjM4NDZcIiBzdHJva2VPcGFjaXR5PVwiMC4yXCIgc3Ryb2tlV2lkdGg9XCIyXCIvPlxyXG5cdFx0XHRcdFx0PC9zdmc+XHJcblx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0e3RoaXMudHJlbmRpbmdfcG9zdHMubWFwKChjaGlsZCkgPT4ge3JldHVybiBjaGlsZH0pfVxyXG5cdFx0XHRcdDxkaXYgc3R5bGUgPSB7e3BhZGRpbmdMZWZ0OicxMHB4Jywgd2lkdGg6JzIwcHgnLCBoZWlnaHQ6JzUwcHgnfX0+XHJcblx0XHRcdFx0XHQ8c3ZnIG9uQ2xpY2sgPSB7dGhpcy5yaWdodENsaWNrLmJpbmQodGhpcyl9IHdpZHRoPVwiMjBcIiBoZWlnaHQ9XCI1MFwiIHZpZXdCb3g9XCIwIDAgMjAgNTBcIiBmaWxsPVwibm9uZVwiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj5cclxuXHRcdFx0XHRcdFx0PHBhdGggZD1cIk0xIDFMMTggMjVMMSA0OVwiIHN0cm9rZT1cIiMyRjM4NDZcIiBzdHJva2VPcGFjaXR5PVwiMC4yXCIgc3Ryb2tlV2lkdGg9XCIyXCIvPlxyXG5cdFx0XHRcdFx0PC9zdmc+XHJcblx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdDwvZGl2PlxyXG5cdFx0XHQ8ZGl2IHN0eWxlID0ge3twYWRkaW5nVG9wOicxMHB4JywgbWFyZ2luOiAnMHB4IGF1dG8nLCB3aWR0aDonMzAwcHgnfX0+XHJcblx0XHRcdFx0PGRpdiBzdHlsZSA9IHt7bWFyZ2luOicwcHggYXV0bycsIGZvbnRXZWlnaHQ6J2JvbGQnLCB3aWR0aDonMTQwJywgZm9udFNpemU6JzI3cHgnLCBwYWRkaW5nVG9wOicxNnB4J319PlxyXG5cdFx0XHRcdFx0T3RoZXIgTGlua3NcclxuXHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0XHQ8ZGl2IHN0eWxlID0ge3ttYXJnaW46JzBweCBhdXRvJywgZm9udFdlaWdodDonYm9sZCcsIHdpZHRoOiczMDBweCcsIGhlaWdodDonMTBweCcsIGZvbnRTaXplOicyN3B4JywgcGFkZGluZ1RvcDonMTZweCcsIGJvcmRlckJvdHRvbTonMXB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4wOSknfX0+PC9kaXY+XHJcblx0XHRcdFx0PGRpdiBzdHlsZSA9IHt7cGFkZGluZ1RvcDonMjBweCd9fT5cclxuXHRcdFx0XHRcdHt0aGlzLnJlbGF0ZWRfbGlua3MubWFwKChjaGlsZCkgPT4ge3JldHVybiBjaGlsZH0pfVxyXG5cdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHQ8L2Rpdj5cclxuXHRcdDwvZGl2PlxyXG5cdFx0KVxyXG5cdH1cclxuXHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEZlZWQgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xyXG5cdGNvbnN0cnVjdG9yKHByb3BzKVxyXG5cdHtcclxuXHRcdHN1cGVyKHByb3BzKTtcclxuXHRcdHRoaXMuc3RhdGUgPSB7IHBvc3RzOiBbXSB9O1xyXG5cclxuXHRcdHRoaXMubG9hZGluZ19wb3N0c19zZW1hcGhvciA9IGZhbHNlO1xyXG5cdFx0dGhpcy5vZmZzZXQgPSAwO1xyXG5cdFx0dGhpcy5ub25fcHJpb3JpdHlfb2Zmc2V0ID0gMDtcclxuXHRcdHRoaXMuZ2xvYmFsX29mZnNldCA9IDA7XHJcblx0XHR0aGlzLm5vbl9wcmlvcml0eV9nbG9iYWxfb2Zmc2V0ID0gMDtcclxuXHR9XHJcblxyXG5cdGhhbmRsZVNjcm9sbCgpIHtcclxuXHRcdGlmICgod2luZG93LmlubmVySGVpZ2h0ICsgd2luZG93LnNjcm9sbFkpID49IGRvY3VtZW50LmJvZHkub2Zmc2V0SGVpZ2h0ICYmICF0aGlzLmxvYWRpbmdfcG9zdHNfc2VtYXBob3IpIFxyXG5cdFx0e1xyXG5cdFx0XHR2YXIgdGhhdCA9IHRoaXNcclxuXHRcdFx0dGhpcy5sb2FkaW5nX3Bvc3RzX3NlbWFwaG9yID0gdHJ1ZVxyXG5cdFx0ICAgIGZldGNoKFwiL2xvYWRfcG9zdF9kYXRhXCIsIHtcclxuXHRcdCAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcclxuXHRcdCAgICAgICAgaGVhZGVyczoge1xyXG5cdFx0ICAgICAgICBcdCdBY2NlcHQnOiAnYXBwbGljYXRpb24vanNvbicsXHJcblx0XHQgICAgICAgIFx0J0F1dGhvcml6YXRpb24nOiAnQmFzaWMnLFxyXG5cdFx0ICAgICAgICBcdCdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXHJcblx0XHQgICAgICAgIH0sXHJcblx0XHQgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtvZmZzZXQ6dGhhdC5vZmZzZXQsXHJcblx0XHQgICAgICAgIFx0XHRcdFx0XHQgIHVzZXI6IHRoYXQucHJvcHMuZGF0YS51c2VybmFtZX0pfSlcclxuXHRcdCAgICAudGhlbihmdW5jdGlvbihyZXNwb25zZSkgeyByZXR1cm4gcmVzcG9uc2UuanNvbigpO30pXHJcblx0XHQgICAgLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsgXHJcblx0XHQgICAgXHR0aGF0Lm9mZnNldCArPSBkYXRhLnNvbmdzLmxlbmd0aDtcclxuXHRcdCAgICBcdC8vdGhhdC5wb3N0c1JlZi5jdXJyZW50LmFkZFBvc3RzKGRhdGEuc29uZ3MsIGRhdGEubGlrZXMsIGRhdGEubnVtX2NvbW1lbnRzLCBkYXRhLm51bV9wb3N0cywgZGF0YS51c2VyX3Byb2ZpbGVzKVxyXG5cdFx0XHRcdGxldCBuZXdQb3N0cyA9IFtdO1xyXG5cdFx0XHRcdGZvciAodmFyIHNvbmcgb2YgZGF0YS5zb25ncykge1xyXG5cdFx0XHRcdFx0bmV3UG9zdHMucHVzaChtYWtlUG9zdChcclxuXHRcdFx0XHRcdFx0c29uZyxcclxuXHRcdFx0XHRcdFx0ZGF0YS5saWtlcyxcclxuXHRcdFx0XHRcdFx0ZGF0YS5udW1fY29tbWVudHMsXHJcblx0XHRcdFx0XHRcdGRhdGEubnVtX3Bvc3RzLFxyXG5cdFx0XHRcdFx0XHRkYXRhLmJ1bXBzLFxyXG5cdFx0XHRcdFx0XHRkYXRhLnVzZXJfcHJvZmlsZXNcclxuXHRcdFx0XHRcdCkpO1xyXG5cdFx0XHRcdH1cdFx0ICAgIFx0XHJcblx0XHRcdFx0dGhhdC5zZXRTdGF0ZSh7cG9zdHM6IHRoYXQuc3RhdGUucG9zdHMuY29uY2F0KG5ld1Bvc3RzKX0pO1xyXG5cdFx0ICAgIFx0dGhhdC5sb2FkaW5nX3Bvc3RzX3NlbWFwaG9yID0gZmFsc2U7XHJcblx0XHQgXHR9KVxyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0Y29tcG9uZW50RGlkTW91bnQoKVxyXG5cdHtcclxuXHQgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIHRoaXMuaGFuZGxlU2Nyb2xsLmJpbmQodGhpcykpO1xyXG5cdCAgICB0aGlzLnVwZGF0ZU9mZnNldHModGhpcy5wcm9wcy5kYXRhLnNvbmdzKVxyXG5cdFx0XHRsZXQgc3RhcnRpbmdQb3N0cyA9IFtdO1xyXG5cdFx0XHRmb3IgKHZhciBzb25nIG9mIHRoaXMucHJvcHMuZGF0YS5zb25ncykge1xyXG5cdFx0XHRcdHN0YXJ0aW5nUG9zdHMucHVzaChtYWtlUG9zdChcclxuXHRcdFx0XHRcdHNvbmcsXHJcblx0XHRcdFx0XHR0aGlzLnByb3BzLmRhdGEubGlrZXMsXHJcblx0XHRcdFx0XHR0aGlzLnByb3BzLmRhdGEubnVtX2NvbW1lbnRzLFxyXG5cdFx0XHRcdFx0dGhpcy5wcm9wcy5kYXRhLm51bV9wb3N0cyxcclxuXHRcdFx0XHRcdHRoaXMucHJvcHMuZGF0YS5idW1wcyxcclxuXHRcdFx0XHRcdHRoaXMucHJvcHMuZGF0YS51c2VyX3Byb2ZpbGVzLFxyXG5cdFx0XHRcdCkpO1xyXG5cdFx0XHR9XHJcblx0XHRcdHRoaXMuc2V0U3RhdGUoe3Bvc3RzOiBzdGFydGluZ1Bvc3RzfSk7XHJcblx0fVxyXG5cclxuXHRjb21wb25lbnRXaWxsVW5tb3VudCgpXHJcblx0e1xyXG5cdCAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcignc2Nyb2xsJywgdGhpcy5oYW5kbGVTY3JvbGwuYmluZCh0aGlzKSk7XHJcblx0fVxyXG5cclxuXHR1cGRhdGVPZmZzZXRzKHNvbmdzKVxyXG5cdHtcclxuICAgIFx0Zm9yICh2YXIgc29uZyBvZiBzb25ncylcclxuICAgIFx0e1xyXG4gICAgXHRcdGlmIChzb25nLm9mZnNldF90eXBlID09IDApXHJcbiAgICBcdFx0e1xyXG4gICAgXHRcdFx0Kyt0aGlzLm9mZnNldDtcclxuICAgIFx0XHR9XHJcbiAgICBcdFx0ZWxzZSBpZiAgKHNvbmcub2Zmc2V0X3R5cGUgPT0gMSlcclxuICAgIFx0XHR7XHJcbiAgICBcdFx0XHQrK3RoaXMubm9uX3ByaW9yaXR5X29mZnNldDtcclxuICAgIFx0XHR9XHJcbiAgICBcdFx0ZWxzZSBpZiAoc29uZy5vZmZzZXRfdHlwZSA9PSAyKVxyXG4gICAgXHRcdHtcclxuICAgIFx0XHRcdCsrdGhpcy5nbG9iYWxfb2Zmc2V0O1xyXG4gICAgXHRcdH1cclxuICAgIFx0XHRlbHNlXHJcbiAgICBcdFx0e1xyXG4gICAgXHRcdFx0Kyt0aGlzLm5vbl9wcmlvcml0eV9nbG9iYWxfb2Zmc2V0O1xyXG4gICAgXHRcdH1cclxuICAgIFx0fVxyXG5cdH1cclxuXHJcblx0aGFuZGxlU2Nyb2xsKCkge1xyXG5cdFx0aWYgKCh3aW5kb3cuaW5uZXJIZWlnaHQgKyB3aW5kb3cuc2Nyb2xsWSkgPj0gZG9jdW1lbnQuYm9keS5vZmZzZXRIZWlnaHQgJiYgIXRoaXMubG9hZGluZ19wb3N0c19zZW1hcGhvcilcclxuXHRcdHtcclxuXHRcdFx0dmFyIHRoYXQgPSB0aGlzO1xyXG5cclxuXHRcdFx0dGhpcy5sb2FkaW5nX3Bvc3RzX3NlbWFwaG9yID0gdHJ1ZTtcclxuXHRcdFx0ZmV0Y2goXCIvbG9hZF9mZWVkXCIsIHtcclxuXHRcdFx0XHRtZXRob2Q6IFwiUE9TVFwiLFxyXG5cdFx0XHRcdGhlYWRlcnM6IHtcclxuXHRcdFx0XHRcdCdBY2NlcHQnOiAnYXBwbGljYXRpb24vanNvbicsXHJcblx0XHRcdFx0XHQnQXV0aG9yaXphdGlvbic6ICdCYXNpYycsXHJcblx0XHRcdFx0XHQnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxyXG5cdFx0XHRcdH0sXHJcblx0XHRcdFx0Ym9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG5cdFx0XHRcdFx0b2Zmc2V0OnRoaXMub2Zmc2V0LFxyXG5cdFx0XHRcdFx0bm9uX3ByaW9yaXR5X29mZnNldDogdGhpcy5ub25fcHJpb3JpdHlfb2Zmc2V0LFxyXG5cdFx0XHRcdFx0Z2xvYmFsX29mZnNldDogdGhpcy5nbG9iYWxfb2Zmc2V0LFxyXG5cdFx0XHRcdFx0bm9uX3ByaW9yaXR5X2dsb2JhbF9vZmZzZXQ6IHRoaXMubm9uX3ByaW9yaXR5X2dsb2JhbF9vZmZzZXQsXHJcblx0XHRcdFx0fSksXHJcblx0XHRcdH0pLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHtcclxuXHRcdFx0XHRyZXR1cm4gcmVzcG9uc2UuanNvbigpO1xyXG5cdFx0XHR9KS50aGVuKGZ1bmN0aW9uIChkYXRhKSB7XHJcblx0XHRcdFx0dGhhdC51cGRhdGVPZmZzZXRzKGRhdGEuc29uZ3MpXHJcblx0XHRcdFx0bGV0IG5ld1Bvc3RzID0gW107XHJcblx0XHRcdFx0Zm9yICh2YXIgc29uZyBvZiBkYXRhLnNvbmdzKSB7XHJcblx0XHRcdFx0XHRuZXdQb3N0cy5wdXNoKG1ha2VQb3N0KFxyXG5cdFx0XHRcdFx0XHRzb25nLFxyXG5cdFx0XHRcdFx0XHRkYXRhLmxpa2VzLFxyXG5cdFx0XHRcdFx0XHRkYXRhLm51bV9jb21tZW50cyxcclxuXHRcdFx0XHRcdFx0ZGF0YS5udW1fcG9zdHMsXHJcblx0XHRcdFx0XHRcdGRhdGEuYnVtcHMsXHJcblx0XHRcdFx0XHRcdGRhdGEudXNlcl9wcm9maWxlc1xyXG5cdFx0XHRcdFx0KSk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdHRoYXQuc2V0U3RhdGUoe3Bvc3RzOiB0aGF0LnN0YXRlLnBvc3RzLmNvbmNhdChuZXdQb3N0cyl9KTtcclxuXHRcdFx0XHR0aGF0LmxvYWRpbmdfcG9zdHNfc2VtYXBob3IgPSBmYWxzZTtcclxuXHRcdFx0fSk7XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHRyZW5kZXIoKVxyXG5cdHtcclxuXHRcdHJldHVybiAoXHJcblx0XHRcdDxkaXYgc3R5bGU9e3tkaXNwbGF5OidmbGV4JywganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInLCBiYWNrZ3JvdW5kQ29sb3I6JyNGNkY2RjYnfX0+XHJcblx0XHRcdFx0PGRpdiBzdHlsZT17e2Rpc3BsYXk6J2ZsZXgnLCBmbGV4RGlyZWN0aW9uOidjb2x1bW4nfX0+XHJcblx0XHRcdFx0XHQ8ZGl2IHN0eWxlPXt7bWFyZ2luVG9wOiAnMTZweCd9fT5cclxuXHRcdFx0XHRcdFx0PE5ld1Bvc3RTdWJtaXNzaW9uIC8+XHJcblx0XHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0XHRcdDxkaXYgc3R5bGU9e3tkaXNwbGF5OidmbGV4JywgZmxleERpcmVjdGlvbjoncm93JywgbWFyZ2luVG9wOiAnMTJweCd9fT5cclxuXHRcdFx0XHRcdFx0PGRpdiBzdHlsZT17e21hcmdpblJpZ2h0OiAnMTJweCd9fT5cclxuXHRcdFx0XHRcdFx0XHQ8UG9zdEluZm8gcG9zdHM9e3RoaXMuc3RhdGUucG9zdHN9IC8+XHJcblx0XHRcdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT17J2ZlZWRfc3RpY2t5U2lkZUJhcid9PlxyXG5cdFx0XHRcdFx0XHRcdDxUcmVuZGluZyBkYXRhID0ge3RoaXMucHJvcHMuZGF0YS5nbG9iYWxfc29uZ3N9IC8+XHJcblx0XHRcdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdDwvZGl2PlxyXG5cdFx0KTtcclxuXHR9XHJcblxyXG59XHJcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDb250YWN0IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcclxuXHJcblx0Y29uc3RydWN0b3IocHJvcHMpXHJcblx0e1xyXG5cdFx0c3VwZXIocHJvcHMpO1xyXG5cdH1cclxuXHJcblx0cmVuZGVyICgpXHJcblx0e1xyXG5cdFx0cmV0dXJuICg8ZGl2IHN0eWxlID0ge3t0b3A6ICcxNTBweCcsIGxlZnQ6JzUlJywgcG9zaXRpb246J3JlbGF0aXZlJ319PiBcclxuXHRcdFx0PGRpdj5cclxuXHRcdFx0XHQ8aDE+PGEgaHJlZiA9IFwiaHR0cHM6Ly9mb3Jtcy5nbGUvU2ZUOGYzaGlNUkhSVDdtdTdcIj4gUHJlLVRlc3QgU3VydmV5IDwvYT48L2gxPlxyXG5cdFx0XHQ8L2Rpdj5cclxuXHRcdFx0PGRpdj5cclxuXHRcdFx0XHQ8aDE+PGEgaHJlZiA9IFwiaHR0cHM6Ly9mb3Jtcy5nbGUvMzREYldiczhHaHZiREZIeDdcIj4gRmVlZGJhY2sgPC9hPjwvaDE+XHJcblx0XHRcdDwvZGl2PlxyXG5cdFx0PC9kaXY+KTtcclxuXHR9XHJcbn0iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgU3RhbmRhcmRIZWFkZXIgZnJvbSAnLi9zdGFuZGFyZF9oZWFkZXIuanMnXHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBBYm91dCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudHtcclxuXHRjb25zdHJ1Y3Rvcihwcm9wcyl7XHJcblx0XHRzdXBlcihwcm9wcyk7XHJcblxyXG5cclxuXHR9XHJcblxyXG5cdGNvbXBvbmVudERpZE1vdW50KClcclxuXHR7XHJcblxyXG5cdH1cclxuXHJcblxyXG5cdHJlbmRlcigpIHtcclxuXHRcdHJldHVybiAoXHJcblx0XHQ8ZGl2PlxyXG5cdFx0XHQ8c2VjdGlvbiBjbGFzc05hbWUgPSBcImhlcm9cIj5cclxuXHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZSA9ICBcImhlcm8tY29udGVudFwiPlxyXG5cdFx0XHRcdFx0PGgyPkFsbCBhYm91dCB1czwvaDI+XHJcblx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdDwvc2VjdGlvbj5cclxuXHJcblx0XHRcdDxkaXYgY2xhc3NOYW1lID0gXCJqdW1ib3Ryb24gdGV4dC1jZW50ZXJcIiBzdHlsZSA9IHt7Zm9udFNpemU6JzJlbSd9fT5cclxuXHRcdFx0XHQ8cD4xLiBDbGljayByZWdpc3RlciwgZW50ZXIgbmFtZSwgcGFzc3dvcmQuIExvZ2luIHVzaW5nIHRoYXQgaW5mbyA8L3A+XHJcblx0XHRcdFx0PHA+Mi4gVG8gc3VibWl0IGNvbnRlbnQuIEdldCBhIHNwb3RpZnkgZW1iZWQgbGluay4gR28gdG8gYSBzb25nIG9yIGFsYnVtLCBjbGljayAuLi4tPnNoYXJlLT5jb3B5IGVtYmVkIGNvZGUuIHBhc3QgaW4gdGhlIHNvbmcvcGxheWxpc3Qgc2VjdGlvbi4gRW50ZXIgaW4gYSB0aXRsZSBhbmQgdGV4dDwvcD5cclxuXHRcdFx0XHQ8cD5cclxuXHRcdFx0XHQ8ZGl2IHN0eWxlID0ge3t9fT48aW1nIHNyYz1cIi9lbWJlZGNvZGVpbnN0cnVjdGlvbnMucG5nXCIgYWx0PVwiXCIvPjwvZGl2PlxyXG5cdFx0XHRcdDwvcD5cclxuXHRcdFx0XHQ8cD4zLiBZb3UgY2FuIHNlYXJjaCBmb3IgYSBzb25nLCBhbGJ1bSwgdXNlciwgb3IgYXJ0aXN0LiBUaGlzIHdpbGwgYnJpbmcgeW91IHRvIGEgZ2xvYmFsIHBvc3QgYWJvdXQgdGhlIHNvbmcgb3IgYWxidW0uIFRoaXMgc2hvdWxkIGhhdmUgYWxsIGRhdGEgZnJvbSBwb3N0cyBhYm91dCB0aGF0IHRvcGljPC9wPlxyXG5cdFx0XHQ8L2Rpdj5cclxuXHRcdDwvZGl2PlxyXG5cdFx0KTtcclxuXHR9XHJcbn1cclxuXHJcblxyXG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgU3RhbmRhcmRIZWFkZXIgZnJvbSAnLi9zdGFuZGFyZF9oZWFkZXIuanMnXHJcbmltcG9ydCB7IFBvc3RJbmZvLCBtYWtlUG9zdCB9IGZyb20gJy4vcG9zdC5qcydcclxuaW1wb3J0IHV0aWxzIGZyb20gJy4vdXRpbHMuanMnXHJcbmltcG9ydCBGb2xsb3dlckluZm8gZnJvbSAnLi9mb2xsb3dlcmluZm8uanMnXHJcblxyXG5jbGFzcyBQcm9maWxlQ29sb3IgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQgXHJcbntcclxuXHRjb25zdHJ1Y3Rvcihwcm9wcylcclxuXHR7XHJcblx0XHRzdXBlcihwcm9wcylcclxuXHRcdHRoaXMuc3RhdGUgPSB7Y29sb3JzOlsnIzE3ODI3NScsICcjMjY0MDhkJywgJyM1MGI1MjAnLCAnI2E1YzgyMycsICcjNDYyNjhmJywgJyNkMWFhMjUnLCAnI2FmMWY2MycsICcjZDE5MjI1JywgJyNkMTI1MjUnXX1cclxuXHR9XHJcblxyXG5cdHJlbmRlcigpXHJcblx0e1xyXG5cdFx0aWYgKHRoaXMuc3RhdGUuY29sb3JzLmxlbmd0aCA9PSAwIHx8IHRoaXMucHJvcHMuYWN0aXZlID09IHVuZGVmaW5lZCB8fCAhdGhpcy5wcm9wcy5hY3RpdmUpXHJcblx0XHR7XHJcblx0XHRcdHJldHVybiBudWxsXHJcblx0XHR9XHJcblx0XHR2YXIgY29sb3JfZGl2cyA9IFtdXHJcblx0XHRmb3IgKHZhciBjb2xvciBvZiB0aGlzLnN0YXRlLmNvbG9ycylcclxuXHRcdHtcclxuXHRcdFx0Y29sb3JfZGl2cy5wdXNoKDxkaXYga2V5ID0ge2NvbG9yfSBvbkNsaWNrID0ge3RoaXMucHJvcHMuc2V0Y29sb3J9IHN0eWxlID0ge3tiYWNrZ3JvdW5kQ29sb3I6Y29sb3IsIHdpZHRoOic3N3B4JywgaGVpZ2h0Oic1MHB4J319PiAgPC9kaXY+KVxyXG5cdFx0fVxyXG5cdFx0cmV0dXJuICg8ZGl2IHN0eWxlID0ge3twb3NpdGlvbjoncmVsYXRpdmUnLCBwYWRkaW5nTGVmdDonMTBweCcsIG1hcmdpbjonMHB4IGF1dG8nLCB3aWR0aDonNzM1cHgnLCBoZWlnaHQ6JzYwcHgnLCBmbGV4RGlyZWN0aW9uOidyb3cnLCBkaXNwbGF5OidmbGV4J319PlxyXG5cdFx0XHRcdFx0e2NvbG9yX2RpdnN9XHJcblx0XHRcdFx0PC9kaXY+XHJcblx0XHQpXHJcblx0fVxyXG59XHJcbmNsYXNzIFVzZXJJbmZvIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcclxuXHRjb25zdHJ1Y3Rvcihwcm9wcykgXHJcblx0e1xyXG5cdFx0c3VwZXIocHJvcHMpO1xyXG5cdFx0dGhpcy5kZXNjcmlwdGlvbiA9IHByb3BzLnVzZXIuZGVzY3JpcHRpb247XHJcblx0XHR0aGlzLmRlc2NyaXB0aW9uX3VpID0gdW5kZWZpbmVkXHJcblx0XHRpZiAodGhpcy5wcm9wcy51c2VybmFtZSA9PSB0aGlzLnByb3BzLnVzZXIudXNlcm5hbWUpXHJcblx0XHR7XHJcblx0XHRcdHRoaXMuZGVzY3JpcHRpb25fdWkgPSA8YnV0dG9uIHN0eWxlID17e2ZvbnRTaXplOicxNXB4JywgbGVmdDonOHB4JywgcG9zaXRpb246J3JlbGF0aXZlJ319IGNsYXNzTmFtZSA9IFwiZ3JheUJ1dHRvblwiIG9uQ2xpY2s9e3RoaXMuZWRpdERlc2NyaXB0aW9uLmJpbmQodGhpcyl9PiBFZGl0IDwvYnV0dG9uPjtcclxuXHRcdH1cclxuXHRcdHRoaXMuZGVzY3JpcHRpb25fdGV4dCA9IFJlYWN0LmNyZWF0ZVJlZigpO1xyXG5cdFx0dGhpcy5idW1wc191aSA9IDxkaXY+IEJ1bXBzOiB7dGhpcy5wcm9wcy51c2VyLmJ1bXBzfSA8L2Rpdj5cclxuXHRcdFxyXG5cdFx0dGhpcy5idXR0b25fdGV4dCA9IFwiRm9sbG93XCJcclxuXHRcdGZvciAodmFyIGZvbGxvdyBvZiBwcm9wcy5mb2xsb3dzKVxyXG5cdFx0e1xyXG5cdFx0XHRpZiAoZm9sbG93LnVzZXJfaWQgPT0gcHJvcHMudXNlcm5hbWUpXHJcblx0XHRcdHtcclxuXHRcdFx0XHR0aGlzLmJ1dHRvbl90ZXh0ID0gXCJVbmZvbGxvd1wiXHJcblx0XHRcdFx0dGhpcy5mb2xsb3dpbmdfdWkgPSBcIkZvbGxvd2luZ1wiXHJcblx0XHRcdFx0dGhpcy5mb2xsb3dpbmdfc3RhdGUgPSB0cnVlO1xyXG5cdFx0XHRcdGJyZWFrO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblxyXG5cdFx0dGhpcy5zdGF0ZSA9IHtjaGFuZ2VfY29sb3I6ZmFsc2V9XHJcblx0fVxyXG5cclxuICAgIHN1Ym1pdERlc2NyaXB0aW9uKClcclxuICAgIHtcclxuXHRcdHZhciB0aGF0ID0gdGhpcztcclxuXHQgICAgZmV0Y2goXCIvc3VibWl0X2Rlc2NyaXB0aW9uXCIsIHtcclxuXHQgICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcblx0ICAgICAgICBoZWFkZXJzOiB7XHJcblx0ICAgICAgICBcdEFjY2VwdDogJ2FwcGxpY2F0aW9uL2pzb24nLFxyXG5cdCAgICAgICAgXHQnQXV0aG9yaXphdGlvbic6ICdCYXNpYycsXHJcblx0ICAgICAgICBcdCdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXHJcblx0ICAgICAgICB9LFxyXG5cdCAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe3RleHQ6IHRoYXQuZGVzY3JpcHRpb25fdGV4dC5jdXJyZW50LnZhbHVlLCB1c2VyOnRoYXQucHJvcHMudXNlci51c2VybmFtZX0pfSlcclxuXHQgICAgLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHsgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTt9KVxyXG5cdCAgICAudGhlbihmdW5jdGlvbiAoZGF0YSkgeyAgICBcdFxyXG5cdCAgICBcdHRoYXQuZGVzY3JpcHRpb24gPSB0aGF0LmRlc2NyaXB0aW9uX3RleHQuY3VycmVudC52YWx1ZTtcclxuXHRcdFx0dGhhdC5kZXNjcmlwdGlvbl91aSA9IDxidXR0b24gb25DbGljaz17dGhhdC5lZGl0RGVzY3JpcHRpb24uYmluZCh0aGF0KX0+IEVkaXQgRGVzY3JpcHRpb24gPC9idXR0b24+XHJcblx0XHQgXHR0aGF0LmZvcmNlVXBkYXRlKCk7XHJcblx0IFx0fSlcdFxyXG5cclxuXHR9XHJcblxyXG5cdGVkaXREZXNjcmlwdGlvbigpXHJcblx0e1xyXG5cdFx0dGhpcy5kZXNjcmlwdGlvbl91aSA9IDxkaXY+XHJcblx0XHQ8dGV4dGFyZWEgcmVmID0ge3RoaXMuZGVzY3JpcHRpb25fdGV4dH0gc3R5bGU9e3t3aWR0aDonODAlJyxoZWlnaHQ6JzUwcHgnLHpJbmRleDonMTAwJ319Pnt0aGlzLnByb3BzLnVzZXIuZGVzY3JpcHRpb259PC90ZXh0YXJlYT5cclxuXHRcdDxidXR0b24gb25DbGljayA9IHt0aGlzLnN1Ym1pdERlc2NyaXB0aW9uLmJpbmQodGhpcyl9IHN0eWxlPSB7e2hlaWdodDonMzBweCcsIGJvdHRvbTonMzBweCcsIHBvc2l0aW9uOidyZWxhdGl2ZSd9fSB0eXBlPSdidXR0b24nPnN1Ym1pdDwvYnV0dG9uPlxyXG5cdFx0PGJ1dHRvbiBvbkNsaWNrID0ge3RoaXMuY2xvc2VEZXNjcmlwdGlvbi5iaW5kKHRoaXMpfSBzdHlsZT0ge3tib3R0b206JzBweCcsIHBvc2l0aW9uOidyZWxhdGl2ZScsIGhlaWdodDonMzBweCd9fSB0eXBlPSdidXR0b24nPng8L2J1dHRvbj5cclxuXHRcdDwvZGl2PlxyXG5cdFx0dGhpcy5mb3JjZVVwZGF0ZSgpO1xyXG5cdH1cclxuXHJcblx0Y2xvc2VEZXNjcmlwdGlvbigpXHJcblx0e1xyXG5cdFx0dGhpcy5kZXNjcmlwdGlvbl91aSA9IDxidXR0b24gb25DbGljaz17dGhpcy5lZGl0RGVzY3JpcHRpb24uYmluZCh0aGlzKX0+IEVkaXQgRGVzY3JpcHRpb24gPC9idXR0b24+XHJcblx0XHR0aGlzLmZvcmNlVXBkYXRlKCk7XHJcblx0fVxyXG5cclxuXHRzZXRDb2xvcihlKVxyXG5cdHtcclxuXHRcdHRoaXMucHJvcHMudXNlci5wcm9maWxlX3BpY3R1cmUgPSBlLnRhcmdldC5zdHlsZS5iYWNrZ3JvdW5kQ29sb3JcclxuXHRcdHZhciB0aGF0ID0gdGhpcztcclxuXHQgICAgZmV0Y2goXCIvc2V0X2NvbG9yXCIsIHtcclxuXHQgICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcblx0ICAgICAgICBoZWFkZXJzOiB7XHJcblx0ICAgICAgICBcdEFjY2VwdDogJ2FwcGxpY2F0aW9uL2pzb24nLFxyXG5cdCAgICAgICAgXHQnQXV0aG9yaXphdGlvbic6ICdCYXNpYycsXHJcblx0ICAgICAgICBcdCdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXHJcblx0ICAgICAgICB9LFxyXG5cdCAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe2NvbG9yOmUudGFyZ2V0LnN0eWxlLmJhY2tncm91bmRDb2xvcixcclxuXHQgICAgICAgIFx0XHRcdFx0XHQgIHVzZXJuYW1lOnRoYXQucHJvcHMudXNlci51c2VybmFtZX0pfSlcclxuXHQgICAgLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHsgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTt9KVxyXG5cdCAgICAudGhlbihmdW5jdGlvbiAoZGF0YSkgeyAgICBcdFxyXG5cclxuXHQgXHR9KVx0XHRcdFxyXG5cdCBcdHRoaXMuc2V0U3RhdGUoe2NoYW5nZV9jb2xvcjogZmFsc2V9KTtcclxuXHQgXHR0aGlzLmZvcmNlVXBkYXRlKClcclxuXHR9XHJcblxyXG5cdGNoYW5nZUNvbG9yQ2xpY2tlZCgpXHJcblx0e1xyXG5cdFx0dGhpcy5zZXRTdGF0ZSh7Y2hhbmdlX2NvbG9yOiAhdGhpcy5zdGF0ZS5jaGFuZ2VfY29sb3J9KTtcclxuXHR9XHJcblxyXG5cdHJlbmRlciAoKVxyXG5cdHtcclxuXHRcdHZhciBjaGFuZ2VfY29sb3JfZGlzcGxheSA9ICdub25lJ1xyXG5cdCAgXHRpZiAodGhpcy5wcm9wcy51c2VybmFtZSA9PSB0aGlzLnByb3BzLnVzZXIudXNlcm5hbWUpXHJcblx0ICBcdHtcclxuXHQgIFx0XHRjaGFuZ2VfY29sb3JfZGlzcGxheSA9ICcnXHJcblx0ICBcdH1cclxuXHRcdHJldHVybihcclxuXHRcdFx0PGRpdiBjbGFzc05hbWUgPSBcInVzZXJfaW5mb1wiIHN0eWxlPXt7bWFyZ2luOiAnMCBhdXRvJywgcGFkZGluZ1RvcDonMTBweCcsIHBhZGRpbmdMZWZ0OiAnMTBweCcsIHBhZGRpbmdCb3R0b206JzEwcHgnLCBiYWNrZ3JvdW5kOid3aGl0ZScsIGJvcmRlcjogJzFweCBzb2xpZCAjRjFGMUYxJywgYm9yZGVyUmFkaXVzOiAnN3B4JywgbWF4V2lkdGg6JzczNXB4J319PlxyXG5cdFx0XHRcdDxkaXYgc3R5bGUgPSB7e2Rpc3BsYXk6J2ZsZXgnLCBmbGV4RGlyZWN0aW9uOidyb3cnfX0+XHJcblx0XHRcdFx0XHQ8ZGl2PlxyXG5cdFx0XHRcdFx0XHQ8ZGl2IHN0eWxlID0ge3tib3JkZXJSYWRpdXM6JzUwJScsIHdpZHRoOic2NHB4JywgaGVpZ2h0Oic2NHB4JywgYmFja2dyb3VuZENvbG9yOnRoaXMucHJvcHMudXNlci5wcm9maWxlX3BpY3R1cmV9fT48L2Rpdj5cclxuXHRcdFx0XHRcdFx0PGRpdiBvbkNsaWNrID0ge3RoaXMuY2hhbmdlQ29sb3JDbGlja2VkLmJpbmQodGhpcyl9IHN0eWxlID0ge3tjb2xvcjonIzk5OTk5OScsIGZvbnRTaXplOicxNnB4JywgdGV4dEFsaWduOidjZW50ZXInLCBkaXNwbGF5OmNoYW5nZV9jb2xvcl9kaXNwbGF5IH19PiBDaGFuZ2UgPC9kaXY+XHJcblx0XHRcdFx0XHRcdFxyXG5cdFx0XHRcdFx0PC9kaXY+XHJcblxyXG5cdFx0XHRcdFx0PGRpdiBzdHlsZSA9IHt7cGFkZGluZ0xlZnQ6JzIwcHgnfX0+XHJcblx0XHRcdFx0XHRcdDxkaXYgc3R5bGUgPSB7e2Rpc3BsYXk6J2ZsZXgnLCBmbGV4RGlyZWN0aW9uOidyb3cnfX0+XHJcblx0XHRcdFx0XHRcdFx0PGRpdiBzdHlsZSA9IHt7Zm9udFNpemU6JzMwcHQnLCBmb250V2VpZ2h0Oidib2xkJ319Pnt0aGlzLnByb3BzLnVzZXIudXNlcm5hbWV9PC9kaXY+XHJcblx0XHRcdFx0XHRcdFx0PGRpdiBzdHlsZSA9IHt7ZmxleDonMSAwIGF1dG8nLCB2ZXJ0aWNhbEFsaWduOidtaWRkbGUnLCBkaXNwbGF5OidmbGV4JywgZmxleERpcmVjdGlvbjogJ2NvbHVtbicsIGp1c3RpZnlDb250ZW50OidjZW50ZXInLCBwYWRkaW5nTGVmdDonMjBweCd9fT5cclxuXHRcdFx0XHRcdFx0XHRcdDxidXR0b24gc3R5bGUgPSB7e2hlaWdodDonMzBweCcsIGZvbnRTaXplOicxOHB4J319IGNsYXNzTmFtZSA9ICdncmF5QnV0dG9uJyBpZCA9IFwiZm9sbG93X2J1dHRvblwiIHR5cGU9XCJidXR0b25cIiA+e3RoaXMuYnV0dG9uX3RleHR9PC9idXR0b24+XHJcblx0XHRcdFx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcdFx0XHQ8ZGl2IHN0eWxlID0ge3tkaXNwbGF5OidmbGV4JywgZmxleERpcmVjdGlvbjoncm93J319PlxyXG5cdFx0XHRcdFx0XHRcdDxkaXY+IDxhIHN0eWxlID0ge3tmb250V2VpZ2h0Oidib2xkJ319IGhyZWYgPSB7XCIvZm9sbG93aW5nL1wiICsgdGhpcy5wcm9wcy51c2VyLnVzZXJuYW1lfT4ge3RoaXMucHJvcHMuZm9sbG93ZWVzfSA8L2E+eycgZm9sbG93aW5nJ308L2Rpdj5cclxuXHRcdFx0XHRcdFx0XHQ8ZGl2IHN0eWxlID0ge3twYWRkaW5nTGVmdDonMjBweCd9fT4gPGEgc3R5bGUgPSB7e2ZvbnRXZWlnaHQ6J2JvbGQnfX0gaHJlZiA9IHtcIi9mb2xsb3dlcnMvXCIgKyB0aGlzLnByb3BzLnVzZXIudXNlcm5hbWV9PiB7dGhpcy5wcm9wcy5mb2xsb3dzLmxlbmd0aH0gPC9hPiB7JyBmb2xsb3dlcnMnfTwvZGl2PlxyXG5cdFx0XHRcdFx0XHRcdDxkaXYgc3R5bGUgPSB7e3BhZGRpbmdMZWZ0OicyMHB4J319PlNjb3JlOiB7dGhpcy5wcm9wcy51c2VyLnVwdm90ZXMgLSB0aGlzLnByb3BzLnVzZXIuZG93bnZvdGVzfTwvZGl2PlxyXG5cdFx0XHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0XHRcdDwvZGl2PlxyXG5cclxuXHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0XHQ8UHJvZmlsZUNvbG9yIHVzZXJfY29sb3IgPSB7dGhpcy5wcm9wcy51c2VyLnByb2ZpbGVfcGljdHVyZX0gYWN0aXZlID0ge3RoaXMuc3RhdGUuY2hhbmdlX2NvbG9yfSBzZXRjb2xvciA9IHt0aGlzLnNldENvbG9yLmJpbmQodGhpcyl9Lz5cclxuXHRcdFx0XHQ8ZGl2IHN0eWxlID0ge3t9fT5cclxuXHRcdFx0XHRcdDxkaXYgc3R5bGUgPSB7e2ZvbnRTaXplOicxNXB0J319Pnt0aGlzLmRlc2NyaXB0aW9ufVxyXG5cdFx0XHRcdFx0e3RoaXMuZGVzY3JpcHRpb25fdWl9XHJcblx0XHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0XHRcdFxyXG5cdFx0XHRcdDwvZGl2Plx0XHRcdFx0XHJcblx0XHRcclxuXHRcdFx0PC9kaXY+XHJcblx0XHQpO1xyXG5cdH1cclxufVxyXG5cclxuY2xhc3MgUHJvZmlsZVBpY3R1cmUgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xyXG5cdGNvbnN0cnVjdG9yKHByb3BzKSB7XHJcblx0XHRzdXBlcihwcm9wcyk7XHJcblx0XHR2YXIgY29sb3JzID0gWycjMTc4Mjc1JywgJyMyNjQwOGQnLCAnIzUwYjUyMCcsICcjYTVjODIzJywgJyM0NjI2OGYnLCAnI2QxYWEyNScsICcjYWYxZjYzJywgJyNkMTkyMjUnLCAnI2QxMjUyNSddXHJcblx0XHR0aGlzLmNvbG9ycyA9IFtdXHJcblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IGNvbG9ycy5sZW5ndGg7ICsraSlcclxuXHRcdHtcclxuXHRcdFx0dGhpcy5jb2xvcnMucHVzaCg8ZGl2IGtleSA9IHtjb2xvcnNbaV19IG9uQ2xpY2sgPSB7dGhpcy5zZXRDb2xvci5iaW5kKHRoaXMpfSBzdHlsZSA9IHt7YmFja2dyb3VuZENvbG9yOmNvbG9yc1tpXSwgd2lkdGg6Jzg4cHgnLCBoZWlnaHQ6JzUwcHgnfX0+ICA8L2Rpdj4pXHJcblx0XHR9XHJcblx0XHR0aGlzLmNvbG9yc1JlZiA9IFJlYWN0LmNyZWF0ZVJlZigpXHJcblx0fVx0XHJcblxyXG5cdHNob3dDb2xvcnMoKVxyXG5cdHtcclxuXHRcdGlmICh0aGlzLmNvbG9yc1JlZi5jdXJyZW50LnN0eWxlLmRpc3BsYXkgPT0gJ25vbmUnKVxyXG5cdFx0e1xyXG5cdFx0XHR0aGlzLmNvbG9yc1JlZi5jdXJyZW50LnN0eWxlLmRpc3BsYXkgPSAnZmxleCdcclxuXHRcdH1cclxuXHRcdGVsc2VcclxuXHRcdHtcclxuXHRcdFx0dGhpcy5jb2xvcnNSZWYuY3VycmVudC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnXHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHRzZXRDb2xvcihlKVxyXG5cdHtcclxuXHRcdHRoaXMuY29sb3JzUmVmLmN1cnJlbnQuc3R5bGUuZGlzcGxheSA9ICdub25lJ1xyXG5cdFx0dGhpcy5wcm9wcy51c2VyLnByb2ZpbGVfcGljdHVyZSA9IGUudGFyZ2V0LnN0eWxlLmJhY2tncm91bmRDb2xvclxyXG5cdFx0dmFyIHRoYXQgPSB0aGlzO1xyXG5cdCAgICBmZXRjaChcIi9zZXRfY29sb3JcIiwge1xyXG5cdCAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcclxuXHQgICAgICAgIGhlYWRlcnM6IHtcclxuXHQgICAgICAgIFx0QWNjZXB0OiAnYXBwbGljYXRpb24vanNvbicsXHJcblx0ICAgICAgICBcdCdBdXRob3JpemF0aW9uJzogJ0Jhc2ljJyxcclxuXHQgICAgICAgIFx0J0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuXHQgICAgICAgIH0sXHJcblx0ICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7Y29sb3I6ZS50YXJnZXQuc3R5bGUuYmFja2dyb3VuZENvbG9yLFxyXG5cdCAgICAgICAgXHRcdFx0XHRcdCAgdXNlcm5hbWU6dGhhdC5wcm9wcy51c2VyLnVzZXJuYW1lfSl9KVxyXG5cdCAgICAudGhlbihmdW5jdGlvbihyZXNwb25zZSkgeyByZXR1cm4gcmVzcG9uc2UuanNvbigpO30pXHJcblx0ICAgIC50aGVuKGZ1bmN0aW9uIChkYXRhKSB7ICAgIFx0XHJcblxyXG5cdCBcdH0pXHRcdFx0XHJcblx0IFx0dGhpcy5mb3JjZVVwZGF0ZSgpXHJcblx0fVxyXG5cclxuXHRyZW5kZXIoKVxyXG5cdHtcclxuXHRcdHJldHVybiAoPGRpdiBzdHlsZSA9IHt7cG9zaXRpb246J3JlbGF0aXZlJywgcGFkZGluZ0xlZnQ6JzEwcHgnLCBtYXJnaW46JzBweCBhdXRvJywgd2lkdGg6Jzk4MHB4JywgaGVpZ2h0OicyMHB4J319PlxyXG5cdFx0XHRcdFx0PGRpdiBzdHlsZSA9IHt7ZGlzcGxheTonZmxleCcsIGZsZXhEaXJlY3Rpb246J3Jvdyd9fT5cclxuXHRcdFx0XHRcdFx0PGRpdiBvbkNsaWNrID0ge3RoaXMuc2hvd0NvbG9ycy5iaW5kKHRoaXMpfT4gU2VsZWN0IFByb2ZpbGUgQ29sb3IgPC9kaXY+IFxyXG5cdFx0XHRcdFx0XHQ8ZGl2IHN0eWxlID0ge3t3aWR0aDonNTBweCcsIGhlaWdodDonMTVweCcsIGJhY2tncm91bmRDb2xvcjogdGhpcy5wcm9wcy51c2VyLnByb2ZpbGVfcGljdHVyZSwgbGVmdDonMTBweCcsIHRvcDonM3B4JywgcG9zaXRpb246J3JlbGF0aXZlJ319PjwvZGl2PlxyXG5cdFx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0XHQ8ZGl2IHJlZiA9IHt0aGlzLmNvbG9yc1JlZn0gc3R5bGUgPSB7e2Rpc3BsYXk6J25vbmUnLCBmbGV4RGlyZWN0aW9uOidyb3cnfX0+XHJcblx0XHRcdFx0XHRcdHt0aGlzLmNvbG9yc31cclxuXHRcdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcdDwvZGl2PlxyXG5cdFx0KVxyXG5cdH1cclxufVxyXG5cclxuY2xhc3MgRmF2b3JpdGVTb25ncyBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XHJcblx0Y29uc3RydWN0b3IocHJvcHMpIHtcclxuXHRcdHN1cGVyKHByb3BzKTtcclxuXHJcblxyXG5cdFx0dGhpcy5zZWxlY3RTb25nUmVmcyA9IFtdXHJcblx0XHR0aGlzLnNlbGVjdFNvbmdSZWZzLnB1c2goUmVhY3QuY3JlYXRlUmVmKCkpO1xyXG5cdFx0dGhpcy5zZWxlY3RTb25nUmVmcy5wdXNoKFJlYWN0LmNyZWF0ZVJlZigpKTtcclxuXHRcdHRoaXMuc2VsZWN0U29uZ1JlZnMucHVzaChSZWFjdC5jcmVhdGVSZWYoKSk7XHJcblxyXG5cdFx0dGhpcy5zb25nUmVmcyA9IFtdXHJcblx0XHR0aGlzLnNvbmdSZWZzLnB1c2goUmVhY3QuY3JlYXRlUmVmKCkpO1xyXG5cdFx0dGhpcy5zb25nUmVmcy5wdXNoKFJlYWN0LmNyZWF0ZVJlZigpKTtcclxuXHRcdHRoaXMuc29uZ1JlZnMucHVzaChSZWFjdC5jcmVhdGVSZWYoKSk7XHJcblxyXG5cdFx0dGhpcy5zZWxlY3RBcnRpc3RSZWZzID0gW11cclxuXHRcdHRoaXMuc2VsZWN0QXJ0aXN0UmVmcy5wdXNoKFJlYWN0LmNyZWF0ZVJlZigpKTtcclxuXHRcdHRoaXMuc2VsZWN0QXJ0aXN0UmVmcy5wdXNoKFJlYWN0LmNyZWF0ZVJlZigpKTtcclxuXHRcdHRoaXMuc2VsZWN0QXJ0aXN0UmVmcy5wdXNoKFJlYWN0LmNyZWF0ZVJlZigpKTtcclxuXHJcblx0XHR0aGlzLmFydGlzdFJlZnMgPSBbXVxyXG5cdFx0dGhpcy5hcnRpc3RSZWZzLnB1c2goUmVhY3QuY3JlYXRlUmVmKCkpO1xyXG5cdFx0dGhpcy5hcnRpc3RSZWZzLnB1c2goUmVhY3QuY3JlYXRlUmVmKCkpO1xyXG5cdFx0dGhpcy5hcnRpc3RSZWZzLnB1c2goUmVhY3QuY3JlYXRlUmVmKCkpO1xyXG5cdH1cclxuXHRcclxuXHRzZWxlY3RTb25nQ2xpY2tlZChlKVxyXG5cdHtcclxuXHRcdGlmICh0aGlzLnNlbGVjdFNvbmdSZWZzW3BhcnNlSW50KGUudGFyZ2V0LmlkKV0uY3VycmVudC5zdHlsZS5kaXNwbGF5ID09ICdub25lJylcclxuXHRcdHtcdFxyXG5cdFx0XHR0aGlzLnNlbGVjdFNvbmdSZWZzW3BhcnNlSW50KGUudGFyZ2V0LmlkKV0uY3VycmVudC5zdHlsZS5kaXNwbGF5ICA9ICcnXHJcblx0XHR9XHJcblx0XHRlbHNlXHJcblx0XHR7XHJcblx0XHRcdHRoaXMuc2VsZWN0U29uZ1JlZnNbcGFyc2VJbnQoZS50YXJnZXQuaWQpXS5jdXJyZW50LnN0eWxlLmRpc3BsYXkgID0gJ25vbmUnXHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHRzZWxlY3RBcnRpc3RDbGlja2VkKGUpXHJcblx0e1xyXG5cdFx0aWYgKHRoaXMuc2VsZWN0QXJ0aXN0UmVmc1twYXJzZUludChlLnRhcmdldC5pZCldLmN1cnJlbnQuc3R5bGUuZGlzcGxheSA9PSAnbm9uZScpXHJcblx0XHR7XHRcclxuXHRcdFx0dGhpcy5zZWxlY3RBcnRpc3RSZWZzW3BhcnNlSW50KGUudGFyZ2V0LmlkKV0uY3VycmVudC5zdHlsZS5kaXNwbGF5ICA9ICcnXHJcblx0XHR9XHJcblx0XHRlbHNlXHJcblx0XHR7XHJcblx0XHRcdHRoaXMuc2VsZWN0QXJ0aXN0UmVmc1twYXJzZUludChlLnRhcmdldC5pZCldLmN1cnJlbnQuc3R5bGUuZGlzcGxheSAgPSAnbm9uZSdcclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdHN1Ym1pdFNvbmdDbGlja2VkKGUpXHJcblx0e1xyXG5cdFx0aWYgKHBhcnNlSW50KGUudGFyZ2V0LmlkKSA9PSAwKVxyXG5cdFx0e1xyXG5cdFx0XHR0aGlzLnByb3BzLnVzZXIuc29uZzAgPSB0aGlzLnNlbGVjdFNvbmdSZWZzW3BhcnNlSW50KGUudGFyZ2V0LmlkKV0uY3VycmVudC5jaGlsZHJlblswXS52YWx1ZVxyXG5cdFx0fVxyXG5cdFx0ZWxzZSBpZiAocGFyc2VJbnQoZS50YXJnZXQuaWQpID09IDEpXHJcblx0XHR7XHJcblx0XHRcdHRoaXMucHJvcHMudXNlci5zb25nMSA9IHRoaXMuc2VsZWN0U29uZ1JlZnNbcGFyc2VJbnQoZS50YXJnZXQuaWQpXS5jdXJyZW50LmNoaWxkcmVuWzBdLnZhbHVlXHJcblx0XHR9XHJcblx0XHRlbHNlIGlmIChwYXJzZUludChlLnRhcmdldC5pZCkgPT0gMilcclxuXHRcdHtcclxuXHRcdFx0dGhpcy5wcm9wcy51c2VyLnNvbmcyID0gdGhpcy5zZWxlY3RTb25nUmVmc1twYXJzZUludChlLnRhcmdldC5pZCldLmN1cnJlbnQuY2hpbGRyZW5bMF0udmFsdWVcclxuXHRcdH1cclxuXHJcblx0ICAgIGZldGNoKFwiL2Zhdm9yaXRlX3NvbmdcIiwge1xyXG5cdCAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcclxuXHQgICAgICAgIGhlYWRlcnM6IHtcclxuXHQgICAgICAgIFx0QWNjZXB0OiAnYXBwbGljYXRpb24vanNvbicsXHJcblx0ICAgICAgICBcdCdBdXRob3JpemF0aW9uJzogJ0Jhc2ljJyxcclxuXHQgICAgICAgIFx0J0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuXHQgICAgICAgIH0sXHJcblx0ICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7bnVtYmVyOnBhcnNlSW50KGUudGFyZ2V0LmlkKSxcclxuXHQgICAgICAgIFx0XHRcdFx0XHQgIHNvbmc6IHRoaXMuc2VsZWN0U29uZ1JlZnNbcGFyc2VJbnQoZS50YXJnZXQuaWQpXS5jdXJyZW50LmNoaWxkcmVuWzBdLnZhbHVlLFxyXG5cdCAgICAgICAgXHRcdFx0XHRcdCAgdXNlcm5hbWU6IHRoaXMucHJvcHMudXNlci51c2VybmFtZSxcclxuXHQgICAgICAgIFx0XHRcdFx0XHQgIH0pfSlcclxuXHQgICAgLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHsgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTt9KVxyXG5cdCAgICAudGhlbihmdW5jdGlvbiAoZGF0YSkgeyAgICBcdFxyXG5cclxuXHQgXHR9KVx0XHRcclxuXHQgXHR0aGlzLmZvcmNlVXBkYXRlKCk7XHJcblx0fVxyXG5cclxuXHJcblx0c3VibWl0QXJ0aXN0Q2xpY2tlZChlKVxyXG5cdHtcclxuXHRcdGlmIChwYXJzZUludChlLnRhcmdldC5pZCkgPT0gMClcclxuXHRcdHtcclxuXHRcdFx0dGhpcy5wcm9wcy51c2VyLmFydGlzdDAgPSB0aGlzLnNlbGVjdEFydGlzdFJlZnNbcGFyc2VJbnQoZS50YXJnZXQuaWQpXS5jdXJyZW50LmNoaWxkcmVuWzBdLnZhbHVlXHJcblx0XHR9XHJcblx0XHRlbHNlIGlmIChwYXJzZUludChlLnRhcmdldC5pZCkgPT0gMSlcclxuXHRcdHtcclxuXHRcdFx0dGhpcy5wcm9wcy51c2VyLmFydGlzdDEgPSB0aGlzLnNlbGVjdEFydGlzdFJlZnNbcGFyc2VJbnQoZS50YXJnZXQuaWQpXS5jdXJyZW50LmNoaWxkcmVuWzBdLnZhbHVlXHJcblx0XHR9XHJcblx0XHRlbHNlIGlmIChwYXJzZUludChlLnRhcmdldC5pZCkgPT0gMilcclxuXHRcdHtcclxuXHRcdFx0dGhpcy5wcm9wcy51c2VyLmFydGlzdDIgPSB0aGlzLnNlbGVjdEFydGlzdFJlZnNbcGFyc2VJbnQoZS50YXJnZXQuaWQpXS5jdXJyZW50LmNoaWxkcmVuWzBdLnZhbHVlXHJcblx0XHR9XHJcblxyXG5cdCAgICBmZXRjaChcIi9mYXZvcml0ZV9hcnRpc3RcIiwge1xyXG5cdCAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcclxuXHQgICAgICAgIGhlYWRlcnM6IHtcclxuXHQgICAgICAgIFx0QWNjZXB0OiAnYXBwbGljYXRpb24vanNvbicsXHJcblx0ICAgICAgICBcdCdBdXRob3JpemF0aW9uJzogJ0Jhc2ljJyxcclxuXHQgICAgICAgIFx0J0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuXHQgICAgICAgIH0sXHJcblx0ICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7bnVtYmVyOnBhcnNlSW50KGUudGFyZ2V0LmlkKSxcclxuXHQgICAgICAgIFx0XHRcdFx0XHQgIGFydGlzdDogdGhpcy5zZWxlY3RBcnRpc3RSZWZzW3BhcnNlSW50KGUudGFyZ2V0LmlkKV0uY3VycmVudC5jaGlsZHJlblswXS52YWx1ZSxcclxuXHQgICAgICAgIFx0XHRcdFx0XHQgIHVzZXJuYW1lOiB0aGlzLnByb3BzLnVzZXIudXNlcm5hbWUsXHJcblx0ICAgICAgICBcdFx0XHRcdFx0ICB9KX0pXHJcblx0ICAgIC50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7IHJldHVybiByZXNwb25zZS5qc29uKCk7fSlcclxuXHQgICAgLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsgICAgXHRcclxuXHJcblx0IFx0fSlcdFx0XHJcblx0IFx0dGhpcy5mb3JjZVVwZGF0ZSgpO1xyXG5cdH1cclxuXHJcblx0Y2xvc2VTb25nQ2xpY2tlZChlKVxyXG5cdHtcclxuXHRcdHRoaXMuc2VsZWN0U29uZ1JlZnNbcGFyc2VJbnQoZS50YXJnZXQuaWQpXS5jdXJyZW50LnN0eWxlLmRpc3BsYXkgID0gJ25vbmUnXHJcblx0fVxyXG5cclxuXHRjbG9zZUFydGlzdENsaWNrZWQoZSlcclxuXHR7XHJcblx0XHR0aGlzLnNlbGVjdEFydGlzdFJlZnNbcGFyc2VJbnQoZS50YXJnZXQuaWQpXS5jdXJyZW50LnN0eWxlLmRpc3BsYXkgID0gJ25vbmUnXHJcblx0fVxyXG5cclxuXHRyZW5kZXIoKVxyXG5cdHtcclxuXHRcdHZhciB1c2VyX2Rpc3BsYXkgPSAnJ1xyXG5cdFx0aWYgKHRoaXMucHJvcHMudXNlcm5hbWUgIT0gdGhpcy5wcm9wcy51c2VyLnVzZXJuYW1lKVxyXG5cdFx0e1xyXG5cdFx0XHR1c2VyX2Rpc3BsYXkgPSAnbm9uZSdcclxuXHRcdH1cclxuXHRcdHJldHVybiAoPGRpdiBzdHlsZSA9IHt7ZGlzcGxheTogJ2ZsZXgnLGZsZXhEaXJlY3Rpb246ICdyb3cnLCBwb3NpdGlvbjoncmVsYXRpdmUnLCBwYWRkaW5nTGVmdDonMTBweCcsIG1hcmdpbjonMHB4IGF1dG8nLCB3aWR0aDonOTgwcHgnLCBoZWlnaHQ6JzIwcHgnfX0+XHJcblx0XHRcdFx0XHQ8ZGl2IHN0eWxlID0ge3t3aWR0aDonNDkwcHgnfX0+XHJcblx0XHRcdFx0XHRcdDxoMT5Ub3AgMyBTb25nczwvaDE+XHJcblx0XHRcdFx0XHRcdDxkaXYgcmVmID0ge3RoaXMuc29uZ1JlZnNbMF19PlxyXG5cdFx0XHRcdFx0XHRcdHt0aGlzLnByb3BzLnVzZXIuc29uZzB9XHJcblx0XHRcdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcdFx0XHQ8ZGl2IHJlZiA9IHt0aGlzLnNvbmdSZWZzWzFdfT5cclxuXHRcdFx0XHRcdFx0XHR7dGhpcy5wcm9wcy51c2VyLnNvbmcxfVxyXG5cdFx0XHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0XHRcdFx0PGRpdiByZWYgPSB7dGhpcy5zb25nUmVmc1syXX0+XHJcblx0XHRcdFx0XHRcdFx0e3RoaXMucHJvcHMudXNlci5zb25nMn1cclxuXHRcdFx0XHRcdFx0PC9kaXY+XHRcdFx0XHRcdFx0XHJcblx0XHRcdFx0XHRcdDxkaXYgc3R5bGUgPSB7e2Rpc3BsYXk6dXNlcl9kaXNwbGF5fX0+XHJcblx0XHRcdFx0XHRcdFx0PGRpdj5cclxuXHRcdFx0XHRcdFx0XHRcdDxkaXY+XHJcblx0XHRcdFx0XHRcdFx0XHQ8YnV0dG9uIGlkID0gJzAnIG9uQ2xpY2sgPSB7dGhpcy5zZWxlY3RTb25nQ2xpY2tlZC5iaW5kKHRoaXMpfT4gU2VsZWN0IFNvbmcgMSA8L2J1dHRvbj5cclxuXHRcdFx0XHRcdFx0XHRcdFxyXG5cdFx0XHRcdFx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0XHRcdFx0XHQ8ZGl2IHJlZiA9IHt0aGlzLnNlbGVjdFNvbmdSZWZzWzBdfSBzdHlsZSA9IHt7ZGlzcGxheTonbm9uZSd9fT5cclxuXHRcdFx0XHRcdFx0XHRcdFx0PGlucHV0IC8+XHJcblx0XHRcdFx0XHRcdFx0XHRcdDxidXR0b24gaWQgPSAnMCcgb25DbGljayA9IHt0aGlzLnN1Ym1pdFNvbmdDbGlja2VkLmJpbmQodGhpcyl9ID4gU3VibWl0IDwvYnV0dG9uPlxyXG5cdFx0XHRcdFx0XHRcdFx0XHQ8YnV0dG9uIGlkID0gJzAnIG9uQ2xpY2sgPSB7dGhpcy5jbG9zZVNvbmdDbGlja2VkLmJpbmQodGhpcyl9ID4gQ2xvc2UgPC9idXR0b24+XHJcblx0XHRcdFx0XHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0XHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0XHRcdFx0XHQ8ZGl2PlxyXG5cdFx0XHRcdFx0XHRcdFx0PGJ1dHRvbiBpZCA9ICcxJyBvbkNsaWNrID0ge3RoaXMuc2VsZWN0U29uZ0NsaWNrZWQuYmluZCh0aGlzKX0+IFNlbGVjdCBTb25nIDIgPC9idXR0b24+XHJcblx0XHRcdFx0XHRcdFx0XHQ8ZGl2IHJlZiA9IHt0aGlzLnNlbGVjdFNvbmdSZWZzWzFdfSBzdHlsZSA9IHt7ZGlzcGxheTonbm9uZSd9fT5cclxuXHRcdFx0XHRcdFx0XHRcdFx0PGlucHV0IC8+XHJcblx0XHRcdFx0XHRcdFx0XHRcdDxidXR0b24gaWQgPSAnMScgb25DbGljayA9IHt0aGlzLnN1Ym1pdFNvbmdDbGlja2VkLmJpbmQodGhpcyl9ID4gU3VibWl0IDwvYnV0dG9uPlxyXG5cdFx0XHRcdFx0XHRcdFx0XHQ8YnV0dG9uIGlkID0gJzEnIG9uQ2xpY2sgPSB7dGhpcy5jbG9zZVNvbmdDbGlja2VkLmJpbmQodGhpcyl9PiBDbG9zZSA8L2J1dHRvbj5cclxuXHRcdFx0XHRcdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcdFx0XHRcdDxkaXY+XHJcblx0XHRcdFx0XHRcdFx0XHQ8YnV0dG9uIGlkID0gJzInIG9uQ2xpY2sgPSB7dGhpcy5zZWxlY3RTb25nQ2xpY2tlZC5iaW5kKHRoaXMpfT4gU2VsZWN0IFNvbmcgMyA8L2J1dHRvbj5cclxuXHRcdFx0XHRcdFx0XHRcdDxkaXYgcmVmID0ge3RoaXMuc2VsZWN0U29uZ1JlZnNbMl19IHN0eWxlID0ge3tkaXNwbGF5Oidub25lJ319PlxyXG5cdFx0XHRcdFx0XHRcdFx0XHQ8aW5wdXQgLz5cclxuXHRcdFx0XHRcdFx0XHRcdFx0PGJ1dHRvbiBpZCA9ICcyJyBvbkNsaWNrID0ge3RoaXMuc3VibWl0U29uZ0NsaWNrZWQuYmluZCh0aGlzKX0gPiBTdWJtaXQgPC9idXR0b24+XHJcblx0XHRcdFx0XHRcdFx0XHRcdDxidXR0b24gaWQgPSAnMicgIG9uQ2xpY2sgPSB7dGhpcy5jbG9zZVNvbmdDbGlja2VkLmJpbmQodGhpcyl9PiBDbG9zZSA8L2J1dHRvbj5cclxuXHRcdFx0XHRcdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcdFx0PGRpdiBzdHlsZSA9IHt7d2lkdGg6JzQ5MHB4J319PlxyXG5cdFx0XHRcdFx0XHQ8aDE+VG9wIDMgQXJ0aXN0czwvaDE+IFxyXG5cdFx0XHRcdFx0XHQ8ZGl2IHJlZiA9IHt0aGlzLmFydGlzdFJlZnNbMF19PlxyXG5cdFx0XHRcdFx0XHRcdHt0aGlzLnByb3BzLnVzZXIuYXJ0aXN0MH1cclxuXHRcdFx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0XHRcdDxkaXYgcmVmID0ge3RoaXMuYXJ0aXN0UmVmc1sxXX0+XHJcblx0XHRcdFx0XHRcdFx0e3RoaXMucHJvcHMudXNlci5hcnRpc3QxfVxyXG5cdFx0XHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0XHRcdFx0PGRpdiByZWYgPSB7dGhpcy5hcnRpc3RSZWZzWzJdfT5cclxuXHRcdFx0XHRcdFx0XHR7dGhpcy5wcm9wcy51c2VyLmFydGlzdDJ9XHJcblx0XHRcdFx0XHRcdDwvZGl2Plx0XHRcdFxyXG5cdFx0XHRcdFx0XHQ8ZGl2IHN0eWxlID0ge3tkaXNwbGF5OnVzZXJfZGlzcGxheX19PlxyXG5cdFx0XHRcdFx0XHRcdDxkaXY+XHJcblx0XHRcdFx0XHRcdFx0XHQ8ZGl2PlxyXG5cdFx0XHRcdFx0XHRcdFx0PGJ1dHRvbiBpZCA9ICcwJyBvbkNsaWNrID0ge3RoaXMuc2VsZWN0QXJ0aXN0Q2xpY2tlZC5iaW5kKHRoaXMpfT4gU2VsZWN0IEFydGlzdCAxIDwvYnV0dG9uPlxyXG5cdFx0XHRcdFx0XHRcdFx0XHJcblx0XHRcdFx0XHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0XHRcdFx0XHRcdDxkaXYgcmVmID0ge3RoaXMuc2VsZWN0QXJ0aXN0UmVmc1swXX0gc3R5bGUgPSB7e2Rpc3BsYXk6J25vbmUnfX0+XHJcblx0XHRcdFx0XHRcdFx0XHRcdDxpbnB1dCAvPlxyXG5cdFx0XHRcdFx0XHRcdFx0XHQ8YnV0dG9uIGlkID0gJzAnIG9uQ2xpY2sgPSB7dGhpcy5zdWJtaXRBcnRpc3RDbGlja2VkLmJpbmQodGhpcyl9ID4gU3VibWl0IDwvYnV0dG9uPlxyXG5cdFx0XHRcdFx0XHRcdFx0XHQ8YnV0dG9uIGlkID0gJzAnICBvbkNsaWNrID0ge3RoaXMuY2xvc2VBcnRpc3RDbGlja2VkLmJpbmQodGhpcyl9PiBDbG9zZSA8L2J1dHRvbj5cclxuXHRcdFx0XHRcdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcdFx0XHRcdDxkaXY+XHJcblx0XHRcdFx0XHRcdFx0XHQ8ZGl2PlxyXG5cdFx0XHRcdFx0XHRcdFx0PGJ1dHRvbiBpZCA9ICcxJyBvbkNsaWNrID0ge3RoaXMuc2VsZWN0QXJ0aXN0Q2xpY2tlZC5iaW5kKHRoaXMpfT4gU2VsZWN0IEFydGlzdCAyIDwvYnV0dG9uPlxyXG5cdFx0XHRcdFx0XHRcdFx0XHJcblx0XHRcdFx0XHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0XHRcdFx0XHRcdDxkaXYgcmVmID0ge3RoaXMuc2VsZWN0QXJ0aXN0UmVmc1sxXX0gc3R5bGUgPSB7e2Rpc3BsYXk6J25vbmUnfX0+XHJcblx0XHRcdFx0XHRcdFx0XHRcdDxpbnB1dCAvPlxyXG5cdFx0XHRcdFx0XHRcdFx0XHQ8YnV0dG9uIGlkID0gJzEnIG9uQ2xpY2sgPSB7dGhpcy5zdWJtaXRBcnRpc3RDbGlja2VkLmJpbmQodGhpcyl9ID4gU3VibWl0IDwvYnV0dG9uPlxyXG5cdFx0XHRcdFx0XHRcdFx0XHQ8YnV0dG9uIGlkID0gJzEnIG9uQ2xpY2sgPSB7dGhpcy5jbG9zZUFydGlzdENsaWNrZWQuYmluZCh0aGlzKX0+IENsb3NlIDwvYnV0dG9uPlxyXG5cdFx0XHRcdFx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0XHRcdFx0PGRpdj5cclxuXHRcdFx0XHRcdFx0XHRcdDxkaXY+XHJcblx0XHRcdFx0XHRcdFx0XHQ8YnV0dG9uIGlkID0gJzInIG9uQ2xpY2sgPSB7dGhpcy5zZWxlY3RBcnRpc3RDbGlja2VkLmJpbmQodGhpcyl9PiBTZWxlY3QgQXJ0aXN0IDMgPC9idXR0b24+XHJcblx0XHRcdFx0XHRcdFx0XHRcclxuXHRcdFx0XHRcdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcdFx0XHRcdFx0PGRpdiByZWYgPSB7dGhpcy5zZWxlY3RBcnRpc3RSZWZzWzJdfSBzdHlsZSA9IHt7ZGlzcGxheTonbm9uZSd9fT5cclxuXHRcdFx0XHRcdFx0XHRcdFx0PGlucHV0IC8+XHJcblx0XHRcdFx0XHRcdFx0XHRcdDxidXR0b24gaWQgPSAnMicgb25DbGljayA9IHt0aGlzLnN1Ym1pdEFydGlzdENsaWNrZWQuYmluZCh0aGlzKX0gPiBTdWJtaXQgPC9idXR0b24+XHJcblx0XHRcdFx0XHRcdFx0XHRcdDxidXR0b24gaWQgPSAnMicgIG9uQ2xpY2sgPSB7dGhpcy5jbG9zZUFydGlzdENsaWNrZWQuYmluZCh0aGlzKX0+IENsb3NlIDwvYnV0dG9uPlxyXG5cdFx0XHRcdFx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0PC9kaXY+XHJcblx0XHQpXHJcblx0fVx0XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFVzZXJQYWdlIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50e1xyXG5cclxuXHRjb25zdHJ1Y3Rvcihwcm9wcykge1xyXG5cdFx0c3VwZXIocHJvcHMpO1xyXG5cdFx0dGhpcy5vZmZzZXQgPSB0aGlzLnByb3BzLmRhdGEuc29uZ3MubGVuZ3RoO1xyXG5cdFx0dGhpcy5wb3N0c1JlZiA9IFJlYWN0LmNyZWF0ZVJlZigpO1xyXG5cdFx0dGhpcy5sb2FkaW5nX3Bvc3RzX3NlbWFwaG9yID0gZmFsc2U7XHJcblx0XHR0aGlzLnN0YXRlID0geyBwb3N0czogW10gfTtcclxuXHR9XHJcblxyXG5cdGNvbXBvbmVudERpZE1vdW50KCkgXHJcblx0e1xyXG5cdCAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignc2Nyb2xsJywgdGhpcy5oYW5kbGVTY3JvbGwuYmluZCh0aGlzKSk7XHJcblx0ICAgIC8vdGhpcy51cGRhdGVPZmZzZXRzKHRoaXMucHJvcHMuZGF0YS5zb25ncylcXFxcXHJcblx0XHRsZXQgc3RhcnRpbmdQb3N0cyA9IFtdO1xyXG5cdFx0Zm9yICh2YXIgc29uZyBvZiB0aGlzLnByb3BzLmRhdGEuc29uZ3MpIHtcclxuXHRcdFx0c3RhcnRpbmdQb3N0cy5wdXNoKG1ha2VQb3N0KFxyXG5cdFx0XHRcdHNvbmcsXHJcblx0XHRcdFx0dGhpcy5wcm9wcy5kYXRhLmxpa2VzLFxyXG5cdFx0XHRcdHRoaXMucHJvcHMuZGF0YS5udW1fY29tbWVudHMsXHJcblx0XHRcdFx0dGhpcy5wcm9wcy5kYXRhLm51bV9wb3N0cyxcclxuXHRcdFx0XHR0aGlzLnByb3BzLmRhdGEuYnVtcHMsXHJcblx0XHRcdFx0dGhpcy5wcm9wcy5kYXRhLnVzZXJfcHJvZmlsZXMsXHJcblx0XHRcdCkpO1xyXG5cdFx0fVxyXG5cdFx0dGhpcy5zZXRTdGF0ZSh7cG9zdHM6IHN0YXJ0aW5nUG9zdHN9KTtcclxuXHR9XHJcblxyXG5cdGNvbXBvbmVudFdpbGxVbm1vdW50KCkgXHJcblx0e1xyXG5cdCAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcignc2Nyb2xsJywgdGhpcy5oYW5kbGVTY3JvbGwuYmluZCh0aGlzKSk7XHJcblx0fVxyXG5cclxuXHRoYW5kbGVTY3JvbGwoKSB7XHJcblx0XHRpZiAoKHdpbmRvdy5pbm5lckhlaWdodCArIHdpbmRvdy5zY3JvbGxZKSA+PSBkb2N1bWVudC5ib2R5Lm9mZnNldEhlaWdodCAmJiAhdGhpcy5sb2FkaW5nX3Bvc3RzX3NlbWFwaG9yKSBcclxuXHRcdHtcclxuXHRcdFx0dmFyIHRoYXQgPSB0aGlzXHJcblx0XHRcdHRoaXMubG9hZGluZ19wb3N0c19zZW1hcGhvciA9IHRydWVcclxuXHRcdCAgICBmZXRjaChcIi9sb2FkX3Bvc3RfZGF0YVwiLCB7XHJcblx0XHQgICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcblx0XHQgICAgICAgIGhlYWRlcnM6IHtcclxuXHRcdCAgICAgICAgXHQnQWNjZXB0JzogJ2FwcGxpY2F0aW9uL2pzb24nLFxyXG5cdFx0ICAgICAgICBcdCdBdXRob3JpemF0aW9uJzogJ0Jhc2ljJyxcclxuXHRcdCAgICAgICAgXHQnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxyXG5cdFx0ICAgICAgICB9LFxyXG5cdFx0ICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7b2Zmc2V0OnRoYXQub2Zmc2V0LFxyXG5cdFx0ICAgICAgICBcdFx0XHRcdFx0ICB1c2VyOiB0aGF0LnByb3BzLmRhdGEudXNlcm5hbWV9KX0pXHJcblx0XHQgICAgLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHsgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTt9KVxyXG5cdFx0ICAgIC50aGVuKGZ1bmN0aW9uIChkYXRhKSB7IFxyXG5cdFx0ICAgIFx0dGhhdC5vZmZzZXQgKz0gZGF0YS5zb25ncy5sZW5ndGg7XHJcblx0XHQgICAgXHQvL3RoYXQucG9zdHNSZWYuY3VycmVudC5hZGRQb3N0cyhkYXRhLnNvbmdzLCBkYXRhLmxpa2VzLCBkYXRhLm51bV9jb21tZW50cywgZGF0YS5udW1fcG9zdHMsIGRhdGEudXNlcl9wcm9maWxlcylcclxuXHRcdFx0XHRsZXQgbmV3UG9zdHMgPSBbXTtcclxuXHRcdFx0XHRmb3IgKHZhciBzb25nIG9mIGRhdGEuc29uZ3MpIHtcclxuXHRcdFx0XHRcdG5ld1Bvc3RzLnB1c2gobWFrZVBvc3QoXHJcblx0XHRcdFx0XHRcdHNvbmcsXHJcblx0XHRcdFx0XHRcdGRhdGEubGlrZXMsXHJcblx0XHRcdFx0XHRcdGRhdGEubnVtX2NvbW1lbnRzLFxyXG5cdFx0XHRcdFx0XHRkYXRhLm51bV9wb3N0cyxcclxuXHRcdFx0XHRcdFx0ZGF0YS5idW1wcyxcclxuXHRcdFx0XHRcdFx0ZGF0YS51c2VyX3Byb2ZpbGVzXHJcblx0XHRcdFx0XHQpKTtcclxuXHRcdFx0XHR9XHRcdCAgICBcdFxyXG5cdFx0XHRcdHRoYXQuc2V0U3RhdGUoe3Bvc3RzOiB0aGF0LnN0YXRlLnBvc3RzLmNvbmNhdChuZXdQb3N0cyl9KTtcclxuXHRcdCAgICBcdHRoYXQubG9hZGluZ19wb3N0c19zZW1hcGhvciA9IGZhbHNlO1xyXG5cdFx0IFx0fSlcclxuXHRcdH1cclxuXHR9XHJcblxyXG4gIHJlbmRlcigpIHtcclxuXHJcbiAgXHR2YXIgZGlzcGxheV90b3AgPSAnMjAwcHgnXHJcbiAgXHRpZiAodGhpcy5wcm9wcy5kYXRhLnVzZXJuYW1lID09IHRoaXMucHJvcHMuZGF0YS51c2VyLnVzZXJuYW1lKVxyXG4gIFx0e1xyXG4gIFx0XHRkaXNwbGF5X3RvcCA9ICc0NTBweCdcclxuICBcdH1cclxuXHQvLzxGb2xsb3dlckluZm8gdXNlciA9IHt0aGlzLnByb3BzLmRhdGEudXNlcn0gZm9sbG93cz17dGhpcy5wcm9wcy5kYXRhLmZvbGxvd3N9IGZvbGxvd2Vlcz17dGhpcy5wcm9wcy5kYXRhLmZvbGxvd2Vlc30gdXNlcm5hbWUgPSB7dGhpcy5wcm9wcy5kYXRhLnVzZXJuYW1lfSBmb2xsb3dfdHlwZSA9IHswfS8+XHJcblx0XHQvLyA8ZGl2IHN0eWxlID0ge3twb3NpdGlvbjoncmVsYXRpdmUnLCB0b3A6JzE1MHB4J319PlxyXG5cdFx0Ly8gXHQ8UHJvZmlsZVBpY3R1cmUgdXNlciA9IHt0aGlzLnByb3BzLmRhdGEudXNlcn0gdXNlcm5hbWUgPSB7dGhpcy5wcm9wcy5kYXRhLnVzZXJuYW1lfS8+XHJcblx0XHQvLyA8L2Rpdj5cclxuXHRcdC8vIDxkaXYgc3R5bGUgPSB7e3Bvc2l0aW9uOidyZWxhdGl2ZScsIHRvcDonMTcwcHgnfX0+XHJcblx0XHQvLyBcdDxGYXZvcml0ZVNvbmdzIHVzZXIgPSB7dGhpcy5wcm9wcy5kYXRhLnVzZXJ9IHVzZXJuYW1lID0ge3RoaXMucHJvcHMuZGF0YS51c2VybmFtZX0vPlxyXG5cdFx0Ly8gPC9kaXY+XHJcblx0cmV0dXJuIChcclxuXHQ8ZGl2IHN0eWxlID0ge3twYWRkaW5nVG9wOic1MHB4J319PlxyXG5cclxuXHRcdDxVc2VySW5mbyB1c2VyID0ge3RoaXMucHJvcHMuZGF0YS51c2VyfSB1c2VybmFtZSA9IHt0aGlzLnByb3BzLmRhdGEudXNlcm5hbWV9IGZvbGxvd3M9e3RoaXMucHJvcHMuZGF0YS5mb2xsb3dzfSBmb2xsb3dlZXM9e3RoaXMucHJvcHMuZGF0YS5mb2xsb3dlZXN9IHVzZXJuYW1lID0ge3RoaXMucHJvcHMuZGF0YS51c2VybmFtZX0gZm9sbG93X3R5cGUgPSB7MH0vPlxyXG5cclxuXHRcdDxici8+XHJcblx0XHRcclxuXHRcdDxkaXYgc3R5bGUgPSB7e3dpZHRoOic3MzVweCcsIG1hcmdpbjonMHB4IGF1dG8nfX0gPlxyXG5cdFx0XHQ8UG9zdEluZm8gcG9zdHMgPSB7dGhpcy5zdGF0ZS5wb3N0c30gLz5cclxuXHRcdDwvZGl2PlxyXG5cdFx0PGRpdiBjbGFzc05hbWUgPSBcInVzZXJfYm9keVwiIHN0eWxlPXt7bGVmdDonNSUnLCB0b3A6JzEwMHB4JywgcG9zaXRpb246J3JlbGF0aXZlJywgd2lkdGg6JzEwMCUnfX0+XHJcblxyXG5cdFx0PC9kaXY+XHJcblxyXG5cclxuXHQ8L2Rpdj5cclxuXHQpfTtcclxufVxyXG5cclxuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHV0aWxzIGZyb20gJy4vdXRpbHMuanMnXHJcbmltcG9ydCB0YWdfdXRpbHMgZnJvbSAnLi90YWdfdXRpbHMuanMnXHJcblxyXG5mdW5jdGlvbiBnZW5lcmF0ZUNvbW1lbnRzKGNvbW1lbnRzLCBjb21tZW50X3ZvdGVzLCBpZCwgc3RhcnRpbmdfY29tbWVudF9sZXZlbCwgcG9zdF9kYXRhLCBpc19nbG9iYWwgPSBmYWxzZSlcclxue1xyXG5cdHZhciBsZXZlbHMgPSBbXTtcclxuXHR2YXIgbGV2ZWxfemVyb19jb21tZW50cyA9IDA7XHJcblx0Zm9yICh2YXIgY29tbWVudCBvZiBjb21tZW50cylcclxuXHR7XHJcblx0XHRpZihjb21tZW50LmNvbW1lbnRfbGV2ZWwgPT0gMClcclxuXHRcdHtcclxuXHRcdFx0KytsZXZlbF96ZXJvX2NvbW1lbnRzO1xyXG5cdFx0fVxyXG5cdFx0aWYgKGNvbW1lbnQuY29tbWVudF9sZXZlbCsxID4gbGV2ZWxzLmxlbmd0aClcclxuXHRcdHtcclxuXHRcdFx0dmFyIGN1cnJlbnRfbGV2ZWxzX2xlbmd0aCA9IGxldmVscy5sZW5ndGg7XHJcblx0XHRcdGZvciAodmFyIGkgPSAwO2kgPCBjb21tZW50LmNvbW1lbnRfbGV2ZWwgKyAxIC1jdXJyZW50X2xldmVsc19sZW5ndGg7aSsrKVxyXG5cdFx0XHR7XHJcblx0XHRcdFx0bGV2ZWxzLnB1c2goW10pO1xyXG5cdFx0XHR9XHJcblx0XHRcdGxldmVsc1tjb21tZW50LmNvbW1lbnRfbGV2ZWxdLnB1c2goY29tbWVudCk7XHJcblx0XHR9XHJcblx0XHRlbHNlXHJcblx0XHR7XHJcblx0XHRcdGxldmVsc1tjb21tZW50LmNvbW1lbnRfbGV2ZWxdLnB1c2goY29tbWVudCk7XHJcblx0XHR9XHJcblx0fVxyXG5cdHZhciBjb21tZW50X21hcCA9IHt9O1xyXG5cdHZhciBjdXJyZW50X2NvbW1lbnRzID0gW107XHJcblx0Zm9yICh2YXIgbGV2ZWwgPSBsZXZlbHMubGVuZ3RoIC0gMTsgbGV2ZWwgPj0gMDsgbGV2ZWwtLSlcclxuXHR7XHJcblx0XHRmb3IgKHZhciBjb21tZW50IG9mIGxldmVsc1tsZXZlbF0pXHJcblx0XHR7XHJcblx0XHRcdHZhciBvcmlnaW5hbF9yZXBsaWVzID0gY29tbWVudC5yZXBsaWVzXHJcblx0XHRcdGlmIChjb21tZW50X21hcFtjb21tZW50LmNvbW1lbnRfaWRdICE9IHVuZGVmaW5lZClcclxuXHRcdFx0e1xyXG5cdFx0XHRcdGZvciAodmFyIGNoaWxkIG9mIGNvbW1lbnRfbWFwW2NvbW1lbnQuY29tbWVudF9pZF0pXHJcblx0XHRcdFx0e1xyXG5cdFx0XHRcdFx0Y29tbWVudC5yZXBsaWVzID0gY29tbWVudC5yZXBsaWVzIC0gY2hpbGQucHJvcHMub3JpZ2luYWxfcmVwbGllcyAtIDE7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHRcdHZhciBjb21tZW50X3ZvdGUgPSAtMTtcclxuXHRcdFx0Zm9yICh2YXIgdm90ZSBvZiBjb21tZW50X3ZvdGVzKVxyXG5cdFx0XHR7XHJcblx0XHRcdFx0aWYgKHZvdGUuY29tbWVudF9pZCA9PSBjb21tZW50LmNvbW1lbnRfaWQpXHJcblx0XHRcdFx0e1xyXG5cdFx0XHRcdFx0Y29tbWVudF92b3RlID0gdm90ZTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdFx0Y3VycmVudF9jb21tZW50cy5wdXNoKDxDb21tZW50IGtleSA9IHtjb21tZW50LmNvbW1lbnRfaWR9IG9yaWdpbmFsX3JlcGxpZXMgPSB7b3JpZ2luYWxfcmVwbGllc30gZGF0YSA9IHtjb21tZW50fSBjaGlsZF9jb21tZW50cyA9IHtjb21tZW50X21hcFtjb21tZW50LmNvbW1lbnRfaWRdfSB2b3RlX3N0YXRlID0ge2NvbW1lbnRfdm90ZX0gcG9zdF9pZCA9IHtjb21tZW50LnBvc3RfaWR9IGlzX2dsb2JhbCA9IHtpc19nbG9iYWx9IHBvc3RfZGF0YSA9IHtwb3N0X2RhdGF9Lz4pXHJcblx0XHRcdC8vY3VycmVudF9jb21tZW50cy5wdXNoKDxkaXY+UExFQVNFPC9kaXY+KVxyXG5cdFx0fVxyXG5cdFx0aWYgKGxldmVsID09IHN0YXJ0aW5nX2NvbW1lbnRfbGV2ZWwpXHJcblx0XHR7XHJcblx0XHRcdGJyZWFrO1xyXG5cdFx0fVxyXG5cdFx0Ly9jb21tZW50IGhlcmUgaXMgZGlmZmVyZW50IGZyb20gYWJvdmUsIGl0cyBhIENvbW1lbnQgY29tcG9uZW50IHJhdGhlciB0aGFuIGRhdGFcclxuXHJcblx0XHRmb3IgKHZhciBjb21tZW50IG9mIGN1cnJlbnRfY29tbWVudHMpXHJcblx0XHR7XHJcblx0XHRcdHZhciBwYXJlbnRfaWQgPSBjb21tZW50LnByb3BzLmRhdGEucGFyZW50X2NvbW1lbnRfaWQ7XHJcblx0XHRcdGlmIChjb21tZW50X21hcFtwYXJlbnRfaWRdID09IHVuZGVmaW5lZClcclxuXHRcdFx0e1xyXG5cdFx0XHRcdGNvbW1lbnRfbWFwW3BhcmVudF9pZF0gPSBbY29tbWVudF07XHJcblx0XHRcdH1cclxuXHRcdFx0ZWxzZVxyXG5cdFx0XHR7XHJcblx0XHRcdFx0Y29tbWVudF9tYXBbcGFyZW50X2lkXS5wdXNoKGNvbW1lbnQpO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0XHRjdXJyZW50X2NvbW1lbnRzID0gW107XHJcblx0fVx0XHJcblxyXG5cdHJldHVybiBbY3VycmVudF9jb21tZW50cywgbGV2ZWxfemVyb19jb21tZW50c107XHJcblxyXG59XHJcblxyXG4vLyBjbGFzcyBOZXdDb21tZW50IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50XHJcbi8vIHtcclxuLy8gXHRjb25zdHJ1Y3Rvcihwcm9wcylcclxuLy8gXHR7XHJcbi8vIFx0XHRzdXBlcihwcm9wcylcclxuLy8gXHRcdHRoaXMubmV3Q29tbWVudFRleHRSZWYgPSBSZWFjdC5jcmVhdGVSZWYoKTtcclxuLy8gXHR9XHJcblxyXG4vLyBcdGNsb3NlTmV3Q29tbWVudCgpXHJcbi8vIFx0e1xyXG4vLyBcdFx0Y29uc29sZS5sb2coXCJDTE9TRSBDT01NRU5UXCIpXHJcbi8vIFx0XHR0aGlzLm5ld19jb21tZW50ID0gdW5kZWZpbmVkXHJcbi8vIFx0XHR0aGlzLmZvcmNlVXBkYXRlKCk7XHRcdFxyXG4vLyBcdH1cclxuXHJcbi8vIFx0c3VibWl0TmV3Q29tbWVudCgpXHJcbi8vIFx0e1xyXG4vLyBcdCAgICBmZXRjaChcIi9jb21tZW50XCIsIHtcclxuLy8gXHQgICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcbi8vIFx0ICAgICAgICBoZWFkZXJzOiB7XHJcbi8vIFx0ICAgICAgICBcdEFjY2VwdDogJ2FwcGxpY2F0aW9uL2pzb24nLFxyXG4vLyBcdCAgICAgICAgXHQnQXV0aG9yaXphdGlvbic6ICdCYXNpYycsXHJcbi8vIFx0ICAgICAgICBcdCdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXHJcbi8vIFx0ICAgICAgICB9LFxyXG5cclxuLy8gXHQgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtpZDogdGhpcy5wcm9wcy5wb3N0X2lkLCBcclxuLy8gXHQgICAgICAgIFx0XHRcdFx0XHQgIHRleHQ6IHRoaXMubmV3Q29tbWVudFRleHRSZWYuY3VycmVudC52YWx1ZSwgXHJcbi8vIFx0ICAgICAgICBcdFx0XHRcdFx0ICBjb21tZW50X2xldmVsOiB0aGlzLnByb3BzLmNvbW1lbnRfbGV2ZWwgKyAxLCBcclxuLy8gXHQgICAgICAgIFx0XHRcdFx0XHQgIHBhcmVudF9jb21tZW50X2lkOiB0aGlzLnByb3BzLmNvbW1lbnRfaWR9KSx9KVxyXG4vLyBcdCAgICB0aGlzLmNsb3NlTmV3Q29tbWVudCgpO1xyXG4vLyBcdH1cclxuXHJcbi8vIFx0cmVuZGVyKClcclxuLy8gXHR7XHJcbi8vIFx0XHRyZXR1cm4gKFxyXG4vLyBcdFx0XHQ8ZGl2PlxyXG4vLyBcdFx0XHRcdDx0ZXh0YXJlYSByZWYgPSB7dGhpcy5uZXdDb21tZW50VGV4dFJlZn0gY2xhc3MgPSAnY29tbWVudF90ZXh0JyBpZCA9IHt0aGlzLnByb3BzLmNvbW1lbnRfaWR9IG5hbWU9J2NvbnRlbnQnIHJvd3M9JzEwJyBjb2xzPSc5MCcgc3R5bGU9e3t3aWR0aDonODAlJyxoZWlnaHQ6JzUwcHgnLHpJbmRleDonMTAwJ319PjwvdGV4dGFyZWE+XHJcbi8vIFx0XHRcdFx0PGJ1dHRvbiBvbkNsaWNrID0ge3RoaXMuc3VibWl0TmV3Q29tbWVudC5iaW5kKHRoaXMpfSBzdHlsZT17e2hlaWdodDonMzBweCcsYm90dG9tOiczMHB4Jyxwb3NpdGlvbjoncmVsYXRpdmUnfX0gdHlwZT0nYnV0dG9uJyBjbGFzcz0nc3VibWl0X25ld19jb21tZW50JyBpZCA9IHt0aGlzLnByb3BzLmNvbW1lbnRfaWR9PnN1Ym1pdDwvYnV0dG9uPlxyXG4vLyBcdFx0XHRcdDxidXR0b24gb25DbGljayA9IHt0aGlzLmNsb3NlTmV3Q29tbWVudC5iaW5kKHRoaXMpfSBzdHlsZT17e2JvdHRvbTonMHB4Jyxwb3NpdGlvbjoncmVsYXRpdmUnLGhlaWdodDonMzBweCd9fSB0eXBlPSdidXR0b24nIGNsYXNzPSdjbG9zZV9uZXdfY29tbWVudCcgaWQgPSB7dGhpcy5wcm9wcy5jb21tZW50X2lkfT54PC9idXR0b24+XHJcbi8vIFx0XHRcdDwvZGl2PlxyXG4vLyBcdFx0KVxyXG4vLyBcdH1cclxuXHJcbi8vIH1cclxuXHJcbmNsYXNzIENvbW1lbnQgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnRcclxue1xyXG5cdGNvbnN0cnVjdG9yKHByb3BzKVxyXG5cdHtcclxuXHRcdHN1cGVyKHByb3BzKTtcclxuXHRcdC8vdGhpcy5jaGlsZF9jb21tZW50cyA9IFs8Q29tbWVudCBkYXRhID0ge3Byb3BzLmRhdGF9IGNoaWxkX2NvbW1lbnRzID0ge3VuZGVmaW5lZH0gdm90ZV9zdGF0ZSA9IHt1bmRlZmluZWR9IHBvc3RfaWQgPSB7cHJvcHMucG9zdF9pZH0vPl07XHJcblx0XHR0aGlzLmlkID0gdGhpcy5wcm9wcy5kYXRhLmNvbW1lbnRfaWQ7XHJcblx0XHR0aGlzLnJlcGxpZXNfYnV0dG9uID0gdW5kZWZpbmVkO1xyXG5cdFx0dGhpcy5jaGlsZF9jb21tZW50cyA9IFtdXHJcblxyXG5cdFx0aWYgKHByb3BzLmNoaWxkX2NvbW1lbnRzICE9IHVuZGVmaW5lZClcclxuXHRcdHtcclxuXHRcdFx0Zm9yICh2YXIgY29tbWVudCBvZiBwcm9wcy5jaGlsZF9jb21tZW50cylcclxuXHRcdFx0e1xyXG5cdFx0XHRcdHRoaXMuY2hpbGRfY29tbWVudHMucHVzaChjb21tZW50KVxyXG5cdFx0XHRcdC8vdGhpcy5jaGlsZF9jb21tZW50cy5wdXNoKDxkaXY+SEVZPC9kaXY+KVxyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0XHRpZiAocHJvcHMuZGF0YS5yZXBsaWVzID4gMClcclxuXHRcdHtcclxuXHRcdFx0Ly8sIGNvbG9yOid3aGl0ZScsIGJvcmRlclJhZGl1czonN3B4JywgYmFja2dyb3VuZENvbG9yOicjMTg4Mjc1JywgYm9yZGVyOicwJ1xyXG5cdFx0XHR2YXIgbGVmdF9vZmZzZXQgPSBTdHJpbmcoKHByb3BzLmRhdGEuY29tbWVudF9sZXZlbCkgKiA1IC0gMSkgKyAnJSdcclxuXHRcdFx0dGhpcy5yZXBsaWVzX2J1dHRvbiA9IDxidXR0b24gb25DbGljayA9IHt0aGlzLnNob3dSZXBsaWVzLmJpbmQodGhpcyl9IGNsYXNzTmFtZSA9ICdzaG93X3JlcGxpZXMnIHN0eWxlID0ge3twb3NpdGlvbjoncmVsYXRpdmUnLCBsZWZ0OmxlZnRfb2Zmc2V0LCBmb250U2l6ZTonMTJweCd9fSBpZCA9IHtwcm9wcy5kYXRhLmNvbW1lbnRfaWR9ID4gc2hvdyB7cHJvcHMuZGF0YS5yZXBsaWVzfSByZXBsaWVzIDwvYnV0dG9uPjtcclxuICAgICAgXHR9XHJcbiAgICAgIFx0dGhpcy51cHZvdGVSZWYgPSBSZWFjdC5jcmVhdGVSZWYoKTtcclxuICAgICAgXHR0aGlzLmRvd252b3RlUmVmID0gUmVhY3QuY3JlYXRlUmVmKCk7XHJcbiAgICAgIFx0dGhpcy5zY29yZVJlZiA9IFJlYWN0LmNyZWF0ZVJlZigpO1xyXG5cdFx0XHJcblx0XHR0aGlzLnZvdGVzX3Njb3JlID0gdGhpcy5wcm9wcy5kYXRhLnVwdm90ZXMgLSB0aGlzLnByb3BzLmRhdGEuZG93bnZvdGVzO1xyXG5cclxuXHRcdHRoaXMudm90ZV9zdGF0ZSA9IC0xO1xyXG5cdFx0aWYgKHRoaXMucHJvcHMudm90ZV9zdGF0ZSAhPSB1bmRlZmluZWQpXHJcblx0XHR7XHJcblx0XHRcdHRoaXMudm90ZV9zdGF0ZSA9IHRoaXMucHJvcHMudm90ZV9zdGF0ZS52b3RlX3N0YXRlXHJcblx0XHR9XHJcblx0XHR0aGlzLm5ld19jb21tZW50ID0gdW5kZWZpbmVkO1xyXG5cdFx0dGhpcy5jb250ZW50UmVmID0gUmVhY3QuY3JlYXRlUmVmKCk7XHJcblxyXG5cdFx0dGhpcy51cF9pbWFnZSA9IFwiL3NtYWxsX3VwLnBuZ1wiXHJcblx0XHR0aGlzLmRvd25faW1hZ2UgPSBcIi9zbWFsbF9kb3duLnBuZ1wiXHJcblxyXG5cdFx0dGhpcy50YWdGbGFnID0gZmFsc2VcclxuXHRcdHRoaXMuY3VycmVudFRhZyA9IFwiXCJcclxuXHRcdHRoaXMudGFnTGlzdCA9IFtdXHJcblx0XHR0aGlzLmFydGlzdHMgPSBbXVxyXG5cdFx0dGhpcy51c2VycyA9IFtdXHJcblx0XHR0aGlzLmFydGlzdFNlYXJjaCA9IGZhbHNlXHJcblx0XHR0aGlzLmN1cnJlbnRBcnRpc3QgPSBcIlwiXHJcblx0XHR0aGlzLnBvdGVudGlhbF90YWdzID0gW11cclxuXHRcdHRoaXMuc29uZ3NfYW5kX2FsYnVtcyA9IFtdXHJcblx0XHR0aGlzLmFydGlzdEZsYWcgPSBmYWxzZVxyXG5cdFx0dGhpcy5sYXN0Q29udGVudFNpemUgPSAwXHJcblx0XHR0aGlzLnRhZ2dlZCA9IGZhbHNlXHJcblx0fVxyXG5cclxuXHRhZGRDaGlsZChjb21tZW50KVxyXG5cdHtcclxuXHRcdHRoaXMuY2hpbGRfY29tbWVudHMucHVzaCg8Q29tbWVudCBrZXk9e2NvbW1lbnQuZGF0YS5jb21tZW50X2lkfSBkYXRhID0ge2NvbW1lbnQuZGF0YX0gcG9zdF9kYXRhID0ge3RoaXMucHJvcHMucG9zdF9kYXRhfS8+KVxyXG5cdH1cclxuXHJcblx0dXB2b3RlQ2xpY2tlZCgpXHJcblx0e1xyXG5cdFx0aWYgKCF1dGlscy5jaGVja0xvZ2dlZEluKCkpXHJcblx0XHR7XHJcblx0XHRcdGFsZXJ0KFwiTVVTVCBCRSBMT0dHRUQgSU5cIilcclxuXHRcdFx0cmV0dXJuO1xyXG5cdFx0fVxyXG5cclxuICAgIFx0aWYgKHRoaXMudm90ZV9zdGF0ZSA9PSAxKVxyXG4gICAgXHR7XHJcbiAgICBcdFx0Ly8gdGhpcy51cHZvdGVSZWYuY3VycmVudC5zdHlsZS5jb2xvciA9ICdibGFjaydcclxuICAgIFx0XHQvLyB0aGlzLmRvd252b3RlUmVmLmN1cnJlbnQuc3R5bGUuY29sb3IgPSAnYmxhY2snXHJcbiAgICBcdFx0dGhpcy51cF9pbWFnZSA9IFwiL3NtYWxsX3VwLnBuZ1wiXHJcbiAgICBcdFx0dGhpcy52b3RlX3N0YXRlID0gLTFcclxuICAgIFx0XHR0aGlzLnZvdGVzX3Njb3JlID0gdGhpcy52b3Rlc19zY29yZSAtIDE7XHJcbiAgICBcdH1cclxuICAgIFx0ZWxzZVxyXG4gICAgXHR7XHJcbiAgICBcdFx0Ly8gdGhpcy51cHZvdGVSZWYuY3VycmVudC5zdHlsZS5jb2xvciA9ICdibHVlJ1xyXG4gICAgXHRcdC8vIHRoaXMuZG93bnZvdGVSZWYuY3VycmVudC5zdHlsZS5jb2xvciA9ICdibGFjaydcclxuICAgIFx0XHRcclxuICAgICAgIFx0XHRpZiAodGhpcy52b3RlX3N0YXRlID09IDApXHJcbiAgICBcdFx0e1xyXG4gICAgXHRcdFx0dGhpcy52b3Rlc19zY29yZSA9IHRoaXMudm90ZXNfc2NvcmUgKyAyO1xyXG4gICAgXHRcdH1cclxuICAgIFx0XHRlbHNlXHJcbiAgICBcdFx0e1xyXG4gICAgXHRcdFx0dGhpcy52b3Rlc19zY29yZSA9IHRoaXMudm90ZXNfc2NvcmUgKyAxO1xyXG4gICAgXHRcdH1cclxuICAgIFx0XHR0aGlzLnVwX2ltYWdlID0gXCIvc21hbGxfdXBfb24ucG5nXCJcclxuICAgIFx0XHR0aGlzLmRvd25faW1hZ2UgPSBcIi9zbWFsbF9kb3duLnBuZ1wiXHJcbiAgICBcdFx0dGhpcy52b3RlX3N0YXRlID0gMTtcclxuICAgIFx0fVxyXG5cclxuICAgIFx0dGhpcy5mb3JjZVVwZGF0ZSgpO1xyXG4gICAgXHRcclxuXHJcblx0ICAgIGZldGNoKFwiL3Vwdm90ZVwiLCB7XHJcblx0ICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxyXG5cdCAgICAgICAgaGVhZGVyczoge1xyXG5cdCAgICAgICAgXHRBY2NlcHQ6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuXHQgICAgICAgIFx0J0F1dGhvcml6YXRpb24nOiAnQmFzaWMnLFxyXG5cdCAgICAgICAgXHQnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxyXG5cdCAgICAgICAgfSxcclxuXHQgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtpZDogdGhpcy5wcm9wcy5kYXRhLmNvbW1lbnRfaWQsfSl9KVxyXG5cdCAgICAudGhlbihmdW5jdGlvbihyZXNwb25zZSkgeyByZXR1cm4gcmVzcG9uc2UuanNvbigpO30pXHJcblx0ICAgIC50aGVuKGZ1bmN0aW9uIChkYXRhKSB7ICAgIFx0XHJcblx0IFx0fSlcdFxyXG5cdH1cclxuXHJcblx0ZG93bnZvdGVDbGlja2VkKClcclxuXHR7XHJcblx0XHRpZiAoIXV0aWxzLmNoZWNrTG9nZ2VkSW4oKSlcclxuXHRcdHtcclxuXHRcdFx0YWxlcnQoXCJNVVNUIEJFIExPR0dFRCBJTlwiKVxyXG5cdFx0XHRyZXR1cm47XHJcblx0XHR9XHJcblxyXG5cdFx0aWYgKHRoaXMudm90ZV9zdGF0ZSA9PSAwKVxyXG4gICAgXHR7XHJcbiAgICBcdFx0Ly8gdGhpcy51cHZvdGVSZWYuY3VycmVudC5zdHlsZS5jb2xvciA9ICdibGFjaydcclxuICAgIFx0XHQvLyB0aGlzLmRvd252b3RlUmVmLmN1cnJlbnQuc3R5bGUuY29sb3IgPSAnYmxhY2snXHJcblx0XHRcdHRoaXMuZG93bl9pbWFnZSA9IFwiL3NtYWxsX2Rvd24ucG5nXCJcclxuICAgIFx0XHR0aGlzLnZvdGVfc3RhdGUgPSAtMVxyXG4gICAgXHRcdHRoaXMudm90ZXNfc2NvcmUgPSB0aGlzLnZvdGVzX3Njb3JlICsgMTtcclxuICAgIFx0fVx0XHRcclxuICAgIFx0ZWxzZSBpZiAodGhpcy52b3RlX3N0YXRlID09IDEgfHwgdGhpcy52b3RlX3N0YXRlID09IC0xKVxyXG4gICAgXHR7XHJcbiAgICBcdFx0Ly8gdGhpcy51cHZvdGVSZWYuY3VycmVudC5zdHlsZS5jb2xvciA9ICdibGFjaydcclxuICAgIFx0XHQvLyB0aGlzLmRvd252b3RlUmVmLmN1cnJlbnQuc3R5bGUuY29sb3IgPSAncmVkJ1xyXG4gICAgXHRcdFxyXG4gICAgXHRcdGlmICh0aGlzLnZvdGVfc3RhdGUgPT0gMSlcclxuICAgIFx0XHR7XHJcbiAgICBcdFx0XHR0aGlzLnZvdGVzX3Njb3JlID0gdGhpcy52b3Rlc19zY29yZSAtIDI7XHJcbiAgICBcdFx0fVxyXG4gICAgXHRcdGVsc2VcclxuICAgIFx0XHR7XHJcbiAgICBcdFx0XHR0aGlzLnZvdGVzX3Njb3JlID0gdGhpcy52b3Rlc19zY29yZSAtIDE7XHJcbiAgICBcdFx0fVxyXG4gICAgICAgXHRcdHRoaXMuZG93bl9pbWFnZSA9IFwiL3NtYWxsX2Rvd25fb24ucG5nXCJcclxuICAgIFx0XHR0aGlzLnVwX2ltYWdlID0gXCIvc21hbGxfdXAucG5nXCJcclxuICAgIFx0XHR0aGlzLnZvdGVfc3RhdGUgPSAwO1xyXG4gICAgXHR9XHJcbiAgICBcdFxyXG5cclxuICAgIFx0dGhpcy5mb3JjZVVwZGF0ZSgpO1xyXG5cclxuXHQgICAgZmV0Y2goXCIvZG93bnZvdGVcIiwge1xyXG5cdCAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcclxuXHQgICAgICAgIGhlYWRlcnM6IHtcclxuXHQgICAgICAgIFx0QWNjZXB0OiAnYXBwbGljYXRpb24vanNvbicsXHJcblx0ICAgICAgICBcdCdBdXRob3JpemF0aW9uJzogJ0Jhc2ljJyxcclxuXHQgICAgICAgIFx0J0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuXHQgICAgICAgIH0sXHJcblx0ICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7aWQ6IHRoaXMucHJvcHMuZGF0YS5jb21tZW50X2lkLH0pfSlcclxuXHQgICAgLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHsgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTt9KVxyXG5cdCAgICAudGhlbihmdW5jdGlvbiAoZGF0YSkgeyAgICBcdFxyXG5cdCBcdH0pXHRcclxuXHR9XHJcblxyXG5cdG9wZW5OZXdDb21tZW50KClcclxuXHR7XHJcblx0XHRpZiAodGhpcy5wcm9wcy5pc19nbG9iYWwpXHJcblx0XHR7XHJcblx0XHRcdHdpbmRvdy5sb2NhdGlvbiA9IFwiL3VzZXIvXCIgKyB0aGlzLnByb3BzLmRhdGEudXNlcl9pZCArIFwiL1wiICsgdGhpcy5wcm9wcy5kYXRhLnBvc3RfaWRcclxuXHRcdH1cclxuXHRcdGVsc2VcclxuXHRcdHtcclxuXHRcdFx0aWYgKCF1dGlscy5jaGVja0xvZ2dlZEluKCkpXHJcblx0XHRcdHtcclxuXHRcdFx0XHRhbGVydChcIk1VU1QgQkUgTE9HR0VEIElOXCIpXHJcblx0XHRcdFx0cmV0dXJuO1xyXG5cdFx0XHR9XHJcblx0XHRcdHRoaXMubmV3X2NvbW1lbnQgPSA8ZGl2PlxyXG5cdFx0XHRcdFx0PHRleHRhcmVhIG9uQ2hhbmdlID0ge3RoaXMuY29udGVudElucHV0LmJpbmQodGhpcyl9IHJlZiA9IHt0aGlzLmNvbnRlbnRSZWZ9IGNsYXNzTmFtZSA9ICdjb21tZW50X3RleHQnIGlkID0ge3RoaXMucHJvcHMuZGF0YS5jb21tZW50X2lkfSBuYW1lPSdjb250ZW50JyByb3dzPScxMCcgY29scz0nOTAnIHN0eWxlPXt7d2lkdGg6JzEwMCUnLGhlaWdodDonNTBweCcsYm9yZGVyUmFkaXVzOic3cHgnfX0+PC90ZXh0YXJlYT5cclxuXHRcdFx0XHRcdDxici8+XHJcblx0XHRcdFx0XHQ8YnV0dG9uIG9uQ2xpY2sgPSB7dGhpcy5zdWJtaXROZXdDb21tZW50LmJpbmQodGhpcyl9IHN0eWxlPXt7cG9zaXRpb246J3JlbGF0aXZlJywgd2lkdGg6JzUwJScsIGhlaWdodDonMjhweCd9fSB0eXBlPSdidXR0b24nIGNsYXNzTmFtZT0nc3VibWl0X25ld19jb21tZW50IGdyYXlCdXR0b24nIGlkID0ge3RoaXMucHJvcHMuZGF0YS5jb21tZW50X2lkfT5zdWJtaXQ8L2J1dHRvbj5cclxuXHRcdFx0XHRcdDxidXR0b24gb25DbGljayA9IHt0aGlzLmNsb3NlTmV3Q29tbWVudC5iaW5kKHRoaXMpfSBzdHlsZT17e3Bvc2l0aW9uOidyZWxhdGl2ZScsIHdpZHRoOic1MCUnLCBoZWlnaHQ6JzI4cHgnfX0gdHlwZT0nYnV0dG9uJyBjbGFzc05hbWU9J2Nsb3NlX25ld19jb21tZW50IGdyYXlCdXR0b24nIGlkID0ge3RoaXMucHJvcHMuZGF0YS5jb21tZW50X2lkfT5jbG9zZTwvYnV0dG9uPlxyXG5cdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHR0aGlzLmZvcmNlVXBkYXRlKCk7XHJcblx0XHR9XHJcblx0fVxyXG5cdGNsb3NlTmV3Q29tbWVudCgpXHJcblx0e1xyXG5cdFx0dGhpcy5uZXdfY29tbWVudCA9IHVuZGVmaW5lZFxyXG5cdFx0dGhpcy50YWdGbGFnID0gZmFsc2VcclxuXHRcdHRoaXMuZm9yY2VVcGRhdGUoKTtcdFx0XHJcblx0fVxyXG5cclxuXHRzdWJtaXROZXdDb21tZW50KClcclxuXHR7XHJcblx0XHR2YXIgc3VibWl0X3RleHQgPSB0aGlzLmNvbnRlbnRSZWYuY3VycmVudC52YWx1ZTtcclxuXHRcdHZhciB0aGF0ID0gdGhpc1xyXG5cdCAgICBmZXRjaChcIi9jb21tZW50XCIsIHtcclxuXHQgICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcblx0ICAgICAgICBoZWFkZXJzOiB7XHJcblx0ICAgICAgICBcdEFjY2VwdDogJ2FwcGxpY2F0aW9uL2pzb24nLFxyXG5cdCAgICAgICAgXHQnQXV0aG9yaXphdGlvbic6ICdCYXNpYycsXHJcblx0ICAgICAgICBcdCdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXHJcblx0ICAgICAgICB9LFxyXG5cclxuXHQgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtpZDogdGhpcy5wcm9wcy5wb3N0X2lkLCBcclxuXHQgICAgICAgIFx0XHRcdFx0XHQgIHRleHQ6IHRoaXMuY29udGVudFJlZi5jdXJyZW50LnZhbHVlLCBcclxuXHQgICAgICAgIFx0XHRcdFx0XHQgIGNvbW1lbnRfbGV2ZWw6IHRoaXMucHJvcHMuZGF0YS5jb21tZW50X2xldmVsICsgMSwgXHJcblx0ICAgICAgICBcdFx0XHRcdFx0ICBwYXJlbnRfY29tbWVudF9pZDogdGhpcy5wcm9wcy5kYXRhLmNvbW1lbnRfaWQsXHJcblx0ICAgICAgICBcdFx0XHRcdFx0ICBwb3N0X3VzZXJuYW1lOiB0aGlzLnByb3BzLnBvc3RfZGF0YS51c2VybmFtZSxcclxuXHQgICAgICAgIFx0XHRcdFx0XHQgIHBvc3RfaWQ6IHRoaXMucHJvcHMucG9zdF9kYXRhLnBvc3RfaWQsXHJcblx0ICAgICAgICBcdFx0XHRcdFx0ICBwb3N0X3RpdGxlOnRoaXMucHJvcHMucG9zdF9kYXRhLnRpdGxlLFxyXG5cdCAgICAgICAgXHRcdFx0XHRcdCAgcG90ZW50aWFsVGFnczogdGhpcy5wb3RlbnRpYWxfdGFncyxcclxuXHQgICAgXHRcdFx0XHRcdFx0ICB1c2VybmFtZTogdGhpcy5wcm9wcy5kYXRhLnVzZXJfaWR9KX0pXHJcblx0ICAgIC50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7IHJldHVybiByZXNwb25zZS5qc29uKCk7fSlcclxuXHQgICAgLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsgICAgXHRcclxuXHRcdCAgICB2YXIgbmV3X2NvbW1lbnRfZGF0YSA9IHtcclxuXHRcdCAgICBcdHBvc3RfaWQ6IGRhdGEuY29tbWVudF9pZCxcclxuXHRcdCAgICBcdHVzZXJfaWQ6IGRhdGEudXNlcm5hbWUsXHJcblx0XHQgICAgXHR0ZXh0OiBzdWJtaXRfdGV4dCwgXHJcblx0XHQgICAgXHR0aW1lc3RhbXA6IHBhcnNlSW50KGRhdGEudGltZXN0YW1wKSxcclxuXHRcdCAgICBcdHVwdm90ZXM6IDAsXHJcblx0XHQgICAgXHRkb3dudm90ZXM6IDAsXHJcblx0XHQgICAgXHRyZXBsaWVzOiAwLFxyXG5cdFx0ICAgIFx0Y29tbWVudF9pZDogZGF0YS5jb21tZW50X2lkLFxyXG5cdFx0ICAgIFx0cGFyZW50X2NvbW1lbnRfaWQ6IHRoYXQucHJvcHMuZGF0YS5jb21tZW50X2lkLFxyXG5cdFx0ICAgIFx0Y29tbWVudF9sZXZlbDogdGhhdC5wcm9wcy5kYXRhLmNvbW1lbnRfbGV2ZWwgKyAxLFxyXG5cdFx0ICAgIH1cclxuXHRcdCAgICB0aGF0LmNoaWxkX2NvbW1lbnRzLnNwbGljZSgwLCAwLDxDb21tZW50IGtleSA9IHtkYXRhLmNvbW1lbnRfaWR9IG9yaWdpbmFsX3JlcGxpZXMgPSB7MH0gZGF0YSA9IHtuZXdfY29tbWVudF9kYXRhfSBjaGlsZF9jb21tZW50cyA9IHtbXX0gdm90ZV9zdGF0ZSA9IHstMX0gcG9zdF9pZCA9IHtkYXRhLmNvbW1lbnRfaWR9IGlzX2dsb2JhbCA9IHt0aGF0LnByb3BzLmdsb2JhbF9wb3N0ICE9IHVuZGVmaW5lZH0gcG9zdF9kYXRhID0ge3RoYXQucHJvcHMucG9zdF9kYXRhfS8+KVxyXG5cdFx0ICAgIHRoYXQuZm9yY2VVcGRhdGUoKVxyXG5cdCAgICB9KVx0ICAgIFxyXG5cdCAgICB0aGlzLnRhZ0ZsYWcgPSBmYWxzZVxyXG5cdCAgICB0aGlzLmNsb3NlTmV3Q29tbWVudCgpO1xyXG5cclxuXHR9XHJcblxyXG5cdHNob3dSZXBsaWVzKClcclxuXHR7XHJcblx0XHR2YXIgdGhhdD0gdGhpcztcclxuXHRcdHRoaXMucmVwbGllc19idXR0b24gPSB1bmRlZmluZWQ7XHJcblx0XHR0aGlzLmZvcmNlVXBkYXRlKClcclxuXHQgICAgZmV0Y2goXCIvc2hvd19yZXBsaWVzXCIsIHtcclxuXHQgICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcblx0ICAgICAgICBoZWFkZXJzOiB7XHJcblx0ICAgICAgICBcdCdBY2NlcHQnOiAnYXBwbGljYXRpb24vanNvbicsXHJcblx0ICAgICAgICBcdCdBdXRob3JpemF0aW9uJzogJ0Jhc2ljJyxcclxuXHQgICAgICAgIFx0J0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuXHQgICAgICAgIH0sXHJcblx0ICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7aWQ6IHRoaXMucHJvcHMuZGF0YS5jb21tZW50X2lkLCBvZmZzZXQ6IHRoaXMuY2hpbGRfY29tbWVudHMubGVuZ3RofSl9KVxyXG5cdCAgICAudGhlbihmdW5jdGlvbihyZXNwb25zZSkgeyByZXR1cm4gcmVzcG9uc2UuanNvbigpO30pXHJcblx0ICAgIC50aGVuKGZ1bmN0aW9uIChkYXRhKSB7ICAgIFx0XHJcblxyXG5cdCAgICBcdHZhciBjaGlsZF9jb21tZW50cyA9IGdlbmVyYXRlQ29tbWVudHMoZGF0YS5jb21tZW50cywgZGF0YS5jb21tZW50X3ZvdGVzLCB0aGF0LnByb3BzLnBvc3RfaWQsIHRoYXQucHJvcHMuZGF0YS5jb21tZW50X2xldmVsICsgMSwgdGhhdC5wcm9wcy5wb3N0X2RhdGEsIHRoYXQucHJvcHMuZ2xvYmFsX3Bvc3QgIT0gdW5kZWZpbmVkKVswXVxyXG5cdCAgICBcdC8vZG9uJ3Qga25vdyB3aHkgdGhpcyBkb2Vzbid0IHdvcmtcclxuXHQgICAgXHRmb3IgKHZhciBjb21tZW50IG9mIGNoaWxkX2NvbW1lbnRzKVxyXG5cdCAgICBcdHtcclxuXHQgICAgXHRcdHRoYXQuY2hpbGRfY29tbWVudHMucHVzaChjb21tZW50KTtcclxuXHQgICAgXHR9XHJcblx0ICAgIFx0Ly90aGF0Lm5ld19jaGlsZF9jb21tZW50cyA9IGNoaWxkX2NvbW1lbnRzXHJcblx0ICAgIFx0dGhhdC5mb3JjZVVwZGF0ZSgpXHJcblx0IFx0fSlcclxuICAgIH1cclxuXHJcblx0Y29udGVudElucHV0KClcclxuXHR7XHJcblx0XHR2YXIgaW5wdXQgPSBldmVudC50YXJnZXQudmFsdWU7XHJcblx0XHQvL3VwZGF0ZSBhbmQgcHJ1bmUgdGFncyBsaXN0IFxyXG5cdFx0dGFnX3V0aWxzLmdldFRhZ3ModGhpcylcclxuXHJcbiAgICBcdHRoaXMubGFzdENvbnRlbnRTaXplID0gdGhpcy5jb250ZW50UmVmLmN1cnJlbnQudmFsdWUubGVuZ3RoXHJcblx0ICAgXHR0aGlzLmZvcmNlVXBkYXRlKCk7XHJcblx0fVxyXG5cclxuXHRzZWxlY3RUYWcoZSlcclxuXHR7XHJcblx0XHR0YWdfdXRpbHMudGFnQ2xpY2tlZCh0aGlzLCBlKVxyXG5cdH1cclxuXHJcbiAgICBhZGRDb21tZW50Q2hpbGQoY29tbWVudClcclxuICAgIHtcclxuICAgIFx0dGhpcy5jaGlsZF9jb21tZW50cy5wdXNoKGNvbW1lbnQpO1xyXG4gICAgXHR0aGlzLmZvcmNlVXBkYXRlKClcclxuICAgIH1cclxuXHRyZW5kZXIoKVxyXG5cdHtcclxuXHRcdHZhciBjb21tZW50X2xldmVsID0gXCJjb21tZW50X2xldmVsX1wiICsgU3RyaW5nKHRoaXMucHJvcHMuZGF0YS5jb21tZW50X2xldmVsKTtcclxuXHRcdHZhciBjb21tZW50X2lkID0gU3RyaW5nKHRoaXMucHJvcHMuZGF0YS5jb21tZW50X2lkKTtcclxuXHRcdHZhciByZXBsaWVzID0gMDtcclxuXHRcdHZhciBsZWZ0X29mZnNldCA9IFN0cmluZyh0aGlzLnByb3BzLmRhdGEuY29tbWVudF9sZXZlbCAqIDUwKSArICdweCdcclxuXHJcblx0XHR2YXIgbGVmdF9zcGFjZXMgPSBbXVxyXG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLnByb3BzLmRhdGEuY29tbWVudF9sZXZlbDsgKytpKVxyXG5cdFx0e1xyXG5cdFx0XHR2YXIgbGVmdF9zcGFjZSA9ICczcHgnXHJcblxyXG5cdFx0XHRsZWZ0X3NwYWNlcy5wdXNoKDxkaXYgc3R5bGUgPSB7e2JvcmRlckxlZnQ6IFwiM3B4IHNvbGlkICNDNUM1QzVcIixwb3NpdGlvbjoncmVsYXRpdmUnLCB3aWR0aDonNDRweCcsIGxlZnQ6bGVmdF9zcGFjZX19PjwvZGl2PikvLzxzcGFuIHN0eWxlID0ge3tib3JkZXJMZWZ0OiBcIjNweCBzb2xpZCBibGFja1wiLCB3aWR0aDonNTBweCcsIGhlaWdodDonMTAwJSd9fT4gPC9zcGFuPik7XHJcblx0XHR9XHJcblx0XHQvL3ZhciBsZWZ0X3NwYWNpbmcgPSA8ZGl2IHN0eWxlID0ge3tib3JkZXJMZWZ0OiBcIjNweCBzb2xpZCBibGFja1wiLHBvc2l0aW9uOidyZWxhdGl2ZScsIHdpZHRoOmxlZnRfb2Zmc2V0fX0+IHtsZWZ0X3NwYWNlc30gPC9kaXY+O1xyXG5cclxuXHRcdHZhciB1c2VyX2lkID0gdGhpcy5wcm9wcy5kYXRhLnVzZXJfaWQ7XHJcblxyXG5cdFx0dmFyIGRhdGUgPSBuZXcgRGF0ZSh0aGlzLnByb3BzLmRhdGEudGltZXN0YW1wKTtcclxuXHRcdHZhciBtaW51dGVzID0gZGF0ZS5nZXRNaW51dGVzKCk7XHJcblxyXG5cdFx0aWYgKFN0cmluZyhtaW51dGVzKS5sZW5ndGggPT0gMSlcclxuXHRcdHtcclxuXHRcdFx0bWludXRlcyA9IFwiMFwiICsgU3RyaW5nKG1pbnV0ZXMpO1xyXG5cdFx0fVxyXG5cdFx0dmFyIGRhdGVfdGV4dCA9IGRhdGUuZ2V0TW9udGgoKSArIFwiL1wiICsgZGF0ZS5nZXREYXRlKCkgKyBcIi9cIiArIGRhdGUuZ2V0RnVsbFllYXIoKSArIFwiIGF0IFwiICsgZGF0ZS5nZXRIb3VycygpICsgXCI6XCIgKyBtaW51dGVzO1xyXG4gICAgICAgICAgICAgICAgIFxyXG5cdFx0Ly8gdmFyIHRhZ3MgPSBKU09OLnBhcnNlKHRoaXMucHJvcHMuZGF0YS50YWdzKVxyXG5cdFx0Ly8gdmFyIHRhZ19pbmRpY2VzID0gW11cclxuXHJcblx0XHQvLyBpZiAodGhpcy5wcm9wcy5kYXRhLnRhZ3MgIT0gbnVsbClcclxuXHRcdC8vIHtcclxuXHRcdC8vIFx0dGFnX2luZGljZXMgPSBPYmplY3Qua2V5cyh0YWdzKVxyXG5cdFx0Ly8gXHR2YXIgcmVtYWluaW5nX2luZGljZXMgPSBbXVxyXG5cdFx0Ly8gXHRmb3IgKHZhciBpbmRleCBvZiB0YWdfaW5kaWNlcylcclxuXHRcdC8vIFx0e1xyXG5cdFx0Ly8gXHRcdGlmICh0YWdzW2luZGV4XS5sZW5ndGggPCA1KVxyXG5cdFx0Ly8gXHRcdHtcclxuXHRcdC8vIFx0XHRcdGNvbnRpbnVlXHJcblx0XHQvLyBcdFx0fVxyXG5cdFx0Ly8gXHRcdHJlbWFpbmluZ19pbmRpY2VzLnB1c2goaW5kZXgpXHJcblx0XHQvLyBcdH1cclxuXHRcdC8vIFx0dGFnX2luZGljZXMgPSByZW1haW5pbmdfaW5kaWNlc1xyXG5cdFx0Ly8gXHR0YWdfaW5kaWNlcy5zb3J0KFxyXG5cdFx0Ly8gXHRcdFx0ZnVuY3Rpb24oYSwgYil7XHJcblx0XHQvLyBcdFx0ICAgIFx0aWYgKHBhcnNlSW50KGEpID4gcGFyc2VJbnQoYikpXHJcblx0XHQvLyBcdFx0ICAgICAgICB7XHJcblx0XHQvLyBcdFx0ICAgICAgICBcdHJldHVybiAxO1xyXG5cdFx0Ly8gXHRcdCAgICAgICAgfVxyXG5cdFx0Ly8gXHRcdCAgICAgICAgcmV0dXJuIC0xO1xyXG5cdFx0Ly8gXHRcdFx0fSlcclxuXHRcdFx0XHQgICAgXHRcdFxyXG5cdFx0Ly8gfSBcclxuXHRcdC8vIHZhciB0b3RhbF9pbmRleCA9IDA7XHJcblx0XHQvLyB2YXIgY29tbWVudF9kaXYgPSBbXVxyXG5cdFx0Ly8gdGhpcy5wcm9wcy5kYXRhLnRleHQuc3BsaXQoJ1xcbicpLm1hcCgoaXRlbSwgaSkgPT4ge1xyXG5cdFx0Ly8gXHR2YXIgY3VycmVudF90ZXh0ID0gXCJcIlxyXG5cdFx0Ly8gXHR2YXIgdGFnX2luZGV4ID0gMDtcclxuXHRcdC8vIFx0dmFyIGFsbF9jb250ZW50ID0gW11cclxuXHRcdC8vIFx0dmFyIGluZGV4ID0gMDtcclxuXHRcdC8vIFx0d2hpbGUgKHRhZ19pbmRpY2VzWzBdIDwgdG90YWxfaW5kZXggKyBpdGVtLmxlbmd0aClcclxuXHRcdC8vIFx0e1xyXG5cdFx0Ly8gXHRcdHZhciBiZWZvcmVfdGV4dCA9IGl0ZW0uc3Vic3RyaW5nKGluZGV4LCB0YWdfaW5kaWNlc1swXSAtIHRvdGFsX2luZGV4KVxyXG5cdFx0Ly8gXHRcdHZhciBjdXJyZW50X2luZGV4ID0gdGFnX2luZGljZXNbMF0gLSB0b3RhbF9pbmRleDtcclxuXHRcdC8vIFx0XHR2YXIgdGFnID0gXCJcIlxyXG5cdFx0Ly8gXHRcdHdoaWxlIChjdXJyZW50X2luZGV4IDwgaXRlbS5sZW5ndGgpXHJcblx0XHQvLyBcdFx0e1xyXG5cdFx0Ly8gXHRcdFx0aWYgKGl0ZW1bY3VycmVudF9pbmRleF0gPT0gJyAnIHx8IFxyXG5cdFx0Ly8gXHRcdFx0XHRpdGVtW2N1cnJlbnRfaW5kZXhdID09ICdcXHQnIHx8XHJcblx0XHQvLyBcdFx0XHRcdGl0ZW1bY3VycmVudF9pbmRleF0gPT0gJ1xcbicpXHJcblx0XHQvLyBcdFx0XHR7XHJcblx0XHQvLyBcdFx0XHRcdGJyZWFrXHJcblx0XHQvLyBcdFx0XHR9XHJcblxyXG5cdFx0Ly8gXHRcdFx0dGFnICs9IGl0ZW1bY3VycmVudF9pbmRleF1cclxuXHRcdC8vIFx0XHRcdCsrY3VycmVudF9pbmRleFxyXG5cdFx0Ly8gXHRcdH1cclxuXHRcdC8vIFx0XHRjdXJyZW50X3RleHQgPSBcIlwiXHJcblx0XHQvLyBcdFx0aW5kZXggPSBjdXJyZW50X2luZGV4XHJcblx0XHQvLyBcdFx0YWxsX2NvbnRlbnQucHVzaChiZWZvcmVfdGV4dClcclxuXHRcdC8vIFx0XHRhbGxfY29udGVudC5wdXNoKDxhIGhyZWYgPSB7dGFnc1t0YWdfaW5kaWNlc1swXV1bNF19Pnt0YWd9PC9hPilcclxuXHRcdC8vIFx0XHR0YWdfaW5kaWNlcy5zcGxpY2UoMCwxKTtcclxuXHRcdC8vIFx0fVxyXG5cdFx0Ly8gXHR0b3RhbF9pbmRleCArPSBpdGVtLmxlbmd0aCBcclxuXHRcdC8vIFx0YWxsX2NvbnRlbnQucHVzaChpdGVtLnN1YnN0cmluZyhpbmRleCwgaXRlbS5sZW5ndGgpKVxyXG5cdFx0Ly8gXHRjb21tZW50X2Rpdi5wdXNoKDxwIHN0eWxlID0ge3ttaW5IZWlnaHQ6JzI2LjY3cHgnfX0ga2V5PXtpfT57YWxsX2NvbnRlbnR9PC9wPik7XHJcblx0XHQvLyB9KVxyXG5cdFx0dmFyIGNvbW1lbnRfZGl2ID0gW11cclxuXHRcdGNvbW1lbnRfZGl2ID0gdGFnX3V0aWxzLmZvcm1hdENvbnRlbnQodGhpcy5wcm9wcy5kYXRhLnRleHQsIHRoaXMucHJvcHMuZGF0YS50YWdzKVxyXG5cclxuXHRcdHZhciB1cHZvdGVfY29sb3IgPSAnYmxhY2snXHJcblx0XHR2YXIgZG93bnZvdGVfY29sb3IgPSAnYmxhY2snXHJcblxyXG5cdFx0aWYgKHRoaXMudm90ZV9zdGF0ZSA9PSAxKVxyXG5cdFx0e1xyXG5cdFx0XHR1cHZvdGVfY29sb3IgPSAnYmx1ZSdcclxuXHRcdFx0dGhpcy51cF9pbWFnZSA9IFwiL3NtYWxsX3VwX29uLnBuZ1wiXHJcblx0XHR9XHJcblx0XHRlbHNlIGlmICh0aGlzLnZvdGVfc3RhdGUgPT0gMClcclxuXHRcdHtcclxuXHRcdFx0ZG93bnZvdGVfY29sb3IgPSAncmVkJ1xyXG5cdFx0XHR0aGlzLmRvd25faW1hZ2UgPSBcIi9zbWFsbF9kb3duX29uLnBuZ1wiXHJcblx0XHR9XHJcblxyXG5cclxuXHRcdHZhciB0YWdfZGlzcGxheSA9ICdub25lJ1xyXG5cdFx0aWYgKHRoaXMudGFnRmxhZylcclxuXHRcdHtcclxuXHRcdFx0dGFnX2Rpc3BsYXkgPSAnJ1xyXG5cdFx0fVxyXG5cdFx0XHRcdCAgICAgIFx0Ly8gPGJ1dHRvbiByZWYgPSB7dGhpcy51cHZvdGVSZWZ9IG9uQ2xpY2sgPSB7dGhpcy51cHZvdGVDbGlja2VkLmJpbmQodGhpcyl9IHN0eWxlPXt7dG9wOicwcHgnLHBvc2l0aW9uOidhYnNvbHV0ZScsaGVpZ2h0OiczMHB4JywgY29sb3I6dXB2b3RlX2NvbG9yfX0gdHlwZT0nYnV0dG9uJyBjbGFzc05hbWUgPSAndXB2b3RlJyBpZCA9IHtjb21tZW50X2lkfT5ePC9idXR0b24+XHJcblx0XHRcdFx0ICAgICAgXHQvLyA8YnV0dG9uIHJlZiA9IHt0aGlzLmRvd252b3RlUmVmfSAgb25DbGljayA9IHt0aGlzLmRvd252b3RlQ2xpY2tlZC5iaW5kKHRoaXMpfSBzdHlsZT17e2JvdHRvbTonMHB4Jyxwb3NpdGlvbjonYWJzb2x1dGUnLGhlaWdodDonMzBweCcsIGNvbG9yOmRvd252b3RlX2NvbG9yfX0gdHlwZT0nYnV0dG9uJyBjbGFzc05hbWUgPSAnZG93bnZvdGUnIGlkID0ge2NvbW1lbnRfaWR9PnY8L2J1dHRvbj5cclxuXHRcdFx0XHRcdFx0Ly8gPGRpdiBzdHlsZSA9IHt7dG9wOicwcHgnLGhlaWdodDonMzBweCcsIHpJbmRleDonMTAnfX0+PGltZyBvbkNsaWNrID0ge3RoaXMudXB2b3RlQ2xpY2tlZC5iaW5kKHRoaXMpfSBzcmM9e3RoaXMudXBfaW1hZ2V9IHdpZHRoPVwiMjBcIiBoZWlnaHQ9XCIyMFwiIGFsdD1cIlwiLz48L2Rpdj5cclxuXHRcdFx0XHRcdFx0Ly8gPGRpdiBzdHlsZSA9IHt7Ym90dG9tOicwcHgnLGhlaWdodDonMzBweCcsIHpJbmRleDonMTAnfX0+PGltZyBvbkNsaWNrID0ge3RoaXMuZG93bnZvdGVDbGlja2VkLmJpbmQodGhpcyl9IHNyYz17dGhpcy5kb3duX2ltYWdlfSB3aWR0aD1cIjIwXCIgaGVpZ2h0PVwiMjBcIiBhbHQ9XCJcIi8+PC9kaXY+XHJcblx0XHRcdFx0XHRcdC8vIDxkaXYgc3R5bGUgPSB7e3Bvc2l0aW9uOidyZWxhdGl2ZScsIG1pbkhlaWdodDogJzE0LjY2cHgnLCB3aWR0aDonNnB4JywgYm9yZGVyUmlnaHQ6JzNweCBzb2xpZCAjQzVDNUM1JywgdG9wOicyMHB4J319PlxyXG5cdFx0XHRcdFx0XHQvLyA8L2Rpdj5cclxuXHRcdC8vPGJ1dHRvbiBvbkNsaWNrID0ge3RoaXMub3Blbk5ld0NvbW1lbnQuYmluZCh0aGlzKX0gdHlwZT0nYnV0dG9uJyBjbGFzc05hbWUgPSAnYmVnaW5fY29tbWVudCcgaWQgPSB7Y29tbWVudF9pZH0+Q29tbWVudDwvYnV0dG9uPiBcclxuXHRcdHJldHVybiAoXHJcblx0XHRcdDxkaXYgc3R5bGUgPSB7e2JhY2tncm91bmQ6J3doaXRlJywgYm9yZGVyUmFkaXVzOic0cHgnLCBtYXhXaWR0aDonMTAwMHB4J319PlxyXG5cdCAgICAgIFx0XHRcclxuXHRcdCAgICAgIFx0PGRpdiBjbGFzc05hbWU9IHtjb21tZW50X2xldmVsfSBpZD0ge2NvbW1lbnRfaWR9IHJlcGxpZXM9IHtyZXBsaWVzfSBzdHlsZT17e3Bvc2l0aW9uOidyZWxhdGl2ZScsIGRpc3BsYXk6J2ZsZXgnLCBmbGV4RGlyZWN0aW9uOidyb3cnfX0+XHJcblx0XHRcdCAgICAgIFx0e2xlZnRfc3BhY2VzfVxyXG5cdFx0XHQgICAgICBcdDxkaXYgc3R5bGU9e3twb3NpdGlvbjoncmVsYXRpdmUnLCBtaW5IZWlnaHQ6JzYyLjY2cHgnLCB3aWR0aDonMzBweCcsIGRpc3BsYXk6J2ZsZXgnLCBmbGV4RGlyZWN0aW9uOidjb2x1bW4nLCB0b3A6JzVweCd9fT5cclxuXHJcblx0XHRcdFx0XHRcdDxzdmcgb25DbGljayA9IHt0aGlzLnVwdm90ZUNsaWNrZWQuYmluZCh0aGlzKX0gd2lkdGg9XCIxMFwiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNiAyN1wiIGZpbGw9XCJub25lXCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIGNvbG9yID0gJ2JsdWUnPlxyXG5cdFx0XHRcdFx0XHRcdDxwYXRoIGQ9XCJNOC43MDcxMSAwLjk4NzM1NkM4LjMxNjU4IDAuNTk2ODMyIDcuNjgzNDIgMC41OTY4MzIgNy4yOTI4OSAwLjk4NzM1NkwwLjkyODkzMSA3LjM1MTMyQzAuNTM4NDA3IDcuNzQxODQgMC41Mzg0MDcgOC4zNzUwMSAwLjkyODkzMSA4Ljc2NTUzQzEuMzE5NDYgOS4xNTYwNiAxLjk1MjYyIDkuMTU2MDYgMi4zNDMxNSA4Ljc2NTUzTDggMy4xMDg2OEwxMy42NTY5IDguNzY1NTNDMTQuMDQ3NCA5LjE1NjA2IDE0LjY4MDUgOS4xNTYwNiAxNS4wNzExIDguNzY1NTNDMTUuNDYxNiA4LjM3NTAxIDE1LjQ2MTYgNy43NDE4NCAxNS4wNzExIDcuMzUxMzJMOC43MDcxMSAwLjk4NzM1NlpNOSAyNi4zMTI2TDkgMS42OTQ0Nkw3IDEuNjk0NDZMNyAyNi4zMTI2TDkgMjYuMzEyNlpcIiBmaWxsPXt1cHZvdGVfY29sb3J9Lz5cclxuXHRcdFx0XHRcdFx0PC9zdmc+XHJcblxyXG5cdFx0XHRcdFx0XHQ8c3ZnIHN0eWxlID0ge3twb3NpdGlvbjoncmVsYXRpdmUnLCB0b3A6JzEwcHgnfX0gb25DbGljayA9IHt0aGlzLmRvd252b3RlQ2xpY2tlZC5iaW5kKHRoaXMpfSB3aWR0aD1cIjEwXCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDE2IDI3XCIgZmlsbD1cIm5vbmVcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI+XHJcblx0XHRcdFx0XHRcdFx0PHBhdGggZD1cIk03LjI5Mjg5IDI2LjAxOTdDNy42ODM0MiAyNi40MTAyIDguMzE2NTggMjYuNDEwMiA4LjcwNzExIDI2LjAxOTdMMTUuMDcxMSAxOS42NTU3QzE1LjQ2MTYgMTkuMjY1MiAxNS40NjE2IDE4LjYzMiAxNS4wNzExIDE4LjI0MTVDMTQuNjgwNSAxNy44NTEgMTQuMDQ3NCAxNy44NTEgMTMuNjU2OSAxOC4yNDE1TDggMjMuODk4NEwyLjM0MzE1IDE4LjI0MTVDMS45NTI2MiAxNy44NTEgMS4zMTk0NiAxNy44NTEgMC45Mjg5MzIgMTguMjQxNUMwLjUzODQwOCAxOC42MzIgMC41Mzg0MDggMTkuMjY1MiAwLjkyODkzMiAxOS42NTU3TDcuMjkyODkgMjYuMDE5N1pNNyAwLjY5NDQ4OUw3IDI1LjMxMjZIOUw5IDAuNjk0NDg5TDcgMC42OTQ0ODlaXCIgZmlsbD17ZG93bnZvdGVfY29sb3J9Lz5cclxuXHRcdFx0XHRcdFx0PC9zdmc+XHJcblxyXG5cdFx0XHQgICAgICBcdDwvZGl2PlxyXG5cdFx0XHQgICAgICBcdDxkaXYgc3R5bGU9e3twb3NpdGlvbjoncmVsYXRpdmUnLCBtYXhXaWR0aDonOTcwcHgnLCBtaW5XaWR0aDonMzAwcHgnfX0+XHJcblx0XHRcdCAgICAgIFx0XHQ8ZGl2IHJlZiA9IHt0aGlzLnNjb3JlUmVmfSBzdHlsZT17e2Rpc3BsYXk6J2ZsZXgnLCBmbGV4RGlyZWN0aW9uOidyb3cnLCB3aWR0aDonOTUlJyxoZWlnaHQ6JzIwcHgnLCBmb250U2l6ZTonMTBwdCcsIGNvbG9yOiAnIzViNWI1Yid9fSBjbGFzc05hbWU9J2NvbW1lbnRfaGVhZGVyJyBpZCA9IHtjb21tZW50X2lkfT4gXHJcblx0XHRcdCAgICAgIFx0XHRcdDxkaXYgc3R5bGUgPSB7e2NvbG9yOicjMTg4Mjc1J319PiBcclxuXHRcdFx0ICAgICAgXHRcdFx0XHQ8YSBzdHlsZSA9IHt7Y29sb3I6JyMxODgyNzUnLCBmb250V2VpZ2h0Oidib2xkJ319IGhyZWYgPSB7XCIvdXNlci9cIiArIHRoaXMucHJvcHMuZGF0YS51c2VyX2lkfT4ge3RoaXMucHJvcHMuZGF0YS51c2VyX2lkfSA8L2E+XHJcblx0XHRcdCAgICAgIFx0XHRcdDwvZGl2PlxyXG5cdFx0XHQgICAgICBcdFx0XHQ8ZGl2IHN0eWxlID0ge3toZWlnaHQ6JzE1cHgnLCB3aWR0aDonMTBweCd9fT5cclxuXHRcdFx0ICAgICAgXHRcdFx0PC9kaXY+XHJcblx0XHRcdCAgICAgIFx0XHRcdDxkaXY+XHJcblx0XHRcdCAgICAgIFx0XHRcdFx0e3RoaXMudm90ZXNfc2NvcmUgKyBcIiBwb2ludHNcIn1cclxuXHRcdFx0ICAgICAgXHRcdFx0PC9kaXY+XHJcblx0XHRcdCAgICAgIFx0XHRcdDxkaXYgc3R5bGUgPSB7e2hlaWdodDonMTVweCcsIHdpZHRoOicxMHB4J319PlxyXG5cdFx0XHQgICAgICBcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0ICAgICAgXHRcdFx0PGRpdj5cclxuXHRcdFx0ICAgICAgXHRcdFx0XHR7ZGF0ZV90ZXh0fVxyXG5cdFx0XHQgICAgICBcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0ICAgICAgXHRcdFx0XHJcblx0XHRcdCAgICAgIFx0XHQ8L2Rpdj5cclxuXHRcdFx0ICAgICAgXHRcdDxkaXYgc3R5bGU9e3t3aWR0aDonOTUlJ319IGNsYXNzTmFtZSA9J2NvbW1lbnRfYm9keScgaWQgPSB7Y29tbWVudF9pZH0+IHtjb21tZW50X2Rpdn0gPC9kaXY+IFxyXG5cdFx0XHQgICAgICBcdFx0PGRpdiBzdHlsZT17e3dpZHRoOic5NSUnLGhlaWdodDonMjVweCcsIGZvbnRTaXplOicxMHB0JywgY29sb3I6ICcjMTg4Mjc1J319IG9uQ2xpY2sgPSB7dGhpcy5vcGVuTmV3Q29tbWVudC5iaW5kKHRoaXMpfSBjbGFzc05hbWUgPSAnYmVnaW5fY29tbWVudCcgaWQgPSB7Y29tbWVudF9pZH0+IFJlcGx5IDwvZGl2PlxyXG5cdFx0XHQgICAgICBcdDwvZGl2PlxyXG5cdFx0ICAgIFx0PC9kaXY+XHJcblx0XHQgICAgXHR7dGhpcy5uZXdfY29tbWVudH1cclxuXHQgICAgXHRcdHt0aGlzLmNoaWxkX2NvbW1lbnRzLm1hcCgoY2hpbGQpID0+IHtyZXR1cm4gY2hpbGR9KX1cclxuXHQgICAgXHRcdHt0aGlzLnJlcGxpZXNfYnV0dG9ufVxyXG5cdCAgICBcdFx0e3RoaXMudGVzdF90ZXh0fVxyXG5cdFx0XHRcdDxkaXYgc3R5bGUgPSB7e3Bvc2l0aW9uOidmaXhlZCcsIHdpZHRoOiAnMjAwcHgnLCBoZWlnaHQ6JzMwMHB4JywgcmlnaHQ6JzEwJScsIHRvcDonMjAwcHgnLCBiYWNrZ3JvdW5kQ29sb3I6J3doaXRlJywgZGlzcGxheTp0YWdfZGlzcGxheSwgekluZGV4OjE1LCBvdmVyZmxvdzonc2Nyb2xsJ319ID5cclxuXHRcdFx0XHRcdHt0aGlzLnRhZ0xpc3R9XHJcblx0XHRcdFx0PC9kaXY+XHJcblx0ICAgIFx0PC9kaXY+XHJcblx0XHQpO1xyXG5cdH1cclxufVxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDb21tZW50U2VjdGlvbiBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCBcclxue1xyXG5cdGNvbnN0cnVjdG9yKHByb3BzKVxyXG5cdHtcclxuXHRcdHN1cGVyKDApO1xyXG5cdFx0dGhpcy5jb21tZW50cyA9IFtdO1xyXG5cdFx0dGhpcy5vZmZzZXQgPSAwO1xyXG5cdFx0dGhpcy5nbG9iYWxfb2Zmc2V0ID0gMDtcclxuXHRcdHRoaXMubG9hZGluZ19jb21tZW50c19zZW1hcGhvciA9IGZhbHNlO1xyXG5cclxuXHRcdHRoaXMubmV3X2NvbW1lbnQgPSB1bmRlZmluZWQ7XHJcblx0XHR0aGlzLmNvbnRlbnRSZWYgPSBSZWFjdC5jcmVhdGVSZWYoKTtcclxuXHRcdHRoaXMudXNlcl9wb3N0cyA9IHByb3BzLnBvc3RzO1xyXG5cclxuXHRcdHRoaXMudGFnRmxhZyA9IGZhbHNlXHJcblx0XHR0aGlzLmN1cnJlbnRUYWcgPSBcIlwiXHJcblx0XHR0aGlzLnRhZ0xpc3QgPSBbXVxyXG5cdFx0dGhpcy5hcnRpc3RzID0gW11cclxuXHRcdHRoaXMudXNlcnMgPSBbXVxyXG5cdFx0dGhpcy5hcnRpc3RTZWFyY2ggPSBmYWxzZVxyXG5cdFx0dGhpcy5jdXJyZW50QXJ0aXN0ID0gXCJcIlxyXG5cdFx0dGhpcy5zb25nc19hbmRfYWxidW1zID0gW11cclxuXHRcdHRoaXMuYXJ0aXN0RmxhZyA9IGZhbHNlXHJcblx0XHR0aGlzLmxhc3RDb250ZW50U2l6ZSA9IDBcclxuXHRcdHRoaXMudGFnZ2VkID0gZmFsc2VcclxuXHRcdHRoaXMucG90ZW50aWFsX3RhZ3MgPSBbXVxyXG5cdH1cclxuXHJcblx0bWFrZVBvc3RzKHVzZXJfcG9zdHMsIGNvbW1lbnRzKVxyXG5cdHtcclxuXHRcdGlmICh1c2VyX3Bvc3RzICE9IHVuZGVmaW5lZClcclxuXHRcdHtcclxuXHRcdFx0dGhpcy5nbG9iYWxfb2Zmc2V0ICs9IHVzZXJfcG9zdHMubGVuZ3RoO1xyXG5cdFx0XHR2YXIgcG9zdF9hbmRfY29tbWVudHMgPSBbXTtcclxuXHRcdFx0dXNlcl9wb3N0cy5tYXAoKHBvc3QpID0+IHtcclxuXHRcdFx0XHR2YXIgY3VycmVudF9jb21tZW50cyA9IFtdO1xyXG5cdFx0XHRcdGZvciAodmFyIGNvbW1lbnQgb2YgY29tbWVudHMpXHJcblx0XHRcdFx0e1xyXG5cdFx0XHRcdFx0aWYgKGNvbW1lbnQucHJvcHMucG9zdF9pZCA9PSBwb3N0LnBvc3RfaWQpXHJcblx0XHRcdFx0XHR7XHJcblx0XHRcdFx0XHRcdGN1cnJlbnRfY29tbWVudHMucHVzaChjb21tZW50KTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0dmFyIGRhdGUgPSBuZXcgRGF0ZShwb3N0LnRpbWVzdGFtcCk7XHJcblx0XHRcdFx0dmFyIG1pbnV0ZXMgPSBkYXRlLmdldE1pbnV0ZXMoKTtcclxuXHJcblx0XHRcdFx0aWYgKFN0cmluZyhtaW51dGVzKS5sZW5ndGggPT0gMSlcclxuXHRcdFx0XHR7XHJcblx0XHRcdFx0XHRtaW51dGVzID0gXCIwXCIgKyBTdHJpbmcobWludXRlcyk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdHZhciBkYXRlX3RleHQgPSBkYXRlLmdldE1vbnRoKCkgKyBcIi9cIiArIGRhdGUuZ2V0RGF0ZSgpICsgXCIvXCIgKyBkYXRlLmdldEZ1bGxZZWFyKCkgKyBcIiBhdCBcIiArIGRhdGUuZ2V0SG91cnMoKSArIFwiOlwiICsgbWludXRlcztcclxuXHJcblx0XHRcdFx0dmFyIGNvbW1lbnRfaWQgPSAtMTtcclxuXHRcclxuXHRcdFx0XHRpZiAoY3VycmVudF9jb21tZW50cy5sZW5ndGggIT0gMClcclxuXHRcdFx0XHR7XHJcblx0XHRcdFx0XHR2YXIgY29tbWVudF9pZCA9IGN1cnJlbnRfY29tbWVudHNbMF0ucHJvcHMuY29tbWVudF9pZDtcdFx0XHRcdFxyXG5cdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0dmFyIGNvbnRlbnRfZGl2ID0gW11cclxuXHRcdFx0XHQvLyB2YXIgdG90YWxfaW5kZXggPSAwO1xyXG5cdFx0XHRcdC8vIHZhciB0YWdzID0gSlNPTi5wYXJzZSh0aGlzLnByb3BzLmRhdGEudGFncylcclxuXHRcdFx0XHQvLyB2YXIgdGFnX2luZGljZXMgPSBbXVxyXG5cclxuXHRcdFx0XHQvLyBpZiAocG9zdC50YWdzICE9IG51bGwpXHJcblx0XHRcdFx0Ly8ge1xyXG5cdFx0XHRcdC8vIFx0dGFnX2luZGljZXMgPSBPYmplY3Qua2V5cyh0YWdzKVxyXG5cdFx0XHRcdC8vIFx0dmFyIHJlbWFpbmluZ19pbmRpY2VzID0gW11cclxuXHRcdFx0XHQvLyBcdGZvciAodmFyIGluZGV4IG9mIHRhZ19pbmRpY2VzKVxyXG5cdFx0XHRcdC8vIFx0e1xyXG5cdFx0XHRcdC8vIFx0XHRpZiAodGFnc1tpbmRleF0ubGVuZ3RoIDwgNSlcclxuXHRcdFx0XHQvLyBcdFx0e1xyXG5cdFx0XHRcdC8vIFx0XHRcdGNvbnRpbnVlXHJcblx0XHRcdFx0Ly8gXHRcdH1cclxuXHRcdFx0XHQvLyBcdFx0cmVtYWluaW5nX2luZGljZXMucHVzaChpbmRleClcclxuXHRcdFx0XHQvLyBcdH1cclxuXHRcdFx0XHQvLyBcdHRhZ19pbmRpY2VzID0gcmVtYWluaW5nX2luZGljZXNcclxuXHRcdFx0XHQvLyBcdHRhZ19pbmRpY2VzLnNvcnQoXHJcblx0XHRcdFx0Ly8gXHRcdFx0ZnVuY3Rpb24oYSwgYil7XHJcblx0XHRcdFx0Ly8gXHRcdCAgICBcdGlmIChwYXJzZUludChhKSA+IHBhcnNlSW50KGIpKVxyXG5cdFx0XHRcdC8vIFx0XHQgICAgICAgIHtcclxuXHRcdFx0XHQvLyBcdFx0ICAgICAgICBcdHJldHVybiAxO1xyXG5cdFx0XHRcdC8vIFx0XHQgICAgICAgIH1cclxuXHRcdFx0XHQvLyBcdFx0ICAgICAgICByZXR1cm4gLTE7XHJcblx0XHRcdFx0Ly8gXHRcdFx0fSlcclxuXHRcdFx0XHRcdFx0ICAgIFx0XHRcclxuXHRcdFx0XHQvLyB9IFxyXG5cclxuXHRcdFx0XHQvLyBwb3N0LmNvbnRlbnQuc3BsaXQoJ1xcbicpLm1hcCgoaXRlbSwgaSkgPT4ge1xyXG5cdFx0XHRcdC8vIFx0dmFyIGN1cnJlbnRfdGV4dCA9IFwiXCJcclxuXHRcdFx0XHQvLyBcdHZhciB0YWdfaW5kZXggPSAwO1xyXG5cdFx0XHRcdC8vIFx0dmFyIGFsbF9jb250ZW50ID0gW11cclxuXHRcdFx0XHQvLyBcdHZhciBpbmRleCA9IDA7XHJcblx0XHRcdFx0Ly8gXHR3aGlsZSAodGFnX2luZGljZXNbMF0gPCB0b3RhbF9pbmRleCArIGl0ZW0ubGVuZ3RoKVxyXG5cdFx0XHRcdC8vIFx0e1xyXG5cdFx0XHRcdC8vIFx0XHR2YXIgYmVmb3JlX3RleHQgPSBpdGVtLnN1YnN0cmluZyhpbmRleCwgdGFnX2luZGljZXNbMF0gLSB0b3RhbF9pbmRleClcclxuXHRcdFx0XHQvLyBcdFx0dmFyIGN1cnJlbnRfaW5kZXggPSB0YWdfaW5kaWNlc1swXSAtIHRvdGFsX2luZGV4O1xyXG5cdFx0XHRcdC8vIFx0XHR2YXIgdGFnID0gXCJcIlxyXG5cdFx0XHRcdC8vIFx0XHR3aGlsZSAoY3VycmVudF9pbmRleCA8IGl0ZW0ubGVuZ3RoKVxyXG5cdFx0XHRcdC8vIFx0XHR7XHJcblx0XHRcdFx0Ly8gXHRcdFx0aWYgKGl0ZW1bY3VycmVudF9pbmRleF0gPT0gJyAnIHx8IFxyXG5cdFx0XHRcdC8vIFx0XHRcdFx0aXRlbVtjdXJyZW50X2luZGV4XSA9PSAnXFx0JyB8fFxyXG5cdFx0XHRcdC8vIFx0XHRcdFx0aXRlbVtjdXJyZW50X2luZGV4XSA9PSAnXFxuJylcclxuXHRcdFx0XHQvLyBcdFx0XHR7XHJcblx0XHRcdFx0Ly8gXHRcdFx0XHRicmVha1xyXG5cdFx0XHRcdC8vIFx0XHRcdH1cclxuXHJcblx0XHRcdFx0Ly8gXHRcdFx0dGFnICs9IGl0ZW1bY3VycmVudF9pbmRleF1cclxuXHRcdFx0XHQvLyBcdFx0XHQrK2N1cnJlbnRfaW5kZXhcclxuXHRcdFx0XHQvLyBcdFx0fVxyXG5cdFx0XHRcdC8vIFx0XHRjdXJyZW50X3RleHQgPSBcIlwiXHJcblx0XHRcdFx0Ly8gXHRcdGluZGV4ID0gY3VycmVudF9pbmRleFxyXG5cdFx0XHRcdC8vIFx0XHRhbGxfY29udGVudC5wdXNoKGJlZm9yZV90ZXh0KVxyXG5cdFx0XHRcdC8vIFx0XHRhbGxfY29udGVudC5wdXNoKDxhIGhyZWYgPSB7dGFnc1t0YWdfaW5kaWNlc1swXV1bNF19Pnt0YWd9PC9hPilcclxuXHRcdFx0XHQvLyBcdFx0dGFnX2luZGljZXMuc3BsaWNlKDAsMSk7XHJcblx0XHRcdFx0Ly8gXHR9XHJcblx0XHRcdFx0Ly8gXHR0b3RhbF9pbmRleCArPSBpdGVtLmxlbmd0aCBcclxuXHRcdFx0XHQvLyBcdGFsbF9jb250ZW50LnB1c2goaXRlbS5zdWJzdHJpbmcoaW5kZXgsIGl0ZW0ubGVuZ3RoKSlcclxuXHRcdFx0XHQvLyBcdGNvbnRlbnRfZGl2LnB1c2goPHAgc3R5bGUgPSB7e21pbkhlaWdodDonMjYuNjdweCd9fSBrZXk9e2l9PnthbGxfY29udGVudH08L3A+KTtcclxuXHRcdFx0XHQvLyB9KVxyXG5cdFx0XHRcdGNvbnRlbnRfZGl2ID0gdGFnX3V0aWxzLmZvcm1hdENvbnRlbnQodGhpcy5wcm9wcy5nbG9iYWxfcG9zdC5jb250ZW50LCB0aGlzLnByb3BzLmdsb2JhbF9wb3N0LnRhZ3MpXHJcblx0XHRcdFx0cG9zdF9hbmRfY29tbWVudHMucHVzaCggXHJcblx0XHRcdFx0PGRpdj5cclxuXHRcdFx0ICAgICAgXHQ8ZGl2IHN0eWxlPXt7cG9zaXRpb246J3JlbGF0aXZlJywgbGVmdDonMCUnLCB0b3A6JzIwcHgnLCBiYWNrZ3JvdW5kOid3aGl0ZScsIHBhZGRpbmdMZWZ0Oic1cHgnLCBwYWRkaW5nQm90dG9tOic1cHgnLCBib3JkZXJCb3R0b206J3NvbGlkIGJsYWNrIDNweCcsIG1heFdpZHRoOicxMDAwcHgnfX0+XHJcblx0XHRcdFx0ICAgICAgXHRcdDxkaXYgc3R5bGU9e3t3aWR0aDonMTAwJScsaGVpZ2h0OiczNXB4JywgZm9udFNpemU6JzE4cHQnLCB0ZXh0QWxpZ246J2NlbnRlcicsIGRpc3BsYXk6J2ZsZXgnLCBmbGV4RGlyZWN0aW9uOidyb3cnfX0gY2xhc3NOYW1lPSdjb21tZW50X2hlYWRlcicgaWQgPSB7Y29tbWVudF9pZH0+IFxyXG5cdFx0XHRcdCAgICAgIFx0XHRcdDxkaXYgc3R5bGUgPSB7e21hcmdpbjonMCd9fT5cclxuXHRcdFx0XHQgICAgICBcdFx0XHRcdHtwb3N0LnVzZXJuYW1lICArIFwiIHwgXCIgKyBwYXJzZUludChwb3N0Lmxpa2VzIC0gcG9zdC5kaXNsaWtlcyl9XHJcblx0XHRcdFx0ICAgICAgXHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0ICAgICAgXHRcdFx0PGRpdiBzdHlsZSA9IHt7bWFyZ2luOicwIGF1dG8nfX0+XHJcblx0XHRcdFx0ICAgICAgXHRcdFx0XHQ8YSBocmVmPSB7XCIvdXNlci9cIiArIHBvc3QudXNlcm5hbWUgKyBcIi9cIiArIHBvc3QucG9zdF9pZH0+e3Bvc3QudGl0bGV9IDwvYT5cclxuXHRcdFx0XHQgICAgICBcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0XHQgICAgICBcdFx0XHQ8ZGl2IHN0eWxlID0ge3ttYXJnaW5SaWdodDonMHB4J319PlxyXG5cdFx0XHRcdCAgICAgIFx0XHRcdFx0e2RhdGVfdGV4dH1cclxuXHRcdFx0XHQgICAgICBcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0XHQgICAgICBcdFx0PC9kaXY+XHJcblx0XHRcdFx0ICAgICAgXHRcdDxkaXYgc3R5bGU9e3t3aWR0aDonOTUlJ319IGNsYXNzTmFtZSA9J2NvbW1lbnRfYm9keScgaWQgPSB7Y29tbWVudF9pZH0+IHtjb250ZW50X2Rpdn0gPC9kaXY+IFxyXG5cdFx0XHQgICAgXHQ8L2Rpdj5cdFxyXG5cdFx0XHQgICAgXHQ8ZGl2IHN0eWxlPXt7cG9zaXRpb246J3JlbGF0aXZlJywgdG9wOicyMHB4J319PlxyXG5cdFx0XHRcdFx0XHR7Y3VycmVudF9jb21tZW50c31cclxuXHRcdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcdFx0PGJyLz5cclxuXHRcdFx0XHRcdDxici8+XHJcblx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0KX0pXHJcblx0XHRcdHJldHVybiBwb3N0X2FuZF9jb21tZW50cztcclxuXHRcdFx0XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHRnZXRDb21tZW50cyhjb21tZW50cywgY29tbWVudF92b3RlcywgaWQpXHJcblx0e1xyXG5cdFx0dmFyIGNvbW1lbnRfcmVzdWx0ID0gZ2VuZXJhdGVDb21tZW50cyhjb21tZW50cywgY29tbWVudF92b3RlcywgaWQsIDAsIHRoaXMucHJvcHMucG9zdF9kYXRhLCB0aGlzLnByb3BzLmdsb2JhbF9wb3N0ICE9IHVuZGVmaW5lZCk7XHRcdFxyXG5cdFx0dGhpcy5jb21tZW50cyA9IGNvbW1lbnRfcmVzdWx0WzBdO1xyXG5cdFx0dGhpcy5vZmZzZXQgKz0gY29tbWVudF9yZXN1bHRbMV1cclxuXHR9XHJcblxyXG5cdGNvbXBvbmVudERpZE1vdW50KCkge1xyXG5cdFx0aWYgKHRoaXMucHJvcHMucG9zdHMgPT0gdW5kZWZpbmVkKVxyXG5cdFx0e1xyXG5cdCAgICBcdHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdzY3JvbGwnLCB0aGlzLmhhbmRsZVNjcm9sbC5iaW5kKHRoaXMpKTtcclxuXHQgICAgfVxyXG5cdCAgICBlbHNlXHJcblx0ICAgIHtcclxuXHQgICAgXHR3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignc2Nyb2xsJywgdGhpcy5oYW5kbGVTY3JvbGxHbG9iYWwuYmluZCh0aGlzKSk7XHJcblx0ICAgIH1cclxuXHQgICAgdGhpcy5nZXRDb21tZW50cyh0aGlzLnByb3BzLmNvbW1lbnRzLCB0aGlzLnByb3BzLmNvbW1lbnRfdm90ZXMsIHRoaXMucHJvcHMucG9zdF9pZClcclxuXHQgICAgaWYgKHRoaXMudXNlcl9wb3N0cyAhPSB1bmRlZmluZWQpXHJcblx0ICAgIHtcclxuXHQgICAgXHR0aGlzLmNvbW1lbnRzID0gdGhpcy5tYWtlUG9zdHModGhpcy51c2VyX3Bvc3RzLCB0aGlzLmNvbW1lbnRzKTtcclxuXHQgICAgfVxyXG5cdCAgICB0aGlzLmZvcmNlVXBkYXRlKCk7XHJcblx0fVxyXG5cclxuXHRjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcclxuXHQgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIHRoaXMuaGFuZGxlU2Nyb2xsLmJpbmQodGhpcykpO1xyXG5cdH1cclxuXHJcblx0aGFuZGxlU2Nyb2xsKCkge1xyXG5cdFx0dmFyIHRoYXQgPSB0aGlzO1xyXG5cdFx0dGhpcy51c2VyX3Bvc3RzID0gdW5kZWZpbmVkXHJcblxyXG5cdCAgICBpZiAoKHdpbmRvdy5pbm5lckhlaWdodCArIHdpbmRvdy5zY3JvbGxZKSA+PSBkb2N1bWVudC5ib2R5Lm9mZnNldEhlaWdodCAmJiAhdGhpcy5sb2FkaW5nX2NvbW1lbnRzX3NlbWFwaG9yKSB7XHJcblx0ICAgICAgXHR0aGlzLmxvYWRpbmdfY29tbWVudHNfc2VtYXBob3IgPSB0cnVlO1xyXG5cdFx0ICAgIGZldGNoKFwiL2xvYWRfY29tbWVudHNcIiwge1xyXG5cdFx0ICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxyXG5cdFx0ICAgICAgICBoZWFkZXJzOiB7XHJcblx0XHQgICAgICAgIFx0J0FjY2VwdCc6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuXHRcdCAgICAgICAgXHQnQXV0aG9yaXphdGlvbic6ICdCYXNpYycsXHJcblx0XHQgICAgICAgIFx0J0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuXHRcdCAgICAgICAgfSxcclxuXHRcdCAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe2lkOiB0aGF0LnByb3BzLnBvc3RfaWQsIG9mZnNldDp0aGF0Lm9mZnNldH0pfSlcclxuXHRcdCAgICAudGhlbihmdW5jdGlvbihyZXNwb25zZSkgeyByZXR1cm4gcmVzcG9uc2UuanNvbigpO30pXHJcblx0XHQgICAgLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsgXHJcblx0XHQgICAgXHR2YXIgY29tbWVudF9yZXN1bHQgPSBnZW5lcmF0ZUNvbW1lbnRzKGRhdGEuY29tbWVudHMsIGRhdGEuY29tbWVudF92b3RlcywgdGhhdC5wcm9wcy5wb3N0X2lkLCAwLCB0aGF0LnByb3BzLnBvc3RfZGF0YSwgdGhhdC5wcm9wcy5nbG9iYWxfcG9zdCAhPSB1bmRlZmluZWQpXHJcblx0XHQgICAgXHR2YXIgY2hpbGRfY29tbWVudHMgPSBjb21tZW50X3Jlc3VsdFswXTtcclxuXHRcdCAgICBcdHRoYXQub2Zmc2V0ICs9IGNvbW1lbnRfcmVzdWx0WzFdXHJcblx0XHQgICAgXHRmb3IgKHZhciBjb21tZW50IG9mIGNoaWxkX2NvbW1lbnRzKVxyXG5cdFx0ICAgIFx0e1xyXG5cdFx0ICAgIFx0XHR0aGF0LmNvbW1lbnRzLnB1c2goY29tbWVudClcclxuXHRcdCAgICBcdH1cclxuXHRcdCAgICBcdHRoYXQuZm9yY2VVcGRhdGUoKVxyXG5cdFx0ICAgIFx0dGhhdC5sb2FkaW5nX2NvbW1lbnRzX3NlbWFwaG9yID0gZmFsc2U7XHRcclxuXHRcdCBcdH0pXHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHRoYW5kbGVTY3JvbGxHbG9iYWwoKSB7XHJcblx0XHR2YXIgdGhhdCA9IHRoaXM7XHJcblx0XHR0aGlzLnVzZXJfcG9zdHMgPSB1bmRlZmluZWRcclxuXHQgICAgaWYgKCh3aW5kb3cuaW5uZXJIZWlnaHQgKyB3aW5kb3cuc2Nyb2xsWSkgPj0gZG9jdW1lbnQuYm9keS5vZmZzZXRIZWlnaHQgJiYgIXRoaXMubG9hZGluZ19jb21tZW50c19zZW1hcGhvcikge1xyXG5cdCAgICAgIFx0dGhpcy5sb2FkaW5nX2NvbW1lbnRzX3NlbWFwaG9yID0gdHJ1ZTtcclxuXHRcdCAgICBmZXRjaChcIi9sb2FkX2dsb2JhbF9wb3N0c1wiLCB7XHJcblx0XHQgICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcblx0XHQgICAgICAgIGhlYWRlcnM6IHtcclxuXHRcdCAgICAgICAgXHQnQWNjZXB0JzogJ2FwcGxpY2F0aW9uL2pzb24nLFxyXG5cdFx0ICAgICAgICBcdCdBdXRob3JpemF0aW9uJzogJ0Jhc2ljJyxcclxuXHRcdCAgICAgICAgXHQnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxyXG5cdFx0ICAgICAgICB9LFxyXG5cdFx0ICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7aWQ6IHRoYXQucHJvcHMuZ2xvYmFsX3Bvc3QucG9zdF9pZCwgXHJcblx0XHRcdFx0XHRcdCAgICAgICAgXHRvZmZzZXQ6dGhhdC5nbG9iYWxfb2Zmc2V0LCBcclxuXHRcdFx0XHRcdFx0ICAgICAgICBcdHNvbmc6IHRoYXQucHJvcHMuZ2xvYmFsX3Bvc3Quc29uZywgXHJcblx0XHRcdFx0XHRcdCAgICAgICAgXHRhcnRpc3Q6dGhhdC5wcm9wcy5nbG9iYWxfcG9zdC5hcnRpc3QsIFxyXG5cdFx0XHRcdFx0XHQgICAgICAgIFx0YWxidW06dGhhdC5wcm9wcy5nbG9iYWxfcG9zdC5hbGJ1bX0pfSlcclxuXHRcdCAgICAudGhlbihmdW5jdGlvbihyZXNwb25zZSkgeyByZXR1cm4gcmVzcG9uc2UuanNvbigpO30pXHJcblx0XHQgICAgLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsgXHJcblx0XHQgICAgXHR2YXIgY29tbWVudF9yZXN1bHQgPSBnZW5lcmF0ZUNvbW1lbnRzKGRhdGEuY29tbWVudHMsIGRhdGEuY29tbWVudF92b3RlcywgdGhhdC5wcm9wcy5wb3N0X2lkLCAwLCB0aGF0LnByb3BzLnBvc3RfZGF0YSwgdGhhdC5wcm9wcy5nbG9iYWxfcG9zdCAhPSB1bmRlZmluZWQpXHJcblx0XHQgICAgXHR2YXIgY2hpbGRfY29tbWVudHMgPSBjb21tZW50X3Jlc3VsdFswXTtcclxuXHRcdCAgICBcdHRoYXQub2Zmc2V0ICs9IGNvbW1lbnRfcmVzdWx0WzFdXHJcblx0XHQgICAgXHRcclxuXHRcdFx0XHRpZiAoZGF0YS51c2VyX3Bvc3RzID09IHVuZGVmaW5lZClcclxuXHRcdFx0XHR7XHRcdCAgICBcdFxyXG5cdFx0ICAgIFx0XHRmb3IgKHZhciBjb21tZW50IG9mIGNoaWxkX2NvbW1lbnRzKVxyXG5cdFx0ICAgIFx0XHR7XHJcblx0XHQgICAgXHRcdFx0dGhhdC5jb21tZW50cy5wdXNoKGNvbW1lbnQpXHJcblx0XHQgICAgXHRcdH1cclxuXHRcdCAgICBcdH1cclxuXHRcdCAgICBcdGVsc2VcclxuXHRcdCAgICBcdHtcclxuXHRcdCAgICBcdFx0dmFyIG5ld19jb21tZW50cyA9IFtdXHJcblx0XHQgICAgXHRcdGZvciAodmFyIGNvbW1lbnQgb2YgY2hpbGRfY29tbWVudHMpXHJcblx0XHQgICAgXHRcdHtcclxuXHRcdCAgICBcdFx0XHRuZXdfY29tbWVudHMucHVzaChjb21tZW50KVxyXG5cdFx0ICAgIFx0XHR9XHJcblx0XHQgICAgXHRcdHZhciBwb3N0c19hbmRfY29tbWVudHMgPSB0aGF0Lm1ha2VQb3N0cyhkYXRhLnVzZXJfcG9zdHMsIG5ld19jb21tZW50cyk7XHJcblx0XHQgICAgXHRcdGZvciAodmFyIGl0ZW0gb2YgcG9zdHNfYW5kX2NvbW1lbnRzKVxyXG5cdFx0ICAgIFx0XHR7XHJcblx0XHQgICAgXHRcdFx0dGhhdC5jb21tZW50cy5wdXNoKGl0ZW0pXHJcblx0XHQgICAgXHRcdH1cclxuXHRcdCAgICBcdH1cclxuXHRcdCAgICBcdHRoYXQuZm9yY2VVcGRhdGUoKVxyXG5cdFx0ICAgIFx0dGhhdC5sb2FkaW5nX2NvbW1lbnRzX3NlbWFwaG9yID0gZmFsc2U7XHJcblx0XHQgXHR9KVxyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0b3Blbk5ld0NvbW1lbnQoKVxyXG5cdHtcclxuXHRcdGlmICghdXRpbHMuY2hlY2tMb2dnZWRJbigpKVxyXG5cdFx0e1xyXG5cdFx0XHRhbGVydChcIk1VU1QgQkUgTE9HR0VEIElOXCIpXHJcblx0XHRcdHJldHVybjtcclxuXHRcdH1cclxuXHRcdHRoaXMubmV3X2NvbW1lbnQgPSA8ZGl2PlxyXG5cdFx0XHRcdDx0ZXh0YXJlYSBvbkNoYW5nZSA9IHt0aGlzLmNvbnRlbnRJbnB1dC5iaW5kKHRoaXMpfSByZWYgPSB7dGhpcy5jb250ZW50UmVmfSBjbGFzcyA9ICdjb21tZW50X3RleHQnIGlkID0ge3RoaXMucHJvcHMuY29tbWVudF9pZH0gbmFtZT0nY29udGVudCcgcm93cz0nMTAnIGNvbHM9JzkwJyBzdHlsZT17e3dpZHRoOic4MCUnLGhlaWdodDonNTBweCcsekluZGV4OicxMDAnfX0+PC90ZXh0YXJlYT5cclxuXHRcdFx0XHQ8YnIvPlxyXG5cdFx0XHRcdDxidXR0b24gb25DbGljayA9IHt0aGlzLnN1Ym1pdE5ld0NvbW1lbnQuYmluZCh0aGlzKX0gc3R5bGU9e3twb3NpdGlvbjoncmVsYXRpdmUnfX0gdHlwZT0nYnV0dG9uJyBjbGFzc05hbWU9J3N1Ym1pdF9uZXdfY29tbWVudCcgaWQgPSB7dGhpcy5wcm9wcy5jb21tZW50X2lkfT5zdWJtaXQ8L2J1dHRvbj5cclxuXHRcdFx0XHQ8YnV0dG9uIG9uQ2xpY2sgPSB7dGhpcy5jbG9zZU5ld0NvbW1lbnQuYmluZCh0aGlzKX0gc3R5bGU9e3twb3NpdGlvbjoncmVsYXRpdmUnfX0gdHlwZT0nYnV0dG9uJyBjbGFzc05hbWU9J2Nsb3NlX25ld19jb21tZW50JyBpZCA9IHt0aGlzLnByb3BzLmNvbW1lbnRfaWR9PmNsb3NlPC9idXR0b24+XHJcblx0XHRcdDwvZGl2PlxyXG5cdFx0dGhpcy5mb3JjZVVwZGF0ZSgpO1xyXG5cdH1cclxuXHJcblx0Y2xvc2VOZXdDb21tZW50KClcclxuXHR7XHJcblx0XHR0aGlzLm5ld19jb21tZW50ID0gdW5kZWZpbmVkXHJcblx0XHR0aGlzLnRhZ0ZsYWcgPSBmYWxzZVxyXG5cdFx0dGhpcy5mb3JjZVVwZGF0ZSgpO1x0XHRcclxuXHR9XHJcblxyXG5cdHN1Ym1pdE5ld0NvbW1lbnQoKVxyXG5cdHtcclxuXHRcdHZhciB0aGF0ID0gdGhpcztcclxuXHRcdHZhciBzdWJtaXRfdGV4dCA9IHRoaXMuY29udGVudFJlZi5jdXJyZW50LnZhbHVlXHJcblx0ICAgIGZldGNoKFwiL2NvbW1lbnRcIiwge1xyXG5cdCAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcclxuXHQgICAgICAgIGhlYWRlcnM6IHtcclxuXHQgICAgICAgIFx0QWNjZXB0OiAnYXBwbGljYXRpb24vanNvbicsXHJcblx0ICAgICAgICBcdCdBdXRob3JpemF0aW9uJzogJ0Jhc2ljJyxcclxuXHQgICAgICAgIFx0J0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuXHQgICAgICAgIH0sXHJcblxyXG5cdCAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe2lkOiB0aGlzLnByb3BzLnBvc3RfaWQsIFxyXG5cdCAgICAgICAgXHRcdFx0XHRcdCAgdGV4dDogdGhpcy5jb250ZW50UmVmLmN1cnJlbnQudmFsdWUsIFxyXG5cdCAgICAgICAgXHRcdFx0XHRcdCAgcG90ZW50aWFsVGFnczogdGhpcy5wb3RlbnRpYWxfdGFncyxcclxuXHQgICAgICAgIFx0XHRcdFx0XHQgIHBvc3RfdXNlcm5hbWU6IHRoaXMucHJvcHMucG9zdF9kYXRhLnVzZXJuYW1lLFxyXG5cdCAgICAgICAgXHRcdFx0XHRcdCAgcG9zdF9pZDogdGhpcy5wcm9wcy5wb3N0X2RhdGEucG9zdF9pZCxcclxuXHQgICAgICAgIFx0XHRcdFx0XHQgIHBvc3RfdGl0bGU6dGhpcy5wcm9wcy5wb3N0X2RhdGEudGl0bGUsXHJcblx0ICAgICAgICBcdFx0XHRcdFx0ICBjb21tZW50X2xldmVsOiAwLCBcclxuXHQgICAgICAgIFx0XHRcdFx0XHQgIHBhcmVudF9jb21tZW50X2lkOiAtMSx9KX0pXHJcblx0ICAgIC50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7IHJldHVybiByZXNwb25zZS5qc29uKCk7fSlcclxuXHQgICAgLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsgXHJcblx0XHQgICAgLy8gdmFyIG5ld19jb21tZW50X2RhdGEgPSB7XHJcblx0XHQgICAgLy8gXHRwb3N0X2lkOiBkYXRhLmNvbW1lbnRfaWQsXHJcblx0XHQgICAgLy8gXHR1c2VyX2lkOiBkYXRhLnVzZXJuYW1lLFxyXG5cdFx0ICAgIC8vIFx0dGV4dDogc3VibWl0X3RleHQsIFxyXG5cdFx0ICAgIC8vIFx0dGltZXN0YW1wOiBwYXJzZUludChkYXRhLnRpbWVzdGFtcCksXHJcblx0XHQgICAgLy8gXHR1cHZvdGVzOiAwLFxyXG5cdFx0ICAgIC8vIFx0ZG93bnZvdGVzOiAwLFxyXG5cdFx0ICAgIC8vIFx0cmVwbGllczogMCxcclxuXHRcdCAgICAvLyBcdGNvbW1lbnRfaWQ6IGRhdGEuY29tbWVudF9pZCxcclxuXHRcdCAgICAvLyBcdHBhcmVudF9jb21tZW50X2lkOiAtMSxcclxuXHRcdCAgICAvLyBcdGNvbW1lbnRfbGV2ZWw6IDAsXHJcblx0XHQgICAgLy8gfVxyXG5cdFx0ICAgIC8vIHRoYXQuY29tbWVudHMuc3BsaWNlKDAsIDAsPENvbW1lbnQga2V5ID0ge2RhdGEuY29tbWVudF9pZH0gb3JpZ2luYWxfcmVwbGllcyA9IHswfSBkYXRhID0ge25ld19jb21tZW50X2RhdGF9IGNoaWxkX2NvbW1lbnRzID0ge1tdfSB2b3RlX3N0YXRlID0gey0xfSBwb3N0X2lkID0ge2RhdGEuY29tbWVudF9pZH0gaXNfZ2xvYmFsID0ge3RoYXQucHJvcHMuZ2xvYmFsX3Bvc3QgIT0gdW5kZWZpbmVkfS8+KVxyXG5cdFx0ICAgIC8vIHRoYXQuZm9yY2VVcGRhdGUoKVxyXG5cdCAgICB9KVxyXG5cdCAgICB0aGlzLnRhZ0ZsYWcgPSBmYWxzZVxyXG5cdCAgICB0aGlzLmNsb3NlTmV3Q29tbWVudCgpO1xyXG5cdH1cclxuXHJcblx0Y29udGVudElucHV0KClcclxuXHR7XHJcblx0XHR2YXIgaW5wdXQgPSBldmVudC50YXJnZXQudmFsdWU7XHJcblx0XHQvL3VwZGF0ZSBhbmQgcHJ1bmUgdGFncyBsaXN0IFxyXG5cdFx0dGFnX3V0aWxzLmdldFRhZ3ModGhpcylcclxuXHJcbiAgICBcdHRoaXMubGFzdENvbnRlbnRTaXplID0gdGhpcy5jb250ZW50UmVmLmN1cnJlbnQudmFsdWUubGVuZ3RoXHJcblx0ICAgXHR0aGlzLmZvcmNlVXBkYXRlKCk7XHJcblx0fVxyXG5cclxuXHRzZWxlY3RUYWcoZSlcclxuXHR7XHJcblx0XHR0YWdfdXRpbHMudGFnQ2xpY2tlZCh0aGlzLCBlKVxyXG5cdH1cclxuXHJcblxyXG5cdHJlbmRlcigpXHJcblx0e1xyXG5cclxuXHRcdHZhciB0YWdfZGlzcGxheSA9ICdub25lJ1xyXG5cdFx0aWYgKHRoaXMudGFnRmxhZylcclxuXHRcdHtcclxuXHRcdFx0dGFnX2Rpc3BsYXkgPSAnJ1xyXG5cdFx0fVxyXG5cdFx0dmFyIG5ld19jb21tZW50X2J1dHRvbiA9IFwiXCIvLzxidXR0b24gb25DbGljayA9IHt0aGlzLm9wZW5OZXdDb21tZW50LmJpbmQodGhpcyl9IHR5cGU9J2J1dHRvbicgY2xhc3NOYW1lID0gJ2JlZ2luX2NvbW1lbnQnPkNvbW1lbnQ8L2J1dHRvbj5cclxuXHRcdGlmICh0aGlzLnByb3BzLmdsb2JhbF9wb3N0ICE9IHVuZGVmaW5lZClcclxuXHRcdHtcclxuXHRcdFx0bmV3X2NvbW1lbnRfYnV0dG9uID0gdW5kZWZpbmVkXHJcblx0XHR9XHJcblxyXG5cdFx0dmFyIHByb2ZpbGVfcGljdHVyZSA9IFwiIzE4ODI3NVwiXHJcblxyXG5cdFx0cmV0dXJuIChcclxuXHRcdFx0PGRpdiBzdHlsZSA9IHt7cG9zaXRpb246J3JlbGF0aXZlJywgbGVmdDogJzEwcHgnLCBtYXhXaWR0aDonMTAwMHB4J319PlxyXG5cdFx0XHRcdDxkaXYgc3R5bGUgPSB7e3dpZHRoOicxMDAwcHgnLCBkaXNwbGF5OidmbGV4JywgZmxleERpcmVjdGlvbjoncm93J319PlxyXG5cdFx0XHRcdFx0PGRpdiBzdHlsZSA9IHt7Ym9yZGVyUmFkaXVzOiAnNTAlJywgYmFja2dyb3VuZENvbG9yOnByb2ZpbGVfcGljdHVyZSwgcG9zaXRpb246J3JlbGF0aXZlJywgbGVmdDonMTBweCcsIHdpZHRoOic0MHB4JywgaGVpZ2h0Oic0MHB4J319PlxyXG5cdFx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0XHQ8dGV4dGFyZWEgcmVmID0ge3RoaXMuY29udGVudFJlZn0gc3R5bGUgPSB7e3Bvc2l0aW9uOidyZWxhdGl2ZScsIGhlaWdodDonNDBweCcsIGxlZnQ6ICc0MHB4Jywgd2lkdGg6JzgyMHB4JywgYm9yZGVyUmFkaXVzOic3cHgnLCBib3JkZXI6JzFweCBzb2xpZCBibGFjayd9fSBwbGFjZWhvbGRlciA9IFwiICBDb21tZW50IEhlcmUuLlwiPjwvdGV4dGFyZWE+XHJcblx0XHRcdFx0XHQ8YnV0dG9uIG9uQ2xpY2sgPSB7dGhpcy5zdWJtaXROZXdDb21tZW50LmJpbmQodGhpcyl9IHN0eWxlPXt7cG9zaXRpb246J3JlbGF0aXZlJywgd2lkdGg6JzkycHgnLCBsZWZ0Oic0MHB4J319IHR5cGU9J2J1dHRvbicgY2xhc3NOYW1lPSdzdWJtaXRfbmV3X2NvbW1lbnQgZ3JheUJ1dHRvbicgaWQgPSB7dGhpcy5wcm9wcy5jb21tZW50X2lkfT5zdWJtaXQ8L2J1dHRvbj5cclxuXHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0XHR7bmV3X2NvbW1lbnRfYnV0dG9ufVxyXG5cdFx0XHRcdHt0aGlzLm5ld19jb21tZW50fVxyXG5cdFx0XHRcdDxici8+XHJcblx0XHRcdFx0e3RoaXMuY29tbWVudHMubWFwKChjb21tZW50KSA9PiB7cmV0dXJuIGNvbW1lbnR9KX1cclxuXHRcdFx0XHQ8ZGl2IHN0eWxlID0ge3twb3NpdGlvbjonZml4ZWQnLCB3aWR0aDogJzIwMHB4JywgaGVpZ2h0OiczMDBweCcsIHJpZ2h0OicxMCUnLCB0b3A6JzIwMHB4JywgYmFja2dyb3VuZENvbG9yOid3aGl0ZScsIGRpc3BsYXk6dGFnX2Rpc3BsYXksIHpJbmRleDoxNSwgb3ZlcmZsb3c6J3Njcm9sbCd9fSA+XHJcblx0XHRcdFx0XHR7dGhpcy50YWdMaXN0fVxyXG5cdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHQ8L2Rpdj5cclxuXHRcdCk7XHJcblx0fVxyXG59IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IFN0YW5kYXJkSGVhZGVyIGZyb20gJy4vc3RhbmRhcmRfaGVhZGVyLmpzJ1xyXG5pbXBvcnQgQ29tbWVudFNlY3Rpb24gZnJvbSAnLi9jb21tZW50cy5qcydcclxuaW1wb3J0IHV0aWxzIGZyb20gJy4vdXRpbHMuanMnXHJcbmltcG9ydCB0YWdfdXRpbHMgZnJvbSAnLi90YWdfdXRpbHMuanMnXHJcblxyXG5jbGFzcyBVc2VyUG9zdENvbnRlbnQgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQgXHJcbntcclxuXHRjb25zdHJ1Y3Rvcihwcm9wcylcclxuXHR7XHJcblx0XHRzdXBlcihwcm9wcyk7XHJcblx0XHR0aGlzLmxpa2VzX3Njb3JlID0gdGhpcy5wcm9wcy5kYXRhLmxpa2VzIC0gcHJvcHMuZGF0YS5kaXNsaWtlcztcclxuXHRcdHRoaXMubGlrZVJlZiA9IFJlYWN0LmNyZWF0ZVJlZigpO1xyXG5cdFx0dGhpcy5kaXNsaWtlUmVmID0gUmVhY3QuY3JlYXRlUmVmKCk7XHJcblx0XHR0aGlzLmxpa2Vfc3RhdGUgPSAtMVxyXG5cclxuXHRcdHRoaXMudXBfY29sb3IgPSBcIiMyRjM4NDZcIlxyXG5cdFx0dGhpcy5kb3duX2NvbG9yID0gXCIjMkYzODQ2XCJcclxuXHRcdHRoaXMuZWRpdF9jb250ZW50ID0gPGRpdj48L2Rpdj5cclxuXHRcdHRoaXMuY29udGVudFJlZiA9IFJlYWN0LmNyZWF0ZVJlZigpXHJcblx0XHR0aGlzLnBvdGVudGlhbF90YWdzID0gW11cclxuXHRcdGlmICh0aGlzLnByb3BzLnVzZXJuYW1lID09IHRoaXMucHJvcHMuZGF0YS51c2VybmFtZSlcclxuXHRcdHtcclxuXHRcdFx0dGhpcy5lZGl0X2NvbnRlbnQgPSA8YnV0dG9uIG9uQ2xpY2s9e3RoaXMuZWRpdENvbnRlbnQuYmluZCh0aGlzKX0+IEVkaXQgQ29udGVudCA8L2J1dHRvbj47XHJcblxyXG5cdFx0XHR2YXIgdGFnc190ZW1wID0ge31cclxuXHRcdFx0XHJcblx0XHRcdGlmICh0aGlzLnByb3BzLmRhdGEudGFncyAhPSB1bmRlZmluZWQpXHJcblx0XHRcdHtcclxuXHRcdFx0XHR0YWdzX3RlbXAgPSBKU09OLnBhcnNlKHRoaXMucHJvcHMuZGF0YS50YWdzKVxyXG5cdFx0XHR9XHJcblx0XHRcdFxyXG5cclxuXHRcdFx0dmFyIHRhZ19rZXlzID0gT2JqZWN0LmtleXModGFnc190ZW1wKVxyXG5cdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IHRhZ19rZXlzLmxlbmd0aDsgKytpKVxyXG5cdFx0XHR7XHJcblx0XHRcdFx0aWYgKHRhZ3NfdGVtcFt0YWdfa2V5c1tpXV0ubGVuZ3RoID49IDUgKVxyXG5cdFx0XHRcdHtcclxuXHRcdFx0XHRcdHRoaXMucG90ZW50aWFsX3RhZ3MucHVzaCh0YWdzX3RlbXBbdGFnX2tleXNbaV1dKVxyXG5cdFx0XHRcdH1cclxuXHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHRcdHRoaXMudGFnRmxhZyA9IGZhbHNlXHJcblx0XHR0aGlzLmN1cnJlbnRUYWcgPSBcIlwiXHJcblx0XHR0aGlzLnRhZ0xpc3QgPSBbXVxyXG5cdFx0dGhpcy5hcnRpc3RzID0gW11cclxuXHRcdHRoaXMudXNlcnMgPSBbXVxyXG5cdFx0dGhpcy5hcnRpc3RTZWFyY2ggPSBmYWxzZVxyXG5cdFx0dGhpcy5jdXJyZW50QXJ0aXN0ID0gXCJcIlxyXG5cdFx0dGhpcy5zb25nc19hbmRfYWxidW1zID0gW11cclxuXHRcdFxyXG5cdFx0dGhpcy5hcnRpc3RGbGFnID0gZmFsc2VcclxuXHRcdHRoaXMubGFzdENvbnRlbnRTaXplID0gMFxyXG5cdFx0dGhpcy50YWdnZWQgPSBmYWxzZVxyXG5cclxuXHRcdHRoaXMucG9zdFJlZiA9IFJlYWN0LmNyZWF0ZVJlZigpXHJcblx0XHR0aGlzLnBvc3RfaGVpZ2h0ID0gJzU4MHB4J1xyXG5cdH1cclxuXHJcblx0cmVuZGVyaWZyYW1lKGlmcmFtZSkge1xyXG5cdFx0cmV0dXJuIHtcclxuXHRcdFx0X19odG1sOiBpZnJhbWVcclxuXHRcdH07XHJcblx0fVxyXG5cclxuXHRlZGl0Q29udGVudCgpXHJcblx0e1xyXG5cdFx0dGhpcy5lZGl0X2NvbnRlbnQgPSA8ZGl2PlxyXG5cdFx0XHRcdFx0XHRcdFx0PHRleHRhcmVhIG9uQ2hhbmdlID0ge3RoaXMuY29udGVudElucHV0LmJpbmQodGhpcyl9IHJlZiA9IHt0aGlzLmNvbnRlbnRSZWZ9IGlkID0gXCJjb250ZW50XCIgbmFtZT1cImNvbnRlbnRcIiByb3dzPVwiMTVcIiBjb2xzPVwiMTE3XCIgPnt0aGlzLnByb3BzLmRhdGEuY29udGVudH08L3RleHRhcmVhPlxyXG5cdFx0XHRcdFx0XHRcdFx0PGJ1dHRvbiBvbkNsaWNrID0ge3RoaXMuc3VibWl0RWRpdENvbW1lbnQuYmluZCh0aGlzKX0gc3R5bGU9e3twb3NpdGlvbjoncmVsYXRpdmUnfX0gdHlwZT0nYnV0dG9uJyBjbGFzcz0nc3VibWl0X25ld19jb21tZW50JyBpZCA9IHt0aGlzLnByb3BzLmNvbW1lbnRfaWR9PnN1Ym1pdDwvYnV0dG9uPlxyXG5cdFx0XHRcdFx0XHRcdFx0PGJ1dHRvbiBvbkNsaWNrID0ge3RoaXMuY2xvc2VFZGl0Q29tbWVudC5iaW5kKHRoaXMpfSBzdHlsZT17e3Bvc2l0aW9uOidyZWxhdGl2ZSd9fSB0eXBlPSdidXR0b24nIGNsYXNzPSdjbG9zZV9uZXdfY29tbWVudCcgaWQgPSB7dGhpcy5wcm9wcy5jb21tZW50X2lkfT5jbG9zZTwvYnV0dG9uPlxyXG5cdFx0XHRcdFx0XHRcdDwvZGl2PlxyXG5cdFx0dGhpcy5sYXN0Q29udGVudFNpemUgPSB0aGlzLnByb3BzLmRhdGEuY29udGVudC5sZW5ndGhcclxuXHRcdHRoaXMuZm9yY2VVcGRhdGUoKVxyXG5cdFx0XHJcblx0fVxyXG5cclxuXHRjb250ZW50SW5wdXQoKVxyXG5cdHtcclxuXHRcdHZhciBpbnB1dCA9IGV2ZW50LnRhcmdldC52YWx1ZTtcclxuICAgIFx0Ly92YXIgc29uZ19zdHIgPSAkKFwiI3NvbmdcIikudmFsKCk7XHJcblx0XHR2YXIgY29udGVudF9zdHIgPSB0aGlzLmNvbnRlbnRSZWYuY3VycmVudC52YWx1ZTtcclxuXHRcdC8vdXBkYXRlIGFuZCBwcnVuZSB0YWdzIGxpc3QgXHJcblx0XHR0YWdfdXRpbHMuZ2V0VGFncyh0aGlzKVxyXG4gICAgXHR0aGlzLmxhc3RDb250ZW50U2l6ZSA9IHRoaXMuY29udGVudFJlZi5jdXJyZW50LnZhbHVlLmxlbmd0aFxyXG5cdCAgIFx0dGhpcy5mb3JjZVVwZGF0ZSgpO1xyXG5cdH1cclxuXHJcblx0c2VsZWN0VGFnKGUpXHJcblx0e1xyXG5cdFx0dGFnX3V0aWxzLnRhZ0NsaWNrZWQodGhpcywgZSlcclxuXHR9XHJcblxyXG5cdGNsb3NlRWRpdENvbW1lbnQoKVxyXG5cdHtcclxuXHRcdHRoaXMuZWRpdF9jb250ZW50ID0gPGJ1dHRvbiBvbkNsaWNrPXt0aGlzLmVkaXRDb250ZW50LmJpbmQodGhpcyl9PiBFZGl0IENvbnRlbnQgPC9idXR0b24+O1xyXG5cdFx0dGhpcy50YWdGbGFnID0gZmFsc2VcclxuXHRcdHRoaXMuZm9yY2VVcGRhdGUoKVxyXG5cdH1cclxuXHJcblx0c3VibWl0RWRpdENvbW1lbnQoKVxyXG5cdHtcclxuXHRcdHZhciB0aGF0ID0gdGhpcztcclxuXHRcdHZhciBzdWJtaXRfdGV4dCA9IHRoaXMuY29udGVudFJlZi5jdXJyZW50LnZhbHVlXHJcblx0XHR0aGlzLnByb3BzLmRhdGEuY29udGVudCA9IHN1Ym1pdF90ZXh0O1xyXG5cdCAgICBmZXRjaChcIi9lZGl0X2NvbnRlbnRcIiwge1xyXG5cdCAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcclxuXHQgICAgICAgIGhlYWRlcnM6IHtcclxuXHQgICAgICAgIFx0QWNjZXB0OiAnYXBwbGljYXRpb24vanNvbicsXHJcblx0ICAgICAgICBcdCdBdXRob3JpemF0aW9uJzogJ0Jhc2ljJyxcclxuXHQgICAgICAgIFx0J0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuXHQgICAgICAgIH0sXHJcblxyXG5cdCAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe2lkOiB0aGlzLnByb3BzLmRhdGEucG9zdF9pZCwgXHJcblx0ICAgICAgICBcdFx0XHRcdFx0ICBwb3N0ZXI6IHRoaXMucHJvcHMuZGF0YS51c2VybmFtZSxcclxuXHQgICAgICAgIFx0XHRcdFx0XHQgIHRpdGxlOiB0aGlzLnByb3BzLmRhdGEudGl0bGUsXHJcblx0ICAgICAgICBcdFx0XHRcdFx0ICB0ZXh0OiB0aGlzLmNvbnRlbnRSZWYuY3VycmVudC52YWx1ZSxcclxuXHQgICAgICAgIFx0XHRcdFx0XHQgIHBvdGVudGlhbFRhZ3M6IHRoaXMucG90ZW50aWFsX3RhZ3N9KX0pXHJcblx0ICAgIC50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7IHJldHVybiByZXNwb25zZS5qc29uKCk7fSlcclxuXHQgICAgLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsgXHJcblxyXG5cdCAgICB9KVxyXG5cdCAgICB0aGlzLnRhZ0ZsYWcgPSBmYWxzZVxyXG5cdCAgICB0aGlzLmNsb3NlRWRpdENvbW1lbnQoKTtcclxuXHR9XHJcblxyXG5cdGxpa2VDbGlja2VkKClcclxuXHR7XHJcblx0XHRpZiAoIXV0aWxzLmNoZWNrTG9nZ2VkSW4oKSlcclxuXHRcdHtcclxuXHRcdFx0YWxlcnQoXCJNVVNUIEJFIExPR0dFRCBJTlwiKVxyXG5cdFx0XHRyZXR1cm47XHJcblx0XHR9XHJcblx0XHR2YXIgdGhhdCA9IHRoaXM7XHJcblx0ICAgIGZldGNoKFwiL2xpa2VcIiwge1xyXG5cdCAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcclxuXHQgICAgICAgIGhlYWRlcnM6IHtcclxuXHQgICAgICAgIFx0QWNjZXB0OiAnYXBwbGljYXRpb24vanNvbicsXHJcblx0ICAgICAgICBcdCdBdXRob3JpemF0aW9uJzogJ0Jhc2ljJyxcclxuXHQgICAgICAgIFx0J0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuXHQgICAgICAgIH0sXHJcblx0ICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7dXNlcjogdGhhdC5wcm9wcy5kYXRhLnVzZXJuYW1lLCBpZDogdGhpcy5wcm9wcy5kYXRhLmlkLCBuYW1lOiB0aGlzLnByb3BzLmRhdGEudGl0bGV9KX0pXHJcblx0ICAgIC50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7IHJldHVybiByZXNwb25zZS5qc29uKCk7fSlcclxuXHQgICAgLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsgICAgXHRcclxuXHQgICAgXHQvLyB0aGF0Lmxpa2VzX3Njb3JlID0gZGF0YS5saWtlc19zY29yZTtcclxuXHQgICAgXHQvLyB0aGF0Lmxpa2Vfc3RhdGUgPSBkYXRhLmxpa2Vfc3RhdGU7XHJcblx0ICAgIFx0Ly8gaWYgKHRoYXQubGlrZV9zdGF0ZSA9PSAxKVxyXG5cdCAgICBcdC8vIHtcclxuXHQgICAgXHQvLyBcdHRoYXQubGlrZVJlZi5jdXJyZW50LnN0eWxlLmNvbG9yID0gJ2JsdWUnXHJcblx0ICAgIFx0Ly8gXHR0aGF0LmRpc2xpa2VSZWYuY3VycmVudC5zdHlsZS5jb2xvciA9ICdibGFjaydcclxuXHQgICAgXHQvLyB9XHJcblx0ICAgIFx0Ly8gZWxzZSBpZiAodGhhdC5saWtlX3N0YXRlID09IDApXHJcblx0ICAgIFx0Ly8ge1xyXG5cdCAgICBcdC8vIFx0dGhhdC5saWtlUmVmLmN1cnJlbnQuc3R5bGUgPSAnYmxhY2snXHJcblx0ICAgIFx0Ly8gXHR0aGF0LmRpc2xpa2VSZWYuY3VycmVudC5zdHlsZS5jb2xvciA9ICdyZWQnXHJcblx0ICAgIFx0Ly8gfVxyXG5cdCAgICBcdC8vIGVsc2VcclxuXHQgICAgXHQvLyB7XHJcblx0ICAgIFx0Ly8gXHR0aGF0Lmxpa2VSZWYuY3VycmVudC5zdHlsZSA9ICdibGFjaydcclxuXHQgICAgXHQvLyBcdHRoYXQuZGlzbGlrZVJlZi5jdXJyZW50LnN0eWxlLmNvbG9yID0gJ2JsYWNrJ1x0ICAgIFx0XHRcclxuXHQgICAgXHQvLyB9XHJcblx0ICAgIFx0Ly90aGF0LmZvcmNlVXBkYXRlKCk7XHJcblx0IFx0fSlcdFxyXG4gICAgXHRpZiAodGhpcy5wcm9wcy5saWtlX3N0YXRlID09IDEpXHJcbiAgICBcdHtcclxuICAgICAgIFx0XHR0aGlzLmxpa2VzX3Njb3JlIC09IDE7XHJcbiAgICBcdFx0Ly8gdGhpcy5saWtlUmVmLmN1cnJlbnQuc3R5bGUgPSAnYmxhY2snXHJcbiAgICBcdFx0Ly8gdGhpcy5kaXNsaWtlUmVmLmN1cnJlbnQuc3R5bGUuY29sb3IgPSAnYmxhY2snXHJcbiAgICBcdFx0dGhpcy5wcm9wcy5saWtlX3N0YXRlID0gLTE7XHJcbiAgICBcdFx0dGhpcy51cF9jb2xvciA9IFwiIzJGMzg0NlwiXHJcbiAgICBcdH1cclxuICAgIFx0ZWxzZVxyXG4gICAgXHR7XHJcbiAgICBcdFx0aWYgKHRoaXMucHJvcHMubGlrZV9zdGF0ZSA9PSAtMSlcclxuICAgIFx0XHR7XHJcbiAgICBcdFx0XHR0aGlzLmxpa2VzX3Njb3JlICs9IDE7XHJcbiAgICBcdFx0fVxyXG4gICAgXHRcdGVsc2UgXHJcbiAgICBcdFx0e1xyXG4gICAgXHRcdFx0dGhpcy5saWtlc19zY29yZSArPSAyO1xyXG4gICAgXHRcdH1cclxuICAgIFx0XHQvLyB0aGlzLmxpa2VSZWYuY3VycmVudC5zdHlsZSA9ICdibHVlJ1xyXG4gICAgXHRcdC8vIHRoaXMuZGlzbGlrZVJlZi5jdXJyZW50LnN0eWxlLmNvbG9yID0gJ2JsYWNrJ1xyXG4gICAgXHRcdHRoaXMudXBfY29sb3IgPSBcIiMxNDg1Y2NcIlxyXG4gICAgXHRcdHRoaXMuZG93bl9jb2xvciA9IFwiIzJGMzg0NlwiXHJcbiAgICBcdFx0dGhpcy5wcm9wcy5saWtlX3N0YXRlID0gMTtcclxuICAgIFx0fVxyXG5cclxuICAgIFx0dGhpcy5mb3JjZVVwZGF0ZSgpO1xyXG5cdH1cclxuXHJcblx0ZGlzbGlrZUNsaWNrZWQoKVxyXG5cdHtcclxuXHRcdGlmICghdXRpbHMuY2hlY2tMb2dnZWRJbigpKVxyXG5cdFx0e1xyXG5cdFx0XHRhbGVydChcIk1VU1QgQkUgTE9HR0VEIElOXCIpXHJcblx0XHRcdHJldHVybjtcclxuXHRcdH1cclxuXHRcdHZhciB0aGF0ID0gdGhpcztcclxuXHQgICAgZmV0Y2goXCIvZGlzbGlrZVwiLCB7XHJcblx0ICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxyXG5cdCAgICAgICAgaGVhZGVyczoge1xyXG5cdCAgICAgICAgXHRBY2NlcHQ6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuXHQgICAgICAgIFx0J0F1dGhvcml6YXRpb24nOiAnQmFzaWMnLFxyXG5cdCAgICAgICAgXHQnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxyXG5cdCAgICAgICAgfSxcclxuXHQgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHt1c2VyOiB0aGF0LnByb3BzLmRhdGEudXNlcm5hbWUsIGlkOiB0aGlzLnByb3BzLmRhdGEuaWQsIG5hbWU6IHRoYXQucHJvcHMuZGF0YS50aXRsZX0pfSlcclxuXHQgICAgLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHsgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTt9KVxyXG5cdCAgICAudGhlbihmdW5jdGlvbiAoZGF0YSkgeyAgICBcdFxyXG5cdCAgICBcdC8vIHRoYXQubGlrZXNfc2NvcmUgPSBkYXRhLmxpa2VzX3Njb3JlO1xyXG5cdCAgICBcdC8vIHRoYXQubGlrZV9zdGF0ZSA9IGRhdGEubGlrZV9zdGF0ZTtcclxuXHQgICAgXHQvLyBpZiAodGhhdC5saWtlX3N0YXRlID09IDEpXHJcblx0ICAgIFx0Ly8ge1xyXG5cdCAgICBcdC8vIFx0dGhhdC5saWtlUmVmLmN1cnJlbnQuc3R5bGUuY29sb3IgPSAnYmx1ZSdcclxuXHQgICAgXHQvLyBcdHRoYXQuZGlzbGlrZVJlZi5jdXJyZW50LnN0eWxlLmNvbG9yID0gJ2JsYWNrJ1xyXG5cdCAgICBcdC8vIH1cclxuXHQgICAgXHQvLyBlbHNlIGlmICh0aGF0Lmxpa2Vfc3RhdGUgPT0gMClcclxuXHQgICAgXHQvLyB7XHJcblx0ICAgIFx0Ly8gXHR0aGF0Lmxpa2VSZWYuY3VycmVudC5zdHlsZSA9ICdibGFjaydcclxuXHQgICAgXHQvLyBcdHRoYXQuZGlzbGlrZVJlZi5jdXJyZW50LnN0eWxlLmNvbG9yID0gJ3JlZCdcclxuXHQgICAgXHQvLyB9XHJcblx0ICAgIFx0Ly8gZWxzZVxyXG5cdCAgICBcdC8vIHtcclxuXHQgICAgXHQvLyBcdHRoYXQubGlrZVJlZi5jdXJyZW50LnN0eWxlID0gJ2JsYWNrJ1xyXG5cdCAgICBcdC8vIFx0dGhhdC5kaXNsaWtlUmVmLmN1cnJlbnQuc3R5bGUuY29sb3IgPSAnYmxhY2snXHRcdFxyXG5cdCAgICBcdC8vIH1cclxuXHQgICAgXHQvL3RoYXQuZm9yY2VVcGRhdGUoKTtcclxuXHQgXHR9KVx0XHJcbiAgICBcdGlmICh0aGlzLnByb3BzLmxpa2Vfc3RhdGUgPT0gMClcclxuICAgIFx0e1xyXG4gICAgXHRcdC8vIHRoaXMubGlrZVJlZi5jdXJyZW50LnN0eWxlID0gJ2JsYWNrJ1xyXG4gICAgXHRcdC8vIHRoaXMuZGlzbGlrZVJlZi5jdXJyZW50LnN0eWxlLmNvbG9yID0gJ2JsYWNrJ1x0IFxyXG4gICAgXHRcdHRoaXMudXBfY29sb3IgPSBcIiMyRjM4NDZcIlxyXG4gICAgXHRcdHRoaXMucHJvcHMubGlrZV9zdGF0ZSA9IC0xO1xyXG4gICAgXHRcdHRoaXMubGlrZXNfc2NvcmUgKz0gMTtcclxuICAgIFx0fVxyXG4gICAgXHRlbHNlXHJcbiAgICBcdHtcclxuICAgIFx0XHRpZiAodGhpcy5wcm9wcy5saWtlX3N0YXRlID09IC0xKVxyXG4gICAgXHRcdHtcclxuICAgIFx0XHRcdHRoaXMubGlrZXNfc2NvcmUgLT0gMTtcclxuICAgIFx0XHR9XHJcbiAgICBcdFx0ZWxzZSBcclxuICAgIFx0XHR7XHJcbiAgICBcdFx0XHR0aGlzLmxpa2VzX3Njb3JlIC09IDI7XHJcbiAgICBcdFx0fVxyXG4gICAgXHRcdC8vIHRoaXMubGlrZVJlZi5jdXJyZW50LnN0eWxlID0gJ2JsYWNrJ1xyXG4gICAgXHRcdC8vIHRoaXMuZGlzbGlrZVJlZi5jdXJyZW50LnN0eWxlLmNvbG9yID0gJ3JlZCdcclxuICAgIFx0XHR0aGlzLmRvd25fY29sb3IgPSBcIiNkZDNkM2RcIlxyXG4gICAgXHRcdHRoaXMudXBfY29sb3IgPSBcIiMyRjM4NDZcIlxyXG4gICAgXHRcdHRoaXMucHJvcHMubGlrZV9zdGF0ZSA9IDA7XHJcblxyXG4gICAgXHR9XHJcbiAgICBcdHRoaXMuZm9yY2VVcGRhdGUoKTtcclxuXHJcblx0fVxyXG5cclxuXHRjb21wb25lbnREaWRNb3VudCgpIHtcclxuXHQgICAgdGhpcy5wb3N0X2hlaWdodCA9IHRoaXMucG9zdFJlZi5jdXJyZW50LmNsaWVudEhlaWdodCArMjVcclxuXHQgICAgdGhpcy5mb3JjZVVwZGF0ZSgpO1xyXG5cdH1cdFxyXG5cclxuXHJcblx0cmVuZGVyKClcclxuXHR7XHJcblx0XHR2YXIgbGlrZV9zdHlsZSA9IHtjb2xvcjonYmxhY2snfVxyXG5cdFx0dmFyIGRpc2xpa2Vfc3R5bGUgPSB7Y29sb3I6J2JsYWNrJ31cclxuXHRcdGlmICh0aGlzLnByb3BzLmxpa2Vfc3RhdGUgPT0gMSlcclxuXHRcdHtcclxuXHRcdFx0bGlrZV9zdHlsZS5jb2xvciA9ICdibHVlJztcclxuXHRcdFx0dGhpcy51cF9jb2xvciA9IFwiIzE0ODVjY1wiXHJcblx0XHR9XHJcblx0XHRlbHNlIGlmICh0aGlzLnByb3BzLmxpa2Vfc3RhdGUgPT0gMClcclxuXHRcdHtcclxuXHRcdFx0ZGlzbGlrZV9zdHlsZS5jb2xvciA9ICdyZWQnO1xyXG5cdFx0XHR0aGlzLmRvd25fY29sb3IgPSBcIiNkZDNkM2RcIlxyXG5cdFx0fVxyXG5cclxuXHRcdHZhciBjb250ZW50X2RpdiA9IFtdXHJcblxyXG5cdFx0Y29udGVudF9kaXYgPSB0YWdfdXRpbHMuZm9ybWF0Q29udGVudCh0aGlzLnByb3BzLmRhdGEuY29udGVudCwgdGhpcy5wcm9wcy5kYXRhLnRhZ3MpXHJcblx0XHR2YXIgcG9zdF9pZCA9IHRoaXMucHJvcHMuZGF0YS5pZDtcclxuXHRcdHZhciBkYXRlID0gbmV3IERhdGUodGhpcy5wcm9wcy5kYXRhLnRpbWVzdGFtcClcclxuXHRcdC8vPGRpdiBzdHlsZSA9IHt7cG9zaXRpb246J3JlbGF0aXZlJywgdGV4dEFsaWduOidjZW50ZXInLCBwYWRkaW5nVG9wOic4cHgnLCBmb250U2l6ZTonM2VtJ319Pnt0aGlzLnByb3BzLmRhdGEudGl0bGV9PC9kaXY+XHJcblx0XHR2YXIgY29udGVudF91cmwgPSBcIi9wb3N0L1wiICsgdGhpcy5wcm9wcy5kYXRhLmFydGlzdCArIFwiL1wiICsgdGhpcy5wcm9wcy5kYXRhLnNvbmc7XHJcblx0XHR2YXIgY29udGVudF9uYW1lID0gdGhpcy5wcm9wcy5kYXRhLnNvbmc7XHJcblxyXG5cdFx0aWYgKHRoaXMucHJvcHMuZGF0YS5zb25nID09IFwiTk9fU09OR19BTEJVTV9PTkxZXCIpXHJcblx0XHR7XHJcblx0XHRcdGNvbnRlbnRfdXJsID0gXCIvYWxidW0vXCIgKyB0aGlzLnByb3BzLmRhdGEuYXJ0aXN0ICsgXCIvXCIgKyB0aGlzLnByb3BzLmRhdGEuYWxidW07XHJcblx0XHRcdGNvbnRlbnRfbmFtZSA9IHRoaXMucHJvcHMuZGF0YS5hbGJ1bTtcclxuXHRcdH1cclxuXHJcblx0XHR2YXIgYXJ0aXN0X25hbWVzID0gW11cclxuXHRcdHRoaXMucHJvcHMuZGF0YS5hcnRpc3Quc3BsaXQoJ14nKS5tYXAoKGl0ZW0sIGkpID0+IHtcclxuXHRcdFx0YXJ0aXN0X25hbWVzLnB1c2goPGEga2V5ID0ge2l9IGhyZWYgPXtcIi9hcnRpc3QvXCIgKyBpdGVtfSA+IHtpdGVtfSA8L2E+KTtcclxuXHRcdFx0YXJ0aXN0X25hbWVzLnB1c2goJywnKVxyXG5cdFx0fSlcclxuXHRcdGFydGlzdF9uYW1lcyA9IGFydGlzdF9uYW1lcy5zbGljZSgwLCBhcnRpc3RfbmFtZXMubGVuZ3RoLTEpXHJcblxyXG5cdFx0dmFyIHRhZ19kaXNwbGF5ID0gJ25vbmUnXHJcblx0XHRpZiAodGhpcy50YWdGbGFnKVxyXG5cdFx0e1xyXG5cdFx0XHR0YWdfZGlzcGxheSA9ICcnXHJcblx0XHR9XHJcblxyXG5cdFx0dmFyIGNvbnRlbnRfbGluayA9IFwiL3Bvc3QvXCIgKyB0aGlzLnByb3BzLmRhdGEuYXJ0aXN0ICsgXCIvXCIgKyB0aGlzLnByb3BzLmRhdGEuc29uZ1xyXG5cdFx0dmFyIGNvbnRlbnRfbmFtZSA9IHRoaXMucHJvcHMuZGF0YS5zb25nXHJcblx0XHRpZiAodGhpcy5wcm9wcy5kYXRhLnNvbmcgPT0gXCJOT19TT05HX0FMQlVNX09OTFlcIilcclxuXHRcdHtcclxuXHRcdFx0Y29udGVudF9saW5rID0gXCIvYWxidW0vXCIgKyB0aGlzLnByb3BzLmRhdGEuYXJ0aXN0ICsgXCIvXCIgKyB0aGlzLnByb3BzLmRhdGEuYWxidW1cclxuXHRcdFx0Y29udGVudF9uYW1lID0gdGhpcy5wcm9wcy5kYXRhLmFsYnVtXHJcblx0XHR9XHJcblxyXG5cdFx0cmV0dXJuIChcclxuXHRcdFx0PGRpdiByZWYgPSB7dGhpcy5wb3N0UmVmfSBrZXkgPSB7dGhpcy5wcm9wcy5kYXRhLnBvc3RfaWR9IHN0eWxlID0ge3tib3JkZXI6ICcxcHggc29saWQgI0YxRjFGMScsIGJvcmRlclJhZGl1czogJzdweCcsIHdpZHRoOic5ODBweCcsIGJhY2tncm91bmQ6J3doaXRlJywgbWluSGVpZ2h0Oic1ODBweCcsIHBvc2l0aW9uOidyZWxhdGl2ZScsIHRvcDonMTBweCcsIGxlZnQ6JzEwcHgnLCBtYXJnaW46JzBweCBhdXRvJ319PlxyXG5cclxuXHRcdFx0XHRcdDxkaXYgc3R5bGUgPSB7e3BhZGRpbmdUb3A6JzMwcHgnLCBwYWRkaW5nTGVmdDonMTBweCcsIHBhZGRpbmdSaWdodDonMTBweCcsIHdpZHRoOic5ODBweCcsIHBvc2l0aW9uOidyZWxhdGl2ZScsIG1pbkhlaWdodDonNTQ1cHgnfX0+XHJcblx0XHRcdFx0XHRcdDxkaXYgc3R5bGUgPSB7e2Rpc3BsYXk6J2ZsZXgnLCBmbGV4RGlyZWN0aW9uOidyb3cnLCBmbG9hdDonbGVmdCcsIHdpZHRoOiczMzBweCcsIHBhZGRpbmdMZWZ0OicxMHB4JywgYm9yZGVyUmFkaXVzOic3cHgnLCBib3JkZXJUb3BSaWdodFJhZGl1czogJzBweCcsIGJvcmRlckJvdHRvbVJpZ2h0UmFkaXVzOiAnMHB4J319PlxyXG5cdFx0XHRcdFx0XHRcdDxkaXYgc3R5bGUgPSB7e3BhZGRpbmdSaWdodDonMTBweCd9fT5cclxuXHRcdFx0XHRcdFx0XHRcdDxkaXYgc3R5bGUgPSB7e2Rpc3BsYXk6J2ZsZXgnLCBmbGV4RGlyZWN0aW9uOidyb3cnfX0+XHJcblx0XHRcdFx0XHRcdFx0XHRcdDxkaXYgc3R5bGUgPSB7e3dpZHRoOic2NXB4JywgaGVpZ2h0Oic2NXB4JywgYmFja2dyb3VuZENvbG9yOnRoaXMucHJvcHMudXNlcl9wcm9maWxlLCBib3JkZXJSYWRpdXM6JzUwJSd9fT5cclxuXHRcdFx0XHRcdFx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0XHRcdFx0XHRcdDxkaXYgc3R5bGUgPSB7e3BhZGRpbmdMZWZ0OicyMHB4J319PlxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdDxkaXYgc3R5bGUgPSB7e2ZvbnRTaXplOicyNHB4JywgZm9udFdlaWdodDonYm9sZCd9fT4gPGEgaHJlZiA9e1wiL3VzZXIvXCIgKyB0aGlzLnByb3BzLmRhdGEudXNlcm5hbWV9ID4ge3RoaXMucHJvcHMuZGF0YS51c2VybmFtZX08L2E+PC9kaXY+XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0PGRpdiBzdHlsZSA9IHt7Zm9udFNpemU6JzE3cHgnLCBwYWRkaW5nUmlnaHQ6JzEwcHgnfX0+eyB1dGlscy5tb250aE5hbWVzW3BhcnNlSW50KGRhdGUuZ2V0TW9udGgoKSldKyBcIiBcIiArIGRhdGUuZ2V0RGF0ZSgpICsgXCIsIFwiICsgZGF0ZS5nZXRGdWxsWWVhcigpfTwvZGl2PlxyXG5cdFx0XHRcdFx0XHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0XHRcdFx0XHRcdDwvZGl2PlxyXG5cclxuXHRcdFx0XHRcdFx0XHRcdDxkaXYgc3R5bGUgPSB7e3BhZGRpbmdUb3A6JzMwcHgnfX0+PHNwYW4gZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw9e3RoaXMucmVuZGVyaWZyYW1lKHRoaXMucHJvcHMuZGF0YS5lbWJlZGRlZF9jb250ZW50KX0+PC9zcGFuPlxyXG5cdFx0XHRcdFx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0XHRcdFx0XHQ8ZGl2IHN0eWxlID0ge3t3aWR0aDonMzAwcHgnLCBoZWlnaHQ6JzQwcHgnLCBkaXNwbGF5OidmbGV4JywgZmxleERpcmVjdGlvbjoncm93JywgcGFkZGluZ1RvcDonNXB4JywgZm9udFNpemU6JzEuMmVtJywgY29sb3I6JyMyRjM4NDYnLCBvcGFjaXR5OicuNid9fT5cclxuXHRcdFx0XHRcdFx0XHRcdFx0PGEgaHJlZiA9IHtcIi9hcnRpc3QvXCIgKyB0aGlzLnByb3BzLmRhdGEuYXJ0aXN0fT4ge3RoaXMucHJvcHMuZGF0YS5hcnRpc3R9IDwvYT5cclxuXHRcdFx0XHRcdFx0XHRcdFx0PGRpdiBzdHlsZSA9IHt7cGFkZGluZ0xlZnQ6JzEwcHgnLCBwYWRkaW5nUmlnaHQ6JzEwcHgnfX0+LTwvZGl2PlxyXG5cdFx0XHRcdFx0XHRcdFx0XHQ8YSBocmVmID0ge2NvbnRlbnRfbGlua30+IHtjb250ZW50X25hbWV9IDwvYT4gIFxyXG5cdFx0XHRcdFx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0XHRcdFx0PC9kaXY+XHRcclxuXHJcblx0XHRcdFx0XHRcdFx0PGRpdiBzdHlsZSA9IHt7d2lkdGg6JzEwcHgnLCBoZWlnaHQ6JzUwMHB4JywgYm9yZGVyTGVmdDonMXB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4wOSknfX0+XHJcblx0XHRcdFx0XHRcdFx0PC9kaXY+XHRcclxuXHRcdFx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0XHRcdDxkaXYgc3R5bGUgPSB7e2ZvbnRXZWlnaHQ6J2JvbGQnLCBmb250U2l6ZTonMjRweCcsIG1hcmdpbjogJzBweCBhdXRvJywgcGFkZGluZ0JvdHRvbTonMTBweCd9fT5cclxuXHRcdFx0XHRcdFx0XHR7dGhpcy5wcm9wcy5kYXRhLnRpdGxlfVxyXG5cdFx0XHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0XHRcdFx0PGRpdiBzdHlsZSA9IHt7bWluSGVpZ2h0Oic0NTVweCcsIHdoaXRlU3BhY2U6J3ByZS13cmFwJ319PlxyXG5cdFx0XHRcdFx0XHRcdHtjb250ZW50X2Rpdn1cclxuXHRcdFx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0XHRcdFx0XHRcdDxkaXYgc3R5bGUgPSB7e2hlaWdodDonMzVweCcsIGRpc3BsYXk6J2ZsZXgnLCBmbGV4RGlyZWN0aW9uOidyb3cnLCB6SW5kZXg6JzknfX0+XHJcblx0XHRcdFx0XHRcdFx0XHRcdDxkaXYgc3R5bGUgPSB7e3dpZHRoOicxNXB4JywgaGVpZ2h0OiczMHB4J319PjwvZGl2PlxyXG5cdFx0XHRcdFx0XHRcdFx0XHQ8c3ZnIG9uQ2xpY2sgPSB7dGhpcy5saWtlQ2xpY2tlZC5iaW5kKHRoaXMpfSB3aWR0aD1cIjE0XCIgaGVpZ2h0PVwiMjRcIiB2aWV3Qm94PVwiMCAwIDE2IDI3XCIgZmlsbD1cIm5vbmVcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgY29sb3IgPSAnYmx1ZSc+XHJcblx0XHRcdFx0XHRcdFx0XHRcdDxwYXRoIGQ9XCJNOC43MDcxMSAwLjk4NzM1NkM4LjMxNjU4IDAuNTk2ODMyIDcuNjgzNDIgMC41OTY4MzIgNy4yOTI4OSAwLjk4NzM1NkwwLjkyODkzMSA3LjM1MTMyQzAuNTM4NDA3IDcuNzQxODQgMC41Mzg0MDcgOC4zNzUwMSAwLjkyODkzMSA4Ljc2NTUzQzEuMzE5NDYgOS4xNTYwNiAxLjk1MjYyIDkuMTU2MDYgMi4zNDMxNSA4Ljc2NTUzTDggMy4xMDg2OEwxMy42NTY5IDguNzY1NTNDMTQuMDQ3NCA5LjE1NjA2IDE0LjY4MDUgOS4xNTYwNiAxNS4wNzExIDguNzY1NTNDMTUuNDYxNiA4LjM3NTAxIDE1LjQ2MTYgNy43NDE4NCAxNS4wNzExIDcuMzUxMzJMOC43MDcxMSAwLjk4NzM1NlpNOSAyNi4zMTI2TDkgMS42OTQ0Nkw3IDEuNjk0NDZMNyAyNi4zMTI2TDkgMjYuMzEyNlpcIiBmaWxsPXt0aGlzLnVwX2NvbG9yfS8+XHJcblx0XHRcdFx0XHRcdFx0XHRcdDwvc3ZnPlxyXG5cdFx0XHRcdFx0XHRcdFx0XHQ8ZGl2IHN0eWxlID0ge3ttaW5XaWR0aDonMzBweCcsIGhlaWdodDonMzBweCcsIHZlcnRpY2FsQWxpZ246ICdtaWRkbGUnLCB0ZXh0QWxpZ246ICdjZW50ZXInLCBwb3NpdGlvbjogJ3JlbGF0aXZlJywgdG9wOiAnMHB4JywgZm9udFNpemU6ICcxNnB4JywgZm9udFdlaWdodDonYm9sZCd9fT48YSBocmVmID0ge1wiL3VzZXIvXCIgKyB0aGlzLnByb3BzLmRhdGEudXNlcm5hbWUgKyBcIi9cIiArIHRoaXMucHJvcHMuZGF0YS5pZCArIFwiL2xpa2VzXCJ9ID57dGhpcy5saWtlc19zY29yZX0gPC9hPjwvZGl2PlxyXG5cclxuXHRcdFx0XHRcdFx0XHRcdFx0PHN2ZyBvbkNsaWNrID0ge3RoaXMuZGlzbGlrZUNsaWNrZWQuYmluZCh0aGlzKX0gd2lkdGg9XCIxNFwiIGhlaWdodD1cIjI0XCIgdmlld0JveD1cIjAgMCAxNiAyN1wiIGZpbGw9XCJub25lXCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPlxyXG5cdFx0XHRcdFx0XHRcdFx0XHQ8cGF0aCBkPVwiTTcuMjkyODkgMjYuMDE5N0M3LjY4MzQyIDI2LjQxMDIgOC4zMTY1OCAyNi40MTAyIDguNzA3MTEgMjYuMDE5N0wxNS4wNzExIDE5LjY1NTdDMTUuNDYxNiAxOS4yNjUyIDE1LjQ2MTYgMTguNjMyIDE1LjA3MTEgMTguMjQxNUMxNC42ODA1IDE3Ljg1MSAxNC4wNDc0IDE3Ljg1MSAxMy42NTY5IDE4LjI0MTVMOCAyMy44OTg0TDIuMzQzMTUgMTguMjQxNUMxLjk1MjYyIDE3Ljg1MSAxLjMxOTQ2IDE3Ljg1MSAwLjkyODkzMiAxOC4yNDE1QzAuNTM4NDA4IDE4LjYzMiAwLjUzODQwOCAxOS4yNjUyIDAuOTI4OTMyIDE5LjY1NTdMNy4yOTI4OSAyNi4wMTk3Wk03IDAuNjk0NDg5TDcgMjUuMzEyNkg5TDkgMC42OTQ0ODlMNyAwLjY5NDQ4OVpcIiBmaWxsPXt0aGlzLmRvd25fY29sb3J9Lz5cclxuXHRcdFx0XHRcdFx0XHRcdFx0PC9zdmc+XHJcblxyXG5cdFx0XHRcdFx0XHRcdFx0XHQ8ZGl2IHN0eWxlID0ge3t3aWR0aDonMTBweCcsIGhlaWdodDonMzBweCcsIGJvcmRlclJpZ2h0OiAnMXB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4wOSknfX0+PC9kaXY+XHJcblx0XHRcdFx0XHRcdFx0XHRcdDxkaXYgc3R5bGUgPSB7e3dpZHRoOicxMHB4JywgaGVpZ2h0OiczMHB4J319PjwvZGl2PlxyXG5cdFx0XHRcdFx0XHRcdFx0XHQ8ZGl2IHN0eWxlID0ge3t9fT48aW1nIHNyYz1cIi9zcGVlY2hfYnViYmxlLnBuZ1wiIHdpZHRoPVwiMzBcIiBoZWlnaHQ9XCIyNlwiIGFsdD1cIlwiLz48L2Rpdj5cclxuXHJcblx0XHRcdFx0XHRcdFx0XHRcdDxkaXYgc3R5bGUgPSB7e3dpZHRoOiczMHB4JywgaGVpZ2h0OiczMHB4JywgdmVydGljYWxBbGlnbjogJ21pZGRsZScsIHRleHRBbGlnbjogJ2NlbnRlcicsIHBvc2l0aW9uOiAncmVsYXRpdmUnLCB0b3A6ICcwcHgnLCBmb250U2l6ZTogJzE2cHgnLCBmb250V2VpZ2h0Oidib2xkJ319PiB7dGhpcy5wcm9wcy5udW1fY29tbWVudHN9IDwvZGl2PlxyXG5cdFx0XHRcdFx0XHRcdFx0XHQ8ZGl2IHN0eWxlID0ge3t3aWR0aDonMzBweCcsIGhlaWdodDonMzBweCcsIHZlcnRpY2FsQWxpZ246ICdtaWRkbGUnLCB0ZXh0QWxpZ246ICdjZW50ZXInLCBwb3NpdGlvbjogJ3JlbGF0aXZlJywgdG9wOiAnMHB4JywgZm9udFNpemU6ICcxNnB4JywgZm9udFdlaWdodDonYm9sZCd9fT5cclxuXHRcdFx0XHRcdFx0XHRcdFx0XHR7dGhpcy5idW1wX2J1dHRvbn1cclxuXHRcdFx0XHRcdFx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0XHRcdFx0XHQ8L2Rpdj5cdFxyXG5cdFx0XHQ8L2Rpdj5cclxuXHJcblx0XHQpO1xyXG5cclxuXHRcdFx0Ly8gPGRpdiBzdHlsZSA9IHt7YmFja2dyb3VuZDogJ3doaXRlJywgcG9zaXRpb246J3JlbGF0aXZlJywgdG9wOicxMHB4JywgcGFkZGluZ0xlZnQ6JzEwcHgnLCBoZWlnaHQ6ICdhdXRvJywgbWluSGVpZ2h0OiAnNTUwcHgnLCBtYXhXaWR0aDonOTgwcHgnLCBwYWRkaW5nQm90dG9tOicyMHB4JywgcGFkZGluZ1JpZ2h0OicxMHB4JywgbGVmdDonMTBweCcsIGJvcmRlckJvdHRvbTogJ3NvbGlkIGJsYWNrIDNweCcsIGJvcmRlclJhZGl1czogJzRweCd9fT5cclxuXHRcdFx0Ly8gXHQ8ZGl2IHN0eWxlID0ge3t9fSA+XHJcblxyXG5cdFx0XHQvLyBcdFx0PGRpdiBzdHlsZSA9IHt7ZGlzcGxheTonZmxleCcsIGZsZXhEaXJlY3Rpb246J3Jvdyd9fT5cclxuXHRcdFx0Ly8gXHRcdDxkaXYgc3R5bGU9ICB7e3dpZHRoOiczMDBweCcsIHBhZGRpbmdMZWZ0OicxMHB4JywgcGFkZGluZ1RvcDonMTBweCd9fT5cclxuXHRcdFx0Ly8gXHRcdFx0PGRpdiBzdHlsZSA9IHt7ZmxvYXQ6J2xlZnQnfX0+IDxhIGhyZWYgPXtcIi91c2VyL1wiICsgdGhpcy5wcm9wcy5kYXRhLnVzZXJuYW1lfSA+IHt0aGlzLnByb3BzLmRhdGEudXNlcm5hbWV9PC9hPjwvZGl2PlxyXG5cdFx0XHQvLyBcdFx0XHQ8ZGl2IHN0eWxlID0ge3tmbG9hdDoncmlnaHQnLCBwYWRkaW5nUmlnaHQ6JzEwcHgnfX0+eyhwYXJzZUludChkYXRlLmdldE1vbnRoKCkpICsgMSkgKyBcIi9cIiArIGRhdGUuZ2V0RGF0ZSgpICsgXCIvXCIgKyBkYXRlLmdldEZ1bGxZZWFyKCl9PC9kaXY+XHJcblx0XHRcdC8vIFx0XHRcdDxkaXYgc3R5bGUgPSB7e2NsZWFyOidib3RoJ319PnthcnRpc3RfbmFtZXN9PC9kaXY+XHJcblx0XHRcdC8vIFx0XHRcdDxkaXY+IDxhIGhyZWYgPSB7Y29udGVudF91cmx9ID57Y29udGVudF9uYW1lfSA8L2E+PC9kaXY+XHJcblx0XHRcdC8vIFx0XHQ8L2Rpdj5cclxuXHRcdFx0Ly8gXHRcdDxkaXYgc3R5bGUgPSB7e3BhZGRpbmdUb3A6JzhweCcsIHdpZHRoOic2ODBweCcsIG1hcmdpbjogJzBweCBhdXRvJywgdGV4dEFsaWduOidjZW50ZXInLCBmb250U2l6ZTonMzZweCd9fT57dGhpcy5wcm9wcy5kYXRhLnRpdGxlfTwvZGl2PlxyXG5cclxuXHRcdFx0Ly8gXHRcdDwvZGl2PlxyXG5cclxuXHRcdFx0Ly8gXHQ8L2Rpdj5cclxuXHRcdFx0Ly8gXHQ8ZGl2IHN0eWxlID0ge3tkaXNwbGF5OidpbmxpbmVCbG9jayd9fT5cclxuXHRcdFx0Ly8gXHRcdDxkaXYgc3R5bGU9e3tmbG9hdDonbGVmdCcscG9zaXRpb246J3JlbGF0aXZlJywgdG9wOicwcHgnLCBwYWRkaW5nUmlnaHQ6JzIwcHgnfX0gZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw9e3RoaXMucmVuZGVyaWZyYW1lKHRoaXMucHJvcHMuZGF0YS5lbWJlZGRlZF9jb250ZW50KX0+XHJcblx0XHRcdC8vIFx0XHQ8L2Rpdj5cclxuXHRcdFx0XHRcdFxyXG5cdFx0XHQvLyBcdFx0e2NvbnRlbnRfZGl2fVxyXG5cdFx0XHQvLyBcdFx0e3RoaXMuZWRpdF9jb250ZW50fVxyXG5cdFx0XHQvLyBcdDwvZGl2PlxyXG5cclxuXHRcdFx0Ly8gXHQ8ZGl2IHN0eWxlID0ge3tjbGVhcjonYm90aCcsIGhlaWdodDonMzVweCd9fT5cclxuXHRcdFx0Ly8gXHRcdDxkaXYgc3R5bGUgPSB7e2Zsb2F0OidsZWZ0Jywgd2lkdGg6JzE1cHgnLCBoZWlnaHQ6JzMwcHgnfX0+PC9kaXY+XHJcblx0XHRcdC8vIFx0XHQ8ZGl2IHN0eWxlID0ge3tmbG9hdDonbGVmdCd9fT48aW1nIG9uQ2xpY2sgPSB7dGhpcy5saWtlQ2xpY2tlZC5iaW5kKHRoaXMpfSBzcmM9e3RoaXMudXBfaW1hZ2V9IHdpZHRoPVwiMzBcIiBoZWlnaHQ9XCIzMFwiIGFsdD1cIlwiLz48L2Rpdj5cclxuXHRcdFx0Ly8gXHRcdDxkaXYgc3R5bGUgPSB7e3dpZHRoOic2MHB4JywgaGVpZ2h0OiczMHB4JywgZmxvYXQ6J2xlZnQnLCB2ZXJ0aWNhbEFsaWduOiAnbWlkZGxlJywgdGV4dEFsaWduOiAnY2VudGVyJywgd2lkdGg6JzYwcHgnLCBwb3NpdGlvbjogJ3JlbGF0aXZlJywgdG9wOiAnMHB4JywgZm9udFNpemU6ICcyMXB4J319Pnt0aGlzLmxpa2VzX3Njb3JlfTwvZGl2PlxyXG5cdFx0XHQvLyBcdFx0PGRpdiBzdHlsZSA9IHt7ZmxvYXQ6J2xlZnQnfX0+PGltZyBvbkNsaWNrID0ge3RoaXMuZGlzbGlrZUNsaWNrZWQuYmluZCh0aGlzKX0gc3JjPXt0aGlzLmRvd25faW1hZ2V9IHdpZHRoPVwiMzBcIiBoZWlnaHQ9XCIzMFwiIGFsdD1cIlwiLz48L2Rpdj5cclxuXHRcdFx0Ly8gXHRcdDxkaXYgc3R5bGUgPSB7e2Zsb2F0OidsZWZ0Jywgd2lkdGg6JzMwcHgnLCBoZWlnaHQ6JzMwcHgnLCBib3JkZXJSaWdodDogJzFweCBzb2xpZCBibGFjayd9fT48L2Rpdj5cclxuXHRcdFx0Ly8gXHRcdDxkaXYgc3R5bGUgPSB7e2Zsb2F0OidsZWZ0Jywgd2lkdGg6JzMwcHgnLCBoZWlnaHQ6JzMwcHgnfX0+PC9kaXY+XHJcblx0XHRcdC8vIFx0XHQ8ZGl2IHN0eWxlID0ge3tmbG9hdDonbGVmdCd9fT48aW1nIHNyYz1cIi9zbWFsbF9jb21tZW50LnBuZ1wiIHdpZHRoPVwiMzBcIiBoZWlnaHQ9XCIzMFwiIGFsdD1cIlwiLz48L2Rpdj5cclxuXHRcdFx0Ly8gXHRcdDxkaXYgc3R5bGUgPSB7e3dpZHRoOic2MHB4JywgaGVpZ2h0OiczMHB4JywgZmxvYXQ6J2xlZnQnLCB2ZXJ0aWNhbEFsaWduOiAnbWlkZGxlJywgdGV4dEFsaWduOiAnY2VudGVyJywgd2lkdGg6JzgwcHgnLCBwb3NpdGlvbjogJ3JlbGF0aXZlJywgdG9wOiAnMHB4JywgZm9udFNpemU6ICcyMXB4J319Pnt0aGlzLnByb3BzLm51bV9jb21tZW50c308L2Rpdj5cclxuXHRcdFx0Ly8gXHQ8L2Rpdj5cclxuXHJcblx0XHRcdC8vIFx0PGRpdiBzdHlsZSA9IHt7cG9zaXRpb246J2ZpeGVkJywgd2lkdGg6ICcyMDBweCcsIGhlaWdodDonMzAwcHgnLCByaWdodDonMTAlJywgdG9wOicyMDBweCcsIGJhY2tncm91bmRDb2xvcjond2hpdGUnLCBkaXNwbGF5OnRhZ19kaXNwbGF5LCB6SW5kZXg6MTUsIG92ZXJmbG93OidzY3JvbGwnfX0gPlxyXG5cdFx0XHQvLyBcdFx0e3RoaXMudGFnTGlzdH1cclxuXHRcdFx0Ly8gXHQ8L2Rpdj5cclxuXHJcblx0XHRcdC8vIFx0XHQ8bWV0YSBjbGFzc05hbWUgPSBcImNvbW1lbnRfb2Zmc2V0XCIgY29udGVudCA9IFwiMFwiIC8+XHJcblx0XHRcdC8vIDwvZGl2PlxyXG5cclxuXHRcdFx0XHQvLyA8ZGl2PlxyXG5cdFx0XHRcdC8vIFx0PGRpdiAgY2xhc3NOYW1lPVwibGlrZXNcIiBpZCA9IHt0aGlzLnByb3BzLmRhdGEuaWR9ID5MaWtlczoge3RoaXMubGlrZXNfc2NvcmV9IDwvZGl2PlxyXG5cdFx0XHRcdC8vIFx0PGJ1dHRvbiByZWYgPSB7dGhpcy5saWtlUmVmfSBvbkNsaWNrID0ge3RoaXMubGlrZUNsaWNrZWQuYmluZCh0aGlzKX0gdHlwZT1cImJ1dHRvblwiIGNsYXNzTmFtZSA9IFwibGlrZVwiIGlkID0ge3RoaXMucHJvcHMuZGF0YS5pZH0gc3R5bGUgPSB7bGlrZV9zdHlsZX0+TGlrZTwvYnV0dG9uPlxyXG5cdFx0XHRcdC8vIFx0PGJ1dHRvbiByZWYgPSB7dGhpcy5kaXNsaWtlUmVmfSBvbkNsaWNrID0ge3RoaXMuZGlzbGlrZUNsaWNrZWQuYmluZCh0aGlzKX0gdHlwZT1cImJ1dHRvblwiIGNsYXNzTmFtZSA9IFwidW5saWtlXCIgaWQgPSB7dGhpcy5wcm9wcy5kYXRhLmlkfSBzdHlsZSA9IHtkaXNsaWtlX3N0eWxlfT5IYXRlPC9idXR0b24+XHJcblx0XHRcdFx0Ly8gPC9kaXY+XHJcblx0fVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBVc2VyUG9zdCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudFxyXG57XHJcblx0Y29uc3RydWN0b3IocHJvcHMpXHJcblx0e1xyXG5cdFx0c3VwZXIocHJvcHMpO1xyXG5cdFx0dGhpcy5wb3N0UmVmID0gUmVhY3QuY3JlYXRlUmVmKCk7XHJcblx0XHR0aGlzLnBvc3RfaGVpZ2h0ID0gJzYwMHB4J1xyXG5cdH1cclxuXHJcblx0Y29tcG9uZW50RGlkTW91bnQoKSBcclxuXHR7XHJcblx0ICAgIHRoaXMuZm9yY2VVcGRhdGUoKTtcclxuXHR9XHJcblx0XHRcdFx0Ly8gPGRpdiBzdHlsZSA9IHt7cG9zaXRpb246J3JlbGF0aXZlJywgdG9wOicxMDBweCcsIGxlZnQ6JzE1cHgnLCBib3JkZXI6ICcxcHggc29saWQgI0YxRjFGMScsIGJvcmRlclJhZGl1czonN3B4Jywgd2lkdGg6JzEwMDBweCcsIG1pbkhlaWdodDogdGhpcy5wb3N0X2hlaWdodCwgYmFja2dyb3VuZENvbG9yOicjRjZGNkY2J319PlxyXG5cdFx0XHRcdC8vIFx0PFVzZXJQb3N0Q29udGVudCByZWYgPSB7dGhpcy5wb3N0UmVmfSBkYXRhID0ge3RoaXMucHJvcHMuZGF0YS51c2VyX3Bvc3R9IGxpa2Vfc3RhdGUgPSB7dGhpcy5wcm9wcy5kYXRhLmxpa2Vfc3RhdGV9IG51bV9jb21tZW50cyA9IHt0aGlzLnByb3BzLmRhdGEubnVtX2NvbW1lbnRzfSB1c2VybmFtZSA9IHt0aGlzLnByb3BzLmRhdGEudXNlcm5hbWV9IHVzZXJfcHJvZmlsZSA9IHt0aGlzLnByb3BzLmRhdGEudXNlcl9wcm9maWxlfS8+XHJcblx0XHRcdFx0Ly8gPC9kaXY+XHJcblx0cmVuZGVyKClcclxuXHR7XHJcblxyXG5cdFx0cmV0dXJuIChcclxuXHRcdFx0PGRpdj5cclxuXHRcdFx0XHQ8ZGl2IHN0eWxlID0ge3twb3NpdGlvbjoncmVsYXRpdmUnLCBtYXJnaW46JzBweCBhdXRvJywgd2lkdGg6JzEwMDBweCd9fT5cclxuXHRcdFx0XHRcdDxVc2VyUG9zdENvbnRlbnQgcmVmID0ge3RoaXMucG9zdFJlZn0gZGF0YSA9IHt0aGlzLnByb3BzLmRhdGEudXNlcl9wb3N0fSBsaWtlX3N0YXRlID0ge3RoaXMucHJvcHMuZGF0YS5saWtlX3N0YXRlfSBudW1fY29tbWVudHMgPSB7dGhpcy5wcm9wcy5kYXRhLm51bV9jb21tZW50c30gdXNlcm5hbWUgPSB7dGhpcy5wcm9wcy5kYXRhLnVzZXJuYW1lfSB1c2VyX3Byb2ZpbGUgPSB7dGhpcy5wcm9wcy5kYXRhLnVzZXJfcHJvZmlsZX0vPlxyXG5cdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcdDxkaXYgc3R5bGUgPSB7e21hcmdpbjonMHB4IGF1dG8nLCB3aWR0aDonMTAwMHB4JywgcGFkZGluZ1RvcDpcIjQwcHhcIn19PlxyXG5cdFx0XHRcdFx0PENvbW1lbnRTZWN0aW9uIGNvbW1lbnRzID0ge3RoaXMucHJvcHMuZGF0YS5jb21tZW50c30gY29tbWVudF92b3RlcyA9IHt0aGlzLnByb3BzLmRhdGEuY29tbWVudF92b3Rlc30gcG9zdF9pZCA9IHt0aGlzLnByb3BzLmRhdGEudXNlcl9wb3N0LmlkfSBwb3N0X2RhdGEgPSB7dGhpcy5wcm9wcy5kYXRhLnVzZXJfcG9zdH0vPlxyXG5cdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHQ8L2Rpdj5cclxuXHRcdCk7XHJcblx0fVxyXG59IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IFN0YW5kYXJkSGVhZGVyIGZyb20gJy4vc3RhbmRhcmRfaGVhZGVyLmpzJ1xyXG5pbXBvcnQgQ29tbWVudFNlY3Rpb24gZnJvbSAnLi9jb21tZW50cy5qcydcclxuaW1wb3J0IHV0aWxzIGZyb20gJy4vdXRpbHMuanMnXHJcblxyXG5jbGFzcyBHbG9iYWxQb3N0Q29udGVudCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCBcclxue1xyXG5cdGNvbnN0cnVjdG9yKHByb3BzKVxyXG5cdHtcclxuXHRcdHN1cGVyKHByb3BzKTtcclxuXHRcdHRoaXMuYWxidW1fc29uZ3MgPSBbXVxyXG5cdFx0dGhpcy5saWtlc19zY29yZSA9IHRoaXMucHJvcHMuZGF0YS5saWtlcyAtIHByb3BzLmRhdGEuZGlzbGlrZXM7XHJcblx0XHR0aGlzLmxpa2VSZWYgPSBSZWFjdC5jcmVhdGVSZWYoKTtcclxuXHRcdHRoaXMuZGlzbGlrZVJlZiA9IFJlYWN0LmNyZWF0ZVJlZigpO1xyXG5cdFx0Ly90aGlzLmxpa2Vfc3RhdGUgPSAtMVxyXG5cdFx0dGhpcy51cF9pbWFnZSA9IFwiL3NtYWxsX3VwLnBuZ1wiXHJcblx0XHR0aGlzLmRvd25faW1hZ2UgPSBcIi9zbWFsbF9kb3duLnBuZ1wiXHJcblx0fVxyXG5cclxuXHRyZW5kZXJpZnJhbWUoaWZyYW1lKSB7XHJcblx0XHRyZXR1cm4ge1xyXG5cdFx0XHRfX2h0bWw6IGlmcmFtZVxyXG5cdFx0fTtcclxuXHR9XHJcblxyXG5cdGdlbmVyYXRlQWxidW1Tb25ncygpXHJcblx0e1xyXG5cdFx0Ly9mb3IgKGtleSBvZiBPYmplY3Qua2V5cyhKU09OLnBhcnNlKGRhdGFbMF0uZGF0YSkpKVxyXG5cdFx0Zm9yICh2YXIgc29uZyBvZiBPYmplY3Qua2V5cyhKU09OLnBhcnNlKHRoaXMucHJvcHMuZGF0YS5kYXRhKSkpXHJcblx0XHR7XHJcblx0XHRcdHRoaXMuYWxidW1fc29uZ3MucHVzaCg8ZGl2IGtleSA9IHtKU09OLnBhcnNlKHRoaXMucHJvcHMuZGF0YS5kYXRhKVtzb25nXX0gc3R5bGUgPSB7e3BhZGRpbmc6JzBweCd9fT4ge3NvbmcgKyBcIi5cIn0gPGEgaHJlZiA9IHtcIi9wb3N0L1wiICsgdGhpcy5wcm9wcy5kYXRhLmFydGlzdCArIFwiL1wiICsgSlNPTi5wYXJzZSh0aGlzLnByb3BzLmRhdGEuZGF0YSlbc29uZ119PiB7SlNPTi5wYXJzZSh0aGlzLnByb3BzLmRhdGEuZGF0YSlbc29uZ119IDwvYT48L2Rpdj4pXHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHRsaWtlQ2xpY2tlZCgpXHJcblx0e1xyXG5cdFx0aWYgKCF1dGlscy5jaGVja0xvZ2dlZEluKCkpXHJcblx0XHR7XHJcblx0XHRcdGFsZXJ0KFwiTVVTVCBCRSBMT0dHRUQgSU5cIilcclxuXHRcdFx0cmV0dXJuO1xyXG5cdFx0fVxyXG5cdFx0dmFyIHRoYXQgPSB0aGlzO1xyXG5cdCAgICBmZXRjaChcIi9nbG9iYWxfbGlrZVwiLCB7XHJcblx0ICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxyXG5cdCAgICAgICAgaGVhZGVyczoge1xyXG5cdCAgICAgICAgXHRBY2NlcHQ6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuXHQgICAgICAgIFx0J0F1dGhvcml6YXRpb24nOiAnQmFzaWMnLFxyXG5cdCAgICAgICAgXHQnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxyXG5cdCAgICAgICAgfSxcclxuXHQgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtpZDogdGhpcy5wcm9wcy5kYXRhLnBvc3RfaWQsfSl9KVxyXG5cdCAgICAudGhlbihmdW5jdGlvbihyZXNwb25zZSkgeyByZXR1cm4gcmVzcG9uc2UuanNvbigpO30pXHJcblx0ICAgIC50aGVuKGZ1bmN0aW9uIChkYXRhKSB7ICAgIFx0XHJcblx0ICAgIFx0Ly8gdGhhdC5saWtlc19zY29yZSA9IGRhdGEubGlrZXNfc2NvcmU7XHJcblx0ICAgIFx0Ly8gdGhhdC5saWtlX3N0YXRlID0gZGF0YS5saWtlX3N0YXRlO1xyXG5cdCAgICBcdC8vIGlmICh0aGF0Lmxpa2Vfc3RhdGUgPT0gMSlcclxuXHQgICAgXHQvLyB7XHJcblx0ICAgIFx0Ly8gXHR0aGF0Lmxpa2VSZWYuY3VycmVudC5zdHlsZS5jb2xvciA9ICdibHVlJ1xyXG5cdCAgICBcdC8vIFx0dGhhdC5kaXNsaWtlUmVmLmN1cnJlbnQuc3R5bGUuY29sb3IgPSAnYmxhY2snXHJcblx0ICAgIFx0Ly8gfVxyXG5cdCAgICBcdC8vIGVsc2UgaWYgKHRoYXQubGlrZV9zdGF0ZSA9PSAwKVxyXG5cdCAgICBcdC8vIHtcclxuXHQgICAgXHQvLyBcdHRoYXQubGlrZVJlZi5jdXJyZW50LnN0eWxlID0gJ2JsYWNrJ1xyXG5cdCAgICBcdC8vIFx0dGhhdC5kaXNsaWtlUmVmLmN1cnJlbnQuc3R5bGUuY29sb3IgPSAncmVkJ1xyXG5cdCAgICBcdC8vIH1cclxuXHQgICAgXHQvLyBlbHNlXHJcblx0ICAgIFx0Ly8ge1xyXG5cdCAgICBcdC8vIFx0dGhhdC5saWtlUmVmLmN1cnJlbnQuc3R5bGUgPSAnYmxhY2snXHJcblx0ICAgIFx0Ly8gXHR0aGF0LmRpc2xpa2VSZWYuY3VycmVudC5zdHlsZS5jb2xvciA9ICdibGFjaydcdCAgICBcdFx0XHJcblx0ICAgIFx0Ly8gfVxyXG5cdCAgICBcdC8vdGhhdC5mb3JjZVVwZGF0ZSgpO1xyXG5cdCBcdH0pXHRcclxuICAgIFx0aWYgKHRoaXMucHJvcHMubGlrZV9zdGF0ZSA9PSAxKVxyXG4gICAgXHR7XHJcbiAgICAgICBcdFx0dGhpcy5saWtlc19zY29yZSAtPSAxO1xyXG4gICAgXHRcdC8vIHRoaXMubGlrZVJlZi5jdXJyZW50LnN0eWxlID0gJ2JsYWNrJ1xyXG4gICAgXHRcdC8vIHRoaXMuZGlzbGlrZVJlZi5jdXJyZW50LnN0eWxlLmNvbG9yID0gJ2JsYWNrJ1xyXG4gICAgXHRcdHRoaXMucHJvcHMubGlrZV9zdGF0ZSA9IC0xO1xyXG4gICAgXHRcdHRoaXMudXBfaW1hZ2UgPSBcIi9zbWFsbF91cC5wbmdcIlxyXG4gICAgXHR9XHJcbiAgICBcdGVsc2VcclxuICAgIFx0e1xyXG4gICAgXHRcdGlmICh0aGlzLnByb3BzLmxpa2Vfc3RhdGUgPT0gLTEpXHJcbiAgICBcdFx0e1xyXG4gICAgXHRcdFx0dGhpcy5saWtlc19zY29yZSArPSAxO1xyXG4gICAgXHRcdH1cclxuICAgIFx0XHRlbHNlIFxyXG4gICAgXHRcdHtcclxuICAgIFx0XHRcdHRoaXMubGlrZXNfc2NvcmUgKz0gMjtcclxuICAgIFx0XHR9XHJcbiAgICBcdFx0Ly8gdGhpcy5saWtlUmVmLmN1cnJlbnQuc3R5bGUgPSAnYmx1ZSdcclxuICAgIFx0XHQvLyB0aGlzLmRpc2xpa2VSZWYuY3VycmVudC5zdHlsZS5jb2xvciA9ICdibGFjaydcclxuICAgICAgIFx0XHR0aGlzLnVwX2ltYWdlID0gXCIvc21hbGxfdXBfb24ucG5nXCJcclxuICAgIFx0XHR0aGlzLmRvd25faW1hZ2UgPSBcIi9zbWFsbF9kb3duLnBuZ1wiXHJcbiAgICBcdFx0dGhpcy5wcm9wcy5saWtlX3N0YXRlID0gMTtcclxuICAgIFx0fVxyXG4gICAgXHR0aGlzLmZvcmNlVXBkYXRlKClcclxuXHJcblx0fVxyXG5cclxuXHRkaXNsaWtlQ2xpY2tlZCgpXHJcblx0e1xyXG5cdFx0aWYgKCF1dGlscy5jaGVja0xvZ2dlZEluKCkpXHJcblx0XHR7XHJcblx0XHRcdGFsZXJ0KFwiTVVTVCBCRSBMT0dHRUQgSU5cIilcclxuXHRcdFx0cmV0dXJuO1xyXG5cdFx0fVxyXG5cdFx0dmFyIHRoYXQgPSB0aGlzO1xyXG5cdCAgICBmZXRjaChcIi9nbG9iYWxfZGlzbGlrZVwiLCB7XHJcblx0ICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxyXG5cdCAgICAgICAgaGVhZGVyczoge1xyXG5cdCAgICAgICAgXHRBY2NlcHQ6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuXHQgICAgICAgIFx0J0F1dGhvcml6YXRpb24nOiAnQmFzaWMnLFxyXG5cdCAgICAgICAgXHQnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxyXG5cdCAgICAgICAgfSxcclxuXHQgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtpZDogdGhpcy5wcm9wcy5kYXRhLnBvc3RfaWQsfSl9KVxyXG5cdCAgICAudGhlbihmdW5jdGlvbihyZXNwb25zZSkgeyByZXR1cm4gcmVzcG9uc2UuanNvbigpO30pXHJcblx0ICAgIC50aGVuKGZ1bmN0aW9uIChkYXRhKSB7ICAgIFx0XHJcblx0ICAgIFx0Ly8gdGhhdC5saWtlc19zY29yZSA9IGRhdGEubGlrZXNfc2NvcmU7XHJcblx0ICAgIFx0Ly8gdGhhdC5saWtlX3N0YXRlID0gZGF0YS5saWtlX3N0YXRlO1xyXG5cdCAgICBcdC8vIGlmICh0aGF0Lmxpa2Vfc3RhdGUgPT0gMSlcclxuXHQgICAgXHQvLyB7XHJcblx0ICAgIFx0Ly8gXHR0aGF0Lmxpa2VSZWYuY3VycmVudC5zdHlsZS5jb2xvciA9ICdibHVlJ1xyXG5cdCAgICBcdC8vIFx0dGhhdC5kaXNsaWtlUmVmLmN1cnJlbnQuc3R5bGUuY29sb3IgPSAnYmxhY2snXHJcblx0ICAgIFx0Ly8gfVxyXG5cdCAgICBcdC8vIGVsc2UgaWYgKHRoYXQubGlrZV9zdGF0ZSA9PSAwKVxyXG5cdCAgICBcdC8vIHtcclxuXHQgICAgXHQvLyBcdHRoYXQubGlrZVJlZi5jdXJyZW50LnN0eWxlID0gJ2JsYWNrJ1xyXG5cdCAgICBcdC8vIFx0dGhhdC5kaXNsaWtlUmVmLmN1cnJlbnQuc3R5bGUuY29sb3IgPSAncmVkJ1xyXG5cdCAgICBcdC8vIH1cclxuXHQgICAgXHQvLyBlbHNlXHJcblx0ICAgIFx0Ly8ge1xyXG5cdCAgICBcdC8vIFx0dGhhdC5saWtlUmVmLmN1cnJlbnQuc3R5bGUgPSAnYmxhY2snXHJcblx0ICAgIFx0Ly8gXHR0aGF0LmRpc2xpa2VSZWYuY3VycmVudC5zdHlsZS5jb2xvciA9ICdibGFjaydcdFx0XHJcblx0ICAgIFx0Ly8gfVxyXG5cdCAgICBcdC8vdGhhdC5mb3JjZVVwZGF0ZSgpO1xyXG5cdCBcdH0pXHRcclxuICAgIFx0aWYgKHRoaXMucHJvcHMubGlrZV9zdGF0ZSA9PSAwKVxyXG4gICAgXHR7XHJcbiAgICBcdFx0Ly8gdGhpcy5saWtlUmVmLmN1cnJlbnQuc3R5bGUgPSAnYmxhY2snXHJcbiAgICBcdFx0Ly8gdGhpcy5kaXNsaWtlUmVmLmN1cnJlbnQuc3R5bGUuY29sb3IgPSAnYmxhY2snXHQgXHJcbiAgICAgICBcdFx0dGhpcy5kb3duX2ltYWdlID0gXCIvc21hbGxfZG93bi5wbmdcIlxyXG4gICAgXHRcdHRoaXMucHJvcHMubGlrZV9zdGF0ZSA9IC0xO1xyXG4gICAgXHRcdHRoaXMubGlrZXNfc2NvcmUgKz0gMTtcclxuICAgIFx0fVxyXG4gICAgXHRlbHNlXHJcbiAgICBcdHtcclxuICAgIFx0XHRpZiAodGhpcy5wcm9wcy5saWtlX3N0YXRlID09IC0xKVxyXG4gICAgXHRcdHtcclxuICAgIFx0XHRcdHRoaXMubGlrZXNfc2NvcmUgLT0gMTtcclxuICAgIFx0XHR9XHJcbiAgICBcdFx0ZWxzZSBcclxuICAgIFx0XHR7XHJcbiAgICBcdFx0XHR0aGlzLmxpa2VzX3Njb3JlIC09IDI7XHJcbiAgICBcdFx0fVxyXG4gICAgXHRcdC8vIHRoaXMubGlrZVJlZi5jdXJyZW50LnN0eWxlID0gJ2JsYWNrJ1xyXG4gICAgXHRcdC8vIHRoaXMuZGlzbGlrZVJlZi5jdXJyZW50LnN0eWxlLmNvbG9yID0gJ3JlZCdcclxuICAgICAgIFx0XHR0aGlzLmRvd25faW1hZ2UgPSBcIi9zbWFsbF9kb3duX29uLnBuZ1wiXHJcbiAgICBcdFx0dGhpcy51cF9pbWFnZSA9IFwiL3NtYWxsX3VwLnBuZ1wiXHJcbiAgICBcdFx0dGhpcy5wcm9wcy5saWtlX3N0YXRlID0gMDtcclxuXHJcbiAgICBcdH1cclxuICAgIFx0dGhpcy5mb3JjZVVwZGF0ZSgpO1xyXG5cdH1cclxuXHJcblxyXG5cdHJlbmRlcigpXHJcblx0e1xyXG5cclxuXHRcdHZhciBhcnRpc3RfbmFtZXMgPSBbXVxyXG5cdFx0dGhpcy5wcm9wcy5kYXRhLmFydGlzdC5zcGxpdCgnXicpLm1hcCgoaXRlbSwgaSkgPT4ge1xyXG5cdFx0XHRhcnRpc3RfbmFtZXMucHVzaCg8YSBrZXkgPSB7aX0gaHJlZiA9e1wiL2FydGlzdC9cIiArIGl0ZW19ID4ge2l0ZW19IDwvYT4pO1xyXG5cdFx0XHRhcnRpc3RfbmFtZXMucHVzaCgnLCcpXHJcblx0XHR9KVxyXG5cdFx0YXJ0aXN0X25hbWVzID0gYXJ0aXN0X25hbWVzLnNsaWNlKDAsIGFydGlzdF9uYW1lcy5sZW5ndGgtMSlcclxuXHJcblx0XHR2YXIgc29uZyA9IDxkaXY+IHt0aGlzLnByb3BzLmRhdGEuc29uZyArIFwiIGJ5IFwifSB7YXJ0aXN0X25hbWVzfSA8L2Rpdj5cclxuXHRcdGlmICh0aGlzLnByb3BzLmRhdGEudHlwZSA9PSAxKVxyXG5cdFx0e1xyXG5cdFx0XHRzb25nID0gXCJcIlxyXG5cdFx0XHR0aGlzLmdlbmVyYXRlQWxidW1Tb25ncygpO1xyXG5cdFx0fVxyXG5cclxuXHJcblxyXG5cdFx0dmFyIGxpa2Vfc3R5bGUgPSB7Y29sb3I6J2JsYWNrJ31cclxuXHRcdHZhciBkaXNsaWtlX3N0eWxlID0ge2NvbG9yOidibGFjayd9XHJcblx0XHRpZiAodGhpcy5wcm9wcy5saWtlX3N0YXRlID09IDEpXHJcblx0XHR7XHJcblx0XHRcdGxpa2Vfc3R5bGUuY29sb3IgPSAnYmx1ZSdcclxuXHRcdFx0ZGlzbGlrZV9zdHlsZS5jb2xvciA9ICdibGFjaydcclxuXHRcdH1cclxuXHRcdGVsc2UgaWYgKHRoaXMucHJvcHMubGlrZV9zdGF0ZSA9PSAwKVxyXG5cdFx0e1xyXG5cdFx0XHRsaWtlX3N0eWxlLmNvbG9yID0gJ2JsYWNrJ1xyXG5cdFx0XHRkaXNsaWtlX3N0eWxlLmNvbG9yID0gJ3JlZCdcclxuXHRcdH1cclxuXHJcblx0XHRcdC8vIDxkaXY+XHJcblx0XHRcdC8vIFx0PGRpdiBzdHlsZT17e3Bvc2l0aW9uOidyZWxhdGl2ZScsIHRvcDonMTAwcHgnLCBwYWRkaW5nQm90dG9tOicxMDBweCcsIGhlaWdodDogJ2F1dG8nLCBtaW5IZWlnaHQ6ICc1NTBweCd9fT5cclxuXHRcdFx0Ly8gXHRcdDxkaXYgc3R5bGU9e3twb3NpdGlvbjoncmVsYXRpdmUnLGZsb2F0OidsZWZ0JywgdG9wOicwcHgnLCBwYWRkaW5nUmlnaHQ6JzIwcHgnfX0gZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw9e3RoaXMucmVuZGVyaWZyYW1lKHRoaXMucHJvcHMuZGF0YS5lbWJlZGRlZF9jb250ZW50KX0+XHJcblx0XHRcdC8vIFx0XHQ8L2Rpdj5cclxuXHRcdFx0Ly8gXHRcdDxkaXYgc3R5bGU9e3tsZWZ0OicxMCUnLCB0b3A6JzIwJSd9fT5cclxuXHJcblx0XHRcdC8vIFx0XHRcdDxkaXY+XHJcblx0XHRcdC8vIFx0XHRcdFx0e3Nvbmd9XHJcblx0XHRcdC8vIFx0XHRcdFx0PGRpdj4gQWxidW06IHt0aGlzLnByb3BzLmRhdGEuYWxidW19IDwvZGl2PlxyXG5cdFx0XHQvLyBcdFx0XHRcdDxkaXY+IFJlbGVhc2VkIG9uOiB7dGhpcy5wcm9wcy5kYXRhLnJlbGVhc2VfZGF0ZX0gPC9kaXY+XHJcblx0XHRcdC8vIFx0XHRcdFx0e3RoaXMuYWxidW1fc29uZ3N9XHJcblx0XHRcdC8vIFx0XHRcdDwvZGl2PlxyXG5cclxuXHRcdFx0Ly8gXHRcdDwvZGl2PlxyXG5cdFx0XHQvLyBcdDwvZGl2PlxyXG5cdFx0XHQvLyBcdDxici8+XHJcblx0XHRcdC8vIFx0PGJyLz5cclxuXHRcdFx0Ly8gXHQ8YnIvPlxyXG5cdFx0XHQvLyBcdDxici8+XHJcblx0XHRcdC8vIFx0PGRpdj5cclxuXHRcdFx0Ly8gXHRcdDxkaXYgIGNsYXNzTmFtZT1cImxpa2VzXCIgaWQgPSB7dGhpcy5wcm9wcy5kYXRhLmlkfSA+TGlrZXM6IHt0aGlzLmxpa2VzX3Njb3JlfSA8L2Rpdj5cclxuXHRcdFx0Ly8gXHRcdDxidXR0b24gcmVmID0ge3RoaXMubGlrZVJlZn0gb25DbGljayA9IHt0aGlzLmxpa2VDbGlja2VkLmJpbmQodGhpcyl9IHR5cGU9XCJidXR0b25cIiBjbGFzc05hbWUgPSBcImxpa2VcIiBpZCA9IHt0aGlzLnByb3BzLmRhdGEuaWR9IHN0eWxlID0ge2xpa2Vfc3R5bGV9Pkxpa2U8L2J1dHRvbj5cclxuXHRcdFx0Ly8gXHRcdDxidXR0b24gcmVmID0ge3RoaXMuZGlzbGlrZVJlZn0gb25DbGljayA9IHt0aGlzLmRpc2xpa2VDbGlja2VkLmJpbmQodGhpcyl9IHR5cGU9XCJidXR0b25cIiBjbGFzc05hbWUgPSBcInVubGlrZVwiIGlkID0ge3RoaXMucHJvcHMuZGF0YS5pZH0gc3R5bGUgPSB7ZGlzbGlrZV9zdHlsZX0+SGF0ZTwvYnV0dG9uPlxyXG5cdFx0XHQvLyBcdDwvZGl2PlxyXG5cdFx0XHQvLyBcdDxtZXRhIGNsYXNzTmFtZSA9IFwiY29tbWVudF9vZmZzZXRcIiBjb250ZW50ID0gXCIwXCIgLz5cclxuXHRcdFx0Ly8gPC9kaXY+XHJcblxyXG5cclxuXHRcdHJldHVybiAoXHJcblx0XHRcdDxkaXYgc3R5bGUgPSB7e2JhY2tncm91bmQ6ICd3aGl0ZScsIHBvc2l0aW9uOidyZWxhdGl2ZScsIHRvcDonODVweCcsIHBhZGRpbmdMZWZ0OicxMHB4JywgaGVpZ2h0OiAnYXV0bycsIG1pbkhlaWdodDogJzU1MHB4JywgbWF4V2lkdGg6JzEwMDBweCcsIHBhZGRpbmdCb3R0b206JzUwcHgnLCBwYWRkaW5nUmlnaHQ6JzEwcHgnLCBwYWRkaW5nVG9wOicxMHB4JywgbGVmdDonNSUnLCBib3JkZXJCb3R0b206ICdzb2xpZCBibGFjayAzcHgnLCBib3JkZXJSYWRpdXM6ICc0cHgnfX0+XHJcblxyXG5cdFx0XHRcdDxkaXYgc3R5bGUgPSB7e2Rpc3BsYXk6J2lubGluZUJsb2NrJ319PlxyXG5cdFx0XHRcdFx0PGRpdiBzdHlsZT17e2Zsb2F0OidsZWZ0Jyxwb3NpdGlvbjoncmVsYXRpdmUnLCB0b3A6JzBweCcsIHBhZGRpbmdSaWdodDonMjBweCd9fSBkYW5nZXJvdXNseVNldElubmVySFRNTD17dGhpcy5yZW5kZXJpZnJhbWUodGhpcy5wcm9wcy5kYXRhLmVtYmVkZGVkX2NvbnRlbnQpfT5cclxuXHRcdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcdFx0XHJcblx0XHRcdFx0XHQ8ZGl2PlxyXG5cdFx0XHRcdFx0XHR7c29uZ31cclxuXHRcdFx0XHRcdFx0PGRpdj4gQWxidW06IDxhIGhyZWYgPSB7XCIvYWxidW0vXCIgKyB0aGlzLnByb3BzLmRhdGEuYXJ0aXN0ICsgXCIvXCIgKyB0aGlzLnByb3BzLmRhdGEuYWxidW19PiB7dGhpcy5wcm9wcy5kYXRhLmFsYnVtfSA8L2E+IDwvZGl2PlxyXG5cdFx0XHRcdFx0XHQ8ZGl2PiBSZWxlYXNlZCBvbjoge3RoaXMucHJvcHMuZGF0YS5yZWxlYXNlX2RhdGV9IDwvZGl2PlxyXG5cdFx0XHRcdFx0XHR7dGhpcy5hbGJ1bV9zb25nc31cclxuXHRcdFx0XHRcdDwvZGl2PlxyXG5cclxuXHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0XHQ8ZGl2IHN0eWxlID0ge3tjbGVhcjonYm90aCcsIGhlaWdodDonMzVweCd9fT5cclxuXHRcdFx0XHRcdDxkaXYgc3R5bGUgPSB7e2Zsb2F0OidsZWZ0Jywgd2lkdGg6JzE1cHgnLCBoZWlnaHQ6JzMwcHgnfX0+PC9kaXY+XHJcblx0XHRcdFx0XHQ8ZGl2IHN0eWxlID0ge3tmbG9hdDonbGVmdCd9fT48aW1nIG9uQ2xpY2sgPSB7dGhpcy5saWtlQ2xpY2tlZC5iaW5kKHRoaXMpfSBzcmM9e3RoaXMudXBfaW1hZ2V9IHdpZHRoPVwiMzBcIiBoZWlnaHQ9XCIzMFwiIGFsdD1cIlwiLz48L2Rpdj5cclxuXHRcdFx0XHRcdDxkaXYgc3R5bGUgPSB7e3dpZHRoOic2MHB4JywgaGVpZ2h0OiczMHB4JywgZmxvYXQ6J2xlZnQnLCB2ZXJ0aWNhbEFsaWduOiAnbWlkZGxlJywgdGV4dEFsaWduOiAnY2VudGVyJywgd2lkdGg6JzYwcHgnLCBwb3NpdGlvbjogJ3JlbGF0aXZlJywgdG9wOiAnMHB4JywgZm9udFNpemU6ICcyMXB4J319Pnt0aGlzLmxpa2VzX3Njb3JlfTwvZGl2PlxyXG5cdFx0XHRcdFx0PGRpdiBzdHlsZSA9IHt7ZmxvYXQ6J2xlZnQnfX0+PGltZyBvbkNsaWNrID0ge3RoaXMuZGlzbGlrZUNsaWNrZWQuYmluZCh0aGlzKX0gc3JjPXt0aGlzLmRvd25faW1hZ2V9IHdpZHRoPVwiMzBcIiBoZWlnaHQ9XCIzMFwiIGFsdD1cIlwiLz48L2Rpdj5cclxuXHRcdFx0XHRcdDxkaXYgc3R5bGUgPSB7e2Zsb2F0OidsZWZ0Jywgd2lkdGg6JzMwcHgnLCBoZWlnaHQ6JzMwcHgnLCBib3JkZXJSaWdodDogJzFweCBzb2xpZCBibGFjayd9fT48L2Rpdj5cclxuXHRcdFx0XHRcdDxkaXYgc3R5bGUgPSB7e2Zsb2F0OidsZWZ0Jywgd2lkdGg6JzMwcHgnLCBoZWlnaHQ6JzMwcHgnfX0+PC9kaXY+XHJcblx0XHRcdFx0XHQ8ZGl2IHN0eWxlID0ge3tmbG9hdDonbGVmdCd9fT48aW1nIHNyYz1cIi9zbWFsbF9jb21tZW50LnBuZ1wiIHdpZHRoPVwiMzBcIiBoZWlnaHQ9XCIzMFwiIGFsdD1cIlwiLz48L2Rpdj5cclxuXHRcdFx0XHRcdDxkaXYgc3R5bGUgPSB7e3dpZHRoOic2MHB4JywgaGVpZ2h0OiczMHB4JywgZmxvYXQ6J2xlZnQnLCB2ZXJ0aWNhbEFsaWduOiAnbWlkZGxlJywgdGV4dEFsaWduOiAnY2VudGVyJywgd2lkdGg6JzgwcHgnLCBwb3NpdGlvbjogJ3JlbGF0aXZlJywgdG9wOiAnMHB4JywgZm9udFNpemU6ICcyMXB4J319Pnt0aGlzLnByb3BzLm51bV9jb21tZW50c308L2Rpdj5cclxuXHRcdFx0XHQ8L2Rpdj5cclxuXHJcblxyXG5cdFx0XHRcdDxtZXRhIGNsYXNzTmFtZSA9IFwiY29tbWVudF9vZmZzZXRcIiBjb250ZW50ID0gXCIwXCIgLz5cclxuXHRcdFx0PC9kaXY+XHJcblxyXG5cclxuXHRcdCk7XHJcblx0fVxyXG59XHJcblxyXG5jbGFzcyBNaW5pUG9zdCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudFxyXG57XHJcblx0Y29uc3RydWN0b3IocHJvcHMpXHJcblx0e1xyXG5cdFx0c3VwZXIocHJvcHMpXHJcblx0XHRpZiAodGhpcy5wcm9wcy5udW1fY29tbWVudHMgPT0gdW5kZWZpbmVkKVxyXG5cdFx0e1xyXG5cdFx0XHR0aGlzLnByb3BzLm51bV9jb21tZW50cyA9IDA7XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHRyZW5kZXIoKVxyXG5cdHtcclxuXHRcdHZhciBjb250ZW50X2RpdiA9IHRhZ191dGlscy5mb3JtYXRDb250ZW50KHRoaXMucHJvcHMucG9zdC5jb250ZW50LCB0aGlzLnByb3BzLnBvc3QudGFncylcclxuXHRcdHZhciBkYXRlID0gbmV3IERhdGUodGhpcy5wcm9wcy5wb3N0LnRpbWVzdGFtcClcclxuXHRcdHJldHVybihcclxuXHRcdFx0PGRpdiBzdHlsZSA9IHt7d2lkdGg6JzczNXB4JywgYmFja2dyb3VuZENvbG9yOid3aGl0ZScsIGJvcmRlclJhZGl1czonN3B4JywgYm9yZGVyOiAnMXB4IHNvbGlkICNGMUYxRjEnfX0+XHJcblx0XHRcdFx0PGRpdiBzdHlsZSA9IHt7ZGlzcGxheTonZmxleCcsIGZsZXhEaXJlY3Rpb246J3JvdycsIHBhZGRpbmdMZWZ0OicxMHB4JywgcGFkZGluZ1RvcDonMTBweCd9fT5cclxuXHRcdFx0XHRcdDxkaXYgc3R5bGUgPSB7e2Rpc3BsYXk6J2ZsZXgnLCBmbGV4RGlyZWN0aW9uOidyb3cnfX0+XHJcblx0XHRcdFx0XHRcdDxkaXYgc3R5bGUgPSB7e2JhY2tncm91bmRDb2xvcjp0aGlzLnByb3BzLnVzZXIucHJvZmlsZV9waWN0dXJlLCBib3JkZXJSYWRpdXM6JzUwJScsIGhlaWdodDonNDhweCcsIHdpZHRoOic0OHB4J319PlxyXG5cdFx0XHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0XHRcdFx0PGRpdiBzdHlsZSA9IHt7cGFkZGluZ0xlZnQ6JzEwcHgnLCBib3JkZXJSaWdodDonMXB4IHNvbGlkICNGMUYxRjEnLCBwYWRkaW5nUmlnaHQ6JzIwcHgnfX0+XHJcblx0XHRcdFx0XHRcdFx0PGRpdiBzdHlsZSA9IHt7Zm9udFNpemU6JzEuMWVtJywgZm9udFdlaWdodDonYm9sZCd9fT5cclxuXHRcdFx0XHRcdFx0XHRcdDxhIGhyZWYgPSB7XCIvdXNlci9cIiArIHRoaXMucHJvcHMudXNlci51c2VybmFtZX0+e3RoaXMucHJvcHMudXNlci51c2VybmFtZX08L2E+XHJcblx0XHRcdFx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0XHRcdFx0PGRpdiBzdHlsZSA9IHt7Zm9udFNpemU6Jy44ZW0nfX0+XHJcblx0XHRcdFx0XHRcdFx0XHR7dXRpbHMubW9udGhOYW1lc1twYXJzZUludChkYXRlLmdldE1vbnRoKCkpXSsgXCIgXCIgKyBkYXRlLmdldERhdGUoKSArIFwiLCBcIiArIGRhdGUuZ2V0RnVsbFllYXIoKX1cclxuXHRcdFx0XHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0XHRcdDxkaXYgc3R5bGUgPSB7e3BhZGRpbmdUb3A6JzEwcHgnLCBwYWRkaW5nTGVmdDonMzJweCcsIGZvbnRXZWlnaHQ6J2JvbGQnLCBmb250U2l6ZTonMS4yZW0nLCB3aWR0aDonNDAwcHgnfX0+XHJcblx0XHRcdFx0XHRcdFx0PGEgaHJlZiA9IHtcIi91c2VyL1wiICsgdGhpcy5wcm9wcy5wb3N0LnVzZXJuYW1lICsgXCIvXCIgKyB0aGlzLnByb3BzLnBvc3QucG9zdF9pZH0+e3RoaXMucHJvcHMucG9zdC50aXRsZX08L2E+XHJcblx0XHRcdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcdFx0XHQ8ZGl2IHN0eWxlID0ge3twYWRkaW5nVG9wOicxMHB4JywgZGlzcGxheTonZmxleCcsIGZsZXhEaXJlY3Rpb246J3Jvdyd9fT5cclxuXHRcdFx0XHRcdFx0XHQ8c3ZnIHdpZHRoPVwiMTRcIiBoZWlnaHQ9XCIyNFwiIHZpZXdCb3g9XCIwIDAgMTYgMjdcIiBmaWxsPVwibm9uZVwiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiBjb2xvciA9ICdibHVlJz5cclxuXHRcdFx0XHRcdFx0XHQ8cGF0aCBkPVwiTTguNzA3MTEgMC45ODczNTZDOC4zMTY1OCAwLjU5NjgzMiA3LjY4MzQyIDAuNTk2ODMyIDcuMjkyODkgMC45ODczNTZMMC45Mjg5MzEgNy4zNTEzMkMwLjUzODQwNyA3Ljc0MTg0IDAuNTM4NDA3IDguMzc1MDEgMC45Mjg5MzEgOC43NjU1M0MxLjMxOTQ2IDkuMTU2MDYgMS45NTI2MiA5LjE1NjA2IDIuMzQzMTUgOC43NjU1M0w4IDMuMTA4NjhMMTMuNjU2OSA4Ljc2NTUzQzE0LjA0NzQgOS4xNTYwNiAxNC42ODA1IDkuMTU2MDYgMTUuMDcxMSA4Ljc2NTUzQzE1LjQ2MTYgOC4zNzUwMSAxNS40NjE2IDcuNzQxODQgMTUuMDcxMSA3LjM1MTMyTDguNzA3MTEgMC45ODczNTZaTTkgMjYuMzEyNkw5IDEuNjk0NDZMNyAxLjY5NDQ2TDcgMjYuMzEyNkw5IDI2LjMxMjZaXCIgZmlsbD0nYmxhY2snLz5cclxuXHRcdFx0XHRcdFx0XHQ8L3N2Zz5cclxuXHRcdFx0XHRcdFx0XHQ8ZGl2IHN0eWxlID0ge3ttaW5XaWR0aDonMzBweCcsIGhlaWdodDonMzBweCcsIHZlcnRpY2FsQWxpZ246ICdtaWRkbGUnLCB0ZXh0QWxpZ246ICdjZW50ZXInLCBmb250U2l6ZTogJzE2cHgnLCBmb250V2VpZ2h0Oidib2xkJ319PjxhIGhyZWYgPSB7XCIvdXNlci9cIiArIHRoaXMucHJvcHMucG9zdC51c2VybmFtZSArIFwiL1wiICsgdGhpcy5wcm9wcy5wb3N0LnBvc3RfaWQgKyBcIi9saWtlc1wifSA+e3RoaXMucHJvcHMucG9zdC5saWtlcyAtIHRoaXMucHJvcHMucG9zdC5kaXNsaWtlc30gPC9hPjwvZGl2PlxyXG5cclxuXHRcdFx0XHRcdFx0XHQ8c3ZnIHdpZHRoPVwiMTRcIiBoZWlnaHQ9XCIyNFwiIHZpZXdCb3g9XCIwIDAgMTYgMjdcIiBmaWxsPVwibm9uZVwiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj5cclxuXHRcdFx0XHRcdFx0XHQ8cGF0aCBkPVwiTTcuMjkyODkgMjYuMDE5N0M3LjY4MzQyIDI2LjQxMDIgOC4zMTY1OCAyNi40MTAyIDguNzA3MTEgMjYuMDE5N0wxNS4wNzExIDE5LjY1NTdDMTUuNDYxNiAxOS4yNjUyIDE1LjQ2MTYgMTguNjMyIDE1LjA3MTEgMTguMjQxNUMxNC42ODA1IDE3Ljg1MSAxNC4wNDc0IDE3Ljg1MSAxMy42NTY5IDE4LjI0MTVMOCAyMy44OTg0TDIuMzQzMTUgMTguMjQxNUMxLjk1MjYyIDE3Ljg1MSAxLjMxOTQ2IDE3Ljg1MSAwLjkyODkzMiAxOC4yNDE1QzAuNTM4NDA4IDE4LjYzMiAwLjUzODQwOCAxOS4yNjUyIDAuOTI4OTMyIDE5LjY1NTdMNy4yOTI4OSAyNi4wMTk3Wk03IDAuNjk0NDg5TDcgMjUuMzEyNkg5TDkgMC42OTQ0ODlMNyAwLjY5NDQ4OVpcIiBmaWxsPSdibGFjaycvPlxyXG5cdFx0XHRcdFx0XHRcdDwvc3ZnPlxyXG5cdFx0XHRcdFx0XHRcdDxkaXYgc3R5bGUgPSB7e3BhZGRpbmdMZWZ0OicxMHB4J319PjxpbWcgc3JjPVwiL3NwZWVjaF9idWJibGUucG5nXCIgd2lkdGg9XCIzMFwiIGhlaWdodD1cIjI2XCIgYWx0PVwiXCIvPjwvZGl2PlxyXG5cdFx0XHRcdFx0XHRcdDxkaXYgc3R5bGUgPSB7e3dpZHRoOiczMHB4JywgaGVpZ2h0OiczMHB4JywgdmVydGljYWxBbGlnbjogJ21pZGRsZScsIHRleHRBbGlnbjogJ2NlbnRlcicsIGZvbnRTaXplOiAnMTZweCcsIGZvbnRXZWlnaHQ6J2JvbGQnfX0+IDxhIGhyZWYgPSB7XCIvdXNlci9cIiArIHRoaXMucHJvcHMucG9zdC51c2VybmFtZSArIFwiL1wiICsgdGhpcy5wcm9wcy5wb3N0LnBvc3RfaWR9PiB7dGhpcy5wcm9wcy5udW1fY29tbWVudHN9IDwvYT48L2Rpdj5cclxuXHRcdFx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0XHQ8ZGl2IHN0eWxlID0ge3twYWRkaW5nTGVmdDonMTZweCcsIHBhZGRpbmdUb3A6JzhweCd9fT5cclxuXHRcdFx0XHRcdHtjb250ZW50X2Rpdn1cclxuXHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0PC9kaXY+XHJcblx0XHQpXHJcblx0fVxyXG59XHJcblxyXG5jbGFzcyBHbG9iYWxJbmZvIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50XHJcbntcclxuXHRjb25zdHJ1Y3Rvcihwcm9wcylcclxuXHR7XHJcblx0XHRzdXBlcihwcm9wcylcclxuXHRcdHRoaXMuc3RhdGUgPSB7cG9zdHM6IFtdfVxyXG5cdFx0dGhpcy5vZmZzZXQgPSAwO1xyXG5cdH1cclxuXHJcblx0Y29tcG9uZW50RGlkTW91bnQoKSBcclxuXHR7XHJcblx0ICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdzY3JvbGwnLCB0aGlzLmhhbmRsZVNjcm9sbC5iaW5kKHRoaXMpKTtcclxuXHJcblx0XHRsZXQgY3VycmVudF9wb3N0cyA9IHRoaXMuc3RhdGUucG9zdHNcclxuXHRcdGZvciAodmFyIHBvc3Qgb2YgdGhpcy5wcm9wcy5wb3N0cylcclxuXHRcdHtcclxuXHRcdFx0Y3VycmVudF9wb3N0cy5wdXNoKDxNaW5pUG9zdCB1c2VyID0ge3RoaXMucHJvcHMudXNlcl9wcm9maWxlc1twb3N0LnVzZXJuYW1lXX0gcG9zdCA9IHtwb3N0fSBudW1fY29tbWVudHMgPSB7dGhpcy5wcm9wcy5udW1fY29tbWVudHNbcG9zdC5wb3N0X2lkXX0vPilcclxuXHRcdH1cclxuXHRcdHRoaXMub2Zmc2V0ICs9IGN1cnJlbnRfcG9zdHMubGVuZ3RoXHJcblx0XHR0aGlzLnNldFN0YXRlKHtwb3N0czogY3VycmVudF9wb3N0c30pO1xyXG5cdH1cclxuXHJcblx0YWRkTWluaVBvc3RzKHBvc3RzLCB1c2VyX3Byb2ZpbGVzKVxyXG5cdHtcclxuXHJcblx0XHRcclxuXHR9XHJcblxyXG5cdGhhbmRsZVNjcm9sbCgpIHtcclxuXHRcdGlmICgod2luZG93LmlubmVySGVpZ2h0ICsgd2luZG93LnNjcm9sbFkpID49IGRvY3VtZW50LmJvZHkub2Zmc2V0SGVpZ2h0ICYmICF0aGlzLmxvYWRpbmdfcG9zdHNfc2VtYXBob3IpIFxyXG5cdFx0e1xyXG5cdFx0XHR2YXIgdGhhdCA9IHRoaXNcclxuXHRcdFx0dGhpcy5sb2FkaW5nX3Bvc3RzX3NlbWFwaG9yID0gdHJ1ZVxyXG5cdFx0ICAgIGZldGNoKFwiL2xvYWRfdXNlcl9wb3N0c1wiLCB7XHJcblx0XHQgICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcblx0XHQgICAgICAgIGhlYWRlcnM6IHtcclxuXHRcdCAgICAgICAgXHQnQWNjZXB0JzogJ2FwcGxpY2F0aW9uL2pzb24nLFxyXG5cdFx0ICAgICAgICBcdCdBdXRob3JpemF0aW9uJzogJ0Jhc2ljJyxcclxuXHRcdCAgICAgICAgXHQnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxyXG5cdFx0ICAgICAgICB9LFxyXG5cdFx0ICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7YXJ0aXN0OiB0aGF0LnByb3BzLmdsb2JhbF9wb3N0LmFydGlzdCxcclxuXHRcdCAgICAgICAgXHRcdFx0XHRcdCAgYWxidW06IHRoYXQucHJvcHMuZ2xvYmFsX3Bvc3QuYWxidW0sXHJcblx0XHQgICAgICAgIFx0XHRcdFx0ICAgICAgc29uZzogdGhhdC5wcm9wcy5nbG9iYWxfcG9zdC5zb25nLFxyXG5cdFx0ICAgICAgICBcdFx0XHRcdCAgXHQgIG9mZnNldDogdGhhdC5vZmZzZXR9KX0pXHJcblx0XHQgICAgLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHsgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTt9KVxyXG5cdFx0ICAgIC50aGVuKGZ1bmN0aW9uIChkYXRhKSB7IFxyXG5cdFx0ICAgIFx0dGhhdC5vZmZzZXQgKz0gZGF0YS5wb3N0cy5sZW5ndGg7XHJcblx0XHQgICAgXHQvL3RoYXQucG9zdHNSZWYuY3VycmVudC5hZGRQb3N0cyhkYXRhLnNvbmdzLCBkYXRhLmxpa2VzLCBkYXRhLm51bV9jb21tZW50cywgZGF0YS5udW1fcG9zdHMsIGRhdGEudXNlcl9wcm9maWxlcylcclxuXHRcdFx0XHRsZXQgY3VycmVudF9wb3N0cyA9IHRoYXQuc3RhdGUucG9zdHNcclxuXHRcdFx0XHRmb3IgKHZhciBwb3N0IG9mIGRhdGEucG9zdHMpXHJcblx0XHRcdFx0e1xyXG5cdFx0XHRcdFx0Y3VycmVudF9wb3N0cy5wdXNoKDxNaW5pUG9zdCB1c2VyID0ge2RhdGEudXNlcl9wcm9maWxlc1twb3N0LnVzZXJuYW1lXX0gcG9zdCA9IHtwb3N0fSBudW1fY29tbWVudHMgPSB7ZGF0YS5udW1fY29tbWVudHNbcG9zdC5wb3N0X2lkXX0vPilcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0dGhhdC5zZXRTdGF0ZSh7cG9zdHM6IGN1cnJlbnRfcG9zdHN9KTtcclxuXHRcdFx0XHR0aGF0LmxvYWRpbmdfcG9zdHNfc2VtYXBob3IgPSBmYWxzZTtcclxuXHRcdCBcdH0pXHJcblx0XHR9XHJcblx0fVxyXG5cdHJlbmRlcigpXHJcblx0e1xyXG5cdFx0cmV0dXJuKFxyXG5cdFx0XHQ8ZGl2PlxyXG5cdFx0XHRcdHt0aGlzLnN0YXRlLnBvc3RzfVxyXG5cdFx0XHQ8L2Rpdj4pXHJcblx0fVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBHbG9iYWxQb3N0IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50XHJcbntcclxuXHRjb25zdHJ1Y3Rvcihwcm9wcylcclxuXHR7XHJcblx0XHRzdXBlcihwcm9wcyk7XHJcblx0fVxyXG5cdFx0XHRcdFx0Ly8gPEdsb2JhbFBvc3RDb250ZW50IGRhdGEgPSB7dGhpcy5wcm9wcy5kYXRhLmdsb2JhbF9wb3N0fSBsaWtlX3N0YXRlID0ge3RoaXMucHJvcHMuZGF0YS5saWtlX3N0YXRlfS8+XHJcblx0XHRcdFx0XHQvLyA8Q29tbWVudFNlY3Rpb24gY29tbWVudHMgPSB7dGhpcy5wcm9wcy5kYXRhLmNvbW1lbnRzfSBjb21tZW50X3ZvdGVzID0ge3RoaXMucHJvcHMuZGF0YS5jb21tZW50X3ZvdGVzfSBwb3N0X2lkID0ge3RoaXMucHJvcHMuZGF0YS5nbG9iYWxfcG9zdC5wb3N0X2lkfSBwb3N0cyA9IHt0aGlzLnByb3BzLmRhdGEudXNlcl9wb3N0c30gZ2xvYmFsX3Bvc3QgPSB7dGhpcy5wcm9wcy5kYXRhLmdsb2JhbF9wb3N0fSAvPlxyXG5cdFx0XHRcdFx0XHRcdC8vIDxkaXY+XHJcblx0XHRcdFx0XHRcdFx0Ly8gXHQ8YnV0dG9uIGNsYXNzTmFtZSA9IFwiZ3JheUJ1dHRvblwiIHN0eWxlID0ge3toZWlnaHQ6JzUwcHgnLCB3aWR0aDonMTIwcHgnLCBmb250U2l6ZTonMS4yZW0nfX0+IENyZWF0ZSBQb3N0IDwvYnV0dG9uPlxyXG5cdFx0XHRcdFx0XHRcdC8vIDwvZGl2PlxyXG5cdHJlbmRlcigpXHJcblx0e1xyXG5cdFx0aWYgKHRoaXMucHJvcHMuZGF0YS5nbG9iYWxfcG9zdCA9PSB1bmRlZmluZWQpXHJcblx0XHR7XHJcblx0XHRcdHJldHVybig8ZGl2PiBDb250ZW50IE5vdCBZZXQgUG9zdGVkIDwvZGl2PilcclxuXHRcdH1cclxuXHRcdHZhciBkYXRlID0gbmV3IERhdGUodGhpcy5wcm9wcy5kYXRhLmdsb2JhbF9wb3N0LnRpbWVzdGFtcClcclxuXHRcdHZhciBjb250ZW50X25hbWUgPSB0aGlzLnByb3BzLmRhdGEuZ2xvYmFsX3Bvc3Quc29uZ1xyXG5cdFx0dmFyIGFsYnVtX2RpdiA9IDxkaXYgc3R5bGUgPSB7e2ZvbnRTaXplOicxLjFlbSd9fT5cclxuXHRcdFx0XHRcdFx0XHR7XCJBbGJ1bTogXCJ9XHJcblx0XHRcdFx0XHRcdFx0PGEgaHJlZiA9IHtcIi9hbGJ1bS9cIiArIHRoaXMucHJvcHMuZGF0YS5nbG9iYWxfcG9zdC5hcnRpc3QgKyBcIi9cIiArIHRoaXMucHJvcHMuZGF0YS5nbG9iYWxfcG9zdC5hbGJ1bX0+IHt0aGlzLnByb3BzLmRhdGEuZ2xvYmFsX3Bvc3QuYWxidW19IDwvYT5cclxuXHRcdFx0XHRcdFx0PC9kaXY+XHJcblxyXG5cdFx0aWYgKHRoaXMucHJvcHMuZGF0YS5nbG9iYWxfcG9zdC50eXBlID09IDEpXHJcblx0XHR7XHJcblx0XHRcdGNvbnRlbnRfbmFtZSA9IHRoaXMucHJvcHMuZGF0YS5nbG9iYWxfcG9zdC5hbGJ1bVxyXG5cdFx0XHRhbGJ1bV9kaXYgPSBcIlwiXHJcblx0XHR9XHJcblxyXG5cdFx0cmV0dXJuIChcclxuXHRcdFx0PGRpdiBzdHlsZSA9IHt7d2lkdGg6JzczNXB4JywgbWFyZ2luOicwcHggYXV0bycsIHBhZGRpbmdUb3A6JzUwcHgnfX0+XHJcblxyXG5cdFx0XHRcdDxkaXYgc3R5bGUgPSB7e3dpZHRoOic3MzVweCcsIGhlaWdodDonNDAwcHgnLCBiYWNrZ3JvdW5kOid3aGl0ZScsIGJvcmRlcjonMXB4IHNvbGlkICNGMUYxRjEnLCBib3JkZXJSYWRpdXM6JzdweCcsIGRpc3BsYXk6J2ZsZXgnLCBmbGV4RGlyZWN0aW9uOidyb3cnfX0+XHJcblxyXG5cdFx0XHRcdFx0PGRpdiBzdHlsZSA9IHt7cGFkZGluZ1RvcDonMTBweCcsIHBhZGRpbmdMZWZ0OicxMHB4J319IGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MPXt1dGlscy5yZW5kZXJpZnJhbWUodGhpcy5wcm9wcy5kYXRhLmdsb2JhbF9wb3N0LmVtYmVkZGVkX2NvbnRlbnQpfT5cclxuXHRcdFx0XHRcdDwvZGl2PlxyXG5cclxuXHRcdFx0XHRcdDxkaXYgc3R5bGUgPSB7e2p1c3RpZnlDb250ZW50OidjZW50ZXInLCBkaXNwbGF5OidmbGV4JywgZmxleERpcmVjdGlvbjonY29sdW1uJywgcGFkZGluZ0xlZnQ6JzIwcHgnfX0+XHJcblx0XHRcdFx0XHRcdDxkaXYgc3R5bGUgPSB7e2ZvbnRTaXplOicxLjRlbScsIGZvbnRXZWlnaHQ6J2JvbGQnLCBkaXNwbGF5OidmbGV4JywgZmxleERpcmVjdGlvbjoncm93J319PlxyXG5cdFx0XHRcdFx0XHRcdDxkaXYgc3R5bGUgPSB7e2ZvbnRXZWlnaHQ6J2JvbGQnfX0+e2NvbnRlbnRfbmFtZX08L2Rpdj5cclxuXHRcdFx0XHRcdFx0XHQ8ZGl2IHN0eWxlID0ge3twYWRkaW5nTGVmdDpcIjhweFwiLCBwYWRkaW5nUmlnaHQ6XCI4cHhcIiwgZm9udFdlaWdodDonYm9sZCd9fT4gYnkgPC9kaXY+ICBcclxuXHRcdFx0XHRcdFx0XHQ8YSBocmVmID0ge1wiL2FydGlzdC9cIiArIHRoaXMucHJvcHMuZGF0YS5nbG9iYWxfcG9zdC5hcnRpc3R9Pnt0aGlzLnByb3BzLmRhdGEuZ2xvYmFsX3Bvc3QuYXJ0aXN0fTwvYT5cclxuXHRcdFx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0XHRcdHthbGJ1bV9kaXZ9XHJcblx0XHRcdFx0XHRcdDxkaXYgc3R5bGUgPSB7e2ZvbnRTaXplOicxLjFlbSd9fT5cclxuXHRcdFx0XHRcdFx0XHR7XCJSZWxlYXNlIERhdGU6IFwiICsgdXRpbHMubW9udGhOYW1lc1twYXJzZUludChkYXRlLmdldE1vbnRoKCkpXSsgXCIgXCIgKyBkYXRlLmdldERhdGUoKSArIFwiLCBcIiArIGRhdGUuZ2V0RnVsbFllYXIoKX1cclxuXHRcdFx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0XHRcdDxkaXYgc3R5bGUgPSB7e2Rpc3BsYXk6J2ZsZXgnLCBmbGV4RGlyZWN0aW9uOidyb3cnfX0+XHJcblx0XHRcdFx0XHRcdFx0PGRpdiBzdHlsZSA9IHt7fX0+XHJcblx0XHRcdFx0XHRcdFx0XHQ8ZGl2IHN0eWxlID0ge3tmb250U2l6ZTonMS4yZW0nLCBmb250V2VpZ2h0Oidub3JtYWwnfX0+IExpa2VzPC9kaXY+XHJcblx0XHRcdFx0XHRcdFx0XHQ8ZGl2IHN0eWxlID0ge3tmb250V2VpZ2h0Oidib2xkJywgZm9udFNpemU6JzEuMmVtJ319Pnt0aGlzLnByb3BzLmRhdGEubGlrZXN9PC9kaXY+XHJcblx0XHRcdFx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0XHRcdFx0PGRpdiBzdHlsZSA9IHt7cGFkZGluZ0xlZnQ6JzIwcHgnfX0+XHJcblx0XHRcdFx0XHRcdFx0XHQ8ZGl2IHN0eWxlID0ge3tmb250U2l6ZTonMS4yZW0nLCBmb250V2VpZ2h0Oidub3JtYWwnfX0+IFBvc3RzPC9kaXY+XHJcblx0XHRcdFx0XHRcdFx0XHQ8ZGl2IHN0eWxlID0ge3tmb250V2VpZ2h0Oidib2xkJywgZm9udFNpemU6JzEuMmVtJ319Pnt0aGlzLnByb3BzLmRhdGEubnVtX3Bvc3RzfTwvZGl2PlxyXG5cdFx0XHRcdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcdDxkaXYgc3R5bGUgPSB7e2ZvbnRXZWlnaHQ6J2JvbGQnLCBmb250U2l6ZTonMS41ZW0nLCBwYWRkaW5nVG9wOicyMHB4J319PlxyXG5cdFx0XHRcdFx0VG9wIFVzZXIgUG9zdHNcclxuXHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0XHQ8ZGl2IHN0eWxlID0ge3twYWRkaW5nVG9wOicyMHB4JywgcGFkZGluZ0JvdHRvbTonMjBweCd9fT5cclxuXHRcdFx0XHRcdDxHbG9iYWxJbmZvIHBvc3RzID0ge3RoaXMucHJvcHMuZGF0YS51c2VyX3Bvc3RzfSBnbG9iYWxfcG9zdCA9IHt0aGlzLnByb3BzLmRhdGEuZ2xvYmFsX3Bvc3R9IHVzZXJfcHJvZmlsZXMgPSB7dGhpcy5wcm9wcy5kYXRhLnVzZXJfcHJvZmlsZXN9IG51bV9jb21tZW50cyA9IHt0aGlzLnByb3BzLmRhdGEubnVtX2NvbW1lbnRzfS8+XHJcblx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdDwvZGl2PlxyXG5cdFx0KTtcclxuXHR9XHJcbn0iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgU3RhbmRhcmRIZWFkZXIgZnJvbSAnLi9zdGFuZGFyZF9oZWFkZXIuanMnXHJcbmltcG9ydCBGb2xsb3dlckluZm8gZnJvbSAnLi9mb2xsb3dlcmluZm8uanMnXHJcbmltcG9ydCB1dGlscyBmcm9tICcuL3V0aWxzLmpzJ1xyXG5pbXBvcnQgeyBQb3N0SW5mbywgbWFrZVBvc3QgfSBmcm9tICcuL3Bvc3QuanMnXHJcbi8vIGNsYXNzIEZvbGxvd2luZ0luZm8gZXh0ZW5kcyBSZWFjdC5Db21wb25lbnRcclxuLy8ge1xyXG4vLyBcdGNvbnN0cnVjdG9yKHByb3BzKVxyXG4vLyBcdHtcclxuLy8gXHRcdHN1cGVyKHByb3BzKVxyXG4vLyBcdH1cclxuXHJcbi8vIFx0cmVuZGVyKClcclxuLy8gXHR7XHJcbi8vIFx0XHRyZXR1cm4gKFxyXG4vLyBcdFx0XHQ8ZGl2PlxyXG4vLyBcdFx0XHRcdHggXHJcbi8vIFx0XHRcdFx0PGJ1dHRvbiBjbGFzc05hbWUgPSAnZm9sbG93X2J1dHRvbicgaWQgPSBcImZvbGxvd19idXR0b25cIiB0eXBlPVwiYnV0dG9uXCI+Rm9sbG93PC9idXR0b24+XHJcbi8vIFx0XHRcdFx0PGRpdiBjbGFzc05hbWUgPVwiZm9sbG93X2ljb25cIj5cclxuLy8gXHRcdFx0XHRcdE5vdCBGb2xsb3dpbmdcclxuLy8gXHRcdFx0XHQ8L2Rpdj5cclxuLy8gXHRcdFx0PC9kaXY+XHRcdFx0XHJcbi8vIFx0XHQpO1xyXG4vLyBcdH1cclxuLy8gfVxyXG5cclxuY2xhc3MgQWxidW1EaXNwbGF5IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50XHJcbntcclxuXHRjb25zdHJ1Y3Rvcihwcm9wcylcclxuXHR7XHJcblx0XHRzdXBlcihwcm9wcylcclxuXHRcdHRoaXMuYWxidW1zID0gW107XHJcblx0fVxyXG5cclxuXHRyZW5kZXJpZnJhbWUoaWZyYW1lKSB7XHJcblx0XHRyZXR1cm4ge1xyXG5cdFx0XHRfX2h0bWw6IGlmcmFtZVxyXG5cdFx0fTtcclxuXHR9XHJcblxyXG5cdGdlbmVyYXRlQWxidW1zKClcclxuXHR7XHJcblx0XHR2YXIgYWxidW1fY291bnQgPSAwO1xyXG5cdFx0Zm9yICh2YXIgYWxidW0gb2YgdGhpcy5wcm9wcy5kYXRhKSBcclxuXHRcdHtcclxuXHRcdFx0KythbGJ1bV9jb3VudDtcclxuXHRcdFx0aWYgKGFsYnVtX2NvdW50ID4gMylcclxuXHRcdFx0e1xyXG5cdFx0XHRcdGJyZWFrO1xyXG5cdFx0XHR9XHJcblx0XHRcdHRoaXMuYWxidW1zLnB1c2goXHJcblx0XHRcdDxkaXYga2V5ID0ge2FsYnVtLnBvc3RfaWR9IHN0eWxlID0ge3tkaXNwbGF5OiAnZmxleCcsIGZsZXhEaXJlY3Rpb246J2NvbHVtbicsIHBhZGRpbmc6JzEwcHgnfX0+XHJcblx0XHRcdFx0e2FsYnVtLmFsYnVtfVxyXG5cdFx0XHRcdDxkaXYgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw9e3RoaXMucmVuZGVyaWZyYW1lKHV0aWxzLlNldFNwb3RpZnlTaXplKGFsYnVtLmVtYmVkZGVkX2NvbnRlbnQsIDIxMiwgMjkyKSl9PjwvZGl2PlxyXG5cdFx0XHQ8L2Rpdj4pXHJcblxyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0Y29tcG9uZW50RGlkTW91bnQoKSBcclxuXHR7XHJcblx0XHR0aGlzLmdlbmVyYXRlQWxidW1zKCk7XHJcblx0fVxyXG5cclxuXHRyZW5kZXIoKVxyXG5cdHtcclxuXHJcblx0XHRyZXR1cm4gKFxyXG5cdFx0XHRcdDxkaXYgc3R5bGUgPSB7e21heFdpZHRoOic4MDBweCd9fT5cclxuXHRcdFx0XHRcdDxoMT4gPGEgaHJlZj0ge1wiL2FydGlzdC9cIiArIHRoaXMucHJvcHMuYXJ0aXN0ICsgXCIvYWxidW1zXCJ9PiBUb3AgQWxidW1zIDwvYT4gPC9oMT4gXHJcblx0XHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZSA9IFwiYWxidW1fZGlzcGxheVwiIHN0eWxlID0ge3tkaXNwbGF5OiAnZmxleCcsZmxleERpcmVjdGlvbjoncm93J319ID5cclxuXHRcdFx0XHRcdFx0e3RoaXMuYWxidW1zfVxyXG5cdFx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFxyXG5cdFx0KTtcclxuXHR9XHJcbn1cclxuXHJcbmNsYXNzIFNvbmdEaXNwbGF5IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50XHJcbntcclxuXHRjb25zdHJ1Y3Rvcihwcm9wcylcclxuXHR7XHJcblx0XHRzdXBlcihwcm9wcylcclxuXHRcdHRoaXMuc29uZ3MgPSBbXTtcclxuXHR9XHJcblxyXG5cdHJlbmRlcmlmcmFtZShpZnJhbWUpIHtcclxuXHRcdHJldHVybiB7XHJcblx0XHRcdF9faHRtbDogaWZyYW1lXHJcblx0XHR9O1xyXG5cdH1cclxuXHJcblx0Z2VuZXJhdGVTb25ncygpXHJcblx0e1xyXG5cdFx0dmFyIHNvbmdfY291bnQgPSB0aGlzLnNvbmdzLmxlbmd0aDtcclxuXHRcdGZvciAodmFyIHNvbmcgb2YgdGhpcy5wcm9wcy5kYXRhKSBcclxuXHRcdHtcclxuXHRcdFx0Kytzb25nX2NvdW50O1xyXG5cdFx0XHRpZiAoc29uZ19jb3VudCA+IDMpXHJcblx0XHRcdHtcclxuXHRcdFx0XHRicmVhaztcclxuXHRcdFx0fVxyXG5cdFx0XHR0aGlzLnNvbmdzLnB1c2goXHJcblx0XHRcdDxkaXYga2V5ID0ge3NvbmcucG9zdF9pZH0gc3R5bGUgPSB7e2Rpc3BsYXk6ICdmbGV4JywgZmxleERpcmVjdGlvbjonY29sdW1uJywgcGFkZGluZzonMTBweCd9fT5cclxuXHRcdFx0XHR7c29uZy5zb25nfVxyXG5cdFx0XHRcdDxkaXYgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw9e3RoaXMucmVuZGVyaWZyYW1lKHV0aWxzLlNldFNwb3RpZnlTaXplKHNvbmcuZW1iZWRkZWRfY29udGVudCwgMjEyLCAyOTIpKX0+PC9kaXY+XHJcblx0XHRcdDwvZGl2PilcclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdGNvbXBvbmVudERpZE1vdW50KCkgXHJcblx0e1xyXG5cdFx0dGhpcy5nZW5lcmF0ZVNvbmdzKCk7XHJcblx0fVxyXG5cclxuXHRyZW5kZXIoKVxyXG5cdHtcclxuXHRcdFxyXG5cdFx0cmV0dXJuIChcclxuXHRcdFx0XHQ8ZGl2IHN0eWxlID0ge3ttYXhXaWR0aDonODAwcHgnfX0+XHJcblx0XHRcdFx0XHQ8aDE+IDxhIGhyZWY9IHtcIi9hcnRpc3QvXCIgKyB0aGlzLnByb3BzLmFydGlzdCArIFwiL3NvbmdzXCJ9PiBUb3AgU29uZ3MgPC9hPiA8L2gxPiBcclxuXHRcdFx0XHRcdDxkaXYgY2xhc3NOYW1lID0gXCJzb25nX2Rpc3BsYXlcIiBzdHlsZSA9IHt7ZGlzcGxheTogJ2ZsZXgnLGZsZXhEaXJlY3Rpb246J3Jvdyd9fSA+XHJcblx0XHRcdFx0XHRcdHt0aGlzLnNvbmdzfVxyXG5cdFx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFxyXG5cdFx0KTtcclxuXHR9XHJcbn1cclxuXHJcbmNsYXNzIEFydGlzdFBpY3R1cmUgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnRcclxue1xyXG5cdGNvbnN0cnVjdG9yKHByb3BzKVxyXG5cdHtcclxuXHRcdHN1cGVyKHByb3BzKVxyXG5cdFx0dGhpcy5zdGF0ZSA9IHtwaWN0dXJlOnVuZGVmaW5lZH1cclxuXHR9XHJcblxyXG5cdGNvbXBvbmVudERpZE1vdW50KCkgXHJcblx0e1xyXG5cdFx0dmFyIHRoYXQgPSB0aGlzXHJcblx0ICAgIGZldGNoKFwiL2FydGlzdF9waWN0dXJlXCIsIHtcclxuXHQgICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcblx0ICAgICAgICBoZWFkZXJzOiB7XHJcblx0ICAgICAgICBcdCdBY2NlcHQnOiAnYXBwbGljYXRpb24vanNvbicsXHJcblx0ICAgICAgICBcdCdBdXRob3JpemF0aW9uJzogJ0Jhc2ljJyxcclxuXHQgICAgICAgIFx0J0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuXHQgICAgICAgIH0sXHJcblx0ICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7YXJ0aXN0OnRoYXQucHJvcHMuYXJ0aXN0LH0pfSlcclxuXHQgICAgLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHsgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTt9KVxyXG5cdCAgICAudGhlbihmdW5jdGlvbiAoZGF0YSkgeyBcclxuXHQgICAgXHR0aGF0LnNldFN0YXRlKHtwaWN0dXJlOmRhdGEucGljdHVyZX0pXHJcblx0IFx0fSlcdFx0XHJcblx0fVxyXG5cclxuXHRyZW5kZXIoKVxyXG5cdHtcclxuXHRcdHJldHVybiAoXHJcblx0XHRcdDxkaXY+XHJcblx0XHRcdFx0PGltZyBzdHlsZSA9IHt7d2lkdGg6JzI2MHB4JywgaGVpZ2h0OicyNjBweCd9fSBzcmMgPSB7dGhpcy5zdGF0ZS5waWN0dXJlfT48L2ltZz4gXHJcblx0XHRcdDwvZGl2PlxyXG5cdFx0KVxyXG5cdH1cclxufVxyXG5cclxuY2xhc3MgQXJ0aXN0UG9zdCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudFxyXG57XHJcblx0Y29uc3RydWN0b3IocHJvcHMpXHJcblx0e1xyXG5cdFx0c3VwZXIocHJvcHMpO1xyXG5cdH1cclxuXHJcblx0cmVuZGVyKClcclxuXHR7XHJcblx0XHRyZXR1cm4gKFxyXG5cdFx0XHQ8ZGl2IHN0eWxlPXt7d2lkdGg6JzczNXB4JywgYm9yZGVyOiAnMXB4IHNvbGlkICNGMUYxRjEnfX0+XHJcblx0XHRcdFx0PGRpdiBzdHlsZSA9IHt7ZGlzcGxheTonZmxleCcsIGZsZXhEaXJlY3Rpb246J3JvdycsIGhlaWdodDonMzAwcHgnLCBwYWRkaW5nTGVmdDonMjBweCcsIHBhZGRpbmdUb3A6JzIwcHgnfX0+XHJcblx0XHRcdFx0XHQ8ZGl2IHN0eWxlID0ge3t3aWR0aDonMjYwcHgnLCBoZWlnaHQ6JzI2MHB4J319PlxyXG5cdFx0XHRcdFx0XHQ8QXJ0aXN0UGljdHVyZSBhcnRpc3QgPSB7dGhpcy5wcm9wcy5kYXRhLmFydGlzdH0vPlxyXG5cdFx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0XHQ8ZGl2IHN0eWxlID0ge3twYWRkaW5nTGVmdDonMjBweCcsIGRpc3BsYXk6J2ZsZXgnLCBhbGlnbkl0ZW1zOidjZW50ZXInLCBqdXN0aWZ5Q29udGVudDonY2VudGVyJywgZmxleERpcmVjdGlvbjoncm93JywgaGVpZ2h0OicyNjBweCd9fT5cclxuXHRcdFx0XHRcdFx0PGRpdiBzdHlsZSA9IHt7Zm9udFdlaWdodDonYm9sZCcsIGZvbnRTaXplOic0MHB4J319PlxyXG5cdFx0XHRcdFx0XHRcdHt0aGlzLnByb3BzLmRhdGEuYXJ0aXN0fSBcclxuXHRcdFx0XHRcdFx0XHQ8ZGl2ICBzdHlsZSA9IHt7Zm9udFdlaWdodDoncmVndWxhcicsIGZvbnRTaXplOicyMHB4J319PlxyXG5cdFx0XHRcdFx0XHRcdFx0e3RoaXMucHJvcHMuZGF0YS5udW1fdXNlcl9wb3N0cyArIFwiIFVzZXIgUG9zdHNcIn1cclxuXHRcdFx0XHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0XHRcdDxkaXYgc3R5bGUgPSB7e3Bvc2l0aW9uOidyZWxhdGl2ZScsIGxlZnQ6JzMycHgnLCBwYWRkaW5nVG9wOicxMHB4J319PlxyXG5cdFx0XHRcdFx0XHRcdDxidXR0b24gc3R5bGUgPSB7e2hlaWdodDonMzhweCcsIHdpZHRoOicxMjBweCcsIGZvbnRTaXplOicxOHB4J319ICBjbGFzc05hbWUgPSBcImdyYXlCdXR0b25cIj4gRm9sbG93IDwvYnV0dG9uPlxyXG5cdFx0XHRcdFx0XHRcdDxkaXYgc3R5bGUgPSB7e2ZvbnRTaXplOicyMHB4JywgcGFkZGluZ1RvcDonMTBweCd9fT5cclxuXHRcdFx0XHRcdFx0XHRcdHt0aGlzLnByb3BzLmRhdGEuZm9sbG93cy5sZW5ndGggKyBcIiBGb2xsb3dlcnNcIn1cclxuXHRcdFx0XHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0XHQ8L2Rpdj5cclxuXHJcblx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0PGRpdiBzdHlsZSA9IHt7cGFkZGluZ0xlZnQ6JzIwcHgnfX0+XHJcblx0XHRcdFx0XHQ8QWxidW1EaXNwbGF5IGRhdGEgPSB7dGhpcy5wcm9wcy5kYXRhLmFsYnVtX2RhdGF9IGFydGlzdCA9IHt0aGlzLnByb3BzLmRhdGEuYXJ0aXN0fS8+XHJcblx0XHRcdFx0XHQ8U29uZ0Rpc3BsYXkgZGF0YSA9IHt0aGlzLnByb3BzLmRhdGEuc29uZ19kYXRhfSBhcnRpc3QgPSB7dGhpcy5wcm9wcy5kYXRhLmFydGlzdH0vPlxyXG5cdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHQ8L2Rpdj5cclxuXHRcdCk7XHJcblx0fVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBBcnRpc3RQYWdlIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50XHJcbntcclxuXHRjb25zdHJ1Y3Rvcihwcm9wcylcclxuXHR7XHJcblx0XHRzdXBlcihwcm9wcyk7XHJcblx0XHR0aGlzLnN0YXRlID0geyBwb3N0czogW10gfTtcclxuXHRcdHRoaXMub2Zmc2V0ID0gdGhpcy5wcm9wcy5kYXRhLnNvbmdzLmxlbmd0aDtcclxuXHR9XHJcblxyXG5cdGNvbXBvbmVudERpZE1vdW50KCkgXHJcblx0e1xyXG5cdHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdzY3JvbGwnLCB0aGlzLmhhbmRsZVNjcm9sbC5iaW5kKHRoaXMpKTtcclxuXHJcblx0XHRsZXQgc3RhcnRpbmdQb3N0cyA9IFtdO1xyXG5cdFx0Zm9yICh2YXIgc29uZyBvZiB0aGlzLnByb3BzLmRhdGEuc29uZ3MpIHtcclxuXHRcdFx0c3RhcnRpbmdQb3N0cy5wdXNoKG1ha2VQb3N0KFxyXG5cdFx0XHRcdHNvbmcsXHJcblx0XHRcdFx0dGhpcy5wcm9wcy5kYXRhLmxpa2VzLFxyXG5cdFx0XHRcdHRoaXMucHJvcHMuZGF0YS5udW1fY29tbWVudHMsXHJcblx0XHRcdFx0W10sXHJcblx0XHRcdFx0W10sXHJcblx0XHRcdFx0dGhpcy5wcm9wcy5kYXRhLnVzZXJfcHJvZmlsZXMsXHJcblx0XHRcdCkpO1xyXG5cdFx0fVxyXG5cdFx0dGhpcy5zZXRTdGF0ZSh7cG9zdHM6IHN0YXJ0aW5nUG9zdHN9KTtcclxuXHR9XHJcblxyXG5cdGNvbXBvbmVudFdpbGxVbm1vdW50KCkgXHJcblx0e1xyXG5cdCAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcignc2Nyb2xsJywgdGhpcy5oYW5kbGVTY3JvbGwuYmluZCh0aGlzKSk7XHJcblx0fVxyXG5cclxuXHRoYW5kbGVTY3JvbGwoKSB7XHJcblx0XHRpZiAoKHdpbmRvdy5pbm5lckhlaWdodCArIHdpbmRvdy5zY3JvbGxZKSA+PSBkb2N1bWVudC5ib2R5Lm9mZnNldEhlaWdodCAmJiAhdGhpcy5sb2FkaW5nX3Bvc3RzX3NlbWFwaG9yKSBcclxuXHRcdHtcclxuXHRcdFx0dmFyIHRoYXQgPSB0aGlzXHJcblx0XHRcdHRoaXMubG9hZGluZ19wb3N0c19zZW1hcGhvciA9IHRydWVcclxuXHRcdCAgICBmZXRjaChcIi9sb2FkX2FydGlzdF9wb3N0X2RhdGFcIiwge1xyXG5cdFx0ICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxyXG5cdFx0ICAgICAgICBoZWFkZXJzOiB7XHJcblx0XHQgICAgICAgIFx0J0FjY2VwdCc6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuXHRcdCAgICAgICAgXHQnQXV0aG9yaXphdGlvbic6ICdCYXNpYycsXHJcblx0XHQgICAgICAgIFx0J0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuXHRcdCAgICAgICAgfSxcclxuXHRcdCAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe29mZnNldDp0aGF0Lm9mZnNldCxcclxuXHRcdCAgICAgICAgXHRcdFx0XHRcdCAgYXJ0aXN0OiB0aGF0LnByb3BzLmRhdGEuYXJ0aXN0fSl9KVxyXG5cdFx0ICAgIC50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7IHJldHVybiByZXNwb25zZS5qc29uKCk7fSlcclxuXHRcdCAgICAudGhlbihmdW5jdGlvbiAoZGF0YSkgeyBcclxuXHRcdCAgICBcdHRoYXQub2Zmc2V0ICs9IGRhdGEuc29uZ3MubGVuZ3RoO1xyXG5cdFx0ICAgIFx0Ly90aGF0LnBvc3RzUmVmLmN1cnJlbnQuYWRkUG9zdHMoZGF0YS5zb25ncywgZGF0YS5saWtlcywgZGF0YS5udW1fY29tbWVudHMsIGRhdGEubnVtX3Bvc3RzLCBkYXRhLnVzZXJfcHJvZmlsZXMpXHJcblx0XHRcdFx0bGV0IG5ld1Bvc3RzID0gW107XHJcblx0XHRcdFx0Zm9yICh2YXIgc29uZyBvZiBkYXRhLnNvbmdzKSB7XHJcblx0XHRcdFx0XHRuZXdQb3N0cy5wdXNoKG1ha2VQb3N0KFxyXG5cdFx0XHRcdFx0XHRzb25nLFxyXG5cdFx0XHRcdFx0XHRkYXRhLmxpa2VzLFxyXG5cdFx0XHRcdFx0XHRkYXRhLm51bV9jb21tZW50cyxcclxuXHRcdFx0XHRcdFx0ZGF0YS5udW1fcG9zdHMsXHJcblx0XHRcdFx0XHRcdGRhdGEuYnVtcHMsXHJcblx0XHRcdFx0XHRcdGRhdGEudXNlcl9wcm9maWxlc1xyXG5cdFx0XHRcdFx0KSk7XHJcblx0XHRcdFx0fVx0XHRcclxuXHRcdFx0XHR0aGF0LnNldFN0YXRlKHtwb3N0czogdGhhdC5zdGF0ZS5wb3N0cy5jb25jYXQobmV3UG9zdHMpfSk7XHJcblx0XHQgICAgXHR0aGF0LmxvYWRpbmdfcG9zdHNfc2VtYXBob3IgPSBmYWxzZTtcclxuXHRcdCBcdH0pXHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHRyZW5kZXIoKVxyXG5cdHtcclxuXHRcdHJldHVybiAoXHJcblxyXG5cdFx0XHQ8ZGl2IHN0eWxlPXt7bWFyZ2luOicwcHggYXV0bycsIHdpZHRoOic3MzVweCcsIHBhZGRpbmdUb3A6JzUwcHgnfX0+XHJcblx0XHRcdFx0PGRpdiBzdHlsZSA9IHt7YmFja2dyb3VuZENvbG9yOlwiI0ZGRkZGRlwiLCBib3JkZXJSYWRpdXM6JzdweCd9fT5cclxuXHRcdFx0XHRcdDxBcnRpc3RQb3N0IGRhdGEgPSB7dGhpcy5wcm9wcy5kYXRhfS8+XHJcblx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0PGRpdiBzdHlsZSA9IHt7cGFkZGluZ1RvcDonMjBweCd9fSA+XHJcblx0XHRcdFx0XHQ8UG9zdEluZm8gcG9zdHMgPSB7dGhpcy5zdGF0ZS5wb3N0c30vPlxyXG5cdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHQ8L2Rpdj5cclxuXHJcblx0XHQpO1xyXG5cdH1cclxufSIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCBTdGFuZGFyZEhlYWRlciBmcm9tICcuL3N0YW5kYXJkX2hlYWRlci5qcydcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEFydGlzdFNvbmdzUGFnZSBleHRlbmRzIFJlYWN0LkNvbXBvbmVudFxyXG57XHJcblx0Y29uc3RydWN0b3IocHJvcHMpXHJcblx0e1xyXG5cdFx0c3VwZXIocHJvcHMpXHJcblx0XHR0aGlzLnNvbmdzID0gW107XHJcblx0fVxyXG5cclxuXHRnZW5lcmF0ZVNvbmdzKClcclxuXHR7XHJcblx0XHRmb3IgKHZhciBzb25nIG9mIHRoaXMucHJvcHMuZGF0YS5zb25nX2RhdGEpIFxyXG5cdFx0e1xyXG5cdFx0XHR0aGlzLnNvbmdzLnB1c2goXHJcblx0XHRcdDxkaXYga2V5ID17c29uZy5wb3N0X2lkfSBzdHlsZSA9IHt7ZGlzcGxheTogJ2ZsZXgnLGZsZXhEaXJlY3Rpb246J2NvbHVtbid9fT5cclxuXHRcdFx0XHQ8aDI+ICA8YSBocmVmID0ge1wiL3Bvc3QvXCIgKyBzb25nLmFydGlzdCArIFwiL1wiICsgc29uZy5zb25nfT57c29uZy5zb25nfSA8L2E+PC9oMj5cclxuXHRcdFx0PC9kaXY+KVxyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0cmVuZGVyKClcclxuXHR7XHJcblx0XHR0aGlzLmdlbmVyYXRlU29uZ3MoKTtcclxuXHRcdHJldHVybiAoXHJcblx0XHRcdDxkaXY+XHJcblx0XHRcdFx0PGRpdiBjbGFzc05hbWUgPSBcInNvbmdzX2Rpc3BsYXlcIiBzdHlsZSA9IHt7bGVmdDonMTUlJywgdG9wOicxMDBweCcsIHBvc2l0aW9uOidyZWxhdGl2ZSd9fT5cclxuXHRcdFx0XHQ8aDE+IFNvbmdzIDwvaDE+XHJcblx0XHRcdFx0XHR7dGhpcy5zb25nc31cclxuXHRcdFx0XHQ8L2Rpdj5cdFxyXG5cdFx0XHQ8L2Rpdj5cclxuXHRcdCk7XHJcblx0fVxyXG59IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IFN0YW5kYXJkSGVhZGVyIGZyb20gJy4vc3RhbmRhcmRfaGVhZGVyLmpzJ1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQXJ0aXN0QWxidW1zUGFnZSBleHRlbmRzIFJlYWN0LkNvbXBvbmVudFxyXG57XHJcblx0Y29uc3RydWN0b3IocHJvcHMpXHJcblx0e1xyXG5cdFx0c3VwZXIocHJvcHMpXHJcblx0XHR0aGlzLmFsYnVtcyA9IFtdO1xyXG5cdH1cclxuXHJcblx0Z2VuZXJhdGVBbGJ1bXMoKVxyXG5cdHtcclxuXHRcdGZvciAodmFyIGFsYnVtIG9mIHRoaXMucHJvcHMuZGF0YS5hbGJ1bV9kYXRhKSBcclxuXHRcdHtcclxuXHRcdFx0dGhpcy5hbGJ1bXMucHVzaChcclxuXHRcdFx0PGRpdiBrZXkgPXthbGJ1bS5wb3N0X2lkfSBzdHlsZSA9IHt7ZGlzcGxheTogJ2ZsZXgnLGZsZXhEaXJlY3Rpb246J2NvbHVtbid9fT5cclxuXHRcdFx0XHQ8aDI+ICA8YSBocmVmID0ge1wiL2FsYnVtL1wiICsgYWxidW0uYXJ0aXN0ICsgXCIvXCIgKyBhbGJ1bS5hbGJ1bX0+e2FsYnVtLmFsYnVtfSA8L2E+PC9oMj5cclxuXHRcdFx0PC9kaXY+KTtcclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdHJlbmRlcigpXHJcblx0e1xyXG5cdFx0dGhpcy5nZW5lcmF0ZUFsYnVtcygpO1xyXG5cdFx0cmV0dXJuIChcclxuXHRcdFx0PGRpdj5cclxuXHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZSA9IFwiYWxidW1zX2Rpc3BsYXlcIiBzdHlsZSA9IHt7bGVmdDonMTUlJywgdG9wOicxMDBweCcsIHBvc2l0aW9uOidyZWxhdGl2ZSd9fT5cclxuXHRcdFx0XHQ8aDE+IEFsYnVtcyA8L2gxPlxyXG5cdFx0XHRcdFx0e3RoaXMuYWxidW1zfVxyXG5cdFx0XHRcdDwvZGl2Plx0XHJcblx0XHRcdDwvZGl2PlxyXG5cdFx0KTtcclxuXHR9XHJcbn0iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgU3RhbmRhcmRIZWFkZXIgZnJvbSAnLi9zdGFuZGFyZF9oZWFkZXIuanMnXHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBMb2dpblBhZ2UgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnRcclxue1xyXG5cdGNvbnN0cnVjdG9yKHByb3BzKVxyXG5cdHtcclxuXHRcdHN1cGVyKHByb3BzKVxyXG5cdFx0dGhpcy51c2VybmFtZVJlZiA9IFJlYWN0LmNyZWF0ZVJlZigpO1xyXG5cdFx0dGhpcy5wYXNzd29yZFJlZiA9IFJlYWN0LmNyZWF0ZVJlZigpO1xyXG5cdFx0dGhpcy5sb2dpbl9tZXNzYWdlID0gXCJcIjtcclxuXHJcblx0fVxyXG5cclxuXHRzdWJtaXRMb2dpbigpXHJcblx0e1xyXG5cdFx0dmFyIHRoYXQgPSB0aGlzO1xyXG5cdCAgICBmZXRjaChcIi9sb2dpblwiLCB7XHJcblx0ICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxyXG5cdCAgICAgICAgaGVhZGVyczoge1xyXG5cdCAgICAgICAgXHRBY2NlcHQ6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuXHQgICAgICAgIFx0J0F1dGhvcml6YXRpb24nOiAnQmFzaWMnLFxyXG5cdCAgICAgICAgXHQnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxyXG5cdCAgICAgICAgfSxcclxuXHQgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHt1c2VybmFtZTogdGhpcy51c2VybmFtZVJlZi5jdXJyZW50LnZhbHVlLCBcclxuXHQgICAgICAgIFx0ICAgcGFzc3dvcmQ6IHRoaXMucGFzc3dvcmRSZWYuY3VycmVudC52YWx1ZX0pLFxyXG5cdCAgICB9KS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7IHJldHVybiByZXNwb25zZS5qc29uKCk7fSlcclxuXHQgICAgLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsgICAgXHRcclxuXHQgICAgXHR0aGF0LmxvZ2luX21lc3NhZ2UgPSBkYXRhLmxvZ2luX21lc3NhZ2VcclxuXHQgICAgXHRpZiAoZGF0YS5sb2dpbl9tZXNzYWdlID09IFwiTG9naW4gU3VjY2Vzc2Z1bFwiKVxyXG5cdCAgICBcdHtcclxuXHQgICAgXHRcdHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gXCIvXCJcclxuXHQgICAgXHR9XHJcblx0ICAgIFx0ZWxzZVxyXG5cdCAgICBcdHtcclxuXHQgICAgXHRcdHRoYXQuZm9yY2VVcGRhdGUoKTtcclxuXHQgICAgXHR9XHJcblx0IFx0fSlcdFxyXG5cdH1cclxuXHJcblx0cmVuZGVyKClcclxuXHR7XHJcblx0XHRyZXR1cm4oXHJcblx0XHRcdDxkaXY+XHJcblx0XHRcdFx0PHNlY3Rpb24gY2xhc3NOYW1lID0gXCJoZXJvXCIgc3R5bGUgPSB7e3Bvc2l0aW9uOidhYnNvbHV0ZScsIGxlZnQ6JzEwJScsIHRvcDonMjAlJ319PlxyXG5cdFx0XHRcdFx0PGRpdiBjbGFzc05hbWUgPSAgXCJoZXJvLWNvbnRlbnRcIiA+XHJcblx0XHRcdFx0XHRcdDxoMj5Mb2dpbjwvaDI+XHJcblx0XHRcdFx0XHRcdCAgPGxhYmVsIHN0eWxlPXt7Y29sb3I6J2JsYWNrJ319PlVzZXJuYW1lOjwvbGFiZWw+XHJcblx0XHRcdFx0XHRcdCAgPGlucHV0IHJlZiA9IHt0aGlzLnVzZXJuYW1lUmVmfSB0eXBlPVwidGV4dFwiIG5hbWU9XCJ1c2VybmFtZVwiLz48YnIvPlxyXG5cdFx0XHRcdFx0XHQgIDxsYWJlbCBzdHlsZT17e2NvbG9yOidibGFjayd9fT5QYXNzd29yZDo8L2xhYmVsPlxyXG5cdFx0XHRcdFx0XHQgIDxpbnB1dCByZWYgPSB7dGhpcy5wYXNzd29yZFJlZn0gdHlwZSA9ICdwYXNzd29yZCcgbmFtZT1cInBhc3N3b3JkXCIvPlxyXG5cdFx0XHRcdFx0XHRcdDxwPlxyXG5cdFx0XHRcdFx0XHRcdCAgPGJ1dHRvbiBvbkNsaWNrPSB7dGhpcy5zdWJtaXRMb2dpbi5iaW5kKHRoaXMpfSB0eXBlPVwic3VibWl0XCIgaWQ9XCJzdWJtaXRCdXR0b25cIiBjbGFzc05hbWU9XCJidG4gYnRuLWxnIGJ0bi1wcmltYXJ5XCIgPkxvZ2luPC9idXR0b24+XHJcblx0XHRcdFx0XHRcdFx0ICA8YSBocmVmID0gXCIvcmVnaXN0ZXJcIiBpZD1cInN1Ym1pdEJ1dHRvblwiIGNsYXNzTmFtZT1cImJ0biBidG4tbGcgYnRuLXByaW1hcnlcIiA+UmVnaXN0ZXI8L2E+XHJcblx0XHRcdFx0XHRcdFx0PC9wPlxyXG5cdFx0XHRcdFx0XHRcdDxwPlxyXG5cdFx0XHRcdFx0XHRcdFx0e3RoaXMubG9naW5fbWVzc2FnZX1cclxuXHRcdFx0XHRcdFx0XHQ8L3A+XHJcblx0XHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0XHQ8L3NlY3Rpb24+XHJcblxyXG5cdFx0XHQ8L2Rpdj5cclxuXHRcdCk7XHJcblx0fVxyXG59IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IFN0YW5kYXJkSGVhZGVyIGZyb20gJy4vc3RhbmRhcmRfaGVhZGVyLmpzJ1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUmVnaXN0ZXJQYWdlIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50XHJcbntcclxuXHRjb25zdHJ1Y3Rvcihwcm9wcylcclxuXHR7XHJcblx0XHRzdXBlcihwcm9wcylcclxuXHRcdHRoaXMuZW1haWxSZWYgPSBSZWFjdC5jcmVhdGVSZWYoKTtcclxuXHRcdHRoaXMudXNlcm5hbWVSZWYgPSBSZWFjdC5jcmVhdGVSZWYoKTtcclxuXHRcdHRoaXMucGFzc3dvcmRSZWYgPSBSZWFjdC5jcmVhdGVSZWYoKTtcclxuXHRcdHRoaXMuY29uZmlybVJlZiA9IFJlYWN0LmNyZWF0ZVJlZigpO1xyXG5cdFx0dGhpcy5yZWdpc3RyYXRpb25fbWVzc2FnZSA9IFwiXCI7XHJcblx0XHRcclxuXHR9XHJcblx0XHJcblx0c3VibWl0UmVnaXN0cmF0aW9uKGUpXHJcblx0e1xyXG5cdFx0dmFyIHRoYXQgPSB0aGlzO1xyXG5cdCAgICBmZXRjaChcIi9yZWdpc3RlclwiLCB7XHJcblx0ICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxyXG5cdCAgICAgICAgaGVhZGVyczoge1xyXG5cdCAgICAgICAgXHRBY2NlcHQ6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuXHQgICAgICAgIFx0J0F1dGhvcml6YXRpb24nOiAnQmFzaWMnLFxyXG5cdCAgICAgICAgXHQnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxyXG5cdCAgICAgICAgfSxcclxuXHQgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHt1c2VybmFtZTogdGhpcy51c2VybmFtZVJlZi5jdXJyZW50LnZhbHVlLCBcclxuXHQgICAgICAgIFx0ICAgcGFzc3dvcmQ6IHRoaXMucGFzc3dvcmRSZWYuY3VycmVudC52YWx1ZSxcclxuXHQgICAgICAgIFx0ICAgcGFzc3dvcmRfY29uZmlybTogdGhpcy5jb25maXJtUmVmLmN1cnJlbnQudmFsdWUsXHJcblx0ICAgICAgICBcdCAgIGVtYWlsOiB0aGlzLmVtYWlsUmVmLmN1cnJlbnQudmFsdWV9KSxcclxuXHQgICAgfSkudGhlbihmdW5jdGlvbihyZXNwb25zZSkgeyByZXR1cm4gcmVzcG9uc2UuanNvbigpO30pXHJcblx0ICAgIC50aGVuKGZ1bmN0aW9uIChkYXRhKSB7ICAgIFx0XHJcblx0ICBcdFx0dGhhdC5yZWdpc3RyYXRpb25fbWVzc2FnZSA9IGRhdGEubWVzc2FnZVxyXG5cdCAgXHRcdGlmIChkYXRhLm1lc3NhZ2UgPT0gXCJSZWdpc3RyYXRpb24gU3VjY2Vzc2Z1bFwiKVxyXG5cdCAgXHRcdHtcclxuXHQgIFx0XHRcdHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gXCIvXCJcclxuXHQgIFx0XHR9XHJcblx0ICBcdFx0ZWxzZVxyXG5cdCAgXHRcdHtcclxuXHQgIFx0XHRcdHRoYXQuZm9yY2VVcGRhdGUoKTtcclxuXHQgIFx0XHR9XHJcblx0IFx0fSlcdFx0XHRcclxuXHQgICAgXHJcblx0fVxyXG5cclxuXHRyZW5kZXIoKVxyXG5cdHtcclxuXHRcdHJldHVybiAoXHJcblx0XHRcdDxkaXY+XHJcblx0XHRcdFx0PHNlY3Rpb24gY2xhc3NOYW1lID0gXCJoZXJvXCIgc3R5bGUgPSB7e3Bvc2l0aW9uOidhYnNvbHV0ZScsIGxlZnQ6JzEwJScsIHRvcDonMjAlJ319PlxyXG5cdFx0XHRcdDxkaXYgY2xhc3NOYW1lPSAgXCJoZXJvLWNvbnRlbnRcIiA+XHJcblx0XHRcdFx0XHQ8aDI+UmVnaXN0ZXI8L2gyPlxyXG5cclxuXHRcdFx0XHQgIDxsYWJlbCBzdHlsZT17e2NvbG9yOidibGFjayd9fSA+RW50ZXIgRW1haWw6PC9sYWJlbD5cdFxyXG5cdFx0XHRcdCAgPGlucHV0IHJlZiA9IHt0aGlzLmVtYWlsUmVmfSB0eXBlPVwidGV4dFwiIG5hbWU9XCJlbWFpbFwiLz48YnIvPlxyXG5cdFx0XHRcdCAgPGxhYmVsIHN0eWxlPXt7Y29sb3I6J2JsYWNrJ319ID5FbnRlciBVc2VybmFtZTo8L2xhYmVsPlxyXG5cdFx0XHRcdCAgPGlucHV0IHJlZiA9IHt0aGlzLnVzZXJuYW1lUmVmfSB0eXBlPVwidGV4dFwiIG5hbWU9XCJ1c2VybmFtZVwiLz48YnIvPlxyXG5cdFx0XHRcdCAgPGxhYmVsIHN0eWxlPXt7Y29sb3I6J2JsYWNrJ319ID5FbnRlciBQYXNzd29yZDo8L2xhYmVsPlxyXG5cdFx0XHRcdCAgPGlucHV0IHR5cGUgPSAncGFzc3dvcmQnIHJlZiA9IHt0aGlzLnBhc3N3b3JkUmVmfSBuYW1lPVwicGFzc3dvcmRcIiAvPjxici8+XHJcblx0XHRcdFx0ICA8bGFiZWwgc3R5bGU9e3tjb2xvcjonYmxhY2snfX0+Q29uZmlybSBQYXNzd29yZDo8L2xhYmVsPlxyXG5cdFx0XHRcdCAgPGlucHV0IHR5cGUgPSAncGFzc3dvcmQnIHJlZiA9IHt0aGlzLmNvbmZpcm1SZWZ9IG5hbWU9XCJwYXNzd29yZF9jb25maXJtXCIvPlxyXG5cdFx0XHRcdCAgPHA+XHJcblx0XHRcdFx0ICA8YnV0dG9uIGhyZWYgPSBcIi9cIiB0eXBlPVwic3VibWl0XCIgaWQ9XCJzdWJtaXRCdXR0b25cIiBjbGFzc05hbWU9XCJidG4gYnRuLWxnIGJ0bi1wcmltYXJ5XCIgb25DbGljaz17dGhpcy5zdWJtaXRSZWdpc3RyYXRpb24uYmluZCh0aGlzKX0+UmVnaXN0ZXI8L2J1dHRvbj5cclxuXHRcdFx0XHQgIDwvcD5cclxuXHRcdFx0XHRcdDxwPlxyXG5cdFx0XHRcdFx0XHR7dGhpcy5yZWdpc3RyYXRpb25fbWVzc2FnZX1cclxuXHRcdFx0XHRcdDwvcD5cclxuXHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0XHQ8L3NlY3Rpb24+XHJcblxyXG5cdFx0XHQ8L2Rpdj5cclxuXHRcdCk7XHJcblx0fVxyXG59IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IFN0YW5kYXJkSGVhZGVyIGZyb20gJy4vc3RhbmRhcmRfaGVhZGVyLmpzJ1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRm9sbG93ZXJzUGFnZSBleHRlbmRzIFJlYWN0LkNvbXBvbmVudFxyXG57XHJcblx0Y29uc3RydWN0b3IocHJvcHMpXHJcblx0e1xyXG5cdFx0c3VwZXIocHJvcHMpXHJcblx0XHR0aGlzLmZvbGxvd2VycyA9IFtdXHJcblx0fVxyXG5cclxuXHRnZW5lcmF0ZUZvbGxvd2VycygpXHJcblx0e1xyXG5cdFx0Zm9yICh2YXIgZm9sbG93ZXIgb2YgdGhpcy5wcm9wcy5kYXRhLmZvbGxvd2VycykgXHJcblx0XHR7XHJcblx0XHRcdHRoaXMuZm9sbG93ZXJzLnB1c2goPGRpdiBrZXkgPSB7Zm9sbG93ZXIudXNlcl9pZH0+PGEgaHJlZiA9IHtcIi91c2VyL1wiICsgZm9sbG93ZXIudXNlcl9pZH0+e2ZvbGxvd2VyLnVzZXJfaWR9PC9hPjwvZGl2PilcclxuXHRcdH1cclxuXHR9XHRcclxuXHJcblx0cmVuZGVyKClcclxuXHR7XHJcblx0XHR0aGlzLmdlbmVyYXRlRm9sbG93ZXJzKCk7XHJcblx0XHRyZXR1cm4gKFxyXG5cdFx0XHQ8ZGl2PlxyXG5cdFx0XHRcdDxkaXYgY2xhc3NOYW1lID0gXCJmb2xsb3dlcnNfZGl2XCIgc3R5bGUgPSB7e2xlZnQ6JzE1JScsIHRvcDonMTAwcHgnLCBwb3NpdGlvbjoncmVsYXRpdmUnfX0+XHJcblx0XHRcdFx0XHQ8aDE+IEZvbGxvd2VycyA8L2gxPlxyXG5cdFx0XHRcdFx0XHR7dGhpcy5mb2xsb3dlcnN9XHJcblx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdDwvZGl2PlxyXG5cdFx0KTtcclxuXHR9XHJcbn0iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgU3RhbmRhcmRIZWFkZXIgZnJvbSAnLi9zdGFuZGFyZF9oZWFkZXIuanMnXHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBGb2xsb3dpbmdQYWdlIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50XHJcbntcclxuXHRjb25zdHJ1Y3Rvcihwcm9wcylcclxuXHR7XHJcblx0XHRzdXBlcihwcm9wcylcclxuXHRcdHRoaXMuZm9sbG93cyA9IFtdXHJcblx0fVxyXG5cclxuXHRnZW5lcmF0ZUZvbGxvd3MoKVxyXG5cdHtcclxuXHRcdGZvciAodmFyIGZvbGxvdyBvZiB0aGlzLnByb3BzLmRhdGEuZm9sbG93aW5nKSBcclxuXHRcdHtcclxuXHRcdFx0dGhpcy5mb2xsb3dzLnB1c2goPGRpdiBrZXkgPSB7Zm9sbG93LnVzZXJfaWR9PjxhIGhyZWYgPSB7XCIvdXNlci9cIiArIGZvbGxvdy51c2VyX2lkfT57Zm9sbG93LnVzZXJfaWR9PC9hPjwvZGl2PilcclxuXHRcdH1cclxuXHR9XHRcclxuXHJcblx0cmVuZGVyKClcclxuXHR7XHJcblx0XHR0aGlzLmdlbmVyYXRlRm9sbG93cygpO1xyXG5cdFx0cmV0dXJuIChcclxuXHRcdFx0PGRpdj5cclxuXHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZSA9IFwiZm9sbG93c19kaXZcIiBzdHlsZSA9IHt7bGVmdDonMTUlJywgdG9wOicxMDBweCcsIHBvc2l0aW9uOidyZWxhdGl2ZSd9fT5cclxuXHRcdFx0XHRcdDxoMT4gRm9sbG93cyA8L2gxPlxyXG5cdFx0XHRcdFx0XHR7dGhpcy5mb2xsb3dzfVxyXG5cdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHQ8L2Rpdj5cclxuXHRcdCk7XHJcblx0fVxyXG59IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IFN0YW5kYXJkSGVhZGVyIGZyb20gJy4vc3RhbmRhcmRfaGVhZGVyLmpzJ1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVXNlclBvc3RMaWtlc1BhZ2UgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnRcclxue1xyXG5cdGNvbnN0cnVjdG9yKHByb3BzKVxyXG5cdHtcclxuXHRcdHN1cGVyKHByb3BzKVxyXG5cdFx0dGhpcy5saWtlcyA9IFtdXHJcblx0XHR0aGlzLmRpc2xpa2VzID0gW11cclxuXHR9XHJcblxyXG5cdGdlbmVyYXRlbGlrZXMoKVxyXG5cdHtcclxuXHRcdGZvciAodmFyIGxpa2Ugb2YgdGhpcy5wcm9wcy5kYXRhLmxpa2VzKSBcclxuXHRcdHtcclxuXHRcdFx0dGhpcy5saWtlcy5wdXNoKDxkaXYga2V5ID0ge2xpa2UudXNlcl9pZH0+PGEgaHJlZiA9IHtcIi91c2VyL1wiICsgbGlrZS51c2VyX2lkfT57bGlrZS51c2VyX2lkfTwvYT48L2Rpdj4pXHJcblx0XHR9XHJcblx0XHRmb3IgKHZhciBkaXNsaWtlIG9mIHRoaXMucHJvcHMuZGF0YS5kaXNsaWtlcykgXHJcblx0XHR7XHJcblx0XHRcdHRoaXMuZGlzbGlrZXMucHVzaCg8ZGl2IGtleSA9IHtkaXNsaWtlLnVzZXJfaWR9PjxhIGhyZWYgPSB7XCIvdXNlci9cIiArIGRpc2xpa2UudXNlcl9pZH0+e2Rpc2xpa2UudXNlcl9pZH08L2E+PC9kaXY+KVxyXG5cdFx0fVxyXG5cdH1cdFxyXG5cclxuXHRyZW5kZXIoKVxyXG5cdHtcclxuXHRcdHRoaXMuZ2VuZXJhdGVsaWtlcygpO1xyXG5cdFx0cmV0dXJuIChcclxuXHRcdFx0PGRpdiBzdHlsZSA9IHt7ZGlzcGxheTonZmxleCcsIGZsZXhEaXJlY3Rpb246J3JvdycsIGxlZnQ6JzE1JScsIHRvcDonMTAwcHgnLCBwb3NpdGlvbjoncmVsYXRpdmUnfX0+XHJcblx0XHRcdFx0PGRpdiBjbGFzc05hbWUgPSBcImxpa2VzXCIgc3R5bGUgPSB7e3BhZGRpbmdSaWdodDogJzEwJScsIGJvcmRlclJpZ2h0OicycHggc29saWQgYmxhY2snfX0+XHJcblx0XHRcdFx0XHQ8aDE+IExpa2VzIDwvaDE+XHJcblx0XHRcdFx0XHRcdHt0aGlzLmxpa2VzfVxyXG5cdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcdDxkaXYgY2xhc3NOYW1lID0gXCJkaXNsaWtlc1wiIHN0eWxlID0ge3twYWRkaW5nTGVmdDogJzEwJSd9fT5cclxuXHRcdFx0XHRcdDxoMT4gRGlzbGlrZXMgPC9oMT5cclxuXHRcdFx0XHRcdFx0e3RoaXMuZGlzbGlrZXN9XHJcblx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdDwvZGl2PlxyXG5cdFx0KTtcclxuXHR9XHJcbn0iLCJcclxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHtyZW5kZXJ9IGZyb20gJ3JlYWN0LWRvbSc7XHJcbmltcG9ydCB7XHJcblx0QnJvd3NlclJvdXRlciBhcyBSb3V0ZXIsXHJcblx0UmVkaXJlY3QsIFxyXG5cdFJvdXRlLFxyXG5cdFN3aXRjaFxyXG59IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nO1xyXG5cclxuXHJcbi8vaW1wb3J0IExpc3QgZnJvbSAnLi9MaXN0JztcclxuaW1wb3J0IEhvbWUgZnJvbSAnLi9Ib21lJztcclxuaW1wb3J0IEZlZWQgZnJvbSAnLi9mZWVkLmpzJ1xyXG5pbXBvcnQgQ29udGFjdCBmcm9tICcuL0NvbnRhY3QuanMnO1xyXG5pbXBvcnQgQWJvdXQgZnJvbSAnLi9hYm91dC5qcyc7XHJcbmltcG9ydCBVc2VyIGZyb20gJy4vdXNlci5qcyc7XHJcbmltcG9ydCBVc2VyUG9zdCBmcm9tICcuL3VzZXJfcG9zdC5qcydcclxuaW1wb3J0IEdsb2JhbFBvc3QgZnJvbSAnLi9nbG9iYWxfcG9zdC5qcydcclxuaW1wb3J0IEFydGlzdFBvc3QgZnJvbSAnLi9hcnRpc3QuanMnXHJcbmltcG9ydCBBcnRpc3RTb25nc1Bvc3QgZnJvbSAnLi9hcnRpc3Rfc29uZ3MuanMnXHJcbmltcG9ydCBBcnRpc3RBbGJ1bXNQb3N0IGZyb20gJy4vYXJ0aXN0X2FsYnVtcy5qcydcclxuaW1wb3J0IExvZ2luIGZyb20gJy4vbG9naW4uanMnXHJcbmltcG9ydCBSZWdpc3RlciBmcm9tICcuL3JlZ2lzdGVyLmpzJ1xyXG5pbXBvcnQgRm9sbG93ZXJzIGZyb20gJy4vZm9sbG93ZXJzLmpzJ1xyXG5pbXBvcnQgRm9sbG93aW5nIGZyb20gJy4vZm9sbG93aW5nLmpzJ1xyXG5pbXBvcnQgVXNlclBvc3RMaWtlc1BhZ2UgZnJvbSAnLi91c2VycG9zdGxpa2VzLmpzJ1xyXG5pbXBvcnQgU3RhbmRhcmRIZWFkZXIgZnJvbSAnLi9zdGFuZGFyZF9oZWFkZXIuanMnXHJcbi8vXHQ8Um91dGUgcGF0aCA9IFwiL3VzZXIvOnVzZXJcIiBleGFjdCBjb21wb25lbnQ9e1VzZXJ9IC8+XHJcbi8vIDxSb3V0ZSBwYXRoID0gXCIvdXNlclwiIGV4YWN0IHJlbmRlcj17KCkgPT4gKDxIb21lIGRhdGE9e3tobW06XCJ3aGF0XCJ9fS8+KX0gIC8+XHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEFwcCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudHtcclxuXHJcblx0Y29uc3RydWN0b3IocHJvcHMpXHJcblx0e1xyXG5cdFx0c3VwZXIocHJvcHMpXHJcblx0fVxyXG5cclxuXHRoYW5kbGVDbGljayhlKVxyXG5cdHtcclxuXHRcdGNvbnNvbGUubG9nKFwiQ0xJQ0tFRFwiKTtcclxuXHR9XHJcblx0Y29tcG9uZW50V2lsbE1vdW50KClcclxuXHR7XHJcblx0XHRpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcpIFxyXG5cdFx0e1xyXG5cdFx0XHRkb2N1bWVudC5ib2R5LnN0eWxlLmJhY2tncm91bmRDb2xvciA9IFwicmdiKDI0MiwgMjQyLCAyNDIpXCI7XHJcblx0XHRcdGRvY3VtZW50LmJvZHkuc3R5bGUubWFyZ2luVG9wID0gXCI2MHB4XCI7XHJcblx0XHR9XHJcblx0fVxyXG5cdC8vI0ZBRkFGQVxyXG5cdHJlbmRlcigpXHJcblx0e1xyXG5cdFx0cmV0dXJuIChcclxuXHRcdFx0PGRpdiBjbGFzc05hbWUgPSBcIkFwcFwiIGlkPSdyb290JyBzdHlsZSA9IHt7d2lkdGg6JzEwMCUnLCBtaW5XaWR0aDonMTIwMHB4J319PlxyXG5cdFx0XHRcdDxTdGFuZGFyZEhlYWRlciB1c2VybmFtZSA9IHt0aGlzLnByb3BzLmRhdGEudXNlcm5hbWV9IG5vdGlmaWNhdGlvbnMgPSB7e319Lz5cclxuXHRcdFx0XHQ8bGluayByZWw9XCJzdHlsZXNoZWV0XCIgaHJlZj1cIi9zdHlsZXMuY3NzXCIvPlxyXG5cdFx0XHRcdDxTd2l0Y2g+XHJcblx0XHRcdFx0XHQ8Um91dGUgZXhhY3QgcGF0aCA9IFwiL1wiIHJlbmRlcj17KCkgPT4gKDxGZWVkIGRhdGE9e3RoaXMucHJvcHMuZGF0YX0vPil9IC8+XHJcblx0XHRcdFx0XHQ8Um91dGUgZXhhY3QgcGF0aCA9IFwiL3VzZXIvOnVzZXIvOnBvc3RfaWRcIiByZW5kZXI9eygpID0+ICg8VXNlclBvc3QgZGF0YT17dGhpcy5wcm9wcy5kYXRhfS8+KX0vPlxyXG5cdFx0XHRcdFx0PFJvdXRlIGV4YWN0IHBhdGggPSBcIi91c2VyLzp1c2VyLzpwb3N0X2lkL2xpa2VzXCIgcmVuZGVyPXsoKSA9PiAoPFVzZXJQb3N0TGlrZXNQYWdlIGRhdGE9e3RoaXMucHJvcHMuZGF0YX0vPil9Lz5cclxuXHRcdFx0XHRcdDxSb3V0ZSBleGFjdCBwYXRoID0gXCIvdXNlci86dXNlclwiICByZW5kZXI9eygpID0+ICg8VXNlciBkYXRhPXt0aGlzLnByb3BzLmRhdGF9Lz4pfSAvPlxyXG5cdFx0XHRcdFx0PFJvdXRlIGV4YWN0IHBhdGggPSBcIi9mb2xsb3dlcnMvOnVzZXJcIiAgcmVuZGVyPXsoKSA9PiAoPEZvbGxvd2VycyBkYXRhPXt0aGlzLnByb3BzLmRhdGF9Lz4pfSAvPlxyXG5cdFx0XHRcdFx0PFJvdXRlIGV4YWN0IHBhdGggPSBcIi9mb2xsb3dpbmcvOnVzZXJcIiAgcmVuZGVyPXsoKSA9PiAoPEZvbGxvd2luZyBkYXRhPXt0aGlzLnByb3BzLmRhdGF9Lz4pfSAvPlxyXG5cdFx0XHRcdFx0PFJvdXRlIGV4YWN0IHBhdGggPSBcIi9sb2dpblwiIHJlbmRlciA9IHsoKSA9PiAoPExvZ2luIGRhdGE9e3RoaXMucHJvcHMuZGF0YX0vPil9IC8+XHJcblx0XHRcdFx0XHQ8Um91dGUgZXhhY3QgcGF0aCA9IFwiL3JlZ2lzdGVyXCIgcmVuZGVyID0geygpID0+ICg8UmVnaXN0ZXIgZGF0YT17dGhpcy5wcm9wcy5kYXRhfS8+KX0gLz5cclxuXHRcdFx0XHRcdDxSb3V0ZSBleGFjdCBwYXRoID0gXCIvcG9zdC86YXJ0aXN0Lzpzb25nXCIgcmVuZGVyID0geygpID0+ICg8R2xvYmFsUG9zdCBkYXRhPXt0aGlzLnByb3BzLmRhdGF9IC8+KX0gLz5cclxuXHRcdFx0XHRcdDxSb3V0ZSBleGFjdCBwYXRoID0gXCIvYWxidW0vOmFydGlzdC86YWxidW1cIiByZW5kZXIgPSB7KCkgPT4gKDxHbG9iYWxQb3N0IGRhdGE9e3RoaXMucHJvcHMuZGF0YX0gLz4pfSAvPlxyXG5cdFx0XHRcdFx0PFJvdXRlIGV4YWN0IHBhdGggPSBcIi9hcnRpc3QvOmFydGlzdFwiIHJlbmRlcj17KCkgPT4gKDxBcnRpc3RQb3N0IGRhdGEgPSB7dGhpcy5wcm9wcy5kYXRhfS8+KX0gLz5cclxuXHRcdFx0XHRcdDxSb3V0ZSBleGFjdCBwYXRoID0gXCIvYXJ0aXN0LzphcnRpc3Qvc29uZ3NcIiByZW5kZXI9eygpID0+ICg8QXJ0aXN0U29uZ3NQb3N0IGRhdGEgPSB7dGhpcy5wcm9wcy5kYXRhfS8+KX0gLz5cclxuXHRcdFx0XHRcdDxSb3V0ZSBleGFjdCBwYXRoID0gXCIvYXJ0aXN0LzphcnRpc3QvYWxidW1zXCIgcmVuZGVyPXsoKSA9PiAoPEFydGlzdEFsYnVtc1Bvc3QgZGF0YSA9IHt0aGlzLnByb3BzLmRhdGF9Lz4pfSAvPlxyXG5cdFx0XHRcdFx0PFJvdXRlIGV4YWN0IHBhdGggPSBcIi9jb250YWN0XCIgcmVuZGVyPXsoKSA9PiAoPENvbnRhY3QgZGF0YSA9IHt0aGlzLnByb3BzLmRhdGF9Lz4pfSAvPlxyXG5cdFx0XHRcdFx0PFJvdXRlIGV4YWN0IHBhdGggPSBcIi9hYm91dFwiICBjb21wb25lbnQ9e0Fib3V0fSAvPlxyXG5cdFx0XHRcdDwvU3dpdGNoPlx0XHJcblx0XHRcdFx0PHNjcmlwdCB0eXBlPVwidGV4dC9qYXZhc2NyaXB0XCIgc3JjPVwiL3B1YmxpYy9idW5kbGUuanNcIj4gPC9zY3JpcHQ+XHJcblxyXG5cdFx0XHQ8L2Rpdj5cclxuXHRcdCk7XHJcblx0fVxyXG59XHJcbiIsIi8vIGltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbi8vIGltcG9ydCB7cmVuZGVyfSBmcm9tICdyZWFjdC1kb20nO1xyXG5cclxuLy8gaW1wb3J0ICB7QnJvd3NlclJvdXRlciBhcyBSb3V0ZXJ9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nXHJcbi8vIGltcG9ydCBBcHAgZnJvbSAnLi9jb21wb25lbnRzL0FwcCc7XHJcbi8vIHJlcXVpcmUoJ0BiYWJlbC9yZWdpc3RlcicpKHtcclxuLy8gICAgIHByZXNldHM6IFsnQGJhYmVsL3ByZXNldC1yZWFjdCddXHJcbi8vIH0pO1xyXG5cclxuLy8gdmFyIFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcclxuLy8gdmFyIFJlYWN0RE9NU2VydmVyID0gcmVxdWlyZSgncmVhY3QtZG9tL3NlcnZlcicpO1xyXG4vLyB2YXIgUm91dGVyID0gcmVxdWlyZSgncmVhY3Qtcm91dGVyLWRvbScpLkJyb3dzZXJSb3V0ZXJcclxuLy8gdmFyIFJlYWN0RE9NID0gcmVxdWlyZSgncmVhY3QtZG9tJyk7XHJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7cmVuZGVyfSBmcm9tICdyZWFjdC1kb20nO1xyXG5pbXBvcnQge2h5ZHJhdGV9IGZyb20gJ3JlYWN0LWRvbSc7XHJcbmltcG9ydCAge0Jyb3dzZXJSb3V0ZXIgYXMgUm91dGVyfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJ1xyXG5pbXBvcnQgQXBwIGZyb20gJy4vY29tcG9uZW50cy9BcHAnO1xyXG5yZW5kZXIoXHJcblx0PFJvdXRlcj5cclxuXHRcdDxBcHAgZGF0YSA9IHt3aW5kb3cuX19EQVRBX199Lz5cclxuXHQ8L1JvdXRlcj4sXHJcblx0ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Jvb3QnKVxyXG4pO1xyXG5cclxuIl0sInNvdXJjZVJvb3QiOiIifQ==